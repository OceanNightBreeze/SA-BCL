#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (72,200,232) (72,200,232) 218 204 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
220 3 304 1 142 2 42 1 104 1 105 1 64 2 144 2 158 1 136 1 88 1 225 3 293 1 
220 9 42 1 104 4 105 1 64 2 24 1 43 2 158 2 133 2 136 1 88 6 225 9 281 1 304 1 142 5 96 1 186 2 144 2 122 1 50 1 17 2 125 1 55 1 289 1 57 1 217 1 293 3 153 1 
220 9 42 1 104 4 105 1 64 2 24 1 43 2 158 2 133 2 136 1 88 6 225 9 281 1 304 1 142 5 96 1 186 2 144 2 122 1 50 1 17 2 125 1 55 1 289 1 57 1 217 1 293 3 153 1 
220 10 42 1 104 5 105 1 64 2 24 1 43 2 158 2 133 2 136 1 88 7 225 10 281 1 304 1 142 6 96 1 186 2 144 2 122 1 50 1 17 2 125 1 55 1 289 1 57 1 217 1 293 4 153 1 
220 7 42 1 104 3 105 1 64 2 24 1 43 2 158 2 133 1 136 1 88 4 225 7 281 1 304 1 142 4 96 1 186 2 144 2 122 1 50 1 17 2 125 1 55 1 57 1 217 1 293 2 153 1 
220 4 304 1 142 3 104 2 105 1 96 1 186 1 64 1 144 1 43 1 17 1 125 1 133 2 136 1 289 1 88 3 225 4 293 1 
220 2 142 1 304 1 105 1 24 1 64 1 186 1 144 1 158 1 181 1 17 1 50 1 76 1 136 1 225 2 252 1 
220 9 104 4 42 1 105 1 64 2 43 1 158 1 134 1 133 2 136 1 88 7 225 9 281 1 304 1 142 5 46 1 96 1 186 1 144 2 122 1 17 1 125 1 289 1 293 3 
220 9 104 4 42 1 105 1 64 2 43 1 158 1 134 1 133 2 136 1 88 7 225 9 281 1 304 1 142 5 46 1 96 1 186 1 144 2 122 1 17 1 125 1 289 1 293 3 
58 1 316 1 81 1 273 1 200 1 73 1 33 1 16 1 54 1 170 1 9 1 113 1 37 1 29 1 
221 1 
349 1 221 1 316 1 170 2 197 1 358 1 200 2 302 1 
58 1 238 1 221 2 316 2 22 1 239 1 81 1 154 2 273 1 319 2 200 5 65 1 349 2 68 1 247 4 9 1 113 1 280 1 183 2 328 1 302 1 141 1 29 1 354 5 71 1 73 1 33 1 16 1 265 1 54 1 340 1 170 5 357 2 235 2 37 1 358 2 237 1 79 1 
349 1 221 1 320 1 
221 1 312 2 210 1 
58 2 54 2 257 1 113 2 273 2 37 2 33 1 29 2 
271 1 41 1 58 3 61 1 2 1 155 1 273 2 82 1 244 1 160 1 137 1 226 1 113 3 279 1 161 1 26 2 253 2 29 2 330 1 257 1 284 2 33 1 47 1 263 1 339 1 54 2 53 1 151 1 290 2 18 1 37 2 292 1 127 2 40 1 21 1 20 1 219 1 
58 1 54 1 9 1 113 1 273 1 37 1 73 1 33 1 29 1 16 1 
72 1 232 1 
221 1 58 1 72 1 306 1 273 1 200 2 16 1 349 1 54 1 170 2 113 1 37 1 172 1 38 1 29 1 
316 1 171 1 170 1 358 1 200 1 
349 1 221 1 316 1 12 1 170 2 358 1 200 2 302 1 
170 1 358 1 200 1 
330 1 195 1 58 2 61 1 231 1 273 1 284 1 263 1 339 1 53 1 279 1 113 2 161 1 37 1 102 1 127 1 253 1 29 1 20 1 219 1 
58 2 207 1 257 2 273 1 54 1 113 2 114 1 37 1 29 2 
143 1 231 1 25 1 
330 1 58 1 61 1 257 1 284 1 263 1 53 1 339 1 113 1 279 1 161 1 202 1 127 1 253 1 219 1 20 1 
257 1 320 1 
195 1 58 3 54 1 257 1 113 3 273 3 37 3 29 3 
58 1 9 1 113 1 273 1 37 1 29 1 16 1 
58 1 54 1 207 1 113 1 273 1 114 1 37 1 29 1 16 1 
41 1 195 1 58 4 61 1 1 1 2 1 155 1 273 3 82 1 200 1 244 1 160 1 279 1 113 4 161 1 114 1 26 1 253 1 29 3 330 1 72 1 306 1 257 1 284 1 33 1 47 1 263 1 16 1 338 1 339 1 54 2 53 1 170 1 151 1 290 2 37 3 102 1 172 1 127 1 38 1 40 1 21 1 20 1 219 1 
195 1 58 2 257 1 113 2 273 1 37 1 70 1 49 1 29 2 
195 2 221 1 58 3 1 1 72 1 306 1 273 3 200 1 16 1 54 1 170 1 89 1 113 3 114 1 37 3 102 1 172 1 38 1 29 3 
195 1 58 2 54 1 143 1 231 1 113 2 273 2 114 1 37 2 29 2 
330 1 58 1 61 1 257 1 284 1 263 1 53 1 339 1 113 1 279 1 161 1 127 1 253 1 219 1 20 1 
330 1 58 1 61 1 257 1 284 1 241 1 298 1 53 1 339 1 113 1 279 1 161 1 127 1 253 1 20 1 
2 1 154 1 155 2 82 1 347 1 351 1 299 1 137 2 25 2 183 1 26 4 143 2 93 1 230 1 231 2 97 1 48 1 47 1 99 1 151 1 290 2 313 1 40 1 21 1 
58 1 169 1 113 1 273 1 37 1 38 1 29 1 16 1 
195 2 58 5 305 1 63 1 257 1 273 4 49 1 54 1 113 5 114 1 37 4 102 1 70 1 29 5 
58 2 169 1 9 1 113 2 273 2 37 2 29 2 16 1 
185 1 31 1 251 1 
126 1 31 2 111 1 329 1 251 2 159 1 
31 1 251 1 
31 1 251 1 
126 1 329 1 
126 1 329 1 
126 1 329 1 
31 1 150 1 251 1 
31 1 150 1 251 1 
31 1 150 1 251 1 
264 1 31 1 251 1 
264 1 31 1 251 1 
264 1 31 1 251 1 
221 1 31 2 0 1 345 3 260 2 200 2 14 1 287 1 277 2 190 1 52 2 149 1 352 1 170 2 111 1 194 1 251 2 139 2 128 2 
58 2 222 1 198 1 273 2 345 1 200 1 277 1 67 1 300 1 113 2 227 1 251 1 139 1 29 2 185 1 31 1 257 1 260 1 14 1 308 1 52 1 170 1 78 1 37 2 
43 1 123 2 91 1 181 1 17 2 
186 1 43 1 17 1 
186 1 181 1 17 1 
123 1 43 2 91 1 85 1 181 1 17 3 
224 1 123 1 43 1 91 1 181 1 17 2 
221 2 316 4 222 1 129 2 198 1 154 1 319 1 157 2 200 5 349 1 323 1 201 1 247 3 183 1 162 1 302 1 353 1 354 2 334 1 188 1 210 1 308 1 48 1 312 3 170 5 357 1 235 1 358 1 313 1 237 1 19 2 270 1 
238 1 221 5 59 1 316 7 222 4 344 1 154 3 319 2 157 6 242 5 200 9 321 1 349 1 323 2 247 8 250 1 183 3 162 3 302 1 353 1 354 6 188 2 210 3 48 3 312 9 171 5 170 9 357 2 215 1 235 2 358 6 236 1 313 3 237 1 19 6 
221 3 238 1 316 2 222 1 129 1 154 1 319 1 200 3 157 2 349 1 323 1 247 3 162 1 183 1 354 2 334 1 188 1 210 2 48 1 312 4 170 3 357 1 235 1 313 1 270 1 19 2 
221 4 238 1 59 1 316 3 222 2 129 2 154 2 319 1 157 4 200 4 349 1 323 1 247 5 250 1 162 2 183 2 354 4 334 1 188 1 210 3 48 2 312 7 170 4 357 1 215 1 235 1 313 2 19 4 270 1 
192 1 
161 1 320 1 189 1 
193 1 161 1 
339 1 161 1 
339 1 249 1 161 3 189 2 314 1 20 1 
339 1 161 1 20 1 
161 1 285 1 
239 1 154 1 155 3 296 1 211 1 348 1 99 3 351 2 168 1 248 1 137 4 280 1 90 1 152 2 183 1 328 1 26 7 163 1 
239 2 154 4 155 15 240 1 156 1 107 1 274 1 348 1 324 1 351 5 248 1 137 16 280 2 90 2 328 1 26 31 162 3 183 4 163 2 205 4 331 1 283 3 335 1 211 5 48 3 47 1 99 10 168 1 151 1 290 2 152 3 313 3 40 1 21 1 
239 1 154 1 155 4 348 1 45 1 324 1 351 3 248 1 137 5 280 1 90 1 183 1 26 9 328 1 163 1 211 1 47 2 310 1 99 4 151 2 290 4 152 2 40 2 21 2 
239 1 154 1 155 3 211 1 348 1 99 3 351 2 168 1 248 1 137 4 280 1 90 1 152 2 183 1 328 1 26 7 163 1 
239 1 154 1 155 3 211 1 348 1 99 3 351 2 168 1 248 1 137 4 280 1 90 1 152 2 183 1 328 1 26 7 163 1 
220 1 103 1 196 1 317 2 177 1 199 1 64 1 158 2 225 1 279 1 161 1 253 1 330 1 254 2 284 1 144 1 98 2 53 1 148 1 339 1 234 1 127 1 315 1 
220 1 317 1 105 1 64 1 43 1 158 1 181 1 85 1 325 1 225 1 279 1 301 1 27 1 253 1 254 1 330 1 186 1 284 1 144 1 98 1 74 1 17 2 147 1 127 1 173 1 174 1 
220 2 317 1 105 1 64 1 43 1 158 1 181 1 85 1 7 1 325 1 136 1 88 1 225 2 279 1 27 1 253 1 254 1 330 1 142 1 304 1 186 1 284 1 144 1 98 1 74 1 17 2 147 1 127 1 173 1 174 1 
220 3 103 1 317 1 64 1 43 1 158 1 85 1 181 1 325 1 136 1 88 2 225 3 279 1 301 1 27 1 253 1 254 1 330 1 142 1 304 1 94 1 186 1 284 1 144 1 98 1 74 1 17 2 147 1 127 1 173 1 
220 2 317 1 43 1 158 1 181 1 85 1 136 1 88 2 225 2 279 1 301 1 27 1 253 1 254 1 330 1 142 1 304 1 94 1 284 1 186 1 98 1 74 1 17 2 147 1 127 1 
56 1 
196 1 319 1 200 2 84 1 323 1 247 1 279 1 161 1 204 1 302 1 253 2 330 1 354 1 72 1 258 1 232 1 284 2 288 1 35 1 53 2 339 1 213 1 170 2 357 1 235 1 358 2 127 2 218 1 237 1 315 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 2 197 1 232 1 358 1 200 2 218 1 204 1 302 1 
72 1 319 1 232 1 200 1 288 1 35 1 170 1 357 1 235 1 204 1 218 1 237 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
288 1 35 1 72 1 170 1 232 1 200 1 218 1 204 1 
72 1 319 1 232 1 200 1 288 1 35 1 170 1 357 1 235 1 204 1 218 1 237 1 
195 1 271 2 58 1 196 1 2 2 23 1 272 1 273 1 155 1 346 1 82 2 7 1 244 1 299 1 137 1 113 1 279 2 226 1 161 3 301 1 26 2 253 7 29 1 165 1 303 1 92 1 330 2 333 1 284 8 47 2 53 2 339 2 151 2 290 4 37 1 127 8 40 2 21 2 315 1 
58 1 2 1 154 1 273 1 178 1 155 2 82 1 351 1 137 1 25 1 113 1 114 1 162 1 183 1 26 3 29 1 143 1 231 1 307 1 47 1 48 1 99 1 54 1 151 1 290 2 37 1 313 1 40 1 21 1 
2 1 239 1 154 1 155 3 320 1 82 1 348 1 351 2 299 1 248 1 137 3 280 1 25 1 328 1 183 1 26 6 143 1 257 2 231 1 47 1 99 2 151 1 290 2 152 1 40 1 21 1 
2 2 154 1 155 6 240 1 82 1 5 1 107 1 244 1 351 1 69 1 137 8 226 1 25 11 26 14 162 2 183 2 205 3 143 4 257 1 307 1 231 11 283 3 211 1 47 2 48 1 99 2 267 1 151 2 290 4 216 1 313 2 40 2 21 2 
195 1 58 2 61 1 2 1 273 1 155 1 82 1 322 1 66 1 244 1 137 1 279 1 113 2 226 1 161 1 202 1 26 2 253 1 29 1 330 1 143 1 229 1 257 1 307 1 284 1 47 1 263 1 339 1 53 1 151 1 290 2 37 1 127 1 102 1 40 1 20 1 219 1 21 1 
41 2 2 3 273 1 82 3 137 10 280 1 226 1 279 2 328 1 183 3 330 2 143 7 231 7 284 3 47 3 48 2 99 8 53 1 339 2 151 3 290 6 341 1 152 1 102 1 21 3 20 2 195 1 58 3 61 2 239 1 154 3 155 10 348 1 244 1 350 2 351 4 248 1 113 3 25 7 161 2 301 1 26 20 162 2 253 3 29 1 255 2 257 2 307 1 211 4 309 2 263 2 356 1 37 1 360 1 127 3 361 2 313 2 40 3 219 2 
143 1 2 1 231 1 82 1 211 1 347 1 47 1 99 1 299 1 151 1 290 2 137 2 25 1 26 2 183 1 313 1 40 1 21 1 
143 1 2 1 231 1 230 1 154 1 155 2 82 1 47 1 48 1 99 1 351 1 299 1 151 1 290 2 25 1 26 2 40 1 21 1 
2 1 154 1 155 2 82 1 351 1 299 1 137 2 25 2 183 1 162 1 26 4 143 2 231 2 211 1 47 1 48 1 99 2 151 1 290 2 313 1 40 1 21 1 
143 1 2 1 23 1 231 1 82 1 211 1 347 1 47 1 99 1 151 1 290 2 137 2 25 1 26 2 183 1 313 1 40 1 21 1 
143 1 2 1 23 1 231 1 230 1 154 1 155 2 82 1 47 1 48 1 99 1 351 1 151 1 290 2 25 1 26 2 40 1 21 1 
2 1 23 1 154 1 155 2 82 1 351 1 137 2 25 2 183 1 162 1 26 4 143 2 231 2 211 1 47 1 48 1 99 2 151 1 290 2 313 1 40 1 21 1 
2 1 154 1 155 2 82 1 351 1 137 2 25 2 26 4 183 1 162 1 143 2 231 2 211 1 47 1 48 1 99 2 151 1 290 2 313 1 40 1 21 1 
41 1 58 1 61 1 2 1 155 1 82 1 244 1 137 1 226 1 279 1 113 1 161 1 26 2 253 1 330 1 257 1 284 1 47 1 263 1 339 1 53 1 151 1 290 2 127 1 40 1 20 1 219 1 21 1 
58 1 61 1 2 1 155 1 241 1 82 1 298 1 244 1 137 1 226 1 279 1 113 1 161 1 26 2 253 1 330 1 257 1 284 1 261 1 47 1 339 1 53 1 151 1 290 2 127 1 40 1 20 1 21 1 
2 1 154 1 155 2 82 1 351 1 137 2 25 2 183 1 162 1 26 4 143 2 307 1 231 2 211 1 47 1 48 1 99 2 151 1 290 2 313 1 40 1 21 1 
41 1 58 1 61 1 2 1 154 1 155 2 82 1 7 1 351 1 137 2 25 2 279 1 113 1 161 1 26 4 183 1 162 1 253 1 330 1 255 1 143 2 231 2 284 1 211 1 48 1 47 1 99 2 263 1 339 1 151 1 290 2 127 1 313 1 40 1 20 1 219 1 21 1 
58 1 2 1 154 1 155 1 273 1 82 1 137 2 113 1 25 1 114 1 162 1 183 1 26 3 29 1 143 1 307 1 231 1 211 1 48 1 47 1 99 1 54 1 151 1 77 1 290 2 37 1 313 1 40 1 21 1 
154 2 155 6 45 1 351 2 137 6 115 2 26 12 162 2 183 2 332 1 11 2 13 1 211 2 47 2 145 1 48 2 99 4 51 1 151 2 100 1 290 4 291 1 359 1 313 2 40 2 21 2 
154 1 155 4 45 1 137 4 115 2 26 8 162 1 183 1 332 2 11 1 13 1 47 1 145 1 48 1 151 1 290 2 291 2 359 1 313 1 40 1 21 1 
80 1 154 1 155 4 45 1 137 4 115 2 26 8 162 1 183 1 332 1 11 1 13 1 211 1 47 2 145 1 48 1 99 1 151 2 100 1 290 4 291 2 359 1 313 1 40 2 21 2 
80 1 154 1 155 4 45 1 351 1 137 4 115 2 26 8 162 1 183 1 332 1 11 1 13 1 211 1 47 2 145 1 48 1 99 2 151 2 100 1 290 4 291 2 359 1 313 1 40 2 21 2 
239 2 154 3 155 8 348 2 45 1 351 3 248 2 137 10 280 2 115 2 162 1 26 18 328 2 183 3 332 1 11 1 13 1 211 1 48 1 47 1 145 1 99 4 151 1 290 2 291 1 359 1 152 2 313 1 40 1 21 1 
52 1 31 1 0 1 111 1 260 1 194 1 275 1 251 1 139 1 277 1 
185 1 78 1 
52 1 31 1 120 1 260 1 297 1 355 1 251 1 139 1 277 1 
221 1 31 1 0 1 345 2 260 1 200 1 14 1 277 1 190 1 52 1 149 1 352 1 170 1 111 1 194 1 251 1 139 1 128 1 
221 1 31 1 0 1 345 2 260 1 200 1 14 1 277 1 190 1 52 1 149 1 352 1 170 1 111 1 194 1 251 1 139 1 128 1 
221 1 31 1 0 1 345 2 260 1 200 1 14 1 277 1 190 1 52 1 149 1 352 1 170 1 111 1 194 1 251 1 139 1 128 1 
150 1 159 1 75 1 
150 1 159 1 75 1 
264 1 336 1 
264 1 159 1 336 1 
300 1 227 1 
58 2 316 1 222 1 4 1 198 1 345 1 273 2 200 1 277 1 67 1 352 1 300 1 113 2 227 1 251 1 139 1 29 2 185 1 31 1 257 1 260 1 308 1 52 1 170 1 78 1 37 2 128 1 
150 1 75 1 
264 1 159 1 336 1 
271 2 58 2 2 1 155 1 346 1 82 1 44 1 182 1 244 1 137 1 279 1 113 2 226 1 161 1 10 1 26 2 253 2 29 2 92 1 330 1 208 1 95 1 307 1 284 2 47 1 339 1 151 1 290 2 127 2 40 1 21 1 
330 1 196 1 32 1 177 1 284 1 98 1 339 1 53 1 279 1 161 1 127 1 342 1 253 1 315 1 
330 1 318 1 186 1 284 1 43 1 98 1 85 1 181 1 17 2 147 1 325 1 101 1 279 1 301 1 127 1 27 1 342 1 253 1 
330 1 318 1 186 1 284 2 43 1 98 1 85 1 181 1 17 2 7 1 147 1 325 1 101 1 279 1 301 1 127 2 27 1 342 1 253 2 
330 1 167 1 186 1 284 1 43 1 98 1 85 1 181 1 17 2 147 1 325 1 101 1 279 1 301 1 127 1 27 1 253 1 
179 1 
221 1 354 1 319 1 65 1 349 1 247 1 357 1 235 1 237 1 79 1 
221 5 354 5 154 2 157 5 210 5 48 2 309 1 265 1 68 2 312 10 247 5 162 2 183 2 313 2 19 5 
349 1 221 1 170 1 358 1 200 1 302 1 
238 1 176 1 196 1 3 1 223 1 319 2 84 1 200 3 243 1 6 1 323 2 86 2 247 2 279 2 161 2 327 1 302 2 253 4 330 3 354 2 258 1 284 4 212 1 339 2 53 2 213 2 170 3 357 2 235 2 358 4 127 4 237 1 20 1 315 1 
349 1 221 1 354 1 247 1 320 1 65 1 79 1 
221 2 319 1 200 1 180 1 349 1 247 1 302 1 354 1 228 1 259 1 210 1 312 1 170 1 357 1 235 1 358 1 237 1 
221 8 176 1 319 4 276 2 7 1 323 2 86 1 326 2 279 3 183 2 330 4 284 3 285 2 189 2 48 2 339 3 53 1 193 3 235 4 237 4 19 6 20 3 62 1 154 2 200 5 157 6 65 1 349 2 68 2 246 2 247 9 161 10 203 2 162 2 302 3 253 3 118 2 119 1 354 8 306 2 121 2 210 6 309 2 311 1 265 2 213 1 312 12 170 5 357 4 358 5 127 3 313 2 79 1 314 1 
221 5 295 1 106 1 154 2 240 1 319 2 200 1 157 5 323 1 132 1 349 2 68 2 247 8 138 1 162 2 183 2 302 1 205 1 30 1 354 5 283 1 124 1 210 3 48 2 265 1 337 1 213 1 312 6 170 1 357 2 235 2 358 1 313 2 237 2 19 5 
58 1 239 1 154 1 81 1 273 1 319 1 200 1 68 1 247 2 9 1 113 1 280 1 328 1 183 2 140 1 29 1 354 2 71 1 73 1 33 1 16 1 265 1 54 1 170 1 357 1 235 1 37 1 237 1 
41 1 58 3 61 1 2 1 155 1 273 2 82 1 244 1 160 1 113 3 279 1 161 1 26 1 253 1 29 2 330 1 257 1 284 1 33 1 47 1 263 1 53 1 54 2 339 1 151 1 290 2 37 2 127 1 40 1 21 1 219 1 20 1 
221 4 354 2 319 1 157 2 210 2 323 1 349 2 312 4 213 1 247 1 357 1 235 1 152 1 237 1 19 2 
52 1 214 1 260 1 227 1 194 1 
52 1 260 1 268 1 
52 1 260 1 268 1 
52 1 260 1 268 1 
52 1 260 1 34 1 
52 1 260 1 34 1 
52 1 260 1 34 1 
52 1 260 1 
31 1 251 1 
71 1 239 1 154 2 155 4 211 1 99 2 351 1 137 4 280 1 328 1 183 2 26 8 
211 1 47 1 45 1 99 1 151 1 290 2 137 2 183 1 26 2 313 1 40 1 21 1 
154 1 155 2 211 1 48 1 47 1 99 2 45 1 351 1 151 1 290 2 137 2 162 1 183 1 26 4 313 1 40 1 21 1 
239 1 155 2 211 1 47 3 45 1 99 2 324 1 266 1 351 1 100 1 151 3 290 6 137 1 280 1 26 3 40 3 21 3 
294 1 239 3 154 5 155 18 240 1 156 1 107 1 348 1 45 1 324 2 351 7 248 1 137 16 280 3 328 2 26 34 162 3 183 5 205 4 331 1 283 3 335 1 211 5 47 5 48 3 99 12 266 1 100 1 151 5 290 10 152 1 313 3 40 5 21 5 
239 1 154 1 155 4 211 1 47 2 348 1 99 3 324 1 351 2 151 2 248 1 137 4 290 4 280 1 152 1 183 1 328 1 26 8 40 2 21 2 
351 2 248 1 137 3 239 1 154 1 280 1 155 3 320 1 152 1 26 6 183 1 328 1 348 1 99 2 
294 1 154 1 155 2 211 1 48 1 47 1 99 2 351 1 151 1 290 2 137 2 162 1 183 1 26 4 313 1 40 1 21 1 
154 1 155 4 240 1 283 1 211 1 107 1 48 1 99 2 351 1 137 3 26 7 162 1 183 1 313 1 205 2 
239 2 154 3 155 12 107 1 348 1 324 2 351 5 69 1 248 1 137 11 280 2 328 1 183 3 162 2 26 23 205 2 283 2 211 4 48 2 47 2 99 9 266 1 151 2 290 4 216 1 152 1 313 2 40 2 21 2 
155 1 26 1 205 1 
137 1 283 1 26 1 
294 1 154 1 155 3 211 1 47 1 48 1 309 1 99 3 351 2 151 1 290 2 137 3 26 6 162 1 183 1 313 1 40 1 21 1 
295 1 106 1 154 2 155 6 240 1 45 1 132 1 351 1 137 6 138 1 26 12 162 2 183 2 205 1 30 1 283 1 211 1 47 1 48 2 99 2 151 1 290 2 313 2 40 1 21 1 
239 1 154 1 155 3 211 1 99 2 351 1 137 3 280 1 328 1 183 1 26 6 
239 1 155 2 211 1 47 1 348 1 99 2 266 1 324 1 351 1 248 1 151 1 137 1 290 2 280 1 26 3 40 1 21 1 
239 1 154 1 155 4 240 1 348 1 45 1 351 2 248 1 137 4 280 1 183 1 26 8 328 1 205 1 30 1 283 1 47 1 99 2 151 1 290 2 152 1 40 1 21 1 
294 1 239 1 154 1 155 5 240 1 107 1 348 1 45 1 351 2 248 1 137 6 280 1 328 1 26 11 162 1 183 2 205 2 30 1 283 1 211 1 47 2 99 3 151 2 290 4 152 1 313 1 40 2 21 2 
294 1 295 1 239 1 106 1 154 3 155 10 240 1 348 1 45 1 132 1 324 1 351 3 248 1 137 9 280 1 138 1 328 1 26 19 162 2 183 3 205 1 30 1 283 1 211 1 47 3 48 2 99 4 151 3 290 6 152 1 313 2 40 3 21 3 
294 1 295 1 239 1 106 1 154 2 155 7 240 1 348 1 45 1 132 1 324 1 351 3 248 1 137 10 280 1 138 1 328 1 26 17 162 2 183 3 205 1 30 1 283 1 211 2 47 3 48 1 99 5 151 3 290 6 152 1 313 2 40 3 21 3 
239 1 154 1 155 4 240 1 348 1 45 1 351 2 248 1 137 4 280 1 183 1 26 8 328 1 205 1 30 1 283 1 47 1 99 2 151 1 290 2 152 1 40 1 21 1 
295 1 106 1 154 2 155 6 240 1 45 1 132 1 351 1 137 6 138 1 26 12 162 2 183 2 205 1 30 1 283 1 211 1 47 1 48 2 99 2 151 1 290 2 313 2 40 1 21 1 
294 1 295 1 239 1 106 1 154 2 155 8 240 1 348 1 45 1 132 1 324 2 351 3 248 1 137 10 280 1 138 1 328 1 26 18 162 2 183 3 205 1 30 1 283 1 211 2 47 4 48 1 99 5 151 4 290 8 152 1 313 2 40 4 21 4 
295 1 106 1 154 2 155 7 240 1 45 1 132 1 324 2 351 3 137 9 138 1 26 16 162 3 183 3 205 1 30 1 283 1 211 3 47 4 48 2 99 6 151 4 100 1 290 8 313 3 40 4 21 4 
239 3 154 1 155 4 211 3 348 1 99 6 351 3 248 2 137 3 280 3 26 7 328 1 183 1 
295 1 239 1 106 1 154 2 155 8 240 1 348 1 45 1 132 1 324 2 351 3 248 1 137 10 280 1 138 1 328 1 26 18 162 2 183 3 205 1 30 1 283 1 211 1 47 4 48 1 99 4 151 4 100 1 290 8 152 1 313 2 40 4 21 4 
146 1 58 1 257 1 113 1 70 1 49 1 29 1 
58 1 206 1 257 1 209 1 233 1 49 1 146 1 135 1 113 1 184 1 70 1 29 1 
330 1 196 1 83 1 284 4 7 1 53 1 339 1 112 1 279 1 161 1 127 4 253 4 315 1 
330 2 223 1 284 2 243 1 6 1 339 1 86 1 356 1 279 1 161 1 127 2 327 1 253 2 20 1 
330 1 147 1 53 1 279 1 186 1 284 1 127 1 253 1 181 1 17 1 
330 1 7 1 339 1 208 1 279 1 161 1 346 1 284 2 301 1 127 2 253 2 
330 2 196 1 333 1 284 5 346 1 7 1 53 1 339 2 86 1 112 1 279 2 161 3 127 5 253 4 315 1 303 1 
330 2 196 1 60 1 333 1 284 5 346 1 7 1 53 1 339 2 86 1 112 1 279 2 161 3 127 5 253 4 315 1 
330 1 339 1 196 1 53 1 279 1 161 1 320 1 284 1 127 1 253 1 315 1 
330 1 195 1 58 2 61 1 257 1 273 1 284 1 339 1 53 1 113 2 279 1 161 1 37 1 127 1 253 1 29 1 20 1 219 1 
330 1 195 1 58 2 61 1 257 1 273 1 285 1 284 1 16 1 246 1 339 2 86 1 113 2 279 1 161 3 37 2 172 1 127 1 38 1 253 1 29 2 20 2 219 1 
195 1 58 2 61 1 273 1 83 1 241 1 246 1 86 1 279 1 113 2 161 3 253 2 29 2 330 1 257 1 284 2 285 1 16 1 339 2 37 2 127 2 172 1 38 1 20 2 
221 1 83 1 200 2 349 1 246 1 86 1 110 1 279 1 161 4 253 3 330 1 256 1 306 1 284 3 285 1 189 1 339 1 53 1 170 2 193 1 358 1 127 3 20 1 
330 1 221 1 118 1 306 1 83 1 285 1 284 3 200 2 189 1 349 1 53 1 339 1 246 1 86 1 170 2 193 1 279 1 161 4 358 1 127 3 253 3 20 1 
330 1 279 1 284 1 127 1 253 1 165 1 
271 1 330 3 333 1 272 1 223 1 346 1 284 7 6 1 7 1 53 2 191 1 339 2 279 2 161 3 301 1 127 7 253 6 314 1 165 1 303 1 20 1 
195 1 41 1 58 2 61 1 2 2 239 1 154 1 155 3 273 1 82 2 44 1 348 1 7 1 350 1 351 2 248 1 137 3 25 1 280 1 279 1 113 2 161 1 26 6 183 1 328 1 253 1 29 1 330 1 255 1 143 1 257 2 231 1 307 1 284 1 47 2 99 2 263 1 339 1 151 2 290 4 37 1 152 1 127 1 40 2 20 1 21 2 219 1 
221 1 176 1 316 1 319 2 200 3 65 1 349 1 247 1 326 1 161 2 203 1 302 1 253 1 118 1 354 1 306 1 284 1 121 1 189 1 53 1 170 3 357 2 235 2 193 1 358 2 127 1 237 2 79 1 
330 2 284 2 189 1 311 1 7 1 339 1 279 1 161 2 127 2 253 2 314 1 165 1 20 1 
330 1 195 1 58 2 61 1 257 1 273 1 284 1 241 1 339 1 53 1 113 2 279 1 161 1 37 1 127 1 253 1 29 1 20 1 
330 2 223 1 284 1 6 1 191 1 339 1 86 1 279 1 161 1 127 1 253 1 314 1 20 1 
117 1 257 1 28 1 116 1 109 1 
117 1 221 1 316 1 1 1 72 1 306 1 257 1 200 2 16 1 109 2 349 1 170 2 87 1 172 1 38 1 164 1 39 1 28 2 116 2 
117 1 58 1 95 1 182 1 113 1 10 1 28 1 116 1 29 1 
117 1 87 1 39 1 
220 1 142 1 136 1 304 1 105 1 225 1 64 1 144 1 
343 1 220 4 304 2 142 3 104 1 24 1 64 1 144 1 36 1 136 2 88 2 225 4 293 1 269 1 
220 2 175 1 142 1 304 1 46 1 105 1 64 1 187 1 144 1 136 1 88 1 225 2 
220 3 343 2 142 1 304 1 105 1 64 1 24 2 144 1 108 1 36 1 136 1 225 3 
142 2 278 1 286 2 262 1 
220 1 105 1 225 1 64 1 144 1 131 1 
220 2 142 1 136 1 304 1 88 1 105 1 225 2 64 1 281 1 144 1 
15 1 
220 1 142 1 136 1 304 1 105 1 225 1 64 1 144 1 
142 1 136 1 304 1 320 1 
220 1 142 1 136 1 304 1 225 1 64 1 144 1 
220 1 317 1 158 1 
220 3 343 1 142 1 304 1 105 1 64 1 24 2 144 1 8 1 36 1 136 1 225 3 
220 2 133 1 142 1 136 1 304 1 88 1 225 2 64 1 144 1 
125 1 220 1 142 1 104 1 105 1 225 1 186 1 64 1 43 1 144 1 17 1 
220 1 142 1 136 1 105 1 225 1 64 1 144 1 
220 1 136 2 304 1 105 1 225 1 64 1 144 1 
220 2 166 1 142 1 105 1 64 2 144 2 245 1 136 1 225 2 282 1 
220 3 304 1 142 2 104 1 105 1 64 1 144 1 122 1 136 1 88 2 225 3 293 1 281 1 
220 2 142 1 304 1 105 1 64 1 186 1 144 1 130 1 43 1 181 1 85 1 17 2 136 1 88 1 225 2 
220 4 304 1 142 2 104 1 105 1 64 2 144 2 133 1 136 1 289 1 88 2 225 4 293 1 
220 3 142 1 136 1 304 1 88 1 105 1 225 3 24 1 64 1 281 1 144 1 
142 1 104 1 293 1 269 1 
142 1 136 1 

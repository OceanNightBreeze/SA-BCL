#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 23 122 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 158 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 45 88 219 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 45 88 219 288 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
75 1 114 1 352 1 19 2 221 1 275 1 150 1 97 3 39 1 85 2 309 1 10 3 242 2 
75 4 154 1 101 2 233 2 207 1 114 1 135 1 161 1 84 1 61 1 291 2 39 1 85 5 106 1 309 1 10 9 242 2 347 1 123 1 271 1 352 1 19 2 221 6 275 3 150 2 97 9 358 1 359 2 
75 4 154 1 101 2 233 2 207 1 114 1 135 1 161 1 84 1 61 1 291 2 39 1 85 5 106 1 309 1 10 9 242 2 347 1 123 1 271 1 352 1 19 2 221 6 275 3 150 2 97 9 358 1 359 2 
75 5 154 1 101 2 233 2 207 1 114 1 135 1 161 1 84 1 61 1 291 2 39 1 85 6 106 1 309 1 10 10 242 2 347 1 123 1 271 1 352 1 19 2 221 7 275 4 150 2 97 10 358 1 359 2 
75 3 154 1 101 1 233 2 207 1 114 1 135 1 161 1 84 1 61 1 291 2 39 1 85 4 106 1 309 1 10 7 242 2 123 1 271 1 352 1 19 2 221 4 275 2 150 2 97 7 358 1 359 2 
75 2 271 1 101 2 233 1 114 1 352 1 19 1 221 3 135 1 275 1 97 4 291 1 85 3 309 1 359 1 10 4 242 1 347 1 
154 1 182 1 114 1 352 1 19 1 150 1 161 1 97 2 85 1 291 1 28 1 186 1 309 1 10 2 359 1 242 1 
75 4 101 2 233 1 114 1 135 1 39 1 85 5 106 1 291 1 309 1 10 9 242 2 347 1 271 1 352 1 19 2 221 7 275 3 150 1 25 1 97 9 358 1 359 1 205 1 
75 4 101 2 233 1 114 1 135 1 39 1 85 5 106 1 291 1 309 1 10 9 242 2 347 1 271 1 352 1 19 2 221 7 275 3 150 1 25 1 97 9 358 1 359 1 205 1 
100 1 15 1 76 1 115 1 303 1 18 1 198 1 185 1 82 1 83 1 264 1 11 1 243 1 360 1 
55 1 
185 1 55 1 51 1 18 2 72 1 144 1 198 2 180 1 
328 2 124 1 155 1 55 1 18 5 159 1 198 5 37 2 338 1 185 2 280 1 177 2 51 2 52 1 87 1 41 1 141 1 72 1 180 1 
239 1 55 1 72 1 
284 1 225 2 55 1 
76 2 15 2 50 1 83 2 264 1 303 2 243 2 360 2 
33 2 32 2 76 3 1 1 209 2 303 2 287 1 305 2 290 1 83 3 306 1 264 1 310 1 164 1 243 2 349 1 314 1 171 1 245 1 192 1 15 2 16 1 354 1 113 2 175 1 250 1 24 1 50 1 131 1 132 1 253 1 152 1 229 1 326 1 360 2 30 1 282 1 
100 1 82 1 76 1 15 1 83 1 264 1 303 1 11 1 243 1 360 1 
296 1 0 1 111 1 100 1 76 1 206 1 55 1 2 1 303 1 45 1 18 1 198 1 83 1 72 1 
296 1 0 1 111 1 100 2 15 2 76 2 55 1 2 1 115 1 303 2 18 2 198 2 82 1 83 2 264 1 11 1 72 1 243 2 360 2 
224 1 185 1 51 1 18 1 198 1 
110 1 185 1 55 1 51 1 18 2 72 1 198 2 180 1 
51 1 18 1 198 1 
76 2 15 1 301 1 303 2 83 2 50 2 187 1 243 1 360 1 
350 1 26 1 320 1 
314 1 32 1 76 1 287 1 305 1 113 1 175 1 355 1 50 1 83 1 306 1 229 1 310 1 326 1 349 1 282 1 
239 1 50 1 
314 1 32 1 350 1 15 1 76 2 287 1 303 1 305 1 113 1 175 1 261 1 83 2 306 1 107 1 229 1 310 1 326 1 360 1 349 1 282 1 
15 4 76 5 329 1 303 5 45 1 261 2 83 5 50 1 27 1 107 1 187 1 243 1 88 1 360 4 
60 1 100 1 76 2 15 2 83 2 303 2 11 1 360 2 
261 1 76 3 15 3 50 1 83 3 303 3 243 1 360 3 
100 1 76 1 15 1 83 1 303 1 11 1 360 1 
100 1 76 1 15 1 83 1 301 1 187 1 303 1 243 1 360 1 
33 2 32 1 0 1 100 1 54 1 76 4 2 1 209 1 287 1 303 3 305 1 261 1 290 1 83 4 306 1 264 1 107 1 187 1 310 1 164 1 243 2 349 1 314 1 296 1 111 1 171 1 245 1 15 3 16 1 18 1 198 1 354 1 113 1 175 1 250 1 50 1 131 1 132 1 253 1 229 1 203 1 326 1 360 3 282 1 
261 1 76 2 15 1 50 1 83 2 303 2 45 1 88 1 360 1 
296 1 0 1 100 1 111 1 15 3 76 3 54 1 146 1 55 1 2 1 303 3 18 1 198 1 261 2 83 3 107 1 187 1 243 1 360 3 
350 1 15 2 76 2 303 2 261 1 26 1 83 2 187 1 243 1 360 2 
314 1 32 1 76 1 287 1 305 1 113 1 175 1 50 1 83 1 306 1 229 1 310 1 326 1 349 1 282 1 
314 1 32 1 76 1 34 1 287 1 305 1 113 1 175 1 50 1 83 1 306 1 229 1 310 1 336 1 349 1 
33 2 302 1 209 4 119 1 308 1 62 1 164 1 190 1 350 2 315 1 171 2 16 1 320 2 112 1 49 1 354 1 353 1 250 1 356 1 131 1 26 2 227 1 253 1 152 2 
100 1 111 1 60 1 76 1 15 1 83 1 303 1 360 1 
103 1 312 1 153 1 
103 2 343 1 210 1 312 2 31 1 142 1 
103 1 312 1 
103 1 312 1 
210 1 142 1 
210 1 142 1 
210 1 142 1 
279 1 103 1 312 1 
279 1 103 1 312 1 
279 1 103 1 312 1 
3 1 103 1 312 1 
3 1 103 1 312 1 
3 1 103 1 312 1 
76 2 103 1 303 2 260 1 213 1 80 1 118 1 83 2 292 1 6 1 162 1 9 1 312 1 165 1 15 2 126 1 272 1 351 1 128 1 18 1 198 1 50 1 360 2 153 1 
125 1 91 1 126 1 273 1 55 1 351 3 103 2 343 1 18 2 260 2 198 2 213 2 299 1 335 2 252 1 265 1 6 2 312 2 9 2 
81 1 339 2 233 1 186 1 359 2 
291 1 233 1 359 1 
291 1 186 1 359 1 
81 1 339 1 233 2 186 1 359 3 12 1 
81 1 339 1 233 1 148 1 186 1 359 2 
328 1 284 1 55 2 211 2 236 1 37 1 80 1 185 4 119 1 162 1 268 1 141 3 190 1 315 1 124 2 298 1 128 1 18 5 49 1 198 5 223 1 68 2 225 3 70 1 177 1 51 1 357 2 52 1 72 1 98 1 254 1 180 1 
328 2 284 3 183 5 55 5 332 1 211 6 37 2 80 4 185 7 38 1 119 3 267 1 268 1 141 8 190 3 194 1 297 1 315 3 124 6 298 2 18 9 49 3 198 9 338 1 174 1 223 3 224 5 68 6 225 9 51 6 177 2 52 1 72 1 98 2 180 1 
328 1 284 2 55 3 211 2 236 1 37 1 80 1 185 2 119 1 141 3 190 1 315 1 298 1 124 2 18 3 198 3 49 1 338 1 223 1 68 2 225 4 70 1 177 1 357 1 72 1 98 1 
328 1 284 3 55 4 332 1 211 4 236 1 37 1 80 2 185 3 119 2 141 5 190 2 194 1 315 2 298 1 124 4 18 4 198 4 49 2 338 1 174 1 223 2 68 4 225 7 70 1 177 1 357 2 72 1 98 1 
218 1 
222 1 239 1 306 1 
316 1 306 1 
306 1 229 1 349 1 
306 1 4 1 
306 1 349 1 
222 2 344 1 67 1 306 3 229 1 349 1 
145 1 270 1 171 3 341 1 317 1 209 7 35 1 64 1 112 2 119 1 321 1 226 1 308 3 152 4 215 1 327 1 190 1 13 2 
33 2 341 1 209 31 5 1 119 4 308 10 215 2 164 1 313 4 13 3 190 4 166 1 145 1 270 2 171 15 315 3 16 1 317 2 46 1 64 1 149 1 49 3 112 5 200 3 276 1 223 3 226 2 321 5 131 1 253 1 228 1 152 16 300 1 327 1 
33 4 209 9 119 1 241 1 86 1 308 4 215 1 164 2 190 1 13 2 270 1 145 1 171 4 16 2 317 1 64 1 112 3 276 1 226 1 321 1 131 2 253 2 152 5 327 1 
145 1 270 1 171 3 341 1 317 1 209 7 64 1 112 2 119 1 321 1 226 1 308 3 152 4 215 1 327 1 190 1 13 2 
145 1 270 1 171 3 341 1 317 1 209 7 64 1 112 2 119 1 321 1 226 1 308 3 152 4 215 1 327 1 190 1 13 2 
314 1 32 1 167 1 337 2 287 1 235 1 19 1 172 1 305 1 113 1 95 1 150 2 21 2 306 1 97 1 310 1 10 1 230 1 242 1 346 1 349 1 188 1 14 2 
32 1 232 1 156 1 233 1 287 1 305 1 157 1 291 1 186 1 309 1 310 1 10 1 242 1 12 1 14 1 44 1 17 1 337 1 19 1 220 1 113 1 150 1 21 1 97 1 151 1 359 2 
32 1 232 1 156 1 233 1 114 1 287 1 305 1 85 1 291 1 186 1 309 1 310 1 10 2 242 1 12 1 14 1 44 1 17 1 352 1 337 1 19 1 220 1 221 1 113 1 150 1 21 1 97 2 151 1 359 2 179 1 
32 1 232 1 156 1 233 1 56 1 114 1 287 1 305 1 157 1 85 1 291 1 186 1 310 1 10 3 12 1 242 1 188 1 14 1 44 1 352 1 337 1 19 1 220 1 221 2 113 1 150 1 21 1 97 3 151 1 359 2 
32 1 56 1 233 1 114 1 287 1 305 1 157 1 85 1 291 1 186 1 310 1 10 2 12 1 14 1 44 1 352 1 337 1 220 1 221 2 113 1 150 1 21 1 97 2 151 1 359 2 
96 1 
32 2 328 1 0 1 100 1 76 1 206 1 2 1 303 1 257 1 287 1 304 1 305 2 37 1 263 1 83 1 306 1 310 1 141 1 346 1 122 1 349 1 314 2 296 1 168 1 111 1 298 1 124 1 274 1 45 1 18 3 198 3 113 2 95 1 23 1 177 1 51 2 52 1 180 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 3 304 1 45 1 198 3 23 1 83 1 51 1 144 1 122 1 180 1 
328 1 0 1 296 1 100 1 111 1 76 1 206 1 2 1 303 1 257 1 45 1 18 2 304 1 198 2 37 1 23 1 83 1 177 1 52 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
0 1 296 1 100 1 111 1 76 1 206 1 2 1 257 1 303 1 18 2 304 1 45 1 198 2 23 1 83 1 122 1 
328 1 0 1 296 1 100 1 111 1 76 1 206 1 2 1 303 1 257 1 45 1 18 2 304 1 198 2 37 1 23 1 83 1 177 1 52 1 122 1 
32 7 33 4 76 1 1 1 77 1 209 2 303 1 287 2 157 1 305 8 59 1 261 1 136 1 83 1 306 3 310 2 164 2 346 1 349 2 314 2 191 1 15 1 245 1 171 1 192 2 16 2 20 1 353 1 113 8 354 2 95 1 250 2 201 1 131 2 253 2 152 1 281 1 360 1 179 1 
33 2 76 1 209 3 303 1 119 1 83 1 308 1 187 1 164 1 243 1 190 1 350 1 15 1 315 1 171 2 16 1 112 1 320 1 49 1 354 1 223 1 250 1 26 1 131 1 253 1 71 1 152 1 29 1 360 1 
33 2 209 6 239 1 119 1 308 2 215 1 164 1 190 1 13 1 350 1 270 1 145 1 171 3 16 1 64 1 112 2 320 1 354 1 353 1 250 1 26 1 131 1 50 2 253 1 152 3 327 1 
33 4 231 1 342 1 1 1 57 1 209 14 5 1 137 1 119 1 308 2 164 2 313 3 190 2 350 11 245 1 171 6 315 1 16 2 112 1 320 11 49 2 354 1 200 3 223 2 250 2 321 1 50 1 131 2 26 4 253 2 228 1 71 1 152 8 
32 1 33 2 76 2 1 1 209 2 287 1 303 1 305 1 261 1 83 2 306 1 107 1 310 1 164 1 293 1 349 1 314 1 15 1 245 1 171 1 16 1 113 1 354 1 175 1 355 1 130 1 250 1 50 1 26 1 131 1 253 1 229 1 71 1 152 1 204 1 326 1 360 1 282 1 
1 1 287 2 238 2 107 1 189 1 13 1 190 2 145 1 245 1 15 1 16 3 64 1 112 3 113 1 22 2 250 3 26 4 253 3 71 1 152 7 32 1 33 6 76 3 209 14 303 1 305 1 261 1 119 2 83 3 306 2 308 3 266 1 215 1 310 2 164 3 349 2 314 1 350 4 270 1 90 1 171 7 315 1 127 1 320 4 49 1 354 3 175 2 223 1 50 2 131 3 132 2 229 2 326 2 360 1 327 1 282 2 
33 2 350 1 16 1 209 2 320 1 49 1 353 1 354 1 250 1 321 1 26 1 131 1 253 1 308 1 62 1 152 2 164 1 190 1 
33 2 350 1 315 1 171 2 16 1 209 2 302 1 112 1 320 1 353 1 354 1 250 1 119 1 26 1 131 1 253 1 308 1 164 1 
33 2 350 2 171 2 315 1 16 1 209 4 112 1 320 2 49 1 353 1 354 1 223 1 250 1 119 1 321 1 26 2 131 1 253 1 308 2 152 2 164 1 190 1 
33 2 350 1 191 1 16 1 209 2 320 1 49 1 354 1 250 1 321 1 26 1 131 1 253 1 308 1 62 1 152 2 164 1 190 1 
33 2 350 1 191 1 315 1 171 2 16 1 209 2 302 1 112 1 320 1 354 1 250 1 119 1 26 1 131 1 253 1 308 1 164 1 
33 2 350 2 191 1 171 2 315 1 16 1 209 4 112 1 320 2 49 1 354 1 223 1 250 1 119 1 321 1 26 2 131 1 253 1 308 2 152 2 164 1 190 1 
33 2 350 2 171 2 315 1 16 1 209 4 112 1 320 2 49 1 354 1 223 1 250 1 119 1 321 1 26 2 131 1 253 1 308 2 152 2 164 1 190 1 
32 1 33 2 76 1 1 1 209 2 287 1 305 1 83 1 306 1 310 1 164 1 349 1 314 1 245 1 171 1 16 1 113 1 354 1 175 1 250 1 50 1 131 1 132 1 253 1 152 1 229 1 326 1 282 1 
175 1 32 1 314 1 244 1 76 1 34 1 83 1 306 1 229 1 287 1 310 1 336 1 305 1 349 1 113 1 
33 2 350 2 171 2 315 1 16 1 209 4 112 1 320 2 49 1 354 1 223 1 250 1 119 1 321 1 26 2 131 1 253 1 308 2 71 1 152 2 164 1 190 1 
32 1 33 2 76 1 209 4 287 1 305 1 238 1 119 1 83 1 306 1 308 2 310 1 164 1 349 1 190 1 350 2 171 2 315 1 16 1 112 1 320 2 49 1 113 1 354 1 175 1 223 1 250 1 321 1 26 2 131 1 132 1 253 1 152 2 229 1 326 1 179 1 282 1 
33 2 76 1 181 1 209 3 303 1 119 1 83 1 308 1 187 1 164 1 243 1 190 1 350 1 171 1 315 1 15 1 16 1 49 1 320 1 354 1 223 1 250 1 321 1 131 1 26 1 253 1 71 1 152 2 360 1 
33 6 330 1 134 1 209 41 36 1 5 3 119 5 241 1 40 1 308 8 215 1 164 3 139 1 313 4 294 1 109 1 42 1 13 1 190 5 216 4 145 1 270 1 169 2 193 1 171 21 315 4 147 1 16 3 129 1 64 1 48 1 112 4 49 4 276 1 200 3 223 4 66 1 321 4 131 3 253 3 228 1 152 20 327 1 
33 8 330 1 134 1 209 38 36 1 5 3 119 4 241 1 40 1 308 7 215 1 164 4 139 1 313 4 294 1 109 1 42 1 13 1 190 5 216 4 145 1 270 1 169 2 193 1 171 18 315 3 147 1 16 4 129 1 64 1 48 1 112 4 49 4 276 2 200 3 223 4 66 1 321 3 131 4 253 4 228 1 152 20 327 1 
33 4 231 2 330 1 134 1 209 52 36 1 5 2 119 8 241 1 40 1 308 14 215 1 164 2 313 4 294 1 109 1 42 1 13 1 190 8 216 4 145 1 270 1 169 1 193 1 171 25 315 7 147 1 16 2 129 1 64 1 48 1 112 7 49 7 276 1 200 4 223 7 321 7 131 2 253 2 228 2 152 27 327 1 
33 4 209 19 36 2 5 1 119 3 241 1 308 6 164 2 139 1 313 2 109 1 42 1 190 3 216 2 169 1 193 1 171 10 315 3 16 2 129 1 112 3 49 3 200 1 223 3 321 3 131 2 253 2 228 1 324 1 152 9 
33 6 330 1 134 1 209 26 36 1 5 2 119 2 241 1 40 1 308 4 164 3 313 2 109 2 294 1 42 1 190 3 216 4 169 2 171 12 193 1 315 2 147 1 16 3 129 1 48 1 112 2 49 3 276 2 200 2 223 3 321 2 131 3 253 3 152 14 
91 1 252 1 323 1 6 1 103 1 343 1 9 1 312 1 260 1 213 1 
165 1 153 1 
240 1 102 1 6 1 103 1 9 1 312 1 269 1 260 1 213 1 
279 1 99 1 
3 1 31 1 212 1 
91 1 126 1 273 1 55 1 351 2 103 1 343 1 18 1 260 1 198 1 213 1 299 1 335 1 252 1 265 1 6 1 312 1 9 1 
91 1 126 1 273 1 55 1 351 2 103 1 343 1 18 1 260 1 198 1 213 1 299 1 335 1 252 1 265 1 6 1 312 1 9 1 
91 1 126 1 273 1 55 1 351 2 103 1 343 1 18 1 260 1 198 1 213 1 299 1 335 1 252 1 265 1 6 1 312 1 9 1 
279 1 99 1 31 1 
279 1 99 1 31 1 
3 1 212 1 
3 1 31 1 212 1 
272 1 292 1 
76 2 103 1 303 2 260 1 213 1 80 1 185 1 118 1 335 1 83 2 292 1 6 1 162 1 9 1 312 1 165 1 15 2 272 1 351 1 128 1 18 1 198 1 65 1 299 1 50 1 360 2 153 1 
33 2 32 2 76 2 1 1 209 2 287 1 303 2 305 2 79 1 136 1 83 2 306 1 310 1 138 1 164 1 349 1 63 1 245 1 171 1 192 2 16 1 246 1 113 2 354 1 250 1 201 1 131 1 253 1 71 1 152 1 325 1 
314 1 32 1 170 1 287 1 235 1 305 1 113 1 95 1 21 1 306 1 120 1 310 1 346 1 349 1 
32 1 156 1 195 1 44 1 233 1 287 1 157 1 305 1 113 1 21 1 289 1 120 1 291 1 151 1 186 1 310 1 359 2 12 1 
32 2 156 1 195 1 44 1 233 1 287 1 157 1 305 2 113 2 21 1 289 1 120 1 291 1 151 1 186 1 310 1 359 2 12 1 179 1 
32 1 156 1 195 1 44 1 233 1 287 1 157 1 305 1 113 1 21 1 291 1 121 1 151 1 186 1 310 1 359 2 12 1 
259 1 
328 1 124 1 55 1 159 1 37 1 177 1 52 1 87 1 72 1 141 1 
74 2 124 5 284 5 315 2 92 1 55 5 211 5 49 2 223 2 68 5 225 10 119 2 141 5 189 1 190 2 
55 1 51 1 18 1 72 1 198 1 180 1 
328 2 32 4 287 1 305 4 37 2 263 1 306 1 310 1 108 1 141 2 346 1 348 2 349 1 314 2 168 2 298 2 124 2 93 1 274 1 18 3 198 3 338 1 113 4 95 1 251 1 177 2 51 4 52 1 180 2 
124 1 239 1 55 1 87 1 141 1 72 1 159 1 
328 1 284 1 256 1 55 2 37 1 141 1 124 1 18 1 248 1 198 1 225 1 177 1 51 1 52 1 53 1 72 1 180 1 
328 1 314 1 32 1 316 1 287 2 305 1 158 1 37 1 113 1 344 1 306 2 229 1 177 1 7 1 310 1 52 1 349 1 
74 2 328 2 284 3 55 5 134 1 211 5 37 2 5 1 119 2 40 1 141 8 313 1 294 1 43 1 190 2 168 1 298 1 124 5 315 2 92 1 147 1 94 1 18 1 48 1 198 1 49 2 200 1 223 2 68 5 225 6 51 1 177 2 52 2 72 2 180 1 
74 2 328 1 100 1 76 1 115 1 303 1 117 1 37 1 82 1 119 1 83 1 264 1 215 1 11 1 141 2 243 1 190 2 270 1 145 1 124 2 15 1 92 1 18 1 198 1 199 1 177 1 52 1 360 1 
33 2 32 1 76 3 209 1 303 2 287 1 305 1 290 1 83 3 264 1 306 1 310 1 164 1 243 2 349 1 314 1 171 1 245 1 15 2 16 1 113 1 354 1 175 1 250 1 50 1 131 1 132 1 253 1 229 1 326 1 360 2 282 1 
328 1 168 1 284 2 124 2 298 1 55 4 211 2 37 1 68 2 225 4 177 1 52 1 141 1 72 2 13 1 
252 1 292 1 196 1 9 1 213 1 
9 1 140 1 213 1 
9 1 140 1 213 1 
9 1 140 1 213 1 
234 1 9 1 213 1 
234 1 9 1 213 1 
234 1 9 1 213 1 
9 1 213 1 
103 1 312 1 
33 2 209 8 5 1 119 1 241 1 308 2 215 1 164 1 313 1 13 1 190 1 270 1 145 1 171 4 16 1 48 1 64 1 112 2 200 1 131 1 253 1 152 4 327 1 
33 4 209 11 331 1 5 1 119 1 241 1 308 3 215 1 164 2 313 2 13 1 190 2 145 1 270 1 171 5 16 2 64 1 48 1 112 2 49 1 200 1 223 1 321 1 131 2 253 2 228 1 152 6 327 1 
33 6 331 1 209 19 134 1 5 1 119 3 241 1 40 1 308 4 215 1 164 3 313 1 294 1 13 1 190 3 145 1 270 1 171 10 315 2 147 1 16 3 64 1 48 1 49 2 112 3 200 1 276 1 223 2 321 1 131 3 253 3 152 9 327 1 
33 6 331 1 209 17 134 1 5 1 119 2 241 1 40 1 308 5 215 1 164 3 313 1 294 1 13 1 190 3 145 1 270 1 171 7 315 1 147 1 16 3 64 1 48 1 49 2 112 3 276 1 200 1 223 2 321 2 131 3 253 3 152 10 327 1 
33 2 209 8 5 1 119 1 241 1 308 2 215 1 164 1 313 1 13 1 190 1 270 1 145 1 171 4 16 1 48 1 64 1 112 2 200 1 131 1 253 1 152 4 327 1 
33 2 209 12 134 1 5 1 119 2 241 1 40 1 308 2 164 1 313 1 294 1 190 2 171 6 315 2 147 1 16 1 48 1 49 2 112 1 200 1 223 2 321 1 131 1 253 1 152 6 
33 8 134 1 209 18 331 1 5 1 119 2 241 1 40 1 308 5 215 1 164 4 313 1 294 1 13 1 190 3 145 1 270 1 171 8 315 1 147 1 16 4 64 1 48 1 49 2 112 3 200 1 276 2 223 2 321 2 131 4 253 4 152 10 327 1 
33 8 134 1 209 16 5 1 119 2 241 1 40 1 308 6 164 4 313 1 139 1 294 1 190 3 171 7 315 2 147 1 16 4 48 1 49 3 112 3 200 1 276 2 223 3 321 3 131 4 253 4 152 9 
270 3 145 1 171 4 209 7 64 1 112 3 119 1 321 3 308 6 152 3 215 3 327 2 190 1 
33 8 134 1 209 18 5 1 119 2 241 1 40 1 308 4 215 1 164 4 313 1 139 1 294 1 13 1 190 3 145 1 270 1 171 8 315 1 147 1 16 4 64 1 48 1 49 2 112 3 200 1 276 2 223 2 321 1 131 4 253 4 152 10 327 1 
33 2 270 2 145 1 171 5 16 1 209 10 112 3 199 1 321 2 119 2 131 1 241 1 253 1 308 5 152 5 215 2 164 1 190 2 
33 2 16 1 209 2 49 1 321 1 131 1 241 1 253 1 152 2 308 1 164 1 190 1 
33 2 171 2 315 1 16 1 209 4 112 1 49 1 223 1 119 1 321 1 131 1 241 1 253 1 308 2 152 2 164 1 190 1 
33 6 270 1 171 2 16 3 209 3 112 1 276 1 321 1 131 3 241 1 307 1 253 3 308 2 152 1 215 1 164 3 139 1 
33 10 331 1 209 34 5 1 119 5 241 1 307 1 308 12 215 3 164 5 313 4 139 1 13 1 190 5 166 1 145 2 270 3 171 18 315 3 16 5 46 1 64 1 49 3 112 7 276 2 200 3 223 3 321 5 131 5 253 5 228 1 152 16 300 1 327 1 
33 4 145 1 270 1 171 4 16 2 209 8 64 1 112 2 276 1 119 1 321 1 131 2 253 2 152 4 308 3 215 1 164 2 327 1 13 1 190 1 
270 1 145 1 171 3 209 6 64 1 112 2 239 1 119 1 308 2 152 3 215 1 327 1 13 1 190 1 
33 2 171 2 315 1 16 1 331 1 209 4 112 1 49 1 223 1 119 1 321 1 131 1 253 1 308 2 152 2 164 1 190 1 
315 1 171 4 209 7 112 1 49 1 200 1 5 1 223 1 119 1 321 1 228 1 152 3 308 2 313 2 190 1 
33 4 231 1 209 23 57 1 119 3 307 1 308 9 215 2 164 2 313 2 13 1 190 3 145 1 270 2 171 12 315 2 16 2 64 1 49 2 112 5 200 2 276 2 223 2 321 4 131 2 228 1 253 2 152 11 327 1 
171 1 209 1 313 1 
152 1 209 1 200 1 
33 2 171 3 315 1 16 1 331 1 209 6 49 1 112 2 223 1 321 1 119 1 131 1 253 1 152 3 308 3 164 1 189 1 190 1 
33 2 209 12 134 1 5 1 119 2 241 1 40 1 308 2 164 1 313 1 294 1 190 2 171 6 315 2 147 1 16 1 48 1 49 2 112 1 200 1 223 2 321 1 131 1 253 1 152 6 
145 1 270 1 171 3 209 6 112 1 119 1 321 1 152 3 308 2 215 1 190 1 
33 2 270 1 171 2 16 1 209 3 64 1 112 1 276 1 321 1 131 1 307 1 253 1 152 1 308 2 215 1 164 1 327 1 
45 1 219 1 88 1 
133 1 45 1 219 1 288 1 258 1 88 1 47 1 184 1 
314 1 32 4 287 1 305 4 247 1 113 4 95 1 322 1 306 1 310 1 346 1 179 1 349 1 
32 2 286 1 287 2 197 1 305 2 113 2 69 1 306 1 229 1 310 1 163 1 348 1 340 1 349 1 
32 1 314 1 44 1 291 1 186 1 287 1 310 1 359 1 305 1 113 1 
32 2 287 1 305 2 157 1 79 1 113 2 201 1 306 1 310 1 179 1 349 1 
314 1 32 4 77 1 287 2 305 5 247 1 113 5 20 1 95 1 201 1 306 3 310 2 346 1 348 1 179 1 349 2 
314 1 32 4 287 2 305 5 247 1 113 5 20 1 95 1 333 1 201 1 306 3 310 2 346 1 348 1 179 1 349 2 
95 1 32 1 314 1 239 1 306 1 287 1 310 1 346 1 305 1 349 1 113 1 
314 1 32 1 15 1 76 2 287 1 303 1 305 1 113 1 175 1 261 1 50 1 83 2 306 1 229 1 310 1 326 1 360 1 349 1 
32 1 0 1 100 1 76 2 255 1 303 2 287 1 305 1 4 1 261 1 83 2 306 3 310 1 348 1 349 2 111 1 15 1 113 1 175 1 50 1 229 2 326 1 360 2 
32 2 0 1 100 1 76 2 34 1 255 1 303 2 287 1 305 2 4 1 261 1 83 2 306 3 310 1 348 1 349 2 111 1 15 1 113 2 175 1 322 1 50 1 229 2 360 2 
314 1 32 3 316 1 255 1 55 1 318 1 2 1 287 1 18 2 305 3 4 1 198 2 113 3 222 1 322 1 306 4 229 1 51 1 310 1 72 1 295 1 349 1 348 1 
314 1 32 3 316 1 255 1 55 1 2 1 208 1 287 1 18 2 305 3 4 1 198 2 113 3 222 1 322 1 306 4 229 1 51 1 310 1 72 1 349 1 348 1 
32 1 287 1 310 1 305 1 281 1 113 1 
314 2 32 6 192 1 285 1 286 1 77 1 287 3 157 1 305 7 20 1 59 1 113 7 344 1 201 1 306 3 229 1 310 2 163 1 281 1 179 1 349 2 
287 1 238 1 138 1 190 1 13 1 145 1 15 1 16 2 64 1 112 2 113 1 22 1 250 2 26 1 253 2 71 1 152 3 32 1 33 4 76 2 209 6 303 1 305 1 261 1 119 1 83 2 306 1 308 2 215 1 310 1 164 2 349 1 350 1 270 1 171 3 320 1 354 2 175 1 131 2 50 2 132 1 229 1 326 1 360 1 179 1 327 1 282 1 
32 1 328 2 55 1 2 1 208 1 305 1 159 1 37 2 262 1 185 1 306 2 87 1 345 1 141 1 314 1 124 1 316 1 18 3 198 3 113 1 222 1 176 1 251 1 177 2 51 2 52 2 72 1 180 1 
32 2 287 2 305 2 113 2 222 1 344 1 306 2 229 1 7 1 310 1 281 1 179 1 349 1 
314 1 32 1 15 1 76 2 34 1 287 1 303 1 305 1 113 1 175 1 261 1 50 1 83 2 306 1 229 1 310 1 360 1 349 1 
32 1 285 1 286 1 287 2 305 1 113 1 344 1 306 1 229 1 310 1 163 1 348 1 349 1 
283 1 50 1 237 1 173 1 89 1 
0 1 100 2 76 1 54 1 283 2 55 1 2 1 303 1 58 1 115 1 237 2 185 1 82 1 83 1 264 1 11 1 243 1 89 2 296 1 111 1 15 1 18 2 173 1 198 2 249 1 50 1 178 1 72 1 360 1 
283 1 76 1 246 1 303 1 173 1 83 1 325 1 63 1 89 1 
178 1 58 1 173 1 
97 1 85 1 114 1 352 1 309 1 10 1 19 1 242 1 
75 1 114 2 352 2 19 1 221 2 275 1 278 1 160 1 161 1 97 4 85 3 311 1 10 4 242 1 
217 1 114 1 352 1 19 1 221 1 97 2 85 1 214 1 309 1 10 2 242 1 205 1 
278 1 161 2 202 1 97 3 85 1 114 1 352 1 311 2 309 1 10 3 19 1 242 1 
85 2 73 2 104 1 143 1 
277 1 97 1 309 1 10 1 19 1 242 1 
97 2 85 1 114 1 352 1 358 1 309 1 10 2 19 1 242 1 221 1 
105 1 
97 1 85 1 114 1 352 1 309 1 10 1 19 1 242 1 
239 1 85 1 114 1 352 1 
97 1 85 1 114 1 352 1 10 1 19 1 242 1 
150 1 10 1 14 1 
352 1 114 1 116 1 19 1 278 1 161 2 97 3 85 1 309 1 311 1 10 3 242 1 
101 1 97 2 85 1 114 1 352 1 10 2 19 1 242 1 221 1 
75 1 233 1 19 1 135 1 97 1 85 1 291 1 309 1 10 1 359 1 242 1 
97 1 85 1 114 1 309 1 10 1 19 1 242 1 
97 1 114 2 352 1 309 1 10 1 19 1 242 1 
114 1 78 1 19 2 334 1 97 2 85 1 309 1 8 1 10 2 242 2 
75 1 114 1 352 1 19 1 221 2 275 1 97 3 106 1 85 2 309 1 358 1 10 3 242 1 
233 1 114 1 352 1 319 1 19 1 221 1 97 2 85 1 291 1 186 1 309 1 359 2 10 2 242 1 12 1 
75 1 101 1 114 1 352 1 19 2 221 2 275 1 97 4 85 2 309 1 10 4 242 2 347 1 
161 1 97 3 85 1 114 1 352 1 358 1 309 1 10 3 19 1 242 1 221 1 
75 1 160 1 85 1 275 1 
85 1 114 1 

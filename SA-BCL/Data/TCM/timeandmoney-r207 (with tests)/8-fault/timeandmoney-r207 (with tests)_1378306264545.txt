#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (209,318) (209,318) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 118 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 132 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (91,233,246) (28,36,61) (28,36,61) (28,36,61) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (91,233,246) (28,36,61) (28,36,61) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (91,233,246) (28,36,61) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (91,233,246) (28,36,61) (28,36,61) (28,36,61) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 279 57 250 62 260 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 279 57 250 62 260 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 279 57 250 62 260 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 279 57 250 62 260 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 279 57 250 62 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 346 328 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (91,233,246) (91,233,246) (91,233,246) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (91,233,246) (91,233,246) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (91,233,246) (91,233,246) (91,233,246) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 234 134 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 57 250 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 164 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
156 1 157 1 116 1 27 2 320 2 55 2 3 1 162 2 236 1 74 5 214 1 12 6 13 2 145 1 256 3 99 1 304 1 262 1 284 1 172 2 124 1 221 1 245 1 313 2 82 4 185 9 272 9 112 1 
156 1 157 1 116 1 27 2 320 2 55 2 3 1 162 2 236 1 74 5 214 1 12 6 13 2 145 1 256 3 99 1 304 1 262 1 284 1 172 2 124 1 221 1 245 1 313 2 82 4 185 9 272 9 112 1 
156 1 157 1 116 1 27 2 320 2 55 2 3 1 162 2 236 1 74 6 214 1 12 7 13 2 145 1 256 4 99 1 304 1 262 1 284 1 172 2 124 1 221 1 245 1 313 2 82 5 185 10 272 10 112 1 
156 1 157 1 116 1 27 2 320 2 55 2 3 1 162 2 236 1 74 4 214 1 12 4 13 2 145 1 256 2 99 1 304 1 262 1 284 1 172 1 221 1 245 1 313 2 82 3 185 7 272 7 112 1 
262 1 172 2 116 1 124 1 27 1 320 1 55 1 221 1 313 1 236 1 74 3 82 2 12 3 185 4 13 1 272 4 256 1 99 1 
157 1 320 1 185 1 55 1 206 1 272 1 162 1 209 1 318 1 99 1 
262 1 74 2 116 1 82 1 12 1 320 2 185 3 55 2 272 3 256 1 3 1 162 1 99 1 
156 1 319 1 116 1 27 1 320 2 55 2 3 1 162 1 236 1 212 1 74 5 12 7 13 1 256 3 99 1 262 1 172 2 124 1 221 1 313 1 82 4 185 9 272 9 112 1 
156 1 319 1 116 1 27 1 320 2 55 2 3 1 162 1 236 1 212 1 74 5 12 7 13 1 256 3 99 1 262 1 172 2 124 1 221 1 313 1 82 4 185 9 272 9 112 1 
164 1 
237 1 174 1 49 2 
146 2 261 2 152 2 10 1 59 2 16 1 281 2 130 2 
228 1 273 1 335 1 298 1 30 2 278 1 93 1 338 2 10 1 59 2 216 1 191 2 325 1 326 1 281 3 327 1 303 1 171 1 146 3 261 2 240 2 330 1 194 2 16 1 125 1 39 1 80 1 291 1 130 2 179 1 152 2 314 1 108 1 20 1 252 1 85 1 350 1 
146 1 261 1 152 1 10 1 59 1 204 1 281 1 339 1 81 1 130 1 
146 1 285 1 265 1 204 1 102 1 255 1 70 1 73 1 315 1 333 1 237 1 59 1 98 1 281 1 
261 1 146 1 285 2 265 1 204 1 255 1 70 1 130 1 152 1 73 1 333 2 315 1 237 1 59 1 281 1 
268 1 
268 1 
285 1 333 1 122 1 
268 1 
237 1 
268 1 
285 1 333 1 343 1 29 1 189 1 104 1 268 1 
164 1 
146 2 261 1 230 1 16 2 300 1 130 1 152 1 59 2 281 2 
202 1 121 1 306 1 
146 1 240 1 241 1 335 1 298 1 16 1 30 1 80 1 179 1 93 1 191 1 326 1 281 1 327 1 350 1 303 1 
146 3 261 3 152 3 59 3 16 1 40 1 281 3 130 1 
146 1 261 1 152 1 59 1 204 1 281 1 81 1 
146 1 261 1 152 1 59 1 230 1 204 1 300 1 281 1 130 1 
228 1 273 1 335 1 298 1 299 1 230 1 204 1 255 1 30 1 188 1 70 1 278 1 93 1 338 1 73 1 10 1 59 3 191 1 326 1 281 4 327 1 303 1 171 1 146 4 261 3 240 1 330 1 285 1 194 2 16 1 40 1 80 1 291 1 130 2 179 1 152 3 315 1 333 1 108 1 45 1 20 1 252 1 85 1 350 1 
146 2 261 1 152 1 78 1 59 2 16 1 40 1 98 1 281 2 
261 3 146 3 285 1 299 1 230 1 204 1 255 1 40 2 188 1 70 1 130 1 152 3 73 1 333 1 315 1 237 1 59 3 281 3 169 1 
261 2 146 2 230 1 40 1 130 1 152 2 59 2 121 1 281 2 306 1 
146 1 240 1 335 1 298 1 16 1 30 1 80 1 179 1 93 1 191 1 326 1 281 1 327 1 350 1 303 1 
146 1 240 1 242 1 298 1 16 1 30 1 80 1 179 1 93 1 191 1 281 1 327 1 50 1 350 1 303 1 
202 2 273 1 228 2 138 1 301 1 338 4 121 2 306 2 330 1 264 1 123 1 194 2 243 1 149 1 223 1 151 1 291 1 314 2 108 1 110 1 109 1 20 1 252 1 22 1 
146 1 261 1 152 1 59 1 204 1 48 1 281 1 70 1 
261 1 146 2 240 1 335 1 298 1 40 1 30 1 188 1 80 1 93 1 179 1 152 1 59 1 121 1 191 1 326 1 281 2 327 1 350 1 303 1 
261 4 146 5 78 1 230 1 16 1 40 2 188 1 41 1 130 1 152 4 59 5 98 1 281 5 87 1 
146 2 261 2 152 2 59 2 204 1 48 1 281 2 81 1 
119 1 232 1 
119 1 232 1 
15 1 34 1 
15 1 34 1 
15 1 34 1 
119 1 232 1 86 1 
119 1 232 1 336 1 
15 1 119 2 34 1 107 1 322 1 232 2 
119 1 232 1 86 1 
119 1 232 1 86 1 
119 1 9 1 232 1 
119 1 9 1 232 1 
119 1 9 1 232 1 
285 2 322 1 231 2 232 2 69 2 244 1 103 2 348 2 119 2 333 2 19 1 237 1 120 3 200 1 217 1 170 2 329 1 37 1 201 1 
231 1 232 1 69 1 336 1 119 1 59 2 120 1 170 1 281 2 258 1 261 2 146 2 285 1 341 1 16 1 344 1 346 1 348 1 152 2 333 1 43 1 317 1 254 1 201 1 
27 1 13 1 313 1 
206 1 
206 1 
206 1 
206 1 
77 1 268 1 
25 1 97 1 118 1 268 2 
29 1 189 1 6 1 8 1 144 2 280 1 285 1 341 1 286 1 343 1 308 1 309 1 223 1 104 1 268 2 151 1 333 1 106 1 225 1 295 1 
29 1 189 1 6 1 8 1 144 2 280 1 285 1 341 1 286 1 343 1 308 1 309 1 223 1 104 1 268 1 151 1 333 1 106 1 132 1 225 1 295 1 
164 1 
80 1 234 1 
213 1 
93 1 80 1 
310 1 56 2 80 3 93 1 213 1 47 1 303 1 
93 1 80 1 303 1 
44 1 80 1 
228 3 138 2 274 1 312 1 151 1 180 1 247 1 338 7 314 4 215 1 165 2 109 3 349 1 65 1 227 1 294 1 22 1 
228 3 138 2 274 1 312 1 151 1 180 1 247 1 338 7 314 4 215 1 165 2 109 3 349 1 65 1 227 1 294 1 22 1 
228 3 138 2 274 1 312 1 31 1 151 1 180 1 247 1 338 7 314 4 215 1 165 2 109 3 349 1 65 1 227 1 294 1 22 1 
228 3 138 1 274 1 276 1 53 1 57 1 210 1 338 6 279 1 165 1 215 1 330 1 194 2 105 1 291 1 314 3 108 1 349 1 109 2 65 1 227 2 252 1 253 1 294 1 
228 4 138 3 274 1 324 1 210 1 338 9 95 1 165 2 215 1 330 2 194 4 312 1 151 1 291 2 180 1 247 1 314 5 108 2 109 4 349 1 252 2 227 1 294 1 22 1 
240 1 61 1 298 1 28 1 320 1 323 1 55 1 126 1 206 1 30 1 91 1 128 1 162 1 36 1 191 1 185 1 272 1 154 1 99 1 350 1 192 1 155 1 
240 1 307 1 263 1 298 1 28 1 320 1 323 1 55 1 126 1 206 1 30 1 91 1 162 1 36 1 12 1 191 1 185 2 272 2 154 1 350 1 192 1 155 1 259 1 
240 1 263 1 298 1 323 1 126 1 206 1 30 1 91 1 162 1 36 1 12 1 191 1 185 1 272 1 154 1 350 1 155 1 259 1 
240 1 307 1 298 1 321 1 220 1 320 1 323 2 55 1 126 2 30 1 80 1 129 1 162 2 93 1 334 1 42 1 238 1 191 1 185 1 272 1 327 1 350 1 155 2 
240 1 263 1 61 1 298 1 28 1 320 1 323 1 55 1 126 1 206 1 30 1 91 1 162 1 36 1 191 1 185 1 272 1 154 1 99 1 350 1 192 1 155 1 
248 1 
187 1 321 1 90 1 89 4 189 1 277 2 142 1 5 1 6 2 93 1 144 2 237 2 59 1 238 1 191 2 60 1 98 1 282 2 327 2 281 1 240 2 146 1 285 5 147 2 102 1 290 2 150 1 333 5 66 2 295 1 26 2 298 1 204 1 29 1 255 1 30 2 70 1 73 1 211 1 35 1 166 1 76 3 122 6 265 1 174 2 343 1 79 1 80 1 315 1 83 1 184 1 84 2 136 1 49 2 350 1 
146 1 285 3 187 1 204 1 102 1 89 2 255 1 79 1 347 1 290 1 70 1 211 1 73 1 333 3 315 1 83 1 166 1 59 1 76 1 98 1 281 1 122 2 
187 1 204 1 255 1 89 3 70 1 73 1 211 1 237 1 59 1 166 1 98 1 76 1 281 1 122 1 146 1 285 3 265 1 102 1 79 1 347 1 315 1 333 3 83 1 84 1 
187 1 26 1 204 1 255 1 89 3 70 1 73 1 211 1 237 1 59 1 166 1 76 1 98 1 281 1 122 2 146 1 285 3 265 1 102 1 79 1 347 1 290 1 315 1 333 3 83 1 84 1 
187 1 89 6 189 1 277 2 6 1 144 1 237 5 59 1 60 1 98 1 281 1 282 2 146 1 285 5 147 2 102 1 290 4 333 5 66 2 26 4 204 1 29 1 255 1 117 1 207 1 70 1 211 1 73 1 35 1 166 1 76 3 122 7 340 1 265 5 342 1 343 1 174 2 79 1 347 1 315 1 183 1 83 1 184 1 84 4 
187 1 89 4 189 1 277 2 6 1 144 1 237 2 59 1 60 1 98 1 281 1 282 2 146 1 285 4 147 2 102 1 290 2 333 4 66 2 26 2 204 1 29 1 255 1 70 1 211 1 73 1 35 1 166 1 76 2 122 4 265 1 343 1 174 2 79 1 315 1 83 1 184 1 84 2 136 1 49 2 
26 2 187 1 204 1 29 1 117 1 255 1 89 4 207 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 59 1 166 1 60 1 76 2 98 1 282 2 281 1 122 4 146 1 285 4 147 2 265 1 342 1 174 2 343 1 102 1 79 1 290 2 315 1 333 4 83 1 66 2 184 1 84 2 
26 2 187 1 204 1 29 1 117 1 255 1 89 4 207 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 59 1 166 1 60 1 76 2 98 1 282 2 281 1 122 4 146 1 285 4 147 2 265 1 342 1 174 2 343 1 102 1 79 1 290 2 315 1 333 4 83 1 66 2 184 1 84 2 
51 2 26 2 158 2 187 1 204 1 29 1 117 1 255 1 89 4 4 1 141 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 59 1 166 1 76 2 98 1 281 1 122 4 146 1 219 1 285 4 147 2 265 1 343 1 102 1 79 1 290 2 315 1 333 4 83 1 184 1 84 2 49 2 
187 1 26 3 204 1 29 1 117 1 255 1 89 5 207 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 59 1 166 1 60 1 76 2 98 1 282 2 281 1 122 5 340 1 146 1 285 4 147 2 265 1 342 1 174 2 343 1 102 1 79 1 290 3 315 1 333 4 83 1 66 2 184 1 84 3 
187 1 26 3 204 1 29 1 117 1 255 1 89 5 207 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 59 1 166 1 60 1 76 2 98 1 282 2 281 1 122 5 340 1 146 1 285 4 147 2 265 1 342 1 174 2 343 1 102 1 79 1 290 3 315 1 333 4 83 1 66 2 184 1 84 3 
51 2 26 2 158 2 187 1 204 1 29 1 255 1 89 4 4 1 189 1 277 2 70 1 6 1 73 1 211 1 35 1 144 1 237 1 166 1 59 1 76 2 98 1 281 1 122 4 146 1 285 4 147 2 265 1 343 1 102 1 79 1 290 2 333 4 315 1 83 1 184 1 84 2 136 1 49 2 
330 1 164 1 273 1 194 2 108 1 110 1 20 1 252 1 291 1 
202 16 138 2 228 9 273 2 274 2 160 1 301 2 57 1 338 22 279 4 121 16 257 1 171 1 306 6 330 2 194 4 16 1 39 1 345 2 223 4 291 2 151 4 314 13 181 1 108 2 106 4 109 4 133 1 224 2 20 1 252 2 253 4 22 2 
273 1 228 1 335 1 298 1 160 1 30 1 188 1 93 1 338 2 59 1 191 1 326 1 327 1 281 2 303 1 306 1 171 1 240 1 146 2 261 1 330 1 241 1 194 2 16 1 40 1 39 1 80 1 176 1 178 1 291 1 179 1 152 1 314 1 108 1 20 1 252 1 350 1 111 1 
88 2 138 4 228 10 273 3 274 4 188 1 93 2 7 2 59 1 191 3 326 2 327 1 281 3 240 3 146 3 330 3 194 6 16 2 291 3 151 3 247 1 152 1 108 3 106 2 109 8 20 3 252 3 22 3 202 7 335 2 298 2 160 1 205 2 161 2 30 3 301 2 163 1 72 1 338 20 165 1 215 1 121 7 303 2 171 1 306 7 261 1 263 1 39 1 40 1 80 2 223 2 312 1 180 1 179 2 314 10 182 1 349 1 85 2 350 2 
52 1 273 2 228 1 298 2 321 1 30 7 71 1 93 2 338 2 94 1 59 1 238 1 191 8 302 1 281 1 327 2 305 1 171 1 146 1 261 1 240 8 263 1 330 2 194 4 173 1 125 2 40 1 39 1 127 1 128 1 80 3 291 2 152 1 314 1 108 2 110 1 20 2 252 2 350 2 
202 1 138 1 273 1 228 2 230 1 160 1 301 1 338 3 59 1 121 1 168 1 281 1 306 1 261 1 146 1 330 1 194 2 223 1 130 1 291 1 151 1 152 1 314 1 108 1 106 1 109 1 20 1 252 1 22 1 
202 1 330 1 273 1 274 1 194 2 243 1 223 1 291 1 151 1 338 2 314 2 108 1 109 1 110 1 121 1 20 1 252 1 306 1 
202 1 330 1 138 1 273 1 228 2 194 2 149 1 301 1 291 1 338 2 108 1 109 1 110 1 121 1 20 1 252 1 22 1 306 1 
202 2 273 1 228 2 138 1 274 1 301 1 338 4 121 2 306 2 330 1 194 2 223 1 151 1 291 1 314 2 106 1 108 1 110 1 109 2 20 1 252 1 22 1 
202 1 330 1 273 1 274 1 194 2 173 1 243 1 223 1 291 1 151 1 338 2 314 2 108 1 109 1 121 1 20 1 252 1 306 1 
202 1 330 1 138 1 273 1 228 2 194 2 173 1 149 1 301 1 291 1 338 2 108 1 109 1 121 1 20 1 252 1 22 1 306 1 
202 2 273 1 228 2 138 1 274 1 301 1 338 4 121 2 306 2 330 1 194 2 173 1 223 1 151 1 291 1 314 2 106 1 108 1 109 2 20 1 252 1 22 1 
202 2 273 1 228 2 138 1 274 1 301 1 338 4 121 2 306 2 330 1 194 2 223 1 151 1 291 1 314 2 106 1 108 1 109 2 20 1 252 1 22 1 
273 1 228 1 335 1 298 1 30 1 93 1 338 2 191 1 326 1 327 1 281 1 303 1 171 1 240 1 146 1 330 1 194 2 16 1 39 1 80 1 291 1 179 1 314 1 108 1 20 1 85 1 252 1 350 1 
273 1 228 1 298 1 30 1 235 1 93 1 338 2 191 1 327 1 281 1 303 1 171 1 240 1 146 1 330 1 242 1 194 2 16 1 39 1 80 1 291 1 179 1 314 1 108 1 20 1 252 1 50 1 350 1 
202 2 273 1 228 2 138 1 274 1 160 1 301 1 338 4 121 2 306 2 330 1 194 2 223 1 151 1 291 1 314 2 106 1 108 1 109 2 20 1 252 1 22 1 
202 2 138 1 228 2 273 1 274 1 335 1 298 1 205 1 30 1 301 1 93 1 338 4 121 2 191 1 326 1 281 1 303 1 306 2 240 1 146 1 330 1 194 2 128 1 223 1 80 1 151 1 291 1 179 1 314 2 108 1 106 1 109 2 20 1 85 1 252 1 22 1 350 1 
202 1 228 1 273 1 114 1 274 1 230 1 160 1 301 1 338 3 59 1 121 1 281 1 306 1 261 1 146 1 330 1 194 2 223 1 130 1 291 1 151 1 152 1 314 2 108 1 106 1 109 1 20 1 252 1 22 1 
330 1 228 3 194 2 54 1 62 1 222 1 324 1 57 2 291 1 338 5 58 1 279 2 314 2 250 1 108 1 252 1 253 1 260 1 
330 1 228 3 194 2 54 1 62 1 222 1 324 1 57 2 291 1 338 5 58 1 279 2 314 2 250 1 108 1 252 1 253 1 260 1 
330 1 228 3 194 2 54 1 62 1 222 1 324 1 57 2 291 1 338 5 58 1 279 2 314 2 250 1 108 1 252 1 253 1 260 1 
330 1 228 3 194 2 54 1 62 1 222 1 324 1 57 2 291 1 338 5 58 1 279 2 314 2 250 1 108 1 252 1 253 1 260 1 
228 8 138 1 274 1 54 1 324 1 301 2 57 2 58 2 338 15 279 3 260 1 330 1 194 2 62 2 222 1 345 1 223 2 291 1 151 2 314 7 250 1 108 1 106 2 109 2 224 1 252 1 253 2 22 2 
119 1 115 1 322 1 231 1 232 1 217 1 69 1 170 1 329 1 348 1 
344 1 336 1 
119 1 75 1 231 1 232 1 2 1 69 1 170 1 267 1 348 1 
285 1 322 1 231 1 232 1 69 1 244 1 103 1 348 1 119 1 333 1 237 1 120 2 200 1 217 1 170 1 329 1 37 1 201 1 
285 1 322 1 231 1 232 1 69 1 244 1 103 1 348 1 119 1 333 1 237 1 120 2 200 1 217 1 170 1 329 1 37 1 201 1 
285 1 322 1 231 1 232 1 69 1 244 1 103 1 348 1 119 1 333 1 237 1 120 2 200 1 217 1 170 1 329 1 37 1 201 1 
292 1 107 1 86 1 
292 1 107 1 86 1 
68 1 9 1 
68 1 9 1 107 1 
43 1 317 1 
119 1 120 1 231 1 200 1 232 1 346 1 69 1 170 1 103 1 328 1 268 1 348 1 
292 1 86 1 
68 1 9 1 107 1 
113 1 273 1 228 1 298 1 160 1 30 2 93 1 338 2 94 1 59 2 11 1 191 2 302 1 281 2 171 1 240 2 146 2 330 1 194 2 175 1 125 2 39 1 196 1 80 1 291 1 269 1 314 1 108 1 20 1 252 1 350 1 
240 2 263 1 298 1 206 1 30 2 128 1 233 1 91 1 246 1 251 1 191 2 154 1 350 1 192 1 155 1 
240 1 263 1 298 1 206 1 30 1 91 1 246 1 191 1 153 1 154 1 192 1 350 1 155 1 
240 1 0 1 298 1 321 1 30 1 80 1 93 1 42 1 251 1 238 1 191 1 327 1 350 1 155 1 
240 1 263 1 298 1 206 1 30 1 233 1 91 1 246 1 251 1 191 1 154 1 350 1 192 1 155 1 
177 1 
164 1 
144 1 343 1 29 1 184 1 60 1 282 1 189 1 6 1 
240 1 298 1 343 1 29 1 101 1 30 1 310 1 80 1 234 1 189 1 93 1 191 1 184 1 134 1 327 1 350 2 303 1 
279 1 144 1 250 1 343 1 29 1 184 1 253 1 189 1 57 1 6 1 
24 1 204 1 29 1 207 1 189 1 6 2 10 1 144 2 215 1 59 1 281 1 218 1 339 1 146 1 261 1 285 1 343 1 311 2 81 1 151 2 130 1 247 1 152 1 333 1 349 1 316 1 184 1 22 1 
265 1 343 1 29 1 189 1 144 1 237 1 184 1 23 1 
8 1 144 2 106 1 308 1 223 1 151 1 
240 1 191 1 30 1 327 1 
144 1 343 1 29 1 184 1 295 1 189 1 5 1 6 1 
1 1 170 1 348 1 
43 1 17 1 170 1 329 1 348 1 
1 1 170 1 348 1 
1 1 170 1 348 1 
92 1 170 1 348 1 
92 1 170 1 348 1 
92 1 170 1 348 1 
170 1 348 1 
119 1 232 1 
24 1 228 10 138 5 274 4 324 1 301 1 57 1 210 1 143 1 338 24 279 1 165 1 215 2 190 1 330 2 194 4 223 2 312 1 291 2 151 5 180 1 247 2 314 14 131 1 250 1 108 2 106 2 349 2 109 9 252 2 253 1 22 4 296 1 
67 1 228 7 138 3 274 1 324 1 301 1 57 1 210 1 143 1 338 17 279 1 165 1 215 1 190 1 330 3 194 6 223 2 312 1 291 3 151 3 180 1 247 1 314 10 131 1 250 1 108 3 106 2 349 1 109 4 252 3 253 1 22 2 296 1 
67 1 228 15 138 4 274 2 324 1 301 4 57 1 210 1 143 1 338 29 279 2 165 1 215 1 190 1 330 3 194 6 345 1 223 4 312 1 291 3 151 5 180 1 247 1 131 1 314 14 250 1 108 3 106 4 349 1 109 6 224 1 252 3 253 2 22 5 296 1 
67 1 228 12 138 4 274 3 324 1 301 3 57 1 210 1 143 1 338 27 279 2 165 1 215 1 190 1 330 3 194 6 345 1 223 4 312 1 291 3 151 5 180 1 247 1 131 1 314 15 250 1 108 3 106 4 349 1 109 7 224 1 252 3 253 2 22 4 296 1 
24 1 228 10 138 5 274 4 324 1 301 1 57 1 210 1 143 1 338 24 279 1 165 1 215 2 190 1 330 2 194 4 223 2 312 1 291 2 151 5 180 1 247 2 314 14 131 1 250 1 108 2 106 2 349 2 109 9 252 2 253 1 22 4 296 1 
228 11 138 2 274 2 324 1 301 4 57 1 143 1 338 22 279 2 190 1 330 1 194 2 345 1 223 4 291 1 151 4 131 1 314 11 250 1 108 1 106 4 109 4 224 1 252 1 253 2 22 4 296 1 
67 1 228 13 138 4 274 3 324 1 301 3 57 1 210 2 143 1 338 28 279 2 165 1 215 1 190 1 330 4 194 8 345 1 223 4 312 1 291 4 151 5 180 1 247 1 131 1 314 15 250 1 108 4 106 4 349 1 109 7 224 1 252 4 253 2 22 4 296 1 
228 4 186 1 138 1 324 1 301 1 57 1 338 7 279 2 330 2 194 4 223 1 291 2 151 1 314 3 250 1 108 2 106 1 109 1 224 1 252 2 253 1 22 1 
228 4 138 3 274 3 312 1 151 1 180 2 338 7 247 1 314 3 215 3 349 3 109 6 22 1 
228 4 186 1 138 1 324 1 301 1 57 1 338 7 279 2 330 2 194 4 223 1 291 2 151 1 314 3 250 1 108 2 106 1 109 1 224 1 252 2 253 1 22 1 
330 2 228 4 138 2 274 1 194 4 312 1 151 1 291 2 210 1 180 1 247 1 338 8 314 4 165 1 108 2 215 1 109 3 349 1 252 2 22 1 
164 1 
67 1 330 1 138 1 228 2 274 1 194 2 301 1 223 1 291 1 151 1 338 4 314 2 108 1 106 1 109 2 252 1 22 1 
138 1 228 6 274 1 345 1 301 2 223 2 57 1 151 2 338 12 279 2 314 6 106 2 109 2 224 1 253 2 22 2 
228 12 138 5 274 4 276 1 301 2 210 2 338 23 279 2 165 1 215 2 330 2 194 4 345 1 223 2 312 1 151 3 291 2 180 1 247 1 314 11 106 2 181 1 108 2 349 2 109 9 224 1 252 2 253 2 22 3 
338 1 228 1 279 1 
338 1 314 1 253 1 
67 1 330 1 228 3 138 2 274 1 194 2 301 1 223 1 291 1 151 1 7 1 338 6 314 3 108 1 106 1 109 3 252 1 22 1 
228 11 138 2 274 2 324 1 301 4 57 1 143 1 338 22 279 2 190 1 330 1 194 2 345 1 223 4 291 1 151 4 131 1 314 11 250 1 108 1 106 4 109 4 224 1 252 1 253 2 22 4 296 1 
228 3 138 1 274 1 151 1 247 1 338 6 314 3 215 1 349 1 109 2 22 1 
330 1 138 1 228 2 274 1 276 1 194 2 312 1 210 1 291 1 180 1 338 3 314 1 215 1 108 1 109 2 349 1 252 1 
24 1 330 1 138 3 228 5 274 2 194 2 324 1 291 1 151 2 338 10 247 1 314 5 108 1 215 2 349 2 109 5 252 1 22 2 
330 1 274 1 194 2 324 1 223 1 291 1 151 1 338 2 314 2 108 1 109 1 252 1 
330 1 138 1 228 2 274 1 194 2 324 1 301 1 223 1 291 1 151 1 338 4 314 2 108 1 106 1 109 2 252 1 22 1 
330 3 186 1 228 2 138 1 274 1 276 1 194 6 324 1 210 1 291 3 338 3 314 1 108 3 215 1 349 1 109 2 252 3 
24 1 67 1 228 8 186 1 138 3 274 3 276 1 324 1 57 1 210 1 338 15 279 1 215 2 330 4 194 8 312 1 151 2 105 1 291 4 180 1 247 1 314 7 108 4 109 6 349 2 252 4 253 1 22 2 
146 1 78 1 229 1 59 1 16 1 98 1 281 1 
146 1 275 1 78 1 38 1 229 1 16 1 33 1 249 1 59 1 96 1 98 1 281 1 
240 1 164 1 191 1 30 1 327 1 
261 1 146 2 240 1 335 1 298 1 16 1 40 1 30 1 80 1 93 1 179 1 152 1 59 1 191 1 281 2 327 1 350 1 303 1 
335 1 298 1 204 1 30 1 140 1 70 1 93 2 73 1 59 2 191 1 281 2 303 2 240 1 146 2 261 2 16 1 195 1 40 1 80 3 179 1 152 1 44 1 350 1 
298 1 204 1 30 2 140 1 70 1 337 1 93 2 73 1 59 2 191 2 281 2 303 2 240 2 146 2 261 2 242 1 16 1 195 1 40 1 80 3 179 1 152 1 44 1 350 1 
298 1 255 1 30 3 140 1 56 1 234 1 32 1 337 1 93 1 237 1 191 3 327 1 122 1 303 1 240 3 285 2 265 1 195 1 80 4 64 1 333 2 44 1 350 1 
240 3 285 2 298 1 265 1 195 1 255 1 159 1 140 1 30 3 56 1 80 4 234 1 337 1 93 1 333 2 237 1 44 1 191 3 327 1 350 1 122 1 303 1 
240 1 298 1 191 1 30 1 350 1 305 1 
240 7 263 1 52 1 193 1 298 2 331 1 125 1 30 6 310 1 127 1 128 1 80 3 71 1 93 2 191 7 302 1 21 1 327 2 350 3 305 1 303 1 
202 1 88 1 228 3 138 2 273 2 335 1 298 1 160 1 205 1 30 1 93 1 338 6 165 1 215 1 59 1 121 1 191 1 326 1 281 2 303 1 306 1 146 2 261 1 240 1 330 2 194 4 16 2 175 1 40 1 128 1 80 1 312 1 151 1 291 2 180 1 179 1 247 1 152 1 314 3 108 2 109 2 349 1 20 2 252 2 85 1 22 1 350 1 
268 1 
240 1 298 1 101 1 30 1 310 1 56 1 80 1 93 1 213 1 191 1 350 2 305 1 303 1 
240 4 298 1 321 1 30 4 128 1 80 1 197 1 337 1 93 1 238 1 191 4 327 1 350 1 
240 2 193 1 298 1 331 1 140 1 30 2 80 1 93 1 182 1 191 2 293 1 350 2 283 1 303 1 
240 1 298 1 191 1 206 1 30 1 154 1 327 1 350 1 
240 2 263 1 298 1 30 2 128 1 80 1 93 1 269 1 191 2 302 1 350 1 
240 5 52 1 298 2 321 1 140 1 30 4 128 1 127 1 80 3 197 1 93 2 238 1 191 5 302 1 327 1 350 2 
240 5 298 2 321 1 140 1 30 4 128 1 287 1 127 1 80 3 197 1 93 2 238 1 191 5 302 1 327 1 350 2 
261 1 146 2 240 1 242 1 298 1 16 1 40 1 30 1 80 1 93 1 179 1 152 1 59 1 191 1 281 2 327 1 350 1 303 1 
240 1 193 1 298 1 331 1 140 1 30 1 310 1 80 1 93 1 191 1 21 1 350 2 303 1 
203 1 148 1 16 1 63 1 18 1 
203 1 299 1 204 2 255 1 70 1 73 1 10 1 59 1 239 1 281 1 218 1 339 1 146 1 261 1 285 1 148 1 63 1 268 1 81 1 18 1 130 1 152 1 315 1 333 1 271 1 135 1 
146 1 203 1 113 1 59 1 148 1 11 1 196 1 281 1 63 1 
271 1 148 1 135 1 
164 1 
262 1 74 1 116 1 320 1 185 1 55 1 272 1 
126 1 272 1 162 1 
262 1 137 1 116 1 320 1 55 1 208 1 288 1 74 1 185 3 272 3 145 2 99 1 
262 1 74 1 172 1 116 1 12 1 320 1 185 2 55 1 272 2 
27 1 320 1 55 1 221 1 313 1 74 1 82 1 185 1 272 1 13 1 99 1 
74 1 116 1 320 1 185 1 55 1 272 1 99 1 
262 1 116 2 320 1 185 1 55 1 272 1 99 1 
74 1 116 1 320 2 167 1 139 1 185 2 55 2 199 1 272 2 99 1 
262 1 156 1 116 1 320 1 55 1 74 2 82 1 12 2 185 3 272 3 256 1 99 1 112 1 
320 1 185 1 55 1 272 1 206 1 332 1 99 1 
262 1 74 2 172 1 116 1 82 1 124 1 12 2 320 2 185 4 55 2 272 4 256 1 99 1 
262 1 74 1 116 1 320 1 185 1 55 1 272 1 99 1 
262 2 137 1 116 2 320 1 55 1 288 1 270 1 74 3 82 1 12 2 185 4 272 4 145 1 256 1 
262 1 319 1 116 1 320 1 55 1 198 1 74 1 12 1 185 2 226 1 272 2 99 1 
262 1 137 1 116 1 320 1 55 1 288 2 74 1 185 3 272 3 145 2 99 1 100 1 
74 2 46 1 289 1 14 2 
320 1 266 1 185 1 55 1 272 1 99 1 
262 1 74 1 116 1 12 1 320 1 185 2 55 1 272 2 99 1 112 1 
297 1 
262 1 74 1 116 1 320 1 185 1 55 1 272 1 99 1 
262 1 116 1 320 1 55 1 74 1 12 1 185 3 272 3 145 1 99 1 112 1 
270 1 74 1 82 1 256 1 
74 1 116 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 90 306 297 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 90 306 297 282 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 90 306 297 (269,286) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 90 306 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 90 306 297 (269,286) (269,286) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (155,211) 83 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (155,211) 83 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (155,211) 9 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 90 129 156 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (155,211) 9 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 90 306 297 (269,286) (269,286) 4 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 90 306 297 282 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 90 298 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 90 298 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 90 298 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 90 298 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 90 298 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 178 2 7 1 94 1 309 9 271 1 58 9 274 1 276 1 105 2 112 1 280 4 238 1 192 1 119 2 197 2 120 1 324 1 163 2 200 3 23 1 329 2 168 1 169 1 170 2 262 1 220 1 86 6 
44 1 178 2 7 1 94 1 309 9 271 1 58 9 274 1 105 2 276 1 112 1 280 4 238 1 192 1 119 2 197 2 120 1 324 1 163 2 200 3 23 1 329 2 168 1 169 1 170 2 262 1 220 1 86 6 
44 1 178 2 7 1 94 1 309 10 271 1 58 10 274 1 105 2 276 1 112 1 280 5 238 1 192 1 119 2 197 2 120 1 324 1 163 2 200 4 23 1 329 2 168 1 169 1 170 2 262 1 220 1 86 7 
44 1 178 1 7 1 94 1 309 7 271 1 58 7 274 1 105 2 276 1 280 3 238 1 192 1 119 2 197 2 120 1 324 1 163 2 200 2 23 1 329 2 168 1 169 1 170 2 262 1 220 1 86 4 
44 1 197 1 178 2 324 1 163 1 200 1 7 1 94 1 309 4 329 1 58 4 169 1 274 1 170 1 105 1 112 1 280 2 86 3 
192 1 44 1 119 1 120 1 197 1 163 1 7 1 94 1 309 2 125 1 329 1 58 2 257 1 169 1 170 1 108 1 
44 1 119 1 200 1 7 1 94 1 309 3 329 2 58 3 169 1 170 2 220 1 280 1 86 1 
44 1 119 1 197 1 178 2 265 1 324 1 163 1 200 3 7 1 94 1 309 9 329 2 271 1 100 1 58 9 169 1 274 1 170 2 105 1 220 1 112 1 238 1 280 4 86 7 
44 1 119 1 197 1 178 2 265 1 324 1 163 1 200 3 7 1 94 1 309 9 329 2 271 1 100 1 58 9 169 1 274 1 170 2 105 1 220 1 112 1 238 1 280 4 86 7 
158 1 139 1 273 1 
139 1 233 1 313 2 
90 1 306 1 297 1 
90 1 306 1 297 1 282 1 
90 1 306 1 297 1 286 1 
240 1 158 1 242 1 172 1 139 1 46 1 68 1 50 1 308 1 255 1 78 1 13 1 299 1 151 1 
90 1 306 1 
135 1 78 1 68 1 248 1 70 1 
158 1 139 1 243 1 78 2 68 2 248 1 258 1 70 1 
78 1 68 1 248 1 
90 1 306 1 297 1 286 1 78 1 68 1 70 1 269 1 
139 1 
158 1 331 1 139 1 78 2 68 2 248 1 258 1 70 1 
158 1 304 1 118 1 175 1 139 1 48 1 323 2 68 5 267 1 248 2 164 2 70 2 328 1 96 1 132 1 78 5 258 1 107 1 60 2 
318 1 176 1 
318 1 176 1 
209 1 25 1 
209 1 25 1 
209 1 25 1 
318 1 176 1 26 1 
318 1 176 1 26 1 
318 1 176 1 316 1 
318 2 211 1 209 1 176 2 61 1 25 1 
318 1 176 1 26 1 
318 1 176 1 245 1 
318 1 176 1 245 1 
318 1 176 1 245 1 
318 2 139 1 3 1 176 2 195 3 196 1 92 1 68 2 289 2 293 1 311 2 207 2 11 1 78 2 80 2 14 1 109 2 190 1 155 1 
318 1 90 1 311 1 11 1 195 1 176 1 78 1 80 1 68 1 289 1 109 1 
197 1 163 1 105 1 
197 1 163 1 108 1 
294 1 130 1 163 3 105 2 108 1 237 1 
294 1 163 2 105 1 108 1 237 1 82 1 
294 2 163 2 105 1 108 1 237 1 
41 1 139 2 175 3 230 1 268 1 97 1 147 1 233 1 313 3 60 1 107 1 188 2 64 1 241 1 158 1 319 1 323 1 288 1 325 1 68 5 248 1 164 1 70 4 71 1 328 2 126 1 74 2 213 1 78 5 258 1 88 1 87 2 
225 1 41 2 139 5 175 8 143 1 230 3 268 3 97 2 185 1 272 5 233 3 313 9 104 1 107 1 60 2 241 3 319 4 158 1 323 2 121 1 325 3 68 9 247 1 248 6 164 2 70 7 328 6 126 3 74 6 132 1 213 1 135 5 78 9 258 1 87 6 
41 1 139 3 175 3 230 1 268 1 97 1 147 1 233 2 313 4 60 1 188 1 241 1 158 1 319 1 323 1 325 1 68 3 164 1 70 2 71 1 328 2 126 1 74 2 132 1 78 3 87 2 
225 1 41 1 139 4 175 5 230 2 268 2 97 1 147 1 185 1 233 3 313 7 60 1 188 2 241 2 158 1 319 2 323 1 121 1 325 2 68 4 164 1 71 1 70 3 328 4 126 2 74 4 132 1 78 4 87 4 
284 1 18 1 273 1 67 1 93 1 
284 1 59 1 
30 1 
284 1 259 1 
263 1 284 3 67 2 37 1 259 1 53 1 
284 1 259 1 53 1 
115 1 284 1 
117 1 320 1 287 1 123 1 21 1 6 2 326 1 202 1 24 1 131 1 296 1 149 1 110 1 
117 1 320 1 287 1 123 1 21 1 6 2 326 1 202 1 24 1 131 1 296 1 149 1 110 1 
117 1 320 1 287 1 123 1 21 1 6 2 326 1 250 1 202 1 24 1 296 1 131 1 149 1 110 1 
0 1 224 1 2 1 6 9 268 3 230 3 55 1 312 2 231 12 12 1 57 1 103 1 149 2 110 4 241 3 320 25 117 2 287 2 161 1 123 5 325 3 21 2 326 1 249 1 24 1 202 13 126 3 296 1 131 2 34 3 260 1 38 4 84 1 
224 1 117 1 320 3 287 1 123 1 226 1 21 1 6 3 24 1 202 2 312 4 296 1 231 1 131 1 57 2 103 2 149 1 216 1 260 2 110 2 84 2 
44 1 177 1 7 1 94 1 228 1 309 2 186 2 58 2 105 1 108 1 63 1 116 1 119 1 197 1 163 2 69 1 292 1 203 2 72 1 251 1 329 1 130 1 208 1 295 1 332 1 31 2 333 1 169 1 334 1 170 1 86 1 
7 1 94 1 228 1 309 3 8 1 186 1 58 3 105 1 108 1 283 1 116 1 119 1 197 1 69 1 163 2 292 1 203 1 72 1 329 1 130 1 208 1 295 1 332 1 31 1 77 1 333 1 169 1 334 1 170 1 86 2 
7 1 94 1 228 1 309 2 8 1 186 1 58 2 108 1 105 1 116 1 119 1 197 1 163 2 292 1 203 1 72 1 208 1 295 1 130 1 31 1 77 1 333 1 169 1 334 1 86 2 
266 1 309 1 186 1 58 1 315 1 283 1 239 1 284 1 119 2 292 2 203 1 72 1 329 1 208 2 134 1 31 1 167 1 32 1 333 2 334 1 219 1 170 1 259 1 
44 1 228 1 309 1 186 1 58 1 105 1 108 1 63 1 116 1 119 1 197 1 69 1 163 2 292 1 203 1 72 1 329 1 208 1 295 1 130 1 332 1 31 1 77 1 333 1 334 1 170 1 
91 1 
89 1 172 1 175 2 181 1 97 1 10 2 186 2 13 1 107 1 111 1 189 2 16 1 284 1 17 2 194 4 203 2 32 1 31 2 217 1 299 1 39 1 42 2 43 1 139 2 46 1 307 2 50 1 308 1 146 2 313 2 233 2 151 1 236 1 60 1 239 1 240 1 158 1 159 1 242 1 65 2 323 1 68 5 248 6 164 1 328 2 72 1 165 1 73 1 255 1 166 1 167 2 78 5 258 3 334 1 259 1 
240 1 16 1 172 1 159 1 242 1 43 1 194 2 46 1 307 1 68 3 248 2 308 1 50 1 165 1 255 1 331 1 78 3 217 1 13 1 299 1 258 1 151 1 
172 1 43 1 46 1 139 1 50 1 308 1 13 1 151 1 16 1 240 1 242 1 159 1 158 1 194 3 65 1 68 3 248 1 165 1 255 1 331 1 78 3 299 1 217 1 258 1 
172 1 43 1 46 1 139 1 307 1 50 1 308 1 146 1 13 1 151 1 16 1 240 1 242 1 159 1 158 1 194 3 65 1 68 3 248 2 165 1 255 1 331 1 78 3 299 1 217 1 258 1 
89 1 172 1 175 1 10 2 13 1 15 1 107 1 111 1 189 2 16 1 194 6 17 2 198 1 20 1 299 1 217 1 43 1 42 2 46 1 139 5 307 4 308 1 50 1 146 4 233 2 151 1 60 1 240 1 159 1 242 1 158 5 65 4 323 1 68 5 248 7 164 1 165 1 327 1 328 1 255 1 330 1 331 1 78 5 258 3 
89 1 172 1 175 1 10 2 13 1 107 1 111 1 189 2 16 1 194 4 17 2 299 1 217 1 43 1 42 2 46 1 139 2 307 2 308 1 50 1 146 2 233 2 313 2 151 1 60 1 236 1 240 1 242 1 159 1 158 1 323 1 65 2 68 4 248 4 164 1 165 1 328 1 255 1 78 4 258 2 
89 1 172 1 42 2 43 1 139 1 175 1 46 1 307 2 50 1 308 1 146 2 10 2 233 2 13 1 151 1 107 1 60 1 111 1 189 2 16 1 240 1 158 1 242 1 159 1 17 2 194 4 65 2 323 1 68 4 20 1 248 4 164 1 328 1 165 1 327 1 255 1 330 1 78 4 299 1 217 1 258 2 
89 1 172 1 42 2 43 1 139 1 175 1 46 1 307 2 50 1 308 1 146 2 10 2 233 2 13 1 151 1 107 1 60 1 111 1 189 2 16 1 240 1 158 1 242 1 159 1 17 2 194 4 65 2 323 1 68 4 20 1 248 4 164 1 328 1 165 1 327 1 255 1 330 1 78 4 299 1 217 1 258 2 
137 2 172 1 43 1 139 1 173 2 175 1 46 1 307 2 50 1 308 1 146 2 10 2 313 2 13 1 151 1 107 1 60 1 111 1 16 1 240 1 158 1 242 1 159 1 17 2 194 4 65 2 323 1 68 4 20 1 248 4 164 1 328 1 165 1 255 1 133 1 78 4 299 1 217 1 79 1 258 2 335 1 
89 1 172 1 42 2 43 1 139 1 175 1 46 1 307 3 50 1 308 1 146 3 10 2 233 2 13 1 151 1 60 1 107 1 111 1 189 2 16 1 240 1 158 1 242 1 159 1 17 2 194 5 323 1 198 1 65 3 68 4 20 1 248 5 164 1 328 1 165 1 327 1 330 1 255 1 78 4 299 1 217 1 258 2 
89 1 172 1 42 2 43 1 139 1 175 1 46 1 307 3 50 1 308 1 146 3 10 2 233 2 13 1 151 1 60 1 107 1 111 1 189 2 16 1 240 1 158 1 242 1 159 1 17 2 194 5 323 1 198 1 65 3 68 4 20 1 248 5 164 1 328 1 165 1 327 1 330 1 255 1 78 4 299 1 217 1 258 2 
137 2 172 1 43 1 139 1 173 2 175 1 46 1 307 2 50 1 308 1 146 2 10 2 313 2 13 1 151 1 236 1 60 1 107 1 111 1 16 1 240 1 158 1 159 1 242 1 17 2 194 4 65 2 323 1 68 4 248 4 164 1 328 1 165 1 255 1 78 4 217 1 299 1 258 2 335 1 
1 2 138 1 305 1 226 1 6 6 268 3 230 3 144 1 98 1 55 1 312 4 231 10 57 2 103 2 110 3 241 3 320 19 161 1 246 1 123 3 325 3 201 1 202 9 126 3 34 1 136 2 260 2 171 1 38 2 84 2 
1 1 138 1 224 2 45 1 305 1 226 1 6 4 230 2 268 3 270 1 144 2 98 2 312 6 231 12 57 3 103 3 152 1 110 2 241 3 320 26 161 2 122 1 246 1 123 2 325 2 202 14 126 3 254 1 75 1 34 2 136 4 260 3 38 2 84 3 
1 1 6 7 268 4 270 1 183 1 98 1 103 3 110 3 287 1 122 1 123 4 202 17 24 1 126 4 296 1 34 3 136 4 38 4 138 1 224 1 305 1 45 1 226 1 230 4 144 2 55 1 312 6 231 19 57 3 149 1 152 1 241 4 320 36 161 3 325 4 246 1 254 1 75 1 260 3 171 1 84 3 
1 1 6 7 268 4 270 1 98 1 183 1 103 4 110 4 287 1 122 1 123 3 202 17 24 1 126 4 296 1 34 3 136 4 38 4 138 1 224 2 305 1 45 1 226 1 230 3 144 2 55 1 312 8 231 16 57 4 149 1 152 1 241 4 320 33 161 3 325 3 246 1 254 1 75 1 260 4 171 1 84 4 
1 1 138 1 224 1 45 1 305 1 226 1 6 13 268 7 230 7 270 1 144 1 98 1 55 2 312 4 231 23 57 2 103 2 149 1 152 1 110 6 279 2 241 7 320 47 287 1 161 2 122 1 246 1 123 7 325 7 24 1 202 24 126 7 254 1 75 1 296 1 34 4 136 4 260 2 38 4 84 2 
318 1 28 1 311 1 176 1 92 1 80 1 289 1 109 1 190 1 155 1 
174 1 316 1 
318 1 311 1 256 1 176 1 244 1 264 1 80 1 289 1 109 1 
318 1 139 1 3 1 176 1 195 2 196 1 92 1 68 1 289 1 293 1 311 1 207 1 11 1 78 1 80 1 109 1 190 1 155 1 
318 1 139 1 3 1 176 1 195 2 196 1 92 1 68 1 289 1 293 1 311 1 207 1 11 1 78 1 80 1 109 1 190 1 155 1 
318 1 139 1 3 1 176 1 195 2 196 1 92 1 68 1 289 1 293 1 311 1 207 1 11 1 78 1 80 1 109 1 190 1 155 1 
211 1 26 1 83 1 
211 1 26 1 83 1 
9 1 245 1 
9 1 211 1 245 1 
157 1 76 1 
318 1 90 1 64 1 157 1 319 1 174 1 195 1 176 1 288 1 68 1 289 1 70 1 293 1 311 1 129 1 207 1 76 1 78 1 80 1 316 1 109 1 156 1 
26 1 83 1 
9 1 211 1 245 1 
302 1 177 2 50 2 184 1 312 2 231 1 57 1 186 2 103 1 13 2 150 1 317 1 284 1 320 2 322 1 66 1 124 1 72 1 203 2 202 1 206 1 255 2 210 1 31 2 214 1 81 1 334 1 259 1 260 1 261 1 84 1 
303 1 116 1 197 1 163 2 72 1 203 2 251 1 130 1 295 1 332 1 77 1 31 2 186 2 333 1 334 1 105 1 108 1 153 1 221 1 
303 1 116 1 197 1 163 2 203 1 72 1 130 1 295 1 332 1 77 1 31 1 186 1 333 1 36 1 334 1 105 1 108 1 
284 1 291 1 72 1 203 1 167 1 31 1 186 1 32 1 333 1 334 1 219 1 259 1 221 1 239 1 
303 1 116 1 197 1 163 2 203 1 72 1 130 1 295 1 332 1 77 1 31 1 186 1 333 1 334 1 105 1 108 1 153 1 221 1 
102 1 
158 1 304 1 175 1 139 1 48 1 273 1 328 1 
89 1 42 1 175 1 139 2 233 1 313 1 60 1 107 1 189 1 158 1 323 1 68 1 248 1 164 1 328 1 78 1 258 1 
175 9 268 2 95 2 97 2 186 3 187 2 107 4 106 2 114 1 115 2 284 10 285 1 22 1 203 3 27 2 128 2 126 2 31 3 37 1 39 1 222 2 304 1 46 2 139 8 48 1 230 2 53 3 145 2 310 1 232 1 313 12 233 6 59 3 60 4 154 2 62 2 241 2 158 2 323 4 67 2 68 5 325 2 248 5 164 4 72 3 328 8 251 1 74 6 167 1 78 5 334 4 258 3 259 3 87 6 
45 1 175 13 139 7 227 1 268 4 230 4 270 1 95 5 97 1 56 1 55 1 313 13 233 8 106 1 152 1 60 2 107 2 279 1 241 4 158 2 161 1 323 2 122 1 68 1 325 4 248 1 164 2 328 8 126 4 74 8 254 1 78 1 34 2 258 1 39 1 38 2 87 8 
90 1 306 1 175 2 4 1 286 1 323 1 287 1 68 1 164 1 269 1 230 1 328 1 268 1 95 2 330 1 297 1 78 1 149 1 107 1 60 1 40 1 
158 1 304 1 139 1 175 1 323 1 48 1 164 1 328 1 107 1 60 1 
241 2 139 5 175 5 325 2 268 2 328 5 230 2 95 2 126 2 74 5 313 10 233 5 106 1 154 1 87 5 
158 1 139 1 78 1 68 1 248 1 258 1 
175 2 181 1 51 1 53 1 97 2 232 1 186 4 234 1 60 2 107 1 239 1 193 1 284 2 285 2 19 1 323 2 68 3 199 1 248 4 164 2 72 2 203 4 328 2 73 1 253 1 132 1 31 4 167 2 32 1 78 3 334 3 258 2 259 2 39 2 
90 1 306 1 297 1 282 1 
158 2 175 1 139 4 323 1 164 1 328 2 97 1 74 2 131 1 233 2 313 4 107 1 60 1 39 1 87 2 
289 1 277 1 109 1 
289 1 277 1 109 1 
76 1 92 1 289 1 109 1 113 1 
289 1 277 1 109 1 
179 1 289 1 109 1 
179 1 289 1 109 1 
179 1 289 1 109 1 
289 1 109 1 
318 1 176 1 
224 1 320 2 287 1 123 1 6 2 202 1 24 1 312 4 231 1 296 1 57 2 103 2 149 1 260 2 110 1 84 2 
296 1 287 1 273 1 149 1 6 1 110 1 24 1 
301 1 241 1 320 4 325 1 123 1 6 2 230 1 268 1 202 2 126 1 312 2 231 2 57 1 103 1 260 1 110 1 84 1 
241 1 320 7 161 1 325 1 123 1 6 2 230 1 202 3 268 1 126 1 55 1 231 4 34 1 110 1 38 2 
224 2 4 1 180 1 6 11 229 1 230 3 268 3 55 1 312 4 231 14 57 2 103 2 149 4 110 6 279 1 241 2 320 27 287 4 325 2 123 5 24 1 202 13 126 2 131 1 296 1 34 2 260 2 38 2 40 1 84 2 
320 1 231 1 38 1 
320 1 34 1 202 1 
301 1 241 1 320 6 123 1 325 1 6 3 268 1 202 3 230 1 126 1 312 2 231 3 57 1 103 1 260 1 110 2 84 1 154 1 
45 1 226 1 6 2 268 2 230 2 270 1 312 2 231 6 57 1 103 1 152 1 110 1 241 2 320 12 161 1 122 1 123 1 325 2 202 6 126 2 254 1 34 1 260 1 38 1 84 1 
320 6 287 1 123 1 6 2 268 1 202 3 230 1 231 3 149 1 110 1 40 1 
224 1 4 1 6 6 229 1 268 1 230 1 312 2 231 6 57 1 103 1 149 3 110 3 320 12 287 3 123 3 24 1 202 6 296 1 131 1 260 1 84 1 40 1 
320 10 4 1 287 2 226 1 123 2 6 5 202 5 268 2 230 2 312 2 231 5 57 1 103 1 149 2 260 1 110 3 84 1 40 1 
320 2 226 1 123 1 6 1 268 1 202 2 126 1 312 2 57 1 103 1 260 1 84 1 
241 1 320 4 325 1 226 1 123 1 6 2 230 1 268 1 202 2 126 1 312 2 231 2 57 1 103 1 260 1 110 1 84 1 
224 1 320 3 287 1 226 1 123 1 6 2 229 1 202 1 312 6 231 2 57 3 103 3 149 1 260 3 171 1 110 1 84 3 
0 1 301 1 224 2 2 1 226 1 6 11 229 1 268 4 230 4 55 1 312 10 231 15 12 1 57 5 103 5 149 3 110 6 241 3 320 28 287 3 161 1 123 5 325 3 24 1 202 13 126 3 296 1 34 3 260 5 171 1 38 4 40 1 84 5 
320 2 287 1 161 1 226 1 6 1 24 1 202 1 312 2 296 1 231 1 57 1 103 1 34 1 149 1 260 1 152 1 110 1 38 1 84 1 
301 1 226 1 6 2 268 1 55 1 312 4 231 2 57 2 103 2 149 1 152 1 110 1 241 1 320 5 287 1 161 1 123 1 24 1 202 3 126 1 296 1 34 1 260 2 38 2 84 2 
301 1 224 1 45 1 226 1 6 3 268 2 230 2 270 1 312 6 231 7 57 3 103 3 149 1 152 1 110 2 241 2 320 13 287 1 161 1 122 1 123 1 325 2 24 1 202 6 126 2 254 1 296 1 34 1 260 3 38 1 84 3 
301 1 224 1 45 1 226 1 6 4 268 2 230 1 270 1 312 6 231 4 57 3 103 3 149 1 152 1 110 2 241 2 320 11 287 1 161 1 122 1 123 2 325 1 24 1 202 7 126 2 254 1 296 1 34 1 260 3 38 1 84 3 
320 2 287 1 161 1 226 1 6 1 24 1 202 1 312 2 296 1 231 1 57 1 103 1 34 1 149 1 260 1 152 1 110 1 38 1 84 1 
45 1 226 1 6 2 268 2 230 2 270 1 312 2 231 6 57 1 103 1 152 1 110 1 241 2 320 12 161 1 122 1 123 1 325 2 202 6 126 2 254 1 34 1 260 1 38 1 84 1 
301 1 224 2 45 1 226 1 6 4 268 2 230 1 270 1 312 8 231 5 57 4 103 4 149 1 152 1 110 2 241 2 320 12 287 1 161 1 122 1 123 2 325 1 24 1 202 7 126 2 254 1 296 1 34 1 260 4 38 1 84 4 
224 2 45 1 226 1 6 6 268 3 230 2 270 1 312 8 231 7 57 4 103 4 152 1 110 3 241 3 320 16 161 1 122 1 123 3 325 2 202 9 126 3 254 1 34 1 260 4 171 1 38 1 84 4 
320 2 287 2 123 2 6 4 24 1 202 1 296 2 231 1 149 2 110 2 
224 2 45 1 226 1 6 3 268 2 230 1 270 1 312 8 231 5 57 4 103 4 149 1 152 1 110 2 241 2 320 12 287 1 161 1 122 1 123 1 325 1 24 1 202 7 126 2 254 1 296 1 34 1 260 4 171 1 38 1 84 4 
255 1 242 1 212 1 162 1 13 1 50 1 204 1 
242 1 5 1 47 1 162 1 290 1 50 1 204 1 205 1 255 1 212 1 13 1 235 1 
284 1 32 1 273 1 186 1 31 1 167 1 334 1 259 1 72 1 203 1 239 1 
90 1 298 1 
90 1 298 1 
90 1 298 1 
222 1 115 1 158 1 284 4 139 1 46 1 285 1 67 1 68 2 248 1 203 3 72 1 53 1 252 1 167 1 31 3 186 3 33 1 78 2 334 1 259 1 59 1 85 1 
222 1 62 1 115 1 158 1 284 4 139 1 46 1 285 1 67 1 68 2 248 1 203 3 72 1 53 1 167 1 31 3 186 3 78 2 334 1 259 1 59 1 85 1 
186 1 31 1 334 1 49 1 72 1 203 1 
284 3 193 1 321 1 177 1 140 1 49 1 203 7 72 2 53 1 251 1 77 1 167 2 31 6 186 7 215 1 37 1 334 3 317 1 234 1 259 2 278 1 
90 1 298 1 
304 1 175 1 139 1 46 1 48 1 145 1 186 1 232 1 59 1 60 2 107 2 187 1 62 1 158 1 284 2 323 2 67 1 68 3 248 2 164 2 70 1 328 1 203 1 27 1 31 1 167 1 78 3 258 1 
284 2 67 1 49 1 203 2 72 1 53 1 251 1 310 1 31 2 186 2 37 1 334 2 259 1 
284 1 203 4 72 1 251 1 29 1 167 1 31 4 186 4 32 1 334 1 259 1 85 1 239 1 
284 1 193 1 285 1 19 1 51 1 203 2 72 1 53 1 148 1 31 2 186 2 334 2 234 1 259 1 
116 1 197 1 186 1 31 1 167 1 163 1 334 1 108 1 72 1 203 1 
184 1 284 1 77 1 186 2 31 2 334 1 259 1 317 1 72 1 203 2 251 1 
284 3 285 1 321 1 203 5 72 2 251 1 29 1 32 1 167 1 31 4 186 5 215 1 334 2 317 1 259 2 239 1 
223 1 284 3 285 1 203 5 72 2 251 1 29 1 32 1 167 1 31 4 186 5 215 1 334 2 317 1 259 2 239 1 
90 1 298 1 
284 1 193 1 285 1 140 1 203 1 72 1 53 1 31 1 186 1 37 1 334 2 234 1 259 1 
273 1 169 1 7 1 94 1 
329 1 58 1 169 1 7 1 170 1 94 1 309 1 
119 1 58 1 292 1 
44 1 160 1 120 2 142 1 7 1 94 1 309 3 329 1 58 3 35 1 169 1 170 1 
329 1 58 2 178 1 169 1 7 1 170 1 94 1 309 2 86 1 
329 1 44 1 197 1 58 1 324 1 163 1 170 1 105 1 280 1 309 1 
329 1 44 1 58 1 7 1 170 1 94 1 309 1 
329 1 44 1 58 1 169 1 7 2 170 1 309 1 
44 1 7 1 94 1 309 2 54 1 329 2 99 1 58 2 275 1 170 2 
44 1 200 1 7 1 94 1 309 3 329 1 271 1 58 3 169 1 170 1 238 1 280 1 86 2 
44 1 197 1 163 2 7 1 94 1 309 2 329 1 130 1 101 1 58 2 169 1 170 1 108 1 105 1 86 1 
44 1 178 1 200 1 7 1 94 1 309 4 329 2 58 4 169 1 170 2 112 1 280 1 86 2 
329 1 44 1 58 1 169 1 7 1 170 1 94 1 309 1 
160 1 120 1 200 1 7 2 94 2 309 4 127 1 329 1 58 4 35 1 169 2 170 1 280 1 86 2 
44 1 265 1 7 1 94 1 309 2 329 1 58 2 169 1 218 1 170 1 281 1 86 1 
160 1 44 1 120 2 141 1 7 1 94 1 309 3 329 1 58 3 35 2 169 1 170 1 
191 1 300 1 94 2 52 2 
329 1 44 1 58 1 314 1 170 1 309 1 
329 1 271 1 44 1 58 2 169 1 7 1 170 1 94 1 309 2 86 1 
182 1 
329 1 44 1 58 1 169 1 7 1 170 1 94 1 309 1 
329 1 271 1 44 1 120 1 58 3 169 1 7 1 170 1 94 1 309 3 86 1 
58 1 200 1 309 1 280 1 86 1 
7 1 94 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (186,255) (186,255) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (186,255) (186,255) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (186,255) (186,255) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (186,255) (186,255) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 151 (103,223,252,320) 40 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 151 329 (148,307) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 151 329 (148,307) 24 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 151 329 (148,307) 24 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) 146 17 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) 146 90 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (290,311) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) (314,319,358) 296 11 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (290,311) (290,311) 10 (241,299) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (290,311) (290,311) 10 (274,322) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (290,311) (290,311) (314,319,358) 146 49 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 151 (103,223,252,320) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 151 329 334 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 151 329 44 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 151 329 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
344 1 255 1 1 1 229 1 359 1 225 1 203 1 307 1 186 1 102 1 113 1 
344 1 255 1 1 1 229 1 359 1 225 1 203 1 307 1 186 1 102 1 113 1 
344 1 255 1 1 1 229 1 359 1 225 1 203 1 307 1 186 1 102 1 113 1 
344 1 255 1 1 1 229 1 359 1 225 1 203 1 307 1 186 1 102 1 113 1 
359 2 151 1 40 1 173 1 125 1 184 1 225 1 203 2 72 1 103 1 102 1 113 1 
190 1 1 1 39 1 266 1 353 1 225 1 331 1 203 2 165 1 344 1 359 2 173 1 239 1 215 1 113 1 102 1 
344 1 359 2 151 1 173 1 329 1 225 2 203 2 148 1 72 1 102 2 113 1 
24 1 252 1 151 1 329 1 225 2 184 1 203 3 72 1 344 1 359 3 173 1 148 1 113 1 102 2 
24 1 252 1 151 1 329 1 225 2 184 1 203 3 72 1 344 1 359 3 173 1 148 1 113 1 102 2 
0 1 5 1 270 1 
337 1 
197 2 149 1 288 1 57 2 158 2 42 2 121 2 6 2 
240 1 149 1 26 1 28 1 185 1 241 1 6 2 226 1 227 1 321 1 187 1 57 2 87 1 131 1 158 3 35 1 58 1 212 1 12 2 10 1 112 1 286 1 134 2 302 1 288 1 351 1 352 1 42 2 330 1 140 2 163 1 197 2 144 2 236 1 175 2 121 3 177 1 
209 1 197 1 149 1 57 1 158 1 42 1 121 1 99 1 62 1 6 1 
209 1 197 1 311 1 158 1 358 1 305 1 314 1 290 1 121 1 
209 1 197 1 311 1 57 1 158 1 42 1 314 1 290 1 121 1 6 1 
243 1 180 1 211 1 319 1 356 1 
180 1 172 1 211 1 313 1 319 2 356 2 5 1 270 1 
211 1 319 1 356 1 
149 1 180 1 42 1 319 1 356 1 6 1 209 1 197 1 57 1 158 1 59 1 121 1 99 1 62 1 
5 1 
180 1 211 1 313 1 193 1 319 2 356 2 5 1 270 1 
217 1 105 1 66 1 68 1 137 1 180 2 319 5 356 5 269 1 280 2 117 1 5 1 270 1 166 2 230 1 249 2 211 2 313 1 325 1 
0 1 288 1 
288 2 42 1 6 1 197 2 57 1 158 2 88 1 121 2 301 1 
51 1 300 1 
246 1 134 1 288 1 351 1 28 1 163 1 241 1 321 1 187 1 158 1 144 1 236 1 58 1 12 1 10 1 121 1 
288 1 265 1 162 1 42 1 305 1 114 1 6 4 197 5 57 4 158 5 121 5 13 2 159 1 301 1 
209 1 197 2 57 2 158 2 192 1 121 2 99 1 6 2 
134 1 351 1 265 1 28 1 163 1 241 1 6 1 321 1 197 1 187 1 57 1 236 1 158 2 144 1 58 1 261 1 10 1 12 1 121 2 13 1 
197 3 288 1 57 3 158 3 42 1 121 3 13 1 6 3 
209 1 197 1 57 1 158 1 121 1 99 1 6 1 
209 1 197 1 57 1 158 1 88 1 42 1 121 1 6 1 301 1 
265 1 42 1 290 1 17 1 6 2 209 1 197 2 311 1 57 2 158 2 314 1 121 2 146 1 13 1 301 1 
197 2 288 1 162 1 57 1 158 2 305 1 121 2 13 1 6 1 
265 1 290 1 6 1 209 1 197 1 311 1 57 1 158 1 90 1 314 1 121 1 146 1 13 1 
197 2 57 2 158 2 42 1 51 1 261 1 121 2 13 1 6 2 301 1 
134 1 288 1 351 1 28 1 163 1 241 1 321 1 187 1 158 1 144 1 236 1 58 1 12 1 10 1 121 1 
134 1 328 1 288 1 351 1 163 1 321 1 187 1 158 1 144 1 236 1 58 1 12 1 10 1 121 1 274 1 
240 1 26 1 51 2 30 1 226 1 56 1 300 2 87 2 35 2 347 1 212 1 63 1 302 1 352 1 136 1 191 1 233 1 140 4 332 1 119 1 21 1 175 2 100 1 
209 1 197 1 311 1 57 1 158 1 192 1 121 1 6 1 
285 1 154 1 
285 1 154 1 
200 1 204 1 
200 1 204 1 
200 1 204 1 
285 1 154 1 251 1 
279 1 285 1 154 1 
200 1 94 1 324 1 285 2 154 2 204 1 
285 1 154 1 251 1 
285 1 154 1 251 1 
285 1 154 1 343 1 
285 1 154 1 343 1 
285 1 154 1 343 1 
288 1 232 1 181 1 279 1 278 1 319 1 356 1 154 1 6 2 357 1 111 1 206 1 197 2 257 1 85 1 57 2 158 2 283 1 189 1 285 1 292 1 121 2 60 1 275 1 
94 1 278 2 340 1 319 2 267 1 154 2 356 2 5 1 357 2 248 1 208 2 257 2 283 2 189 1 285 2 60 3 91 1 160 1 349 1 
190 1 32 1 39 1 
190 1 39 1 331 1 
190 3 32 2 346 1 9 1 331 1 205 1 
190 2 32 1 155 1 9 1 331 1 205 1 
190 2 32 1 9 1 331 1 205 2 
180 4 181 1 27 2 319 5 52 1 280 1 30 1 5 2 254 1 56 1 206 1 228 1 80 2 82 1 230 2 211 1 66 1 68 3 191 1 303 1 139 1 116 2 71 1 356 5 270 1 166 1 249 1 337 3 313 1 238 1 292 1 100 1 
180 7 153 1 319 9 52 3 280 2 30 3 5 5 254 1 56 3 256 1 206 4 243 5 7 1 80 6 82 2 230 6 130 1 323 1 211 6 66 1 68 8 191 3 139 2 116 6 269 1 71 3 356 9 270 1 335 5 166 2 249 2 120 1 337 9 313 1 100 3 
180 2 27 1 319 3 280 1 52 1 5 3 30 1 56 1 206 1 82 1 80 2 230 2 68 3 191 1 303 1 139 1 116 2 71 2 356 3 269 1 270 1 166 1 249 1 337 4 238 1 100 1 
180 3 27 2 153 1 319 4 280 1 52 2 5 4 30 2 56 2 256 1 206 2 7 1 80 4 82 1 230 4 68 5 191 2 303 1 139 1 116 4 71 3 356 4 269 1 270 1 166 1 249 1 337 7 238 1 100 2 
350 1 0 1 351 1 
351 1 43 1 
183 1 
351 1 187 1 58 1 
351 1 287 1 
351 1 58 1 
350 2 351 3 187 1 58 1 245 1 326 1 
135 1 136 2 233 3 138 1 140 7 182 1 126 1 109 2 56 1 271 1 272 1 87 3 35 4 73 1 237 1 100 1 198 1 
135 1 136 2 233 3 138 1 140 7 182 1 126 1 109 2 56 1 271 1 272 1 87 3 35 4 73 1 237 1 100 1 198 1 
135 1 93 1 136 2 233 3 138 1 140 7 182 1 126 1 109 2 56 1 271 1 272 1 87 3 35 4 73 1 237 1 100 1 198 1 
26 1 50 1 182 2 126 2 109 3 52 3 30 3 56 4 87 15 35 16 212 1 135 1 302 1 352 1 136 5 138 2 233 10 191 3 140 31 304 1 219 1 167 1 271 5 272 1 73 2 237 1 175 2 176 4 45 1 100 4 198 1 316 3 101 1 293 1 
302 2 136 3 352 2 233 4 138 1 26 2 140 9 182 1 126 1 109 2 3 1 56 1 271 1 272 1 87 4 35 5 73 1 237 1 212 2 175 4 100 1 198 1 293 1 64 1 
75 1 277 1 108 1 184 1 225 1 203 2 321 1 344 1 32 1 346 1 12 1 215 1 263 1 113 1 134 1 190 2 39 1 331 1 165 1 333 1 235 1 169 1 144 1 359 2 236 1 173 1 273 1 174 1 222 1 102 1 
75 1 124 1 225 1 184 2 203 3 128 1 321 1 344 1 32 1 346 1 12 1 215 1 263 1 134 1 190 2 39 1 331 1 165 1 333 1 235 1 169 1 144 1 359 3 221 1 236 1 173 1 273 1 174 1 222 1 102 1 
75 1 124 1 184 2 203 2 128 1 321 1 344 1 32 1 346 1 12 1 215 1 263 1 134 1 190 2 39 1 331 1 165 1 333 1 235 1 144 1 359 2 236 1 173 1 174 1 222 1 
134 1 351 1 47 1 318 1 225 1 289 1 203 1 163 1 342 1 127 1 321 1 344 2 235 2 188 1 236 1 221 1 359 1 144 1 58 1 12 1 222 2 263 2 102 1 
190 2 75 1 134 1 39 1 277 1 124 1 331 1 225 1 203 1 333 1 321 1 344 1 235 1 32 1 169 1 346 1 236 1 359 1 144 1 273 1 12 1 174 1 222 1 263 1 113 1 102 1 
164 1 
199 1 107 1 319 2 342 1 280 1 127 1 296 1 321 1 209 1 230 1 158 1 58 1 211 2 11 1 12 2 134 2 351 1 66 1 68 1 139 1 305 1 163 2 290 1 356 2 166 1 197 1 311 1 249 1 358 1 236 1 144 2 313 1 314 1 145 1 121 1 338 1 315 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 193 1 305 1 319 2 290 1 356 2 296 1 209 1 197 1 311 1 158 1 358 1 211 1 313 1 11 1 314 1 145 1 121 1 
66 1 199 1 305 1 319 1 290 1 356 1 280 1 296 1 166 1 209 1 197 1 311 1 249 1 158 1 358 1 11 1 314 1 145 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
199 1 305 1 319 1 290 1 356 1 296 1 209 1 197 1 311 1 358 1 158 1 11 1 145 1 314 1 121 1 
66 1 199 1 305 1 319 1 290 1 356 1 280 1 296 1 166 1 209 1 197 1 311 1 249 1 158 1 358 1 11 1 314 1 145 1 121 1 
0 1 240 1 26 1 51 1 182 1 126 1 109 1 226 1 56 1 300 1 87 3 35 3 212 1 63 1 302 1 288 2 352 1 136 2 233 2 140 6 272 1 237 1 175 2 100 1 198 1 
240 1 48 1 26 2 51 8 52 2 30 2 226 2 300 8 56 1 209 1 31 1 81 1 131 1 87 5 35 6 212 2 302 2 288 1 352 2 136 1 233 2 191 1 140 11 304 1 355 1 271 1 118 1 74 1 175 4 176 2 100 2 316 2 
240 1 179 1 26 1 51 1 28 1 241 1 6 1 226 1 321 1 31 1 187 1 57 1 158 2 131 1 87 1 58 1 35 1 10 1 12 1 212 1 13 1 134 1 246 1 302 1 288 1 351 1 265 1 352 1 140 2 330 1 163 1 18 1 197 1 236 1 144 1 336 1 175 2 121 2 
240 3 201 1 202 2 51 7 109 1 241 2 52 2 6 1 321 2 56 3 57 1 158 3 58 2 12 1 212 3 10 2 13 1 112 2 288 2 330 1 163 1 175 6 121 3 26 3 182 1 28 2 126 1 30 2 226 3 300 7 31 1 187 2 87 10 131 1 35 10 134 1 302 3 265 1 351 2 136 4 352 3 233 6 191 2 140 20 194 2 309 2 197 1 271 2 272 1 144 1 236 2 97 1 237 1 147 2 100 3 198 1 
240 2 178 1 26 2 124 1 108 1 342 1 127 1 6 1 226 2 321 2 259 1 57 1 158 1 131 1 87 1 35 1 58 2 12 8 212 2 36 1 13 1 286 2 63 1 134 8 302 2 351 3 352 2 218 1 330 1 140 2 163 2 143 1 220 1 197 1 236 2 144 7 171 1 175 4 121 1 
240 1 26 1 51 1 52 1 30 1 6 1 226 1 300 1 56 1 31 1 57 1 158 1 87 2 35 1 212 1 213 1 301 1 302 1 136 1 352 1 233 1 191 1 42 1 140 3 197 1 175 2 121 1 100 1 
240 1 302 1 352 1 233 1 26 1 51 1 140 2 30 1 226 1 300 1 271 1 35 2 347 1 212 1 175 2 63 1 100 1 
240 1 302 1 136 1 352 1 233 1 26 1 191 1 51 1 140 2 226 1 300 1 56 1 119 1 87 2 212 1 175 2 63 1 
240 1 26 1 51 2 52 1 30 1 226 1 300 2 56 1 87 2 35 2 212 1 63 1 302 1 352 1 136 1 233 2 191 1 140 4 271 1 175 2 100 1 
240 1 178 1 302 1 352 1 233 1 26 1 51 1 140 2 30 1 226 1 300 1 271 1 35 2 347 1 212 1 175 2 100 1 
240 1 178 1 302 1 136 1 352 1 233 1 26 1 191 1 51 1 140 2 226 1 300 1 56 1 119 1 87 2 212 1 175 2 
240 1 178 1 26 1 51 2 52 1 30 1 226 1 300 2 56 1 87 2 35 2 212 1 302 1 352 1 136 1 191 1 233 1 140 4 175 2 100 1 
240 1 302 1 136 1 352 1 191 1 233 2 26 1 51 2 140 4 52 1 30 1 226 1 56 1 300 2 271 1 87 2 35 2 212 1 175 2 100 1 
240 1 26 1 28 1 241 1 226 1 321 1 187 1 158 1 131 1 87 1 35 1 58 1 10 1 12 1 212 1 112 1 134 1 302 1 288 1 351 1 352 1 330 1 140 2 163 1 236 1 144 1 175 2 121 1 
240 1 26 1 253 1 226 1 321 1 187 1 158 1 131 1 87 1 35 1 58 1 10 1 12 1 212 1 328 1 134 1 302 1 288 1 351 1 352 1 330 1 140 2 163 1 236 1 144 1 175 2 274 1 121 1 
240 1 302 1 136 1 352 1 191 1 233 2 26 1 51 2 140 4 52 1 30 1 226 1 56 1 300 2 31 1 271 1 87 2 35 2 212 1 175 2 100 1 
240 1 26 1 51 2 108 1 28 1 241 1 52 1 30 1 226 1 56 1 300 2 321 1 187 1 87 2 158 1 35 2 58 1 10 1 12 1 212 1 112 1 134 1 302 1 351 1 136 1 352 1 191 1 233 2 140 4 194 1 271 1 236 1 144 1 175 2 121 1 100 1 
240 1 26 1 51 1 52 1 30 1 6 1 226 1 56 1 300 1 31 1 83 1 57 1 87 1 158 1 35 2 212 1 301 1 302 1 352 1 191 1 233 1 42 1 140 3 197 1 271 1 175 2 121 1 100 1 
26 2 2 2 79 2 52 3 4 1 3 1 30 3 55 1 56 3 33 1 87 10 35 9 212 2 216 1 65 1 302 2 136 3 352 2 233 6 191 3 140 19 115 1 304 1 219 1 142 1 271 3 175 4 176 2 100 3 316 1 
26 3 2 1 79 4 341 1 52 3 4 2 3 1 30 3 56 2 55 1 156 1 87 12 35 14 212 3 216 1 302 3 136 2 352 3 67 1 233 4 191 2 140 26 115 2 219 2 142 1 306 1 195 1 271 2 20 1 175 6 176 2 100 3 293 2 316 2 
2 1 52 4 109 1 3 1 4 2 56 5 55 1 156 1 212 3 216 1 15 1 67 1 115 1 219 3 20 1 175 6 176 4 293 1 26 3 182 1 79 4 341 1 126 1 30 4 33 1 87 21 35 20 302 3 352 3 136 4 191 4 233 8 140 41 304 1 142 1 306 1 195 1 271 4 272 1 237 1 100 5 316 3 198 1 
26 4 2 1 182 1 126 1 341 1 79 4 109 1 52 4 4 2 3 1 30 4 55 1 56 4 156 1 33 1 87 18 35 20 212 4 216 1 15 1 302 4 136 4 352 4 67 1 233 7 191 3 140 38 115 1 304 1 219 3 142 1 306 1 195 1 20 1 271 3 272 1 237 1 175 8 176 4 100 5 198 1 293 2 316 3 
48 2 26 2 2 1 182 1 126 1 341 1 79 4 109 1 52 7 4 1 3 1 30 7 55 1 56 8 156 1 87 25 35 27 212 2 216 1 302 2 136 7 352 2 67 1 233 14 191 7 140 52 115 1 304 2 219 2 142 1 306 1 195 1 20 1 271 7 272 1 237 1 175 4 176 4 100 8 198 1 293 1 316 4 
248 1 257 1 94 1 283 1 278 1 285 1 154 1 91 1 357 1 231 1 
85 1 279 1 
282 1 207 1 257 1 283 1 278 1 285 1 154 1 308 1 357 1 
41 1 251 1 
69 1 324 1 343 1 
94 1 278 1 340 1 319 1 356 1 154 1 5 1 357 1 248 1 208 1 257 1 283 1 189 1 285 1 60 2 91 1 160 1 349 1 
94 1 278 1 340 1 319 1 356 1 154 1 5 1 357 1 248 1 208 1 257 1 283 1 189 1 285 1 60 2 91 1 160 1 349 1 
94 1 278 1 340 1 319 1 356 1 154 1 5 1 357 1 248 1 208 1 257 1 283 1 189 1 285 1 60 2 91 1 160 1 349 1 
41 1 324 1 251 1 
41 1 324 1 251 1 
69 1 343 1 
69 1 324 1 343 1 
111 1 232 1 
180 1 181 1 340 1 278 1 279 1 319 1 154 1 6 2 208 1 206 1 111 1 257 1 85 1 57 2 158 2 283 1 285 1 60 1 288 1 232 1 356 1 357 1 197 2 98 1 121 2 292 1 275 1 
240 1 26 1 226 1 321 1 54 1 31 1 129 1 158 2 131 1 87 1 58 1 35 1 12 2 212 1 286 2 134 2 302 1 351 1 352 1 354 1 330 1 140 2 268 1 95 1 143 1 197 2 236 1 144 2 171 1 175 2 121 2 
190 2 134 2 75 1 39 1 224 1 124 1 108 1 331 1 196 1 321 1 235 1 32 1 19 1 169 1 346 1 236 1 144 2 12 2 174 1 
190 2 134 1 75 1 39 1 124 1 331 1 196 1 321 1 235 1 32 1 169 1 346 1 144 1 236 1 8 1 12 1 174 1 
134 1 351 1 318 1 163 1 342 1 127 1 321 1 235 1 19 1 242 1 236 1 144 1 58 1 12 1 
190 2 134 1 75 1 39 1 224 1 124 1 331 1 196 1 321 1 235 1 32 1 19 1 169 1 346 1 144 1 236 1 12 1 174 1 
78 1 
217 1 0 1 230 1 68 1 137 1 5 1 270 1 
295 1 319 1 280 1 5 1 230 1 211 1 66 1 68 1 16 1 141 1 71 1 356 1 270 1 166 1 249 1 337 1 313 1 
152 1 319 2 52 1 280 2 30 1 299 1 321 2 80 2 230 3 84 1 187 1 132 1 58 1 89 1 211 2 12 1 326 1 37 1 214 1 350 1 134 1 66 2 351 4 68 2 139 1 116 2 163 1 356 2 43 2 166 2 310 1 249 2 144 1 236 1 337 2 313 1 147 1 100 1 
341 1 280 1 52 2 30 2 56 2 156 1 80 5 230 4 66 1 68 6 67 1 191 2 116 5 219 1 195 1 166 1 20 1 249 1 337 3 176 1 100 2 316 1 
294 1 149 1 182 1 126 1 319 1 280 1 6 1 56 1 209 1 258 2 230 2 57 1 158 1 59 1 62 1 66 1 68 2 42 1 356 1 166 1 168 1 197 1 249 1 272 1 360 1 121 1 99 1 100 2 
217 1 66 1 137 1 68 1 280 1 5 1 270 1 166 1 249 1 230 1 
68 2 191 1 116 2 52 1 71 2 30 1 5 2 56 1 80 2 230 2 337 4 100 1 
211 1 313 1 319 1 356 1 5 1 270 1 
107 1 319 3 342 1 280 2 127 1 321 1 345 1 230 2 58 1 211 4 12 4 134 4 351 1 66 1 68 2 139 2 234 2 163 2 269 1 356 3 96 1 166 2 249 2 236 1 144 4 291 1 313 2 338 1 315 2 
240 1 149 1 26 1 28 1 241 1 6 2 226 1 321 1 57 2 187 1 87 1 131 1 158 3 58 1 212 1 12 1 10 1 112 1 134 1 302 1 288 1 351 1 352 1 42 2 140 1 163 1 197 2 144 1 236 1 175 2 121 3 177 1 
66 1 68 1 139 1 116 1 280 1 5 1 270 1 166 1 230 1 249 1 337 1 315 1 
312 1 278 1 357 1 
248 1 111 1 278 1 297 1 357 1 
312 1 278 1 357 1 
312 1 278 1 357 1 
278 1 61 1 357 1 
278 1 61 1 357 1 
278 1 61 1 357 1 
278 1 357 1 
285 1 154 1 
302 2 136 2 352 2 233 3 26 2 140 8 182 1 126 1 109 1 56 1 271 1 272 1 87 4 35 4 237 1 212 2 175 4 100 1 293 1 198 1 
0 1 272 1 136 2 87 3 35 3 233 2 140 6 237 1 182 1 126 1 109 1 100 1 198 1 56 1 
302 1 136 1 352 1 191 1 233 2 26 1 70 1 140 4 52 1 30 1 56 1 271 1 87 2 35 2 212 1 175 2 100 1 
136 1 191 1 233 2 140 7 304 1 219 1 52 1 30 1 56 1 271 1 87 4 35 3 176 2 100 1 316 1 
106 1 48 1 26 2 182 2 126 2 109 1 52 2 30 2 56 3 81 1 87 12 35 11 212 2 302 2 136 5 352 2 233 9 191 2 140 23 304 1 271 4 272 1 237 1 175 4 176 2 100 3 198 1 316 2 293 2 
87 1 140 1 176 1 
35 1 140 1 316 1 
302 1 352 1 136 2 26 1 233 3 191 1 70 1 140 6 52 1 30 1 56 1 271 1 87 3 35 3 212 1 175 2 147 1 100 1 
26 1 341 1 52 2 3 1 30 2 56 2 156 1 87 6 35 6 212 1 302 1 352 1 136 1 67 1 191 2 233 2 140 12 219 1 195 1 271 1 20 1 175 2 176 1 100 2 316 1 
136 1 233 2 140 6 182 1 126 1 56 1 271 1 272 1 87 3 35 3 100 1 
302 1 106 1 136 1 352 1 233 2 26 1 140 3 182 1 126 1 271 1 87 2 35 1 237 1 212 1 175 2 198 1 293 1 
302 1 294 1 352 1 136 3 26 1 233 5 140 10 182 2 126 2 3 1 56 2 271 2 272 1 87 5 35 5 212 1 175 2 100 2 
302 1 352 1 26 1 233 1 140 2 3 1 30 1 271 1 35 2 212 1 175 2 100 1 
302 1 136 1 352 1 191 1 233 2 26 1 140 4 52 1 3 1 30 1 56 1 271 1 87 2 35 2 212 1 175 2 100 1 
302 3 106 1 352 3 136 1 26 3 233 2 140 3 182 1 126 1 3 1 271 1 33 1 87 2 35 1 212 3 175 6 293 1 
106 1 26 5 50 1 182 3 126 3 109 1 52 3 3 1 30 3 56 5 33 1 87 18 35 16 212 5 302 5 352 5 136 7 233 12 191 3 70 1 140 34 304 1 219 1 167 1 271 5 272 2 237 1 175 10 45 1 176 4 100 5 198 1 293 2 316 3 
302 1 136 2 352 1 233 2 26 1 140 8 182 1 126 1 219 1 109 1 3 1 195 1 56 1 272 1 87 4 35 4 237 1 212 1 175 2 176 1 100 1 198 1 316 1 
26 2 182 1 126 1 109 1 52 1 3 1 30 1 56 1 87 5 35 6 212 2 302 2 136 2 352 2 233 3 140 11 70 1 304 1 219 1 195 1 271 1 272 1 237 1 175 4 176 2 100 2 198 1 316 1 
26 3 182 1 126 1 341 1 109 1 52 2 3 1 30 2 56 3 156 1 87 10 35 9 212 3 302 3 352 3 136 3 67 1 191 2 233 4 70 1 140 19 219 1 195 1 271 1 20 1 272 1 237 1 175 6 176 1 100 3 198 1 316 1 293 1 
26 3 182 1 126 1 341 1 109 1 52 2 3 1 30 2 56 2 156 1 87 7 35 10 212 3 302 3 352 3 136 3 67 1 191 1 233 5 70 1 140 17 219 1 195 1 271 2 20 1 272 1 237 1 175 6 176 1 100 3 198 1 293 1 316 1 
302 1 136 2 352 1 233 2 26 1 140 8 182 1 126 1 219 1 109 1 3 1 195 1 56 1 272 1 87 4 35 4 237 1 212 1 175 2 176 1 100 1 198 1 316 1 
26 1 341 1 52 2 3 1 30 2 56 2 156 1 87 6 35 6 212 1 302 1 352 1 136 1 67 1 191 2 233 2 140 12 219 1 195 1 271 1 20 1 175 2 176 1 100 2 316 1 
26 4 182 1 126 1 341 1 109 1 52 2 3 1 30 2 56 2 156 1 87 8 35 10 212 4 302 4 352 4 136 3 67 1 191 1 233 5 140 18 70 1 219 1 195 1 271 2 20 1 272 1 237 1 175 8 176 1 100 3 198 1 316 1 293 2 
26 4 341 1 52 3 3 1 30 3 56 2 156 1 33 1 87 7 35 9 212 4 302 4 352 4 136 3 67 1 191 2 233 6 140 16 219 1 195 1 271 3 20 1 175 8 176 1 100 3 316 1 293 2 
136 3 233 6 140 7 182 3 126 3 56 1 271 3 272 1 87 4 35 3 237 1 100 1 198 2 
26 4 182 1 126 1 341 1 109 1 52 2 3 1 30 2 56 2 156 1 33 1 87 8 35 10 212 4 302 4 352 4 136 3 67 1 191 1 233 4 140 18 219 1 195 1 271 1 20 1 272 1 237 1 175 8 176 1 100 3 198 1 316 1 293 2 
197 1 288 1 162 1 158 1 305 1 244 1 121 1 
38 1 288 1 76 1 162 1 339 1 305 1 298 1 197 1 158 1 244 1 121 1 327 1 
0 1 134 1 351 1 236 1 144 1 58 1 12 1 163 1 342 1 127 1 321 1 
134 1 288 1 351 1 163 1 241 1 6 1 321 1 197 1 187 1 57 1 158 2 144 1 236 1 58 1 10 1 12 1 121 2 13 1 
134 1 351 1 234 1 290 1 241 1 6 1 321 1 209 1 197 1 311 1 187 1 57 1 158 1 144 1 236 1 58 1 10 1 12 1 121 1 13 1 
134 1 351 1 234 1 290 1 6 1 321 1 209 1 197 1 311 1 187 1 57 1 158 1 144 1 236 1 58 1 10 1 12 1 121 1 274 1 13 1 
149 1 23 1 152 1 319 2 5 1 6 1 321 1 209 1 322 1 57 1 187 1 158 1 34 1 58 1 59 1 211 1 12 2 62 1 287 1 350 1 134 2 351 4 42 1 234 1 163 1 356 2 43 1 270 1 197 1 236 1 144 2 121 1 99 1 
134 3 350 1 351 4 152 1 234 1 163 1 319 2 356 2 5 1 43 1 270 1 299 1 321 1 187 1 34 1 144 3 236 1 58 1 211 1 12 3 262 1 287 1 
134 1 259 1 236 1 144 1 12 1 321 1 
134 7 351 3 317 1 218 1 25 1 124 1 108 1 163 2 220 1 321 3 259 1 187 1 170 1 144 6 236 2 171 1 58 2 12 7 36 1 326 1 286 1 
240 2 26 2 51 1 108 1 182 1 28 1 126 1 109 1 241 1 6 1 226 2 300 1 56 1 321 1 31 1 187 1 57 1 87 3 158 2 35 3 58 1 10 1 212 2 12 1 13 1 112 1 134 1 302 2 288 2 351 1 136 2 352 2 233 2 140 6 268 1 194 1 309 1 197 1 272 1 236 1 144 1 237 1 175 4 121 2 100 1 198 1 
180 1 152 1 319 3 280 2 5 1 299 1 230 1 84 1 211 2 12 1 214 1 217 1 134 1 350 1 66 2 351 2 68 1 137 1 163 1 356 3 43 1 270 1 166 2 310 1 249 2 144 1 291 1 313 1 
350 1 134 2 351 2 108 1 321 2 259 1 187 1 144 2 236 1 58 1 89 1 12 2 326 1 
134 4 351 1 108 1 163 1 342 1 127 1 321 1 144 4 236 1 58 1 12 4 348 1 262 1 
134 2 264 1 351 1 25 1 234 1 321 2 86 1 157 1 187 1 170 1 144 2 236 1 58 1 12 2 
190 1 75 1 134 1 39 1 236 1 144 1 331 1 12 1 163 1 321 1 
134 2 351 1 236 1 144 2 58 1 171 1 124 1 354 1 108 1 12 2 321 1 
134 5 351 3 108 1 234 1 163 1 342 1 127 1 220 1 321 2 144 4 236 2 171 1 58 2 12 5 36 1 348 1 
134 5 351 3 108 1 234 1 163 1 342 1 127 1 321 2 144 4 236 2 171 1 58 2 260 1 12 5 36 1 348 1 
134 1 288 1 351 1 163 1 6 1 321 1 197 1 187 1 57 1 158 2 144 1 236 1 58 1 10 1 12 1 121 2 274 1 13 1 
134 1 351 1 317 1 25 1 234 1 321 2 187 1 170 1 144 1 236 1 58 1 12 1 326 1 
104 1 288 1 22 1 284 1 122 1 
104 1 161 1 22 1 180 1 49 1 319 1 290 1 356 1 209 1 311 1 284 1 314 1 146 1 122 1 14 1 
104 1 22 1 95 1 54 1 197 1 129 1 158 1 284 1 121 1 
104 1 49 1 14 1 
0 1 173 1 165 1 215 1 
359 1 173 1 225 1 203 1 165 1 215 1 102 1 
344 1 203 1 263 1 
266 2 225 1 203 3 165 1 281 1 210 1 359 3 173 1 46 1 215 1 113 1 102 1 
359 2 173 1 125 1 184 1 225 1 203 2 165 1 215 1 102 1 
359 1 151 1 173 1 225 1 203 1 72 1 103 1 102 1 113 1 
359 1 173 1 225 1 203 1 165 1 102 1 113 1 
359 1 225 1 203 1 165 2 215 1 102 1 113 1 
77 1 225 2 203 2 165 1 29 1 53 1 359 2 173 1 113 1 102 2 
359 2 151 1 173 1 329 1 184 1 225 1 203 2 334 1 72 1 92 1 102 1 113 1 
190 2 39 1 331 1 225 1 184 1 203 2 165 1 32 1 346 1 359 2 173 1 250 1 215 1 113 1 102 1 
359 2 151 1 173 1 125 1 329 1 184 1 225 1 203 2 44 1 72 1 102 1 113 1 
359 1 173 1 225 1 203 1 165 1 215 1 102 1 113 1 
359 2 151 1 173 1 329 1 225 1 184 1 203 2 102 1 72 2 
252 1 359 2 173 1 184 1 225 1 203 2 165 1 320 1 215 1 223 1 102 1 113 1 
247 1 210 2 266 2 359 3 173 1 225 1 203 3 165 1 46 1 215 1 102 1 113 1 
150 2 173 2 133 1 123 1 
359 1 225 1 203 1 110 1 102 1 113 1 
359 2 173 1 184 1 225 1 203 2 165 1 215 1 92 1 102 1 113 1 
276 1 
359 1 173 1 225 1 203 1 165 1 215 1 102 1 113 1 
266 1 184 1 225 1 203 3 165 1 359 3 173 1 215 1 113 1 102 1 92 1 
359 1 151 1 173 1 329 1 184 1 203 1 
173 1 165 1 

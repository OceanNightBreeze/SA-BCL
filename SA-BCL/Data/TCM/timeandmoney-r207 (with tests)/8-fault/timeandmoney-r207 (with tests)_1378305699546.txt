#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 229 242 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 229 242 34 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 9 338 5 134 1 73 1 3 2 297 3 316 4 218 1 43 1 301 1 44 2 219 2 120 1 138 2 224 9 200 2 83 2 27 6 125 1 204 1 48 1 31 1 179 1 66 2 287 1 89 1 262 1 38 1 
239 9 338 5 134 1 73 1 3 2 297 3 316 4 218 1 43 1 301 1 219 2 44 2 120 1 138 2 224 9 200 2 83 2 27 6 125 1 204 1 48 1 31 1 179 1 66 2 287 1 89 1 262 1 38 1 
239 10 338 6 134 1 73 1 3 2 297 4 316 5 218 1 43 1 301 1 219 2 44 2 120 1 138 2 224 10 200 2 83 2 27 7 125 1 204 1 48 1 31 1 179 1 66 2 287 1 89 1 262 1 38 1 
239 7 338 4 134 1 73 1 3 2 297 2 316 3 218 1 43 1 301 1 219 2 44 2 120 1 138 2 224 7 200 1 83 2 27 4 125 1 204 1 31 1 179 1 66 2 287 1 89 1 262 1 38 1 
224 4 239 4 200 2 83 1 27 3 338 3 204 1 3 1 48 1 297 1 316 2 66 1 43 1 219 1 120 1 287 1 262 1 138 1 
224 2 239 2 83 1 338 1 125 1 325 1 3 1 31 1 66 1 44 1 120 1 287 1 262 1 212 1 138 1 353 1 
224 3 239 3 83 2 338 2 27 1 179 1 297 1 316 1 66 2 44 1 120 1 287 1 262 1 
1 1 239 9 338 5 134 1 3 1 316 4 297 3 218 1 43 1 44 1 219 1 120 1 138 1 224 9 200 2 83 2 27 7 204 1 179 1 48 1 66 2 287 1 158 1 262 1 
1 1 239 9 338 5 134 1 3 1 316 4 297 3 218 1 43 1 44 1 219 1 120 1 138 1 224 9 200 2 83 2 27 7 204 1 179 1 48 1 66 2 287 1 158 1 262 1 
236 1 107 1 109 1 
236 1 82 2 201 1 
21 1 36 1 308 2 98 2 230 2 116 2 13 2 270 2 
312 2 336 1 193 2 95 1 98 2 2 1 116 2 243 1 270 2 317 1 21 1 119 1 137 1 24 1 76 1 251 1 11 1 199 1 172 1 225 1 309 1 308 3 84 1 327 1 230 2 208 1 231 1 50 1 13 3 32 1 180 2 147 2 36 1 233 1 286 1 110 1 53 2 
21 1 308 1 98 1 295 1 230 1 116 1 13 1 270 1 
236 1 264 1 266 1 308 1 145 1 206 1 106 1 116 1 241 1 18 1 13 1 107 1 156 1 321 1 
236 1 264 1 266 1 98 1 308 1 145 2 206 1 230 1 106 1 116 1 241 1 13 1 270 1 107 1 156 2 
65 1 156 1 145 1 256 1 355 1 
236 1 107 1 65 1 156 2 145 2 281 1 164 1 256 1 
65 1 156 1 145 1 
123 1 98 1 308 1 145 1 295 1 230 1 116 1 256 1 13 1 270 1 21 1 156 1 
236 1 
236 1 107 1 65 1 211 1 156 2 145 2 281 1 256 1 
236 1 255 2 145 5 281 1 74 1 256 2 107 1 65 2 182 1 156 5 319 1 75 2 88 1 90 1 170 1 235 2 71 1 103 1 132 1 
36 1 109 1 
133 1 308 2 98 1 56 1 230 1 116 2 13 2 270 1 36 2 
197 1 30 1 352 1 
312 1 323 1 95 1 308 1 84 1 2 1 50 1 13 1 147 1 317 1 36 1 286 1 76 1 251 1 53 1 11 1 
36 1 308 3 98 3 230 3 116 3 5 1 13 3 270 1 
308 1 98 1 10 1 230 1 116 1 13 1 
133 1 308 1 98 1 56 1 106 1 230 1 116 1 13 1 270 1 
312 1 133 1 264 1 193 1 95 1 266 1 98 3 2 1 116 3 241 1 5 1 243 1 270 2 317 1 21 1 76 1 304 1 251 1 11 1 199 1 172 1 225 1 309 1 308 4 84 1 145 1 206 1 327 1 230 3 106 1 231 1 50 1 13 4 32 1 180 2 33 1 147 1 36 1 233 1 156 1 286 1 157 1 110 1 53 1 
36 1 308 2 98 1 230 1 116 2 263 1 5 1 18 1 13 2 
236 1 133 1 264 1 266 1 98 3 308 3 145 1 206 1 106 1 230 3 241 1 116 3 5 2 13 3 270 1 33 1 150 1 156 1 157 1 
133 1 98 2 308 2 230 2 116 2 5 1 13 2 270 1 197 1 352 1 
312 1 95 1 308 1 84 1 2 1 50 1 13 1 147 1 317 1 36 1 286 1 76 1 251 1 53 1 11 1 
312 1 81 1 308 1 84 1 2 1 50 1 13 1 147 1 317 1 36 1 286 1 76 1 277 1 251 1 53 1 
336 2 293 1 193 4 243 1 118 1 273 1 197 2 305 1 140 1 252 1 172 1 225 1 254 1 104 1 327 2 30 2 347 1 64 1 231 1 349 1 180 2 233 1 110 1 352 2 
308 1 98 1 206 1 106 1 230 1 4 1 116 1 13 1 
312 1 95 1 98 1 308 2 84 1 2 1 230 1 116 1 50 1 5 1 13 2 147 1 317 1 286 1 157 1 76 1 352 1 251 1 53 1 11 1 
141 1 133 1 98 4 308 5 230 4 116 5 5 2 18 1 13 5 270 1 36 1 157 1 263 1 320 1 
308 1 98 1 10 1 230 1 116 1 13 1 
68 1 45 1 
68 1 45 1 
40 1 86 1 
40 1 86 1 
40 1 86 1 
167 1 68 1 45 1 
167 1 68 1 45 1 
68 1 45 1 79 1 
203 1 68 2 40 1 45 2 17 1 86 1 
167 1 68 1 45 1 
68 1 45 1 23 1 
68 1 45 1 23 1 
68 1 45 1 23 1 
189 1 19 1 68 1 45 1 229 1 242 1 
189 1 19 1 34 1 68 1 45 1 156 1 145 1 229 1 242 1 
219 1 3 1 138 1 
3 1 138 1 353 1 
219 2 279 1 114 1 115 1 3 3 353 1 
219 1 265 1 279 1 115 1 3 2 353 1 
219 1 279 1 115 2 3 2 353 1 
236 1 346 1 145 4 216 1 281 1 298 1 256 3 128 1 107 1 65 1 318 1 156 4 
236 1 346 1 145 4 281 1 256 3 128 1 107 1 65 2 67 1 156 4 171 1 250 1 355 1 
236 3 188 2 293 1 216 1 74 3 166 1 298 1 273 1 318 1 75 1 319 1 78 1 252 1 82 4 201 2 255 1 145 3 326 1 126 2 347 1 256 2 107 1 128 1 156 3 88 2 235 1 
236 5 188 4 293 2 216 1 74 5 166 2 298 2 273 2 318 1 75 1 319 1 78 1 252 2 82 8 201 4 255 1 145 4 228 1 326 2 126 4 347 2 256 3 107 1 331 1 128 1 156 4 88 4 235 1 131 1 
351 1 2 1 109 1 
2 1 288 1 
153 1 
2 1 251 1 
28 1 84 1 351 2 246 1 2 3 251 1 
84 1 2 1 251 1 
161 1 2 1 
54 1 336 4 307 2 193 7 104 3 240 1 315 1 327 3 347 1 163 1 118 2 117 1 273 1 7 1 196 1 183 1 159 1 
54 1 336 4 307 2 193 7 104 3 240 1 315 1 327 3 347 1 163 1 118 2 117 1 273 1 7 1 196 1 183 1 159 1 
54 1 336 4 307 2 202 1 193 7 104 3 315 1 240 1 327 3 347 1 163 1 118 2 117 1 273 1 7 1 196 1 183 1 159 1 
54 2 336 16 293 3 193 31 315 1 240 1 163 2 165 1 117 2 118 5 196 1 7 5 273 4 22 1 25 1 252 3 172 1 225 1 345 1 307 3 12 3 104 10 326 3 327 15 347 4 328 1 257 4 180 2 233 1 350 1 183 1 110 1 159 2 213 1 
336 5 54 1 214 1 193 9 240 1 315 1 163 1 117 1 118 3 273 1 7 1 322 1 172 2 225 2 307 2 104 4 327 4 347 1 180 4 233 2 350 1 110 2 183 1 159 1 
312 1 239 2 338 1 114 1 3 2 296 1 269 1 299 1 317 1 219 1 44 1 120 1 138 1 224 2 83 1 27 1 62 1 147 1 66 1 152 1 334 1 35 1 286 1 287 1 262 1 52 1 234 1 353 1 53 1 354 1 
312 1 239 3 338 1 114 1 16 1 3 2 269 1 244 1 317 1 219 1 44 1 60 1 138 1 224 3 83 1 27 2 62 1 147 1 66 1 152 1 334 1 35 1 286 1 287 1 262 1 52 1 234 1 353 1 53 1 354 1 
312 1 239 2 338 1 114 1 16 1 3 2 317 1 44 1 219 1 60 1 138 1 224 2 27 2 62 1 147 1 152 1 334 1 35 1 286 1 287 1 262 1 52 1 353 1 53 1 354 1 
312 1 292 1 239 1 94 1 96 1 267 1 2 1 317 1 244 1 44 2 76 1 251 1 224 1 83 1 62 2 210 1 147 1 66 1 283 1 152 2 286 1 52 2 53 1 
312 1 239 1 114 1 3 2 296 1 269 1 317 1 219 1 44 1 120 1 60 1 138 1 224 1 83 1 62 1 147 1 66 1 152 1 334 1 35 1 286 1 52 1 234 1 353 1 53 1 354 1 
85 1 
312 2 0 1 264 1 266 1 267 1 2 1 116 1 74 2 317 1 271 1 272 4 75 1 9 1 76 2 78 1 321 1 82 2 177 2 227 1 47 1 281 3 13 1 282 2 283 1 333 2 182 1 88 2 286 1 91 1 235 1 53 2 236 2 190 2 339 1 241 1 18 1 195 1 251 1 306 2 201 2 308 1 255 1 146 2 145 5 206 1 63 2 106 1 107 1 147 2 65 6 155 1 156 5 37 1 72 1 311 1 
190 1 264 1 266 1 308 1 145 3 227 1 206 1 281 1 106 1 241 1 116 1 18 1 13 1 65 2 272 2 155 1 211 1 156 3 37 1 91 1 72 1 321 1 
236 1 264 1 266 1 308 1 146 1 145 3 227 1 206 1 281 1 106 1 241 1 116 1 18 1 13 1 107 1 65 1 272 3 155 1 211 1 156 3 37 1 91 1 72 1 321 1 
236 1 264 1 190 1 266 1 116 1 241 1 18 1 272 3 306 1 321 1 308 1 227 1 145 3 146 1 206 1 281 1 106 1 13 1 107 1 65 2 155 1 211 1 156 3 37 1 91 1 72 1 
264 1 266 1 116 1 74 1 272 6 75 1 321 1 122 1 227 1 177 2 47 1 281 3 13 1 282 2 333 2 182 1 88 1 91 1 235 1 236 5 190 4 241 1 18 1 195 1 303 1 245 1 306 4 201 2 308 1 255 1 145 5 146 4 206 1 106 1 105 1 63 2 107 5 65 7 155 1 154 1 156 5 211 1 37 1 72 1 
264 1 266 1 116 1 74 1 271 1 272 4 75 1 321 1 82 2 227 1 177 2 47 1 281 2 13 1 282 2 333 2 182 1 88 1 91 1 235 1 236 2 190 2 241 1 18 1 195 1 306 2 201 2 308 1 255 1 145 4 146 2 206 1 106 1 63 2 107 1 65 4 155 1 156 4 37 1 72 1 
236 1 190 2 264 1 266 1 116 1 241 1 74 1 18 1 195 1 272 4 75 1 306 2 321 1 122 1 201 2 308 1 255 1 146 2 177 2 227 1 145 4 47 1 206 1 281 2 63 2 106 1 105 1 13 1 107 1 282 2 65 4 333 2 154 1 155 1 182 1 156 4 88 1 37 1 91 1 235 1 72 1 
236 1 190 2 264 1 266 1 116 1 241 1 74 1 18 1 195 1 272 4 75 1 306 2 321 1 122 1 201 2 308 1 255 1 146 2 177 2 227 1 145 4 47 1 206 1 281 2 63 2 106 1 105 1 13 1 107 1 282 2 65 4 333 2 154 1 155 1 182 1 156 4 88 1 37 1 91 1 235 1 72 1 
236 1 39 1 190 2 264 1 266 1 97 1 116 1 241 1 74 1 18 1 195 1 272 4 302 1 75 1 306 2 321 1 26 2 82 2 308 1 255 1 146 2 227 1 145 4 206 1 281 2 63 2 106 1 13 1 107 1 282 2 65 4 154 1 155 1 182 1 156 4 88 1 37 1 91 1 235 1 186 2 72 1 
236 1 264 1 190 3 266 1 116 1 241 1 74 1 18 1 195 1 272 5 303 1 75 1 306 3 321 1 122 1 201 2 308 1 255 1 177 2 227 1 145 4 146 3 47 1 206 1 281 2 63 2 106 1 105 1 13 1 107 1 282 2 65 5 333 2 154 1 182 1 155 1 156 4 88 1 37 1 91 1 235 1 72 1 
236 1 264 1 190 3 266 1 116 1 241 1 74 1 18 1 195 1 272 5 303 1 75 1 306 3 321 1 122 1 201 2 308 1 255 1 177 2 227 1 145 4 146 3 47 1 206 1 281 2 63 2 106 1 105 1 13 1 107 1 282 2 65 5 333 2 154 1 182 1 155 1 156 4 88 1 37 1 91 1 235 1 72 1 
236 1 190 2 264 1 266 1 97 1 116 1 241 1 74 1 18 1 195 1 271 1 272 4 75 1 306 2 321 1 26 2 82 2 308 1 255 1 146 2 227 1 145 4 206 1 281 2 63 2 106 1 13 1 107 1 282 2 65 4 155 1 182 1 156 4 88 1 37 1 91 1 235 1 186 2 72 1 
54 1 336 3 193 6 315 1 240 1 243 1 118 2 273 1 197 1 172 1 225 1 307 1 104 2 327 3 30 1 64 1 347 1 231 1 180 2 36 2 233 1 109 1 110 1 183 1 352 1 159 1 
336 8 293 2 193 14 243 1 118 1 7 1 273 1 274 1 197 4 137 1 172 2 252 1 345 1 225 2 309 1 12 3 104 2 205 1 326 2 327 6 30 11 347 2 231 2 257 3 180 4 87 1 36 1 233 2 110 2 352 11 213 1 93 1 15 1 
312 1 336 1 193 2 95 1 215 1 98 1 2 1 116 1 5 1 243 1 317 1 197 1 137 1 76 1 251 1 121 1 11 1 172 1 225 1 323 1 308 2 309 1 84 1 230 1 327 1 231 1 50 1 13 2 147 1 180 2 36 1 233 1 286 1 157 1 110 1 185 1 15 1 53 1 
312 3 315 1 2 2 116 1 5 1 118 4 317 2 273 3 7 4 76 1 11 2 172 3 225 3 84 2 326 2 327 10 230 1 231 3 50 2 127 1 13 3 180 6 129 1 233 3 286 2 183 1 187 1 15 1 53 3 54 1 336 10 293 2 193 20 95 2 98 1 240 1 243 3 59 2 197 7 137 1 60 1 249 2 101 2 251 2 199 2 252 2 307 1 309 1 308 3 104 8 30 7 347 3 147 3 148 2 36 2 157 1 110 3 159 1 352 7 
312 8 238 1 336 1 192 1 162 1 193 2 98 1 267 1 41 1 2 3 116 1 5 1 299 1 243 2 317 2 168 1 344 1 169 1 137 1 76 2 60 1 251 2 172 2 225 2 308 1 309 1 230 1 327 1 64 1 208 2 231 2 13 1 147 7 180 4 283 1 233 2 286 2 110 2 53 8 
133 1 336 1 293 1 193 3 98 1 116 1 270 1 243 1 118 1 273 1 197 1 172 1 252 1 225 1 308 1 104 1 326 1 30 1 230 1 327 2 347 1 231 1 13 1 180 2 232 1 233 1 110 1 352 1 15 1 
172 1 336 2 225 1 293 1 193 2 104 1 30 1 64 1 347 1 231 1 243 1 180 2 7 1 197 1 233 1 110 1 352 1 305 1 
172 1 252 1 225 1 193 2 104 1 30 1 327 2 64 1 231 1 243 1 180 2 118 1 273 1 197 1 233 1 110 1 352 1 140 1 
336 2 293 1 193 4 243 1 118 1 7 1 273 1 197 2 172 1 252 1 225 1 104 2 326 1 30 2 327 2 347 1 64 1 231 1 180 2 233 1 110 1 352 2 
172 1 336 2 225 1 293 1 193 2 104 1 30 1 347 1 231 1 243 1 180 2 7 1 197 1 168 1 233 1 110 1 352 1 305 1 
172 1 252 1 225 1 193 2 104 1 30 1 327 2 231 1 243 1 180 2 118 1 273 1 197 1 168 1 233 1 110 1 352 1 140 1 
336 2 293 1 193 4 243 1 118 1 7 1 273 1 168 1 197 2 172 1 252 1 225 1 104 2 326 1 30 2 327 2 347 1 231 1 180 2 233 1 110 1 352 2 
336 2 293 1 193 4 243 1 118 1 7 1 273 1 197 2 172 1 252 1 225 1 104 2 326 1 30 2 327 2 347 1 231 1 180 2 233 1 110 1 352 2 
312 1 336 1 193 2 95 1 2 1 243 1 317 1 137 1 76 1 251 1 11 1 199 1 172 1 225 1 308 1 309 1 84 1 327 1 231 1 50 1 13 1 147 1 180 2 36 1 233 1 286 1 110 1 53 1 
312 1 336 1 193 2 2 1 243 1 317 1 276 1 137 1 76 1 277 1 251 1 81 1 172 1 225 1 308 1 309 1 84 1 327 1 231 1 50 1 13 1 147 1 180 2 36 1 233 1 286 1 110 1 53 1 
336 2 293 1 193 4 243 1 118 1 7 1 273 1 197 2 172 1 252 1 225 1 104 2 326 1 30 2 327 2 347 1 231 1 180 2 233 1 110 1 352 2 15 1 
312 1 336 2 293 1 193 4 95 1 2 1 299 1 243 1 118 1 317 1 273 1 7 1 197 2 101 1 251 1 11 1 199 1 252 1 172 1 225 1 308 1 84 1 104 2 326 1 327 2 30 2 347 1 231 1 50 1 13 1 147 1 180 2 233 1 286 1 110 1 352 2 53 1 
133 1 336 2 293 1 193 3 98 1 116 1 270 1 243 1 273 1 7 1 197 1 252 1 172 1 173 1 225 1 308 1 104 1 326 1 327 1 230 1 30 1 347 1 231 1 13 1 180 2 233 1 110 1 352 1 15 1 
336 9 293 3 214 1 193 19 340 1 118 3 6 1 7 3 273 3 278 1 222 1 172 2 252 3 345 1 225 2 12 1 104 6 178 1 326 3 327 10 347 3 257 2 180 4 332 2 284 1 261 2 233 2 110 2 92 1 213 1 
336 14 113 1 293 3 214 1 193 26 314 1 340 1 118 2 6 2 341 1 7 2 273 2 222 1 172 3 252 2 143 1 225 3 345 2 12 2 104 4 178 2 326 3 327 12 347 3 330 1 257 2 180 6 332 1 260 1 284 1 350 2 261 4 233 3 110 3 
54 1 113 1 336 20 293 4 214 1 193 41 314 1 315 1 240 1 340 1 342 1 341 1 118 4 6 1 7 4 273 5 278 1 222 1 172 3 252 4 307 1 143 1 345 3 225 3 12 3 104 8 178 2 326 4 327 21 347 5 330 1 257 4 180 6 332 1 260 1 284 1 350 1 261 4 233 3 183 1 110 3 159 1 213 1 
54 1 113 1 336 20 293 4 214 1 193 38 314 1 315 1 240 1 340 1 342 1 341 1 118 4 6 1 7 3 273 4 278 1 222 1 172 4 252 3 307 1 143 1 345 3 225 4 12 3 104 7 178 2 326 4 327 18 347 5 330 1 257 4 180 8 332 1 260 1 284 1 350 2 261 4 233 4 183 1 110 4 159 1 213 1 
54 1 113 1 336 27 293 7 214 1 193 52 314 1 315 1 240 1 340 1 341 1 118 7 6 1 7 7 273 8 274 2 222 1 172 2 252 7 307 1 143 1 345 2 225 2 12 4 104 14 178 1 326 7 327 25 347 8 330 1 257 4 180 4 332 1 260 1 284 1 350 1 261 4 233 2 183 1 110 2 159 1 213 2 
312 2 336 1 162 1 193 2 194 1 2 1 116 2 217 1 135 1 243 1 317 1 343 1 8 1 169 1 137 1 251 1 172 1 225 1 308 2 309 1 327 1 208 2 231 1 13 2 180 2 147 2 233 1 286 1 110 1 15 1 53 2 
312 2 114 1 3 2 207 1 269 1 299 1 147 2 317 1 219 1 35 1 286 1 60 1 52 1 138 1 70 1 353 1 102 1 53 2 354 1 
312 1 114 1 3 2 207 1 269 1 147 1 317 1 219 1 35 1 286 1 60 1 52 1 138 1 353 1 289 1 53 1 354 1 
312 1 96 1 267 1 2 1 147 1 317 1 20 1 283 1 286 1 76 1 52 1 70 1 251 1 53 1 
312 1 114 1 3 2 207 1 269 1 147 1 317 1 219 1 35 1 286 1 60 1 52 1 138 1 70 1 353 1 102 1 53 1 354 1 
55 1 
236 1 107 1 88 1 90 1 109 1 74 1 132 1 
236 2 74 1 75 1 82 1 201 1 255 1 177 1 145 1 47 1 281 1 107 1 65 1 333 1 182 1 156 1 88 1 235 1 
312 3 313 2 161 2 2 10 74 9 317 4 273 2 275 1 75 4 220 2 76 1 221 2 78 2 223 1 226 2 82 12 84 3 280 2 326 2 281 3 126 6 49 1 329 2 182 4 286 3 88 8 90 1 288 3 235 4 53 3 132 1 188 6 236 8 293 2 339 1 241 2 299 1 246 1 251 3 253 1 252 2 201 6 255 4 145 5 347 2 209 2 107 2 147 3 148 2 65 5 310 1 156 5 351 2 112 2 
188 5 236 5 113 1 313 2 293 2 314 1 339 1 74 8 341 1 58 1 273 2 75 2 220 1 77 1 78 1 252 2 143 1 345 1 82 6 201 3 255 2 12 1 145 1 326 2 281 1 126 5 347 2 330 1 257 1 107 2 65 1 182 2 156 1 88 5 235 2 
54 1 313 2 98 1 295 1 116 1 74 2 270 1 273 1 21 1 75 1 220 1 61 1 122 1 123 1 308 1 255 1 145 1 230 1 347 2 13 1 182 1 156 1 88 2 183 1 159 1 235 1 
236 1 255 1 74 1 107 1 182 1 75 1 88 1 90 1 235 1 132 1 
188 5 236 5 252 2 313 2 293 2 82 10 201 5 326 2 126 5 347 2 74 5 148 1 273 2 220 1 88 5 
236 1 107 1 65 1 156 1 145 1 281 1 
0 1 312 4 267 1 2 1 339 2 74 2 317 1 275 2 319 1 75 2 9 1 76 2 251 1 78 2 142 1 255 2 145 3 281 2 49 1 147 4 65 4 259 1 283 1 182 1 156 3 286 1 88 2 235 2 53 4 
312 1 193 1 95 1 98 2 2 1 116 2 270 2 243 1 317 1 21 1 76 1 251 1 11 1 199 1 172 1 225 1 309 1 308 3 84 1 327 1 230 2 231 1 50 1 13 3 32 1 180 2 147 1 36 1 233 1 286 1 110 1 53 1 
188 2 236 4 307 1 82 4 201 2 255 1 126 2 339 1 74 1 107 2 182 1 75 1 88 2 235 1 78 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
189 1 229 1 
68 1 45 1 
336 4 172 2 54 1 307 1 225 2 193 8 104 3 240 1 315 1 327 4 347 1 180 4 118 2 273 1 7 1 233 2 350 1 183 1 110 2 159 1 
54 1 336 3 307 1 193 6 240 1 315 1 104 2 327 3 347 1 118 2 273 1 109 1 183 1 159 1 
252 1 172 1 336 2 225 1 293 1 193 4 104 2 326 1 327 2 347 1 180 2 118 1 273 1 7 1 285 1 233 1 110 1 
252 1 336 3 345 1 293 1 193 7 12 1 104 2 326 1 327 4 347 1 257 2 118 1 273 1 7 1 213 1 
54 2 336 11 293 2 193 23 315 1 240 1 118 5 7 4 273 3 274 1 247 1 252 2 172 2 307 1 225 2 12 2 104 9 205 1 326 2 327 12 347 3 257 2 180 4 350 2 233 2 183 1 110 2 159 2 213 1 
193 1 327 1 257 1 
336 1 193 1 12 1 
172 1 336 3 252 1 225 1 293 1 193 6 104 3 326 1 327 3 347 1 180 2 148 1 118 2 7 1 273 1 233 1 285 1 110 1 
336 6 113 1 293 2 214 1 193 12 314 1 341 1 118 1 7 1 273 2 172 1 252 2 345 1 225 1 143 1 12 1 104 2 326 2 327 6 347 2 330 1 257 1 180 2 233 1 110 1 
336 3 54 1 193 6 104 2 327 3 347 1 118 1 273 1 7 1 183 1 159 1 
336 1 54 1 172 1 225 1 193 3 104 2 315 1 240 1 327 2 180 2 118 1 7 1 350 1 233 1 247 1 110 1 159 1 
172 1 54 2 336 5 225 1 214 1 193 10 104 5 327 5 347 2 180 2 118 3 7 2 273 2 233 1 110 1 183 1 159 2 61 1 
172 1 336 2 225 1 293 1 214 1 193 2 104 1 347 1 180 2 7 1 233 1 110 1 
252 1 172 1 336 2 225 1 293 1 214 1 193 4 104 2 326 1 327 2 347 1 180 2 118 1 273 1 7 1 233 1 110 1 
172 3 54 1 336 1 225 3 214 1 193 3 104 2 327 2 180 6 118 1 7 1 350 1 233 3 247 1 110 3 159 1 278 1 
54 3 336 16 293 3 214 1 193 34 315 1 240 1 165 1 118 7 7 5 273 5 247 1 278 1 25 1 172 5 252 3 307 1 345 1 225 5 12 3 104 12 326 3 327 18 328 1 347 5 257 4 180 10 350 2 285 1 233 5 183 2 110 5 159 3 213 1 
336 4 54 1 214 1 193 8 240 1 315 1 118 2 273 1 172 1 307 1 345 1 225 1 12 1 104 2 327 4 347 1 330 1 257 1 180 2 233 1 110 1 183 1 159 1 
54 1 336 6 293 1 214 1 193 11 315 1 240 1 118 2 273 1 7 1 172 2 307 1 345 1 225 2 12 1 104 3 326 1 327 5 347 2 330 1 257 2 180 4 233 2 285 1 183 1 110 2 159 1 213 1 
54 1 336 9 113 1 293 2 214 1 193 19 314 1 315 1 240 1 341 1 118 3 7 1 273 3 172 3 252 2 307 1 143 1 345 1 225 3 12 1 104 4 326 2 327 10 347 3 330 1 257 1 180 6 285 1 233 3 350 1 183 1 110 3 159 1 
54 1 336 10 113 1 293 2 214 1 193 17 314 1 315 1 240 1 341 1 118 3 7 2 273 2 172 3 252 1 307 1 345 1 225 3 143 1 12 1 104 5 326 2 327 7 347 3 330 1 257 1 180 6 285 1 350 1 233 3 183 1 110 3 159 1 
336 4 54 1 214 1 193 8 240 1 315 1 118 2 273 1 172 1 307 1 345 1 225 1 12 1 104 2 327 4 347 1 330 1 257 1 180 2 233 1 110 1 183 1 159 1 
336 6 113 1 293 2 214 1 193 12 314 1 341 1 118 1 7 1 273 2 172 1 252 2 345 1 225 1 143 1 12 1 104 2 326 2 327 6 347 2 330 1 257 1 180 2 233 1 110 1 
54 1 336 10 113 1 293 2 214 1 193 18 314 1 315 1 240 1 341 1 118 3 7 2 273 2 172 4 252 1 307 1 143 1 345 1 225 4 12 1 104 5 326 2 327 8 347 3 330 1 257 1 180 8 285 1 233 4 350 2 183 1 110 4 159 1 
336 9 113 1 293 3 214 1 193 16 314 1 341 1 118 3 7 3 273 2 278 1 172 4 252 2 143 1 345 1 225 4 12 1 104 6 326 3 327 7 347 3 330 1 257 1 180 8 233 4 350 2 110 4 
54 3 336 3 193 7 240 1 315 2 104 6 327 4 347 1 118 3 273 1 7 3 183 1 159 3 
54 1 336 10 113 1 293 2 214 1 193 18 314 1 315 1 240 1 341 1 118 3 7 1 273 2 278 1 172 4 252 1 307 1 143 1 345 1 225 4 12 1 104 4 326 2 327 8 347 3 330 1 257 1 180 8 233 4 350 2 183 1 110 4 159 1 
160 1 36 1 308 1 116 1 263 1 13 1 18 1 
337 1 191 1 160 1 308 1 144 1 57 1 116 1 18 1 13 1 136 1 36 1 263 1 
312 1 147 1 317 1 283 1 286 1 267 1 2 1 109 1 76 1 251 1 53 1 
312 1 98 1 308 2 84 1 2 1 230 1 116 1 50 1 5 1 13 2 147 1 317 1 36 1 286 1 76 1 251 1 53 1 11 1 
312 1 264 1 161 1 98 2 308 2 84 2 206 1 2 3 106 1 230 1 116 2 50 1 5 1 13 2 147 1 317 1 275 1 36 1 286 1 221 1 251 2 53 1 11 1 
312 2 264 1 161 1 98 2 2 3 116 2 5 1 317 1 275 1 221 1 251 2 81 1 308 2 84 2 206 1 230 1 106 1 50 1 13 2 147 2 36 1 69 1 286 1 53 2 
237 1 312 3 236 1 161 1 2 4 241 1 317 1 275 1 76 1 221 1 251 1 84 1 145 2 147 3 107 1 65 1 156 2 69 1 286 1 351 1 130 1 288 1 53 3 
236 1 312 3 161 1 84 1 145 2 2 4 241 1 329 1 107 1 147 3 317 1 65 1 275 1 156 2 69 1 351 1 286 1 76 1 221 1 288 1 251 1 53 3 
312 1 147 1 317 1 286 1 344 1 53 1 
312 7 238 1 291 1 192 1 84 1 41 1 2 3 208 1 299 1 258 1 147 6 317 3 108 1 344 1 169 1 246 1 286 2 76 2 60 1 251 2 53 7 
312 1 336 3 54 1 193 6 95 1 98 1 315 1 240 1 2 1 116 1 135 1 5 1 299 1 243 2 118 2 317 1 273 1 197 1 249 1 101 1 251 1 11 1 199 1 172 2 307 1 225 2 308 2 84 1 104 2 30 1 327 3 230 1 347 1 231 2 50 1 13 2 180 4 147 1 36 2 233 2 286 1 183 1 110 2 352 1 159 1 15 1 53 1 
236 1 312 1 2 2 241 1 74 1 75 2 76 1 226 1 255 2 145 3 281 1 49 1 209 1 329 1 256 1 107 1 147 1 65 2 182 2 156 3 88 1 351 1 90 1 235 2 288 1 112 1 53 1 132 1 
312 2 84 1 2 2 299 1 147 2 317 2 351 1 344 1 246 1 286 1 251 1 53 2 223 1 
312 4 267 1 2 1 299 1 147 4 317 1 151 1 283 1 69 1 286 1 76 1 251 1 53 4 
312 2 291 1 84 1 294 1 2 1 258 1 147 2 129 1 317 2 275 1 286 1 251 1 53 2 290 1 
312 1 147 1 317 1 286 1 76 1 3 1 138 1 353 1 354 1 53 1 
312 2 2 1 299 1 147 2 317 1 8 1 169 1 286 1 60 1 251 1 53 2 
312 5 238 1 267 1 2 3 41 1 299 1 147 4 317 2 151 1 283 1 275 1 169 1 286 2 76 1 251 2 53 5 
312 5 267 1 2 3 41 1 299 1 147 4 51 1 317 2 151 1 283 1 275 1 169 1 286 2 76 1 251 2 53 5 
312 1 81 1 98 1 308 2 84 1 2 1 230 1 116 1 50 1 5 1 13 2 147 1 317 1 36 1 286 1 76 1 251 1 53 1 
312 1 291 1 84 1 2 1 258 1 147 1 317 2 108 1 275 1 246 1 286 1 251 1 53 1 
308 1 194 1 217 1 116 1 13 1 181 1 343 1 335 1 99 1 
324 1 99 1 139 1 
181 1 198 1 36 1 335 1 99 1 
236 1 264 1 324 1 266 1 145 2 206 1 106 1 241 1 256 1 107 1 33 1 181 2 198 2 36 1 156 2 335 2 99 1 100 1 139 1 
338 1 287 1 109 1 262 1 
224 1 66 1 239 1 83 1 338 1 287 1 262 1 
224 1 44 1 62 1 
224 3 239 3 83 1 338 1 124 1 125 2 175 1 42 1 66 1 120 1 287 1 262 1 
224 2 66 1 200 1 239 2 83 1 338 1 27 1 287 1 262 1 
224 1 239 1 83 1 338 1 3 1 316 1 66 1 43 1 219 1 120 1 138 1 
224 1 66 1 239 1 83 1 338 1 120 1 262 1 
224 1 66 1 239 1 83 1 120 1 287 1 262 2 
224 2 239 2 83 2 338 1 174 1 348 1 268 1 66 2 120 1 262 1 
218 1 224 3 66 1 239 3 83 1 338 2 27 2 134 1 120 1 287 1 262 1 316 1 297 1 
224 2 46 1 239 2 83 1 338 1 27 1 114 1 3 2 66 1 219 1 120 1 287 1 262 1 138 1 353 1 
224 4 239 4 200 1 83 2 27 2 338 2 48 1 297 1 316 1 66 2 120 1 287 1 262 1 
224 1 66 1 239 1 83 1 338 1 120 1 287 1 262 1 
224 4 239 4 83 1 27 2 338 3 125 1 124 1 175 1 297 1 316 1 66 1 287 2 262 2 111 1 
224 2 1 1 239 2 83 1 338 1 27 1 29 1 66 1 120 1 287 1 262 1 14 1 
224 3 239 3 83 1 338 1 124 1 125 2 175 2 300 1 66 1 120 1 287 1 262 1 
149 1 338 2 176 2 80 1 
224 1 66 1 239 1 83 1 120 1 248 1 
218 1 224 2 66 1 239 2 83 1 338 1 27 1 120 1 287 1 262 1 
184 1 
224 1 66 1 239 1 83 1 338 1 120 1 287 1 262 1 
224 3 239 3 83 1 27 1 338 1 125 1 218 1 66 1 120 1 287 1 262 1 
338 1 111 1 316 1 297 1 
338 1 262 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 354 (170,266) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 354 (170,266) (170,266) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 354 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 354 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 354 (170,266) (170,266) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 61 349 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 354 (170,266) (170,266) 374 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 73 1 302 1 308 1 96 1 203 1 
334 1 73 1 302 1 308 1 96 1 203 1 
334 1 73 1 302 1 308 1 96 1 203 1 
334 1 73 1 302 1 308 1 96 1 203 1 
334 1 55 1 116 1 104 1 73 4 256 3 302 1 226 2 129 1 121 3 96 1 344 2 87 1 171 1 108 1 88 1 308 4 375 1 
334 1 55 1 351 1 116 1 73 2 302 1 129 1 121 1 96 1 168 1 356 1 35 1 89 1 308 2 155 1 375 1 
334 2 55 1 116 1 73 3 256 1 302 1 226 1 121 2 96 2 167 1 108 1 89 1 308 3 
334 2 55 1 116 1 73 9 226 4 121 5 33 1 96 2 344 2 317 1 256 7 104 1 302 1 129 1 167 1 87 1 171 1 108 3 89 1 88 1 308 9 25 1 143 1 375 1 
334 2 55 1 116 1 73 9 226 4 121 5 33 1 96 2 344 2 317 1 256 7 104 1 302 1 129 1 167 1 87 1 171 1 108 3 89 1 88 1 308 9 25 1 143 1 375 1 
353 1 14 1 166 1 
0 1 15 2 166 1 
49 2 127 2 180 1 230 2 208 2 174 2 310 2 144 1 
146 2 72 1 180 1 271 1 95 1 183 1 34 1 186 1 295 1 74 1 229 2 99 1 153 1 4 1 189 1 347 1 206 1 230 3 207 1 208 2 283 2 298 1 255 2 322 1 126 1 127 2 85 2 17 1 131 1 241 1 49 2 264 1 110 1 247 1 174 3 310 2 144 1 
49 1 127 1 230 1 208 1 354 1 174 1 310 1 144 1 266 1 
311 1 42 1 224 1 26 1 353 1 83 1 361 1 166 1 196 1 23 1 230 1 208 1 174 1 62 1 
311 1 42 1 26 1 353 1 127 1 83 2 361 1 166 1 49 1 196 1 23 2 230 1 208 1 174 1 310 1 
23 1 83 1 281 1 8 1 275 1 
76 1 23 2 353 1 83 2 340 1 281 1 166 1 275 1 
23 1 83 1 281 1 
83 1 127 1 354 1 275 1 170 1 49 1 23 1 230 1 208 1 174 1 310 1 144 1 266 1 
166 1 
76 1 23 2 353 1 301 1 83 2 281 1 166 1 275 1 
313 1 161 2 201 1 353 1 83 5 84 2 162 1 182 1 166 1 275 2 76 1 23 5 137 1 280 1 364 1 281 2 297 1 234 2 145 1 
180 1 14 1 
65 1 160 1 127 1 180 2 49 1 230 2 208 2 174 2 310 1 
355 1 336 1 357 1 
255 1 146 1 72 1 126 1 180 1 271 1 95 1 183 1 58 1 241 1 295 1 347 1 230 1 247 1 174 1 283 1 
367 1 255 1 146 1 336 1 126 1 72 1 127 1 323 1 271 1 95 1 183 1 295 1 241 1 347 1 230 2 247 1 208 1 174 2 310 1 283 1 
367 1 223 1 160 1 127 4 180 1 179 1 323 2 49 1 218 1 230 5 208 5 174 5 310 4 62 1 
127 1 230 1 208 1 354 1 174 1 310 1 
49 1 127 3 180 1 230 3 323 1 208 3 174 3 310 3 
127 1 230 1 208 1 354 1 174 1 310 1 
311 1 65 1 49 1 160 1 127 1 230 1 208 1 174 1 310 1 
311 1 146 1 26 1 72 1 180 1 271 1 361 1 95 1 183 1 34 1 295 1 74 1 229 1 99 1 4 1 347 1 206 1 230 4 208 3 283 1 298 1 367 1 255 1 322 1 160 1 42 1 126 1 127 3 83 1 285 1 323 1 85 2 17 1 241 1 49 2 196 1 246 1 23 1 264 1 110 1 247 1 174 4 310 3 144 1 
223 1 127 1 180 1 230 2 208 2 323 1 174 2 310 1 62 1 
311 1 367 1 359 1 160 1 42 1 26 1 83 1 127 3 285 1 323 2 361 1 166 1 49 1 196 1 23 1 230 3 208 3 174 3 310 3 
160 1 336 1 127 2 323 1 49 1 230 2 208 2 174 2 357 1 310 2 
255 1 146 1 72 1 126 1 180 1 271 1 95 1 183 1 241 1 295 1 347 1 230 1 247 1 174 1 283 1 
255 1 146 1 72 1 126 1 180 1 95 1 241 1 295 1 245 1 345 1 347 1 230 1 247 1 174 1 283 1 
336 2 56 1 34 1 229 4 4 1 206 1 233 1 157 1 299 1 322 1 368 1 370 1 13 1 85 2 237 1 17 1 131 2 355 2 373 1 264 2 110 1 357 2 331 1 176 1 
311 1 42 1 127 1 230 1 208 1 174 1 310 1 332 1 
291 1 173 1 
291 1 173 1 
98 1 141 1 
98 1 141 1 
98 1 141 1 
291 1 173 1 305 1 
291 1 173 1 305 1 
268 1 291 1 173 1 
11 1 98 1 291 2 36 1 173 2 141 1 
291 1 173 1 305 1 
291 1 173 1 7 1 
291 1 173 1 7 1 
291 1 173 1 7 1 
335 1 268 1 291 1 180 1 118 1 32 1 277 1 75 1 188 1 230 2 208 2 125 1 39 1 127 2 83 1 132 1 23 1 52 1 173 1 174 2 175 1 310 2 54 1 333 1 
125 1 11 1 352 1 83 2 291 2 43 1 166 1 277 2 215 2 328 1 23 2 188 2 52 3 53 1 173 2 282 1 333 2 54 2 318 1 
88 1 129 1 375 1 
356 1 129 1 375 1 
356 1 320 1 88 2 309 1 249 1 375 3 
356 1 320 1 88 1 249 1 342 1 375 2 
356 1 320 1 88 1 249 2 375 2 
335 1 0 1 312 2 269 2 56 1 29 1 32 1 275 4 76 1 204 1 280 2 281 1 234 1 365 1 157 1 299 1 39 1 161 1 83 5 353 1 303 1 15 3 84 1 237 1 165 1 166 2 371 2 50 1 51 1 23 5 137 1 145 3 
289 1 275 2 230 1 208 1 281 1 8 1 83 2 353 1 127 1 354 1 166 1 170 1 49 1 23 2 90 1 174 1 310 1 177 1 144 1 266 1 
0 2 269 1 312 2 56 1 29 1 182 1 275 2 280 2 234 1 299 1 157 1 39 1 161 1 353 1 83 3 303 1 84 1 15 4 237 1 166 3 165 1 371 2 50 1 51 1 23 3 145 3 
0 3 312 4 269 2 292 1 56 2 29 1 182 1 275 3 280 4 234 1 299 2 157 2 39 2 161 1 353 1 83 4 303 2 15 7 84 1 237 2 130 1 166 4 165 1 371 4 260 1 50 1 23 4 51 1 145 5 
14 1 95 1 46 1 
95 1 259 1 
123 1 
347 1 247 1 95 1 
327 1 95 1 
347 1 95 1 
80 1 95 2 46 2 123 1 347 1 247 1 154 1 
157 1 235 1 368 3 236 1 213 1 370 2 66 1 44 1 106 2 237 1 86 1 131 4 326 1 21 1 229 7 264 3 114 1 
157 1 235 1 368 3 236 1 213 1 370 2 66 1 44 1 106 2 237 1 86 1 131 4 326 1 21 1 229 7 264 3 114 1 
157 1 267 1 235 1 368 3 236 1 213 1 370 2 66 1 44 1 106 2 237 1 86 1 131 4 326 1 21 1 229 7 264 3 114 1 
28 4 56 3 294 1 34 1 59 1 229 31 4 1 206 1 191 1 299 3 157 4 322 1 235 1 236 2 368 10 213 2 66 2 303 3 370 5 44 1 85 2 106 3 237 4 164 1 86 1 239 1 131 16 326 2 21 1 263 1 264 15 91 1 142 3 114 5 
34 2 229 9 4 2 206 2 157 1 322 2 235 1 368 4 236 1 213 1 370 3 66 1 85 4 106 2 237 1 164 1 86 1 131 5 326 1 195 1 21 1 288 1 264 4 114 1 
146 1 334 1 70 1 270 1 55 1 27 1 116 1 73 2 2 1 121 1 96 1 279 1 100 1 283 1 211 1 64 1 255 1 126 1 256 1 302 1 304 1 129 1 241 1 356 1 88 1 89 1 308 2 309 1 375 2 200 1 
146 1 334 1 70 1 55 1 27 1 116 1 73 3 2 1 121 1 96 1 185 1 279 1 100 1 283 1 211 1 64 1 255 1 126 1 256 2 129 1 19 1 241 1 356 1 109 1 88 1 89 1 309 1 308 3 375 2 200 1 
146 1 70 1 55 1 27 1 116 1 73 2 2 1 121 1 185 1 279 1 100 1 283 1 64 1 255 1 126 1 256 2 129 1 241 1 356 1 109 1 89 1 88 1 308 2 309 1 375 2 
334 1 255 1 146 1 158 1 70 2 300 1 126 1 72 1 73 1 30 1 95 1 149 1 227 1 19 1 96 1 241 1 279 2 89 2 100 2 347 1 93 1 308 1 283 1 
146 1 334 1 70 1 270 1 27 1 73 1 2 1 96 1 279 1 100 1 283 1 211 1 64 1 255 1 126 1 302 1 129 1 241 1 356 1 109 1 88 1 89 1 308 1 309 1 375 2 200 1 
37 1 
146 2 0 2 1 1 339 2 95 1 347 1 254 1 209 2 208 1 62 1 255 2 212 4 159 2 161 1 353 1 15 2 105 1 166 2 262 1 23 5 172 1 174 1 265 1 311 1 72 2 224 1 26 1 361 1 30 1 31 1 276 1 76 3 316 2 280 2 230 1 231 2 281 6 234 1 283 2 321 1 42 1 192 2 126 1 83 5 84 1 241 1 243 1 244 2 47 1 50 1 196 1 137 1 92 1 93 1 145 2 
311 1 26 1 224 1 361 1 31 1 76 1 254 1 230 1 208 1 231 1 281 2 62 1 212 2 42 1 83 3 301 1 105 1 196 1 262 1 23 3 172 1 174 1 
311 1 26 1 224 1 361 1 31 1 76 1 254 1 230 1 208 1 281 1 62 1 212 3 42 1 192 1 83 3 353 1 301 1 105 1 166 1 196 1 262 1 23 3 172 1 174 1 
311 1 26 1 224 1 361 1 31 1 76 1 254 1 230 1 316 1 208 1 231 1 281 2 62 1 212 3 42 1 192 1 301 1 83 3 353 1 105 1 166 1 196 1 262 1 23 3 172 1 174 1 
311 1 0 2 94 1 178 1 224 1 26 1 290 1 339 2 361 1 31 1 76 3 254 1 101 1 280 1 230 1 316 4 209 2 5 1 208 1 231 4 281 7 234 1 62 1 212 6 159 2 321 1 161 1 42 1 192 4 353 5 301 1 83 5 84 1 105 1 166 5 244 2 196 1 262 1 23 5 137 1 172 1 92 1 174 1 145 1 
0 2 339 2 254 1 208 1 209 2 62 1 212 4 159 2 161 1 353 1 105 1 15 2 166 2 262 1 23 4 172 1 174 1 265 1 311 1 26 1 224 1 361 1 31 1 76 2 230 1 280 1 316 2 231 2 281 4 234 1 321 1 42 1 192 2 83 4 84 1 244 2 196 1 137 1 92 1 145 1 
311 1 0 2 94 1 26 1 224 1 339 2 361 1 31 1 76 2 254 1 316 2 101 1 280 1 230 1 231 2 209 2 208 1 5 1 281 4 234 1 62 1 212 4 159 2 321 1 42 1 161 1 192 2 353 1 83 4 105 1 84 1 166 1 244 2 196 1 262 1 23 4 172 1 137 1 92 1 174 1 145 1 
311 1 0 2 94 1 26 1 224 1 339 2 361 1 31 1 76 2 254 1 316 2 101 1 280 1 230 1 231 2 209 2 208 1 5 1 281 4 234 1 62 1 212 4 159 2 321 1 42 1 161 1 192 2 353 1 83 4 105 1 84 1 166 1 244 2 196 1 262 1 23 4 172 1 137 1 92 1 174 1 145 1 
311 1 115 1 26 1 224 1 339 2 361 1 31 1 76 2 122 1 254 1 316 2 101 1 280 1 230 1 231 2 208 1 281 4 234 1 62 1 319 2 212 4 40 1 42 1 161 1 192 2 353 1 83 4 15 2 105 1 84 1 166 1 214 2 244 2 196 1 262 1 23 4 172 1 137 1 92 1 174 1 145 1 
311 1 0 2 94 1 178 1 26 1 224 1 339 2 361 1 31 1 76 2 254 1 101 1 280 1 230 1 316 3 209 2 5 1 208 1 231 3 281 5 234 1 62 1 212 5 159 2 321 1 161 1 42 1 192 3 353 1 83 4 84 1 105 1 166 1 244 2 196 1 262 1 23 4 137 1 172 1 92 1 174 1 145 1 
311 1 0 2 94 1 178 1 26 1 224 1 339 2 361 1 31 1 76 2 254 1 101 1 280 1 230 1 316 3 209 2 5 1 208 1 231 3 281 5 234 1 62 1 212 5 159 2 321 1 161 1 42 1 192 3 353 1 83 4 84 1 105 1 166 1 244 2 196 1 262 1 23 4 137 1 172 1 92 1 174 1 145 1 
339 2 254 1 208 1 62 1 212 4 161 1 353 1 105 1 15 2 166 1 214 2 262 1 23 4 172 1 174 1 265 1 311 1 26 1 224 1 361 1 31 1 122 1 76 2 230 1 280 1 316 2 231 2 281 4 234 1 319 2 42 1 192 2 83 4 84 1 244 2 196 1 137 1 92 1 145 1 
336 1 180 2 34 1 229 6 4 1 206 1 233 1 157 1 322 1 235 1 236 1 368 2 66 1 370 2 14 1 85 2 106 1 17 1 237 1 86 1 131 3 355 1 21 1 264 3 110 1 357 1 
336 11 28 3 56 1 180 1 120 1 314 1 34 2 99 1 229 14 4 2 189 1 206 2 299 2 157 2 322 2 368 2 370 1 303 2 85 4 17 2 237 1 131 8 239 1 355 11 169 1 263 1 264 6 139 1 110 1 357 4 69 1 142 3 114 1 
146 1 72 1 180 1 271 1 95 1 183 1 58 1 34 1 295 1 315 1 99 1 229 2 4 1 347 1 189 1 206 1 230 2 208 1 6 1 283 1 255 1 367 1 322 1 126 1 127 1 323 1 85 2 17 1 131 1 241 1 139 1 264 1 247 1 110 1 174 2 250 1 357 1 310 1 
146 3 336 7 56 2 95 2 295 2 99 1 4 3 347 2 206 3 208 1 255 3 299 2 157 3 66 1 303 2 106 1 258 1 17 3 307 2 355 7 21 1 109 1 216 2 264 10 110 3 174 3 357 7 310 1 114 4 358 1 72 1 180 2 271 2 183 2 34 3 74 2 229 20 77 2 189 1 230 3 283 3 366 2 367 1 322 3 235 1 236 1 126 2 368 8 127 1 370 4 323 1 85 6 237 3 86 1 238 1 131 10 241 2 139 1 247 2 
146 8 147 1 72 2 181 1 30 1 95 3 34 2 186 2 278 1 187 1 229 2 99 1 4 2 189 1 347 2 230 1 206 2 208 1 233 1 350 1 283 8 255 7 322 2 126 2 127 1 304 1 323 1 85 4 17 2 131 1 241 2 109 1 138 1 264 1 140 1 110 2 93 1 174 1 310 1 
336 1 56 1 202 1 34 1 229 3 4 1 206 1 230 1 208 1 299 1 157 1 322 1 160 1 368 1 127 1 370 1 303 1 85 2 17 1 237 1 131 1 355 1 49 1 139 1 264 2 110 1 174 1 357 1 310 1 
299 1 157 1 322 1 336 1 368 1 13 1 85 2 17 1 131 2 34 1 355 1 229 2 4 1 206 1 110 1 357 1 233 1 114 1 
322 1 336 1 368 1 370 1 56 1 85 2 17 1 237 1 34 1 355 1 229 2 4 1 206 1 264 2 110 1 357 1 233 1 331 1 
336 2 56 1 34 1 229 4 4 1 206 1 233 1 157 1 299 1 322 1 368 2 303 1 370 1 85 2 17 1 237 1 131 2 355 2 264 2 110 1 357 2 114 1 
299 1 157 1 322 1 336 1 368 1 13 1 85 2 17 1 131 2 34 1 355 1 278 1 229 2 4 1 206 1 110 1 357 1 114 1 
322 1 336 1 368 1 370 1 56 1 85 2 17 1 237 1 34 1 355 1 278 1 229 2 4 1 206 1 264 2 110 1 357 1 331 1 
336 2 56 1 34 1 278 1 229 4 4 1 206 1 157 1 299 1 322 1 368 2 303 1 370 1 85 2 17 1 237 1 131 2 355 2 264 2 110 1 357 2 114 1 
336 2 56 1 34 1 229 4 4 1 206 1 157 1 299 1 322 1 368 2 303 1 370 1 85 2 17 1 237 1 131 2 355 2 264 2 110 1 357 2 114 1 
146 1 72 1 180 1 271 1 95 1 183 1 34 1 295 1 74 1 229 2 99 1 4 1 189 1 347 1 230 1 206 1 283 1 255 1 322 1 126 1 85 2 17 1 131 1 241 1 264 1 247 1 110 1 174 1 
146 1 72 1 180 1 95 1 34 1 295 1 345 1 229 2 99 1 4 1 189 1 347 1 230 1 206 1 283 1 255 1 322 1 126 1 85 2 17 1 131 1 241 1 245 1 22 1 264 1 247 1 110 1 174 1 
336 2 56 1 34 1 229 4 4 1 206 1 157 1 299 1 322 1 368 2 303 1 370 1 85 2 17 1 237 1 131 2 355 2 139 1 264 2 110 1 357 2 114 1 
146 1 336 2 56 1 271 1 95 1 183 1 34 1 295 1 74 1 229 4 4 1 347 1 230 1 206 1 283 1 366 1 157 1 299 1 255 1 322 1 368 2 126 1 370 1 303 1 304 1 85 2 237 1 17 1 131 2 355 2 241 1 264 2 247 1 110 1 174 1 357 2 114 1 
336 1 56 1 34 1 229 3 4 1 206 1 230 1 208 1 299 1 157 1 322 1 160 1 12 1 368 1 127 1 303 1 85 2 237 1 17 1 131 2 355 1 49 1 264 1 139 1 110 1 174 1 357 1 310 1 114 1 
222 1 28 2 56 3 119 1 34 2 229 19 4 2 206 2 61 2 349 1 299 3 157 3 322 2 368 6 370 3 303 3 85 4 237 3 194 1 131 9 239 1 261 2 20 1 134 1 288 1 263 1 264 10 142 1 220 1 114 3 
222 2 338 1 28 2 56 2 117 1 273 1 34 3 151 1 229 24 4 3 206 3 61 1 349 1 299 3 157 3 322 3 368 2 370 1 303 3 85 6 18 1 164 2 237 2 194 1 131 13 240 1 261 3 20 2 288 1 263 2 264 11 142 2 220 1 114 1 
222 2 338 1 28 4 56 4 117 1 273 1 34 3 151 1 229 32 4 3 206 3 61 1 349 1 299 4 157 4 322 3 368 5 370 2 303 4 85 6 18 1 164 1 237 4 194 1 131 15 239 1 240 1 261 3 20 1 134 1 288 1 263 3 264 17 198 1 142 3 220 1 114 3 
222 2 338 1 28 4 56 3 117 1 273 1 34 4 151 1 229 33 4 4 206 4 61 1 349 1 299 4 157 4 322 4 368 6 370 3 303 4 85 8 18 1 164 2 237 3 194 1 131 17 239 1 240 1 261 4 20 1 134 1 288 1 263 3 264 16 198 1 142 3 220 1 114 3 
222 1 338 1 28 4 56 6 117 1 273 1 314 2 34 2 151 1 229 46 4 2 206 2 61 1 349 1 299 6 157 7 322 2 235 1 236 1 368 12 66 1 370 6 303 6 106 1 85 4 18 1 164 1 237 7 86 1 194 1 131 24 239 2 240 1 261 3 20 1 21 1 288 1 263 2 264 22 142 4 220 1 114 6 
277 1 11 1 352 1 188 1 291 1 53 1 286 1 173 1 54 1 333 1 
268 1 75 1 
68 1 277 1 9 1 188 1 291 1 173 1 54 1 333 1 221 1 
372 1 305 1 
71 1 36 1 7 1 
125 1 11 1 352 1 83 1 291 1 43 1 166 1 277 1 215 1 328 1 23 1 188 1 52 2 53 1 173 1 333 1 54 1 318 1 
125 1 11 1 352 1 83 1 291 1 43 1 166 1 277 1 215 1 328 1 23 1 188 1 52 2 53 1 173 1 333 1 54 1 318 1 
125 1 11 1 352 1 83 1 291 1 43 1 166 1 277 1 215 1 328 1 23 1 188 1 52 2 53 1 173 1 333 1 54 1 318 1 
372 1 36 1 305 1 
372 1 36 1 305 1 
71 1 7 1 
71 1 36 1 7 1 
175 1 132 1 
335 1 268 1 291 1 180 1 118 1 32 1 275 1 277 1 75 1 188 1 230 2 208 2 39 1 83 1 127 2 369 1 43 1 132 1 215 1 23 1 52 1 173 1 174 2 175 1 310 2 54 1 333 1 
146 2 148 1 181 1 95 1 34 1 186 2 229 2 99 1 4 1 347 1 205 1 189 1 206 1 230 2 78 1 208 2 232 1 283 2 63 1 255 2 322 1 126 1 85 2 17 1 131 1 241 1 138 1 139 1 264 1 110 1 174 2 
255 2 146 2 126 1 304 1 129 1 2 1 241 1 356 1 279 1 109 1 88 1 329 1 309 1 283 2 113 1 112 1 375 2 211 1 64 1 
255 1 146 1 156 1 126 1 129 1 2 1 241 1 356 1 279 1 109 1 88 1 309 1 283 1 112 1 375 2 211 1 64 1 
255 1 146 1 126 1 72 1 30 1 95 1 149 1 241 1 279 1 347 1 102 1 93 1 283 1 113 1 
255 1 146 1 126 1 129 1 2 1 241 1 356 1 279 1 109 1 88 1 329 1 309 1 283 1 113 1 112 1 375 2 211 1 64 1 
272 1 
353 1 280 1 364 1 14 1 162 1 166 1 145 1 
0 1 76 1 280 1 209 1 281 1 234 1 159 1 321 1 161 1 83 1 353 1 84 1 15 1 166 2 23 1 137 1 145 1 
146 3 0 6 337 2 56 2 57 1 95 10 150 2 253 1 347 3 210 2 255 3 299 2 157 2 161 4 353 2 303 2 15 12 163 1 304 1 162 1 166 8 259 3 67 1 23 5 111 1 312 6 72 1 228 2 76 3 77 2 364 1 280 8 281 5 234 4 283 3 38 2 80 1 126 3 83 5 284 2 84 4 324 2 46 2 237 2 241 4 371 6 287 2 327 2 47 1 50 2 196 2 137 4 247 3 145 9 
0 3 312 5 338 1 28 1 56 2 117 1 273 1 151 1 76 1 280 4 281 1 234 2 299 2 157 2 161 2 83 1 353 1 303 2 15 6 84 2 324 1 107 1 237 2 166 4 240 1 371 5 23 1 263 1 137 2 142 1 145 7 
230 1 280 1 5 1 208 1 234 1 157 1 161 1 235 1 236 1 83 1 127 1 66 1 84 1 354 1 324 2 237 1 170 1 49 1 23 1 137 1 174 1 374 1 310 1 144 1 145 2 266 1 
161 1 353 1 84 1 162 1 166 1 137 1 364 1 280 1 234 1 145 1 
299 2 157 2 0 5 312 5 303 2 56 2 15 10 324 2 237 2 166 5 371 5 77 1 280 5 38 1 145 5 
23 1 76 1 353 1 83 1 281 1 166 1 
146 4 1 1 72 2 30 1 182 1 95 1 57 1 76 2 347 1 280 2 281 4 234 2 283 4 255 4 161 2 126 1 83 3 128 1 84 2 163 2 241 1 243 1 47 2 50 2 23 3 137 1 219 1 93 1 145 2 
146 1 72 1 180 1 271 1 95 1 183 1 34 1 295 1 74 1 229 1 99 1 4 1 347 1 230 3 206 1 208 2 283 1 298 1 255 1 322 1 126 1 127 2 85 2 17 1 241 1 49 2 264 1 247 1 110 1 174 3 310 2 144 1 
0 2 312 2 161 1 353 2 15 4 84 1 106 1 166 4 371 2 47 1 50 1 137 1 280 2 234 1 145 1 
277 1 54 1 184 1 
277 1 54 1 184 1 
277 1 352 1 3 1 175 1 54 1 
277 1 54 1 184 1 
277 1 193 1 54 1 
277 1 193 1 54 1 
277 1 193 1 54 1 
277 1 54 1 
291 1 173 1 
157 1 322 2 235 1 368 3 236 1 370 2 66 1 106 1 85 4 237 1 164 1 86 1 131 4 34 2 21 1 229 8 4 2 264 4 206 2 114 1 
157 1 235 1 236 1 368 2 66 1 370 2 14 1 106 1 237 1 86 1 131 3 21 1 229 6 264 3 
299 1 157 1 322 1 368 2 370 1 56 1 303 1 85 2 237 1 131 2 34 1 229 4 4 1 264 2 206 1 199 1 114 1 
299 1 157 1 368 2 370 1 56 1 28 2 303 1 237 1 131 3 239 1 263 1 229 7 264 4 142 1 114 1 
28 2 56 2 314 1 34 2 229 23 4 2 206 2 157 3 299 2 322 2 235 1 236 2 368 9 66 2 303 2 370 5 106 1 85 4 237 3 164 2 86 1 239 1 131 11 21 1 169 1 197 1 264 12 142 2 114 4 
229 1 28 1 264 1 
229 1 131 1 142 1 
299 1 157 1 322 1 368 3 303 1 56 1 370 2 85 2 237 1 131 3 34 1 229 6 4 1 77 1 206 1 264 3 199 1 114 1 
338 1 28 1 56 2 117 1 273 1 34 1 151 1 229 12 4 1 206 1 299 2 157 2 322 1 368 2 303 2 370 1 85 2 237 2 131 6 240 1 288 1 263 1 264 6 142 1 114 1 
157 1 235 1 236 1 368 2 66 1 370 1 237 1 131 3 229 6 264 3 114 1 
322 1 368 2 236 1 370 1 66 1 85 2 164 1 86 1 131 1 34 1 21 1 229 3 4 1 197 1 264 2 206 1 114 1 
157 2 322 1 235 1 236 2 368 5 66 2 370 3 85 2 237 2 131 5 34 1 288 1 229 10 4 1 206 1 264 5 374 1 114 2 
299 1 157 1 322 1 368 1 85 2 131 2 34 1 288 1 229 2 4 1 206 1 114 1 
299 1 157 1 322 1 368 2 370 1 56 1 303 1 85 2 237 1 131 2 34 1 288 1 229 4 4 1 264 2 206 1 114 1 
322 3 236 1 368 2 66 1 370 1 85 6 164 1 131 1 34 3 134 1 288 1 229 3 4 3 197 1 264 2 206 3 114 1 
28 4 56 3 34 5 59 1 229 34 4 5 206 5 191 1 299 3 157 5 322 5 235 2 236 3 368 12 66 3 303 3 370 7 106 1 85 10 164 2 237 5 86 1 131 16 239 1 21 1 134 1 288 1 263 1 197 1 91 1 264 18 142 3 199 1 114 5 
28 1 117 1 34 1 229 8 4 1 206 1 157 1 322 1 235 1 236 1 368 2 66 1 370 2 106 1 85 2 237 1 86 1 131 4 21 1 288 1 263 1 264 4 142 1 
28 2 117 1 34 2 229 11 4 2 206 2 299 1 157 2 322 2 235 1 236 1 368 3 370 2 66 1 303 1 106 1 85 4 237 1 86 1 131 6 239 1 21 1 288 1 263 1 264 5 142 1 199 1 114 1 
338 1 28 1 56 2 117 1 273 1 34 3 151 1 229 13 4 3 206 3 299 2 157 2 322 3 368 2 303 2 370 1 85 6 237 2 164 1 131 6 240 1 288 1 263 1 264 7 142 1 199 1 114 1 
338 1 28 1 56 1 117 1 273 1 34 3 151 1 229 11 4 3 206 3 299 2 157 2 322 3 368 2 303 2 370 1 85 6 164 1 237 1 131 7 240 1 288 1 263 1 264 4 142 1 199 1 114 1 
28 1 117 1 34 1 229 8 4 1 206 1 157 1 322 1 235 1 236 1 368 2 66 1 370 2 106 1 85 2 237 1 86 1 131 4 21 1 288 1 263 1 264 4 142 1 
338 1 28 1 56 2 117 1 273 1 34 1 151 1 229 12 4 1 206 1 299 2 157 2 322 1 368 2 303 2 370 1 85 2 237 2 131 6 240 1 288 1 263 1 264 6 142 1 114 1 
338 1 28 1 56 1 117 1 273 1 34 4 151 1 229 12 4 4 206 4 299 2 157 2 322 4 368 2 303 2 370 1 85 8 237 1 164 2 131 7 240 1 288 1 263 1 264 5 142 1 114 1 199 1 
338 1 28 1 56 1 117 1 273 1 34 4 151 1 229 12 4 4 206 4 299 2 157 2 322 4 368 4 303 2 370 2 85 8 237 1 164 2 131 7 240 1 134 1 288 1 263 1 264 5 142 1 114 2 
157 1 235 1 236 3 368 6 66 3 370 3 237 1 86 2 131 3 21 1 229 7 264 4 114 3 
338 1 28 1 56 1 117 1 273 1 34 4 151 1 229 12 4 4 206 4 299 2 157 2 322 4 368 2 303 2 370 1 85 8 237 1 164 2 131 7 240 1 134 1 288 1 263 1 264 5 142 1 114 1 
48 1 223 1 180 1 230 1 208 1 174 1 62 1 
81 1 24 1 293 1 362 1 325 1 
241 1 146 1 255 1 126 1 72 1 347 1 14 1 93 1 30 1 95 1 283 1 
255 1 146 1 72 1 126 1 127 1 180 1 323 1 95 1 183 1 295 1 241 1 347 1 230 2 247 1 208 1 174 2 310 1 283 1 
311 1 255 1 146 1 337 1 42 1 126 1 127 2 180 1 361 1 323 1 163 1 95 3 183 1 295 1 241 1 327 1 347 2 230 2 247 2 208 2 174 2 310 1 283 1 
146 2 311 1 337 1 225 1 180 1 361 1 95 3 295 1 345 1 347 2 230 2 208 2 283 2 255 2 42 1 126 1 127 2 163 1 323 1 241 1 327 1 247 2 174 2 310 1 
146 3 337 1 72 1 225 1 341 1 95 4 347 1 190 1 281 1 283 3 255 3 126 1 83 2 353 1 163 1 46 1 166 1 259 1 241 1 327 1 196 1 23 2 247 1 
255 3 146 3 337 1 72 1 126 1 225 1 353 1 83 2 163 1 95 4 46 1 166 1 150 1 259 1 241 1 327 1 196 1 23 2 347 1 247 1 281 1 283 3 
241 1 146 1 255 1 126 1 187 1 283 1 
255 6 146 7 80 1 147 1 72 2 126 2 304 1 95 3 274 1 186 1 241 3 109 1 187 1 60 1 136 1 138 1 347 2 140 1 247 1 350 1 283 7 
146 1 336 1 180 2 271 1 95 1 183 1 34 2 295 1 74 1 229 6 4 2 347 1 205 1 206 2 230 2 208 1 283 1 366 1 157 1 255 1 322 2 235 1 368 2 236 1 126 1 127 1 370 2 66 1 323 1 304 1 106 1 85 4 237 1 17 2 86 1 131 3 355 1 241 1 21 1 216 1 264 3 139 1 247 1 110 2 174 2 357 1 310 1 
146 1 72 1 57 1 95 2 150 1 275 1 228 1 76 1 280 1 364 1 281 2 234 2 283 1 210 1 255 1 161 2 353 1 83 3 84 2 162 1 46 1 166 1 259 1 287 1 196 1 23 3 137 2 145 1 
255 2 146 2 80 1 126 1 304 1 46 1 95 2 67 1 241 2 187 1 347 1 247 1 283 2 
255 4 146 4 72 1 126 1 225 1 304 1 30 1 95 1 241 1 347 1 93 1 103 1 283 4 
255 2 146 2 126 1 163 1 258 1 95 1 274 1 241 2 242 1 60 1 347 1 247 1 283 2 79 1 
241 1 146 1 255 1 356 1 126 1 72 1 129 1 283 1 375 1 64 1 
241 1 146 2 255 2 109 1 126 1 347 1 138 1 304 1 95 1 232 1 283 2 
255 4 146 5 72 1 126 2 147 1 163 1 304 1 30 1 95 3 241 2 138 1 347 2 93 1 140 1 103 1 283 5 
255 4 146 5 72 1 126 2 147 1 163 1 304 1 30 1 95 3 241 2 133 1 138 1 347 2 93 1 103 1 283 5 
255 1 146 1 72 1 126 1 127 1 180 1 323 1 95 1 295 1 241 1 345 1 347 1 230 2 247 1 208 1 174 2 310 1 283 1 
255 1 146 1 80 1 126 1 163 1 95 1 274 1 241 2 60 1 136 1 347 1 247 1 283 1 
135 1 180 1 330 1 45 1 306 1 
311 1 42 1 26 1 353 1 83 2 285 1 180 1 361 1 45 2 166 1 306 2 343 1 275 1 196 1 135 1 23 2 330 2 296 1 124 1 
148 1 45 1 306 1 135 1 230 1 78 1 208 1 174 1 63 1 
135 1 296 1 124 1 
55 1 116 1 14 1 121 1 
334 1 55 1 116 1 73 1 308 1 121 1 96 1 
89 1 100 1 73 1 
334 1 168 2 97 1 55 1 346 1 41 1 116 1 73 3 302 1 308 3 121 1 96 1 
334 1 344 1 55 1 116 1 256 1 73 2 308 2 121 1 96 1 
334 1 73 1 302 1 226 1 129 1 121 1 96 1 87 1 88 1 308 1 375 1 
334 1 55 1 73 1 302 1 308 1 121 1 96 1 
334 1 55 2 116 1 73 1 302 1 308 1 96 1 
334 2 55 1 73 2 302 1 308 2 257 1 121 1 96 2 376 1 252 1 
334 1 55 1 116 1 73 3 256 2 302 1 226 1 121 2 96 1 108 1 308 3 317 1 25 1 
334 1 55 1 116 1 73 2 256 1 302 1 129 1 363 1 121 1 96 1 356 1 88 1 308 2 309 1 375 2 
334 2 55 1 116 1 73 4 104 1 256 2 302 1 226 1 121 2 96 2 344 1 108 1 308 4 
334 1 55 1 116 1 73 1 302 1 308 1 121 1 96 1 
334 1 41 1 55 2 116 2 256 2 73 4 226 1 121 3 96 1 168 1 346 1 108 1 152 1 308 4 
334 1 55 1 360 1 73 2 256 1 116 1 302 1 121 1 96 1 308 2 248 1 143 1 
334 1 41 1 55 1 73 3 116 1 302 1 121 1 251 1 96 1 168 2 346 2 308 3 
82 2 217 1 16 1 121 2 
334 1 73 1 302 1 308 1 348 1 96 1 
334 1 55 1 116 1 256 1 73 2 302 1 308 2 25 1 121 1 96 1 
10 1 
334 1 55 1 116 1 73 1 302 1 308 1 121 1 96 1 
334 1 55 1 256 1 73 3 116 1 302 1 121 1 96 1 168 1 308 3 25 1 
108 1 152 1 226 1 121 1 
55 1 121 1 

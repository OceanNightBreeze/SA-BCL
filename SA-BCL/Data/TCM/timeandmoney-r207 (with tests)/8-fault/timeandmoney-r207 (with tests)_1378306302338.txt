#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 18 347 101 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 2 5 1 86 1 333 1 355 1 218 4 88 2 104 1 357 1 336 1 310 6 337 5 162 1 108 3 194 2 72 1 282 1 226 9 120 2 197 1 364 2 288 1 349 2 292 1 230 1 327 9 150 2 46 1 
329 2 5 1 86 1 333 1 355 1 218 4 88 2 104 1 357 1 336 1 310 6 337 5 162 1 108 3 194 2 72 1 282 1 226 9 120 2 197 1 364 2 288 1 349 2 292 1 230 1 327 9 150 2 46 1 
329 2 5 1 86 1 333 1 355 1 218 5 88 2 104 1 357 1 336 1 310 7 337 6 162 1 108 4 194 2 72 1 282 1 226 10 120 2 197 1 364 2 288 1 349 2 292 1 230 1 327 10 150 2 46 1 
329 2 5 1 86 1 355 1 218 3 88 2 104 1 357 1 336 1 310 4 337 4 162 1 108 2 194 2 72 1 282 1 226 7 120 2 197 1 364 2 288 1 349 1 292 1 230 1 327 7 150 2 46 1 
329 1 194 1 5 1 282 1 226 4 120 1 197 1 333 1 355 1 288 1 218 2 88 1 349 2 310 3 337 3 108 1 327 4 150 1 
329 1 194 1 5 1 226 2 183 1 120 1 197 1 364 1 355 1 228 1 337 1 162 1 327 2 150 1 46 1 94 1 
329 2 194 2 5 1 226 3 86 1 197 1 364 1 355 1 218 1 310 1 337 2 108 1 327 3 
329 2 5 1 86 1 333 1 355 1 218 4 89 1 88 1 357 1 310 7 337 5 108 3 194 2 282 1 226 9 119 1 120 1 197 1 364 1 288 1 349 2 230 1 327 9 150 1 
329 2 5 1 86 1 333 1 355 1 218 4 89 1 88 1 357 1 310 7 337 5 108 3 194 2 282 1 226 9 119 1 120 1 197 1 364 1 288 1 349 2 230 1 327 9 150 1 
217 1 176 1 285 1 
299 2 176 1 17 1 
342 1 233 2 24 2 56 2 343 2 359 2 331 2 208 1 
297 2 298 1 233 3 24 2 272 1 102 1 27 1 103 2 331 2 240 1 131 1 312 1 52 1 37 1 164 2 113 1 41 1 116 1 115 2 342 1 280 2 343 3 359 2 251 1 345 1 74 1 198 1 202 1 56 2 266 1 78 1 231 1 326 1 270 1 271 1 125 1 208 1 
233 1 24 1 154 1 356 1 56 1 343 1 359 1 372 1 331 1 208 1 
233 1 343 1 234 1 344 1 168 1 361 1 217 1 97 1 34 1 19 1 56 1 356 1 176 1 324 1 
24 1 233 1 343 1 234 1 359 1 344 2 361 1 331 1 217 1 97 2 19 1 56 1 356 1 176 1 324 1 
97 1 344 1 205 1 244 1 265 1 
217 1 97 2 15 1 176 1 344 2 244 1 302 1 265 1 
97 1 344 1 265 1 
24 1 233 1 154 1 343 1 344 1 359 1 28 1 331 1 97 1 356 1 56 1 372 1 244 1 208 1 
176 1 
217 1 97 2 201 1 176 1 344 2 244 1 302 1 265 1 
13 1 195 2 140 1 344 5 55 1 302 1 265 2 217 1 97 5 51 2 9 1 335 1 176 1 267 1 269 1 244 2 374 1 246 2 151 1 
342 1 285 1 
248 1 233 2 24 1 342 2 343 2 359 1 331 1 56 2 36 1 
142 1 368 1 317 1 
115 1 342 1 233 1 280 1 102 1 343 1 103 1 74 1 198 1 240 1 130 1 131 1 231 1 270 1 125 1 271 1 
115 1 24 1 233 2 280 1 102 1 142 1 343 2 359 1 103 1 198 1 74 1 87 1 240 1 56 1 131 1 231 1 270 1 207 1 271 1 125 1 
342 1 233 3 24 3 56 3 343 3 359 3 331 1 207 1 
233 1 24 1 356 1 56 1 343 1 359 1 372 1 
248 1 233 1 24 1 356 1 56 1 343 1 359 1 36 1 331 1 
297 1 298 1 233 4 24 3 272 1 102 1 234 1 27 1 103 1 331 2 87 1 128 1 240 1 356 1 131 1 312 1 164 2 113 1 248 1 116 1 115 1 342 1 280 1 343 4 359 3 344 1 251 1 361 1 198 1 74 1 97 1 252 1 19 1 202 1 56 3 266 1 231 1 324 1 326 1 270 1 207 1 271 1 125 1 208 1 
34 1 342 1 233 2 24 1 56 2 343 2 21 1 359 1 207 1 
248 1 24 3 233 3 234 1 343 3 344 1 359 3 361 1 331 1 87 1 97 1 128 1 259 1 19 1 356 1 56 3 176 1 324 1 207 2 
248 1 233 1 24 1 56 1 142 1 343 1 359 1 331 1 
115 1 342 1 233 1 280 1 102 1 343 1 103 1 74 1 198 1 240 1 131 1 231 1 270 1 125 1 271 1 
115 1 342 1 233 1 280 1 273 1 343 1 103 1 198 1 240 1 131 1 161 1 231 1 270 1 125 1 271 1 
113 1 164 2 47 1 297 2 298 1 48 1 142 1 251 1 316 1 317 1 319 1 308 1 202 1 266 2 326 1 312 1 
233 1 24 1 181 1 356 1 56 1 343 1 359 1 324 1 
248 1 180 1 24 4 233 5 342 1 343 5 359 4 331 1 87 1 34 1 56 5 21 1 207 2 134 1 
233 2 24 2 181 1 356 1 56 2 343 2 359 2 372 1 
80 1 190 1 
80 1 190 1 
77 1 216 1 
77 1 216 1 
77 1 216 1 
80 1 169 1 190 1 
80 1 54 1 190 1 
80 2 77 1 268 1 341 1 216 1 190 2 
80 1 169 1 190 1 
80 1 169 1 190 1 
80 1 84 1 190 1 
80 1 84 1 190 1 
80 1 84 1 190 1 
80 2 136 1 1 3 157 2 344 2 50 1 213 2 29 1 66 1 215 2 97 2 366 1 176 1 243 1 268 1 70 1 373 2 61 2 190 2 
80 1 1 1 24 2 233 2 157 1 213 1 245 1 133 1 190 1 136 1 342 1 343 2 54 1 359 2 344 1 360 1 97 1 76 1 321 1 56 2 323 1 290 1 373 1 61 1 
88 1 120 1 150 1 
120 1 150 1 94 1 
219 1 88 2 38 1 120 3 237 1 94 1 
129 1 219 1 88 1 120 2 237 1 94 1 
88 1 219 1 120 2 237 2 94 1 
23 1 299 3 3 1 256 2 302 1 67 1 184 1 217 1 51 1 241 1 9 2 335 3 244 4 246 1 117 1 249 2 263 2 195 1 138 1 344 5 360 1 316 1 144 1 17 1 265 1 319 1 97 5 57 1 323 1 176 2 290 1 374 1 
23 3 63 1 155 1 299 9 3 1 209 1 256 6 302 1 217 1 51 2 241 3 9 6 335 8 311 1 244 7 246 2 40 1 95 5 263 6 195 2 138 2 360 4 344 9 55 1 316 3 144 3 17 3 265 6 319 3 97 9 57 2 176 5 205 5 43 1 374 1 
23 1 299 4 256 2 67 1 217 1 51 1 241 1 9 2 335 3 244 2 246 1 117 1 249 1 263 2 195 1 138 1 344 3 360 1 316 1 55 1 144 1 17 2 319 1 97 3 57 1 176 3 
23 2 63 1 299 7 155 1 256 4 67 1 217 1 51 1 241 2 9 4 335 5 244 3 246 1 40 1 117 1 249 2 263 4 195 1 138 1 344 4 360 2 316 2 55 1 144 2 17 3 319 2 97 4 57 1 176 4 
131 1 149 1 285 1 
322 1 131 1 
25 1 
131 1 271 1 
173 1 90 1 131 3 149 2 271 1 125 1 
131 1 271 1 125 1 
131 1 10 1 
23 1 297 7 65 1 284 1 316 1 127 2 303 1 170 1 199 1 185 1 200 3 307 2 266 3 148 1 52 4 132 1 123 1 
23 1 297 7 65 1 284 1 316 1 127 2 303 1 170 1 199 1 185 1 200 3 307 2 266 3 148 1 52 4 132 1 123 1 
23 1 297 7 283 1 65 1 284 1 316 1 127 2 303 1 170 1 199 1 185 1 200 3 307 2 266 3 148 1 132 1 52 4 123 1 
296 1 22 1 297 6 298 1 127 1 303 1 307 1 279 1 52 3 164 2 141 1 284 1 251 1 170 2 18 1 199 1 347 1 200 2 365 1 202 1 266 3 326 1 148 1 123 1 
23 1 22 1 297 9 298 2 65 1 127 3 305 1 185 1 307 2 52 5 132 1 164 4 284 1 316 1 251 2 264 1 170 1 199 1 200 4 202 2 266 4 326 2 148 1 123 1 
329 1 5 1 85 1 103 1 354 1 355 1 240 1 88 1 310 1 337 1 106 1 38 1 340 1 94 1 115 1 194 1 280 1 224 1 71 1 250 1 226 2 166 1 120 2 197 1 198 1 364 1 177 1 206 1 327 2 150 1 
329 1 5 1 85 1 103 1 354 1 355 1 240 1 88 1 310 2 337 1 106 1 38 1 340 1 94 1 115 1 194 1 280 1 71 1 250 1 226 3 166 1 42 1 120 2 198 1 364 1 320 1 20 1 177 1 327 3 150 1 
115 1 280 1 71 1 5 1 250 1 226 2 85 1 103 1 120 2 198 1 354 1 364 1 355 1 240 1 320 1 88 1 20 1 310 2 177 1 337 1 38 1 327 2 340 1 150 1 94 1 
329 1 194 1 115 1 280 1 153 1 49 1 250 2 226 1 85 2 42 1 103 1 198 1 122 1 121 1 172 1 364 2 240 1 131 1 177 2 254 1 270 1 327 1 271 1 
329 1 194 1 115 1 280 1 71 1 250 1 226 1 85 1 166 1 103 1 120 2 197 1 198 1 354 1 364 1 240 1 88 1 20 1 177 1 106 1 206 1 38 1 327 1 340 1 150 1 94 1 
277 1 
233 1 234 1 239 1 51 1 240 1 9 2 187 1 335 2 131 1 246 1 11 2 280 2 14 2 195 1 343 1 344 5 346 1 17 2 198 1 97 5 19 1 57 1 56 1 291 1 58 2 60 1 299 2 103 2 301 1 302 3 30 2 217 1 34 1 260 1 356 1 309 1 69 1 163 2 112 1 115 2 168 1 361 1 122 1 265 6 171 2 172 1 174 1 175 4 176 2 324 1 370 2 270 2 374 1 271 1 45 1 
233 1 14 1 234 1 343 1 344 3 346 1 168 1 361 1 302 1 265 2 97 3 34 1 19 1 260 1 201 1 175 2 356 1 56 1 309 1 324 1 45 1 112 1 
233 1 234 1 343 1 344 3 346 1 168 1 361 1 302 1 30 1 265 1 217 1 97 3 34 1 19 1 260 1 201 1 175 3 356 1 56 1 176 1 309 1 324 1 45 1 112 1 
233 1 14 1 234 1 343 1 344 3 346 1 168 1 361 1 302 1 30 1 265 2 217 1 97 3 34 1 19 1 260 1 201 1 175 3 356 1 56 1 176 1 309 1 324 1 370 1 45 1 112 1 
233 1 234 1 6 1 51 1 9 1 335 1 246 1 188 1 11 2 14 4 139 1 195 1 343 1 344 5 96 1 346 1 17 2 97 5 19 1 201 1 56 1 58 2 301 1 302 3 30 4 217 5 34 1 260 1 356 1 309 1 105 1 69 1 163 2 112 1 361 1 168 1 265 7 171 2 175 6 176 5 324 1 370 4 374 1 45 1 
233 1 234 1 51 1 9 1 335 1 187 1 246 1 11 2 14 2 195 1 343 1 344 4 346 1 17 2 97 4 19 1 56 1 58 2 299 2 301 1 302 2 30 2 217 1 34 1 260 1 356 1 309 1 69 1 163 2 112 1 361 1 168 1 265 4 171 2 175 4 176 2 324 1 370 2 374 1 45 1 
233 1 234 1 6 1 301 1 302 2 30 2 217 1 34 1 51 1 260 1 9 1 356 1 335 1 309 1 105 1 69 1 246 1 163 2 11 2 112 1 14 2 195 1 343 1 344 4 96 1 361 1 168 1 346 1 17 2 265 4 171 2 97 4 19 1 56 1 175 4 176 1 58 2 324 1 370 2 374 1 45 1 
233 1 234 1 6 1 301 1 302 2 30 2 217 1 34 1 51 1 260 1 9 1 356 1 335 1 309 1 105 1 69 1 246 1 163 2 11 2 112 1 14 2 195 1 343 1 344 4 96 1 361 1 168 1 346 1 17 2 265 4 171 2 97 4 19 1 56 1 175 4 176 1 58 2 324 1 370 2 374 1 45 1 
0 2 233 1 299 2 234 1 6 1 302 2 30 2 217 1 34 1 51 1 260 1 9 1 356 1 335 1 309 1 69 1 246 1 163 2 112 1 14 2 315 1 195 1 343 1 344 4 361 1 168 1 346 1 286 1 265 4 171 2 97 4 19 1 56 1 175 4 176 1 324 1 370 2 351 2 294 1 374 1 45 1 
233 1 234 1 6 1 301 1 302 2 30 3 217 1 34 1 51 1 260 1 9 1 356 1 335 1 309 1 105 1 69 1 246 1 163 2 11 2 112 1 14 3 195 1 139 1 343 1 344 4 96 1 361 1 168 1 346 1 17 2 265 5 171 2 97 4 19 1 56 1 175 5 176 1 58 2 324 1 370 3 374 1 45 1 
233 1 234 1 6 1 301 1 302 2 30 3 217 1 34 1 51 1 260 1 9 1 356 1 335 1 309 1 105 1 69 1 246 1 163 2 11 2 112 1 14 3 195 1 139 1 343 1 344 4 96 1 361 1 168 1 346 1 17 2 265 5 171 2 97 4 19 1 56 1 175 5 176 1 58 2 324 1 370 3 374 1 45 1 
0 2 233 1 299 2 234 1 302 2 30 2 217 1 34 1 260 1 51 1 9 1 356 1 187 1 335 1 309 1 69 1 246 1 163 2 112 1 14 2 315 1 195 1 343 1 344 4 168 1 346 1 361 1 265 4 171 2 97 4 19 1 56 1 175 4 176 1 324 1 370 2 351 2 374 1 45 1 
23 1 113 1 164 2 297 6 342 2 298 1 142 1 65 1 316 1 127 2 251 1 317 1 285 1 185 1 200 2 307 1 308 1 202 1 266 3 368 1 326 1 148 1 312 1 52 3 132 1 123 1 
296 2 81 1 23 2 62 1 297 9 298 2 274 1 258 1 186 1 241 2 356 1 358 1 312 1 52 6 110 1 164 4 113 2 116 1 342 1 142 5 251 2 144 2 317 5 18 2 199 1 200 1 202 2 266 3 368 4 326 2 
81 1 232 1 297 2 298 1 233 2 24 1 102 1 103 1 87 1 240 1 130 1 131 1 312 1 91 1 37 1 52 1 113 1 164 2 115 1 116 1 342 1 280 1 343 2 359 1 251 1 198 1 74 1 202 1 56 1 266 1 231 1 368 1 326 1 270 1 255 1 207 1 271 1 125 1 
81 1 233 2 272 1 127 1 87 1 240 1 241 1 131 1 52 3 93 1 189 1 280 1 343 2 142 2 251 2 144 1 198 1 200 1 202 2 56 1 207 1 23 1 297 5 24 1 298 2 102 1 103 1 353 1 262 1 312 2 164 4 113 2 116 1 115 1 359 1 317 2 74 1 367 1 266 2 231 1 368 1 326 2 270 1 125 1 271 1 
297 2 233 1 24 1 298 2 4 1 156 1 211 1 103 8 33 1 240 2 308 1 131 3 312 2 37 1 52 1 111 1 92 1 135 1 164 4 113 2 41 2 115 7 116 1 224 1 280 8 343 1 359 1 251 2 198 2 122 1 172 1 202 2 56 1 20 1 266 1 326 2 270 2 207 1 271 2 
81 1 23 1 297 3 24 1 298 1 233 1 331 1 241 1 220 1 312 1 52 1 248 1 164 2 113 1 142 1 343 1 359 1 251 1 316 1 144 1 317 1 319 1 202 1 56 1 266 2 368 1 326 1 
113 1 164 2 23 1 297 2 298 1 142 1 251 1 317 1 308 1 202 1 241 1 326 1 312 1 44 1 52 2 
113 1 164 2 47 1 297 2 298 1 142 1 251 1 316 1 317 1 319 1 308 1 202 1 266 2 326 1 312 1 
113 1 164 2 23 1 297 2 298 1 142 1 251 1 144 1 317 1 308 1 202 1 241 1 326 1 312 1 52 2 
113 1 164 2 23 1 297 2 298 1 4 1 142 1 251 1 317 1 202 1 241 1 326 1 312 1 44 1 52 2 
113 1 164 2 47 1 297 2 298 1 4 1 142 1 251 1 316 1 317 1 319 1 202 1 266 2 326 1 312 1 
113 1 164 2 23 1 297 2 298 1 4 1 142 1 251 1 144 1 317 1 202 1 241 1 326 1 312 1 52 2 
113 1 164 2 23 1 297 2 298 1 142 1 251 1 144 1 317 1 202 1 241 1 326 1 312 1 52 2 
297 2 233 1 298 1 272 1 102 1 103 1 240 1 131 1 312 1 52 1 37 1 113 1 164 2 115 1 116 1 342 1 280 1 343 1 251 1 198 1 74 1 202 1 266 1 231 1 326 1 270 1 271 1 125 1 
297 2 233 1 298 1 273 1 103 1 240 1 131 1 161 1 312 1 52 1 37 1 113 1 164 2 115 1 116 1 342 1 280 1 343 1 251 1 198 1 202 1 266 1 231 1 326 1 371 1 270 1 271 1 125 1 
81 1 113 1 164 2 23 1 297 2 298 1 142 1 251 1 144 1 317 1 202 1 241 1 326 1 312 1 52 2 
23 1 297 2 233 1 298 1 272 1 102 1 103 1 240 1 241 1 131 1 312 1 52 2 93 1 113 1 164 2 115 1 280 1 224 1 142 1 343 1 251 1 144 1 317 1 198 1 74 1 202 1 231 1 326 1 125 1 271 1 
81 1 23 1 297 2 24 1 298 1 233 1 331 1 241 1 312 1 52 2 248 1 164 2 113 1 193 1 343 1 142 1 359 1 251 1 144 1 317 1 199 1 200 1 202 1 56 1 368 1 326 1 
296 3 23 2 297 19 298 2 101 1 305 1 31 1 352 3 186 1 35 1 241 2 261 1 52 9 247 1 164 4 143 1 118 1 251 2 316 2 144 2 18 2 319 2 347 2 227 1 202 2 266 10 326 2 79 1 
22 2 296 2 23 3 297 26 298 3 101 1 127 1 330 1 305 1 31 1 352 4 35 1 241 3 52 14 247 2 164 6 313 1 73 1 143 2 316 2 251 3 144 3 199 1 18 2 319 2 200 2 347 2 227 1 202 3 266 12 369 1 326 3 124 1 79 1 
127 2 330 1 185 1 186 1 241 4 52 20 132 1 247 1 143 2 251 3 144 4 18 3 199 3 347 3 200 5 202 3 99 1 148 1 23 5 296 4 22 1 297 41 298 3 101 1 65 1 305 1 31 1 352 4 307 1 35 1 164 6 313 1 73 1 316 5 118 1 319 4 227 1 266 21 369 1 326 3 124 1 123 1 79 1 
296 3 23 2 297 21 298 2 101 1 305 1 31 1 352 4 186 1 35 1 241 2 52 10 247 1 164 4 73 1 143 1 118 1 251 2 316 2 144 2 18 2 319 2 347 2 227 1 202 2 266 11 326 2 79 1 
22 1 296 3 23 7 297 47 298 2 101 1 65 3 127 4 330 1 305 1 31 1 352 4 185 3 307 3 186 1 35 1 241 4 132 3 52 24 247 1 164 4 313 1 73 1 143 1 251 2 316 7 144 4 199 2 18 2 319 4 200 6 347 2 227 1 202 2 266 23 369 1 326 2 148 3 123 3 124 1 79 1 
80 1 157 1 268 1 50 1 213 1 29 1 373 1 39 1 61 1 190 1 
54 1 245 1 
332 1 80 1 157 1 293 1 213 1 222 1 373 1 61 1 190 1 
80 1 136 1 1 2 344 1 157 1 50 1 213 1 29 1 66 1 215 1 97 1 366 1 176 1 268 1 70 1 373 1 61 1 190 1 
80 1 136 1 1 2 344 1 157 1 50 1 213 1 29 1 66 1 215 1 97 1 366 1 176 1 268 1 70 1 373 1 61 1 190 1 
80 1 136 1 1 2 344 1 157 1 50 1 213 1 29 1 66 1 215 1 97 1 366 1 176 1 268 1 70 1 373 1 61 1 190 1 
341 1 169 1 236 1 
341 1 169 1 236 1 
160 1 84 1 
160 1 84 1 341 1 
321 1 133 1 
80 1 1 1 233 2 24 2 157 1 213 1 215 1 70 1 244 1 245 1 133 1 190 1 342 1 343 2 54 1 344 1 360 1 359 2 97 1 76 1 321 1 56 2 323 1 290 1 147 1 373 1 61 1 
169 1 236 1 
160 1 84 1 341 1 
81 1 152 1 297 2 298 1 233 2 103 2 304 1 182 1 240 1 131 1 338 1 312 1 109 1 37 1 52 1 111 1 92 1 113 1 164 2 41 2 116 1 115 2 280 2 343 2 251 1 198 1 202 1 56 2 266 1 326 1 271 1 
115 2 280 2 224 1 281 1 214 1 103 2 120 2 198 1 354 1 240 1 88 1 20 1 177 1 106 1 38 1 340 1 150 1 100 1 94 1 
115 1 280 1 257 1 103 1 120 2 198 1 354 1 240 1 88 1 20 1 177 1 106 1 38 1 340 1 150 1 100 1 94 1 
115 1 137 1 280 1 281 1 49 1 103 1 198 1 122 1 172 1 240 1 131 1 177 1 270 1 271 1 
115 1 280 1 281 1 214 1 103 1 120 2 198 1 354 1 240 1 88 1 20 1 177 1 106 1 38 1 340 1 150 1 100 1 94 1 
334 1 
217 1 13 1 9 1 335 1 176 1 269 1 285 1 
299 1 301 1 302 1 217 1 51 1 9 1 335 1 246 1 11 1 195 1 344 1 17 1 265 1 97 1 176 2 58 1 374 1 
234 1 240 2 51 2 241 1 9 3 335 4 90 1 131 4 246 2 192 1 280 1 195 2 344 2 144 1 17 3 198 1 97 2 348 1 57 1 203 1 59 1 149 1 23 1 299 6 256 3 103 1 302 1 353 1 68 1 107 1 115 1 314 1 263 3 316 1 265 2 319 1 75 1 322 2 176 3 270 1 374 2 271 1 125 1 
296 1 263 1 299 2 195 1 101 1 256 1 17 1 18 1 347 1 51 1 9 1 176 1 335 1 374 1 246 1 
23 2 233 1 24 1 154 1 65 1 28 1 331 1 51 1 356 1 9 2 335 2 105 1 246 1 195 1 343 1 344 1 359 1 316 1 362 1 75 2 97 1 98 1 56 1 148 1 372 1 123 1 374 1 208 1 
13 1 195 1 217 1 51 1 9 1 176 1 335 1 269 1 374 1 246 1 
23 1 263 2 299 4 256 2 316 1 144 1 17 2 319 1 241 1 9 2 176 2 335 2 
217 1 97 1 176 1 344 1 302 1 265 1 
2 1 300 1 103 4 302 2 239 1 240 3 51 2 9 2 335 2 131 2 339 1 246 2 223 1 115 4 280 4 225 1 165 1 195 2 344 3 55 1 198 2 265 4 122 1 97 3 172 1 57 2 204 2 229 1 291 2 270 2 374 1 125 1 271 2 60 1 
297 1 233 3 24 2 298 1 272 1 102 1 27 1 103 1 331 2 240 1 131 1 312 1 164 2 113 1 116 1 115 1 342 1 280 1 343 3 359 2 251 1 74 1 198 1 202 1 56 2 266 1 231 1 326 1 270 1 208 1 125 1 271 1 
263 2 299 4 195 1 256 2 17 2 217 2 307 1 51 1 9 2 57 1 335 1 176 4 291 1 374 1 246 1 
242 1 373 1 61 1 
321 1 253 1 29 1 373 1 61 1 
242 1 373 1 61 1 
242 1 373 1 61 1 
373 1 306 1 61 1 
373 1 306 1 61 1 
373 1 306 1 61 1 
373 1 61 1 
80 1 190 1 
23 1 164 4 22 1 297 8 298 2 65 1 316 1 127 2 251 2 199 1 185 1 200 3 307 1 202 2 266 4 326 2 148 1 52 4 132 1 123 1 
23 1 185 1 297 6 200 2 307 1 266 3 65 1 316 1 127 2 148 1 52 3 132 1 123 1 285 1 
164 2 23 1 114 1 297 4 298 1 316 1 251 1 144 1 199 1 319 1 200 1 202 1 241 1 266 2 326 1 52 2 
296 1 297 2 347 1 266 1 52 1 18 1 
23 5 296 2 22 1 62 1 297 25 298 1 65 2 127 4 258 1 185 1 307 1 186 1 241 2 132 1 52 13 164 2 316 5 251 1 144 2 18 2 199 4 319 2 200 8 98 1 202 1 266 12 326 1 148 2 123 2 
296 1 297 1 266 1 
297 1 52 1 18 1 
23 1 297 6 316 1 127 1 144 1 353 1 199 1 319 1 200 2 241 1 266 3 52 3 
296 1 23 2 22 1 297 13 298 2 101 1 127 1 330 1 305 1 241 2 52 6 164 4 313 1 251 2 316 2 144 2 199 1 18 1 319 2 347 1 200 2 202 2 266 7 369 1 326 2 124 1 
23 1 297 6 65 1 316 1 127 1 199 1 200 2 266 3 148 1 52 3 123 1 
22 1 164 2 297 3 298 1 141 1 127 1 251 1 199 1 185 1 200 2 202 1 266 2 326 1 148 1 52 1 132 1 123 1 
164 2 23 2 297 10 298 1 65 1 251 1 127 3 316 2 305 1 199 2 200 5 98 1 202 1 266 5 326 1 148 2 52 5 123 2 
164 2 23 1 297 2 298 1 251 1 305 1 199 1 200 1 202 1 241 1 326 1 52 2 
164 2 23 1 297 4 298 1 316 1 251 1 144 1 305 1 319 1 202 1 241 1 266 2 326 1 52 2 
22 1 164 6 297 3 298 3 141 1 118 1 251 3 127 1 305 1 199 1 200 2 202 3 266 2 326 3 148 1 52 1 123 1 
23 2 296 1 22 1 297 15 298 4 65 1 127 3 305 1 185 1 52 7 132 1 164 8 114 1 141 1 316 2 118 1 251 4 199 3 18 1 200 6 347 1 98 1 365 1 202 4 266 8 326 4 148 2 123 2 
296 1 23 2 22 2 297 12 298 3 101 1 127 1 330 1 305 1 241 2 52 7 164 6 313 1 251 3 316 1 144 2 199 1 18 1 319 1 347 1 200 2 202 3 266 5 369 1 326 3 124 1 
296 1 23 2 22 2 297 12 298 4 101 1 127 1 330 1 305 1 241 2 52 7 164 8 114 1 313 1 251 4 316 1 144 2 199 1 18 1 319 1 347 1 200 2 202 4 266 5 369 1 326 4 124 1 
296 1 23 3 22 1 297 19 298 3 101 1 65 1 127 3 330 1 305 1 185 1 307 1 241 2 132 1 52 9 164 6 114 1 313 1 251 3 316 3 144 2 199 1 18 1 319 2 347 1 200 4 202 3 266 10 369 1 326 3 148 1 123 1 124 1 
296 1 23 2 22 2 297 12 298 4 101 1 127 1 330 1 305 1 241 2 52 7 164 8 114 1 313 1 251 4 316 1 144 2 199 1 18 1 319 1 347 1 200 2 202 4 266 5 369 1 326 4 124 1 
296 1 23 2 22 2 297 12 298 3 101 1 127 1 330 1 305 1 241 2 52 7 164 6 313 1 251 3 316 1 144 2 199 1 18 1 319 1 347 1 200 2 202 3 266 5 369 1 326 3 124 1 
296 1 23 2 22 1 297 13 298 2 101 1 127 1 330 1 305 1 241 2 52 6 164 4 313 1 251 2 316 2 144 2 199 1 18 1 319 2 347 1 200 2 202 2 266 7 369 1 326 2 124 1 
296 1 23 3 22 2 297 18 298 4 101 1 65 1 127 3 330 1 305 1 185 1 307 1 241 2 132 1 52 10 164 8 114 1 313 1 251 4 316 2 144 2 199 2 18 1 319 1 347 1 200 5 202 4 266 8 369 1 326 4 148 1 123 1 124 1 
296 1 23 3 22 2 297 16 298 4 101 1 127 1 330 1 305 1 241 3 52 9 164 8 313 1 251 4 118 1 316 2 144 3 199 3 18 1 319 2 347 1 200 4 202 4 266 7 369 1 326 4 124 1 
23 1 297 7 65 1 316 1 127 3 199 3 185 1 200 6 266 4 148 3 132 2 52 3 123 3 
296 1 23 3 22 2 297 18 298 4 101 1 65 1 127 3 330 1 305 1 185 1 307 1 241 2 132 1 52 10 164 8 313 1 251 4 118 1 316 2 144 2 199 1 18 1 319 1 347 1 200 4 202 4 266 8 369 1 326 4 148 1 123 1 124 1 
34 1 342 1 233 1 56 1 343 1 21 1 32 1 
342 1 233 1 235 1 343 1 26 1 32 1 8 1 34 1 289 1 56 1 21 1 53 1 
172 1 115 1 240 1 280 1 131 1 103 1 270 1 285 1 271 1 198 1 122 1 
115 1 342 1 24 1 233 2 280 1 102 1 343 2 359 1 103 1 198 1 240 1 56 1 131 1 231 1 270 1 207 1 271 1 125 1 
233 2 24 1 102 1 103 1 158 1 240 1 356 1 131 3 10 1 115 1 342 1 280 1 343 2 359 2 198 1 19 1 56 2 204 1 231 1 324 1 207 1 125 2 271 2 
233 2 24 1 273 1 103 2 158 1 240 1 356 1 131 3 10 1 115 2 342 1 280 2 343 2 359 2 287 1 198 1 19 1 56 2 204 1 231 1 324 1 207 1 125 2 271 2 
115 3 280 3 234 1 344 2 64 1 158 1 103 3 196 1 287 1 265 1 198 1 217 1 97 2 240 1 176 1 204 1 322 1 131 4 270 1 149 1 271 1 125 1 10 1 
233 1 24 1 154 1 234 1 28 1 103 1 331 1 217 1 68 1 356 1 131 2 115 1 280 1 343 1 344 2 359 1 265 1 97 2 56 1 322 1 204 1 176 1 372 1 149 1 208 1 
115 1 33 1 240 1 280 1 103 1 198 1 
135 1 41 1 115 6 224 1 280 7 165 1 156 1 211 1 7 1 103 7 198 2 33 1 240 3 20 1 90 1 131 3 339 1 270 2 125 1 271 2 92 1 
81 1 233 2 272 1 127 2 185 1 240 1 131 1 132 1 52 3 93 1 280 1 342 2 343 2 142 1 251 2 198 1 200 2 202 2 56 1 148 1 207 1 23 1 297 6 24 1 298 2 102 1 65 1 103 1 304 1 307 1 312 2 164 4 113 2 115 1 224 1 359 1 316 1 317 1 74 1 367 1 266 3 368 1 231 1 326 2 123 1 125 1 271 1 
234 1 103 1 302 1 217 1 68 1 51 2 9 1 335 1 131 2 107 1 244 1 246 2 115 1 280 1 314 1 13 1 225 1 195 2 344 3 265 2 97 3 176 1 322 1 59 1 269 1 270 1 149 1 374 2 
192 1 115 2 224 1 280 2 103 2 198 1 33 1 240 2 90 1 131 2 149 1 125 1 271 1 
115 4 280 4 224 1 103 4 287 1 122 1 198 1 172 1 240 1 131 1 270 1 295 1 271 1 
115 2 280 2 165 1 300 1 103 2 198 1 240 2 204 1 229 1 131 1 278 1 339 1 125 1 271 1 
354 1 115 1 240 1 280 1 103 1 270 1 120 1 150 1 94 1 198 1 
115 2 240 1 280 2 224 1 20 1 131 1 103 2 271 1 182 1 92 1 198 1 
135 1 115 4 280 5 224 1 211 1 103 5 122 1 198 2 172 1 240 2 204 1 131 3 270 1 295 1 271 2 92 1 
115 4 280 5 224 1 83 1 211 1 103 5 122 1 198 2 172 1 240 2 204 1 131 3 270 1 295 1 271 2 92 1 
115 1 342 1 24 1 233 2 280 1 273 1 343 2 359 1 103 1 198 1 240 1 56 1 131 1 231 1 270 1 207 1 271 1 125 1 
115 1 280 1 165 1 7 1 103 1 198 1 240 2 204 1 90 1 131 1 339 1 125 1 271 1 
328 1 342 1 221 1 145 1 275 1 
328 1 342 1 82 1 234 1 344 2 361 1 318 1 275 2 145 2 217 1 97 2 128 1 276 1 19 1 356 1 176 1 324 1 244 1 221 2 
328 1 152 1 233 1 56 1 343 1 338 1 109 1 145 1 275 1 
328 1 276 1 318 1 
355 1 5 1 337 1 285 1 
355 1 194 1 329 1 5 1 337 1 226 1 327 1 
364 1 85 1 327 1 
12 1 329 1 194 1 5 1 226 3 212 1 197 1 355 1 337 1 327 3 179 1 46 2 
355 1 194 1 329 1 5 1 349 1 310 1 337 1 226 2 327 2 
218 1 288 1 194 1 329 1 88 1 337 1 226 1 327 1 120 1 150 1 197 1 
355 1 194 1 329 1 337 1 226 1 327 1 197 1 
355 2 194 1 329 1 5 1 226 1 327 1 197 1 
191 1 329 2 194 2 226 2 167 1 197 1 238 1 355 1 337 1 327 2 
329 1 194 1 5 1 226 3 197 1 355 1 218 1 357 1 230 1 310 2 337 2 108 1 327 3 
329 1 194 1 5 1 226 2 120 2 197 1 355 1 88 1 350 1 310 1 337 1 327 2 38 1 150 1 94 1 
329 2 194 2 5 1 226 4 197 1 333 1 355 1 218 1 349 1 310 2 337 2 108 1 327 4 
355 1 194 1 329 1 5 1 337 1 226 1 327 1 197 1 
329 1 194 1 5 2 226 4 212 1 355 2 218 1 310 2 325 1 337 3 108 1 327 4 179 1 46 1 
126 1 329 1 194 1 5 1 226 2 119 1 197 1 363 1 355 1 310 1 337 1 327 2 
329 1 194 1 5 1 226 3 212 1 197 1 355 1 337 1 178 1 327 3 179 2 46 2 
146 1 210 1 337 2 16 2 
159 1 194 1 329 1 226 1 327 1 197 1 
355 1 194 1 329 1 5 1 357 1 310 1 337 1 226 2 327 2 197 1 
375 1 
355 1 194 1 329 1 5 1 337 1 226 1 327 1 197 1 
355 1 194 1 329 1 357 1 5 1 310 1 337 1 226 3 327 3 197 1 46 1 
218 1 325 1 337 1 108 1 
355 1 337 1 

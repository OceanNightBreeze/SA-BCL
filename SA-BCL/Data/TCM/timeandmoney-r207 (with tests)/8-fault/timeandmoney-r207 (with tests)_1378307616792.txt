#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 154 77 30 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 154 77 30 87 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 154 77 30 (74,189) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 154 77 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 154 77 30 (74,189) (74,189) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 154 310 159 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 154 77 30 (74,189) (74,189) 227 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 154 77 30 87 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 154 57 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 154 57 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 154 57 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 154 57 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 154 57 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 1 303 2 261 1 267 1 131 1 311 1 225 3 12 2 97 1 51 2 273 2 275 1 278 1 194 2 236 1 103 9 148 1 324 1 290 1 245 1 68 6 158 4 40 1 331 9 164 2 330 2 117 1 258 5 
303 2 80 1 261 1 267 1 131 1 311 1 225 3 12 2 97 1 51 2 273 2 275 1 278 1 194 2 236 1 103 9 148 1 324 1 290 1 245 1 68 6 158 4 40 1 331 9 164 2 330 2 117 1 258 5 
303 2 80 1 261 1 267 1 131 1 311 1 225 4 12 2 97 1 51 2 273 2 275 1 278 1 194 2 236 1 103 10 148 1 324 1 290 1 245 1 68 7 158 5 40 1 331 10 164 2 330 2 117 1 258 6 
303 2 80 1 261 1 267 1 131 1 311 1 225 2 12 1 97 1 51 2 273 2 275 1 278 1 194 2 236 1 103 7 324 1 290 1 245 1 68 4 158 3 40 1 331 7 164 2 330 2 117 1 258 4 
80 1 303 1 103 4 148 1 267 1 68 3 131 1 225 1 12 2 51 1 158 2 40 1 330 1 164 1 331 4 117 1 194 1 258 3 
80 1 103 2 324 1 267 1 269 1 49 1 97 1 51 1 273 1 40 1 164 1 331 2 330 1 16 1 194 1 258 1 
80 1 103 3 267 1 68 1 225 1 51 2 273 1 275 1 158 1 40 1 164 2 331 3 258 2 
80 1 303 1 220 1 267 1 131 1 311 1 225 3 12 2 51 2 273 1 275 1 194 1 103 9 148 1 290 1 68 7 327 1 158 4 40 1 331 9 164 2 117 1 330 1 258 5 
80 1 303 1 220 1 267 1 131 1 311 1 225 3 12 2 51 2 273 1 275 1 194 1 103 9 148 1 290 1 68 7 327 1 158 4 40 1 331 9 164 2 117 1 330 1 258 5 
59 1 32 1 76 1 
32 1 223 1 326 2 
30 1 77 1 154 1 
87 1 30 1 77 1 154 1 
189 1 30 1 77 1 154 1 
307 1 177 1 180 1 288 1 32 1 33 1 52 1 99 1 75 1 59 1 144 1 198 1 321 1 79 1 
77 1 154 1 
288 1 180 1 100 1 281 1 42 1 
214 1 288 2 180 2 100 1 59 1 181 1 32 1 42 1 
288 1 180 1 42 1 
189 1 74 1 288 1 180 1 100 1 30 1 77 1 154 1 
32 1 
283 1 214 1 288 2 180 2 100 1 59 1 32 1 42 1 
44 1 1 1 214 1 126 1 180 5 288 5 244 2 291 1 32 1 251 2 98 2 134 1 296 1 37 1 100 2 59 1 298 1 102 1 42 2 
276 1 128 1 
276 1 128 1 
322 1 297 1 
322 1 297 1 
322 1 297 1 
276 1 128 1 34 1 
276 1 128 1 34 1 
276 1 128 1 319 1 
322 1 5 1 276 2 297 1 128 2 155 1 
276 1 128 1 34 1 
276 1 219 1 128 1 
276 1 219 1 128 1 
276 1 219 1 128 1 
240 3 124 1 201 2 5 1 6 2 27 1 45 2 180 2 288 2 128 2 32 1 207 1 271 1 208 1 276 2 36 1 14 2 299 2 19 1 
240 1 124 1 6 1 276 1 14 1 45 1 288 1 180 1 128 1 299 1 154 1 
303 1 330 1 194 1 
330 1 16 1 194 1 
303 2 136 1 264 1 330 3 16 1 145 1 
303 1 190 1 264 1 330 2 16 1 145 1 
303 1 264 1 330 2 16 1 145 2 
82 1 2 1 214 1 126 3 180 5 127 2 88 1 89 1 223 1 47 1 135 1 98 1 139 1 100 4 59 1 280 1 102 2 193 1 320 2 64 1 26 1 288 5 244 1 31 1 326 3 32 2 251 1 71 1 111 2 113 1 298 1 42 1 
214 1 83 1 126 8 180 9 265 1 88 2 89 3 309 1 130 1 223 3 47 1 135 3 98 2 100 7 59 1 280 3 102 6 193 4 281 5 18 1 320 6 64 3 26 3 288 9 244 2 326 9 32 5 246 1 251 2 71 2 111 6 37 1 298 1 42 6 302 5 
2 1 126 3 180 3 88 1 127 1 89 1 223 2 98 1 135 1 100 2 59 1 280 1 193 1 102 2 320 2 64 1 26 1 288 3 244 1 32 3 326 4 251 1 71 1 111 2 113 1 37 1 
2 1 83 1 126 5 180 4 265 1 88 1 127 2 89 2 130 1 223 3 98 1 135 2 100 3 59 1 280 2 193 2 102 4 320 4 64 2 26 2 288 4 244 1 32 4 326 7 251 1 71 1 111 4 113 1 37 1 
230 1 179 1 116 1 76 1 222 1 
116 1 196 1 
150 1 
314 1 116 1 
179 2 243 1 150 1 96 1 314 1 116 3 213 1 
96 1 314 1 116 1 
305 1 116 1 
286 3 323 1 64 1 182 1 185 4 313 2 328 1 188 7 135 1 73 1 138 2 161 1 38 1 168 1 41 1 259 3 170 1 
286 3 323 1 64 1 182 1 185 4 313 2 328 1 188 7 135 1 73 1 138 2 161 1 38 1 168 1 41 1 259 3 170 1 
286 3 323 1 64 1 182 1 184 1 185 4 313 2 328 1 188 7 135 1 73 1 138 2 161 1 38 1 168 1 41 1 259 3 170 1 
172 1 3 4 176 2 85 1 182 1 89 3 10 1 185 16 94 1 270 1 313 3 188 31 315 1 135 4 138 5 141 1 317 1 192 3 280 3 61 1 286 10 323 2 26 3 64 4 152 1 70 1 328 2 73 1 161 2 38 1 168 1 41 5 259 15 170 2 
176 4 7 1 85 1 182 1 185 5 94 2 270 2 187 1 313 2 188 9 135 1 138 3 61 2 286 4 323 1 64 1 70 2 328 1 73 1 161 1 38 1 41 1 170 1 259 4 
303 1 80 1 174 1 215 1 267 1 46 2 51 1 50 1 136 1 273 1 15 1 58 1 16 1 194 1 238 1 103 2 106 1 105 1 65 1 149 1 151 1 68 1 112 1 40 1 330 2 331 2 164 1 333 2 119 2 300 1 258 1 
303 1 174 1 215 1 129 1 267 1 46 1 50 1 51 1 136 1 273 1 15 1 58 1 60 1 16 1 194 1 238 1 106 1 103 3 105 1 65 1 151 1 68 2 160 1 40 1 331 3 164 1 330 2 333 1 119 1 258 1 
303 1 174 1 215 1 267 1 46 1 50 1 273 1 136 1 58 1 60 1 16 1 194 1 238 1 106 1 103 2 105 1 65 1 68 2 160 1 40 1 331 2 330 2 333 1 119 1 258 1 
284 1 200 1 174 1 103 1 106 2 217 1 65 2 129 1 205 1 46 1 314 1 156 1 50 2 51 1 273 2 116 1 164 1 331 1 142 1 58 1 119 1 333 1 301 1 
303 1 80 1 174 1 215 1 46 1 50 1 51 1 273 1 136 1 15 1 58 1 60 1 16 1 194 1 238 1 106 1 103 1 105 1 65 1 151 1 331 1 164 1 330 2 333 1 119 1 300 1 
316 1 
174 1 175 2 177 1 180 5 98 1 99 1 191 1 17 1 102 2 198 1 200 1 202 2 287 1 288 5 293 2 205 1 32 5 33 1 108 2 116 1 298 1 119 2 42 6 125 1 214 3 306 1 217 2 307 1 126 2 223 2 46 2 226 1 231 2 314 1 52 1 58 1 318 4 59 4 235 1 144 1 63 2 321 1 242 1 244 1 326 2 71 1 251 1 72 1 75 1 254 1 165 1 257 2 333 2 169 1 79 1 
283 1 125 1 214 1 307 1 177 1 180 3 288 3 32 2 33 1 72 1 52 1 99 1 75 1 165 1 59 2 318 2 191 1 144 1 257 1 169 1 198 1 42 2 79 1 321 1 
125 1 214 1 307 1 177 1 180 3 52 1 99 1 191 1 318 3 59 3 144 1 198 1 321 1 283 1 288 3 32 3 293 1 33 1 72 1 75 1 165 1 169 1 42 1 79 1 
125 1 214 1 307 1 175 1 177 1 180 3 52 1 99 1 191 1 318 3 59 3 144 1 198 1 321 1 283 1 288 3 32 3 293 1 33 1 72 1 75 1 165 1 257 1 169 1 79 1 42 2 
175 4 177 1 180 5 98 1 99 1 191 1 102 1 17 1 198 1 283 1 202 2 288 5 32 8 293 4 33 1 108 2 209 1 298 1 120 1 42 7 125 1 123 1 214 3 307 1 126 1 223 2 226 1 231 2 52 1 59 8 318 6 144 1 63 2 321 1 239 1 244 1 251 1 72 1 162 1 75 1 165 1 257 4 169 1 79 1 
125 1 214 2 175 2 307 1 177 1 126 1 180 4 223 2 226 1 231 2 98 1 52 1 99 1 191 1 318 4 59 5 144 1 17 1 102 1 198 1 63 2 321 1 202 2 287 1 288 4 244 1 293 2 326 2 32 6 33 1 108 2 251 1 72 1 75 1 165 1 298 1 257 2 169 1 42 4 79 1 
125 1 123 1 214 2 175 2 307 1 177 1 126 1 180 4 223 2 226 1 231 2 98 1 52 1 99 1 191 1 318 4 59 5 144 1 17 1 102 1 198 1 63 2 321 1 202 2 288 4 244 1 293 2 32 5 33 1 108 2 251 1 72 1 209 1 75 1 165 1 298 1 257 2 120 1 169 1 42 4 79 1 
125 1 123 1 214 2 175 2 307 1 177 1 126 1 180 4 223 2 226 1 231 2 98 1 52 1 99 1 191 1 318 4 59 5 144 1 17 1 102 1 198 1 63 2 321 1 202 2 288 4 244 1 293 2 32 5 33 1 108 2 251 1 72 1 209 1 75 1 165 1 298 1 257 2 120 1 169 1 42 4 79 1 
125 1 43 1 214 2 175 2 307 1 177 1 126 1 180 4 98 1 52 1 99 1 233 1 191 1 318 4 59 5 144 1 17 1 102 1 198 1 63 2 321 1 24 2 288 4 289 1 244 1 293 2 326 2 32 5 33 1 108 2 251 1 72 1 210 2 75 1 165 1 298 1 257 2 120 1 169 1 42 4 79 1 
123 1 125 1 214 2 307 1 175 3 177 1 126 1 180 4 223 2 226 1 231 2 98 1 52 1 99 1 191 1 318 5 59 6 144 1 17 1 102 1 198 1 63 2 321 1 239 1 202 2 288 4 244 1 293 3 32 6 33 1 108 2 251 1 72 1 209 1 75 1 165 1 298 1 120 1 257 3 169 1 79 1 42 5 
123 1 125 1 214 2 307 1 175 3 177 1 126 1 180 4 223 2 226 1 231 2 98 1 52 1 99 1 191 1 318 5 59 6 144 1 17 1 102 1 198 1 63 2 321 1 239 1 202 2 288 4 244 1 293 3 32 6 33 1 108 2 251 1 72 1 209 1 75 1 165 1 298 1 120 1 257 3 169 1 79 1 42 5 
125 1 214 2 175 2 307 1 177 1 126 1 180 4 98 1 52 1 99 1 191 1 318 4 59 5 144 1 17 1 102 1 198 1 63 2 321 1 24 2 287 1 288 4 289 1 244 1 293 2 326 2 32 5 33 1 108 2 251 1 72 1 210 2 75 1 165 1 298 1 257 2 169 1 42 4 79 1 
3 2 216 2 176 4 7 1 178 1 86 2 89 3 221 1 185 9 94 2 270 2 188 19 135 3 138 3 141 1 317 1 101 1 143 1 192 1 280 3 146 1 61 2 286 6 25 1 26 3 64 3 70 2 118 1 41 3 259 10 
81 1 260 1 3 2 216 1 4 1 176 6 7 1 85 2 178 2 86 4 89 3 92 1 185 14 94 3 270 3 188 26 135 3 138 2 232 1 317 2 101 2 143 1 192 2 280 2 61 3 286 4 25 1 64 2 26 3 70 3 118 1 211 1 41 2 259 12 
81 1 3 4 260 1 4 1 7 1 176 6 178 1 85 1 86 4 89 4 182 1 185 20 92 1 270 3 94 3 188 41 101 2 280 4 192 3 286 8 25 1 26 4 38 1 118 1 211 1 41 4 216 1 221 1 313 1 135 5 138 4 232 1 141 1 317 3 143 1 61 3 64 5 70 3 328 1 73 1 161 1 332 1 259 21 
81 1 260 1 3 4 216 1 4 1 176 8 7 1 85 2 178 1 86 4 182 1 89 4 221 1 92 1 185 20 94 4 270 4 313 1 188 38 135 5 232 1 138 4 141 1 317 3 101 2 143 1 192 3 280 3 61 4 286 7 25 1 26 4 64 4 70 4 328 1 73 1 161 1 38 1 211 1 118 1 332 1 41 3 259 18 
81 1 260 1 3 3 216 1 4 1 176 4 7 1 85 1 178 1 86 4 182 1 89 5 92 1 185 22 94 2 270 2 313 1 188 42 135 6 232 1 138 5 141 1 56 1 317 2 101 1 280 5 143 1 192 3 61 2 286 10 25 1 64 6 26 5 70 2 328 1 73 1 161 1 38 1 118 1 211 1 41 5 259 20 
5 1 6 1 218 1 276 1 27 1 14 1 45 1 128 1 299 1 207 1 
329 1 319 1 
6 1 53 1 276 1 14 1 45 1 253 1 128 1 299 1 282 1 
240 2 124 1 201 1 5 1 6 1 27 1 45 1 180 1 288 1 128 1 32 1 207 1 208 1 276 1 36 1 14 1 299 1 19 1 
240 2 124 1 201 1 5 1 6 1 27 1 45 1 180 1 288 1 128 1 32 1 207 1 208 1 276 1 36 1 14 1 299 1 19 1 
240 2 124 1 201 1 5 1 6 1 27 1 45 1 180 1 288 1 128 1 32 1 207 1 208 1 276 1 36 1 14 1 299 1 19 1 
121 1 155 1 34 1 
121 1 155 1 34 1 
219 1 312 1 
219 1 312 1 155 1 
262 1 55 1 
240 1 201 1 6 1 262 1 45 1 180 1 288 1 128 1 31 1 310 1 154 1 208 1 329 1 276 1 139 1 14 1 159 1 55 1 100 1 193 1 299 1 319 1 
121 1 34 1 
219 1 312 1 155 1 
174 1 177 2 176 2 308 1 185 1 46 2 270 1 94 1 95 1 186 1 188 2 314 1 140 1 277 1 58 1 62 1 61 1 22 1 321 2 203 1 149 2 69 1 70 1 110 1 116 1 39 1 75 2 255 1 333 2 119 2 259 1 
303 1 174 1 105 1 46 2 109 1 228 1 50 1 112 1 136 1 157 1 330 2 15 1 58 1 16 1 60 1 194 1 119 2 333 2 238 1 
303 1 105 1 174 1 46 1 50 1 136 1 157 1 330 2 15 1 58 1 16 1 60 1 194 1 119 1 333 1 78 1 238 1 
284 1 200 1 174 1 217 1 205 1 46 1 109 1 314 1 50 1 116 1 58 1 119 1 333 1 199 1 
303 1 105 1 174 1 46 1 109 1 228 1 50 1 136 1 157 1 330 2 15 1 58 1 16 1 60 1 194 1 119 1 333 1 238 1 
292 1 
44 1 296 1 126 1 59 1 32 1 102 1 76 1 
214 1 126 1 180 1 223 1 226 1 98 1 231 1 59 1 102 1 202 1 288 1 244 1 326 1 32 2 251 1 298 1 42 1 
174 3 179 2 180 5 89 2 91 2 96 3 13 2 98 4 274 2 280 2 102 8 196 3 198 2 21 2 26 2 288 5 28 2 32 8 112 1 111 6 296 1 115 1 116 10 298 4 119 3 213 1 122 1 42 5 304 2 44 1 305 2 214 3 217 1 126 9 223 6 46 3 314 3 135 2 54 1 59 2 58 4 237 1 320 6 242 1 64 2 244 4 325 2 326 12 71 2 251 4 250 2 166 2 256 1 333 3 
81 1 260 1 214 1 3 1 4 1 126 8 180 1 89 2 223 3 91 1 272 1 98 2 135 2 232 1 317 1 59 2 192 1 280 2 102 5 320 5 21 2 242 1 26 2 64 2 288 1 66 1 244 2 326 6 32 5 71 1 251 2 111 5 211 1 298 2 42 1 
123 1 126 2 64 1 180 1 288 1 30 1 244 1 154 1 227 1 251 1 328 1 135 1 98 1 189 1 161 1 74 1 38 1 298 1 77 1 102 1 21 2 
44 1 126 1 244 1 32 1 251 1 98 1 296 1 59 1 298 1 102 1 
26 2 64 2 126 5 89 2 326 10 223 5 32 5 91 1 135 2 111 5 274 1 280 2 102 5 320 5 21 2 
214 1 288 1 180 1 59 1 32 1 42 1 
174 1 306 1 214 2 217 2 126 2 180 3 46 4 314 1 98 2 58 1 235 1 102 2 197 1 237 1 200 1 242 2 288 3 244 2 205 1 251 2 71 2 115 2 37 1 116 1 212 1 298 1 333 4 119 4 42 4 
87 1 30 1 77 1 154 1 
242 1 126 1 244 1 223 2 326 4 32 4 313 1 251 1 71 1 111 2 98 1 59 2 298 1 102 2 320 2 
14 1 299 1 132 1 
14 1 299 1 132 1 
262 1 27 1 14 1 167 1 299 1 
14 1 299 1 132 1 
23 1 14 1 299 1 
23 1 14 1 299 1 
23 1 14 1 299 1 
14 1 299 1 
276 1 128 1 
286 3 176 4 64 1 85 1 182 1 185 4 70 2 270 2 94 2 313 1 188 8 328 1 135 1 73 1 138 2 161 1 38 1 41 1 61 2 259 4 
188 6 328 1 135 1 286 2 73 1 64 1 138 2 161 1 38 1 182 1 76 1 185 3 259 3 313 1 
286 2 176 2 64 1 26 1 263 1 89 1 185 2 70 1 270 1 94 1 188 4 135 1 138 1 280 1 41 1 61 1 259 2 
188 2 3 1 317 1 192 1 185 1 259 1 
3 2 176 2 85 1 89 2 9 1 182 1 185 13 270 1 94 1 227 1 313 1 188 25 135 5 138 4 141 1 56 1 280 2 192 2 61 1 286 8 64 5 26 2 70 1 328 2 73 1 161 2 38 2 41 4 259 12 
188 1 3 1 259 1 
188 1 192 1 185 1 
286 3 176 2 26 1 64 1 263 1 89 1 185 3 94 1 270 1 70 1 188 6 135 1 274 1 138 2 280 1 41 1 61 1 259 3 
81 1 3 1 260 1 4 1 176 2 7 1 89 2 185 6 94 1 270 1 188 12 135 2 232 1 138 1 317 1 192 1 280 2 61 1 286 2 26 2 64 2 70 1 211 1 41 1 259 6 
328 1 188 6 135 1 286 2 138 1 161 1 64 1 38 1 41 1 185 3 259 3 
286 2 176 2 85 1 182 1 185 1 48 1 70 1 270 1 94 1 328 1 188 3 73 1 138 1 161 1 41 1 61 1 259 2 
286 5 176 2 7 1 64 2 185 5 94 1 270 1 70 1 227 1 328 2 188 10 135 2 161 2 138 3 38 1 41 2 61 1 259 5 
286 1 7 1 176 2 89 1 185 2 70 1 270 1 94 1 188 2 135 1 41 1 61 1 
286 2 7 1 176 2 64 1 26 1 89 1 185 2 70 1 270 1 94 1 188 4 135 1 138 1 280 1 41 1 61 1 259 2 
286 2 7 1 176 6 85 1 221 1 185 1 48 1 70 3 270 3 94 3 188 3 328 1 161 1 138 1 41 1 61 3 259 2 
172 1 3 4 176 10 7 1 85 2 263 1 182 1 89 3 221 1 185 16 48 1 94 5 270 5 313 1 188 34 315 1 135 5 138 7 141 1 317 1 192 3 280 3 61 5 286 12 26 3 64 5 152 1 70 5 328 3 73 1 161 3 38 2 41 5 259 18 
3 1 286 2 7 1 176 2 64 1 182 1 185 4 70 1 270 1 94 1 313 1 328 1 188 8 135 1 73 1 138 2 161 1 38 1 317 1 211 1 192 1 61 1 259 4 
3 2 7 1 176 4 263 1 182 1 89 1 185 6 94 2 270 2 313 1 188 11 135 2 138 2 141 1 317 1 192 1 61 2 286 3 64 1 26 1 70 2 328 1 73 1 161 1 38 1 211 1 41 1 259 5 
81 1 260 1 3 1 4 1 176 6 7 1 85 1 263 1 182 1 89 2 185 9 94 3 270 3 313 1 188 19 135 3 232 1 138 3 317 1 192 1 280 2 61 3 286 4 26 2 64 3 70 3 328 1 73 1 161 1 38 1 211 1 41 1 259 10 
81 1 3 1 260 1 4 1 176 6 7 1 85 1 263 1 182 1 89 2 185 10 94 3 270 3 313 1 188 17 135 3 232 1 138 3 317 1 192 1 280 1 61 3 286 5 26 2 64 2 70 3 328 1 73 1 161 1 38 1 211 1 41 2 259 7 
3 1 286 2 7 1 176 2 64 1 182 1 185 4 70 1 270 1 94 1 313 1 328 1 188 8 135 1 73 1 138 2 161 1 38 1 317 1 211 1 192 1 61 1 259 4 
81 1 3 1 260 1 4 1 176 2 7 1 89 2 185 6 94 1 270 1 188 12 135 2 232 1 138 1 317 1 192 1 280 2 61 1 286 2 26 2 64 2 70 1 211 1 41 1 259 6 
81 1 260 1 3 1 4 1 176 8 7 1 85 2 263 1 182 1 89 2 185 10 94 4 270 4 313 1 188 18 135 3 232 1 138 3 317 1 192 1 280 1 61 4 286 5 26 2 64 2 70 4 328 1 73 1 161 1 38 1 211 1 41 2 259 8 
81 1 260 1 3 1 4 1 7 1 176 8 85 2 89 3 221 1 185 9 94 4 270 4 188 16 135 3 232 1 138 3 317 1 192 1 280 2 61 4 286 6 26 3 64 2 70 4 211 1 41 3 259 7 
286 6 64 1 182 1 185 3 188 7 328 3 135 1 73 2 161 3 138 3 38 1 41 3 259 4 
81 1 260 1 3 1 4 1 7 1 176 8 85 2 182 1 89 2 221 1 185 10 94 4 270 4 313 1 188 18 135 3 232 1 138 3 317 1 192 1 280 1 61 4 286 4 26 2 64 2 70 4 328 1 73 1 161 1 38 1 211 1 41 1 259 8 
177 1 252 1 75 1 29 1 144 1 321 1 334 1 
0 1 285 1 177 1 29 1 183 1 252 1 75 1 144 1 195 1 20 1 334 1 321 1 
200 1 174 1 314 1 217 1 116 1 58 1 205 1 76 1 333 1 119 1 46 1 
57 1 154 1 
57 1 154 1 
57 1 154 1 
305 1 174 1 217 1 179 1 180 2 288 2 28 1 266 1 32 1 224 1 153 1 46 3 96 1 314 1 115 1 116 4 59 1 58 1 119 3 333 3 196 1 198 1 42 1 
304 1 305 1 174 1 217 1 179 1 180 2 288 2 28 1 32 1 224 1 46 3 96 1 314 1 115 1 116 4 59 1 58 1 119 3 333 3 196 1 198 1 42 1 
174 1 58 1 333 1 119 1 294 1 46 1 
174 2 217 2 149 1 268 1 294 1 46 7 93 1 110 1 96 1 112 1 314 2 137 1 35 1 116 3 163 1 58 3 60 1 119 6 333 7 213 1 147 1 
57 1 154 1 
304 1 44 1 214 1 217 1 126 1 179 1 180 3 46 1 98 2 13 1 100 1 59 1 102 1 196 1 237 1 198 1 288 3 244 2 32 1 325 1 251 2 296 1 116 2 166 1 298 2 119 1 333 1 42 2 
174 1 179 1 294 1 46 2 96 1 112 1 314 1 116 2 58 2 256 1 119 2 333 2 213 1 
200 1 174 1 217 1 205 1 224 1 46 4 133 1 112 1 314 1 116 1 58 1 119 4 333 4 
174 1 46 2 247 1 93 1 96 1 314 1 115 1 116 1 163 1 279 1 58 2 119 2 333 2 171 1 
174 1 217 1 330 1 58 1 16 1 194 1 333 1 119 1 46 1 238 1 
174 1 46 2 95 1 110 1 112 1 314 1 116 1 58 1 60 1 119 2 333 2 
200 1 174 2 217 1 205 1 268 1 46 5 133 1 110 1 112 1 314 2 115 1 137 1 116 3 58 2 119 4 333 5 
200 1 174 2 217 1 205 1 67 1 46 5 133 1 110 1 112 1 314 2 115 1 137 1 116 3 58 2 119 4 333 5 
57 1 154 1 
174 1 46 1 93 1 96 1 314 1 115 1 116 1 163 1 58 2 119 1 333 1 213 1 147 1 
40 1 267 1 76 1 258 1 
103 1 51 1 40 1 331 1 164 1 267 1 258 1 
106 1 103 1 273 1 
80 1 104 1 103 3 204 1 324 2 267 1 51 1 164 1 331 3 40 1 234 1 258 1 
12 1 103 2 51 1 40 1 331 2 164 1 267 1 68 1 258 1 
303 1 80 1 103 1 51 1 158 1 330 1 331 1 164 1 131 1 194 1 258 1 
80 1 103 1 51 1 331 1 164 1 267 1 258 1 
80 1 103 1 51 1 40 1 331 1 164 1 267 2 
80 1 103 2 90 1 267 1 206 1 51 2 114 1 164 2 331 2 258 1 
80 1 103 3 290 1 267 1 68 2 311 1 225 1 51 1 158 1 40 1 164 1 331 3 258 2 
80 1 303 1 103 2 8 1 267 1 68 1 51 1 136 1 40 1 330 2 164 1 331 2 16 1 194 1 258 1 
80 1 103 4 148 1 267 1 68 2 225 1 12 1 51 2 158 1 40 1 164 2 331 4 258 2 
80 1 103 1 51 1 40 1 331 1 164 1 267 1 258 1 
103 4 204 1 324 1 267 2 68 2 225 1 248 1 51 1 158 1 40 2 331 4 164 1 234 1 258 3 
80 1 103 2 267 1 68 1 327 1 11 1 295 1 51 1 164 1 331 2 40 1 258 1 
80 1 103 3 204 2 324 2 267 1 249 1 51 1 164 1 331 3 40 1 234 1 258 1 
229 2 241 1 84 1 258 2 
80 1 103 1 51 1 107 1 331 1 164 1 
80 1 103 2 51 1 40 1 331 2 164 1 267 1 68 1 311 1 258 1 
173 1 
80 1 103 1 51 1 40 1 331 1 164 1 267 1 258 1 
80 1 103 3 324 1 68 1 267 1 311 1 51 1 164 1 331 3 40 1 258 1 
158 1 258 1 225 1 248 1 
267 1 258 1 

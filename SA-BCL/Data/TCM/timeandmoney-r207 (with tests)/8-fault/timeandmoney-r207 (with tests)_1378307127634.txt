#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 341 (141,364) (141,364) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 341 (141,364) (141,364) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 341 (141,364) (141,364) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 341 (141,364) (141,364) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 125 344 376 274 182 150 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (177,302) 110 125 344 376 104 26 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 125 344 376 274 304 325 29 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 125 344 376 274 304 325 29 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 125 344 376 274 304 325 29 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 125 344 376 274 304 325 29 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 125 344 376 274 92 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 125 344 376 274 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 125 344 376 104 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 125 344 376 274 182 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 221 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
35 1 341 1 141 1 28 1 55 1 168 1 364 1 336 1 232 1 311 1 148 1 
35 1 341 1 141 1 28 1 55 1 168 1 364 1 336 1 232 1 311 1 148 1 
35 1 341 1 141 1 28 1 55 1 168 1 364 1 336 1 232 1 311 1 148 1 
35 1 341 1 141 1 28 1 55 1 168 1 364 1 336 1 232 1 311 1 148 1 
200 1 2 2 28 1 19 1 113 1 222 1 232 4 367 1 148 4 35 1 213 2 9 1 278 1 311 1 282 1 330 3 241 3 269 1 
28 1 138 1 168 1 19 1 232 2 148 2 367 1 35 1 236 1 55 1 164 1 311 1 330 1 282 1 119 1 269 1 
35 2 2 1 28 1 168 1 19 1 113 1 232 3 311 2 16 1 148 3 330 2 241 1 269 1 
200 1 2 4 28 1 74 1 168 1 19 1 222 1 112 1 113 3 232 9 367 1 148 9 246 1 35 2 213 2 9 1 278 1 311 2 16 1 282 1 330 5 83 1 241 7 269 1 
200 1 2 4 28 1 74 1 168 1 19 1 222 1 112 1 113 3 232 9 367 1 148 9 246 1 35 2 213 2 9 1 278 1 311 2 16 1 282 1 330 5 83 1 241 7 269 1 
221 1 
72 1 
109 2 140 2 163 2 44 2 10 2 127 1 284 1 79 2 
102 1 261 1 205 1 353 1 127 1 338 2 7 1 65 1 153 1 296 1 44 2 10 2 266 1 216 1 107 1 23 1 50 1 109 3 31 1 52 1 94 2 247 2 79 2 307 1 140 3 163 2 309 1 192 1 253 2 280 1 120 1 118 2 197 1 257 1 166 1 38 1 284 1 
109 1 127 1 79 1 140 1 163 1 44 1 297 1 10 1 300 1 
323 1 332 1 186 1 109 1 69 1 289 1 291 1 114 1 140 1 191 1 130 1 10 1 22 1 195 1 
186 2 109 1 69 1 289 1 291 1 79 1 114 1 140 1 191 1 163 1 130 1 44 1 10 1 22 1 195 2 
186 1 277 1 158 1 147 1 195 1 
186 2 191 1 4 1 277 1 158 1 149 1 195 2 291 1 
186 1 158 1 195 1 
186 1 109 1 127 1 328 1 79 1 140 1 163 1 277 1 297 1 44 1 10 1 195 1 300 1 
191 1 
186 2 191 1 277 1 158 1 254 1 149 1 195 2 291 1 
331 5 88 1 170 1 127 1 211 2 149 1 359 2 291 2 90 1 319 1 362 1 297 1 44 1 10 1 215 2 300 1 180 2 49 1 186 5 109 1 366 1 75 1 156 1 328 1 158 2 79 1 372 4 14 2 370 1 140 1 163 1 191 2 275 1 277 2 228 2 58 1 195 5 
50 1 109 2 31 1 52 1 94 1 78 1 7 1 338 1 307 1 140 2 163 1 153 1 296 1 177 1 192 1 44 1 10 1 99 1 23 1 118 1 
221 1 
109 2 207 1 172 1 79 1 140 2 163 1 44 1 10 2 284 2 
110 1 177 1 59 1 
109 1 50 1 31 1 52 1 94 1 34 1 338 1 7 1 307 1 140 1 153 1 296 1 192 1 23 1 118 1 284 1 
109 3 140 3 163 3 44 3 10 3 99 1 79 1 284 1 
109 1 140 1 163 1 297 1 44 1 10 1 
69 1 109 1 140 1 163 1 44 1 10 1 207 1 172 1 79 1 
261 1 207 1 289 1 127 1 7 1 338 1 65 1 130 1 153 1 296 1 44 3 10 3 22 1 268 1 216 1 107 1 23 1 186 1 50 1 109 4 69 1 31 1 52 1 94 1 78 1 247 1 225 1 307 1 79 2 114 1 140 4 163 3 309 1 192 1 253 2 280 1 99 1 195 1 118 1 197 1 257 1 166 1 38 1 284 1 
332 1 109 2 140 2 163 1 345 1 44 1 10 2 99 1 284 1 
186 1 69 1 109 3 260 1 207 1 289 1 78 1 79 1 114 1 140 3 191 1 163 3 130 1 44 3 10 3 22 1 99 2 268 1 195 1 
109 2 207 1 79 1 140 2 163 2 44 2 177 1 10 2 59 1 99 1 
109 1 50 1 52 1 31 1 94 1 338 1 7 1 307 1 140 1 153 1 296 1 192 1 23 1 118 1 284 1 
109 1 50 1 13 1 52 1 31 1 94 1 245 1 338 1 7 1 307 1 140 1 296 1 23 1 118 1 284 1 
18 1 287 1 63 1 202 1 205 2 125 1 65 2 177 2 215 1 302 1 51 1 270 1 110 2 247 4 14 1 309 1 253 2 280 1 59 2 116 1 197 1 257 1 166 1 38 1 
114 1 69 1 109 1 140 1 163 1 44 1 263 1 10 1 
332 1 109 5 345 1 224 1 207 1 78 1 79 1 140 5 163 4 44 4 10 5 99 2 284 1 313 1 
109 1 140 1 163 1 297 1 44 1 10 1 
226 1 169 1 
226 1 169 1 
356 1 161 1 
356 1 161 1 
356 1 161 1 
226 1 169 1 318 1 
184 1 226 1 169 1 
226 2 262 1 169 2 95 1 356 1 161 1 
226 1 169 1 318 1 
226 1 169 1 318 1 
218 1 226 1 169 1 
218 1 226 1 169 1 
218 1 226 1 169 1 
185 2 186 2 3 1 155 3 137 1 87 2 262 1 169 2 189 2 173 1 175 1 248 2 191 1 226 2 82 1 310 2 67 1 312 1 195 2 
286 1 87 1 169 1 123 1 342 1 44 2 10 2 214 1 185 1 186 1 184 1 109 2 27 1 155 1 189 1 248 1 140 2 163 2 226 1 312 1 195 1 255 1 284 1 101 1 
200 1 367 1 282 1 
138 1 367 1 282 1 
200 2 314 1 138 1 204 1 146 1 282 3 
200 1 314 1 138 1 204 1 190 1 282 2 
200 1 314 2 138 1 204 1 282 2 
331 2 18 1 123 1 125 1 211 1 149 1 359 1 174 1 212 2 151 1 291 1 235 1 265 2 342 1 362 1 214 1 215 1 180 1 186 5 72 3 344 1 30 1 158 1 96 1 14 1 372 3 191 2 36 1 81 2 277 4 195 5 196 1 
331 6 18 3 170 1 123 4 125 3 147 5 149 1 211 2 359 2 291 1 152 1 235 2 265 6 362 1 295 1 363 1 215 3 180 2 186 9 24 1 187 1 243 5 135 1 72 9 344 3 158 6 96 2 14 3 372 8 191 5 36 3 81 6 277 7 195 9 196 1 
331 2 18 1 170 1 123 1 125 1 211 1 359 1 212 1 291 1 151 1 235 1 265 2 215 1 180 1 186 3 344 1 72 4 30 1 96 1 372 3 14 1 191 3 36 2 81 2 277 2 195 3 
331 4 18 2 170 1 123 2 125 2 211 1 359 1 212 2 291 1 151 1 235 1 265 4 295 1 363 1 215 2 180 1 186 4 135 1 72 7 344 2 30 1 96 1 372 5 14 2 191 4 36 3 81 4 277 3 195 4 
221 1 
31 1 348 1 
320 1 
296 1 31 1 
50 1 361 1 91 2 296 1 31 3 360 1 
50 1 296 1 31 1 
31 1 159 1 
63 3 287 2 220 1 75 1 205 4 357 1 97 1 247 7 14 1 370 1 65 3 43 1 275 1 276 1 15 2 229 1 215 1 
63 3 287 2 220 1 75 1 205 4 357 1 97 1 247 7 14 1 370 1 65 3 43 1 275 1 276 1 15 2 229 1 215 1 
63 3 287 2 220 1 271 1 75 1 205 4 357 1 97 1 247 7 14 1 370 1 65 3 43 1 275 1 276 1 15 2 229 1 215 1 
344 1 205 4 223 1 125 1 357 2 150 1 247 5 14 1 65 1 43 1 274 1 15 1 98 1 376 1 182 1 
287 3 63 4 205 5 357 1 8 1 65 4 43 1 215 1 25 1 12 1 220 1 75 1 97 1 247 9 14 1 370 1 275 1 309 2 253 4 15 2 229 1 280 2 197 2 257 2 
200 1 334 1 40 1 168 1 19 1 352 1 232 2 146 1 148 2 338 1 7 1 237 1 133 1 241 1 68 1 269 1 301 1 28 1 343 1 138 1 94 1 367 1 308 1 307 1 35 1 57 1 311 1 330 1 282 2 118 1 
200 1 168 1 19 1 352 1 232 3 146 1 148 3 338 1 7 1 237 1 298 1 133 1 241 2 68 1 269 1 301 1 343 1 138 1 94 1 367 1 306 1 308 1 307 1 35 1 57 1 193 1 311 1 330 1 282 2 118 1 
200 1 168 1 19 1 352 1 232 2 146 1 148 2 338 1 7 1 237 1 298 1 133 1 241 2 68 1 269 1 343 1 138 1 94 1 367 1 308 1 307 1 193 1 330 1 282 2 118 1 
1 1 343 2 188 1 168 2 31 1 352 2 231 1 232 1 94 1 306 1 148 1 7 1 338 1 307 1 35 1 37 1 251 1 296 1 311 1 133 2 165 1 23 1 118 1 
200 1 334 1 168 1 352 1 232 1 146 1 148 1 338 1 7 1 237 1 298 1 133 1 68 1 301 1 28 1 343 1 138 1 94 1 367 1 308 1 307 1 35 1 57 1 311 1 282 2 118 1 
358 1 
331 2 332 1 1 1 84 2 122 1 41 1 42 1 289 1 233 1 338 2 7 1 291 1 293 1 130 1 296 1 10 1 47 2 179 2 180 1 183 2 186 5 94 2 96 1 53 1 307 1 140 1 191 2 195 5 62 2 105 2 316 1 149 3 211 1 359 1 317 2 362 1 22 1 267 1 23 2 323 1 109 1 69 1 72 2 73 4 31 1 158 6 160 1 372 2 114 1 36 2 37 1 279 1 118 2 377 1 167 1 
332 1 84 1 41 1 289 1 233 1 149 1 130 1 10 1 22 1 323 1 186 3 109 1 69 1 73 2 158 2 160 1 114 1 140 1 254 1 195 3 377 1 167 1 
332 1 41 1 289 1 233 1 149 1 291 1 130 1 10 1 22 1 179 1 323 1 186 3 109 1 69 1 73 3 158 1 160 1 114 1 140 1 191 1 254 1 195 3 377 1 167 1 
332 1 84 1 62 1 41 1 289 1 233 1 149 1 291 1 130 1 10 1 22 1 179 1 323 1 186 3 109 1 69 1 73 3 158 2 160 1 114 1 140 1 191 1 254 1 195 3 377 1 167 1 
332 1 331 1 84 4 41 1 42 1 289 1 233 1 89 1 291 5 130 1 10 1 47 2 179 4 180 1 181 1 183 2 186 5 53 1 140 1 191 5 254 1 195 5 62 4 105 2 149 3 211 1 359 1 317 2 362 1 22 1 323 1 69 1 109 1 71 1 73 6 158 7 160 1 369 1 329 1 372 1 114 1 36 2 377 1 167 1 
332 1 331 1 84 2 41 1 42 1 289 1 233 1 291 1 293 1 130 1 10 1 47 2 179 2 180 1 183 2 186 4 53 1 140 1 191 2 195 4 62 2 105 2 211 1 149 2 359 1 317 2 362 1 22 1 323 1 69 1 109 1 73 4 72 2 158 4 160 1 372 1 114 1 36 2 377 1 167 1 
331 1 332 1 84 2 62 2 41 1 105 2 42 1 289 1 233 1 149 2 211 1 89 1 359 1 291 1 317 2 130 1 362 1 10 1 22 1 47 2 179 2 180 1 181 1 183 2 323 1 186 4 109 1 69 1 71 1 73 4 158 4 160 1 53 1 372 1 114 1 140 1 191 1 36 2 195 4 377 1 167 1 
331 1 332 1 84 2 62 2 41 1 105 2 42 1 289 1 233 1 149 2 211 1 89 1 359 1 291 1 317 2 130 1 362 1 10 1 22 1 47 2 179 2 180 1 181 1 183 2 323 1 186 4 109 1 69 1 71 1 73 4 158 4 160 1 53 1 372 1 114 1 140 1 191 1 36 2 195 4 377 1 167 1 
331 1 332 1 199 1 84 2 62 2 41 1 105 2 289 1 233 1 149 2 211 1 359 1 291 1 317 2 130 1 362 1 45 1 10 1 22 1 179 2 180 1 323 1 186 4 70 2 109 1 69 1 71 1 72 2 73 4 327 1 158 4 160 1 53 1 372 1 114 1 140 1 191 1 195 4 377 1 121 2 167 1 
331 1 332 1 84 3 62 3 41 1 105 2 42 1 289 1 233 1 149 2 211 1 359 1 89 1 291 1 317 2 362 1 130 1 10 1 22 1 47 2 179 3 180 1 181 1 183 2 323 1 186 4 109 1 69 1 71 1 73 5 158 5 160 1 369 1 53 1 372 1 114 1 140 1 191 1 36 2 195 4 377 1 167 1 
331 1 332 1 84 3 62 3 41 1 105 2 42 1 289 1 233 1 149 2 211 1 359 1 89 1 291 1 317 2 362 1 130 1 10 1 22 1 47 2 179 3 180 1 181 1 183 2 323 1 186 4 109 1 69 1 71 1 73 5 158 5 160 1 369 1 53 1 372 1 114 1 140 1 191 1 36 2 195 4 377 1 167 1 
332 1 331 1 84 2 41 1 289 1 233 1 291 1 293 1 130 1 45 1 10 1 179 2 180 1 186 4 53 1 140 1 191 1 195 4 62 2 105 2 211 1 149 2 359 1 317 2 362 1 22 1 323 1 69 1 109 1 70 2 73 4 72 2 158 4 160 1 372 1 114 1 377 1 121 2 167 1 
51 1 309 1 253 2 221 1 280 1 197 1 257 1 166 1 38 1 
26 1 344 1 104 1 110 4 205 3 223 1 125 1 247 4 14 1 65 1 177 4 309 1 253 2 98 1 376 1 280 1 48 1 38 1 166 1 257 1 197 1 
261 1 205 1 7 1 338 1 65 1 153 1 296 1 44 1 10 1 48 1 23 1 50 1 109 2 31 1 52 1 94 1 34 1 78 1 347 1 247 2 307 1 140 2 163 1 54 1 192 1 309 1 253 2 59 1 280 1 99 1 118 1 120 1 257 1 166 1 38 1 197 1 284 1 349 1 
287 4 125 2 338 3 7 2 290 1 296 2 44 1 177 7 298 1 10 1 48 1 50 2 344 2 52 2 94 3 97 1 247 20 307 2 14 3 140 3 250 2 309 3 192 2 15 1 253 6 59 7 99 1 197 3 257 3 18 2 261 1 203 1 63 8 205 10 64 2 65 10 153 2 215 3 107 2 23 1 109 3 220 1 110 7 75 1 31 2 77 2 78 1 370 1 162 2 373 1 163 1 275 1 229 4 280 3 120 1 118 3 38 3 166 3 284 2 
1 1 102 2 261 1 315 1 40 1 205 1 106 1 7 2 338 7 65 1 296 2 44 1 298 1 10 1 365 1 23 2 109 1 51 1 136 1 31 3 76 1 94 8 247 2 307 2 140 1 163 1 37 1 309 2 253 4 280 2 281 1 99 1 118 8 120 1 197 2 257 2 166 2 38 2 283 1 
18 1 63 1 287 1 205 1 207 1 125 1 65 2 177 1 44 1 10 1 48 1 215 1 109 1 344 1 110 1 305 1 247 3 79 1 14 1 140 1 163 1 309 1 253 2 59 1 280 1 197 1 257 1 166 1 38 1 
51 1 63 1 202 1 110 1 205 2 125 1 247 2 14 1 177 1 309 1 253 2 229 1 59 1 280 1 38 1 166 1 257 1 197 1 
18 1 51 1 63 1 287 1 110 1 247 2 65 2 177 1 309 1 253 2 59 1 280 1 116 1 215 1 38 1 166 1 257 1 197 1 
18 1 63 2 287 1 205 2 125 1 65 2 177 2 215 1 51 1 344 1 110 2 247 4 14 1 309 1 253 2 229 1 280 1 59 2 197 1 257 1 166 1 38 1 
63 1 202 1 110 1 205 2 125 1 247 2 14 1 177 1 309 1 253 2 229 1 59 1 280 1 283 1 38 1 166 1 257 1 197 1 
18 1 63 1 287 1 110 1 247 2 65 2 177 1 309 1 253 2 59 1 280 1 116 1 215 1 283 1 38 1 166 1 257 1 197 1 
18 1 63 2 287 1 205 2 125 1 65 2 177 2 215 1 344 1 110 2 247 4 14 1 309 1 253 2 229 1 280 1 59 2 197 1 257 1 166 1 38 1 283 1 
18 1 63 2 287 1 205 2 125 1 65 2 177 2 215 1 344 1 110 2 247 4 14 1 309 1 253 2 229 1 280 1 59 2 197 1 257 1 166 1 38 1 
261 1 205 1 7 1 338 1 65 1 153 1 296 1 107 1 23 1 50 1 109 1 52 1 31 1 94 1 247 2 307 1 140 1 192 1 309 1 253 2 280 1 120 1 118 1 38 1 166 1 257 1 197 1 284 1 
143 1 261 1 205 1 7 1 338 1 65 1 296 1 23 1 50 1 109 1 52 1 13 1 31 1 94 1 245 1 247 2 307 1 140 1 309 1 253 2 280 1 120 1 118 1 38 1 166 1 257 1 197 1 284 1 
18 1 63 2 287 1 205 2 125 1 65 2 177 2 48 1 215 1 344 1 110 2 247 4 14 1 309 1 253 2 229 1 280 1 59 2 197 1 257 1 166 1 38 1 
18 1 287 1 63 2 40 1 205 2 125 1 7 1 338 1 64 1 65 2 153 1 296 1 177 2 215 1 107 1 50 1 109 1 344 1 110 2 52 1 31 1 94 1 247 4 14 1 307 1 140 1 192 1 309 1 253 2 229 1 59 2 280 1 118 1 38 1 166 1 257 1 197 1 
18 1 201 1 63 1 205 2 207 1 125 1 65 1 44 1 177 1 10 1 215 1 48 1 109 1 344 1 110 1 247 3 79 1 14 1 140 1 163 1 309 1 253 2 229 1 280 1 59 1 197 1 257 1 166 1 38 1 
12 1 333 1 344 1 29 1 325 1 304 1 205 4 223 1 125 1 247 6 14 1 65 2 274 1 176 1 309 2 253 4 98 1 376 1 280 2 46 1 257 2 197 2 
12 1 333 1 344 1 29 1 325 1 304 1 205 4 223 1 125 1 247 6 14 1 65 2 274 1 176 1 309 2 253 4 98 1 376 1 280 2 46 1 257 2 197 2 
333 1 63 1 287 1 205 7 125 1 65 4 215 1 46 1 12 1 29 1 344 1 220 1 304 1 325 1 75 1 223 1 97 1 247 11 14 2 370 1 274 1 275 1 309 1 15 1 253 2 98 1 280 1 376 1 197 1 257 1 
12 1 333 1 344 1 29 1 325 1 304 1 205 4 223 1 125 1 247 6 14 1 65 2 274 1 176 1 309 2 253 4 98 1 376 1 280 2 46 1 257 2 197 2 
18 2 85 1 333 4 63 4 287 2 205 14 20 1 125 3 209 1 65 12 92 1 215 2 46 1 134 1 25 2 12 1 29 1 344 3 304 2 325 2 223 2 368 1 247 26 14 3 249 1 80 1 274 2 309 3 253 6 229 2 98 2 280 3 197 3 257 3 
185 1 3 1 226 1 137 1 87 1 262 1 169 1 189 1 6 1 248 1 
184 1 255 1 
185 1 226 1 87 1 169 1 189 1 5 1 256 1 285 1 248 1 
186 1 185 1 3 1 155 2 137 1 87 1 262 1 169 1 189 1 173 1 175 1 248 1 191 1 226 1 82 1 310 1 312 1 195 1 
186 1 185 1 3 1 155 2 137 1 87 1 262 1 169 1 189 1 173 1 175 1 248 1 191 1 226 1 82 1 310 1 312 1 195 1 
186 1 185 1 3 1 155 2 137 1 87 1 262 1 169 1 189 1 173 1 175 1 248 1 191 1 226 1 82 1 310 1 312 1 195 1 
95 1 322 1 318 1 
95 1 322 1 318 1 
218 1 299 1 
218 1 299 1 95 1 
286 1 101 1 
286 1 87 1 169 1 123 1 342 1 44 2 214 1 10 2 186 1 185 1 184 1 109 2 27 1 155 1 189 1 248 1 140 2 226 1 163 2 82 1 277 1 310 1 195 1 100 1 255 1 284 1 101 1 
322 1 318 1 
218 1 299 1 95 1 
102 2 261 1 205 1 206 1 106 1 354 1 7 1 338 2 65 1 131 1 296 1 10 2 48 1 365 1 109 2 111 1 31 1 94 2 272 1 247 2 307 1 140 2 309 1 253 2 280 1 118 2 120 1 166 1 38 1 257 1 197 1 
200 1 138 1 343 1 40 1 146 1 94 2 337 1 367 1 7 1 338 2 307 1 308 1 339 1 374 1 57 1 298 1 282 2 118 2 68 1 
200 1 350 1 138 1 343 1 146 1 94 1 367 1 338 1 7 1 308 1 307 1 374 1 57 1 298 1 282 2 118 1 68 1 
1 1 343 1 31 1 346 1 94 1 337 1 7 1 338 1 307 1 37 1 296 1 23 1 118 1 165 1 
200 1 138 1 343 1 146 1 94 1 337 1 367 1 338 1 7 1 307 1 308 1 339 1 374 1 57 1 298 1 282 2 118 1 68 1 
294 1 
221 1 
331 1 42 1 211 1 149 1 359 1 291 1 362 1 47 1 180 1 183 1 186 1 72 1 158 1 372 1 191 2 36 1 195 1 
0 1 331 6 125 2 289 1 7 1 338 1 129 1 91 1 296 1 180 2 186 2 50 1 344 2 139 2 244 1 94 1 96 1 307 2 14 2 191 6 348 2 195 2 18 2 351 1 211 2 149 1 359 2 360 1 265 6 362 2 66 1 21 1 215 2 23 1 72 12 31 4 158 2 33 1 77 2 372 7 36 6 81 6 228 2 118 1 
331 5 18 2 20 1 125 2 210 1 209 1 149 1 211 2 359 2 291 2 90 1 265 5 362 2 92 1 215 2 180 2 186 1 72 6 344 2 223 1 368 1 158 1 157 1 96 1 372 8 14 2 191 5 80 1 274 1 36 3 81 5 228 2 279 1 98 1 195 1 
331 2 88 1 127 1 211 1 359 1 89 1 90 1 362 1 297 1 44 1 10 1 215 1 180 1 300 1 186 1 109 1 75 1 328 1 370 1 14 2 372 2 79 1 140 1 163 1 275 1 228 2 195 1 
331 1 156 1 211 1 359 1 291 1 372 1 191 1 362 1 180 1 49 1 
331 5 18 2 344 2 72 10 125 2 77 1 14 2 372 5 90 1 265 5 191 5 36 5 81 5 228 2 215 2 
186 1 191 1 158 1 195 1 149 1 291 1 
331 2 1 1 122 1 170 1 144 1 211 2 149 2 359 2 7 1 338 4 340 2 362 1 296 1 321 1 267 1 180 2 23 2 186 3 31 1 94 4 158 4 96 2 307 1 372 2 37 1 279 2 230 1 195 3 118 4 
261 1 127 1 338 1 7 1 65 1 153 1 296 1 44 2 10 2 216 1 107 1 23 1 109 3 50 1 52 1 31 1 94 1 247 1 79 2 307 1 140 3 163 2 309 1 192 1 253 2 280 1 118 1 197 1 257 1 38 1 166 1 284 1 
331 2 72 4 211 1 96 1 359 1 372 1 291 2 265 2 191 4 36 2 362 1 81 2 15 1 279 1 180 1 
189 1 240 1 248 1 
219 1 137 1 189 1 101 1 248 1 
189 1 240 1 248 1 
189 1 240 1 248 1 
189 1 39 1 248 1 
189 1 39 1 248 1 
189 1 39 1 248 1 
189 1 248 1 
226 1 169 1 
287 2 63 2 205 4 65 4 92 1 215 1 12 1 220 1 75 1 223 1 97 1 247 8 14 1 370 1 274 1 275 1 309 1 15 1 253 2 98 1 280 1 197 1 257 1 
12 1 344 1 205 3 223 1 125 1 126 1 247 4 14 1 65 1 274 1 92 1 309 2 253 4 98 1 376 1 280 2 257 2 197 2 
18 2 287 3 63 4 205 9 125 2 20 1 126 1 209 1 65 10 92 1 215 3 25 1 12 1 220 1 344 2 75 1 223 1 368 1 97 1 247 19 370 1 14 3 80 1 274 1 275 1 309 3 15 1 253 6 229 1 98 1 280 3 197 3 257 3 
18 1 287 3 63 5 205 10 125 2 20 1 126 1 209 1 65 7 92 1 215 2 25 1 12 1 220 1 344 2 75 1 223 1 368 1 97 1 247 17 370 1 14 3 80 1 274 1 275 1 309 3 15 1 253 6 229 2 98 1 280 3 197 3 257 3 
287 2 63 2 205 4 65 4 92 1 215 1 12 1 220 1 75 1 223 1 97 1 247 8 14 1 370 1 274 1 275 1 309 1 15 1 253 2 98 1 280 1 197 1 257 1 
18 2 287 1 63 2 205 6 125 2 20 1 209 1 65 6 92 1 215 2 12 1 344 2 223 1 368 1 247 12 14 2 80 1 274 1 309 1 253 2 229 1 98 1 280 1 197 1 257 1 
18 1 287 3 63 5 205 10 20 1 125 2 126 1 209 1 65 8 92 1 215 2 25 2 12 1 220 1 344 2 75 1 223 1 368 1 97 1 247 18 370 1 14 3 80 1 274 1 275 1 309 4 15 1 253 8 229 2 98 1 280 4 197 4 257 4 
18 2 287 3 63 6 205 9 20 1 125 3 209 1 65 7 176 1 92 1 215 2 25 2 12 1 344 3 223 1 368 1 247 16 14 3 80 1 274 1 309 4 253 8 229 3 98 1 280 4 197 4 257 4 
220 2 287 3 63 6 75 3 205 3 97 1 247 7 370 3 14 1 65 4 275 1 229 3 215 1 
18 1 287 3 63 4 205 10 20 1 125 2 209 1 65 8 176 1 92 1 215 2 25 2 12 1 220 1 344 2 75 1 223 1 368 1 97 1 247 18 370 1 14 3 80 1 274 1 275 1 309 4 15 1 253 8 229 1 98 1 280 4 197 4 257 4 
25 1 63 3 287 2 220 1 205 4 75 1 97 1 247 8 14 1 370 1 65 4 275 1 309 2 15 1 253 4 229 1 280 2 215 1 257 2 197 2 
221 1 
18 1 287 1 63 2 344 1 205 2 125 1 126 1 247 4 14 1 65 2 309 1 253 2 229 1 280 1 215 1 257 1 197 1 
65 1 274 1 344 1 205 3 223 1 98 1 125 1 376 1 247 4 14 1 
65 1 344 1 104 1 205 3 223 1 98 1 125 1 376 1 247 4 14 1 
65 1 98 1 247 1 
205 1 223 1 247 1 
18 1 344 1 63 3 287 2 205 3 125 1 126 1 77 1 247 6 14 1 65 3 309 1 253 2 229 1 280 1 215 1 197 1 257 1 
18 2 287 1 63 2 205 6 125 2 20 1 209 1 65 6 92 1 215 2 12 1 344 2 223 1 368 1 247 12 14 2 80 1 274 1 309 1 253 2 229 1 98 1 280 1 197 1 257 1 
287 1 63 2 205 3 75 1 247 6 14 1 370 1 65 3 275 1 229 1 215 1 
25 1 63 2 287 1 220 1 205 1 75 1 97 1 247 3 370 1 65 2 227 1 309 1 253 2 229 1 280 1 257 1 197 1 
12 1 287 3 63 5 88 1 75 2 205 5 247 10 370 2 14 2 65 5 275 1 309 1 253 2 229 2 280 1 215 2 197 1 257 1 
12 1 63 1 205 2 125 1 247 2 14 1 309 1 253 2 229 1 280 1 257 1 197 1 
18 1 12 1 287 1 63 2 344 1 205 2 125 1 247 4 14 1 65 2 309 1 253 2 229 1 280 1 215 1 257 1 197 1 
25 1 12 1 287 1 63 2 75 1 205 1 247 3 370 1 65 2 176 1 227 1 309 3 253 6 229 1 280 3 257 3 197 3 
61 1 18 2 287 3 63 5 205 13 125 3 126 1 234 1 65 11 176 1 215 3 182 1 25 1 12 1 220 1 344 3 75 1 223 3 97 1 247 24 370 1 14 4 274 1 275 1 309 4 15 1 253 8 98 3 229 2 280 4 376 1 197 4 257 4 
332 1 109 1 140 1 345 1 10 1 115 1 284 1 
108 1 332 1 109 1 303 1 345 1 171 1 140 1 56 1 10 1 115 1 60 1 284 1 
221 1 94 1 118 1 23 1 338 1 
50 1 109 2 31 1 52 1 94 1 338 1 7 1 307 1 140 2 163 1 296 1 44 1 192 1 10 1 99 1 23 1 118 1 284 1 
69 1 50 2 109 2 31 3 52 1 94 1 159 1 338 1 7 1 307 1 114 1 140 2 163 2 340 1 296 2 252 1 44 1 192 1 10 2 22 1 99 1 118 1 284 1 
355 1 7 1 338 2 340 1 296 2 44 1 10 2 22 1 109 2 50 2 69 1 52 1 31 3 94 2 245 1 159 1 307 1 114 1 140 2 163 2 252 1 99 1 118 2 284 1 
355 1 289 1 7 1 338 3 291 1 340 1 132 1 91 1 296 1 23 1 186 2 50 1 31 4 94 3 32 1 158 1 159 1 307 1 191 1 252 1 348 1 195 2 118 3 
186 2 50 1 31 4 244 1 355 1 289 1 94 3 158 1 159 1 338 3 7 1 291 1 307 1 191 1 340 1 91 1 296 1 252 1 195 2 348 1 23 1 118 3 
315 1 94 1 118 1 7 1 338 1 307 1 
50 1 102 1 315 1 136 1 40 1 264 1 31 3 76 1 94 7 338 6 360 1 7 2 307 3 273 1 296 2 298 1 281 1 365 1 178 1 23 2 118 7 
287 2 40 1 338 1 7 1 131 1 296 1 44 1 177 1 10 1 48 1 50 1 52 1 94 1 97 1 247 6 307 1 14 1 140 2 250 1 192 1 309 2 253 4 15 1 59 1 99 1 197 2 257 2 63 2 205 3 64 1 65 3 153 1 215 1 107 1 109 2 220 1 110 1 75 1 31 1 370 1 163 1 275 1 280 2 118 1 38 2 166 2 284 2 
331 1 0 1 289 1 211 2 149 1 359 2 338 1 291 1 362 2 91 1 66 1 21 1 23 1 180 2 49 1 186 3 31 2 244 1 156 1 94 1 158 2 372 1 191 1 277 1 230 1 195 3 348 1 118 1 
50 1 315 1 40 1 31 2 94 2 338 2 360 1 7 1 307 2 129 1 91 1 296 1 118 2 
1 1 242 1 40 1 31 1 355 1 94 4 338 4 7 1 307 1 37 1 296 1 23 1 118 4 
50 1 259 1 264 1 31 1 208 1 94 2 338 2 7 1 290 1 307 2 340 1 296 1 178 1 118 2 
138 1 94 1 367 1 282 1 118 1 23 1 7 1 68 1 338 1 307 1 
296 1 40 1 111 1 31 1 298 1 94 2 365 1 118 2 7 1 338 2 307 1 
1 1 242 1 40 1 31 3 94 5 76 1 338 4 7 2 307 2 340 1 37 1 296 2 281 1 365 1 23 1 118 5 
1 1 242 1 258 1 40 1 31 3 94 5 76 1 338 4 7 2 307 2 340 1 37 1 296 2 365 1 23 1 118 5 
50 1 109 2 31 1 52 1 94 1 245 1 338 1 7 1 307 1 140 2 163 1 296 1 44 1 10 1 99 1 23 1 118 1 284 1 
50 1 264 1 31 1 94 1 338 1 360 1 7 1 307 2 340 1 273 1 296 1 178 1 118 1 
109 1 326 1 124 1 206 1 354 1 272 1 140 1 10 1 239 1 
154 1 239 1 117 1 
198 1 326 1 124 1 239 1 284 1 
186 2 198 2 69 1 335 1 326 2 124 2 289 1 291 1 114 1 191 1 130 1 277 1 22 1 154 1 268 1 239 1 195 2 117 1 284 1 
221 1 
35 1 19 1 232 1 311 1 148 1 330 1 269 1 
168 1 352 1 148 1 
28 1 103 1 19 1 232 3 148 3 128 1 35 1 194 1 311 1 330 1 119 2 269 1 
35 1 213 1 19 1 232 2 311 1 148 2 330 1 241 1 269 1 
200 1 2 1 28 1 222 1 232 1 148 1 367 1 35 1 311 1 330 1 282 1 
35 1 28 1 19 1 232 1 311 1 148 1 330 1 
35 1 28 1 19 2 232 1 311 1 148 1 269 1 
93 1 35 2 86 1 28 1 19 1 232 2 311 2 148 2 330 1 17 1 
35 1 2 1 28 1 19 1 113 1 112 1 232 3 311 1 148 3 330 2 246 1 241 2 269 1 
200 1 28 1 138 1 19 1 232 2 146 1 148 2 367 1 35 1 311 1 238 1 330 1 282 2 241 1 269 1 
35 2 2 1 213 1 28 1 9 1 19 1 113 1 232 4 311 2 148 4 330 2 241 2 269 1 
35 1 28 1 19 1 232 1 311 1 148 1 330 1 269 1 
2 1 103 1 19 2 113 1 232 4 145 1 148 4 128 1 35 1 311 1 330 3 119 1 241 2 269 2 
217 1 35 1 28 1 74 1 288 1 19 1 232 2 311 1 148 2 330 1 241 1 269 1 
28 1 103 1 19 1 232 3 148 3 128 2 35 1 375 1 311 1 330 1 119 2 269 1 
292 1 324 2 330 2 371 1 
11 1 35 1 28 1 232 1 311 1 148 1 
35 1 28 1 19 1 112 1 232 2 311 1 148 2 330 1 241 1 269 1 
142 1 
35 1 28 1 19 1 232 1 311 1 148 1 330 1 269 1 
35 1 28 1 19 1 112 1 232 3 311 1 148 3 330 1 119 1 241 1 269 1 
2 1 113 1 145 1 330 1 
19 1 330 1 

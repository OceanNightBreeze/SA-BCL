#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (184,212) 204 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (184,212) 204 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 142 31 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 129 222 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 1 100 1 101 1 264 9 102 1 54 2 266 3 56 1 293 1 294 2 184 1 219 2 196 2 297 1 60 2 223 1 253 1 125 4 17 5 315 6 20 1 90 2 280 1 178 1 212 1 340 2 286 1 263 9 
288 1 100 1 101 1 264 9 102 1 266 3 54 2 56 1 293 1 294 2 184 1 196 2 219 2 297 1 60 2 223 1 253 1 125 4 17 5 315 6 20 1 90 2 280 1 178 1 212 1 340 2 286 1 263 9 
288 1 100 1 101 1 264 10 102 1 266 4 54 2 56 1 293 1 294 2 184 1 196 2 219 2 297 1 60 2 223 1 253 1 125 5 17 6 315 7 20 1 90 2 280 1 178 1 212 1 340 2 286 1 263 10 
288 1 100 1 101 1 264 7 266 2 54 1 56 1 293 1 294 2 184 1 196 2 219 2 297 1 60 2 223 1 253 1 125 3 17 4 315 4 20 1 90 2 280 1 178 1 212 1 340 2 286 1 263 7 
253 1 264 4 125 2 102 1 266 1 54 2 17 3 56 1 294 1 315 3 90 1 219 1 196 1 280 1 178 1 223 1 340 1 263 4 
288 1 253 1 264 2 17 1 56 1 293 1 294 1 219 1 90 1 317 1 45 1 60 1 146 1 223 1 340 1 263 2 
253 1 264 3 125 1 266 1 17 2 56 1 315 1 219 2 60 1 212 1 223 1 340 2 263 3 
264 1 204 1 55 1 212 1 340 1 223 1 219 1 263 1 
264 1 204 1 55 1 212 1 340 1 223 1 219 1 263 1 
307 1 177 1 227 1 
227 1 180 1 229 2 
115 2 108 2 231 2 279 2 3 1 321 1 88 2 250 2 
115 2 289 1 265 1 215 2 267 1 3 1 195 2 295 1 246 1 218 1 33 1 59 2 144 1 199 1 301 1 349 1 249 2 250 2 335 1 108 2 110 2 112 1 189 1 18 1 87 1 88 3 353 1 42 1 230 1 158 1 231 2 192 1 93 1 279 3 210 1 97 1 321 1 
115 1 108 1 231 1 324 1 279 1 346 1 3 1 88 1 323 1 250 1 
307 1 28 1 242 1 324 1 227 1 5 1 245 1 88 1 19 1 231 1 277 1 69 1 279 1 238 1 
115 2 324 2 242 1 3 1 5 1 245 1 346 1 250 2 108 2 307 1 227 1 88 2 19 1 156 1 231 2 69 2 279 2 238 2 323 1 
69 1 238 1 173 1 258 1 155 1 
307 1 69 2 227 1 344 1 238 2 173 1 284 1 155 1 
69 1 238 1 155 1 
108 1 115 1 324 1 3 1 173 1 88 1 156 1 231 1 69 1 346 1 279 1 238 1 323 1 250 1 
227 1 
307 1 69 2 10 1 227 1 238 2 173 1 284 1 155 1 
307 1 73 1 337 1 227 1 149 1 173 2 312 1 339 1 68 2 155 2 330 1 69 5 122 1 211 2 238 5 134 1 284 1 26 2 200 1 
177 1 321 1 
108 1 115 1 325 1 88 2 351 1 231 2 279 2 321 2 250 1 
94 1 150 1 247 1 
110 1 265 1 267 1 112 1 18 1 88 1 246 1 353 1 59 1 144 1 279 1 97 1 321 1 249 1 262 1 335 1 
115 1 265 1 110 1 112 1 267 1 150 1 18 1 151 1 88 2 246 1 353 1 59 1 231 1 144 1 279 2 97 1 249 1 224 1 250 1 335 1 
108 1 115 3 231 3 279 3 321 1 88 3 224 1 250 3 
115 1 231 1 324 1 279 1 88 1 323 1 250 1 
115 1 108 1 231 1 324 1 279 1 325 1 88 1 351 1 250 1 
115 3 242 1 324 1 265 1 215 2 267 1 3 1 5 1 195 1 245 1 295 1 246 1 33 1 59 1 144 1 301 1 147 1 249 1 250 3 224 1 335 1 108 2 110 1 112 1 189 1 18 1 151 1 87 1 88 4 351 1 19 1 353 1 42 1 158 1 231 3 192 1 69 1 93 1 279 4 130 1 210 1 97 1 238 1 321 1 
115 1 231 2 329 1 28 1 279 2 321 1 88 2 250 1 224 1 
108 1 115 3 324 1 242 1 227 1 151 1 5 1 245 1 311 1 88 3 351 1 19 1 231 3 69 1 279 3 130 1 238 1 224 2 250 3 
108 1 115 2 150 1 88 2 351 1 231 2 94 1 279 2 224 1 250 2 
110 1 265 1 267 1 112 1 18 1 88 1 246 1 59 1 353 1 144 1 279 1 97 1 321 1 249 1 335 1 
36 1 110 1 265 1 112 1 18 1 88 1 246 1 59 1 353 1 144 1 279 1 97 1 237 1 321 1 249 1 
182 1 75 1 215 2 189 1 150 1 195 2 295 1 327 1 33 2 192 1 94 1 93 1 233 1 221 1 210 1 320 1 301 1 247 1 358 1 
115 1 231 1 324 1 279 1 22 1 88 1 19 1 250 1 
115 4 108 1 252 1 28 1 151 1 88 5 351 1 231 5 329 1 235 1 279 5 321 1 224 2 250 4 
115 2 231 2 324 1 22 1 279 2 88 2 323 1 250 2 
186 1 160 1 
186 1 160 1 
326 1 8 1 
326 1 8 1 
326 1 8 1 
186 1 160 1 98 1 
186 1 160 1 47 1 
186 2 160 2 326 1 168 1 314 1 8 1 
186 1 160 1 98 1 
186 1 160 1 98 1 
186 1 160 1 107 1 
186 1 160 1 107 1 
186 1 160 1 107 1 
244 1 227 1 140 2 116 1 89 3 191 1 186 2 232 1 160 2 69 2 80 2 165 1 302 2 238 2 259 2 304 1 168 1 334 2 305 1 
115 2 213 1 140 1 116 1 186 1 187 1 80 1 84 1 334 1 250 2 16 1 274 1 89 1 88 2 231 2 160 1 69 1 44 1 279 2 25 1 238 1 321 1 259 1 47 1 
294 1 90 1 196 1 
294 1 146 1 90 1 
208 1 24 1 174 1 294 3 146 1 196 2 
208 1 174 1 294 2 146 1 124 1 196 1 
208 2 174 1 294 2 146 1 196 1 
181 1 213 1 330 1 35 1 83 2 306 2 13 1 307 1 63 2 337 3 16 1 227 2 149 2 274 1 171 1 173 4 190 1 68 1 155 1 176 1 114 1 229 3 91 1 69 5 233 1 211 1 238 5 358 1 180 1 162 1 26 1 284 1 
181 3 213 4 74 1 30 1 345 1 330 1 200 1 306 6 13 3 307 1 225 1 63 6 337 8 65 5 227 5 149 6 171 2 173 7 190 1 68 2 155 6 229 9 91 2 69 9 233 3 281 1 211 2 238 9 358 3 180 3 162 3 258 5 284 1 26 2 136 1 
213 1 181 1 35 1 83 1 200 1 13 1 306 2 307 1 337 3 63 2 227 3 149 2 171 1 173 2 68 1 176 1 91 1 229 4 69 3 233 1 211 1 238 3 358 1 180 2 162 1 26 1 
213 2 181 2 30 1 35 1 83 2 200 1 306 4 13 2 307 1 63 4 337 5 227 4 149 4 171 1 173 3 68 1 176 1 229 7 91 1 69 4 233 2 281 1 211 1 238 4 358 2 180 3 162 2 26 1 136 1 
353 1 177 1 292 1 
353 1 129 1 
343 1 
353 1 265 1 
353 3 144 1 265 1 292 2 282 1 29 1 
353 1 144 1 265 1 
353 1 78 1 
181 1 138 1 254 1 85 1 182 2 243 1 118 1 195 7 257 1 296 2 33 3 70 1 221 3 199 4 167 1 358 1 303 1 
181 1 138 1 254 1 85 1 182 2 243 1 118 1 195 7 257 1 296 2 33 3 70 1 221 3 199 4 167 1 358 1 303 1 
181 1 50 1 138 1 254 1 85 1 182 2 243 1 118 1 195 7 257 1 296 2 33 3 70 1 221 3 199 4 167 1 358 1 303 1 
138 1 181 4 243 1 182 5 215 2 118 1 195 31 217 1 296 3 328 1 33 15 198 1 221 10 199 16 301 1 300 1 167 2 303 1 13 3 254 2 85 2 308 1 189 1 350 4 257 5 40 3 192 1 93 1 233 3 70 2 162 3 358 4 285 1 260 1 
138 1 181 3 243 1 182 3 215 2 118 2 195 14 296 2 33 6 221 4 199 8 347 1 301 1 167 1 201 1 85 2 254 2 189 1 257 1 192 1 93 1 70 1 46 1 358 3 
264 2 119 1 56 1 294 2 196 1 219 1 104 1 59 1 298 1 60 1 270 1 146 1 249 1 223 1 248 1 170 1 253 1 110 1 112 1 17 1 18 1 315 1 90 1 316 1 355 1 24 1 179 1 340 1 263 2 99 1 
264 3 119 1 56 1 294 2 196 1 219 1 104 1 59 1 143 1 60 1 270 1 146 1 249 1 248 1 170 1 253 1 110 1 15 1 112 1 17 1 18 1 315 2 90 1 316 1 24 1 179 1 340 1 135 1 263 3 99 1 
264 2 119 1 56 1 294 2 196 1 59 1 143 1 60 1 270 1 146 1 249 1 248 1 170 1 253 1 110 1 112 1 17 1 18 1 315 2 90 1 316 1 24 1 179 1 135 1 263 2 
264 1 38 1 265 1 15 1 110 1 112 1 310 1 119 2 18 1 4 1 313 1 219 1 353 1 59 1 316 2 193 1 60 2 97 1 270 2 340 1 249 1 148 1 263 1 
264 1 119 1 294 2 196 1 219 1 104 1 59 1 298 1 60 1 270 1 146 1 249 1 223 1 248 1 170 1 110 1 112 1 18 1 90 1 316 1 24 1 179 1 340 1 135 1 263 1 99 1 
239 1 
324 1 242 1 28 1 265 1 5 1 245 1 31 1 9 1 142 1 59 2 330 1 79 1 145 1 123 1 249 2 188 1 337 1 38 1 110 2 112 1 228 1 149 1 18 1 88 1 313 1 19 1 68 1 155 2 91 1 353 1 231 1 277 1 69 3 279 1 97 2 211 1 238 3 26 1 284 1 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 242 1 28 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 155 1 231 1 69 3 277 1 79 1 10 1 279 1 238 3 284 1 
188 1 324 1 242 1 28 1 5 1 245 1 88 1 31 1 19 1 68 1 9 1 142 1 231 1 69 2 330 1 277 1 79 1 279 1 211 1 238 2 26 1 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 28 1 242 1 5 1 245 1 31 1 88 1 19 1 9 1 142 1 231 1 69 2 277 1 79 1 279 1 238 2 
188 1 324 1 242 1 28 1 5 1 245 1 88 1 31 1 19 1 68 1 9 1 142 1 231 1 69 2 330 1 277 1 79 1 279 1 211 1 238 2 26 1 
138 1 181 1 243 1 182 2 215 2 118 1 195 6 295 1 296 1 33 3 221 2 199 3 301 1 247 1 85 1 254 1 189 1 150 1 177 1 192 1 94 1 93 1 210 1 320 1 358 1 321 2 
181 3 215 4 195 15 295 1 33 5 328 2 221 2 199 10 301 2 247 12 349 1 251 1 13 3 64 1 189 2 150 12 350 4 257 2 40 3 158 1 192 2 93 2 94 3 210 2 162 3 321 1 285 1 48 1 261 1 137 1 
115 1 265 1 267 1 215 2 195 2 246 1 295 1 7 1 59 1 33 1 144 1 199 1 301 1 349 1 249 1 251 1 250 1 224 1 335 1 37 1 110 1 112 1 189 1 18 1 151 1 88 2 113 1 353 1 231 1 158 1 192 1 94 1 93 1 279 2 210 1 97 1 321 1 262 1 
115 1 214 1 265 1 267 1 215 4 195 1 246 1 295 2 59 1 33 1 164 1 144 1 269 1 301 2 348 1 249 1 251 1 250 1 224 1 335 1 110 1 112 1 189 2 18 1 151 1 87 1 88 2 353 1 231 1 158 1 192 2 93 2 279 2 210 2 97 1 
115 1 289 2 290 1 265 2 215 4 195 2 295 2 197 1 59 7 33 1 34 1 199 1 82 1 301 2 349 1 249 8 250 1 224 1 38 1 110 8 112 2 189 2 256 1 18 2 88 1 313 1 152 1 353 3 231 1 158 1 192 2 93 2 279 1 210 2 355 1 236 1 320 1 97 2 135 1 
115 1 181 1 182 1 215 2 195 3 295 1 33 2 221 1 199 1 301 1 247 1 251 1 250 1 13 1 108 1 189 1 150 1 88 1 351 1 207 1 231 1 192 1 94 1 93 1 233 1 279 1 210 1 162 1 358 1 
181 1 215 2 189 1 150 1 195 2 257 1 295 1 192 1 94 1 93 1 221 1 210 1 199 2 320 1 301 1 247 1 162 1 133 1 
182 1 75 1 215 2 189 1 150 1 195 2 295 1 33 2 192 1 94 1 93 1 233 1 221 1 210 1 320 1 301 1 247 1 358 1 
181 1 182 1 215 2 189 1 150 2 195 4 257 1 295 1 33 2 192 1 233 1 94 2 93 1 221 2 210 1 199 2 320 1 301 1 358 1 247 2 162 1 13 1 
181 1 290 1 215 2 189 1 150 1 195 2 257 1 295 1 192 1 94 1 93 1 221 1 210 1 199 2 301 1 247 1 162 1 133 1 
290 1 182 1 75 1 215 2 189 1 150 1 195 2 295 1 33 2 192 1 94 1 93 1 233 1 221 1 210 1 301 1 247 1 358 1 
181 1 290 1 215 2 189 1 150 1 195 2 257 1 295 1 192 1 94 1 93 1 221 1 210 1 199 2 301 1 247 1 162 1 13 1 
181 1 215 2 189 1 150 1 195 2 257 1 295 1 192 1 94 1 93 1 221 1 210 1 199 2 301 1 247 1 162 1 13 1 
265 1 267 1 215 2 195 2 246 1 295 1 59 1 33 1 144 1 199 1 301 1 349 1 249 1 335 1 110 1 112 1 189 1 18 1 87 1 88 1 353 1 158 1 192 1 93 1 279 1 210 1 97 1 321 1 
265 1 215 2 195 2 246 1 295 1 121 1 59 1 33 1 144 1 199 1 301 1 349 1 249 1 36 1 110 1 112 1 189 1 18 1 88 1 353 1 158 1 192 1 93 1 279 1 210 1 97 1 237 1 321 1 
181 1 215 2 189 1 150 1 195 2 257 1 295 1 192 1 94 1 93 1 221 1 210 1 199 2 301 1 247 1 162 1 251 1 13 1 
181 1 214 1 265 1 267 1 215 2 195 2 246 1 295 1 59 1 144 1 221 1 199 2 301 1 247 1 249 1 335 1 13 1 110 1 112 1 189 1 150 1 18 1 87 1 88 1 257 1 353 1 192 1 94 1 93 1 279 1 210 1 355 1 162 1 
115 1 181 1 27 1 215 2 195 2 295 1 221 1 199 2 301 1 247 1 251 1 250 1 13 1 108 1 189 1 150 1 88 1 257 1 351 1 231 1 192 1 93 1 94 1 279 1 210 1 162 1 
181 2 182 1 139 1 215 4 195 13 120 1 33 7 328 1 221 2 199 6 301 2 333 1 13 2 203 1 109 1 189 2 67 1 350 2 257 1 40 1 352 1 192 2 93 2 233 2 46 1 162 2 358 2 285 1 287 1 
181 3 182 2 139 1 215 6 195 26 120 2 33 12 221 4 166 1 199 14 301 3 333 1 13 3 203 2 109 4 189 3 39 1 257 2 350 2 40 2 206 1 276 1 352 1 192 3 93 3 233 2 46 1 319 1 131 1 358 2 359 1 162 3 285 2 260 2 
138 1 181 5 243 1 182 4 139 1 215 6 118 1 195 41 120 1 296 1 33 21 328 1 221 8 166 1 199 20 301 3 333 1 273 1 13 4 254 1 85 1 203 2 109 4 189 3 39 1 67 1 350 4 257 4 206 1 40 3 276 1 352 1 192 3 93 3 233 4 46 1 319 1 131 1 359 1 162 4 358 5 285 3 260 1 
138 1 181 5 243 1 182 4 139 1 215 8 118 1 195 38 120 1 296 1 33 18 328 1 221 7 166 1 199 20 301 4 333 1 273 1 13 4 254 1 85 1 203 2 109 4 189 4 39 1 67 1 350 4 257 3 206 1 40 3 276 1 352 1 192 4 93 4 233 3 46 1 319 1 131 1 359 1 162 4 358 4 285 3 260 2 
138 1 181 8 243 1 182 7 139 1 215 4 118 1 195 52 120 1 296 1 33 25 328 2 221 14 166 1 199 27 301 2 333 1 13 7 254 1 85 1 203 1 109 4 189 2 39 1 350 4 257 7 206 1 40 4 276 1 352 1 192 2 93 2 233 7 46 1 319 1 131 1 359 1 162 7 358 8 285 2 260 1 48 2 
186 1 160 1 80 1 244 1 140 1 259 1 168 1 240 1 334 1 305 1 
187 1 47 1 
186 1 255 1 160 1 127 1 80 1 140 1 332 1 259 1 334 1 
244 1 227 1 116 1 140 1 89 2 186 1 232 1 69 1 160 1 80 1 165 1 302 1 238 1 259 1 304 1 168 1 334 1 305 1 
244 1 227 1 116 1 140 1 89 2 186 1 232 1 69 1 160 1 80 1 165 1 302 1 238 1 259 1 304 1 168 1 334 1 305 1 
244 1 227 1 116 1 140 1 89 2 186 1 232 1 69 1 160 1 80 1 165 1 302 1 238 1 259 1 304 1 168 1 334 1 305 1 
314 1 98 1 58 1 
314 1 98 1 58 1 
107 1 341 1 
107 1 341 1 314 1 
25 1 84 1 
213 1 115 2 140 1 186 1 187 1 106 1 80 1 302 1 84 1 304 1 334 1 250 2 16 1 274 1 173 1 88 2 89 1 231 2 69 1 160 1 44 1 279 2 25 1 238 1 321 1 259 1 47 1 
98 1 58 1 
107 1 341 1 314 1 
289 2 265 1 215 2 195 2 295 1 33 1 59 2 220 1 34 1 199 1 301 1 349 1 249 2 251 1 110 2 112 1 189 1 256 1 18 1 88 2 353 1 231 2 158 1 43 1 192 1 93 1 279 2 210 1 23 1 72 1 241 1 
110 2 112 1 119 1 216 1 18 1 294 2 90 1 196 1 59 2 105 1 24 1 355 1 146 1 249 2 248 1 135 1 49 1 99 1 170 1 
110 1 112 1 119 1 18 1 294 2 90 1 196 1 59 1 105 1 24 1 61 1 146 1 249 1 248 1 135 1 99 1 170 1 
38 1 265 1 110 1 112 1 119 1 310 1 18 1 313 1 353 1 59 1 318 1 97 1 249 1 49 1 
110 1 112 1 119 1 216 1 18 1 294 2 90 1 196 1 59 1 105 1 24 1 146 1 249 1 248 1 135 1 49 1 99 1 170 1 
32 1 
307 1 177 1 337 1 227 1 149 1 122 1 134 1 
307 1 52 1 337 1 111 1 227 2 149 1 103 1 68 1 155 1 229 1 69 1 330 1 211 1 238 1 180 1 284 1 26 1 
265 1 110 1 112 1 18 1 68 1 129 1 353 1 59 1 330 1 144 1 234 1 97 1 222 1 282 1 211 1 26 1 249 1 
181 2 330 2 166 1 145 1 271 1 306 5 13 2 307 2 63 5 337 8 227 5 149 5 66 1 39 1 350 1 68 2 40 1 206 1 155 1 91 1 229 6 69 1 233 2 95 1 71 2 131 1 211 2 238 1 359 1 180 3 162 2 358 2 284 1 26 2 285 1 
0 1 181 2 115 1 324 1 3 1 118 1 330 1 346 1 347 1 250 1 108 1 254 1 85 1 337 2 149 2 66 1 88 1 68 1 156 1 231 1 69 1 279 1 71 2 211 1 238 1 358 1 26 1 323 1 
307 1 337 1 227 1 149 1 68 1 330 1 122 1 211 1 134 1 26 1 
181 2 63 5 337 5 77 1 227 5 149 5 66 1 229 10 233 2 71 2 162 2 180 5 358 2 13 2 306 5 
307 1 69 1 227 1 238 1 284 1 155 1 
265 1 185 1 59 4 330 1 81 2 145 2 200 1 123 1 249 4 337 2 38 1 110 4 112 1 228 1 149 2 18 1 175 1 313 1 68 2 155 4 91 2 353 1 69 3 194 1 97 2 211 2 238 3 26 2 284 2 
115 2 265 1 215 2 267 1 3 1 195 1 246 1 295 1 33 1 59 1 144 1 301 1 249 1 250 2 335 1 108 2 110 1 112 1 189 1 18 1 87 1 88 3 42 1 353 1 158 1 231 2 192 1 93 1 279 3 210 1 97 1 321 1 
307 2 63 2 337 1 227 4 149 2 68 1 296 1 229 4 91 1 330 1 211 1 180 2 145 1 26 1 306 2 
336 1 140 1 334 1 
140 1 84 1 334 1 305 1 202 1 
336 1 140 1 334 1 
336 1 140 1 334 1 
41 1 140 1 334 1 
41 1 140 1 334 1 
41 1 140 1 334 1 
140 1 334 1 
186 1 160 1 
181 1 138 1 85 1 254 1 182 2 243 1 215 4 189 2 118 1 195 8 257 1 296 1 33 4 192 2 93 2 221 3 199 4 301 2 358 1 260 1 
138 1 181 1 85 1 254 1 243 1 182 2 118 1 195 6 296 1 33 3 177 1 221 2 199 3 358 1 
181 1 182 1 226 1 215 2 189 1 195 4 257 1 33 2 192 1 233 1 93 1 221 2 199 2 301 1 358 1 162 1 13 1 
181 1 182 1 195 7 350 2 257 1 40 1 33 4 328 1 233 1 221 2 199 3 358 1 162 1 285 1 13 1 
138 1 181 3 243 1 182 5 215 4 118 1 195 23 296 1 328 1 33 12 221 9 199 11 301 2 13 2 254 2 85 2 189 2 257 4 350 2 40 2 192 2 233 2 93 2 162 2 358 3 260 2 342 1 261 1 48 1 
33 1 195 1 350 1 
199 1 195 1 40 1 
181 1 226 1 182 2 215 2 189 1 77 1 195 6 257 1 33 3 192 1 93 1 233 1 221 3 199 3 301 1 162 1 358 1 13 1 
181 2 182 1 215 2 195 12 33 6 221 2 199 6 166 1 301 1 13 2 189 1 39 1 257 1 350 1 40 1 206 1 192 1 93 1 233 2 46 1 131 1 359 1 162 2 358 2 285 1 
181 1 85 1 254 1 182 1 118 1 195 6 257 1 33 3 221 2 199 3 358 1 
138 1 254 1 85 1 182 1 243 1 215 2 189 1 195 3 257 1 33 2 192 1 93 1 221 2 199 1 301 1 342 1 260 1 
181 2 85 2 254 2 182 3 215 2 189 1 118 1 195 10 257 2 33 5 192 1 93 1 46 1 221 5 199 5 301 1 347 1 358 2 
181 1 215 2 189 1 195 2 257 1 192 1 93 1 46 1 221 1 199 2 301 1 162 1 
181 1 182 1 215 2 189 1 195 4 257 1 33 2 192 1 233 1 93 1 221 2 46 1 199 2 301 1 358 1 162 1 13 1 
85 1 254 1 182 1 215 6 189 3 195 3 67 1 257 1 33 2 192 3 93 3 46 1 221 2 199 1 301 3 260 1 342 1 
138 1 181 5 243 1 182 7 215 10 118 2 195 34 217 1 296 1 33 18 328 1 221 12 199 16 300 1 301 5 13 3 254 3 85 3 308 1 226 1 189 5 350 4 67 1 257 5 40 3 192 5 93 5 233 3 46 1 162 3 358 5 285 1 342 1 260 2 
181 1 138 1 243 1 182 2 215 2 118 1 195 8 296 1 33 4 221 2 199 4 301 1 85 1 254 1 189 1 350 1 40 1 192 1 93 1 46 1 358 1 359 1 285 1 
138 1 181 2 182 2 243 1 215 4 118 1 195 11 296 1 33 5 328 1 221 3 199 6 301 2 13 1 254 1 85 1 226 1 189 2 350 2 257 1 40 1 192 2 93 2 46 1 358 1 359 1 162 1 285 1 
138 1 181 3 243 1 182 3 215 6 118 1 195 19 296 1 33 10 221 4 199 9 166 1 301 3 13 2 254 1 85 1 226 1 189 3 39 1 257 1 350 1 40 1 206 1 192 3 93 3 233 2 46 1 131 1 359 1 162 2 358 3 285 1 260 1 
138 1 181 3 243 1 182 3 215 6 118 1 195 17 296 1 33 7 221 5 199 10 166 1 301 3 13 2 254 1 85 1 226 1 189 3 39 1 257 2 350 1 40 1 206 1 192 3 93 3 233 1 46 1 131 1 359 1 162 2 358 2 285 1 260 1 
181 1 138 1 243 1 182 2 215 2 118 1 195 8 296 1 33 4 221 2 199 4 301 1 85 1 254 1 189 1 350 1 40 1 192 1 93 1 46 1 358 1 359 1 285 1 
181 2 182 1 215 2 195 12 33 6 221 2 199 6 166 1 301 1 13 2 189 1 39 1 257 1 350 1 40 1 206 1 192 1 93 1 233 2 46 1 131 1 359 1 162 2 358 2 285 1 
138 1 181 3 243 1 182 3 215 8 118 1 195 18 296 1 33 8 221 5 166 1 199 10 301 4 13 2 254 1 85 1 226 1 189 4 39 1 257 2 350 1 40 1 206 1 192 4 93 4 233 1 46 1 131 1 359 1 162 2 358 2 285 1 260 2 
181 3 182 3 215 8 195 16 33 7 221 6 166 1 199 9 301 4 13 3 189 4 39 1 257 3 350 1 67 1 40 1 206 1 192 4 93 4 233 2 46 1 131 1 359 1 162 3 358 2 285 1 260 2 
138 1 181 1 85 3 254 3 243 2 182 3 118 1 195 7 257 3 33 4 221 6 199 3 358 1 
138 1 181 3 243 1 182 3 215 8 118 1 195 18 296 1 33 8 221 4 166 1 199 10 301 4 13 2 254 1 85 1 189 4 39 1 257 1 350 1 67 1 40 1 206 1 192 4 93 4 233 1 46 1 131 1 359 1 162 2 358 2 285 1 260 2 
231 1 329 1 28 1 279 1 275 1 321 1 88 1 
51 1 28 1 309 1 275 1 338 1 88 1 231 1 329 1 279 1 11 1 331 1 321 1 
353 1 59 1 177 1 38 1 265 1 110 1 112 1 97 1 18 1 313 1 249 1 
115 1 265 1 110 1 112 1 267 1 18 1 88 2 246 1 353 1 59 1 231 1 144 1 279 2 97 1 321 1 249 1 224 1 250 1 
115 1 126 1 324 1 242 1 265 2 110 1 112 1 267 1 18 1 88 2 246 1 19 1 78 1 353 3 59 1 231 2 144 2 279 2 81 1 321 1 249 1 224 1 250 2 
115 1 36 1 126 1 324 1 242 1 265 2 110 2 112 1 18 1 88 2 246 1 19 1 78 1 353 3 59 2 231 2 144 2 279 2 81 1 132 1 321 1 249 2 224 1 250 2 
265 1 292 1 245 1 78 1 59 3 144 1 81 1 249 3 307 1 126 1 110 3 112 1 227 1 18 1 155 1 129 1 353 4 69 2 97 1 132 1 356 1 238 2 322 1 
307 1 126 1 265 1 110 3 112 1 292 1 227 1 18 1 245 1 141 1 155 1 78 1 129 1 59 3 353 4 69 2 144 1 81 1 97 1 132 1 238 2 249 3 
59 1 110 1 112 1 82 1 18 1 249 1 
289 1 110 7 265 2 112 3 18 2 152 1 197 1 59 6 353 3 92 1 299 1 144 1 34 1 161 1 82 1 355 1 236 1 97 2 282 1 249 7 135 1 
138 1 181 1 214 1 265 1 182 2 267 1 215 4 59 1 220 1 144 1 221 2 224 1 335 1 110 1 112 1 189 2 18 1 150 1 231 1 192 2 279 2 115 1 243 1 118 1 195 6 295 2 246 1 296 1 33 3 199 3 301 2 348 1 247 1 249 1 250 1 251 1 85 1 254 1 87 1 88 2 353 1 94 1 93 2 210 2 355 1 358 1 321 2 
1 1 292 1 141 1 245 1 57 1 185 1 59 1 330 2 122 1 249 1 307 1 337 1 110 1 227 1 149 1 173 1 68 2 155 2 129 1 353 2 157 1 69 3 97 1 211 2 238 3 134 1 26 2 284 1 
343 1 110 1 265 1 292 1 112 1 18 1 59 1 353 1 144 1 234 1 82 1 282 1 249 1 
38 1 110 4 265 1 112 1 76 1 18 1 313 1 59 4 353 1 97 1 355 1 132 1 249 4 
110 2 265 1 112 2 18 1 153 1 59 2 353 1 299 1 144 1 81 1 161 1 357 1 12 1 249 2 
59 1 110 1 112 1 97 1 18 1 294 1 146 1 248 1 249 1 90 1 
353 1 59 2 43 1 265 1 34 1 110 2 112 1 355 1 18 1 249 2 135 1 
38 1 110 5 265 2 112 2 76 1 18 2 313 1 152 1 197 1 59 4 353 3 81 1 34 1 97 1 355 1 249 5 
38 1 110 5 265 2 112 2 76 1 18 2 313 1 197 1 59 4 353 3 81 1 34 1 97 1 355 1 249 5 62 1 
115 1 36 1 265 1 110 1 112 1 18 1 88 2 246 1 353 1 59 1 231 1 144 1 279 2 97 1 321 1 249 1 224 1 250 1 
110 1 265 1 112 2 18 1 59 1 353 1 92 1 299 1 144 1 81 1 161 1 282 1 249 1 
231 1 21 1 278 1 279 1 2 1 23 1 72 1 88 1 241 1 
21 1 209 1 154 1 
86 1 278 1 21 1 2 1 321 1 
115 1 242 1 324 2 2 2 3 1 5 1 245 1 346 1 250 1 108 1 307 1 86 2 227 1 128 1 173 1 88 1 154 1 19 1 156 1 231 1 278 2 69 2 21 1 209 1 279 1 130 1 238 2 321 1 323 1 
253 1 177 1 17 1 56 1 
253 1 264 1 17 1 56 1 340 1 219 1 263 1 
264 1 60 1 270 1 
253 1 264 3 17 1 172 1 183 1 293 2 56 1 205 1 219 1 223 1 340 1 263 3 
253 1 264 2 54 1 17 1 56 1 340 1 315 1 219 1 263 2 
264 1 125 1 17 1 294 1 219 1 196 1 90 1 178 1 223 1 340 1 263 1 
253 1 264 1 17 1 340 1 223 1 219 1 263 1 
253 2 264 1 56 1 340 1 223 1 219 1 263 1 
253 1 264 2 17 1 219 2 159 1 354 1 223 1 340 2 263 2 169 1 
253 1 264 3 125 1 266 1 17 2 56 1 20 1 315 2 219 1 223 1 340 1 286 1 263 3 
253 1 264 2 17 1 56 1 6 1 294 2 315 1 219 1 196 1 90 1 24 1 146 1 223 1 340 1 263 2 
253 1 264 4 125 1 102 1 54 1 266 1 17 2 56 1 315 2 219 2 223 1 340 2 263 4 
253 1 264 1 17 1 56 1 340 1 223 1 219 1 263 1 
253 2 264 4 125 1 53 1 266 1 17 3 172 1 293 1 56 2 205 1 315 2 219 1 340 1 263 4 
253 1 264 1 53 1 55 1 56 1 219 1 96 1 223 1 340 1 163 1 263 1 
253 1 264 3 17 1 172 1 293 2 56 1 205 2 219 1 268 1 223 1 340 1 263 3 
14 2 17 2 283 1 272 1 
264 1 291 1 340 1 223 1 219 1 263 1 
253 1 264 2 17 1 56 1 286 1 340 1 223 1 315 1 219 1 263 2 
117 1 
253 1 264 1 17 1 56 1 340 1 223 1 219 1 263 1 
253 1 264 3 17 1 56 1 293 1 286 1 340 1 223 1 315 1 219 1 263 3 
125 1 53 1 266 1 17 1 
253 1 17 1 

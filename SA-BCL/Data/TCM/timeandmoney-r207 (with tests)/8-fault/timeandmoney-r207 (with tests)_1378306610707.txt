#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 80 (53,322) (53,322) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 80 (53,322) (53,322) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 80 (53,322) (53,322) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 80 (53,322) (53,322) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 148 15 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 140 23 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 273 260 100 97 75 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 273 260 100 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 273 260 100 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 273 260 100 97 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 273 260 100 97 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 276 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 153 20 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 228 256 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (193,254) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 140 23 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (193,254) (193,254) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
322 1 53 1 142 1 171 1 220 1 202 1 246 1 80 1 338 1 183 1 52 1 
322 1 53 1 142 1 171 1 220 1 202 1 246 1 80 1 338 1 183 1 52 1 
322 1 53 1 142 1 171 1 220 1 202 1 246 1 80 1 338 1 183 1 52 1 
322 1 53 1 142 1 171 1 220 1 202 1 246 1 80 1 338 1 183 1 52 1 
142 4 154 1 146 1 5 3 285 1 59 1 52 4 311 2 200 1 171 1 220 1 181 3 246 1 137 1 113 1 176 1 47 1 56 2 
142 2 284 1 5 1 59 1 71 1 338 1 52 2 171 1 220 1 64 1 246 1 298 1 202 1 113 1 176 1 47 1 
142 3 5 2 52 3 200 1 171 2 220 1 133 1 181 1 246 2 202 1 113 1 47 1 56 1 
142 9 154 1 225 1 146 1 106 1 5 5 285 1 6 1 59 1 52 9 199 1 311 2 200 3 171 2 220 1 133 1 181 7 246 2 202 1 137 1 113 1 176 1 47 1 56 4 
142 9 154 1 225 1 146 1 106 1 5 5 285 1 6 1 59 1 52 9 199 1 311 2 200 3 171 2 220 1 133 1 181 7 246 2 202 1 137 1 113 1 176 1 47 1 56 4 
276 1 287 1 143 1 
287 1 155 1 328 2 
324 2 2 2 79 2 212 2 19 1 45 1 22 2 312 2 
268 1 324 3 214 1 67 1 2 2 326 2 48 1 7 1 348 1 184 1 35 1 277 1 299 1 279 1 102 1 124 1 57 1 190 2 307 2 79 2 19 1 82 1 107 1 257 2 361 1 22 2 312 2 180 1 131 1 111 1 88 1 212 3 162 2 45 1 319 1 343 1 320 1 
63 1 74 1 324 1 2 1 79 1 212 1 45 1 22 1 99 1 312 1 
324 1 143 1 243 1 156 1 109 1 120 1 312 1 287 1 63 1 263 1 55 1 12 1 212 1 37 1 
324 1 143 1 2 1 243 1 79 1 156 2 22 1 109 1 120 1 312 1 287 1 63 1 55 2 212 1 37 1 
291 1 55 1 156 1 294 1 84 1 
287 1 291 1 143 1 41 1 55 2 197 1 156 2 84 1 
55 1 156 1 84 1 
291 1 324 1 2 1 79 1 156 1 99 1 22 1 312 1 63 1 74 1 350 1 55 1 212 1 45 1 
287 1 
287 1 291 1 143 1 41 1 55 2 289 1 156 2 84 1 
291 2 324 1 323 1 143 1 2 1 217 4 99 1 74 1 350 1 351 2 55 5 172 2 301 2 178 2 224 2 254 1 79 1 204 1 226 1 18 2 128 1 156 5 207 2 22 1 84 2 158 1 315 1 312 1 159 1 287 1 63 1 41 1 43 1 193 1 212 1 45 1 213 1 267 1 
276 1 19 1 
324 2 2 1 79 1 19 2 30 1 22 1 110 1 312 2 212 2 
262 1 265 1 340 1 
268 1 324 1 214 1 190 1 307 1 326 1 48 1 19 1 219 1 277 1 299 1 279 1 212 1 343 1 319 1 320 1 
268 1 152 1 324 2 214 1 190 1 2 1 307 1 48 1 79 1 326 1 16 1 312 1 277 1 299 1 279 1 265 1 212 2 319 1 343 1 320 1 
324 3 2 3 79 3 16 1 212 3 19 1 22 1 312 3 
63 1 74 1 324 1 2 1 79 1 212 1 312 1 
63 1 324 1 2 1 79 1 212 1 30 1 22 1 110 1 312 1 
268 1 214 1 324 4 67 1 2 3 243 1 48 1 326 1 30 1 120 1 184 1 35 1 277 1 55 1 299 1 279 1 124 1 37 1 57 1 152 1 190 1 307 1 79 3 16 1 19 1 156 1 82 1 107 1 257 2 361 1 109 1 22 2 312 3 180 1 40 1 63 1 88 1 212 4 162 1 45 1 318 1 319 1 343 1 320 1 
324 2 263 1 2 1 79 1 16 1 212 2 19 1 302 1 312 2 
152 1 324 3 2 3 243 1 79 3 16 2 156 1 30 1 22 1 109 1 120 1 312 3 287 1 40 1 63 1 55 1 212 3 316 1 37 1 
324 2 2 2 79 2 16 1 265 1 212 2 340 1 30 1 22 1 312 2 
268 1 324 1 214 1 190 1 307 1 326 1 48 1 19 1 277 1 279 1 299 1 212 1 343 1 319 1 320 1 
268 1 324 1 117 1 190 1 307 1 326 1 327 1 19 1 277 1 279 1 299 1 212 1 343 1 319 1 320 1 
182 1 67 2 347 1 348 2 329 1 32 1 331 1 35 1 222 1 124 1 57 1 224 1 18 1 206 1 257 2 361 1 180 1 262 2 88 1 112 1 91 1 265 2 162 4 340 2 
63 1 324 1 243 1 2 1 79 1 212 1 92 1 312 1 
324 5 152 1 2 4 79 4 16 2 19 1 310 1 30 1 22 1 312 5 263 1 90 1 212 5 302 1 
63 1 74 1 324 2 2 2 79 2 212 2 92 1 312 2 
352 1 354 1 
352 1 354 1 
234 1 187 1 
234 1 187 1 
234 1 187 1 
86 1 352 1 354 1 
352 1 274 1 354 1 
234 1 352 2 115 1 187 1 354 2 321 1 
86 1 352 1 354 1 
86 1 352 1 354 1 
352 1 81 1 354 1 
352 1 81 1 354 1 
352 1 81 1 354 1 
335 1 14 1 50 3 156 2 129 1 229 2 21 2 108 2 287 1 55 2 161 1 352 2 278 1 203 2 175 1 174 1 332 2 354 2 321 1 
95 1 324 2 2 2 50 1 96 1 274 1 55 1 352 1 221 1 332 1 354 1 223 1 14 1 79 2 19 1 156 1 229 1 108 1 21 1 312 2 62 1 212 2 44 1 164 1 
146 1 59 1 176 1 
64 1 59 1 176 1 
194 1 252 1 64 1 146 2 150 1 176 3 
194 1 252 1 64 1 135 1 146 1 176 2 
194 2 252 1 64 1 146 1 176 2 
291 3 143 1 144 1 127 1 148 1 156 4 360 1 84 1 287 1 55 4 41 1 351 1 149 1 43 1 172 1 248 1 301 1 178 1 
125 1 291 3 358 1 143 1 127 1 148 1 156 4 294 1 360 1 84 2 365 1 287 1 351 1 41 1 55 4 43 1 172 1 301 1 178 1 
291 1 144 1 148 1 156 2 360 1 55 2 351 1 172 1 248 1 267 1 301 1 178 1 
144 1 15 1 148 1 156 1 360 1 55 1 351 1 172 1 248 1 267 1 301 1 178 1 
276 1 299 1 121 1 
153 1 299 1 
17 1 
268 1 299 1 
268 1 0 1 299 3 249 1 319 1 121 2 
268 1 299 1 319 1 
195 1 299 1 
141 1 224 1 281 2 292 1 67 3 204 1 18 1 128 1 348 4 39 1 329 2 331 3 288 1 162 7 213 1 123 1 357 1 
141 1 224 1 281 2 292 1 67 3 204 1 18 1 128 1 348 4 39 1 329 2 331 3 288 1 162 7 213 1 123 1 357 1 
141 1 224 1 292 1 281 2 67 3 204 1 18 1 128 1 348 4 39 1 329 2 331 3 288 1 10 1 162 7 213 1 123 1 357 1 
141 2 292 1 67 15 270 1 69 3 293 3 348 16 169 1 329 5 349 1 32 3 331 10 124 1 123 5 357 1 76 1 57 1 224 4 281 3 78 1 204 2 18 4 128 2 228 1 39 1 257 2 361 1 364 1 288 2 88 1 112 3 42 4 162 31 213 1 
141 1 57 2 224 1 292 1 78 1 281 2 67 4 204 1 18 1 128 1 348 5 257 4 329 3 361 2 297 1 331 4 288 1 88 2 162 9 213 1 342 1 123 1 124 2 357 1 
142 2 215 1 326 1 146 1 5 1 29 1 52 2 295 1 34 1 171 1 220 1 277 1 246 1 202 1 150 1 176 2 104 1 190 1 307 1 359 1 59 1 230 1 232 1 211 1 233 1 181 1 64 1 113 1 47 1 343 1 
142 3 215 1 326 1 146 1 5 1 29 1 52 3 34 1 171 1 277 1 246 1 202 1 333 1 150 1 176 2 104 1 190 1 307 1 359 1 59 1 230 1 258 1 211 1 233 1 181 2 64 1 160 1 113 1 47 1 343 1 
142 2 215 1 326 1 146 1 5 1 52 2 34 1 277 1 202 1 150 1 176 2 104 1 190 1 307 1 359 1 59 1 258 1 211 1 233 1 181 2 64 1 160 1 113 1 47 1 343 1 
142 1 268 1 326 1 216 1 52 1 296 1 34 2 171 1 277 1 246 1 202 2 299 1 333 1 190 1 307 1 308 1 359 2 309 1 211 2 132 1 94 1 343 1 320 1 
142 1 215 1 326 1 146 1 29 1 52 1 34 1 171 1 220 1 277 1 246 1 202 1 150 1 176 2 104 1 190 1 307 1 359 1 59 1 230 1 258 1 232 1 211 1 233 1 64 1 343 1 
151 1 
190 1 307 1 326 1 156 1 360 1 23 1 55 1 351 1 43 1 172 1 301 1 140 1 178 1 320 1 
324 1 346 1 243 1 120 1 55 3 12 1 37 1 336 1 227 1 156 3 109 1 84 2 312 1 63 1 263 1 339 1 41 1 89 1 236 2 212 1 289 1 341 1 
324 1 143 1 346 1 243 1 120 1 55 3 12 1 280 1 37 1 227 1 156 3 84 1 109 1 312 1 287 1 63 1 263 1 339 1 41 1 89 1 236 3 212 1 289 1 341 1 
324 1 143 1 346 1 243 1 120 1 55 3 12 1 280 1 37 1 336 1 227 1 156 3 109 1 84 2 312 1 287 1 63 1 263 1 339 1 41 1 89 1 236 3 212 1 289 1 341 1 163 1 
324 1 346 1 243 1 97 1 273 1 98 1 217 1 120 1 100 1 351 1 55 3 75 1 172 1 12 1 301 1 178 1 37 1 282 1 336 2 227 1 156 3 84 3 109 1 312 1 210 1 260 1 63 1 263 1 339 1 41 1 89 1 367 1 43 1 236 2 212 1 289 1 46 1 341 1 163 2 
324 1 346 1 243 1 273 1 98 1 217 1 120 1 351 1 55 2 172 1 12 1 301 1 178 1 37 1 282 1 227 1 156 2 109 1 312 1 210 1 63 1 263 1 339 1 89 1 43 1 236 2 367 1 212 1 341 1 
324 1 346 1 243 1 273 1 98 1 217 1 120 1 100 1 351 1 55 2 172 1 12 1 301 1 37 1 178 1 282 1 227 1 156 2 109 1 312 1 210 1 260 1 63 1 263 1 339 1 89 1 367 1 236 2 43 1 212 1 341 1 46 1 
324 1 346 1 243 1 273 1 98 1 217 1 120 1 100 1 351 1 55 2 172 1 12 1 301 1 37 1 178 1 282 1 227 1 156 2 109 1 312 1 210 1 260 1 63 1 263 1 339 1 89 1 367 1 236 2 43 1 212 1 341 1 46 1 
324 1 143 1 241 2 166 1 346 1 243 1 273 1 328 2 217 1 275 1 120 1 351 1 55 4 172 1 12 1 280 2 301 1 37 1 178 1 282 2 336 2 227 1 337 1 156 4 84 4 109 1 312 1 287 1 210 2 260 1 63 1 87 2 263 1 339 1 41 2 89 1 236 4 43 1 212 1 341 1 163 2 
324 1 346 1 243 1 97 1 273 1 98 1 217 1 120 1 100 1 351 1 55 2 172 1 12 1 280 1 301 1 178 1 37 1 282 1 336 1 227 1 156 2 109 1 84 1 312 1 210 1 260 1 63 1 263 1 339 1 89 1 367 1 43 1 236 3 212 1 46 1 341 1 163 1 
324 1 346 1 243 1 97 1 273 1 98 1 217 1 120 1 100 1 351 1 55 2 172 1 12 1 280 1 301 1 178 1 37 1 282 1 336 1 227 1 156 2 109 1 84 1 312 1 210 1 260 1 63 1 263 1 339 1 89 1 367 1 43 1 236 3 212 1 46 1 341 1 163 1 
324 1 143 1 241 2 166 1 346 1 243 1 273 1 328 2 217 1 120 1 351 1 55 4 172 1 12 1 280 2 301 1 178 1 37 1 282 2 336 2 227 1 156 4 84 4 109 1 312 1 287 1 210 2 63 1 87 2 263 1 339 1 366 1 41 2 89 1 43 1 236 4 212 1 341 1 163 2 
57 1 224 1 281 1 292 1 182 1 67 3 204 1 18 1 19 2 128 1 348 3 257 2 329 2 361 1 276 1 331 2 180 1 262 1 35 1 88 1 265 1 162 6 213 1 340 1 124 1 357 1 
118 1 67 6 69 3 168 1 293 2 348 8 329 1 185 1 349 1 32 1 331 2 35 1 247 1 102 1 123 1 124 2 188 1 57 2 224 2 18 1 19 1 228 1 82 1 257 4 361 2 180 2 262 11 88 2 112 2 42 3 265 11 162 14 340 4 
268 1 214 1 324 2 2 1 67 1 48 1 326 1 168 1 348 1 219 1 35 1 277 1 299 1 279 1 102 1 124 1 57 1 152 1 103 1 190 1 307 1 79 1 16 1 19 1 179 1 82 1 257 2 361 1 312 1 180 1 88 1 212 2 162 2 340 1 319 1 343 1 320 1 344 1 
268 2 324 3 214 2 2 1 326 3 48 2 271 2 329 4 331 8 277 2 279 2 102 1 57 3 224 3 281 1 152 1 190 3 16 1 18 3 19 2 107 2 112 2 162 20 238 2 340 7 343 2 292 1 67 10 242 2 168 1 293 2 72 1 348 10 32 2 35 3 299 2 124 3 123 4 357 1 305 2 307 3 204 1 79 1 128 1 82 1 257 6 258 1 361 3 314 1 312 1 180 3 262 7 88 3 212 3 265 7 213 1 317 1 319 2 320 1 
268 2 324 1 165 1 182 1 2 1 67 1 326 7 51 1 216 1 348 1 295 1 170 1 201 1 35 2 277 2 299 3 102 1 124 2 57 2 251 1 190 8 307 8 79 1 16 1 309 1 82 1 257 4 258 1 361 2 312 1 180 2 131 2 134 1 88 2 212 1 162 2 290 1 343 2 320 2 
324 1 2 1 67 2 196 1 168 1 293 1 348 1 30 1 329 1 32 1 331 1 35 1 124 1 57 1 224 1 79 1 18 1 257 2 22 1 361 1 312 1 180 1 262 1 88 1 112 1 265 1 212 1 162 3 340 1 
57 1 224 1 182 1 206 1 348 2 257 2 361 1 331 1 180 1 262 1 35 1 88 1 112 1 265 1 162 2 340 1 123 1 124 1 
57 1 182 1 67 2 347 1 18 1 257 2 329 1 361 1 32 1 331 1 180 1 262 1 35 1 88 1 265 1 162 2 340 1 124 1 
182 1 67 2 293 1 348 2 329 1 32 1 331 2 35 1 124 1 123 1 57 1 224 1 18 1 257 2 361 1 180 1 262 2 112 1 88 1 265 2 162 4 340 2 
57 1 251 1 224 1 206 1 348 2 257 2 361 1 331 1 180 1 262 1 35 1 88 1 112 1 265 1 162 2 340 1 123 1 124 1 
57 1 251 1 67 2 347 1 18 1 257 2 329 1 361 1 32 1 331 1 180 1 262 1 35 1 88 1 265 1 162 2 340 1 124 1 
67 2 293 1 348 2 329 1 32 1 331 2 35 1 124 1 123 1 57 1 224 1 251 1 18 1 257 2 361 1 180 1 262 2 112 1 88 1 265 2 162 4 340 2 
67 2 293 1 348 2 329 1 32 1 331 2 35 1 124 1 123 1 57 1 224 1 18 1 257 2 361 1 180 1 262 2 112 1 88 1 265 2 162 4 340 2 
268 1 214 1 324 1 67 1 48 1 326 1 348 1 35 1 277 1 279 1 299 1 102 1 124 1 57 1 190 1 307 1 19 1 107 1 82 1 257 2 361 1 180 1 88 1 212 1 162 2 319 1 343 1 320 1 
268 1 117 1 324 1 67 1 326 1 327 1 348 1 35 1 277 1 279 1 299 1 102 1 124 1 57 1 190 1 307 1 19 1 82 1 257 2 361 1 85 1 180 1 88 1 212 1 162 2 319 1 343 1 320 1 
67 2 168 1 293 1 348 2 329 1 32 1 331 2 35 1 124 1 123 1 57 1 224 1 18 1 257 2 361 1 180 1 262 2 112 1 88 1 265 2 162 4 340 2 
268 1 214 1 324 1 67 2 48 1 326 1 271 1 293 1 348 2 329 1 295 1 32 1 331 2 35 1 277 1 279 1 299 1 123 1 124 1 57 1 224 1 190 1 307 1 18 1 107 1 257 2 361 1 180 1 262 2 112 1 88 1 265 2 212 1 162 4 340 2 319 1 343 1 
324 1 67 1 2 1 147 1 168 1 293 1 348 2 30 1 32 1 331 1 35 1 123 1 124 1 57 1 224 1 79 1 18 1 257 2 22 1 361 1 312 1 180 1 262 1 88 1 112 1 212 1 265 1 162 3 340 1 
66 1 325 2 67 10 69 1 28 1 293 3 348 9 329 3 218 1 349 1 32 3 54 1 331 6 124 2 123 3 57 2 303 1 224 3 58 1 18 3 228 1 257 4 361 2 235 1 88 2 112 3 42 2 162 19 342 1 116 2 
325 1 66 1 67 12 68 1 69 2 293 3 348 14 329 2 218 2 32 2 331 4 123 2 124 3 57 3 303 1 224 3 78 2 256 1 58 2 18 2 228 2 83 1 157 1 257 6 361 3 24 1 235 1 88 3 112 3 42 2 162 26 342 1 116 4 239 1 
325 1 329 4 218 1 331 8 54 1 101 1 57 3 224 5 281 1 58 2 18 5 228 3 157 1 24 1 235 1 112 4 162 41 342 1 116 4 239 1 292 1 66 1 67 21 69 3 68 1 293 4 348 20 32 4 349 1 123 4 124 3 357 1 303 1 78 1 256 1 204 1 128 1 83 1 257 6 361 3 88 3 42 4 213 1 
292 1 325 1 66 1 67 18 68 1 69 3 293 4 348 20 329 4 218 1 349 1 32 3 54 1 331 7 101 1 124 4 123 3 357 1 57 4 303 1 224 5 281 1 78 2 256 1 204 1 58 2 18 4 128 1 228 3 83 1 157 1 257 8 361 4 24 1 235 1 88 4 112 4 42 4 162 38 213 1 342 1 239 1 116 4 
292 1 325 1 66 1 67 25 68 1 69 4 293 7 348 27 329 7 218 1 349 2 32 7 331 14 124 2 123 7 357 1 188 2 57 2 303 1 224 8 281 1 78 1 256 1 204 1 58 1 18 8 128 1 228 2 83 1 157 1 257 4 361 2 24 1 235 1 88 2 112 7 42 4 162 52 213 1 342 1 239 1 116 4 
335 1 352 1 175 1 332 1 229 1 93 1 108 1 21 1 354 1 321 1 
274 1 223 1 
253 1 283 1 11 1 352 1 332 1 229 1 108 1 21 1 354 1 
335 1 14 1 50 2 156 1 229 1 21 1 108 1 287 1 55 1 161 1 352 1 278 1 203 1 175 1 174 1 332 1 354 1 321 1 
335 1 14 1 50 2 156 1 229 1 21 1 108 1 287 1 55 1 161 1 352 1 278 1 203 1 175 1 174 1 332 1 354 1 321 1 
335 1 14 1 50 2 156 1 229 1 21 1 108 1 287 1 55 1 161 1 352 1 278 1 203 1 175 1 174 1 332 1 354 1 321 1 
86 1 205 1 115 1 
86 1 205 1 115 1 
240 1 81 1 
240 1 81 1 115 1 
221 1 164 1 
95 1 291 1 324 2 2 2 50 1 96 1 274 1 55 1 278 1 352 1 353 1 221 1 203 1 332 1 354 1 223 1 79 2 19 1 156 1 229 1 108 1 21 1 312 2 62 1 212 2 44 1 164 1 
86 1 205 1 
240 1 81 1 115 1 
268 1 324 2 165 1 67 1 326 2 4 1 168 1 244 1 348 1 201 1 35 1 277 1 9 1 299 1 102 1 124 1 57 1 190 2 307 2 209 1 82 1 257 2 361 1 312 2 180 1 131 2 261 1 88 1 212 2 162 2 343 1 
104 1 190 2 105 1 307 2 326 2 146 1 359 1 59 1 208 1 38 1 230 1 258 1 295 1 233 1 277 1 64 1 150 1 176 2 343 1 
104 1 190 1 105 1 307 1 326 1 146 1 167 1 359 1 59 1 230 1 258 1 233 1 277 1 64 1 150 1 176 2 343 1 
268 1 190 1 307 1 326 1 359 1 309 1 216 1 38 1 259 1 277 1 299 1 343 1 94 1 320 1 
104 1 190 1 105 1 307 1 326 1 146 1 359 1 59 1 208 1 38 1 230 1 258 1 233 1 277 1 64 1 150 1 176 2 343 1 
1 1 
276 1 287 1 143 1 254 1 193 1 172 1 217 1 
351 1 367 1 43 1 172 1 98 1 217 1 301 1 178 1 
268 1 153 1 190 1 307 1 326 1 20 1 73 1 277 1 351 1 43 1 299 1 249 1 343 1 319 1 301 1 178 1 320 1 
256 1 351 1 69 1 42 1 43 1 172 1 228 1 217 1 301 1 178 1 
224 2 204 1 18 1 156 1 128 1 207 2 217 2 158 1 315 1 55 1 351 1 43 1 172 1 213 1 46 1 301 1 178 1 
287 1 143 1 351 1 193 1 43 1 172 1 217 1 301 1 178 1 
27 1 224 1 269 1 155 1 328 2 18 1 293 1 217 2 32 1 287 1 112 1 172 1 
287 1 143 1 55 1 41 1 156 1 84 1 
190 1 307 1 326 1 191 1 360 1 23 1 351 1 43 1 172 1 301 1 320 1 178 1 140 1 
268 1 324 3 214 1 67 1 2 2 326 1 48 1 184 1 35 1 277 1 279 1 299 1 124 1 57 1 190 1 307 1 79 2 19 1 82 1 107 1 257 2 22 2 361 1 312 2 180 1 88 1 212 3 162 1 45 1 343 1 319 1 320 1 
324 1 143 1 2 1 79 1 22 1 99 1 360 1 312 1 287 1 63 1 74 1 350 1 351 1 43 1 172 1 212 1 45 1 301 1 178 1 
272 1 332 1 108 1 
335 1 332 1 108 1 356 1 164 1 
272 1 332 1 108 1 
272 1 332 1 108 1 
332 1 108 1 313 1 
332 1 108 1 313 1 
332 1 108 1 313 1 
332 1 108 1 
352 1 354 1 
57 2 224 1 281 1 78 1 292 1 67 4 204 1 18 1 128 1 348 4 257 4 329 2 361 2 331 3 88 2 162 8 213 1 123 1 124 2 357 1 
224 1 281 1 292 1 67 3 204 1 18 1 128 1 348 3 329 2 276 1 331 2 162 6 213 1 357 1 
57 1 224 1 67 2 70 1 18 1 293 1 348 2 257 2 329 1 361 1 32 1 331 2 88 1 112 1 162 4 124 1 123 1 
224 1 67 4 69 1 18 1 228 1 293 1 348 3 329 1 32 1 349 1 331 2 112 1 42 2 162 7 123 1 
292 1 67 12 69 2 293 2 348 11 329 5 349 1 32 2 331 9 247 1 123 4 124 2 357 1 188 1 57 2 304 1 224 3 281 1 78 2 204 2 18 3 128 2 257 4 361 2 112 2 88 2 42 2 162 23 213 1 
67 1 42 1 162 1 
69 1 162 1 348 1 
57 1 305 1 224 1 67 3 70 1 18 1 293 1 348 3 257 2 361 1 329 2 32 1 331 3 88 1 112 1 162 6 124 1 123 1 
67 6 69 1 68 1 293 2 348 6 329 1 32 2 331 2 123 1 124 1 57 1 224 2 256 1 18 2 228 1 157 1 257 2 361 1 24 1 88 1 112 2 42 1 162 12 342 1 239 1 
224 1 67 3 204 1 18 1 128 1 348 3 329 1 331 2 162 6 213 1 123 1 
304 1 57 1 292 1 78 1 67 2 204 1 128 1 348 1 257 2 329 1 361 1 331 2 88 1 162 3 123 1 124 1 357 1 
57 1 224 2 67 5 204 2 18 2 128 2 348 5 257 2 361 1 158 1 329 3 331 5 88 1 162 10 213 1 342 1 124 1 123 2 
57 1 224 1 348 2 257 2 361 1 331 1 88 1 112 1 162 2 342 1 124 1 123 1 
57 1 224 1 67 2 18 1 293 1 348 2 257 2 329 1 361 1 32 1 331 2 88 1 112 1 162 4 342 1 124 1 123 1 
304 1 57 3 78 1 67 2 204 1 128 1 348 1 257 6 361 3 329 1 54 1 331 2 88 3 162 3 342 1 124 3 123 1 
292 1 270 1 67 18 69 3 70 1 293 3 348 16 169 1 329 7 349 1 32 3 54 1 331 12 124 5 123 5 357 1 304 1 57 5 224 5 281 1 78 2 204 3 18 5 128 3 228 1 257 10 361 5 364 1 88 5 112 3 42 4 162 34 213 2 342 1 
292 1 67 4 69 1 348 4 329 2 331 2 124 1 357 1 57 1 224 1 281 1 256 1 204 1 18 1 128 1 228 1 257 2 361 1 88 1 42 1 162 8 213 1 342 1 
292 1 67 5 69 1 70 1 293 1 348 6 329 2 349 1 331 3 124 2 123 1 357 1 57 2 224 2 281 1 256 1 204 1 18 1 128 1 228 1 257 4 361 2 88 2 112 1 42 2 162 11 213 1 342 1 
292 1 67 10 68 1 69 1 70 1 293 2 348 9 329 3 32 2 331 4 123 1 124 3 357 1 57 3 224 3 281 1 78 1 256 1 204 1 18 3 128 1 228 1 157 1 257 6 361 3 24 1 88 3 112 2 42 1 162 19 213 1 342 1 239 1 
292 1 67 7 69 1 68 1 70 1 293 2 348 10 329 3 32 1 331 5 123 2 124 3 357 1 57 3 224 3 281 1 78 1 256 1 204 1 18 2 128 1 228 1 157 1 257 6 361 3 24 1 88 3 112 2 42 1 162 17 213 1 342 1 239 1 
292 1 67 4 69 1 348 4 329 2 331 2 124 1 357 1 57 1 224 1 281 1 256 1 204 1 18 1 128 1 228 1 257 2 361 1 88 1 42 1 162 8 213 1 342 1 
67 6 69 1 68 1 293 2 348 6 329 1 32 2 331 2 123 1 124 1 57 1 224 2 256 1 18 2 228 1 157 1 257 2 361 1 24 1 88 1 112 2 42 1 162 12 342 1 239 1 
292 1 67 8 68 1 69 1 70 1 293 2 348 10 329 3 32 1 331 5 123 2 124 4 357 1 57 4 224 3 281 1 78 2 256 1 204 1 18 2 128 1 228 1 157 1 257 8 361 4 24 1 88 4 112 2 42 1 162 18 213 1 342 1 239 1 
67 7 68 1 69 1 293 3 348 9 329 3 32 2 54 1 331 6 123 3 124 4 57 4 224 3 78 2 256 1 18 2 228 1 157 1 257 8 361 4 24 1 88 4 112 3 42 1 162 16 342 1 239 1 
224 1 292 2 67 4 204 3 18 1 128 3 348 3 329 3 331 6 162 7 213 1 123 3 357 1 
292 1 67 8 68 1 69 1 293 2 348 10 329 3 32 1 54 1 331 4 123 1 124 4 357 1 57 4 224 3 281 1 78 2 256 1 204 1 18 2 128 1 228 1 157 1 257 8 361 4 24 1 88 4 112 2 42 1 162 18 213 1 342 1 239 1 
324 1 263 1 212 1 19 1 368 1 312 1 302 1 
324 1 19 1 198 1 231 1 363 1 312 1 330 1 186 1 263 1 212 1 368 1 302 1 
276 1 268 1 277 1 190 1 307 1 326 1 309 1 299 1 216 1 343 1 320 1 
268 1 324 2 190 1 2 1 307 1 79 1 326 1 48 1 16 1 19 1 312 1 277 1 299 1 279 1 212 2 319 1 343 1 320 1 
268 2 324 2 195 1 190 1 243 1 2 1 307 1 79 2 326 1 48 1 16 1 19 1 120 1 312 2 33 1 63 1 277 1 299 3 279 1 212 2 250 1 319 2 343 1 
268 2 117 1 324 2 195 1 2 1 243 1 326 2 120 1 33 1 277 1 279 1 299 3 250 1 189 1 190 2 307 2 79 2 16 1 19 1 312 2 63 1 212 2 343 1 319 2 
268 1 195 1 143 1 326 3 121 1 33 1 277 1 55 2 299 4 250 1 37 1 189 1 153 1 306 1 190 3 307 3 156 2 84 1 287 1 343 1 26 1 319 1 320 1 
189 1 268 1 153 1 143 1 195 1 190 3 307 3 326 3 156 2 84 1 121 1 287 1 33 1 277 1 55 2 299 4 250 1 319 1 177 1 343 1 320 1 37 1 
277 1 190 1 307 1 326 1 134 1 343 1 
268 1 190 1 307 1 326 1 3 1 277 2 299 1 136 1 249 1 319 1 343 1 320 1 345 1 
268 1 292 1 324 2 214 1 67 3 2 1 242 1 326 1 48 1 271 1 168 1 348 3 329 2 295 1 331 2 35 2 277 1 299 1 279 1 124 2 357 1 57 2 224 1 281 1 190 1 307 1 204 1 79 1 16 1 18 1 19 2 128 1 209 1 107 1 257 4 361 2 312 1 180 2 262 1 88 2 265 1 212 2 162 6 213 1 340 1 319 1 343 1 
291 1 143 1 326 1 145 1 119 1 217 1 121 1 351 2 55 3 172 1 299 2 301 2 177 1 178 2 37 1 153 1 190 1 254 1 307 1 191 1 156 3 60 1 84 2 287 1 41 1 193 1 43 2 320 1 
268 1 190 1 307 1 326 1 17 1 121 1 73 1 277 1 134 1 299 1 249 1 319 1 343 1 
189 1 268 1 190 4 307 4 326 4 309 1 216 1 295 1 8 1 277 1 299 1 343 1 320 1 
268 1 190 1 307 1 326 1 3 1 61 1 277 2 299 1 136 1 317 1 25 1 319 1 343 1 
104 1 277 1 190 1 64 1 307 1 326 1 59 1 176 1 343 1 320 1 
268 1 277 1 165 1 190 2 307 2 326 2 299 1 244 1 343 1 258 1 295 1 
268 2 190 5 165 1 307 5 326 4 309 1 216 1 295 1 170 1 8 1 277 2 299 3 290 1 250 1 343 2 320 1 
268 2 190 5 165 1 307 5 255 1 326 4 309 1 216 1 295 1 8 1 277 2 299 3 290 1 250 1 343 2 320 1 
268 1 324 2 117 1 190 1 2 1 307 1 79 1 326 1 16 1 19 1 312 1 277 1 299 1 279 1 212 2 319 1 343 1 320 1 
268 1 190 1 307 1 326 1 3 1 277 2 299 1 136 1 250 1 249 1 319 1 343 1 345 1 
126 1 237 1 19 1 114 1 36 1 
291 1 143 1 126 2 243 1 19 1 156 2 120 1 362 1 109 1 287 1 40 1 63 1 55 2 237 2 65 1 36 1 114 2 37 1 139 1 
324 1 261 1 9 1 126 1 4 1 237 1 212 1 36 1 312 1 
36 1 139 1 362 1 
276 1 5 1 113 1 47 1 
142 1 171 1 246 1 5 1 113 1 47 1 52 1 
211 1 202 1 52 1 
142 3 171 1 220 1 246 1 264 1 5 1 113 1 71 2 138 1 47 1 52 3 245 1 
142 2 171 1 181 1 246 1 5 1 113 1 47 1 52 2 311 1 
142 1 146 1 5 1 59 1 52 1 171 1 220 1 246 1 137 1 176 1 56 1 
142 1 171 1 220 1 246 1 5 1 113 1 52 1 
142 1 171 1 220 1 246 1 113 2 47 1 52 1 
142 2 49 1 5 1 52 2 171 2 220 1 246 2 173 1 113 1 122 1 
142 3 106 1 5 2 6 1 52 3 200 1 171 1 220 1 181 2 246 1 113 1 47 1 56 1 
142 2 146 1 5 1 59 1 52 2 171 1 220 1 64 1 181 1 246 1 113 1 150 1 176 2 47 1 13 1 
142 4 154 1 5 2 52 4 311 1 200 1 171 2 220 1 181 2 246 2 113 1 47 1 56 1 
142 1 171 1 220 1 246 1 5 1 113 1 47 1 52 1 
142 4 5 3 71 1 52 4 200 1 171 1 181 2 246 1 264 1 113 2 138 1 47 2 334 1 56 1 
142 2 77 1 171 1 225 1 220 1 181 1 246 1 5 1 113 1 47 1 355 1 52 2 
286 1 142 3 171 1 220 1 246 1 264 1 5 1 113 1 71 2 138 2 47 1 52 3 
192 1 5 2 300 1 130 2 
142 1 171 1 220 1 246 1 266 1 52 1 
142 2 171 1 220 1 181 1 246 1 106 1 5 1 113 1 47 1 52 2 
31 1 
142 1 171 1 220 1 246 1 5 1 113 1 47 1 52 1 
142 3 171 1 220 1 181 1 246 1 106 1 5 1 113 1 71 1 47 1 52 3 
5 1 334 1 56 1 200 1 
5 1 113 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
320 4 244 6 163 2 362 3 290 2 4 2 345 1 294 1 124 1 270 1 367 1 103 9 128 2 326 2 352 1 303 1 65 1 307 1 310 9 356 1 18 1 46 1 188 2 48 1 114 2 73 1 115 5 378 1 
320 4 244 6 163 2 362 3 290 2 4 2 345 1 294 1 124 1 270 1 367 1 103 9 128 2 326 2 352 1 303 1 65 1 307 1 310 9 356 1 18 1 46 1 188 2 48 1 114 2 73 1 115 5 378 1 
320 5 244 7 163 2 362 4 290 2 4 2 345 1 294 1 124 1 270 1 367 1 103 10 128 2 326 2 352 1 303 1 65 1 307 1 310 10 356 1 18 1 46 1 188 2 48 1 114 2 73 1 115 6 378 1 
320 3 244 4 163 2 362 2 290 1 4 2 294 1 124 1 270 1 367 1 103 7 128 2 326 2 352 1 303 1 65 1 307 1 310 7 356 1 18 1 46 1 188 2 48 1 114 2 73 1 115 4 378 1 
352 1 244 3 320 2 362 1 163 1 290 2 4 1 345 1 356 1 310 4 18 1 46 1 188 1 103 4 326 1 114 1 115 3 378 1 
307 1 4 1 82 1 356 1 310 2 46 1 70 1 284 1 188 1 103 2 114 1 128 1 326 1 115 1 73 1 378 1 
320 1 244 1 362 1 4 2 356 1 310 3 46 1 188 2 48 1 103 3 128 1 115 2 378 1 
352 1 65 1 244 7 320 4 163 1 362 3 290 2 4 2 345 1 55 1 356 1 310 9 18 1 46 1 270 1 188 2 48 1 103 9 326 1 114 1 128 1 115 5 74 1 378 1 
352 1 65 1 244 7 320 4 163 1 362 3 290 2 4 2 345 1 55 1 356 1 310 9 18 1 46 1 270 1 188 2 48 1 103 9 326 1 114 1 128 1 115 5 74 1 378 1 
156 1 230 1 333 1 
68 1 178 2 333 1 
32 2 329 2 236 2 357 2 375 1 224 2 182 1 67 2 
340 1 23 1 96 1 288 1 76 1 1 2 265 1 79 1 224 2 5 1 86 1 206 1 296 2 126 2 172 1 253 1 174 1 252 1 370 1 32 3 329 2 104 1 236 3 276 2 135 1 332 2 280 1 261 1 182 1 67 2 42 1 187 1 357 2 375 1 113 1 49 1 21 1 
32 1 329 1 236 1 357 1 375 1 299 1 224 1 354 1 130 1 67 1 
118 1 77 1 147 1 224 1 269 1 299 1 130 1 133 1 32 2 329 2 236 2 91 1 105 1 156 1 354 2 355 1 67 1 333 1 335 1 357 1 375 1 
118 2 147 1 224 2 269 1 299 1 130 1 32 2 329 2 236 2 91 2 105 1 156 1 354 2 67 2 355 1 333 1 335 1 357 2 375 1 
91 1 118 1 47 1 353 1 292 1 
151 1 91 2 118 2 47 1 156 1 180 1 353 1 333 1 
91 1 118 1 353 1 
329 1 32 1 236 1 91 1 118 1 224 1 354 1 355 1 67 1 357 1 375 1 47 1 299 1 130 1 
333 1 
35 1 151 1 91 2 118 2 47 1 156 1 353 1 333 1 
144 1 118 5 199 2 98 1 52 2 99 1 224 1 123 1 227 1 150 1 151 1 29 1 299 1 8 5 130 1 371 4 62 1 275 2 32 1 329 1 177 1 236 1 155 2 91 5 256 1 278 1 156 2 353 2 260 2 354 1 67 1 355 1 333 2 185 2 357 1 375 1 47 2 142 1 
230 1 182 1 
329 2 32 2 236 2 224 1 67 1 182 2 357 1 315 1 141 1 
186 1 43 1 95 1 
32 1 288 1 236 1 276 1 1 1 265 1 182 1 206 1 296 1 251 1 172 1 113 1 21 1 174 1 252 1 370 1 
329 1 32 2 288 1 64 1 236 2 276 1 1 1 265 1 67 1 158 1 206 1 357 1 296 1 172 1 113 1 21 1 252 1 174 1 370 1 95 1 
32 3 329 3 236 3 357 3 224 1 182 1 67 3 158 1 
32 1 329 1 236 1 357 1 299 1 354 1 67 1 
32 1 329 1 236 1 357 1 315 1 224 1 354 1 67 1 141 1 
288 1 96 1 1 1 147 1 206 1 296 1 252 1 253 1 60 1 64 1 104 1 105 1 354 2 67 3 213 1 158 1 357 3 113 1 21 1 23 1 118 1 265 1 79 1 224 2 269 1 172 1 126 1 174 1 370 1 329 3 32 4 276 1 236 4 91 1 135 1 332 2 280 1 182 1 283 1 42 1 335 1 187 1 375 1 49 1 141 1 
32 2 329 2 236 2 357 1 182 1 41 1 67 1 158 1 133 1 
329 3 32 3 64 1 236 3 91 1 118 1 105 1 147 1 224 1 107 1 354 1 67 3 213 1 333 1 158 2 335 1 357 3 269 1 141 1 
329 2 32 2 236 2 224 1 67 2 158 1 186 1 357 2 141 1 95 1 
32 1 288 1 236 1 276 1 1 1 265 1 182 1 206 1 296 1 172 1 113 1 174 1 252 1 21 1 370 1 
32 1 288 1 236 1 276 1 222 1 1 1 265 1 182 1 206 1 296 1 113 1 252 1 21 1 370 1 63 1 
340 2 96 1 2 1 122 1 364 1 168 1 171 1 126 4 229 1 253 1 273 1 275 1 104 1 135 1 93 1 332 2 280 1 42 1 185 1 187 2 43 2 186 2 359 1 95 2 
32 1 329 1 236 1 357 1 269 1 354 1 10 1 67 1 
329 5 32 5 64 1 236 5 245 1 224 1 41 1 53 1 67 4 182 1 158 2 357 4 141 1 133 1 
32 2 329 2 236 2 357 2 299 1 10 1 354 1 67 2 
197 1 255 1 
197 1 255 1 
137 1 372 1 
137 1 372 1 
137 1 372 1 
197 1 373 1 255 1 
197 1 373 1 255 1 
197 1 376 1 255 1 
137 1 197 2 38 1 100 1 372 1 255 2 
197 1 373 1 255 1 
197 1 377 1 255 1 
197 1 377 1 255 1 
197 1 377 1 255 1 
339 1 134 2 25 3 330 1 197 2 91 2 162 1 118 2 289 1 331 2 246 2 165 1 80 1 100 1 238 1 333 1 84 2 366 2 255 2 
339 1 25 1 197 1 118 1 246 1 84 1 85 1 170 1 366 1 31 1 255 1 300 1 329 2 32 2 236 2 91 1 331 1 182 1 67 2 181 1 357 2 44 1 376 1 285 1 
163 1 326 1 114 1 
326 1 114 1 82 1 
109 1 111 1 336 1 163 2 114 3 82 1 
109 1 311 1 111 1 163 1 114 2 82 1 
109 1 111 2 163 1 114 2 82 1 
199 1 151 1 348 1 299 1 8 2 301 1 155 1 156 1 353 1 260 1 354 1 355 1 67 1 68 1 357 1 358 2 19 2 118 5 224 1 365 2 85 1 29 1 271 1 273 1 130 1 371 3 275 1 329 1 32 1 236 1 178 3 91 5 92 1 93 1 282 1 333 2 185 1 375 1 47 4 139 1 
199 1 292 2 151 1 348 1 299 1 254 1 8 2 153 1 301 1 155 1 156 1 353 3 260 1 354 1 67 1 355 1 68 1 357 1 358 2 19 2 118 5 78 2 224 1 85 1 29 1 271 1 273 1 130 1 371 3 275 1 329 1 32 1 236 1 178 3 91 5 93 1 92 1 333 2 185 1 375 1 47 4 
118 3 199 1 224 1 123 1 85 1 365 1 271 1 299 1 273 1 8 2 130 1 371 3 275 1 32 1 329 1 301 1 236 1 178 3 155 1 91 3 93 1 92 1 156 1 260 1 354 1 67 1 355 1 282 1 333 2 185 1 68 1 357 1 375 1 358 2 47 2 19 2 139 1 
118 4 199 1 123 1 85 2 365 2 271 1 273 2 8 4 231 1 371 5 275 2 301 1 178 7 155 1 91 4 93 2 92 2 156 1 260 1 15 1 282 1 333 4 185 2 68 3 358 4 47 3 19 4 191 1 139 1 
314 1 21 1 230 1 
21 1 274 1 
108 1 
113 1 21 1 
288 1 314 2 295 1 113 1 21 3 120 1 
288 1 113 1 21 1 
21 1 192 1 
340 4 305 1 39 2 157 1 185 1 187 3 168 2 227 1 150 1 359 3 126 7 160 1 20 1 62 1 152 1 11 1 275 1 
340 4 305 1 39 2 157 1 185 1 187 3 168 2 227 1 150 1 359 3 126 7 160 1 20 1 62 1 152 1 11 1 275 1 
340 4 12 1 305 1 39 2 157 1 185 1 187 3 168 2 227 1 150 1 359 3 126 7 160 1 20 1 62 1 11 1 152 1 275 1 
340 16 242 1 117 1 204 1 347 1 168 5 227 1 267 3 150 2 297 1 125 4 126 31 253 1 273 3 11 1 62 2 152 2 275 4 104 1 135 1 92 3 93 3 305 1 277 1 332 2 39 3 157 5 42 1 185 4 187 15 359 10 160 1 20 2 221 1 
340 5 104 2 135 2 39 2 332 4 157 1 42 2 185 1 168 3 187 4 227 1 150 1 297 1 359 4 159 1 160 1 126 9 349 1 20 1 253 2 62 1 11 1 152 1 275 1 
1 1 244 1 163 1 4 1 82 1 206 1 296 1 298 1 87 1 272 1 103 2 326 1 128 1 370 1 233 1 302 1 276 1 279 1 310 2 356 1 46 1 336 1 188 1 219 1 218 1 317 1 114 2 115 1 338 1 378 1 
1 1 244 2 163 1 4 1 82 1 206 1 296 1 298 1 272 1 173 1 103 3 326 1 128 1 370 1 233 1 302 1 276 1 279 1 310 3 46 1 336 1 188 1 219 1 241 1 218 1 317 1 114 2 115 1 378 1 196 1 
1 1 244 2 163 1 82 1 206 1 296 1 272 1 173 1 103 2 128 1 326 1 370 1 233 1 276 1 279 1 310 2 46 1 336 1 219 1 241 1 218 1 317 1 114 2 115 1 378 1 
276 1 198 1 1 1 265 1 259 1 279 2 3 1 4 1 225 1 310 1 206 1 296 1 113 1 188 1 21 1 219 2 103 1 272 2 128 2 9 1 370 1 351 1 196 1 
1 1 163 1 4 1 82 1 206 1 296 1 298 1 272 1 173 1 103 1 326 1 128 1 370 1 233 1 302 1 276 1 279 1 310 1 356 1 336 1 188 1 219 1 218 1 317 1 114 2 338 1 
143 1 
342 2 1 2 199 1 147 1 344 1 247 1 206 1 151 3 296 2 350 1 8 2 351 1 154 2 155 1 304 1 105 1 156 2 353 6 260 1 354 1 16 1 68 2 312 1 112 2 113 1 316 1 21 1 263 2 118 5 77 1 265 2 121 1 225 1 29 1 269 1 271 1 325 1 129 1 131 1 371 2 370 1 89 2 133 1 33 2 329 1 32 1 178 2 276 2 236 1 91 5 37 2 136 4 333 3 335 1 287 1 
329 1 32 1 35 1 236 1 91 3 118 3 77 1 105 1 136 2 147 1 156 2 344 1 353 2 354 1 121 1 333 2 16 1 335 1 312 1 151 1 269 1 263 1 129 1 133 1 
329 1 32 1 236 1 91 2 118 2 77 1 105 1 136 3 147 1 156 2 344 1 354 1 121 1 333 2 16 1 335 1 312 1 112 1 269 1 129 1 133 1 
77 1 118 3 147 1 344 1 121 1 151 1 269 1 129 1 133 1 32 1 329 1 35 1 236 1 91 3 37 1 105 1 136 3 156 3 353 2 354 1 16 1 333 3 312 1 335 1 112 1 263 1 
342 2 199 1 147 1 344 1 247 1 203 1 151 3 250 1 299 1 8 1 154 2 155 1 105 1 257 1 156 3 353 7 260 1 354 2 67 1 355 1 16 1 68 2 312 1 357 1 112 3 263 4 118 5 77 1 119 1 224 1 121 1 322 1 29 1 269 1 129 1 130 1 371 1 131 1 89 2 133 1 32 2 329 2 33 2 35 1 236 2 91 5 37 4 136 5 333 3 335 1 375 1 
342 2 199 1 147 1 344 1 247 1 151 2 8 1 154 2 155 1 304 1 105 1 156 3 260 1 353 4 354 1 16 1 68 2 312 1 112 2 263 2 118 4 77 1 121 1 29 1 269 1 129 1 371 1 131 1 89 2 133 1 32 1 329 1 33 2 236 1 178 2 91 4 37 2 136 4 333 4 335 1 
342 2 77 1 118 4 119 1 199 1 147 1 344 1 247 1 203 1 121 1 322 1 151 2 29 1 269 1 8 1 129 1 131 1 371 1 89 2 154 2 133 1 33 2 32 1 329 1 236 1 155 1 91 4 37 2 105 1 136 4 156 3 353 4 260 1 354 1 16 1 333 3 68 2 312 1 335 1 112 2 263 2 
342 2 77 1 118 4 119 1 199 1 147 1 344 1 247 1 203 1 121 1 322 1 151 2 29 1 269 1 8 1 129 1 131 1 371 1 89 2 154 2 133 1 33 2 32 1 329 1 236 1 155 1 91 4 37 2 105 1 136 4 156 3 353 4 260 1 354 1 16 1 333 3 68 2 312 1 335 1 112 2 263 2 
77 1 118 4 119 1 199 1 164 1 147 1 344 1 121 1 249 2 151 2 228 1 29 1 269 1 7 2 8 1 129 1 131 1 371 1 154 2 133 1 33 2 32 1 329 1 178 2 236 1 155 1 91 4 37 2 105 1 136 4 156 3 353 4 260 1 354 1 16 1 333 3 312 1 335 1 112 2 286 1 263 2 
342 2 77 1 118 4 119 1 199 1 147 1 344 1 247 1 203 1 121 1 322 1 151 2 29 1 250 1 269 1 8 1 129 1 131 1 371 1 89 2 154 2 133 1 33 2 32 1 329 1 236 1 155 1 91 4 37 3 105 1 136 5 156 3 260 1 353 5 354 1 16 1 333 3 68 2 312 1 335 1 112 3 263 3 
342 2 77 1 118 4 119 1 199 1 147 1 344 1 247 1 203 1 121 1 322 1 151 2 29 1 250 1 269 1 8 1 129 1 131 1 371 1 89 2 154 2 133 1 33 2 32 1 329 1 236 1 155 1 91 4 37 3 105 1 136 5 156 3 260 1 353 5 354 1 16 1 333 3 68 2 312 1 335 1 112 3 263 3 
77 1 118 4 199 1 164 1 147 1 344 1 121 1 249 2 151 2 29 1 269 1 7 2 8 1 129 1 131 1 371 1 154 2 133 1 33 2 329 1 32 1 178 2 236 1 155 1 91 4 304 1 37 2 105 1 136 4 156 3 353 4 260 1 354 1 16 1 333 3 312 1 335 1 112 2 263 2 
340 3 96 1 168 2 227 1 150 1 126 6 229 1 230 1 253 1 11 1 62 1 275 1 104 1 135 1 332 2 39 1 280 1 182 2 42 1 185 1 186 1 187 3 43 1 359 2 160 1 95 1 
340 8 96 2 242 1 293 1 149 1 168 1 86 1 102 1 267 3 125 3 126 14 253 2 273 2 232 1 275 2 104 2 135 2 92 2 93 1 277 1 332 4 280 1 40 1 182 1 157 1 42 2 185 1 187 6 43 11 186 4 359 2 49 1 95 11 
340 1 288 1 96 1 1 1 265 1 343 1 206 1 86 1 296 1 251 1 172 1 126 2 252 1 174 1 253 1 370 1 32 2 329 1 104 1 64 1 276 1 236 2 135 1 209 1 332 2 280 1 40 1 182 1 67 1 158 1 42 1 186 1 187 1 357 1 71 1 113 1 21 1 49 1 
340 10 96 3 288 2 1 3 346 2 206 2 150 1 296 3 253 3 252 2 62 1 11 1 64 1 104 3 258 1 309 1 67 1 157 4 158 1 357 1 69 2 359 8 160 1 113 2 21 2 22 2 23 2 265 1 168 4 227 1 86 1 126 20 172 2 173 1 174 2 273 2 370 2 275 3 329 1 32 3 276 3 236 3 135 3 92 2 93 2 39 1 332 6 40 1 280 3 182 2 374 2 42 3 185 3 187 10 43 7 186 7 49 1 194 1 95 7 
340 1 96 2 1 8 265 2 101 1 83 1 225 1 206 2 86 1 296 8 126 2 87 1 229 1 208 1 173 1 253 2 127 1 370 2 351 1 32 1 329 1 104 2 36 1 236 1 276 7 135 2 332 4 280 2 261 2 211 1 67 1 158 1 42 2 187 1 357 1 113 2 21 3 49 1 379 1 
340 1 96 1 224 1 168 1 126 3 253 1 273 1 275 1 329 1 32 1 104 1 236 1 135 1 92 1 93 1 332 2 280 1 40 1 281 1 67 1 42 1 185 1 186 1 43 1 187 2 357 1 359 1 141 1 95 1 
340 2 96 1 104 1 135 1 2 1 332 2 280 1 157 1 42 1 186 1 43 1 359 1 126 2 229 1 253 1 273 1 95 1 275 1 
96 1 104 1 135 1 93 1 332 2 280 1 122 1 42 1 185 1 168 1 186 1 43 1 187 2 359 1 126 2 229 1 253 1 95 1 
340 2 96 1 168 1 126 4 229 1 253 1 273 1 275 1 104 1 135 1 92 1 93 1 332 2 280 1 157 1 42 1 185 1 43 2 186 2 187 2 359 2 95 2 
340 2 96 1 104 1 135 1 2 1 332 2 280 1 157 1 83 1 42 1 186 1 43 1 359 1 126 2 253 1 273 1 95 1 275 1 
96 1 104 1 135 1 93 1 332 2 280 1 83 1 122 1 42 1 185 1 168 1 186 1 43 1 187 2 359 1 126 2 253 1 95 1 
340 2 96 1 83 1 168 1 126 4 253 1 273 1 275 1 104 1 135 1 92 1 93 1 332 2 280 1 157 1 42 1 185 1 43 2 186 2 187 2 359 2 95 2 
340 2 96 1 168 1 126 4 253 1 273 1 275 1 104 1 135 1 92 1 93 1 332 2 280 1 157 1 42 1 185 1 43 2 186 2 187 2 359 2 95 2 
340 1 23 1 288 1 96 1 1 1 265 1 86 1 206 1 296 1 126 2 172 1 252 1 174 1 253 1 370 1 32 1 104 1 276 1 236 1 135 1 332 2 280 1 182 1 42 1 187 1 113 1 21 1 49 1 
340 1 288 1 96 1 222 1 1 1 265 1 86 1 206 1 296 1 126 2 252 1 253 1 370 1 88 1 63 1 32 1 104 1 276 1 236 1 135 1 332 2 280 1 182 1 42 1 187 1 113 1 21 1 49 1 
340 2 96 1 168 1 126 4 253 1 273 1 275 1 104 1 135 1 92 1 93 1 332 2 280 1 40 1 157 1 42 1 185 1 43 2 186 2 187 2 359 2 95 2 
340 2 23 1 288 1 96 1 1 1 168 1 206 1 296 1 126 4 172 1 87 1 252 1 174 1 253 1 273 1 370 1 275 1 32 1 104 1 276 1 236 1 135 1 93 1 92 1 332 2 280 1 157 1 42 1 185 1 187 2 186 2 43 2 69 1 359 2 113 1 21 1 95 2 
340 2 96 1 224 1 126 3 253 1 273 1 275 1 329 1 32 1 104 1 236 1 135 1 93 1 92 1 332 2 280 1 40 1 157 1 67 1 42 1 185 1 187 1 43 1 186 1 357 1 359 1 141 1 220 1 95 1 
340 9 341 2 242 1 161 2 243 1 226 1 167 1 168 3 267 1 125 2 126 19 253 2 273 3 175 1 275 3 104 2 135 2 92 3 93 3 277 1 332 4 237 1 157 3 183 1 42 2 185 3 187 10 159 1 359 6 195 1 
340 14 341 1 161 4 243 2 321 1 166 1 226 2 168 2 267 2 297 2 58 1 126 26 125 2 253 3 273 3 275 3 104 3 135 3 92 3 93 2 277 2 210 1 332 6 237 1 157 2 183 1 42 3 185 2 187 12 359 4 159 1 94 1 190 1 195 1 
340 20 242 1 341 1 243 1 297 1 150 1 58 1 253 3 11 1 62 1 104 3 210 1 157 4 359 8 159 1 160 1 161 4 321 1 166 1 226 2 168 4 267 3 227 1 126 41 125 4 273 4 175 1 275 5 135 3 93 4 92 4 277 3 179 1 332 6 39 1 237 1 42 3 183 1 185 5 187 21 94 1 190 1 195 1 
340 20 341 1 242 1 161 4 243 1 321 1 166 1 226 2 168 4 227 1 267 3 150 1 297 2 58 1 125 4 126 38 253 4 273 4 62 1 11 1 175 1 275 5 104 4 135 4 92 4 93 3 179 1 277 3 210 1 39 1 332 8 237 1 157 3 183 1 42 4 185 4 187 18 159 1 359 7 160 1 94 1 190 1 195 1 
340 27 341 1 242 2 161 4 243 1 321 1 166 1 226 1 149 2 168 7 227 1 267 4 150 1 297 1 58 1 125 4 126 52 253 2 273 7 62 1 11 1 275 8 104 2 135 2 92 7 93 7 277 2 210 1 39 1 332 4 237 1 157 7 183 1 42 2 185 8 187 25 159 1 359 14 160 1 94 1 190 1 195 1 
45 1 197 1 366 1 289 1 331 1 246 1 100 1 238 1 255 1 84 1 
44 1 376 1 
50 1 334 1 57 1 197 1 366 1 331 1 246 1 255 1 84 1 
339 1 134 1 25 2 330 1 91 1 197 1 118 1 289 1 331 1 246 1 165 1 80 1 100 1 238 1 333 1 84 1 366 1 255 1 
339 1 134 1 25 2 330 1 91 1 197 1 118 1 289 1 331 1 246 1 165 1 80 1 100 1 238 1 333 1 84 1 366 1 255 1 
339 1 134 1 25 2 330 1 91 1 197 1 118 1 289 1 331 1 246 1 165 1 80 1 100 1 238 1 333 1 84 1 366 1 255 1 
38 1 373 1 81 1 
38 1 373 1 81 1 
268 1 377 1 
268 1 38 1 377 1 
170 1 181 1 
25 1 197 1 118 1 246 1 84 1 85 1 170 1 366 1 31 1 255 1 300 1 32 2 134 1 329 2 330 1 236 2 235 1 91 1 331 1 182 1 181 1 67 2 44 1 357 2 47 1 376 1 285 1 
373 1 81 1 
268 1 38 1 377 1 
340 1 96 1 1 2 201 1 206 1 86 1 296 2 126 2 207 1 253 1 127 1 370 1 32 2 329 2 104 1 236 2 276 2 135 1 332 2 280 1 40 1 261 2 42 1 17 1 187 1 113 1 216 1 21 1 49 1 189 1 379 1 
302 1 276 2 1 2 163 1 26 1 82 1 205 1 206 1 296 2 336 1 87 1 173 1 219 1 218 1 326 1 114 2 317 1 370 1 361 1 
302 1 276 1 1 1 163 1 26 1 82 1 262 1 206 1 296 1 336 1 173 1 219 1 218 1 326 1 114 2 317 1 370 1 
75 1 276 1 1 1 265 1 3 1 225 1 206 1 296 1 113 1 21 1 219 1 370 1 351 1 361 1 
302 1 276 1 1 1 163 1 26 1 82 1 205 1 206 1 296 1 336 1 173 1 219 1 218 1 326 1 114 2 317 1 370 1 361 1 
61 1 
177 1 256 1 156 1 230 1 8 1 371 1 333 1 
342 1 118 1 199 1 247 1 29 1 151 1 8 1 371 1 89 1 178 1 155 1 91 1 156 1 260 1 353 1 333 2 68 1 
288 1 51 1 1 1 199 2 52 1 248 1 346 1 206 2 296 1 151 1 59 1 8 3 155 2 105 1 66 1 260 2 353 2 68 3 314 1 358 3 19 3 113 1 21 4 217 1 118 2 265 1 120 1 28 1 29 2 323 1 271 1 273 1 274 2 371 4 370 1 275 1 276 1 178 6 91 2 92 1 93 1 333 3 185 1 
144 1 24 1 118 1 321 1 199 2 52 2 166 1 267 1 151 1 29 2 58 1 125 1 271 1 325 1 273 2 8 5 371 8 275 2 90 1 178 6 91 1 155 2 92 2 93 2 277 1 210 1 156 2 353 1 260 2 333 5 68 3 185 2 358 5 19 5 190 1 
144 1 118 1 199 1 52 2 224 1 322 1 227 1 150 1 29 1 299 1 8 2 130 1 62 1 371 2 275 2 32 1 329 1 236 1 155 1 91 1 260 1 354 1 355 1 67 1 185 1 357 1 375 1 142 1 
177 1 155 1 199 1 256 1 156 1 260 1 333 1 29 1 8 1 371 1 
144 1 178 10 92 2 93 2 52 2 333 5 346 1 68 5 185 2 358 5 19 5 273 2 8 5 371 5 275 2 
91 1 151 1 118 1 156 1 353 1 333 1 
1 4 118 3 265 2 199 2 146 1 225 1 123 1 206 1 6 1 29 1 296 4 151 2 271 2 325 2 8 2 370 1 371 2 351 1 327 2 276 4 155 2 91 3 260 2 353 4 212 1 113 1 316 1 21 1 287 1 
23 1 288 1 96 1 1 1 265 1 79 1 224 2 206 1 296 1 126 1 172 1 253 1 174 1 252 1 370 1 32 3 329 2 104 1 276 1 236 3 135 1 332 2 280 1 182 1 67 2 42 1 187 1 357 2 375 1 113 1 49 1 21 1 
178 4 155 1 199 1 156 2 39 1 260 1 333 4 68 2 358 2 29 1 19 2 271 1 325 1 8 2 371 1 
331 1 246 1 291 1 
331 1 246 1 291 1 
170 1 223 1 289 1 331 1 246 1 
331 1 246 1 291 1 
106 1 331 1 246 1 
106 1 331 1 246 1 
106 1 331 1 246 1 
331 1 246 1 
197 1 255 1 
340 4 104 2 135 2 39 1 332 4 157 1 42 2 185 1 187 4 168 2 227 1 297 1 150 1 359 3 126 8 160 1 253 2 11 1 62 1 275 1 
340 3 39 1 185 1 187 3 168 2 227 1 150 1 359 2 160 1 126 6 230 1 11 1 62 1 275 1 
340 2 104 1 135 1 93 1 92 1 332 2 157 1 42 1 185 1 168 1 187 2 56 1 359 2 126 4 253 1 273 1 275 1 
340 3 242 1 93 1 92 1 277 1 157 1 185 1 168 1 187 4 267 1 359 2 125 2 126 7 273 1 275 1 
340 11 242 1 293 1 168 5 149 1 227 1 267 2 150 2 297 2 126 23 125 2 253 2 273 2 62 2 11 1 275 3 104 2 135 2 92 2 93 2 39 1 332 4 157 4 42 2 185 3 187 12 359 9 239 1 160 1 
187 1 126 1 125 1 
340 1 267 1 126 1 
340 3 104 1 135 1 92 1 93 1 332 2 157 1 42 1 346 1 185 1 187 3 168 2 56 1 359 3 126 6 253 1 273 1 275 1 
340 6 321 1 166 1 168 1 267 1 58 1 126 12 125 1 253 1 273 2 275 2 104 1 135 1 92 2 93 2 277 1 210 1 332 2 157 1 42 1 185 2 187 6 159 1 359 2 190 1 
340 3 157 1 185 1 187 3 168 1 227 1 150 1 359 2 126 6 62 1 275 1 
340 1 104 1 135 1 332 2 157 1 42 1 168 1 187 2 150 1 297 1 359 2 239 1 126 3 160 1 253 1 62 1 11 1 
340 5 104 1 135 1 332 2 157 2 42 1 185 2 168 3 187 5 227 1 150 2 159 1 359 5 126 10 253 1 62 2 142 1 275 2 
340 2 104 1 135 1 332 2 157 1 42 1 159 1 359 1 126 2 253 1 273 1 275 1 
340 2 104 1 135 1 93 1 92 1 332 2 157 1 42 1 185 1 168 1 187 2 359 2 159 1 126 4 253 1 273 1 275 1 
340 1 104 3 135 3 332 6 157 1 42 3 187 2 168 1 297 1 150 1 159 1 359 2 239 1 126 3 253 3 62 1 175 1 
340 16 242 1 204 1 347 1 168 7 227 2 56 1 267 3 150 3 297 2 125 4 126 34 253 5 273 3 62 3 11 1 175 1 275 5 104 5 135 5 92 3 93 3 277 1 39 1 332 10 157 5 42 5 185 5 187 18 159 1 359 12 239 1 160 1 221 1 
340 4 168 2 267 1 227 1 150 1 126 8 125 1 253 1 11 1 62 1 275 1 104 1 135 1 277 1 39 1 332 2 42 1 185 1 187 4 159 1 359 2 160 1 190 1 
340 6 242 1 168 2 227 1 56 1 267 1 150 1 126 11 125 2 253 2 273 1 62 1 11 1 275 2 104 2 135 2 92 1 277 1 39 1 332 4 157 1 42 2 185 1 187 5 159 1 359 3 160 1 190 1 
340 9 321 1 166 1 168 3 227 1 56 1 267 1 150 1 297 1 58 1 126 19 125 1 253 3 273 2 62 1 11 1 275 3 104 3 135 3 92 2 93 2 277 1 210 1 39 1 332 6 157 1 42 3 185 3 187 10 159 1 359 4 160 1 190 1 
340 10 321 1 166 1 168 3 227 1 56 1 267 1 150 1 297 1 58 1 126 17 125 1 253 3 273 2 62 1 11 1 275 3 104 3 135 3 92 2 93 1 277 1 210 1 39 1 332 6 157 2 42 3 185 2 187 7 159 1 359 5 160 1 190 1 
340 4 168 2 267 1 227 1 150 1 126 8 125 1 253 1 11 1 62 1 275 1 104 1 135 1 277 1 39 1 332 2 42 1 185 1 187 4 159 1 359 2 160 1 190 1 
340 6 321 1 166 1 168 1 267 1 58 1 126 12 125 1 253 1 273 2 275 2 104 1 135 1 92 2 93 2 277 1 210 1 332 2 157 1 42 1 185 2 187 6 159 1 359 2 190 1 
340 10 321 1 166 1 168 3 227 1 56 1 267 1 150 1 297 2 58 1 126 18 125 1 253 4 273 2 62 1 11 1 275 3 104 4 135 4 92 2 93 1 277 1 210 1 39 1 332 8 157 2 42 4 185 2 187 8 159 1 359 5 160 1 190 1 
340 9 321 1 166 1 168 3 267 1 297 2 58 1 126 16 125 1 253 4 273 3 175 1 275 3 104 4 135 4 92 3 93 2 277 1 210 1 332 8 157 3 42 4 185 2 187 7 159 1 359 6 190 1 
340 3 157 3 185 1 187 4 168 3 227 1 150 3 359 6 126 7 160 1 11 2 62 3 275 1 
340 10 321 1 166 1 168 3 227 1 267 1 150 1 297 2 58 1 126 18 125 1 253 4 273 2 62 1 11 1 175 1 275 3 104 4 135 4 92 2 93 1 277 1 210 1 39 1 332 8 157 1 42 4 185 2 187 8 159 1 359 4 160 1 190 1 
32 1 329 1 236 1 240 1 182 1 41 1 133 1 
329 1 32 1 34 1 0 1 236 1 145 1 319 1 182 1 41 1 184 1 240 1 133 1 
206 1 276 1 296 1 1 1 265 1 113 1 21 1 230 1 370 1 351 1 225 1 
329 1 32 2 288 1 236 2 276 1 1 1 265 1 182 1 67 1 158 1 206 1 357 1 296 1 172 1 113 1 21 1 252 1 370 1 
288 2 1 1 206 1 296 1 172 1 269 1 252 1 370 1 327 1 32 2 329 2 276 1 236 2 354 1 182 1 67 1 158 1 335 1 357 2 214 1 113 2 21 3 192 1 
288 2 1 2 200 1 206 1 296 2 269 1 252 1 370 1 327 1 63 1 32 2 329 2 276 2 236 2 354 1 182 1 67 1 158 1 335 1 357 2 214 1 113 2 21 3 192 1 
288 1 97 1 1 1 118 2 224 1 206 1 296 1 299 1 274 1 130 1 370 1 327 1 32 1 329 1 236 1 276 1 91 2 105 1 156 1 353 1 354 1 67 1 355 1 333 1 357 1 314 1 375 1 214 1 215 1 113 1 21 4 192 1 
288 1 1 1 118 2 224 1 206 1 296 1 59 1 299 1 274 1 130 1 370 1 327 1 32 1 329 1 236 1 276 1 91 2 105 1 156 1 353 1 354 1 67 1 355 1 333 1 357 1 314 1 375 1 214 1 113 1 21 4 192 1 
206 1 276 1 296 1 1 1 208 1 370 1 
288 1 36 1 276 6 1 7 265 2 120 1 261 1 211 1 101 1 148 1 110 1 206 3 296 7 113 2 87 1 208 1 173 1 21 3 370 2 176 1 379 1 
340 3 96 2 288 1 1 1 201 1 206 1 296 1 150 1 253 2 252 1 11 1 62 1 104 2 67 1 158 1 69 1 357 1 359 2 160 1 113 1 21 1 22 1 23 1 168 2 227 1 172 1 126 6 87 1 174 1 370 1 275 1 329 1 32 2 276 1 236 2 135 2 332 4 39 1 40 1 280 2 182 2 42 2 185 1 186 1 187 3 43 1 95 1 
144 1 1 1 146 1 199 2 52 2 151 1 296 1 150 1 59 1 299 1 8 5 62 1 155 2 105 1 256 1 66 1 156 2 353 2 260 2 354 1 355 1 67 1 314 1 357 1 21 2 217 1 118 3 265 1 224 1 28 1 227 1 29 2 274 1 130 1 371 4 275 2 32 1 329 1 177 1 276 1 236 1 91 3 333 2 185 2 375 1 47 1 142 1 
51 1 288 1 276 2 1 2 120 1 314 1 206 2 296 2 113 1 87 1 208 1 21 2 370 1 
276 4 1 4 265 1 200 1 27 1 225 1 206 1 296 4 113 1 87 1 21 1 351 1 370 1 
288 1 276 2 1 2 258 1 169 1 110 1 206 2 296 2 113 1 21 1 193 1 370 1 327 1 176 1 
206 1 276 1 296 1 1 1 265 1 218 1 326 1 114 1 82 1 370 1 
276 2 1 2 206 1 296 2 113 1 87 1 173 1 21 1 189 1 370 1 379 1 
276 4 1 5 265 1 27 1 211 1 225 1 101 1 206 2 296 5 113 2 87 1 21 3 351 1 370 2 327 1 379 1 
276 4 1 5 265 1 27 1 211 1 225 1 206 2 296 5 113 2 87 1 324 1 21 3 351 1 370 2 327 1 379 1 
329 1 32 2 288 1 236 2 276 1 1 1 265 1 182 1 67 1 158 1 206 1 357 1 296 1 113 1 21 1 252 1 370 1 63 1 
288 1 276 1 1 1 120 1 148 1 110 1 206 2 296 1 113 1 21 1 370 1 176 1 327 1 
32 1 329 1 236 1 216 1 72 1 207 1 337 1 140 1 17 1 
308 1 140 1 363 1 
72 1 337 1 368 1 182 1 140 1 
118 2 147 1 224 1 363 1 269 1 299 1 368 1 130 1 32 1 329 1 236 1 91 2 105 1 306 1 156 1 308 1 354 2 67 1 213 1 355 1 333 1 335 1 357 1 375 1 47 1 72 1 337 1 140 1 
46 1 230 1 115 1 378 1 
310 1 46 1 188 1 103 1 115 1 4 1 378 1 
103 1 128 1 279 1 
307 2 202 1 4 1 356 1 310 3 313 1 46 1 188 1 103 3 115 1 378 1 132 1 
310 2 46 1 244 1 188 1 290 1 103 2 115 1 4 1 378 1 
320 1 163 1 4 1 356 1 310 1 18 1 188 1 103 1 114 1 326 1 115 1 
310 1 356 1 188 1 103 1 115 1 4 1 378 1 
310 1 356 1 46 1 188 1 103 1 4 1 378 2 
234 1 266 1 14 1 4 2 356 1 310 2 188 2 103 2 115 1 378 1 
65 1 244 2 320 1 362 1 4 1 356 1 310 3 46 1 270 1 188 1 103 3 115 2 378 1 
244 1 163 1 82 1 4 1 356 1 310 2 46 1 336 1 188 1 103 2 114 2 326 1 115 1 369 1 378 1 
244 2 320 1 362 1 290 1 4 2 345 1 356 1 310 4 46 1 188 2 103 4 115 2 378 1 
310 1 356 1 46 1 188 1 103 1 115 1 4 1 378 1 
244 2 320 1 362 1 307 1 202 1 4 1 54 1 310 4 46 2 188 1 103 4 115 3 378 2 132 1 
310 2 356 1 46 1 244 1 360 1 30 1 188 1 103 2 115 1 4 1 378 1 55 1 
328 1 307 2 202 1 4 1 356 1 310 3 46 1 188 1 103 3 115 1 378 1 132 2 
264 1 115 2 13 1 116 2 
310 1 356 1 318 1 188 1 103 1 4 1 
310 2 356 1 46 1 244 1 65 1 188 1 103 2 115 1 4 1 378 1 
138 1 
310 1 356 1 46 1 188 1 103 1 115 1 4 1 378 1 
244 1 65 1 307 1 4 1 356 1 310 3 46 1 188 1 103 3 115 1 378 1 
320 1 362 1 115 1 54 1 
115 1 378 1 

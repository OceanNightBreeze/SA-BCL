#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (138,316) (138,316) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (138,316) (138,316) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (138,316) (138,316) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (138,316) (138,316) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 11 144 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 11 144 240 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 11 184 285 110 (9,93) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 62 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 62 242 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 11 340 302 156 146 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 11 139 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 11 144 162 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 11 340 109 166 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 11 144 126 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 11 144 315 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 11 184 285 110 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 11 184 285 110 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 11 144 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 11 144 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 11 168 160 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 11 168 160 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 11 168 160 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 11 168 160 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 11 168 160 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 11 144 162 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 11 144 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 103 150 254 41 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 103 150 254 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 11 340 302 156 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 11 184 285 129 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 11 340 302 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 11 340 109 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 11 340 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 11 44 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 11 184 73 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 11 282 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 11 340 302 197 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 103 150 254 (211,278) (211,278) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 3 226 1 145 1 118 3 252 1 227 1 37 2 77 2 101 1 192 1 238 2 19 1 262 1 
289 1 2 2 316 1 138 1 141 1 118 2 252 1 323 1 324 1 77 1 281 1 191 1 238 1 338 1 262 1 
289 1 2 2 316 1 138 1 141 1 118 2 252 1 323 1 324 1 77 1 281 1 191 1 238 1 338 1 262 1 
289 1 2 2 316 1 138 1 141 1 118 2 252 1 323 1 324 1 77 1 281 1 191 1 238 1 338 1 262 1 
289 1 2 2 316 1 138 1 141 1 118 2 252 1 323 1 324 1 77 1 281 1 191 1 238 1 338 1 262 1 
2 4 226 1 118 4 227 3 229 1 37 3 324 1 77 1 101 2 192 1 191 1 19 1 238 1 131 2 338 1 24 1 200 1 262 1 
2 2 141 1 226 1 118 2 252 1 37 1 323 1 77 1 324 1 192 1 58 1 59 1 238 1 338 1 244 1 262 1 
2 9 226 1 145 1 91 1 227 7 229 1 232 1 324 1 101 4 192 1 191 1 19 3 238 2 24 1 200 1 248 1 31 1 252 1 118 9 37 5 77 2 131 2 338 1 262 1 
2 9 226 1 145 1 91 1 227 7 229 1 232 1 324 1 101 4 192 1 191 1 19 3 238 2 24 1 200 1 248 1 31 1 252 1 118 9 37 5 77 2 131 2 338 1 262 1 
313 1 111 1 268 1 6 1 72 1 325 1 194 1 217 1 329 1 105 1 259 1 63 1 201 1 220 1 
15 1 
15 1 123 1 313 1 283 1 237 1 259 2 201 2 180 1 
313 2 181 1 183 2 264 3 137 1 184 1 268 1 6 1 319 1 150 2 15 1 325 1 194 1 329 1 237 1 105 1 63 1 201 5 111 1 32 1 69 1 72 1 35 1 73 1 254 2 123 2 41 1 336 1 217 1 130 1 259 5 220 1 342 2 180 1 221 1 
15 1 16 1 237 1 
15 1 256 2 187 1 
111 2 215 1 268 2 329 2 105 2 63 2 72 1 220 2 
268 2 223 2 318 1 50 1 142 1 144 1 88 1 10 1 11 1 13 2 148 1 98 1 190 1 17 1 329 3 105 2 23 1 286 1 63 2 111 2 29 1 204 2 67 1 115 1 34 1 253 1 72 1 296 1 121 1 213 2 218 1 220 3 45 1 
111 1 325 1 268 1 217 1 329 1 6 1 105 1 63 1 72 1 220 1 
163 1 231 1 188 1 15 1 172 1 325 1 237 1 329 1 105 1 133 1 259 1 287 1 220 1 201 1 
111 1 163 1 268 1 231 1 188 1 15 1 325 1 237 1 329 1 105 1 63 1 133 1 259 2 201 2 220 1 
123 1 313 1 259 1 201 1 75 1 
15 1 123 1 0 1 313 1 237 1 259 2 201 2 180 1 
123 1 259 1 201 1 
111 1 268 1 14 1 234 1 215 2 329 2 105 2 63 1 220 2 
57 1 9 1 95 1 
29 1 204 1 67 1 223 1 318 1 142 1 88 1 121 1 190 1 213 1 215 1 329 1 20 1 218 1 286 1 220 1 
111 4 268 1 320 1 255 1 14 1 151 1 172 1 215 1 104 1 329 5 105 5 331 2 63 4 220 5 
111 2 325 1 217 1 329 2 105 2 63 2 74 1 220 2 
215 1 16 1 
29 1 111 1 204 1 67 1 318 1 223 1 142 1 88 1 9 1 121 1 151 1 190 1 213 1 329 2 105 1 331 1 218 1 286 1 63 1 220 2 
111 3 268 1 215 1 329 3 105 3 331 1 63 3 220 3 
111 1 325 1 217 1 329 1 105 1 63 1 220 1 
111 1 14 1 325 1 234 1 268 1 329 1 105 1 63 1 220 1 
318 1 268 2 223 1 50 1 142 1 144 1 88 1 11 1 13 2 231 1 188 1 14 1 151 1 190 1 98 1 325 1 17 1 329 4 105 3 331 1 240 1 23 1 286 1 63 3 201 1 29 1 111 3 204 1 163 1 67 1 115 1 34 1 72 1 296 1 121 1 171 1 213 1 218 1 133 1 259 1 220 4 45 1 
111 1 172 1 215 1 329 2 105 2 331 1 63 1 320 1 220 2 
111 3 163 1 49 1 268 1 188 1 231 1 14 1 15 1 151 1 325 1 171 1 329 3 105 3 331 2 259 1 63 3 133 1 201 1 220 3 
111 2 268 1 9 1 14 1 57 1 329 2 105 2 331 1 63 2 220 2 
29 1 204 1 67 1 223 1 318 1 142 1 88 1 121 1 190 1 213 1 215 1 329 1 218 1 286 1 220 1 
29 1 204 1 67 1 223 1 142 1 121 1 149 1 190 1 213 1 215 1 329 1 22 1 218 1 286 1 220 1 
110 1 184 1 50 1 115 1 34 1 11 1 93 1 13 2 17 1 285 1 23 1 199 1 45 1 
111 1 325 1 329 1 105 1 133 1 63 1 74 1 220 1 
212 1 4 1 243 1 
66 1 272 1 4 2 7 1 176 1 243 2 
4 1 243 1 
4 1 243 1 
66 1 7 1 
66 1 7 1 
66 1 7 1 
4 1 243 1 54 1 
4 1 243 1 54 1 
4 1 243 1 54 1 
214 1 4 1 243 1 
214 1 4 1 243 1 
214 1 4 1 243 1 
111 2 47 1 140 1 4 1 36 1 167 1 94 1 56 1 122 1 212 1 152 1 153 1 327 1 215 1 329 2 175 1 105 2 258 1 259 1 63 2 25 1 220 2 201 1 243 1 
140 2 269 1 4 2 87 1 250 2 294 1 94 2 56 3 122 2 15 1 124 1 327 2 153 1 174 1 176 1 259 2 243 2 201 2 261 1 
113 2 191 1 58 1 165 1 338 2 
324 1 191 1 338 1 
324 1 58 1 338 1 
113 1 191 2 58 1 164 1 165 1 338 3 
113 1 191 1 58 1 165 1 338 2 198 1 
313 4 47 1 264 3 184 1 224 2 271 1 187 1 96 2 321 1 15 2 152 1 237 1 285 1 62 1 201 5 333 2 68 1 69 1 35 1 167 1 210 1 123 1 336 1 304 1 256 3 129 1 130 1 307 1 259 5 342 2 221 1 180 1 
313 5 264 3 184 1 224 2 271 1 319 1 187 1 96 2 15 3 152 2 237 1 285 1 62 1 201 7 332 1 69 1 35 1 75 3 210 1 123 4 336 1 256 3 125 1 216 1 129 1 130 1 307 1 259 7 310 3 342 2 221 1 180 1 
313 1 68 1 319 1 62 1 259 2 201 2 321 1 
68 1 319 1 62 1 259 1 242 1 201 1 321 1 
208 1 
142 1 286 1 121 1 
119 1 121 1 
16 1 26 1 121 1 
335 1 121 1 
286 1 121 1 
182 1 142 1 43 1 286 1 26 2 121 3 
312 1 291 1 33 1 52 1 254 1 278 1 150 1 211 1 303 1 193 1 103 1 305 1 
312 1 302 1 303 2 291 1 156 1 33 1 146 1 52 1 11 1 340 1 
312 1 303 1 139 1 291 1 50 1 17 1 33 1 34 1 21 1 52 1 11 1 13 2 45 1 
312 1 291 1 33 1 52 1 254 1 278 1 150 1 211 1 303 1 193 1 103 1 
312 1 291 1 33 1 52 1 254 1 278 1 150 1 211 1 303 1 193 1 103 1 
204 1 161 2 2 1 30 1 67 1 266 1 223 1 252 2 118 1 293 2 277 1 121 1 169 1 190 1 76 1 77 1 213 1 154 1 238 1 196 2 218 1 286 1 202 1 
263 1 1 1 2 1 223 1 89 1 324 1 190 1 191 1 58 1 238 1 196 1 65 1 161 1 204 1 117 1 164 1 118 1 252 1 70 1 293 1 77 1 213 1 132 1 218 1 338 2 262 1 
263 1 2 2 223 1 226 1 89 1 227 1 324 1 190 1 192 1 191 1 58 1 238 1 196 1 157 1 65 1 161 1 204 1 117 1 164 1 118 2 252 1 70 1 293 1 37 1 77 1 213 1 132 1 218 1 338 2 262 1 
263 1 1 1 2 3 223 1 226 1 89 1 227 2 53 1 324 1 190 1 154 1 192 1 191 1 58 1 238 1 196 1 65 1 161 1 204 1 164 1 117 1 118 3 252 1 70 1 293 1 37 1 77 1 213 1 218 1 338 2 
263 1 1 1 2 2 223 1 226 1 227 2 53 1 190 1 324 1 192 1 191 1 58 1 196 1 161 1 204 1 117 1 164 1 252 1 118 2 70 1 293 1 37 1 213 1 218 1 338 2 
339 1 
264 1 223 2 271 1 186 1 277 1 188 1 231 1 97 1 325 1 190 1 329 1 18 1 105 1 286 1 287 1 201 3 204 2 163 1 67 2 69 1 209 1 35 1 121 1 123 2 172 1 76 1 213 2 336 1 130 1 218 1 82 1 133 1 259 3 308 1 220 1 342 1 180 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 123 1 325 1 172 1 283 1 329 1 105 1 82 1 133 1 259 3 308 1 287 1 201 3 220 1 180 1 
163 1 69 1 35 1 209 1 188 1 231 1 325 1 172 1 336 1 329 1 130 1 105 1 82 1 133 1 259 2 308 1 287 1 220 1 201 2 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 209 1 188 1 231 1 325 1 172 1 329 1 105 1 82 1 259 2 133 1 308 1 287 1 201 2 220 1 
163 1 69 1 35 1 209 1 188 1 231 1 325 1 172 1 336 1 329 1 130 1 105 1 82 1 133 1 259 2 308 1 287 1 220 1 201 2 
162 1 204 1 334 1 67 1 223 1 50 1 115 1 144 1 33 1 34 1 52 1 11 1 13 2 100 1 213 1 17 1 23 1 45 1 
111 1 203 1 184 1 268 1 50 1 115 1 33 1 34 1 52 1 11 1 13 2 14 1 17 1 329 1 129 1 105 1 285 1 307 1 219 1 23 1 63 1 220 1 45 1 221 1 
50 1 115 1 34 1 254 1 13 2 278 1 150 1 211 1 103 1 16 1 17 1 23 1 199 1 45 1 
50 1 17 1 115 1 34 1 23 1 219 1 11 1 340 1 166 1 109 1 13 2 45 1 
111 1 50 1 115 1 144 1 34 1 11 1 13 2 151 1 17 1 126 1 329 1 105 1 331 1 63 1 219 1 23 1 220 1 45 1 
111 1 204 1 315 1 67 1 223 1 50 1 115 1 144 1 34 1 11 1 13 2 151 1 213 1 17 1 329 1 105 1 331 1 63 1 219 1 23 1 220 1 45 1 
50 1 115 1 33 2 251 1 9 1 34 1 52 2 95 1 13 2 299 1 57 1 284 1 17 1 307 1 23 1 199 1 45 1 221 1 
110 1 184 1 50 1 17 1 115 1 285 1 34 1 23 1 11 1 199 1 13 2 45 1 
184 1 50 1 115 1 33 2 9 1 34 1 52 2 11 1 95 1 13 2 57 1 17 1 129 1 285 1 307 1 23 1 199 1 45 1 221 1 
50 1 115 1 33 2 251 1 9 1 34 1 52 2 95 1 13 2 299 1 57 1 100 1 284 1 17 1 307 1 23 1 45 1 221 1 
110 1 100 1 184 1 50 1 17 1 115 1 285 1 34 1 23 1 11 1 13 2 45 1 
184 1 50 1 115 1 33 2 9 1 34 1 52 2 11 1 95 1 13 2 57 1 100 1 17 1 129 1 285 1 307 1 23 1 45 1 221 1 
184 1 50 1 115 1 33 2 9 1 34 1 52 2 11 1 95 1 13 2 57 1 17 1 129 1 285 1 307 1 23 1 45 1 221 1 
29 1 204 1 67 1 223 1 318 1 50 1 142 1 115 1 144 1 88 1 34 1 11 1 13 2 121 1 98 1 190 1 213 1 17 1 329 1 218 1 23 1 286 1 220 1 45 1 
29 1 204 1 67 1 223 1 50 1 142 1 115 1 144 1 34 1 274 1 11 1 13 2 121 1 149 1 190 1 213 1 17 1 329 1 22 1 218 1 23 1 286 1 220 1 45 1 
184 1 50 1 115 1 33 2 9 1 34 1 52 2 11 1 95 1 13 2 57 1 17 1 129 1 285 1 307 1 219 1 23 1 45 1 221 1 
184 1 318 1 223 1 142 1 50 1 88 1 9 1 52 2 11 1 95 1 13 2 190 1 98 1 57 1 17 1 329 1 285 1 157 1 286 1 23 1 28 1 29 1 204 1 115 1 33 2 34 1 121 1 213 1 129 1 307 1 218 1 220 1 45 1 221 1 
184 1 268 1 50 1 9 1 52 2 276 1 11 1 95 1 13 2 14 1 57 1 17 1 329 1 105 1 285 1 63 1 23 1 111 1 115 1 33 2 34 1 129 1 307 1 219 1 220 1 45 1 221 1 
78 1 42 1 50 1 17 1 239 1 34 1 21 1 11 1 168 1 160 1 13 2 45 1 
78 1 42 1 50 1 17 1 239 1 34 1 21 1 11 1 168 1 160 1 13 2 45 1 
78 1 42 1 50 1 17 1 239 1 34 1 21 1 11 1 168 1 160 1 13 2 45 1 
78 1 42 1 50 1 17 1 239 1 34 1 21 1 11 1 168 1 160 1 13 2 45 1 
78 1 42 1 50 1 17 1 239 1 34 1 21 1 11 1 168 1 160 1 13 2 45 1 
327 1 140 1 4 1 87 1 106 1 176 1 294 1 243 1 94 1 122 1 
212 1 258 1 
327 1 233 1 140 1 4 1 107 1 108 1 243 1 94 1 122 1 
71 1 54 1 
214 1 102 1 
140 1 269 1 4 1 87 1 250 1 294 1 94 1 56 2 122 1 15 1 124 1 153 1 327 1 176 1 259 1 201 1 243 1 261 1 
140 1 269 1 4 1 87 1 250 1 294 1 94 1 56 2 122 1 15 1 124 1 153 1 327 1 176 1 259 1 201 1 243 1 261 1 
140 1 269 1 4 1 87 1 250 1 294 1 94 1 56 2 122 1 15 1 124 1 153 1 327 1 176 1 259 1 201 1 243 1 261 1 
272 1 71 1 54 1 
272 1 71 1 54 1 
214 1 102 1 272 1 
214 1 102 1 
175 1 36 1 
313 1 47 1 140 1 4 1 94 1 56 1 322 1 152 1 327 1 329 2 105 2 63 2 25 1 201 1 243 1 111 2 250 1 36 1 167 1 122 1 212 1 215 1 175 1 258 1 259 1 220 2 261 1 
162 1 334 1 50 1 5 1 115 1 144 1 33 1 34 1 52 1 11 1 120 1 13 2 328 1 17 1 329 2 105 2 219 1 23 1 158 1 220 2 45 1 
204 1 85 1 67 1 30 1 223 1 277 1 121 1 190 1 76 1 213 1 196 1 218 1 286 1 177 1 
204 1 263 1 1 1 265 1 223 1 164 1 117 1 89 1 324 1 190 1 213 1 191 1 58 1 80 1 196 1 338 2 218 1 177 1 
204 2 263 1 1 1 265 1 223 2 164 1 117 1 89 1 324 1 190 1 213 2 191 1 58 1 80 1 196 1 338 2 218 1 157 1 177 1 
204 1 263 1 1 1 265 1 223 1 164 1 117 1 89 1 295 1 324 1 190 1 213 1 191 1 58 1 196 1 338 2 218 1 
195 1 
336 1 130 1 69 1 35 1 
15 1 123 1 237 1 259 1 201 1 180 1 
264 1 223 2 271 1 319 1 186 1 277 1 97 1 190 1 18 1 286 1 201 2 247 1 204 2 67 2 69 1 35 1 121 1 123 2 76 1 336 1 213 2 130 1 218 1 259 2 342 1 180 1 
16 1 
264 1 90 1 187 1 15 2 60 1 237 1 201 1 69 1 35 1 39 1 123 1 336 1 256 1 130 1 259 1 342 1 180 1 
183 2 182 1 84 1 264 9 184 2 267 1 271 2 188 2 96 6 187 6 15 8 190 3 18 1 285 2 286 3 26 2 201 5 204 3 114 2 119 2 35 4 121 10 123 5 301 2 300 2 213 3 130 4 129 2 306 1 307 2 218 4 44 2 135 2 221 2 48 2 223 3 142 3 224 6 326 2 235 1 237 2 157 1 247 1 67 1 335 3 69 4 170 1 336 4 79 1 256 12 259 5 260 2 342 8 180 3 
183 2 264 8 184 2 3 1 222 1 271 1 224 5 55 1 96 5 187 3 15 5 326 1 18 1 237 2 197 1 285 2 201 1 69 2 35 2 297 1 123 1 302 1 336 2 256 6 130 2 129 2 337 1 307 2 259 1 340 1 309 1 342 5 134 1 180 1 221 2 
136 1 183 2 264 2 184 1 268 1 6 1 150 1 325 1 326 1 194 1 329 1 105 1 63 1 201 1 111 1 69 1 72 1 35 1 73 1 254 1 41 1 336 1 217 1 130 1 259 1 220 1 342 2 221 2 
223 1 268 2 318 1 50 1 142 1 144 1 88 1 11 1 13 2 98 1 190 1 17 1 329 3 105 2 63 2 286 1 23 1 111 2 29 1 204 1 67 1 115 1 34 1 72 1 296 1 121 1 213 1 218 1 220 3 45 1 
312 1 264 1 224 2 271 1 69 1 35 1 96 2 187 2 15 4 336 1 256 4 237 2 18 1 130 1 342 2 
327 1 140 1 87 1 159 1 36 1 
327 1 257 1 140 1 
327 1 257 1 140 1 
327 1 257 1 140 1 
327 1 140 1 275 1 
327 1 140 1 275 1 
327 1 140 1 275 1 
327 1 140 1 
4 1 243 1 
41 1 103 1 254 1 150 1 
50 1 33 2 34 1 52 2 13 2 299 1 17 1 284 1 21 1 307 1 45 1 221 1 
184 1 50 1 17 1 33 2 129 1 285 1 307 1 34 1 21 1 52 2 11 1 13 2 45 1 221 1 
103 1 50 1 17 1 34 1 21 1 254 1 13 2 45 1 150 1 
302 1 206 1 50 3 17 3 156 1 34 3 21 1 11 1 340 1 228 1 13 6 45 3 
50 2 34 2 254 1 13 4 278 1 211 1 150 1 103 1 17 2 45 2 246 1 
103 1 16 1 254 1 278 1 150 1 211 1 
184 1 206 1 50 1 17 1 33 2 129 1 285 1 307 1 34 1 52 2 11 1 13 2 45 1 221 1 
302 1 11 1 340 1 
11 1 340 1 109 1 
11 1 340 1 
222 1 33 1 52 1 
11 1 44 1 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
184 1 33 1 52 1 11 1 73 1 221 1 
282 1 11 1 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
302 1 206 1 50 2 17 2 197 1 21 1 34 2 11 1 340 1 13 4 45 2 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
302 1 50 1 17 1 197 1 34 1 21 1 11 1 340 1 13 2 45 1 
302 1 206 1 50 2 17 2 197 1 34 2 21 1 11 1 340 1 13 4 45 2 
302 1 50 2 17 2 197 1 21 1 34 2 11 1 340 1 228 1 13 4 45 2 
103 1 254 1 278 1 150 1 211 1 
302 1 50 2 17 2 197 1 21 1 34 2 11 1 340 1 228 1 13 4 45 2 
172 1 112 1 215 1 329 1 105 1 220 1 320 1 
83 1 112 1 51 1 320 1 147 1 298 1 172 1 215 1 329 1 105 1 64 1 220 1 
314 1 204 4 67 1 223 4 277 1 121 1 76 1 190 1 213 4 155 1 218 1 157 1 286 1 
204 2 267 1 223 2 142 1 121 1 40 1 190 1 213 2 173 1 127 1 61 1 81 1 218 2 286 1 
324 1 190 1 263 1 204 1 213 1 67 1 58 1 223 1 338 1 218 1 
46 1 204 2 1 1 223 2 225 1 121 1 190 1 213 2 218 1 157 1 286 1 
314 1 204 5 67 1 267 1 223 5 225 1 277 1 230 1 121 3 76 1 190 2 213 4 218 2 157 1 286 2 341 1 
314 1 204 5 67 1 317 1 267 1 223 5 225 1 277 1 121 3 76 1 190 2 213 4 218 2 157 1 286 2 341 1 
29 1 111 1 204 1 67 1 223 1 142 1 121 1 149 1 190 1 213 1 215 1 329 2 105 1 331 1 218 1 286 1 63 1 220 2 
204 1 182 1 267 1 223 1 142 1 121 1 279 1 190 1 213 1 127 1 61 1 218 2 286 1 
190 1 76 1 204 1 213 1 67 1 16 1 223 1 218 1 286 1 277 1 121 1 
29 1 111 1 204 1 67 1 223 1 318 1 142 1 121 1 190 1 213 1 215 1 329 2 105 1 331 1 218 1 286 1 63 1 220 2 
29 1 111 2 204 1 267 1 223 1 318 1 142 2 119 1 231 1 121 3 300 1 325 1 190 1 213 1 215 1 329 2 105 2 331 1 218 1 133 1 286 2 63 1 220 2 
29 1 111 2 204 2 267 1 223 2 142 2 119 1 231 1 121 3 149 1 300 1 325 1 190 1 213 2 215 1 155 1 329 2 105 2 331 1 218 1 133 1 286 2 63 1 220 2 
204 3 67 1 267 1 223 3 142 1 335 1 119 1 12 1 188 1 121 4 15 1 123 1 300 1 99 1 190 1 213 3 155 1 237 1 218 1 286 1 259 2 201 2 26 1 
204 3 114 1 67 1 267 1 223 3 142 1 335 1 119 1 188 1 121 4 15 1 123 1 300 1 190 1 213 3 155 1 237 1 218 1 286 1 259 2 201 2 26 1 
190 1 204 1 213 1 205 1 223 1 218 1 
204 7 182 1 1 1 205 1 67 2 223 7 142 1 225 1 10 1 230 1 121 3 279 1 190 2 213 6 127 1 61 1 218 3 157 1 241 1 286 2 341 1 
223 1 318 1 142 1 50 2 270 1 88 1 278 1 13 4 150 1 190 1 98 1 103 1 17 2 329 2 105 1 331 1 286 1 23 2 63 1 157 1 158 1 28 1 29 1 111 1 204 1 115 2 34 2 254 1 121 1 211 1 213 1 218 1 219 1 220 2 45 2 
313 1 264 1 84 1 48 1 223 1 188 1 15 1 237 1 201 3 26 1 247 1 204 1 114 1 67 1 335 1 69 2 35 2 121 2 123 2 301 1 213 1 336 2 130 2 306 1 259 3 342 1 135 1 180 1 
204 2 182 1 205 1 223 2 142 1 121 2 190 1 213 2 79 1 218 2 157 1 286 1 26 1 
5 1 207 1 120 1 328 1 329 1 105 1 27 1 220 1 178 1 
292 1 128 1 27 1 
215 1 236 1 207 1 27 1 178 1 
313 1 163 1 292 1 207 2 188 1 231 1 38 1 15 1 325 1 171 1 215 1 236 2 237 1 128 1 133 1 259 2 27 1 201 2 178 2 
77 1 2 1 192 1 238 1 226 1 118 1 37 1 262 1 
2 4 141 1 290 1 143 1 226 2 118 4 227 2 37 3 77 1 101 1 192 2 238 1 19 1 179 1 
2 2 249 1 226 1 273 1 118 2 91 1 227 1 37 1 77 1 192 1 238 1 262 1 
2 3 290 1 141 2 226 1 118 3 37 1 77 1 280 1 192 1 238 1 262 1 179 2 
311 2 330 1 37 2 189 1 
288 1 77 1 2 1 238 1 118 1 262 1 
77 1 2 2 192 1 238 1 226 1 118 2 227 1 37 1 232 1 262 1 
92 1 
77 1 2 1 192 1 238 1 226 1 118 1 37 1 262 1 
192 1 16 1 226 1 37 1 
77 1 2 1 192 1 238 1 226 1 118 1 37 1 
252 1 118 1 293 1 
2 3 290 1 141 2 116 1 226 1 118 3 37 1 77 1 192 1 238 1 262 1 179 1 
77 1 2 2 192 1 238 1 226 1 131 1 118 2 227 1 37 1 
2 1 118 1 229 1 37 1 77 1 324 1 101 1 191 1 238 1 338 1 262 1 
77 1 2 1 238 1 226 1 118 1 37 1 262 1 
77 1 2 1 192 1 238 1 226 2 118 1 262 1 
2 2 86 1 185 1 226 1 118 2 8 1 37 1 77 2 238 2 262 1 
2 3 31 1 226 1 118 3 227 2 37 2 232 1 77 1 101 1 192 1 238 1 19 1 262 1 
2 2 164 1 226 1 118 2 227 1 37 1 77 1 324 1 192 1 191 1 58 1 238 1 338 2 262 1 245 1 
2 4 226 1 118 4 227 2 37 2 77 2 101 1 192 1 238 2 19 1 131 1 24 1 262 1 
77 1 2 3 192 1 141 1 238 1 226 1 118 3 227 1 37 1 232 1 262 1 
101 1 143 1 19 1 37 1 
226 1 37 1 

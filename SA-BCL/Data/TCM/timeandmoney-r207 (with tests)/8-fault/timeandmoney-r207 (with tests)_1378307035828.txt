#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (97,218) (97,218) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (5,87,120) (40,105,174) (40,105,174) (40,105,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (5,87,120) (40,105,174) (40,105,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (5,87,120) (40,105,174) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (5,87,120) (40,105,174) (40,105,174) (40,105,174) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 158 209 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (43,208) 41 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (43,208) 41 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (43,208) 288 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (43,208) 288 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (5,87,120) (5,87,120) (5,87,120) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (5,87,120) (5,87,120) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (5,87,120) (5,87,120) (5,87,120) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 4 125 1 204 2 73 1 336 1 156 1 337 1 338 9 294 6 76 2 178 1 298 2 257 3 102 2 302 4 213 1 111 1 191 2 168 2 309 1 70 9 353 1 170 2 196 1 151 1 42 1 
289 4 125 1 204 2 73 1 336 1 156 1 337 1 338 9 294 6 76 2 178 1 298 2 257 3 102 2 302 4 213 1 111 1 191 2 168 2 309 1 70 9 353 1 170 2 196 1 151 1 42 1 
289 4 125 1 204 2 73 1 336 1 156 1 337 1 338 9 294 6 76 2 178 1 298 2 257 3 102 2 302 4 213 1 111 1 191 2 168 2 309 1 70 9 353 1 170 2 196 1 151 1 42 1 
302 3 289 3 125 1 213 1 73 1 204 2 336 1 156 1 338 7 337 1 294 4 111 1 191 1 178 1 76 2 168 2 298 2 70 7 309 1 170 2 353 1 257 2 196 1 42 1 102 2 
302 2 289 2 73 1 156 1 338 4 294 3 111 1 76 1 191 2 168 1 298 1 70 4 170 1 257 1 151 1 102 1 
125 1 168 1 62 1 70 1 218 1 204 1 170 1 97 1 338 1 111 1 
302 1 222 1 289 2 212 1 204 1 338 3 294 1 111 1 168 2 70 3 170 2 196 1 257 1 
302 4 289 4 73 1 108 1 204 1 156 1 338 9 294 7 111 1 76 1 191 2 178 1 168 2 298 1 217 1 70 9 170 2 196 1 257 3 151 1 42 1 102 1 
302 4 289 4 73 1 108 1 204 1 156 1 338 9 294 7 111 1 76 1 191 2 178 1 168 2 298 1 217 1 70 9 170 2 196 1 257 3 151 1 42 1 102 1 
332 1 91 1 276 1 
146 1 
264 1 35 2 327 2 211 1 219 2 85 2 64 2 320 2 
199 1 200 1 21 1 22 1 176 1 320 3 77 1 180 1 6 1 7 1 49 1 30 1 64 2 236 1 136 1 139 1 53 2 35 2 327 2 211 1 186 1 54 1 348 1 262 1 165 2 281 2 85 2 264 1 330 1 283 1 114 1 352 2 115 2 219 3 355 1 195 1 314 1 
35 1 327 1 211 1 219 1 145 1 85 1 241 1 64 1 98 1 320 1 
268 1 238 1 332 1 82 1 96 1 85 1 241 1 233 1 320 1 272 1 100 1 219 1 276 1 340 1 
35 1 332 1 327 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 100 1 219 1 276 1 340 2 64 1 
272 1 201 1 340 1 278 1 343 1 
272 2 332 1 201 1 354 1 276 1 340 2 293 1 343 1 
272 1 201 1 340 1 
35 1 290 1 211 1 327 1 145 1 85 1 241 1 98 1 320 1 272 1 219 1 340 1 64 1 343 1 
332 1 
272 2 332 1 304 1 201 1 354 1 276 1 340 2 343 1 
332 1 0 2 103 1 202 1 201 2 229 1 232 1 295 1 272 5 354 1 276 1 119 1 340 5 92 2 206 1 9 1 341 2 343 2 221 1 
264 1 91 1 
35 1 224 1 327 1 14 1 85 2 320 2 264 2 219 2 64 1 
116 1 325 1 26 1 
53 1 126 1 22 1 54 1 262 1 281 1 320 1 264 1 330 1 352 1 7 1 49 1 219 1 30 1 236 1 314 1 
264 1 35 3 327 1 239 1 219 3 85 3 64 3 320 3 
35 1 219 1 85 1 241 1 64 1 98 1 320 1 
35 1 327 1 224 1 14 1 219 1 85 1 241 1 64 1 320 1 
199 1 200 1 224 1 22 1 176 1 96 1 233 1 320 4 272 1 77 1 100 1 180 1 49 1 183 1 7 1 130 1 340 1 30 1 64 3 236 1 136 1 53 1 35 3 327 2 211 1 239 1 54 1 82 1 348 1 262 1 165 2 281 1 85 3 241 1 264 1 330 1 283 1 114 1 352 1 17 1 115 1 219 4 195 1 314 1 
264 1 238 1 35 1 239 1 117 1 219 2 85 2 64 1 320 2 
35 3 332 1 327 1 224 1 239 2 82 1 96 1 85 3 241 1 233 1 320 3 88 1 272 1 100 1 183 1 130 1 219 3 340 1 64 3 
35 2 224 1 327 1 239 1 85 2 26 1 320 2 219 2 64 2 325 1 
53 1 22 1 54 1 262 1 281 1 320 1 264 1 330 1 352 1 7 1 49 1 219 1 30 1 236 1 314 1 
53 1 328 1 22 1 54 1 281 1 320 1 264 1 330 1 352 1 7 1 219 1 30 1 51 1 236 1 314 1 
199 1 200 1 173 1 45 1 21 2 176 1 25 1 26 2 77 1 129 1 161 1 256 1 325 2 342 1 140 1 348 2 165 2 110 1 329 1 283 1 350 1 115 4 116 2 195 1 
100 1 35 1 323 1 219 1 85 1 241 1 64 1 320 1 
53 1 35 1 22 1 239 1 54 1 262 1 281 1 85 1 320 2 330 1 352 1 7 1 49 1 130 1 219 2 30 1 325 1 64 1 236 1 314 1 
238 1 35 4 224 1 327 1 239 2 270 1 15 1 85 5 320 5 264 1 117 1 219 5 130 1 64 4 
35 2 323 1 219 2 85 2 241 1 64 2 98 1 320 2 
274 1 228 1 
274 1 228 1 
159 1 37 1 
159 1 37 1 
159 1 37 1 
274 1 214 1 228 1 
208 1 159 1 274 2 37 1 228 2 43 1 
274 1 266 1 228 1 
274 1 214 1 228 1 
274 1 214 1 228 1 
274 1 346 1 228 1 
274 1 346 1 228 1 
274 1 346 1 228 1 
332 1 291 2 269 2 334 1 228 2 47 1 272 2 113 1 274 2 234 1 28 1 253 1 181 2 182 2 340 2 255 3 11 2 33 1 43 1 
291 1 269 1 228 1 320 2 272 1 274 1 253 1 182 1 181 1 255 1 340 1 64 2 135 1 35 2 326 1 85 2 306 1 264 1 351 1 169 1 193 1 219 2 266 1 311 1 
76 1 298 1 102 1 
62 1 
62 1 
62 1 
62 1 
44 1 0 1 332 2 201 1 46 1 229 1 272 5 205 2 340 5 276 1 50 1 341 1 342 1 343 4 135 1 80 1 140 1 103 2 347 1 279 1 146 2 68 1 242 1 188 1 169 1 193 1 354 1 119 1 194 1 92 1 
332 5 0 2 201 6 46 2 23 1 271 5 229 4 272 9 129 1 161 1 340 9 276 1 50 4 207 1 341 2 342 3 278 5 343 7 80 1 140 3 163 1 103 6 347 3 279 3 146 7 68 2 242 4 282 1 169 4 354 1 119 1 92 2 247 1 312 1 221 1 
44 1 290 1 332 2 0 1 46 1 229 1 98 1 320 1 272 3 205 1 276 1 340 3 50 1 341 1 64 1 343 2 342 1 140 1 35 1 327 1 211 1 103 2 347 1 279 1 145 1 85 1 146 2 241 1 68 1 242 1 188 1 169 1 219 1 92 1 221 1 
44 1 0 1 46 1 229 1 320 1 272 4 276 1 50 2 140 2 327 1 279 2 145 1 146 4 85 1 241 1 242 2 188 1 92 1 332 3 290 1 23 1 98 1 205 2 340 4 341 1 207 1 64 1 342 2 343 3 35 1 211 1 103 4 347 2 68 1 169 2 219 1 221 1 312 1 
91 1 216 1 314 1 
223 1 314 1 
317 1 
30 1 314 1 
330 1 190 1 30 1 34 1 216 2 314 3 
330 1 30 1 314 1 
112 1 314 1 
58 1 237 1 173 2 143 1 21 4 94 1 292 1 348 3 157 1 61 1 251 1 350 3 78 2 129 1 115 7 342 1 198 1 
58 1 237 1 173 2 143 1 21 4 94 1 292 1 348 3 157 1 61 1 251 1 350 3 78 2 129 1 115 7 342 1 198 1 
58 1 237 1 173 2 143 1 21 4 94 1 292 1 348 3 157 1 177 1 61 1 251 1 350 3 78 2 129 1 115 7 342 1 198 1 
58 2 19 1 199 2 173 3 153 2 94 1 21 19 203 4 292 2 176 2 157 5 250 1 61 2 75 1 251 1 77 2 321 4 78 3 129 2 161 1 324 1 342 5 237 2 140 4 143 1 348 12 279 4 165 4 215 1 55 1 350 8 115 31 195 2 267 1 198 1 123 1 
124 1 58 1 199 2 173 3 153 1 21 5 94 1 176 2 292 1 157 1 61 1 77 2 78 2 129 1 342 1 237 1 260 1 143 1 348 4 165 4 350 4 115 9 195 2 198 1 
53 1 174 1 22 1 105 1 144 1 54 1 204 1 106 1 281 1 318 1 338 1 111 1 38 1 5 1 168 1 297 1 62 1 70 1 352 1 40 1 150 1 170 1 
53 1 174 1 22 1 164 1 54 1 204 1 106 1 281 1 318 1 74 1 338 2 147 1 294 1 38 1 5 1 168 1 297 1 62 1 70 2 352 1 40 1 150 1 170 1 
53 1 22 1 54 1 106 1 204 1 281 1 74 1 338 1 147 1 294 1 38 1 5 1 297 1 62 1 70 1 352 1 40 1 150 1 
22 1 249 1 204 2 230 1 338 1 48 1 297 2 7 1 30 1 134 1 53 1 164 1 106 2 83 1 54 1 281 1 38 2 168 1 352 1 70 1 90 1 170 1 314 1 
53 1 174 1 22 1 105 1 54 1 204 1 106 1 281 1 318 1 338 1 147 1 111 1 38 1 5 1 168 1 297 1 62 1 70 1 352 1 40 1 150 1 170 1 
227 1 
268 1 315 1 0 1 22 1 201 2 95 1 96 1 229 1 233 1 320 1 158 1 272 3 100 1 7 2 340 3 30 1 341 1 12 1 209 1 53 2 238 1 103 1 82 1 54 1 83 1 281 2 85 1 241 1 68 1 263 1 352 2 90 1 219 1 354 1 119 1 92 1 313 1 314 1 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 304 1 201 1 82 1 95 1 96 1 85 1 241 1 233 1 320 1 272 3 158 1 100 1 219 1 354 1 340 3 
12 1 209 1 238 1 268 1 0 1 82 1 95 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 119 1 92 1 341 1 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 268 1 238 1 95 1 82 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 
12 1 209 1 238 1 268 1 0 1 82 1 95 1 96 1 85 1 241 1 233 1 320 1 272 2 158 1 100 1 219 1 340 2 119 1 92 1 341 1 
199 1 237 1 173 2 200 1 21 3 143 1 94 1 292 1 176 1 348 3 165 2 25 1 26 1 264 2 283 1 77 1 78 1 350 2 116 1 129 1 115 6 91 1 195 1 325 1 342 1 198 1 
199 2 200 1 21 8 203 3 176 2 157 1 75 1 26 3 77 2 321 3 129 1 161 1 325 11 342 2 101 1 140 2 303 1 104 1 186 1 348 6 279 2 165 4 215 1 148 1 55 1 264 1 283 2 114 1 350 1 115 14 116 11 195 2 
199 1 200 1 22 1 126 1 21 1 176 1 26 1 320 2 77 1 49 1 7 1 130 1 30 1 64 1 236 1 53 1 35 1 239 1 186 1 54 1 262 1 348 1 281 1 165 2 85 1 148 1 264 1 330 1 283 1 114 1 352 1 219 2 265 1 115 2 246 1 195 1 314 1 71 1 
173 2 176 3 320 3 273 2 77 3 78 1 180 2 7 1 49 2 130 1 129 2 325 6 236 2 237 1 53 1 140 2 141 1 143 1 239 1 186 1 54 2 279 2 281 1 85 1 148 1 330 2 283 3 195 3 198 1 199 3 200 3 94 1 22 2 21 10 154 2 292 1 26 5 161 1 30 2 64 1 342 3 66 2 35 1 107 2 348 8 261 1 262 2 165 6 264 2 350 2 114 1 352 1 219 3 115 18 116 6 314 2 
199 2 200 2 1 1 22 2 21 1 176 2 25 1 320 1 77 2 7 2 185 1 30 2 64 1 53 8 35 1 142 1 239 1 144 1 186 1 54 2 83 1 109 1 348 1 281 8 165 4 85 1 147 1 283 2 149 1 114 1 352 7 90 1 219 1 115 2 118 1 56 1 355 2 195 2 314 3 
199 1 200 1 224 1 21 1 176 1 4 1 320 1 77 1 64 1 342 1 140 1 35 1 327 1 279 1 165 2 85 1 148 1 283 1 219 1 115 1 195 1 
199 1 140 1 200 1 45 1 21 2 176 1 165 2 157 1 25 1 26 1 283 1 77 1 350 1 116 1 115 2 195 1 325 1 342 1 
199 1 173 1 200 1 176 1 348 2 165 2 110 1 25 1 26 1 283 1 77 1 350 1 116 1 115 2 161 1 129 1 195 1 325 1 
199 1 140 1 200 1 21 2 176 1 279 1 165 2 25 1 26 1 283 1 77 1 116 1 115 2 195 1 325 1 342 1 
199 1 140 1 200 1 1 1 45 1 21 2 176 1 165 2 157 1 26 1 283 1 77 1 350 1 116 1 115 2 195 1 325 1 342 1 
199 1 173 1 200 1 1 1 176 1 348 2 165 2 110 1 26 1 283 1 77 1 350 1 116 1 115 2 161 1 129 1 195 1 325 1 
199 1 140 1 200 1 1 1 21 2 176 1 279 1 165 2 26 1 283 1 77 1 116 1 115 2 195 1 325 1 342 1 
199 1 140 1 200 1 21 2 176 1 279 1 165 2 26 1 283 1 77 1 116 1 115 2 195 1 325 1 342 1 
199 1 200 1 21 1 22 1 176 1 320 1 77 1 180 1 49 1 7 1 30 1 236 1 53 1 186 1 54 1 262 1 348 1 281 1 165 2 264 1 330 1 283 1 114 1 352 1 115 2 219 1 195 1 314 1 
199 1 200 1 21 1 22 1 176 1 320 1 128 1 77 1 7 1 30 1 51 1 236 1 53 1 328 1 186 1 54 1 348 1 281 1 165 2 264 1 330 1 283 1 114 1 352 1 115 2 219 1 195 1 314 1 
199 1 140 1 200 1 21 2 176 1 279 1 165 2 26 1 148 1 283 1 77 1 116 1 115 2 195 1 325 1 342 1 
199 1 200 1 21 2 22 1 176 1 26 1 320 1 273 1 77 1 180 1 49 1 30 1 325 1 342 1 236 1 140 1 53 1 144 1 54 1 262 1 279 1 281 1 165 2 330 1 283 1 352 1 116 1 115 2 219 1 195 1 314 1 
199 1 200 1 224 1 21 2 176 1 320 1 99 1 77 1 129 1 161 1 64 1 325 1 342 1 140 1 35 1 327 1 348 1 279 1 165 2 85 1 148 1 283 1 219 1 115 3 116 1 195 1 
199 2 93 1 21 22 72 1 203 4 176 2 127 1 157 5 231 1 75 2 77 2 321 4 179 1 129 2 161 2 131 1 342 7 52 1 344 1 140 7 210 1 67 1 260 1 305 1 348 12 279 7 280 1 165 4 215 2 55 2 349 1 350 5 115 34 195 2 121 3 
199 2 93 1 21 22 72 1 203 4 176 2 127 1 157 5 231 1 75 2 77 2 321 4 179 1 129 2 161 2 131 1 342 7 52 1 344 1 140 7 210 1 67 1 260 1 305 1 348 12 279 7 280 1 165 4 215 2 55 2 349 1 350 5 115 34 195 2 121 3 
199 1 173 1 93 1 94 1 21 25 72 1 203 4 292 1 176 1 127 1 157 6 75 2 77 1 321 4 179 1 78 1 129 3 161 2 131 1 342 8 52 1 344 1 237 1 140 7 210 1 67 1 260 1 305 1 143 1 348 14 279 7 280 1 165 2 215 2 55 2 349 1 350 7 115 39 195 1 121 3 198 1 
199 2 225 1 93 1 21 21 72 1 203 4 176 2 127 1 157 5 231 1 75 2 77 2 321 4 179 1 129 1 161 1 131 1 342 7 52 1 344 1 140 7 210 1 67 1 260 1 348 9 279 7 280 1 165 4 215 2 55 2 349 1 350 5 115 30 195 2 121 2 
199 1 93 1 21 9 72 1 203 2 176 1 127 1 75 2 77 1 179 2 321 2 129 1 161 1 131 1 342 2 52 1 344 2 140 2 210 1 260 1 67 1 305 1 348 7 279 2 165 2 280 1 349 1 115 16 195 1 121 2 
113 1 274 1 28 1 291 1 299 1 269 1 182 1 181 1 228 1 43 1 
351 1 266 1 
274 1 291 1 245 1 269 1 182 1 181 1 275 1 228 1 235 1 
332 1 291 1 269 1 334 1 228 1 47 1 272 1 113 1 274 1 28 1 253 1 181 1 182 1 340 1 255 2 11 1 33 1 43 1 
332 1 291 1 269 1 334 1 228 1 47 1 272 1 113 1 274 1 28 1 253 1 181 1 182 1 340 1 255 2 11 1 33 1 43 1 
332 1 291 1 269 1 334 1 228 1 47 1 272 1 113 1 274 1 28 1 253 1 181 1 182 1 340 1 255 2 11 1 33 1 43 1 
208 1 214 1 41 1 
208 1 214 1 41 1 
346 1 288 1 
208 1 346 1 288 1 
326 1 311 1 
291 1 269 1 334 1 228 1 320 2 272 1 274 1 182 1 181 1 300 1 340 1 255 1 11 1 64 2 343 1 135 1 326 1 35 2 306 1 85 2 264 1 351 1 169 1 193 1 219 2 266 1 311 1 
214 1 41 1 
208 1 346 1 288 1 
172 1 199 1 200 1 316 1 22 1 226 1 21 1 176 1 320 2 77 1 185 1 30 1 258 1 53 2 142 1 186 1 54 1 348 1 281 2 165 2 85 2 307 1 148 1 283 1 114 1 352 2 219 2 115 2 355 2 195 1 314 1 
53 2 22 1 144 1 54 1 281 2 318 1 147 1 87 1 297 1 5 1 62 1 352 2 287 1 150 1 120 1 
53 1 81 1 22 1 54 1 281 1 318 1 147 1 87 1 297 1 5 1 62 1 352 1 150 1 
53 1 22 1 54 1 83 1 281 1 297 1 352 1 287 1 7 1 90 1 30 1 134 1 314 1 138 1 
53 1 22 1 54 1 281 1 318 1 147 1 87 1 297 1 5 1 62 1 352 1 287 1 150 1 120 1 
167 1 
332 1 103 1 202 1 91 1 276 1 229 1 295 1 
0 1 332 1 201 1 229 1 272 1 339 1 29 1 340 1 276 1 341 1 103 1 347 1 146 1 240 1 354 1 119 1 92 1 
0 3 223 3 229 8 233 2 272 5 7 1 129 2 276 1 8 2 50 6 53 1 140 2 54 1 279 2 281 1 146 6 243 2 242 6 330 1 89 1 286 1 192 2 92 3 332 1 22 2 201 5 296 1 254 2 161 2 340 5 30 1 341 3 34 1 342 2 66 2 103 7 68 2 263 1 216 2 352 1 354 3 119 3 171 2 314 6 
0 1 93 1 203 1 229 2 75 1 321 1 131 1 50 3 341 1 342 2 52 1 140 2 67 1 103 4 279 2 280 1 146 2 242 3 119 1 92 1 
0 1 290 1 155 2 292 1 229 2 98 1 320 1 272 1 129 1 340 1 10 1 341 1 64 1 342 2 237 1 35 1 211 1 327 1 143 1 103 2 84 1 145 1 85 1 241 1 308 1 219 1 119 1 92 1 
0 1 332 1 202 1 103 1 229 1 295 1 119 1 276 1 92 1 341 1 
140 1 332 1 103 2 347 1 279 1 50 1 146 2 242 1 342 1 
272 1 332 1 201 1 354 1 276 1 340 1 
315 1 0 2 22 1 201 4 229 2 272 3 27 1 7 2 340 3 132 1 30 1 341 2 137 2 53 4 103 2 54 1 83 1 281 4 68 2 263 2 352 4 90 1 354 2 119 1 92 2 221 1 313 1 197 1 314 1 
199 1 200 1 22 1 176 1 320 3 77 1 180 1 7 1 49 1 30 1 64 2 236 1 136 1 53 1 35 2 327 2 211 1 54 1 348 1 262 1 165 2 281 1 85 2 264 1 330 1 283 1 114 1 352 1 115 1 219 3 195 1 314 1 
0 1 332 1 103 1 229 1 146 1 68 1 242 1 263 1 119 1 276 1 92 1 341 1 
2 1 291 1 269 1 
113 1 291 1 269 1 301 1 311 1 
2 1 291 1 269 1 
2 1 291 1 269 1 
291 1 269 1 32 1 
291 1 269 1 32 1 
291 1 269 1 32 1 
291 1 269 1 
274 1 228 1 
199 1 173 2 21 4 94 1 203 1 176 1 292 1 75 1 77 1 321 1 78 1 129 1 131 1 342 1 237 1 260 1 143 1 348 4 165 2 350 2 115 8 195 1 198 1 
199 2 93 1 21 11 203 2 176 2 157 2 75 1 77 2 321 2 322 1 161 3 129 3 131 1 342 4 52 1 140 4 67 1 260 1 348 9 279 4 280 1 165 4 215 1 55 1 350 2 115 20 195 2 
199 2 93 1 21 6 203 1 176 2 157 1 75 1 77 2 321 1 322 1 131 1 342 2 52 1 140 2 260 1 67 1 348 2 279 2 165 4 280 1 350 1 115 8 195 2 
199 2 93 1 21 6 203 1 176 2 75 1 77 2 321 1 322 1 161 1 129 1 131 1 342 2 52 1 140 2 260 1 67 1 348 4 279 2 165 4 280 1 115 10 195 2 
199 1 173 2 21 4 94 1 203 1 176 1 292 1 75 1 77 1 321 1 78 1 129 1 131 1 342 1 237 1 260 1 143 1 348 4 165 2 350 2 115 8 195 1 198 1 
140 2 199 1 67 1 260 1 93 1 21 6 203 1 176 1 279 2 348 2 280 1 165 2 157 1 75 1 77 1 321 1 350 1 115 8 131 1 195 1 342 2 52 1 
199 2 93 1 21 6 203 1 176 2 75 1 77 2 321 1 322 1 161 1 129 1 131 1 342 2 52 1 140 2 260 1 67 1 348 4 279 2 165 4 280 1 115 10 195 2 
199 2 93 1 21 6 203 1 176 2 157 1 231 1 75 1 77 2 321 1 129 1 161 1 131 1 342 2 52 1 140 2 260 1 67 1 348 4 279 2 165 4 280 1 350 1 115 10 195 2 
237 3 173 3 94 1 143 1 21 3 292 3 348 4 157 3 350 6 129 1 115 7 198 2 342 1 
199 2 93 1 21 6 203 1 176 2 231 1 75 1 77 2 321 1 161 1 129 1 131 1 342 2 52 1 140 2 260 1 67 1 348 4 279 2 165 4 280 1 115 10 195 2 
199 2 237 1 173 2 153 1 143 1 21 4 94 1 176 2 292 1 348 4 165 4 157 1 77 2 78 1 350 3 129 1 115 8 195 2 342 1 198 1 
237 1 173 2 94 1 143 1 21 3 292 1 348 3 78 1 350 2 91 1 115 6 129 1 198 1 342 1 
199 1 140 1 21 2 176 1 279 1 165 2 77 1 322 1 115 2 195 1 342 1 
140 2 21 6 203 2 348 2 279 2 157 2 215 1 75 1 55 1 321 2 350 2 115 8 342 2 
199 2 173 5 153 2 21 14 94 1 203 2 292 4 176 2 157 5 77 2 321 2 78 1 129 2 324 1 342 4 237 4 140 2 143 2 104 1 84 1 279 2 348 12 165 4 215 1 55 1 350 10 115 26 195 2 198 1 
321 1 115 1 348 1 
21 1 203 1 115 1 
66 1 140 1 21 3 348 1 279 1 157 1 350 1 115 4 342 1 
140 2 199 1 67 1 260 1 93 1 21 6 203 1 176 1 279 2 348 2 280 1 165 2 157 1 75 1 77 1 321 1 350 1 115 8 131 1 195 1 342 2 52 1 
237 1 173 1 143 1 21 3 292 1 348 3 157 1 350 2 115 6 129 1 342 1 
237 1 199 1 173 1 153 1 21 1 94 1 292 1 176 1 348 2 165 2 157 1 77 1 350 2 115 3 195 1 324 1 198 1 
199 1 237 2 173 3 260 1 21 5 143 1 176 1 292 2 84 1 348 5 165 2 157 2 77 1 350 5 115 10 129 2 195 1 342 2 
199 1 140 1 260 1 21 2 176 1 165 2 157 1 77 1 350 1 115 2 195 1 342 1 
199 1 140 1 260 1 21 2 176 1 348 2 279 1 165 2 157 1 77 1 350 1 129 1 161 1 115 4 195 1 342 1 
199 3 237 1 173 1 153 1 260 1 21 1 176 3 292 1 348 2 165 6 157 1 231 1 77 3 350 2 115 3 195 3 324 1 
19 1 199 5 173 4 153 2 94 1 21 20 203 4 292 3 176 5 157 6 250 1 231 1 75 1 77 5 321 4 322 1 78 1 161 3 129 5 324 1 342 6 237 3 140 4 260 1 143 2 348 19 279 4 165 10 215 1 55 1 350 10 115 39 195 5 198 1 123 1 
264 1 238 1 219 1 117 1 85 1 122 1 320 1 
238 1 175 1 60 1 85 1 320 1 264 1 160 1 117 1 219 1 133 1 162 1 122 1 
53 1 22 1 352 1 90 1 7 1 54 1 83 1 91 1 30 1 281 1 314 1 
53 1 35 1 22 1 239 1 54 1 262 1 281 1 85 1 320 2 264 1 330 1 352 1 7 1 219 2 30 1 64 1 236 1 314 1 
22 1 96 1 320 2 100 1 30 2 64 1 236 1 137 1 53 1 35 2 239 1 54 1 262 1 187 1 281 1 85 2 241 1 264 1 330 2 112 1 352 1 219 2 314 3 
22 1 96 1 320 2 100 1 30 2 51 1 64 1 236 1 137 1 53 2 35 2 239 1 54 1 187 1 281 2 85 2 241 1 264 1 330 2 112 1 352 2 310 1 219 2 314 3 
332 1 223 1 201 1 22 1 24 1 233 1 272 2 7 1 184 1 340 2 276 1 30 1 137 1 53 3 54 1 187 1 281 3 216 1 330 1 112 1 352 3 310 1 314 4 
53 3 332 1 223 1 22 1 201 1 54 1 187 1 281 3 233 1 216 1 330 1 272 2 112 1 192 1 352 3 7 1 310 1 276 1 340 2 30 1 137 1 314 4 
53 1 149 1 22 1 352 1 54 1 281 1 
53 7 20 1 22 3 144 1 54 2 109 1 281 7 147 1 86 1 330 1 149 1 63 1 352 6 7 2 185 1 118 1 56 1 355 1 30 2 34 1 314 3 
173 2 316 1 176 2 320 2 273 1 77 2 78 1 180 1 49 1 129 1 325 1 236 1 53 1 237 1 239 1 143 1 144 1 54 1 281 1 85 1 148 1 330 1 283 2 195 2 198 1 199 2 200 2 22 1 94 1 21 3 154 1 292 1 26 1 30 1 64 1 342 1 35 1 262 1 348 3 165 4 264 2 350 2 352 1 219 2 115 6 116 1 314 1 
332 1 0 2 223 1 202 1 201 2 229 1 295 1 233 1 272 3 254 1 7 1 276 1 340 3 8 1 341 2 343 1 53 1 103 1 281 1 243 1 216 1 192 1 352 1 354 1 119 2 92 2 197 1 314 2 
53 1 22 2 54 1 281 1 317 1 216 1 330 1 149 1 286 1 352 1 30 1 34 1 314 2 
53 4 22 1 144 1 83 1 54 1 281 4 352 4 7 1 90 1 310 1 30 1 65 1 314 1 
53 2 22 2 54 1 281 2 86 1 330 1 285 1 63 1 352 2 79 1 30 1 57 1 137 1 314 1 
53 1 62 1 22 1 352 1 7 1 54 1 150 1 281 1 
53 2 22 1 144 1 54 1 281 2 147 1 352 2 185 1 30 1 258 1 314 1 
53 5 22 2 144 1 83 1 54 2 109 1 281 5 352 4 90 1 7 1 185 1 118 1 30 2 65 1 137 1 314 3 
53 5 22 2 144 1 83 1 54 2 281 5 69 1 352 4 90 1 7 1 185 1 118 1 30 2 65 1 137 1 314 3 
53 1 35 1 22 1 239 1 54 1 281 1 85 1 320 2 264 1 330 1 352 1 7 1 219 2 30 1 51 1 64 1 236 1 314 1 
53 1 20 1 22 2 54 1 281 1 86 1 330 1 63 1 352 1 30 1 34 1 137 1 314 1 
264 1 152 1 333 1 36 1 277 1 
152 2 332 1 331 1 333 2 13 1 36 2 82 1 96 1 241 1 233 1 264 1 272 2 100 1 183 1 276 1 277 1 340 2 220 1 343 1 
172 1 333 1 36 1 226 1 85 1 307 1 320 1 219 1 277 1 
331 1 277 1 220 1 
289 1 222 1 212 1 91 1 
289 1 222 1 168 1 212 1 70 1 170 1 338 1 
204 1 106 1 338 1 
289 1 222 1 345 1 212 1 335 1 336 2 338 3 111 1 168 1 252 1 70 3 170 1 
191 1 289 1 222 1 168 1 212 1 70 2 170 1 338 2 294 1 
302 1 289 1 156 1 338 1 111 1 76 1 168 1 298 1 70 1 170 1 102 1 
289 1 168 1 212 1 70 1 170 1 338 1 111 1 
222 1 168 1 212 2 70 1 170 1 338 1 111 1 
289 1 168 2 284 1 212 1 70 2 170 2 338 2 319 1 111 1 189 1 
302 1 222 1 289 2 212 1 338 3 294 2 111 1 178 1 168 1 70 3 170 1 257 1 42 1 
168 1 70 1 62 1 170 1 31 1 338 1 111 1 
302 1 222 1 289 2 212 1 338 4 294 2 111 1 191 1 168 2 70 4 170 2 257 1 151 1 
289 1 222 1 168 1 212 1 70 1 170 1 338 1 111 1 
302 1 222 2 259 1 289 3 345 1 212 2 336 1 338 4 294 2 252 1 168 1 70 4 170 1 257 1 
289 1 222 1 212 1 108 1 338 2 294 1 111 1 244 1 16 1 168 1 70 2 170 1 
289 1 222 1 345 1 212 1 248 1 336 2 338 3 111 1 168 1 252 2 70 3 170 1 
289 2 18 2 59 1 166 1 
168 1 70 1 3 1 170 1 338 1 111 1 
178 1 289 1 222 1 168 1 212 1 70 2 170 1 338 2 294 1 111 1 
39 1 
289 1 222 1 168 1 212 1 70 1 170 1 338 1 111 1 
178 1 289 1 222 1 168 1 212 1 70 3 170 1 336 1 338 3 294 1 111 1 
302 1 259 1 289 1 257 1 
289 1 212 1 

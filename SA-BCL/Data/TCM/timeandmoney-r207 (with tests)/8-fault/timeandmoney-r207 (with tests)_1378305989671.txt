#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 330 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 330 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (36,238) 176 244 (284,366) 10 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 331 315 276 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 214 (36,238) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (36,238) 176 244 (284,366) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 1 126 1 155 9 104 2 34 1 199 1 158 2 223 2 334 1 312 1 204 6 161 1 112 3 58 1 230 2 91 1 165 2 234 9 371 1 119 4 208 2 145 5 257 1 147 2 349 1 213 1 70 1 150 1 
26 1 126 1 104 2 155 9 34 1 199 1 158 2 223 2 334 1 312 1 204 6 161 1 112 3 58 1 230 2 91 1 165 2 234 9 371 1 119 4 208 2 145 5 257 1 147 2 349 1 213 1 70 1 150 1 
26 1 126 1 104 2 155 10 34 1 199 1 158 2 223 2 334 1 312 1 204 7 161 1 112 4 58 1 230 2 91 1 165 2 234 10 371 1 119 5 208 2 145 6 257 1 147 2 349 1 213 1 70 1 150 1 
26 1 126 1 104 2 155 7 34 1 199 1 158 2 223 2 334 1 312 1 204 4 161 1 112 2 58 1 230 2 91 1 165 1 234 7 371 1 119 3 208 2 145 4 257 1 147 2 213 1 70 1 150 1 
165 2 155 4 104 1 234 4 371 1 119 2 145 3 223 1 158 1 334 1 147 1 349 1 204 3 161 1 70 1 150 1 112 1 230 1 
155 2 234 2 208 1 143 1 34 1 145 1 158 1 287 1 223 1 334 1 147 1 291 1 312 1 161 1 70 1 230 1 
126 1 155 3 234 3 119 1 208 1 145 2 158 2 334 1 204 1 161 1 70 1 112 1 230 2 
126 1 155 9 104 1 220 1 199 1 158 2 223 1 334 1 204 7 161 1 112 3 230 2 165 2 234 9 119 4 371 1 208 1 272 1 145 5 257 1 147 1 349 1 70 1 150 1 
126 1 155 9 104 1 220 1 199 1 158 2 223 1 334 1 204 7 161 1 112 3 230 2 165 2 234 9 119 4 371 1 208 1 272 1 145 5 257 1 147 1 349 1 70 1 150 1 
19 1 353 1 132 1 
217 1 154 2 353 1 
191 2 183 2 160 2 149 2 100 2 124 1 76 2 231 1 
194 1 216 1 0 2 196 1 28 2 306 1 262 1 358 1 76 2 357 1 359 2 200 1 308 1 36 1 201 1 183 3 264 1 160 2 202 1 365 1 231 1 339 1 136 1 62 1 319 1 189 1 321 2 41 2 95 1 210 1 191 2 239 1 98 1 149 2 100 3 124 1 24 1 
191 1 288 1 183 1 160 1 304 1 149 1 100 1 162 1 76 1 231 1 
317 1 353 1 30 1 76 1 181 1 329 1 48 1 183 1 274 1 192 1 304 1 100 1 375 1 132 1 
317 2 353 1 30 2 76 1 181 1 329 1 191 1 183 1 274 1 160 1 149 1 304 1 100 1 375 1 132 1 
317 1 2 1 30 1 11 1 38 1 
317 2 2 1 353 1 53 1 30 2 172 1 38 1 132 1 
317 1 2 1 30 1 
317 1 30 1 76 1 307 1 288 1 191 1 183 1 160 1 304 1 149 1 100 1 162 1 38 1 231 1 
353 1 
317 2 282 1 2 1 353 1 53 1 30 2 38 1 132 1 
317 5 43 2 153 1 195 1 2 2 353 1 30 5 46 1 289 1 129 1 324 1 53 1 22 2 186 1 249 1 277 1 228 2 38 2 132 1 
19 1 124 1 
191 1 183 2 160 1 197 1 149 1 127 1 100 2 124 2 76 2 
224 1 281 1 207 1 
339 1 216 1 28 1 321 1 262 1 357 1 358 1 360 1 359 1 95 1 308 1 36 1 183 1 201 1 100 1 124 1 
216 1 339 1 28 1 321 1 262 1 358 1 357 1 76 1 359 1 95 1 362 1 308 1 224 1 36 1 191 1 201 1 183 2 292 1 149 1 100 2 
127 1 76 5 235 1 372 1 362 1 6 1 191 4 183 5 160 1 292 2 192 1 149 4 100 5 124 1 
144 1 191 2 183 2 304 1 149 2 100 2 162 1 76 2 
191 3 183 3 160 1 292 1 149 3 100 3 124 1 76 3 
191 1 183 1 304 1 149 1 100 1 162 1 76 1 
191 1 183 1 160 1 197 1 304 1 149 1 127 1 100 1 76 1 
216 1 0 2 196 1 28 1 306 1 262 1 127 1 30 1 358 1 357 1 76 3 359 1 181 1 329 1 308 1 362 1 36 1 201 1 183 4 264 1 160 2 292 1 365 1 231 1 317 1 339 1 136 1 62 1 14 1 189 1 344 1 321 1 41 1 95 1 210 1 191 3 274 1 239 1 98 1 149 3 304 1 100 4 124 1 375 1 
191 1 183 2 292 1 192 1 149 1 100 2 124 1 76 2 235 1 
317 1 353 1 344 1 127 1 30 1 76 3 329 1 181 1 362 1 63 1 191 3 183 3 274 1 160 1 292 2 304 1 149 3 100 3 375 1 
127 1 207 1 76 2 191 2 224 1 183 2 160 1 292 1 149 2 100 2 
339 1 216 1 28 1 321 1 262 1 357 1 358 1 359 1 95 1 308 1 36 1 183 1 201 1 100 1 124 1 
339 1 216 1 28 1 321 1 75 1 262 1 357 1 358 1 359 1 246 1 95 1 183 1 201 1 100 1 124 1 
0 2 281 2 196 1 243 1 45 1 306 1 200 2 224 2 9 1 83 1 60 1 299 1 39 1 136 2 166 1 189 1 302 1 41 4 207 2 269 1 210 1 239 1 68 1 98 1 
144 1 191 1 183 1 304 1 149 1 100 1 76 1 181 1 
156 1 193 1 
156 1 193 1 
168 1 254 1 
168 1 254 1 
168 1 254 1 
156 1 193 1 173 1 
320 1 156 1 193 1 
168 1 254 1 82 1 156 2 229 1 193 2 120 1 
156 1 193 1 173 1 
156 1 193 1 173 1 
131 1 156 1 193 1 
131 1 156 1 193 1 
131 1 156 1 193 1 
152 1 30 1 356 1 156 1 76 2 183 2 110 1 311 1 313 1 84 1 317 1 61 1 320 1 267 1 121 1 271 1 191 2 212 1 374 1 67 1 149 2 100 2 124 1 193 1 
152 2 317 2 102 1 92 1 341 1 353 1 267 1 117 1 30 2 156 2 77 1 121 2 78 2 47 1 212 2 313 2 84 3 229 1 193 2 
223 1 147 1 104 1 
223 1 287 1 147 1 
5 1 287 1 184 1 147 3 104 2 71 1 
287 1 184 1 147 2 170 1 104 1 71 1 
287 1 184 2 147 2 104 1 71 1 
317 4 2 1 353 1 30 4 270 1 286 1 330 1 256 1 226 1 53 1 38 3 132 1 
317 4 2 2 353 1 74 1 105 1 30 4 245 1 270 1 330 1 53 1 11 1 38 3 132 1 
217 2 43 1 153 2 154 4 353 3 30 3 356 1 286 1 330 1 46 3 35 2 332 1 247 2 226 1 228 1 38 2 132 1 317 3 299 1 251 1 166 1 269 1 256 1 68 1 22 1 277 1 
217 3 43 1 153 4 154 7 353 4 30 4 356 2 286 1 35 4 330 1 46 5 4 1 247 4 332 1 226 2 54 1 228 1 250 1 38 3 132 1 317 4 299 2 251 2 166 2 269 2 256 1 68 2 22 1 277 1 
201 1 19 1 248 1 
201 1 325 1 
25 1 
216 1 201 1 358 1 
201 1 21 1 
216 1 201 1 
216 1 201 3 40 1 327 1 248 2 358 1 
279 2 134 1 136 7 177 2 166 3 243 5 108 1 41 15 347 1 200 8 122 2 273 1 146 1 42 1 68 3 9 4 293 2 215 1 
279 2 134 1 136 7 177 2 166 3 243 7 108 1 41 15 347 1 200 8 122 2 273 1 146 3 42 1 68 3 9 4 293 2 215 1 
279 2 134 1 136 7 177 2 166 3 243 5 354 1 108 1 41 15 347 1 200 8 122 2 273 1 146 1 42 1 68 3 9 4 293 2 215 1 
279 2 0 2 177 3 196 1 243 14 106 1 108 2 200 21 331 3 293 3 9 7 315 1 163 1 299 3 134 2 187 4 251 3 136 20 137 1 166 6 189 1 41 41 347 1 269 3 210 1 211 1 122 3 273 1 146 7 42 1 148 1 68 6 98 1 350 1 215 1 
279 2 0 4 177 2 196 2 243 7 108 1 200 9 293 2 9 5 134 1 136 8 137 1 166 3 189 2 346 1 41 17 210 2 64 1 122 2 273 1 146 2 42 1 68 3 98 2 215 1 
27 1 28 1 104 1 155 2 262 1 357 1 359 1 5 1 223 1 158 1 287 1 334 1 336 1 310 1 294 1 204 1 161 1 57 1 59 1 230 1 300 1 301 1 321 1 370 1 234 2 208 1 145 1 373 1 147 2 70 1 
27 1 28 1 104 1 155 3 262 1 357 1 359 1 5 1 223 1 158 1 287 1 334 1 336 1 310 1 204 2 57 1 59 1 230 1 252 1 301 1 321 1 370 1 234 3 208 1 96 1 145 1 373 1 147 2 275 1 70 1 
27 1 28 1 155 2 104 1 262 1 357 1 359 1 5 1 287 1 223 1 334 1 336 1 310 1 204 2 57 1 59 1 321 1 234 2 208 1 96 1 145 1 373 1 147 2 275 1 70 1 
216 1 44 1 28 1 155 1 262 1 357 1 31 1 359 1 158 1 201 1 59 2 57 2 230 1 339 1 252 1 253 1 321 1 116 1 234 1 322 1 208 2 373 2 169 1 
27 1 28 1 104 1 155 1 262 1 357 1 359 1 5 1 223 1 158 1 287 1 336 1 310 1 161 1 57 1 59 1 230 1 300 1 301 1 321 1 370 1 234 1 208 1 373 1 147 2 275 1 
140 1 
101 2 43 1 153 2 195 1 154 2 44 1 2 6 46 2 329 1 332 1 201 1 49 1 48 1 335 4 52 1 53 3 338 1 339 2 343 1 17 2 258 2 20 1 22 1 304 1 171 1 261 1 23 1 217 2 216 1 218 1 305 1 125 2 353 2 28 2 262 1 30 5 31 1 357 1 76 1 359 2 181 1 309 1 183 1 228 1 132 1 317 5 89 2 321 2 141 2 237 2 274 1 192 1 100 1 375 1 377 1 
305 1 282 1 2 2 30 3 76 1 181 1 329 1 183 1 48 1 49 1 335 2 53 1 317 3 237 1 274 1 192 1 304 1 100 1 375 1 261 1 23 1 377 1 
305 1 125 1 282 1 2 1 353 1 30 3 76 1 181 1 329 1 183 1 48 1 49 1 335 3 53 1 132 1 317 3 274 1 192 1 304 1 100 1 375 1 261 1 23 1 377 1 
305 1 282 1 125 1 2 2 353 1 30 3 76 1 181 1 329 1 183 1 48 1 49 1 335 3 53 1 132 1 317 3 237 1 274 1 258 1 192 1 304 1 100 1 375 1 261 1 23 1 377 1 
101 2 43 1 282 1 195 1 153 1 2 7 329 1 46 1 49 1 48 1 335 6 52 1 111 1 53 3 297 1 343 1 17 2 258 4 259 1 22 1 304 1 23 1 261 1 217 2 305 1 125 4 353 5 30 5 76 1 181 1 182 1 183 1 228 1 132 5 317 5 133 1 89 2 141 2 237 4 274 1 192 1 100 1 375 1 377 1 
217 2 101 2 305 1 43 1 125 2 153 1 195 1 2 4 154 2 353 2 30 4 76 1 46 1 181 1 329 1 48 1 49 1 183 1 335 4 52 1 53 2 228 1 132 1 317 4 89 2 343 1 141 2 237 2 17 2 274 1 258 2 192 1 22 1 304 1 171 1 100 1 375 1 261 1 23 1 377 1 
217 2 101 2 43 1 305 1 125 2 153 1 195 1 2 4 353 1 30 4 76 1 46 1 181 1 329 1 182 1 183 1 48 1 49 1 52 1 335 4 53 2 228 1 297 1 132 1 317 4 89 2 343 1 141 2 237 2 17 2 274 1 258 2 259 1 192 1 22 1 304 1 100 1 375 1 261 1 23 1 377 1 
217 2 101 2 43 1 305 1 125 2 153 1 195 1 2 4 353 1 30 4 76 1 46 1 181 1 329 1 182 1 183 1 48 1 49 1 52 1 335 4 53 2 228 1 297 1 132 1 317 4 89 2 343 1 141 2 237 2 17 2 274 1 258 2 259 1 192 1 22 1 304 1 100 1 375 1 261 1 23 1 377 1 
43 1 305 1 125 2 153 1 195 1 2 4 154 2 353 1 30 4 76 1 46 1 181 1 329 1 183 1 48 1 49 1 225 1 335 4 53 2 37 1 228 1 132 1 317 4 89 2 139 1 343 1 237 2 190 2 17 2 274 1 66 2 258 2 259 1 192 1 22 1 304 1 100 1 375 1 261 1 23 1 377 1 
217 2 101 2 43 1 305 1 153 1 195 1 125 3 2 5 353 1 30 4 76 1 46 1 181 1 329 1 182 1 183 1 48 1 49 1 52 1 335 5 53 2 228 1 297 1 132 1 317 4 133 1 89 2 343 1 141 2 17 2 237 3 274 1 258 3 259 1 192 1 22 1 304 1 100 1 375 1 261 1 23 1 377 1 
217 2 101 2 43 1 305 1 153 1 195 1 125 3 2 5 353 1 30 4 76 1 46 1 181 1 329 1 182 1 183 1 48 1 49 1 52 1 335 5 53 2 228 1 297 1 132 1 317 4 133 1 89 2 343 1 141 2 17 2 237 3 274 1 258 3 259 1 192 1 22 1 304 1 100 1 375 1 261 1 23 1 377 1 
305 1 43 1 125 2 153 1 195 1 2 4 154 2 353 1 30 4 76 1 46 1 181 1 329 1 48 1 49 1 183 1 335 4 53 2 37 1 228 1 132 1 317 4 89 2 343 1 237 2 190 2 17 2 274 1 66 2 258 2 192 1 22 1 304 1 171 1 100 1 375 1 261 1 23 1 377 1 
279 1 0 2 177 1 281 1 196 1 243 2 45 1 306 1 200 3 224 1 9 2 293 1 136 3 166 1 189 1 207 1 41 6 210 1 122 1 273 1 19 1 239 1 98 1 68 1 124 2 215 1 
194 1 0 4 281 11 196 2 179 1 243 2 306 1 200 8 331 3 224 11 264 1 8 1 9 1 315 1 299 2 88 1 187 3 251 2 136 6 166 1 189 2 41 14 207 4 268 1 269 1 210 2 211 1 239 2 146 1 98 2 68 2 124 1 241 1 
216 1 194 1 0 2 196 1 28 1 262 1 306 1 198 1 358 1 357 1 76 1 128 1 359 1 360 1 308 1 362 1 200 1 36 1 201 1 183 2 264 1 292 1 339 1 88 1 136 1 189 1 321 1 207 1 41 2 95 1 210 1 191 1 239 1 123 1 98 1 149 1 100 2 124 1 
279 2 194 1 0 6 281 7 196 3 242 2 243 7 328 1 200 14 201 2 292 1 293 1 9 6 299 2 339 1 251 2 62 2 166 5 207 7 210 3 122 2 68 5 304 1 124 3 215 1 216 2 177 2 28 1 306 3 262 2 76 1 357 2 358 2 32 2 359 1 362 1 308 2 36 2 224 7 183 3 264 1 185 1 366 2 316 2 88 1 136 14 93 1 189 3 321 1 41 28 269 2 95 2 191 1 273 1 239 3 146 1 42 1 98 3 149 1 100 3 
194 1 0 4 196 2 44 1 283 1 285 1 45 1 200 1 333 1 201 4 202 2 292 1 294 1 339 2 210 2 303 1 69 1 216 3 219 1 28 7 306 2 262 3 31 1 357 4 358 1 76 1 359 7 361 1 183 1 264 1 130 1 86 1 136 1 189 2 321 6 41 2 97 1 191 1 239 2 275 1 98 2 149 1 100 1 
0 2 281 1 196 1 243 1 127 1 306 1 76 1 200 1 224 1 183 1 160 1 9 1 299 1 88 1 251 1 136 2 166 1 189 1 207 1 41 3 269 1 210 1 191 1 239 1 98 1 68 1 149 1 99 1 100 1 
299 1 39 1 0 2 281 1 196 1 243 1 189 1 45 1 306 1 207 1 41 2 210 1 200 2 224 1 239 1 146 1 98 1 68 1 
0 2 281 1 136 2 196 1 166 1 243 1 189 1 45 1 306 1 207 1 41 2 269 1 210 1 224 1 239 1 9 1 98 1 83 1 
0 2 281 2 196 1 243 2 45 1 306 1 200 2 224 2 9 1 299 1 251 1 136 2 166 1 189 1 41 4 207 2 269 1 210 1 239 1 146 1 68 1 98 1 
299 1 39 1 0 2 281 1 196 1 243 1 189 1 306 1 207 1 41 2 210 1 200 2 224 1 239 1 146 1 98 1 68 1 69 1 
0 2 281 1 136 2 196 1 166 1 243 1 189 1 306 1 207 1 41 2 269 1 210 1 224 1 239 1 9 1 98 1 69 1 83 1 
0 2 281 2 196 1 243 2 306 1 200 2 224 2 9 1 299 1 251 1 136 2 166 1 189 1 41 4 207 2 269 1 210 1 239 1 146 1 68 1 98 1 69 1 
0 2 281 2 196 1 243 2 306 1 200 2 224 2 9 1 299 1 251 1 136 2 166 1 189 1 41 4 207 2 269 1 210 1 239 1 146 1 68 1 98 1 
194 1 216 1 0 2 196 1 28 1 262 1 306 1 358 1 357 1 359 1 200 1 308 1 36 1 201 1 183 1 264 1 339 1 136 1 62 1 189 1 321 1 41 2 95 1 210 1 239 1 98 1 100 1 124 1 
194 1 216 1 0 2 196 1 28 1 75 1 262 1 306 1 358 1 357 1 359 1 246 1 200 1 201 1 183 1 264 1 339 1 136 1 189 1 321 1 41 2 94 1 95 1 210 1 239 1 98 1 100 1 124 1 
0 2 281 2 196 1 243 2 306 1 200 2 224 2 9 1 299 1 88 1 251 1 136 2 166 1 189 1 41 4 207 2 269 1 210 1 239 1 146 1 68 1 98 1 
216 1 0 2 281 2 196 1 28 1 243 2 262 1 306 1 358 1 357 1 359 1 200 2 308 1 224 2 36 1 201 1 183 1 9 1 294 1 316 1 299 1 251 1 136 2 62 1 166 1 189 1 321 1 207 2 41 4 269 1 95 1 210 1 239 1 146 1 68 1 98 1 100 1 
0 2 281 1 196 1 243 1 127 1 306 1 76 1 200 2 224 1 183 1 160 1 299 1 88 1 251 1 136 1 166 1 189 1 41 3 207 1 269 1 210 1 191 1 239 1 146 1 98 1 260 1 68 1 149 1 100 1 
279 1 0 6 280 1 196 3 243 7 200 20 331 3 9 3 293 1 205 1 299 4 251 4 166 5 346 1 210 3 16 1 211 1 122 1 68 5 215 1 351 1 177 1 352 1 263 1 81 1 315 3 87 4 232 1 90 2 187 4 135 1 136 21 137 1 189 3 41 41 269 4 236 1 323 1 273 1 146 4 98 3 276 1 151 1 
279 1 0 8 280 1 196 4 243 7 200 20 331 3 9 4 293 1 205 1 299 4 251 4 166 4 346 1 210 4 16 1 211 1 122 1 68 5 215 1 351 1 177 1 352 1 263 1 81 1 315 3 87 4 232 1 90 2 187 4 135 1 136 18 137 2 189 4 41 38 269 3 236 1 323 1 273 1 146 3 98 4 276 1 151 1 
279 1 351 1 280 1 0 4 177 1 196 2 179 2 243 13 200 27 263 1 331 4 293 1 9 6 315 2 205 1 299 7 87 4 232 1 135 1 187 4 90 1 251 7 137 1 136 25 166 8 189 2 346 1 41 52 269 7 210 2 323 1 16 1 236 1 211 2 122 1 273 1 146 7 98 2 68 8 276 1 151 1 215 1 
351 1 280 1 0 4 196 2 243 6 200 9 331 1 9 3 81 1 315 1 205 1 299 3 87 2 340 1 187 2 90 1 251 3 136 10 166 3 189 2 346 1 41 19 269 3 210 2 236 1 211 1 146 3 98 2 68 3 151 2 
351 1 280 2 0 6 196 3 243 4 200 14 263 1 331 2 9 2 315 2 205 1 299 3 87 4 232 1 135 1 90 2 187 2 251 3 137 2 136 12 166 2 189 3 346 1 41 26 269 2 210 3 323 1 236 1 16 1 146 2 98 3 68 3 276 1 151 1 
152 1 102 1 212 1 313 1 56 1 156 1 77 1 229 1 193 1 121 1 
320 1 67 1 
152 1 72 1 212 1 313 1 227 1 156 1 348 1 193 1 121 1 
103 1 173 1 
266 1 131 1 120 1 
317 1 152 1 102 1 92 1 341 1 353 1 267 1 117 1 30 1 156 1 77 1 121 1 78 1 212 1 313 1 84 2 229 1 193 1 
317 1 152 1 102 1 92 1 341 1 353 1 267 1 117 1 30 1 156 1 77 1 121 1 78 1 212 1 313 1 84 2 229 1 193 1 
317 1 152 1 102 1 92 1 341 1 353 1 267 1 117 1 30 1 156 1 77 1 121 1 78 1 212 1 313 1 84 2 229 1 193 1 
103 1 120 1 173 1 
103 1 120 1 173 1 
266 1 131 1 
266 1 131 1 120 1 
61 1 374 1 
152 1 30 1 356 1 156 1 76 2 78 1 183 2 110 1 337 1 311 1 313 1 84 1 38 1 317 1 61 1 92 1 320 1 121 1 271 1 191 2 212 1 374 1 67 1 149 2 100 2 124 1 193 1 
216 1 194 1 0 2 196 1 28 2 262 1 306 1 357 1 76 2 359 2 33 1 200 1 201 1 183 2 264 1 202 2 85 1 88 1 368 1 136 1 189 1 255 1 321 2 345 1 41 2 210 1 303 1 97 1 239 1 98 1 100 2 
278 1 301 1 27 1 28 2 104 1 321 2 262 1 357 1 359 2 142 1 5 1 223 1 287 1 147 2 240 1 336 1 275 1 294 1 57 1 
301 1 27 1 28 1 104 1 321 1 262 1 118 1 357 1 359 1 142 1 5 1 223 1 287 1 147 2 336 1 275 1 57 1 
216 1 339 1 44 1 28 1 321 1 262 1 357 1 31 1 359 1 169 1 201 1 240 1 364 1 57 1 
278 1 301 1 27 1 28 1 104 1 321 1 262 1 357 1 359 1 142 1 5 1 223 1 287 1 147 2 240 1 336 1 275 1 57 1 
203 1 
289 1 19 1 153 1 353 1 186 1 46 1 132 1 
217 1 101 1 43 1 153 1 195 1 154 1 2 1 353 2 30 1 46 1 52 1 53 1 228 1 132 1 317 1 141 1 22 1 
216 1 43 1 176 1 327 1 195 1 28 1 284 1 244 1 262 1 358 1 357 2 359 1 46 1 332 1 109 1 201 4 248 1 10 1 228 1 339 1 321 1 238 1 325 2 22 1 
217 1 43 1 187 1 153 1 195 1 154 2 353 1 46 1 35 1 331 1 247 1 22 1 276 1 315 1 228 1 
279 1 43 1 177 1 195 1 153 2 30 1 76 1 307 1 46 2 288 1 183 1 160 1 290 2 162 1 228 1 297 1 231 1 317 1 166 1 18 1 122 1 191 1 42 1 68 2 22 1 304 1 149 1 100 1 
43 1 289 1 153 1 195 1 353 1 22 1 186 1 228 1 46 1 132 1 
299 2 217 5 251 2 242 1 153 5 154 10 166 2 353 5 269 2 35 5 46 5 247 5 18 1 290 2 68 2 
317 1 2 1 353 1 53 1 30 1 132 1 
216 1 218 1 43 2 195 1 153 2 2 4 44 1 28 4 262 1 30 3 357 1 31 1 359 4 46 2 221 2 309 1 332 2 201 1 51 1 53 2 228 2 206 1 317 3 339 2 114 1 321 4 20 2 22 2 277 1 
216 1 0 2 196 1 28 1 262 1 306 1 76 2 357 1 358 1 359 1 308 1 36 1 183 3 201 1 264 1 160 2 365 1 231 1 339 1 136 1 62 1 189 1 321 1 41 1 95 1 210 1 191 2 239 1 98 1 149 2 100 3 124 1 
217 2 43 1 153 2 195 1 154 4 353 4 35 2 46 1 247 2 332 1 20 1 293 1 22 1 228 1 132 2 
55 1 313 1 121 1 
374 1 313 1 77 1 12 1 121 1 
55 1 313 1 121 1 
55 1 313 1 121 1 
313 1 295 1 121 1 
313 1 295 1 121 1 
313 1 295 1 121 1 
313 1 121 1 
156 1 193 1 
279 2 0 2 177 2 196 1 243 5 200 8 331 1 293 1 9 4 315 1 187 1 136 8 166 3 189 1 346 1 41 16 210 1 122 2 273 1 146 1 42 1 68 3 98 1 276 1 215 1 
279 2 0 4 177 2 196 2 243 6 200 10 331 1 293 1 9 4 315 1 299 1 187 2 251 1 136 9 166 3 189 2 346 1 15 1 41 19 210 2 211 1 122 2 273 1 146 2 42 1 98 2 68 4 276 1 215 1 
279 2 0 6 177 2 196 3 243 7 200 13 331 1 293 1 9 5 315 1 299 2 232 1 187 1 251 2 135 1 136 14 137 1 166 5 189 3 15 1 346 1 41 27 269 2 210 3 323 1 16 1 122 2 273 1 146 2 42 1 98 3 68 5 276 1 215 1 
279 2 0 6 177 2 196 3 243 9 200 14 331 1 293 1 9 5 315 1 299 2 232 1 187 1 251 2 135 1 137 1 136 11 166 4 189 3 15 1 346 1 41 25 269 1 210 3 16 1 323 1 122 2 273 1 146 4 42 1 98 3 68 5 276 1 215 1 
279 2 0 2 177 2 196 1 243 5 200 8 331 1 293 1 9 4 315 1 187 1 136 8 166 3 189 1 346 1 41 16 210 1 122 2 273 1 146 1 42 1 68 3 98 1 276 1 215 1 
0 2 196 1 243 2 200 6 331 1 9 1 315 1 299 2 232 1 187 1 251 2 135 1 136 6 166 2 189 1 346 1 41 12 269 2 210 1 16 1 323 1 146 1 98 1 68 2 276 1 
279 2 0 8 177 2 196 4 243 7 200 14 331 1 293 1 9 5 315 1 299 2 232 1 135 1 187 1 251 2 136 12 137 2 166 4 189 4 15 1 346 1 41 26 269 1 210 4 323 1 16 1 122 2 273 1 146 2 42 1 98 4 68 5 276 1 215 1 
0 8 196 4 243 6 200 9 331 1 9 3 81 1 315 1 299 3 232 1 135 1 187 1 251 3 136 7 137 2 166 2 189 4 346 1 41 16 269 2 210 4 323 1 16 1 146 3 98 4 68 3 276 1 
279 1 136 4 177 3 166 1 243 6 41 7 200 3 122 3 273 2 146 3 9 3 68 1 215 1 
279 2 0 8 177 2 196 4 243 7 200 14 331 1 293 1 9 5 81 1 315 1 299 2 232 1 135 1 187 1 251 2 136 12 137 2 166 4 189 4 346 1 41 26 269 1 210 4 323 1 16 1 122 2 273 1 146 2 42 1 98 4 68 5 276 1 215 1 
279 2 0 4 177 2 196 2 243 7 200 9 9 4 293 1 137 1 136 9 166 3 189 2 41 18 210 2 122 2 273 1 146 3 42 1 98 2 68 3 215 1 
279 1 136 3 177 1 166 1 243 2 41 6 200 3 122 1 273 1 19 1 293 1 9 2 68 1 215 1 
299 1 0 2 251 1 136 2 196 1 166 1 243 2 189 1 15 1 41 4 269 1 210 1 200 2 146 1 9 1 98 1 68 1 
299 1 187 2 251 1 136 4 166 1 243 2 41 7 269 1 200 3 331 1 211 1 146 1 9 1 68 1 315 1 
279 2 0 2 177 2 196 1 179 1 243 7 200 13 331 2 293 1 9 5 299 2 251 2 187 2 136 13 137 1 166 5 189 1 41 26 269 2 210 1 211 1 122 2 273 1 146 2 42 1 68 5 98 1 215 1 241 1 
187 1 136 1 41 1 
200 1 331 1 41 1 
299 1 0 2 251 1 136 3 196 1 242 1 166 1 189 1 243 3 15 1 41 6 269 1 210 1 200 3 146 1 98 1 68 1 9 2 
0 2 196 1 243 2 200 6 331 1 9 1 315 1 299 2 232 1 187 1 251 2 135 1 136 6 166 2 189 1 346 1 41 12 269 2 210 1 16 1 323 1 146 1 98 1 68 2 276 1 
279 1 136 3 177 1 166 1 243 2 41 6 200 3 122 1 146 1 68 1 9 1 
0 2 177 1 138 1 136 2 137 1 196 1 243 2 189 1 41 3 210 1 200 1 122 1 273 1 146 1 9 1 98 1 215 1 
279 1 0 2 177 2 136 5 196 1 166 2 189 1 243 5 346 1 41 10 210 1 200 5 122 2 146 2 42 1 98 1 9 3 68 2 
299 1 0 2 196 1 189 1 243 1 346 1 41 2 210 1 200 2 146 1 98 1 68 1 
299 1 0 2 251 1 136 2 196 1 166 1 243 2 189 1 346 1 41 4 269 1 210 1 200 2 146 1 9 1 98 1 68 1 
0 6 137 1 138 1 136 2 177 1 196 3 189 3 243 2 346 1 41 3 210 3 200 1 122 1 146 1 98 3 9 1 81 1 
279 2 0 8 177 2 196 4 243 9 106 1 200 16 331 3 293 1 9 5 81 1 315 1 163 1 299 2 187 3 251 2 137 1 136 16 166 5 189 4 15 1 346 1 41 32 269 2 210 4 122 2 273 1 146 4 42 1 98 4 68 5 350 1 215 1 
183 1 73 1 192 1 100 1 124 1 76 1 235 1 
318 1 174 1 73 1 178 1 76 1 235 1 80 1 50 1 183 1 192 1 100 1 124 1 
216 1 339 1 201 1 19 1 44 1 28 1 321 1 262 1 357 1 31 1 359 1 
216 1 339 1 28 1 321 1 262 1 358 1 357 1 76 1 359 1 95 1 191 1 36 1 201 1 183 2 292 1 149 1 100 2 124 1 
216 2 28 1 262 1 76 2 357 1 358 2 359 1 181 1 221 1 36 1 183 2 201 3 292 1 321 1 95 1 191 2 21 1 149 1 304 1 100 2 124 1 375 1 214 1 
216 2 28 2 75 1 262 1 355 1 76 2 357 1 358 2 359 2 181 1 221 1 183 2 201 3 292 1 321 2 95 1 191 2 21 1 149 1 304 1 100 2 124 1 375 1 214 1 
216 1 2 1 28 3 353 1 3 1 262 1 355 1 30 2 357 1 358 1 359 3 329 1 221 1 201 4 248 1 132 1 317 2 339 1 321 3 209 1 21 1 325 1 214 1 
317 1 216 1 28 1 321 1 262 1 30 1 358 1 357 1 359 1 221 1 238 1 201 4 21 1 325 1 248 1 214 1 
188 1 28 1 321 1 262 1 357 1 359 1 
86 1 339 2 216 2 327 1 283 1 28 6 321 5 262 2 107 1 358 1 357 3 359 6 361 1 97 1 333 1 201 3 202 1 130 1 275 1 294 1 
279 2 0 4 281 1 196 2 243 5 328 1 200 7 201 1 292 1 9 4 293 1 294 1 62 1 166 3 207 1 210 2 122 2 68 3 304 1 124 3 215 1 216 1 177 2 28 1 306 2 262 1 76 1 357 1 358 1 359 1 33 1 308 1 36 1 224 1 183 2 366 1 316 1 88 1 136 7 189 2 321 1 41 14 95 1 191 1 273 1 239 2 146 1 42 1 98 2 149 1 100 2 
317 1 339 1 43 1 176 1 114 1 195 1 28 1 244 1 284 1 321 1 30 1 359 1 238 1 201 2 325 1 22 1 248 1 228 1 38 1 
216 1 188 1 327 1 28 2 321 2 262 1 358 1 357 2 359 2 109 1 201 2 294 1 248 1 
339 1 216 1 44 1 28 4 321 4 29 1 262 1 355 1 357 1 31 1 359 4 201 1 294 1 
216 1 219 1 28 2 321 2 285 1 262 1 358 1 357 2 157 1 359 2 221 1 333 1 201 1 130 1 
339 1 223 1 287 1 147 1 27 1 28 1 321 1 262 1 357 1 359 1 
216 1 97 1 201 1 275 1 28 2 294 1 255 1 321 2 262 1 357 1 359 2 
339 1 216 2 86 1 44 1 283 1 28 5 321 4 29 1 262 2 31 1 357 2 359 5 221 1 97 1 201 3 294 1 
339 1 216 2 86 1 44 1 28 5 321 4 29 1 262 2 31 1 357 2 359 5 221 1 97 1 201 3 294 1 376 1 
216 1 339 1 28 1 321 1 75 1 262 1 358 1 357 1 76 1 359 1 95 1 191 1 201 1 183 2 292 1 149 1 100 2 124 1 
216 1 327 1 28 1 321 1 262 1 107 1 358 1 357 2 359 1 221 1 333 1 201 1 130 1 
13 1 159 1 342 1 124 1 167 1 
317 2 13 2 353 1 342 2 344 1 30 2 329 1 181 1 167 1 159 2 274 1 65 1 304 1 314 1 124 1 375 1 296 1 38 1 132 1 
85 1 13 1 368 1 342 1 345 1 76 1 167 1 183 1 100 1 
65 1 314 1 167 1 
145 1 334 1 19 1 70 1 
145 1 158 1 334 1 155 1 70 1 234 1 230 1 
234 1 208 1 59 1 
326 1 233 1 369 1 155 2 234 2 222 1 145 1 158 1 334 1 312 1 161 1 70 1 230 1 
145 1 158 1 334 1 165 1 204 1 155 2 70 1 234 2 230 1 
155 1 104 1 234 1 371 1 119 1 145 1 158 1 223 1 147 1 161 1 230 1 
145 1 158 1 155 1 161 1 70 1 234 1 230 1 
158 1 334 1 155 1 161 1 70 2 234 1 230 1 
113 1 115 1 155 2 234 2 145 1 79 1 158 2 161 1 70 1 230 2 
155 3 234 3 119 1 199 1 145 2 158 1 257 1 334 1 204 2 161 1 70 1 112 1 230 1 
1 1 155 2 104 1 234 2 145 1 5 1 287 1 158 1 223 1 334 1 147 2 204 1 161 1 70 1 230 1 
165 1 155 4 234 4 119 1 145 2 158 2 334 1 349 1 204 2 161 1 70 1 112 1 230 2 
145 1 158 1 334 1 155 1 161 1 70 1 234 1 230 1 
326 1 233 1 369 1 155 4 234 4 119 1 145 3 158 1 334 2 312 1 204 2 70 2 112 1 230 1 
175 1 155 2 234 2 272 1 145 1 158 1 334 1 204 1 161 1 70 1 265 1 230 1 
326 1 369 2 155 3 234 3 145 1 158 1 334 1 312 2 161 1 70 1 367 1 230 1 
145 2 7 1 164 1 298 2 
363 1 158 1 155 1 161 1 234 1 230 1 
145 1 257 1 158 1 334 1 204 1 155 2 161 1 70 1 234 2 230 1 
180 1 
145 1 158 1 334 1 155 1 161 1 70 1 234 1 230 1 
155 3 234 3 145 1 158 1 257 1 334 1 312 1 204 1 161 1 70 1 230 1 
145 1 233 1 119 1 112 1 
145 1 70 1 

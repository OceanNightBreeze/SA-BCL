#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 196 (221,346) (221,346) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 196 (221,346) (221,346) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 196 (221,346) (221,346) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 196 (221,346) (221,346) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (80,154,189,259) (80,154,189,259) (39,65,271,351) 261 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (80,154,189,259) (80,154,189,259) (39,65,271,351) 261 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 14 38 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 14 38 282 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 14 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (80,154,189,259) (80,154,189,259) (39,65,271,351) (39,65,271,351) (39,65,271,351) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
167 1 196 1 17 1 154 1 221 1 259 1 79 2 34 1 237 1 126 1 174 1 238 1 80 2 202 1 97 1 346 1 
167 1 196 1 17 1 154 1 221 1 259 1 79 2 34 1 237 1 126 1 174 1 238 1 80 2 202 1 97 1 346 1 
167 1 196 1 17 1 154 1 221 1 259 1 79 2 34 1 237 1 126 1 174 1 238 1 80 2 202 1 97 1 346 1 
167 1 196 1 17 1 154 1 221 1 259 1 79 2 34 1 237 1 126 1 174 1 238 1 80 2 202 1 97 1 346 1 
15 3 39 1 196 1 154 1 259 1 79 4 237 1 126 1 278 1 162 1 4 1 355 1 80 4 189 3 58 2 202 1 97 1 190 2 
15 1 167 1 91 1 100 1 17 1 154 1 259 1 79 2 126 1 237 1 174 1 278 1 355 1 80 2 97 1 358 1 
167 1 15 2 8 1 154 2 259 2 79 3 126 1 278 1 162 1 355 1 80 3 58 1 189 1 
271 1 126 1 261 1 80 2 189 1 154 1 259 1 79 1 
271 1 126 1 261 1 80 2 189 1 154 1 259 1 79 1 
56 1 88 1 241 1 
144 2 135 1 56 1 
57 1 40 2 197 2 122 2 87 2 321 2 244 2 142 1 
319 1 193 1 40 2 216 2 275 1 197 3 340 1 122 2 321 2 244 3 173 2 245 1 69 1 85 1 87 2 327 1 301 1 203 1 305 1 108 1 231 1 180 1 26 1 137 1 284 2 76 1 30 2 33 1 316 1 57 1 262 1 95 2 13 1 187 1 142 1 60 1 269 1 
272 1 57 1 40 1 243 1 197 1 122 1 87 1 321 1 244 1 276 1 
272 1 320 1 197 1 321 1 244 1 115 1 310 1 47 1 207 1 56 1 175 1 248 1 251 1 241 1 
272 1 40 1 320 1 197 1 122 1 321 1 244 1 115 1 310 2 47 2 207 1 56 1 248 1 87 1 241 1 
1 1 96 1 46 1 310 1 47 1 
56 1 1 1 5 1 96 1 155 1 241 1 310 2 47 2 
1 1 310 1 47 1 
272 1 40 1 243 1 197 1 122 1 258 1 321 1 244 1 276 1 310 1 47 1 57 1 96 1 87 1 
56 1 
56 1 1 1 264 1 96 1 155 1 241 1 310 2 47 2 
1 2 121 1 102 1 42 1 155 1 310 5 223 2 84 1 47 5 288 1 3 1 56 1 93 1 247 2 129 2 96 2 241 1 179 1 212 1 
0 1 319 1 193 1 339 1 216 1 284 1 197 2 340 1 122 1 321 1 244 2 173 1 316 1 262 1 85 1 117 1 87 1 187 1 60 1 269 1 
88 1 142 1 
151 1 40 1 197 2 122 1 87 1 321 2 244 2 37 1 142 2 
0 1 279 1 106 1 
125 1 272 1 172 1 142 1 
339 1 40 1 197 3 122 3 87 3 321 3 244 3 142 1 
272 1 243 1 197 1 122 1 87 1 321 1 244 1 
151 1 272 1 40 1 197 1 122 1 87 1 321 1 244 1 37 1 
319 1 193 1 339 1 272 1 40 2 320 1 216 1 197 4 340 1 122 3 321 3 244 4 173 1 47 1 245 1 69 1 85 1 248 1 87 3 305 1 108 1 231 1 26 1 137 1 257 1 284 1 76 1 30 1 31 1 115 1 310 1 33 1 207 1 316 1 57 1 262 1 117 1 95 2 13 1 187 1 37 1 142 1 60 1 269 1 
339 1 175 1 197 2 122 1 87 1 321 2 244 2 142 1 25 1 
339 2 272 1 40 1 320 1 197 3 122 3 321 3 244 3 31 1 310 1 115 1 47 1 207 1 200 1 56 1 117 1 248 1 87 3 37 1 
0 1 339 1 40 1 197 2 122 2 321 2 244 2 106 1 87 2 37 1 
319 1 193 1 216 1 284 1 197 1 340 1 244 1 173 1 316 1 262 1 85 1 187 1 142 1 60 1 269 1 
319 1 193 1 216 1 284 1 197 1 340 1 244 1 222 1 173 1 316 1 116 1 85 1 142 1 60 1 269 1 
0 1 255 1 26 1 101 1 306 1 137 1 30 1 33 1 245 1 69 1 279 1 95 2 161 1 106 1 13 1 107 1 305 1 131 1 
90 1 272 1 197 1 122 1 87 1 321 1 244 1 115 1 
339 2 40 1 18 1 197 5 122 4 296 1 321 5 244 5 175 1 117 1 87 4 37 1 142 1 25 1 
90 1 272 1 243 1 197 2 122 2 87 2 321 2 244 2 
334 1 302 1 
334 1 302 1 
178 1 337 1 
178 1 337 1 
178 1 337 1 
215 1 334 1 302 1 
334 1 302 1 287 1 
334 2 185 1 302 2 178 1 61 1 337 1 
215 1 334 1 302 1 
215 1 334 1 302 1 
195 1 334 1 302 1 
195 1 334 1 302 1 
195 1 334 1 302 1 
333 1 317 1 334 1 302 1 38 1 14 1 
333 1 317 1 282 1 334 1 302 1 310 1 38 1 14 1 47 1 
237 1 202 1 97 1 
237 1 91 1 97 1 
237 3 91 1 202 2 206 1 70 1 229 1 
109 1 237 2 91 1 202 1 206 1 70 1 
237 2 91 1 202 1 70 1 206 2 
144 3 168 1 1 1 194 1 169 1 45 2 223 1 84 1 47 5 224 1 148 1 247 1 129 1 326 1 249 2 177 1 107 1 179 2 135 1 74 1 181 1 153 1 52 1 308 2 155 1 310 5 56 2 93 2 96 4 188 1 241 1 
144 9 168 3 1 6 121 1 194 4 169 1 45 6 46 5 223 2 47 9 84 1 148 3 68 1 247 2 129 2 326 2 249 6 329 1 107 3 179 6 135 3 52 3 155 1 310 9 183 1 290 1 56 5 93 5 94 1 96 7 188 2 241 1 356 5 357 1 
144 4 168 1 121 1 194 1 45 2 223 1 47 3 224 1 148 1 247 1 129 1 326 1 249 2 107 1 179 2 135 2 74 1 52 1 308 1 310 3 56 3 93 2 96 2 188 1 241 1 
144 7 168 2 121 1 194 2 45 4 223 1 47 4 224 1 148 2 247 1 129 1 326 1 249 4 329 1 107 2 179 4 135 3 74 1 52 2 308 2 310 4 290 1 56 4 93 3 94 1 96 3 188 1 241 1 
193 1 88 1 294 1 
193 1 55 1 
226 1 
193 1 60 1 
193 3 75 1 340 1 300 1 294 2 60 1 
193 1 340 1 60 1 
147 1 193 1 
253 1 242 1 168 1 214 1 145 1 137 3 101 3 306 2 283 1 205 1 30 7 297 1 315 1 160 1 265 2 301 4 62 1 
253 1 242 1 168 1 214 1 145 1 137 3 101 3 306 2 283 1 205 1 30 7 297 1 315 1 160 1 265 2 301 4 62 1 
253 1 242 1 168 1 214 1 274 1 145 1 137 3 101 3 306 2 283 1 205 1 30 7 297 1 315 1 160 1 265 2 301 4 62 1 
242 1 168 5 214 7 145 2 146 3 101 13 218 1 171 1 341 1 105 1 297 3 148 3 69 1 301 17 107 3 305 1 253 2 26 1 283 3 137 14 306 6 52 3 205 2 29 1 30 31 33 1 315 1 236 1 184 1 263 1 160 1 95 2 265 1 293 4 62 1 
168 1 214 1 145 1 101 4 218 1 297 1 69 2 301 5 305 2 253 1 26 2 137 4 306 3 283 1 307 1 205 1 30 9 33 2 315 1 158 1 160 1 95 4 265 2 62 1 
319 1 15 1 167 1 295 1 216 1 173 1 126 1 227 1 278 1 6 1 202 1 303 1 229 1 132 1 91 1 284 1 154 1 259 1 79 2 312 1 316 1 237 2 157 1 10 1 159 1 355 1 80 2 189 1 186 1 97 1 
319 1 15 1 167 1 295 1 216 1 219 1 173 1 127 1 278 1 6 1 202 1 229 1 303 1 132 1 91 1 284 1 154 1 309 1 259 1 79 3 312 1 316 1 237 2 157 1 10 1 355 1 80 3 189 2 186 1 97 1 
319 1 15 1 167 1 295 1 216 1 219 1 173 1 278 1 6 1 202 1 303 1 229 1 91 1 284 1 309 1 79 2 312 1 316 1 237 2 157 1 355 1 80 2 189 2 186 1 97 1 
319 1 193 1 167 2 295 2 216 1 284 1 154 1 220 1 286 1 259 1 173 1 79 1 354 1 316 1 157 2 127 1 292 1 12 1 80 1 343 1 303 2 60 1 269 1 
319 1 167 1 295 1 216 1 173 1 126 1 6 1 202 1 303 1 229 1 132 1 91 1 284 1 154 1 309 1 259 1 79 1 312 1 316 1 237 2 157 1 10 1 159 1 80 1 186 1 97 1 
130 1 
319 1 166 1 272 1 1 6 216 2 320 1 321 1 44 1 83 2 173 2 223 1 47 5 84 1 225 1 175 1 86 2 129 1 326 1 328 1 179 2 135 2 284 2 285 1 286 1 289 1 56 2 93 2 292 1 291 1 241 1 98 2 60 1 144 2 193 1 197 1 244 1 104 1 199 1 247 1 149 2 248 1 251 1 252 2 347 2 254 4 348 1 152 2 112 1 155 3 77 1 310 5 115 1 207 1 316 1 269 2 
166 1 272 1 1 2 320 1 197 1 321 1 244 1 44 1 47 3 175 1 248 1 251 1 254 2 348 1 112 1 285 1 155 1 310 3 115 1 207 1 264 1 98 1 
166 1 272 1 1 1 320 1 197 1 321 1 244 1 44 1 47 3 175 1 86 1 248 1 251 1 254 3 348 1 112 1 285 1 155 1 310 3 115 1 207 1 56 1 264 1 241 1 
166 1 272 1 1 2 320 1 197 1 321 1 244 1 44 1 47 3 175 1 86 1 248 1 251 1 252 1 254 3 348 1 112 1 285 1 155 1 310 3 115 1 207 1 56 1 264 1 241 1 98 1 
166 1 272 1 1 7 320 1 321 1 44 1 83 2 322 1 223 1 47 5 84 1 175 1 325 1 86 4 129 1 328 1 179 1 135 2 285 1 289 1 56 5 93 1 336 1 241 5 98 4 197 1 244 1 247 1 149 2 248 1 251 1 298 1 252 4 347 2 254 6 348 1 112 1 152 2 155 3 115 1 310 5 207 1 264 1 268 1 
166 1 272 1 1 4 320 1 321 1 44 1 83 2 223 1 47 4 84 1 175 1 129 1 86 2 328 1 179 1 135 2 285 1 289 1 56 2 93 1 241 1 98 2 144 2 197 1 244 1 104 1 247 1 149 2 248 1 251 1 347 2 252 2 254 4 348 1 112 1 152 2 155 2 115 1 310 4 207 1 
166 1 272 1 1 4 320 1 197 1 321 1 244 1 44 1 83 2 322 1 223 1 47 4 84 1 175 1 325 1 247 1 86 2 149 2 129 1 248 1 251 1 298 1 328 1 252 2 347 2 179 1 254 4 135 2 348 1 152 2 112 1 285 1 155 2 310 4 115 1 207 1 289 1 56 1 93 1 241 1 98 2 
166 1 272 1 1 4 320 1 197 1 321 1 244 1 44 1 83 2 322 1 223 1 47 4 84 1 175 1 325 1 247 1 86 2 149 2 129 1 248 1 251 1 298 1 328 1 252 2 347 2 179 1 254 4 135 2 348 1 152 2 112 1 285 1 155 2 310 4 115 1 207 1 289 1 56 1 93 1 241 1 98 2 
144 2 270 1 166 1 63 2 272 1 1 4 320 1 197 1 321 1 244 1 44 1 83 2 223 1 47 4 84 1 175 1 325 1 247 1 86 2 129 1 248 1 251 1 328 1 252 2 179 1 71 1 254 4 348 1 256 1 152 2 112 1 285 1 155 2 310 4 115 1 207 1 56 1 93 1 241 1 141 2 98 2 
166 1 272 1 1 5 320 1 197 1 321 1 244 1 44 1 83 2 223 1 322 1 84 1 47 4 175 1 325 1 247 1 149 2 129 1 86 3 248 1 251 1 298 1 328 1 347 2 179 1 252 3 254 5 135 2 348 1 152 2 112 1 285 1 155 2 310 4 115 1 207 1 289 1 56 1 93 1 336 1 241 1 98 3 
166 1 272 1 1 5 320 1 197 1 321 1 244 1 44 1 83 2 223 1 322 1 84 1 47 4 175 1 325 1 247 1 149 2 129 1 86 3 248 1 251 1 298 1 328 1 347 2 179 1 252 3 254 5 135 2 348 1 152 2 112 1 285 1 155 2 310 4 115 1 207 1 289 1 56 1 93 1 336 1 241 1 98 3 
270 1 166 1 272 1 1 4 320 1 321 1 44 1 83 2 223 1 47 4 84 1 175 1 129 1 86 2 328 1 179 1 285 1 56 1 93 1 141 2 241 1 98 2 144 2 63 2 197 1 244 1 104 1 247 1 248 1 251 1 252 2 254 4 348 1 112 1 152 2 155 2 115 1 310 4 207 1 
0 1 168 1 101 2 297 1 245 1 69 1 279 1 106 1 88 1 301 3 305 1 255 1 26 1 283 1 306 2 137 3 205 1 30 6 33 1 315 1 160 1 95 2 265 1 13 1 142 2 62 1 
0 12 168 3 214 2 146 3 101 2 148 3 245 2 69 2 279 12 106 3 301 10 305 2 231 1 73 1 180 1 26 2 137 5 52 3 30 15 33 2 236 2 184 1 95 4 118 1 13 1 36 1 293 4 142 1 82 1 318 1 
339 1 197 1 122 1 321 1 244 1 172 1 245 1 69 1 106 1 87 1 301 1 305 1 231 1 180 1 26 1 137 1 30 2 33 1 156 1 117 1 118 1 95 2 13 1 239 1 266 1 142 1 
0 2 319 1 168 1 214 2 216 1 122 1 321 1 173 1 324 1 85 1 279 2 87 1 231 1 137 2 284 1 52 1 95 4 13 2 187 1 60 1 193 1 339 1 101 3 197 2 340 1 244 2 148 1 245 2 69 2 22 1 106 2 24 1 301 3 305 2 108 1 26 2 204 1 306 1 30 5 78 1 33 2 316 1 262 1 117 1 118 1 269 1 
319 2 119 1 193 3 339 1 216 7 197 1 275 2 122 1 321 1 244 1 173 8 20 1 245 2 227 1 69 2 87 1 299 1 301 1 305 2 231 1 180 1 255 1 26 2 111 1 137 1 284 8 30 2 309 1 286 1 33 2 316 2 335 1 95 4 292 1 13 2 59 1 191 1 60 2 269 2 
0 1 168 1 101 1 40 1 197 1 122 1 321 1 244 1 148 1 245 1 69 1 201 1 279 1 106 1 87 1 301 1 107 1 305 1 26 1 306 1 137 1 52 1 30 2 33 1 95 2 118 1 13 1 37 1 
0 1 214 1 168 1 255 1 26 1 101 1 52 1 30 2 33 1 67 1 245 1 69 1 279 1 95 2 106 1 13 1 301 2 305 1 
0 1 255 1 26 1 101 1 306 1 137 1 30 1 33 1 245 1 69 1 279 1 95 2 106 1 13 1 107 1 305 1 131 1 
0 2 168 1 214 1 101 2 148 1 245 1 69 1 279 2 106 2 301 2 107 1 305 1 255 1 26 1 137 1 306 1 52 1 30 3 33 1 95 2 13 1 
0 1 214 1 168 1 26 1 101 1 52 1 30 2 33 1 67 1 20 1 245 1 69 1 279 1 95 2 106 1 13 1 301 2 305 1 
0 1 26 1 101 1 306 1 137 1 30 1 33 1 20 1 245 1 69 1 279 1 95 2 106 1 13 1 107 1 305 1 131 1 
0 1 214 1 168 1 26 1 101 1 52 1 30 2 33 1 20 1 148 1 245 1 69 1 279 1 95 2 106 1 13 1 301 2 305 1 
0 1 214 1 168 1 26 1 101 1 52 1 30 2 33 1 148 1 245 1 69 1 279 1 95 2 106 1 13 1 301 2 305 1 
319 1 193 1 216 1 197 1 340 1 244 1 173 1 245 1 85 1 69 1 301 1 108 1 305 1 231 1 180 1 26 1 137 1 284 1 30 2 33 1 316 1 262 1 95 2 13 1 187 1 142 1 60 1 269 1 
319 1 193 1 216 1 197 1 340 1 244 1 222 1 173 1 245 1 85 1 69 1 301 1 305 1 331 1 231 1 180 1 26 1 137 1 284 1 30 2 33 1 316 1 116 1 95 2 13 1 142 1 60 1 269 1 
0 1 214 1 168 1 26 1 101 1 52 1 30 2 33 1 148 1 245 1 69 1 279 1 118 1 95 2 106 1 13 1 301 2 305 1 
0 1 319 1 214 1 168 1 193 1 101 1 216 1 197 1 340 1 244 1 173 1 148 1 245 1 85 1 227 1 69 1 279 1 106 1 301 2 108 1 305 1 26 1 204 1 284 1 52 1 30 2 33 1 316 1 262 1 95 2 13 1 187 1 60 1 
0 1 214 1 168 1 101 1 40 1 197 1 122 1 321 1 244 1 148 1 245 1 69 1 279 1 87 1 106 1 301 2 305 1 26 1 52 1 30 2 33 1 95 2 118 1 210 1 13 1 37 1 
99 1 168 3 214 3 146 1 101 6 198 1 124 2 2 1 148 3 69 2 301 9 107 3 305 2 26 2 137 7 306 3 52 3 30 16 352 1 33 2 236 1 260 1 184 1 158 1 95 4 35 2 267 1 293 2 192 1 
99 1 214 2 168 3 101 4 146 2 218 2 198 1 124 4 148 3 69 3 128 1 280 1 301 14 107 2 305 3 26 3 306 2 137 10 138 1 27 1 28 1 52 3 30 24 352 1 33 3 158 1 184 2 95 6 35 1 267 2 293 2 81 1 192 2 
214 4 168 5 218 1 124 4 128 1 280 1 137 17 283 1 138 1 52 4 92 1 236 1 184 3 95 6 293 4 192 1 62 1 99 1 101 8 146 3 198 1 297 1 148 4 69 3 301 20 107 4 305 3 26 3 306 4 27 1 28 1 205 1 30 37 352 1 33 3 315 1 260 1 158 1 160 1 265 1 35 1 267 2 81 1 
99 1 168 5 214 3 146 3 101 7 218 2 198 1 297 1 124 4 148 4 69 4 128 1 280 1 301 20 107 3 305 4 26 4 283 1 137 15 306 4 138 1 27 1 28 1 52 4 205 1 30 35 352 1 33 4 92 1 315 1 236 1 260 1 184 3 158 1 160 1 265 1 95 8 35 1 267 2 293 4 81 1 192 1 62 1 
99 1 168 8 214 7 146 4 101 14 218 1 198 1 297 1 124 4 148 7 69 2 128 1 280 1 301 27 107 7 305 2 26 2 283 1 137 18 306 7 138 1 27 1 28 1 52 7 205 1 30 45 352 1 33 2 315 1 236 2 184 2 158 1 160 1 265 1 95 4 35 1 267 1 293 4 81 1 192 1 62 1 318 2 
319 1 193 1 119 1 216 2 197 2 275 2 321 2 244 2 173 2 245 1 69 1 228 1 301 1 305 1 231 1 180 1 233 1 26 1 111 1 137 1 284 2 30 2 33 1 316 1 118 1 95 2 139 1 13 1 211 1 140 1 60 1 
319 1 120 1 91 1 216 2 284 2 309 1 123 1 173 2 182 1 237 2 316 1 157 1 10 1 227 1 6 1 202 1 186 1 97 1 229 1 
319 1 91 1 216 1 284 1 309 1 173 1 182 1 237 2 316 1 157 1 10 1 6 1 202 1 345 1 186 1 97 1 229 1 
319 1 193 1 120 1 216 1 284 1 286 1 173 1 316 1 157 1 292 1 250 1 343 1 60 1 269 1 
319 1 120 1 91 1 216 1 284 1 309 1 123 1 173 1 182 1 237 2 316 1 157 1 10 1 6 1 202 1 186 1 97 1 229 1 
330 1 
288 1 56 1 93 1 102 1 88 1 241 1 179 1 
144 1 1 1 223 1 84 1 47 1 247 1 129 1 149 1 347 1 179 1 135 1 155 1 310 1 289 1 56 2 93 1 241 1 
319 2 168 2 1 5 216 2 217 1 45 6 173 2 223 4 84 4 47 5 323 2 227 1 129 4 326 2 176 2 179 8 332 1 135 6 284 2 52 2 235 1 288 1 55 3 56 8 93 7 291 1 11 2 241 2 294 2 60 1 144 12 193 6 102 1 340 1 66 2 148 2 21 2 246 1 247 4 22 2 249 6 107 2 349 2 75 1 155 3 310 5 207 2 316 1 164 2 269 1 
144 6 168 2 1 1 146 1 64 1 66 1 45 5 223 2 47 1 84 2 148 2 247 2 128 1 129 2 326 1 344 1 249 5 179 5 107 2 135 3 138 1 27 1 28 1 52 2 155 1 310 1 56 5 93 6 184 1 291 1 11 2 293 1 81 1 241 2 
168 2 272 1 40 1 243 1 197 1 66 1 122 1 321 1 244 1 276 1 297 1 105 1 223 1 322 1 84 1 47 1 247 1 129 1 87 1 179 2 283 1 205 1 258 1 310 1 57 1 93 2 11 2 62 1 
102 1 223 1 84 1 288 1 56 1 93 1 247 1 129 1 179 1 241 1 
144 10 168 2 135 5 66 1 52 2 45 5 148 2 56 5 93 3 22 1 11 2 249 5 179 5 107 2 
56 1 1 1 155 1 241 1 310 1 47 1 
213 1 319 1 193 1 1 4 121 1 216 4 170 1 173 4 223 2 84 1 47 3 199 1 247 2 129 2 326 2 179 2 150 2 284 4 155 2 286 1 77 1 310 3 235 1 316 1 93 2 291 2 292 1 60 1 269 2 
319 1 193 1 216 1 40 2 197 3 122 2 340 1 321 2 244 3 173 1 245 1 69 1 85 1 87 2 305 1 108 1 231 1 26 1 137 1 284 1 76 1 30 1 33 1 316 1 57 1 262 1 95 2 13 1 187 1 142 1 60 1 269 1 
144 4 135 2 45 2 223 1 84 1 56 4 93 1 247 1 265 1 129 1 326 1 291 1 249 2 179 2 241 2 
317 1 14 1 
317 1 14 1 
317 1 14 1 
317 1 14 1 
317 1 14 1 
317 1 14 1 
317 1 14 1 
317 1 14 1 
334 1 302 1 
168 1 214 1 26 2 137 4 101 3 306 2 283 1 205 1 218 1 30 8 33 2 297 1 315 1 69 2 160 1 265 1 95 4 301 4 305 2 62 1 
168 1 137 3 283 1 306 2 101 2 205 1 30 6 297 1 315 1 160 1 265 1 88 1 301 3 62 1 
168 1 214 1 26 1 306 1 137 1 101 2 52 1 30 3 103 1 33 1 148 1 69 1 95 2 301 2 107 1 305 1 
168 1 214 1 306 1 137 3 146 1 101 2 52 1 30 6 236 1 148 1 184 1 301 3 293 2 107 1 
214 4 168 3 101 9 146 2 218 2 297 2 148 2 69 2 301 11 107 2 305 2 232 1 26 2 283 2 137 10 306 5 52 2 205 1 30 21 33 2 315 1 236 1 160 1 265 1 95 4 36 1 293 2 62 1 318 1 
137 1 30 1 293 1 
146 1 30 1 301 1 
168 1 214 1 26 1 137 2 101 3 306 2 52 1 30 5 103 1 33 1 148 1 69 1 95 2 22 1 301 3 107 1 305 1 
168 2 214 1 146 1 101 2 148 2 69 1 128 1 301 6 107 2 305 1 26 1 137 4 306 1 27 1 138 1 52 2 28 1 30 10 33 1 184 1 158 1 95 2 293 1 81 1 
168 1 214 1 137 3 283 1 306 1 101 2 205 1 30 6 297 1 301 3 62 1 
214 1 232 1 26 1 101 2 306 1 283 1 137 2 218 1 30 3 297 1 33 1 315 1 69 1 160 1 95 2 301 1 305 1 
214 2 168 2 26 1 283 2 306 3 101 5 137 5 205 2 30 10 33 1 105 1 297 2 158 1 69 1 95 2 301 5 305 1 62 1 
168 1 214 1 26 1 101 1 52 1 30 2 33 1 158 1 69 1 95 2 301 2 305 1 
168 1 214 1 26 1 306 1 137 1 101 2 52 1 30 3 33 1 148 1 158 1 69 1 95 2 301 2 107 1 305 1 
232 1 214 1 26 3 137 2 283 1 306 1 101 2 218 1 30 3 33 3 297 1 260 1 158 1 69 3 95 6 301 1 305 3 
168 5 214 5 146 3 101 12 218 2 341 1 103 1 297 3 148 3 69 5 301 16 107 3 305 5 232 1 26 5 283 3 137 15 306 7 52 3 205 2 29 1 30 31 33 5 315 1 236 1 260 1 184 1 158 1 263 1 160 1 265 1 95 10 293 4 62 2 
168 1 146 1 101 2 297 1 69 1 128 1 301 4 305 1 26 1 137 4 283 1 306 2 205 1 30 8 33 1 315 1 184 1 158 1 160 1 265 1 95 2 293 1 62 1 
168 2 214 1 146 1 101 3 103 1 297 1 148 1 69 2 128 1 301 6 305 2 26 2 306 2 283 1 137 5 52 1 205 1 30 11 33 2 315 1 236 1 184 1 158 1 160 1 265 1 95 4 293 2 62 1 
214 1 168 3 146 1 101 4 218 1 103 1 297 1 148 2 69 3 128 1 301 9 107 2 305 3 26 3 283 1 137 8 306 3 27 1 138 1 52 2 28 1 205 1 30 17 33 3 315 1 184 1 158 1 160 1 265 1 95 6 293 1 81 1 62 1 
168 3 214 2 146 1 101 5 218 1 103 1 297 1 148 2 69 3 128 1 301 10 107 1 305 3 26 3 283 1 137 6 306 3 27 1 138 1 52 2 28 1 205 1 30 16 33 3 315 1 184 1 158 1 160 1 265 1 95 6 293 1 81 1 62 1 
168 1 146 1 101 2 297 1 69 1 128 1 301 4 305 1 26 1 137 4 283 1 306 2 205 1 30 8 33 1 315 1 184 1 158 1 160 1 265 1 95 2 293 1 62 1 
168 2 214 1 146 1 101 2 148 2 69 1 128 1 301 6 107 2 305 1 26 1 137 4 306 1 27 1 138 1 52 2 28 1 30 10 33 1 184 1 158 1 95 2 293 1 81 1 
214 2 168 3 146 1 101 5 218 2 103 1 297 1 148 2 69 4 128 1 301 10 107 1 305 4 26 4 283 1 137 7 306 3 27 1 138 1 28 1 52 2 205 1 30 17 33 4 315 1 184 1 158 1 160 1 265 1 95 8 293 1 81 1 62 1 
214 3 168 3 146 1 101 6 218 2 148 3 69 4 128 1 301 9 107 2 305 4 26 4 137 5 306 3 27 1 138 1 28 1 52 3 30 14 33 4 260 1 184 1 158 1 95 8 293 1 81 1 
214 3 168 1 137 4 283 3 306 3 101 6 205 1 30 7 297 3 315 2 160 1 301 3 62 1 
214 1 168 3 146 1 101 4 218 2 297 1 148 2 69 4 128 1 301 10 107 1 305 4 26 4 283 1 137 7 306 3 27 1 138 1 28 1 52 2 205 1 30 17 33 4 315 1 260 1 184 1 158 1 160 1 265 1 95 8 293 1 81 1 62 1 
175 1 136 1 197 1 321 1 244 1 142 1 25 1 
133 1 136 1 197 1 321 1 19 1 43 1 244 1 342 1 175 1 209 1 142 1 25 1 
319 1 316 1 193 1 216 1 284 1 292 1 88 1 286 1 173 1 60 1 269 1 
319 1 193 1 339 1 216 1 284 1 197 2 340 1 122 1 321 1 244 2 173 1 316 1 85 1 87 1 187 1 142 1 60 1 269 1 
319 1 193 3 339 1 272 1 216 1 320 1 197 2 122 2 340 2 321 2 244 2 173 1 147 1 85 1 87 1 89 1 150 1 284 1 115 1 316 1 187 1 142 1 60 2 
319 1 193 3 339 1 272 1 216 2 320 1 197 2 122 2 340 2 321 2 244 2 222 1 173 2 147 1 85 1 87 1 89 1 150 1 284 2 115 1 313 1 316 1 142 1 60 2 
150 1 319 1 193 4 16 1 1 1 216 3 284 3 340 1 310 2 173 3 47 2 313 1 207 1 147 1 316 1 56 1 55 1 241 1 294 1 60 1 304 1 269 1 89 1 
150 1 319 1 193 4 1 1 216 3 284 3 340 1 310 2 173 3 47 2 313 1 207 1 147 1 316 1 56 1 55 1 176 1 241 1 294 1 60 1 269 1 89 1 
319 1 316 1 216 1 284 1 299 1 173 1 
134 1 319 3 119 1 193 3 110 1 216 6 284 7 275 1 75 1 340 1 309 1 173 7 316 2 335 1 227 1 299 1 59 1 191 1 165 1 60 2 269 2 
0 1 319 1 168 1 216 1 122 1 321 1 173 1 227 1 85 1 279 1 87 1 283 1 137 3 284 1 95 4 139 1 13 2 187 1 60 1 142 2 62 1 193 1 339 1 101 2 197 2 340 1 244 2 297 1 245 2 69 2 106 1 301 3 108 1 305 2 26 2 204 1 306 2 205 1 30 6 78 1 33 2 315 1 316 1 262 1 160 1 118 1 265 1 
193 2 1 2 216 1 102 1 173 1 223 2 84 2 47 3 21 1 323 1 247 2 129 2 176 1 179 1 284 1 155 1 310 3 235 1 288 1 207 1 56 1 55 1 93 1 96 1 164 1 241 1 294 1 269 1 
319 2 193 2 216 1 284 1 217 1 75 1 340 1 173 1 316 1 226 1 299 1 294 1 60 1 
313 1 319 1 316 1 193 1 227 1 216 4 284 4 292 1 41 1 286 1 173 4 60 1 269 1 
150 1 134 1 319 2 193 1 110 1 350 1 216 2 284 2 340 1 113 1 173 2 316 1 163 1 60 1 
319 1 237 1 316 1 91 1 216 1 284 1 186 1 97 1 173 1 269 1 
319 1 119 1 193 1 216 2 284 2 309 1 173 2 316 1 227 1 211 1 60 1 
150 1 319 2 119 1 193 3 216 4 284 5 41 1 286 1 173 5 316 2 227 1 292 1 59 1 191 1 60 2 269 1 
150 1 319 2 119 1 193 3 216 4 284 5 41 1 286 1 173 5 316 2 227 1 292 1 59 1 50 1 60 2 269 1 
319 1 193 1 339 1 216 1 284 1 197 2 340 1 122 1 321 1 244 2 222 1 173 1 316 1 85 1 87 1 142 1 60 1 269 1 
150 1 134 1 319 2 193 1 110 1 216 1 284 1 75 1 340 1 173 1 316 1 165 1 60 1 
338 1 143 1 311 1 142 1 277 1 
143 1 338 2 272 1 320 1 53 1 31 1 115 1 310 2 32 1 311 2 47 2 277 2 314 1 207 1 56 1 248 1 96 1 241 1 142 1 
143 1 233 1 197 1 321 1 244 1 311 1 277 1 228 1 140 1 
314 1 143 1 32 1 
15 1 278 1 355 1 88 1 
15 1 278 1 355 1 80 1 154 1 259 1 79 1 
167 1 295 1 79 1 
15 1 281 1 17 2 154 1 259 1 79 3 9 1 126 1 278 1 80 3 355 1 72 1 
15 1 278 1 355 1 80 2 189 1 154 1 190 1 259 1 79 2 
237 1 15 1 126 1 39 1 80 1 202 1 58 1 154 1 97 1 259 1 79 1 
15 1 126 1 355 1 80 1 154 1 259 1 79 1 
126 1 278 1 355 2 80 1 154 1 259 1 79 1 
15 1 234 1 154 2 259 2 79 2 126 1 355 1 80 2 49 1 240 1 
51 1 15 2 154 1 259 1 79 3 208 1 126 1 278 1 162 1 355 1 80 3 189 2 58 1 
15 1 91 1 273 1 154 1 259 1 79 2 237 2 126 1 278 1 355 1 80 2 202 1 189 1 97 1 229 1 
15 2 154 2 259 2 79 4 126 1 278 1 4 1 162 1 355 1 80 4 189 2 58 1 190 1 
15 1 126 1 278 1 355 1 80 1 154 1 259 1 79 1 
15 3 281 1 17 1 154 1 54 1 259 1 79 4 278 2 162 1 355 2 80 4 189 2 58 1 72 1 
271 1 126 1 65 1 351 1 80 2 189 1 154 1 259 1 79 1 
15 1 281 2 17 2 154 1 259 1 353 1 79 3 126 1 278 1 80 3 355 1 72 1 
15 2 23 1 114 2 230 1 
126 1 48 1 80 1 154 1 259 1 79 1 
51 1 15 1 126 1 278 1 355 1 80 2 189 1 154 1 259 1 79 2 
7 1 
15 1 126 1 278 1 355 1 80 1 154 1 259 1 79 1 
51 1 15 1 17 1 154 1 259 1 79 3 126 1 278 1 80 3 355 1 189 1 
15 1 162 1 58 1 54 1 
15 1 355 1 

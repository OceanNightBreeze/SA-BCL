#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 331 (211,300) (211,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 331 (211,300) (211,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 331 (211,300) (211,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 331 (211,300) (211,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 283 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 73 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 251 110 55 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 251 110 55 97 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 298 1 179 1 300 1 169 1 230 1 170 1 198 1 248 1 117 1 211 1 331 1 40 1 
358 1 298 1 179 1 300 1 169 1 230 1 170 1 198 1 248 1 117 1 211 1 331 1 40 1 
358 1 298 1 179 1 300 1 169 1 230 1 170 1 198 1 248 1 117 1 211 1 331 1 40 1 
358 1 298 1 179 1 300 1 169 1 230 1 170 1 198 1 248 1 117 1 211 1 331 1 40 1 
358 1 298 1 146 2 131 1 179 1 360 1 326 1 169 1 248 4 117 4 375 2 125 1 10 3 331 1 66 1 187 1 261 3 40 1 
191 1 298 1 131 1 179 1 326 1 290 1 169 1 230 1 170 1 248 2 117 2 94 1 331 1 186 1 261 1 40 1 
298 2 146 1 131 1 179 1 326 1 170 1 248 3 117 3 10 1 66 1 261 2 40 2 205 1 
358 1 298 2 131 1 179 1 360 1 341 1 117 9 10 7 66 3 187 1 261 5 366 1 40 2 165 1 146 4 326 1 291 1 169 1 170 1 248 9 375 2 125 1 331 1 205 1 
358 1 298 2 131 1 179 1 360 1 341 1 117 9 10 7 66 3 187 1 261 5 366 1 40 2 165 1 146 4 326 1 291 1 169 1 170 1 248 9 375 2 125 1 331 1 205 1 
123 1 339 1 73 1 
304 2 314 1 123 1 
376 1 126 1 316 2 317 2 318 2 171 2 144 2 307 2 
359 1 156 1 180 1 115 1 183 2 61 1 13 1 184 1 163 1 214 1 15 1 238 1 189 1 144 3 285 1 307 2 41 1 42 1 43 2 350 1 167 1 168 1 171 3 376 1 51 1 199 1 126 1 270 2 315 1 84 2 316 2 153 2 203 1 317 2 318 2 109 1 333 1 
376 1 316 1 317 1 318 1 171 1 144 1 216 1 307 1 
251 1 351 1 263 1 227 1 308 1 123 1 339 1 47 1 255 1 76 1 135 1 171 1 317 1 144 1 
351 1 263 1 308 2 227 1 123 1 339 1 47 1 255 2 76 1 171 1 316 1 318 1 317 1 144 1 307 1 
207 1 308 1 255 1 324 1 59 1 
207 1 308 2 106 1 123 1 339 1 83 1 255 2 324 1 
308 1 255 1 324 1 
207 1 308 1 255 1 171 1 376 1 316 1 318 1 317 1 154 1 144 1 216 1 307 1 
123 1 
207 1 308 2 106 1 104 1 123 1 339 1 255 2 324 1 
207 2 0 2 308 5 123 1 339 1 255 5 87 1 229 1 196 2 343 1 182 1 105 1 106 1 28 1 29 1 262 1 215 2 323 1 324 2 
126 1 73 1 
171 2 275 1 345 1 126 2 316 1 317 2 318 1 144 2 307 1 
278 1 71 1 282 1 
353 1 180 1 168 1 171 1 115 1 61 1 51 1 126 1 270 1 84 1 153 1 203 1 238 1 144 1 333 1 41 1 
240 1 180 1 168 1 171 2 115 1 61 1 51 1 270 1 71 1 84 1 238 1 203 1 153 1 318 1 317 1 333 1 144 2 206 1 307 1 41 1 
251 1 240 1 171 5 275 1 63 1 126 1 316 1 318 4 317 5 349 1 144 5 110 1 206 2 307 4 
252 1 47 1 72 1 317 2 318 2 171 2 144 2 307 2 
126 1 316 1 317 3 318 3 171 3 144 3 206 1 307 3 
252 1 47 1 317 1 318 1 171 1 144 1 307 1 
345 1 47 1 316 1 317 1 318 1 171 1 144 1 275 1 307 1 
180 1 227 1 156 1 5 1 255 1 115 1 275 1 183 2 61 1 13 1 163 1 238 1 189 1 144 4 285 1 307 3 41 1 42 1 43 1 350 1 351 1 240 1 167 1 263 1 308 1 168 1 47 1 24 1 76 1 171 4 376 1 51 1 126 1 270 1 315 1 84 1 316 2 203 1 153 1 317 3 318 3 109 1 333 1 206 1 
251 1 126 1 317 2 318 1 171 2 144 2 110 1 206 1 307 1 
351 1 240 1 263 1 308 1 227 1 123 1 255 1 47 1 5 1 76 1 275 1 171 3 316 1 318 3 317 3 17 1 144 3 206 2 307 3 
278 1 71 1 316 1 317 2 318 2 171 2 144 2 275 1 206 1 307 2 
180 1 168 1 171 1 115 1 61 1 51 1 126 1 270 1 84 1 153 1 203 1 238 1 144 1 333 1 41 1 
193 1 180 1 171 1 61 1 51 1 126 1 270 1 84 1 153 1 203 1 238 1 144 1 333 1 41 1 74 1 
33 1 254 1 183 2 161 1 278 2 163 1 214 2 71 2 282 2 143 1 189 1 284 1 42 1 350 1 43 4 20 1 167 1 265 1 380 1 315 2 107 1 272 1 109 1 178 1 
351 1 47 1 317 1 318 1 72 1 171 1 144 1 307 1 
173 1 19 1 
173 1 19 1 
45 1 328 1 
45 1 328 1 
45 1 328 1 
173 1 141 1 19 1 
121 1 173 1 19 1 
313 1 45 1 173 2 328 1 134 1 19 2 
173 1 141 1 19 1 
173 1 141 1 19 1 
226 1 173 1 19 1 
226 1 173 1 19 1 
226 1 173 1 19 1 
253 1 255 1 133 1 57 1 303 1 118 1 119 1 368 1 144 2 307 2 18 1 19 1 121 1 308 1 149 1 171 2 355 1 173 1 126 1 82 1 318 2 317 2 176 1 357 1 
85 1 308 2 123 1 255 2 301 1 292 1 57 2 149 2 231 1 355 2 93 1 50 2 313 1 173 2 118 1 347 1 18 2 19 2 357 3 
358 1 331 1 169 1 
191 1 331 1 169 1 
358 2 191 1 2 1 236 1 157 1 169 3 
358 1 191 1 2 1 236 1 169 2 172 1 
358 1 191 1 2 1 236 2 169 2 
207 4 0 1 181 1 254 1 339 1 255 5 133 1 229 3 303 1 256 1 304 3 119 1 188 1 284 1 367 1 348 1 215 1 190 2 323 2 324 1 308 5 123 2 196 1 293 2 105 1 332 1 314 1 106 1 380 1 107 1 319 1 129 2 
207 7 0 2 181 3 254 3 339 1 255 9 229 8 58 1 59 5 343 1 303 4 256 2 304 9 346 1 235 1 37 1 39 1 284 3 367 1 348 2 215 2 190 6 323 6 324 6 308 9 123 5 196 2 293 6 220 1 105 1 221 5 314 3 106 1 380 3 107 3 
207 2 0 1 181 1 254 1 339 1 255 3 229 3 343 1 303 1 256 1 304 4 188 1 348 1 284 1 215 1 323 2 190 2 308 3 123 3 196 1 293 2 314 2 380 1 107 1 319 1 129 1 
207 3 0 1 181 2 254 2 339 1 255 4 229 5 343 1 303 2 256 1 304 7 235 1 37 1 39 1 188 1 348 1 284 2 215 1 190 4 323 4 308 4 123 4 196 1 293 4 314 3 380 2 107 2 319 1 129 2 
51 1 369 1 73 1 
51 1 96 1 
241 1 
61 1 51 1 238 1 
337 1 51 1 
61 1 51 1 
61 1 51 3 21 1 68 1 238 1 369 2 
33 2 228 1 361 1 276 1 9 1 138 1 65 1 214 5 213 1 16 1 43 9 20 3 46 1 311 1 250 1 380 2 315 4 107 2 
33 2 228 1 361 1 276 2 9 1 138 1 65 1 214 5 213 1 16 1 43 9 20 4 46 1 311 1 250 1 380 2 315 4 107 2 
33 2 228 1 361 1 276 1 116 1 9 1 138 1 65 1 214 5 213 1 16 1 43 9 20 3 46 1 311 1 250 1 380 2 315 4 107 2 
43 1 9 1 138 1 214 1 16 2 283 1 
33 3 228 1 361 1 276 2 9 1 183 4 138 1 163 2 213 1 214 6 16 1 350 2 43 11 20 5 325 1 167 2 46 1 242 1 311 1 380 2 315 5 250 1 107 2 223 1 109 2 
358 1 298 1 131 1 338 1 179 1 180 1 157 1 117 2 10 1 35 1 261 1 40 1 145 1 191 1 326 1 194 1 373 1 169 2 170 1 330 1 248 2 331 1 270 1 174 1 271 1 84 1 153 1 203 1 128 1 334 1 
358 1 298 1 131 1 338 1 180 1 157 1 117 3 10 2 36 1 35 1 261 1 40 1 145 1 191 1 326 1 194 1 373 1 169 2 170 1 330 1 248 3 150 1 331 1 270 1 271 1 84 1 175 1 153 1 203 1 334 1 
358 1 131 1 338 1 180 1 157 1 117 2 10 2 36 1 261 1 145 1 191 1 326 1 194 1 373 1 169 2 170 1 330 1 248 2 331 1 270 1 84 1 175 1 153 1 203 1 334 1 
298 1 338 2 180 1 88 1 117 1 139 1 62 1 61 1 40 1 41 1 194 2 170 2 330 2 248 1 150 1 356 1 51 1 378 1 270 1 84 1 203 1 153 1 297 1 
358 1 298 1 338 1 179 1 180 1 157 1 117 1 36 1 35 1 40 1 145 1 191 1 194 1 373 1 169 2 170 1 330 1 248 1 331 1 270 1 174 1 271 1 84 1 153 1 203 1 334 1 
222 1 
251 1 0 1 113 2 339 1 255 5 210 1 302 1 256 1 61 1 304 2 64 2 215 1 166 2 351 1 352 1 263 1 264 2 308 5 22 1 123 2 77 1 76 1 171 1 78 1 124 4 79 2 314 2 270 2 127 1 84 2 317 1 225 1 130 1 180 1 227 1 88 1 229 2 135 1 136 1 91 2 277 1 321 2 144 1 323 2 324 6 41 2 47 1 196 1 105 1 51 1 378 1 106 3 153 2 203 1 295 1 
251 1 227 1 255 3 210 1 135 1 136 1 302 1 144 1 324 2 351 1 352 1 263 1 264 1 308 3 104 1 47 1 76 1 171 1 124 2 106 1 127 1 317 1 
251 1 227 1 339 1 255 3 210 1 135 1 136 1 302 1 321 1 144 1 324 1 351 1 352 1 263 1 308 3 104 1 123 1 47 1 76 1 171 1 124 3 106 1 127 1 317 1 
251 1 227 1 339 1 255 3 210 1 135 1 136 1 302 1 321 1 144 1 324 2 351 1 166 1 352 1 263 1 264 1 308 3 104 1 123 1 47 1 76 1 171 1 124 3 106 1 127 1 317 1 
251 1 0 1 113 2 339 5 255 5 210 1 302 1 162 1 64 2 215 1 166 4 351 1 352 1 263 1 264 4 308 5 123 5 76 1 171 1 124 6 78 1 79 2 269 1 314 2 127 1 317 1 227 1 135 1 229 1 136 1 91 2 233 1 321 4 144 1 324 7 323 1 104 1 47 1 196 1 246 1 105 1 106 3 53 1 295 1 
251 1 0 1 113 2 339 1 255 4 210 1 302 1 304 2 64 2 215 1 351 1 166 2 352 1 263 1 264 2 308 4 123 2 76 1 171 1 124 4 78 1 79 2 314 2 127 1 317 1 130 1 227 1 135 1 229 1 136 1 91 2 321 2 144 1 323 1 324 4 47 1 196 1 105 1 106 2 295 1 
251 1 0 1 113 2 227 1 339 1 255 4 210 1 229 1 135 1 136 1 302 1 91 2 64 2 321 2 144 1 215 1 324 4 323 1 166 2 351 1 352 1 263 1 264 2 308 4 123 1 47 1 76 1 196 1 246 1 171 1 78 1 124 4 79 2 105 1 314 2 269 1 106 2 127 1 53 1 295 1 317 1 
251 1 0 1 113 2 227 1 339 1 255 4 210 1 229 1 135 1 136 1 302 1 91 2 64 2 321 2 144 1 215 1 324 4 323 1 166 2 351 1 352 1 263 1 264 2 308 4 123 1 47 1 76 1 196 1 246 1 171 1 78 1 124 4 79 2 105 1 314 2 269 1 106 2 127 1 53 1 295 1 317 1 
208 2 251 1 0 1 113 2 227 1 339 1 255 4 210 1 229 1 135 1 136 1 302 1 304 2 64 2 321 2 164 1 144 1 215 1 324 4 323 1 166 2 351 1 352 1 263 1 264 2 308 4 122 2 123 1 47 1 76 1 196 1 171 1 247 1 78 1 124 4 105 1 106 2 127 1 53 1 317 1 335 1 
251 1 0 1 113 2 227 1 339 1 255 4 210 1 229 1 135 1 136 1 302 1 91 2 233 1 64 2 321 3 215 1 144 1 323 1 324 5 351 1 166 3 352 1 263 1 264 3 308 4 123 1 47 1 76 1 196 1 246 1 171 1 78 1 124 5 79 2 105 1 314 2 269 1 106 2 127 1 53 1 295 1 317 1 
251 1 0 1 113 2 227 1 339 1 255 4 210 1 229 1 135 1 136 1 302 1 91 2 233 1 64 2 321 3 215 1 144 1 323 1 324 5 351 1 166 3 352 1 263 1 264 3 308 4 123 1 47 1 76 1 196 1 246 1 171 1 78 1 124 5 79 2 105 1 314 2 269 1 106 2 127 1 53 1 295 1 317 1 
251 1 208 2 0 1 113 2 339 1 255 4 210 1 302 1 304 2 64 2 164 1 215 1 351 1 166 2 352 1 263 1 264 2 308 4 122 2 123 1 76 1 171 1 124 4 78 1 127 1 317 1 130 1 227 1 135 1 229 1 136 1 321 2 144 1 323 1 324 4 47 1 196 1 105 1 106 2 
350 1 183 2 167 1 163 1 228 1 311 1 189 1 109 1 178 1 73 1 42 1 
359 1 33 1 181 2 56 1 254 1 114 3 276 1 232 1 160 1 183 4 13 1 278 4 163 2 214 8 71 11 282 11 189 1 284 2 42 2 286 3 20 2 350 2 43 14 167 2 310 1 312 1 126 1 315 6 380 2 107 1 109 2 296 1 111 1 
359 1 180 1 115 1 90 1 60 1 232 1 61 1 183 2 13 1 278 1 163 1 214 1 238 1 189 1 144 2 41 1 307 1 42 1 350 1 43 2 240 1 353 1 167 1 168 1 243 1 171 2 51 1 126 1 270 1 315 1 84 1 203 1 153 1 317 1 318 1 333 1 109 1 206 1 
254 2 115 2 61 2 13 1 163 3 213 1 214 11 69 2 71 6 307 1 20 5 350 3 167 3 168 2 311 1 171 3 126 1 270 1 315 11 84 1 318 1 317 1 359 1 32 2 33 4 180 2 181 2 228 1 361 1 276 1 232 1 183 6 279 2 278 6 282 6 238 2 189 3 284 2 322 1 144 3 285 2 41 1 42 3 43 22 240 1 46 1 47 1 327 2 49 1 294 1 51 2 250 1 380 4 107 4 153 1 203 2 109 3 333 2 206 1 
359 1 180 2 3 1 88 1 183 4 61 2 13 1 184 2 36 1 163 2 257 1 214 1 38 1 189 2 144 1 307 1 41 2 42 2 350 2 43 2 167 2 103 1 354 1 245 1 171 1 51 3 378 1 270 8 315 1 84 8 203 2 153 7 317 1 318 1 128 1 109 2 178 1 206 1 336 1 
33 1 181 1 254 1 342 1 275 1 232 1 183 2 278 1 163 1 214 1 71 1 282 1 189 1 284 1 144 1 307 1 42 1 20 1 350 1 43 3 167 1 171 1 380 1 315 2 316 1 107 1 318 1 317 1 109 1 
20 1 43 2 350 1 167 1 276 1 183 2 278 1 163 1 214 2 380 1 71 1 282 1 189 1 272 1 284 1 109 1 178 1 42 1 
20 1 43 2 350 1 167 1 33 1 254 1 183 2 161 1 278 1 163 1 315 2 71 1 282 1 107 1 189 1 109 1 178 1 42 1 
20 2 43 4 350 1 167 1 33 1 181 1 254 1 276 1 183 2 278 2 163 1 214 2 315 2 380 1 71 2 107 1 282 2 189 1 284 1 109 1 178 1 42 1 
20 1 43 2 350 1 167 1 276 1 183 2 278 1 257 1 163 1 214 2 380 1 71 1 282 1 189 1 272 1 284 1 109 1 42 1 
20 1 43 2 350 1 167 1 33 1 254 1 183 2 161 1 278 1 257 1 163 1 315 2 71 1 282 1 107 1 189 1 109 1 42 1 
20 2 43 4 350 1 167 1 33 1 181 1 254 1 276 1 183 2 278 2 257 1 163 1 214 2 315 2 380 1 71 2 107 1 282 2 189 1 284 1 109 1 42 1 
20 2 350 1 43 4 167 1 33 1 181 1 254 1 276 1 183 2 278 2 163 1 214 2 315 2 380 1 71 2 107 1 282 2 189 1 284 1 109 1 42 1 
359 1 180 1 115 1 61 1 183 2 13 1 163 1 214 1 238 1 189 1 144 1 285 1 41 1 42 1 43 2 350 1 167 1 168 1 171 1 51 1 126 1 270 1 315 1 84 1 203 1 153 1 333 1 109 1 
359 1 180 1 61 1 183 2 13 1 163 1 214 1 238 1 189 1 144 1 41 1 74 1 42 1 43 2 350 1 167 1 193 1 329 1 171 1 51 1 126 1 270 1 315 1 84 1 203 1 153 1 333 1 109 1 
20 2 43 4 350 1 167 1 33 1 181 1 254 1 276 1 232 1 183 2 278 2 163 1 214 2 315 2 380 1 71 2 107 1 282 2 189 1 284 1 109 1 42 1 
33 1 180 1 181 1 254 1 276 1 115 1 61 1 183 2 278 2 163 1 214 2 71 2 282 2 238 1 284 1 189 1 144 1 285 1 42 1 20 2 43 4 350 1 167 1 168 1 327 1 171 1 51 1 270 1 315 2 380 1 84 1 107 1 203 1 153 1 333 1 128 1 109 1 
181 1 254 1 276 1 275 1 232 1 183 2 278 1 163 1 214 2 71 1 282 1 189 1 306 1 284 1 144 1 307 1 42 1 20 1 350 1 43 3 167 1 171 1 315 1 380 1 107 1 316 1 318 1 317 1 109 1 
33 1 181 2 56 1 254 2 6 1 114 2 276 1 183 4 163 2 214 6 284 2 370 1 286 1 350 2 43 13 20 2 167 2 288 1 242 1 244 1 148 1 25 1 81 1 315 7 380 2 107 2 273 1 109 2 296 1 
33 2 181 3 56 2 254 2 114 2 276 2 12 1 183 6 163 3 214 14 142 1 260 1 284 3 370 2 286 2 325 2 20 4 350 3 43 26 167 3 372 1 288 2 242 1 309 1 244 1 148 1 25 1 379 1 315 12 380 3 202 1 107 2 273 4 109 3 
33 3 181 4 56 3 228 1 254 4 114 4 276 3 12 1 183 6 163 3 67 1 142 1 214 16 260 1 284 4 370 2 286 3 325 1 350 3 43 34 20 6 167 3 372 1 288 1 309 1 242 1 244 1 311 1 148 1 25 1 81 1 379 1 315 18 380 4 202 1 107 4 273 4 109 3 296 1 
33 3 181 4 56 3 228 1 254 3 114 4 276 3 12 1 183 8 163 4 67 1 142 1 214 17 260 1 284 4 370 2 286 3 325 2 350 4 43 33 20 6 167 4 372 1 288 1 309 1 242 1 244 1 311 1 148 1 25 1 81 1 379 1 315 16 380 4 202 1 107 3 273 4 109 4 296 1 
33 6 181 7 56 2 228 1 254 7 114 4 276 7 12 1 183 4 163 2 142 1 214 24 260 1 284 7 370 1 286 4 325 1 350 2 43 47 20 13 167 2 372 1 288 1 309 1 310 2 242 1 244 1 311 1 148 1 25 1 379 1 315 23 380 7 202 1 107 7 273 4 109 2 296 2 
85 1 313 1 249 1 173 1 301 1 57 1 149 1 18 1 19 1 355 1 
121 1 368 1 
112 1 75 1 173 1 363 1 57 1 149 1 18 1 19 1 355 1 
120 1 141 1 
226 1 70 1 134 1 
85 1 308 1 123 1 255 1 301 1 292 1 57 1 149 1 231 1 355 1 50 1 313 1 118 1 173 1 347 1 18 1 19 1 357 2 
85 1 308 1 123 1 255 1 301 1 292 1 57 1 149 1 231 1 355 1 50 1 313 1 118 1 173 1 347 1 18 1 19 1 357 2 
85 1 308 1 123 1 255 1 301 1 292 1 57 1 149 1 231 1 355 1 50 1 313 1 118 1 173 1 347 1 18 1 19 1 357 2 
120 1 141 1 134 1 
120 1 141 1 134 1 
226 1 70 1 
226 1 70 1 134 1 
253 1 176 1 
207 1 253 1 299 1 255 1 133 1 57 1 231 1 303 1 119 1 368 1 144 2 18 1 307 2 19 1 121 1 308 1 149 1 171 2 355 1 50 1 173 1 126 1 82 1 176 1 318 2 317 2 357 1 
359 1 180 1 232 1 61 1 183 2 13 1 184 2 163 1 214 1 189 1 144 2 42 1 350 1 43 2 167 1 371 1 267 1 103 1 171 2 51 1 52 1 270 2 315 1 84 2 203 1 153 2 317 2 274 1 109 1 336 1 155 1 
358 1 191 1 99 1 338 1 180 1 157 1 169 2 7 1 331 1 36 1 270 2 259 1 271 1 84 2 203 1 153 2 128 1 334 1 145 1 
358 1 191 1 338 1 180 1 102 1 157 1 169 2 331 1 36 1 270 1 259 1 271 1 84 1 153 1 203 1 334 1 145 1 
99 1 338 1 180 1 89 1 88 1 61 1 62 1 51 1 378 1 270 1 84 1 203 1 153 1 41 1 
358 1 191 1 99 1 338 1 180 1 157 1 169 2 7 1 331 1 36 1 270 1 259 1 271 1 84 1 203 1 153 1 334 1 145 1 
280 1 
123 1 339 1 229 1 262 1 323 1 182 1 73 1 
0 1 339 1 255 1 229 1 91 1 304 1 215 1 323 1 324 1 308 1 123 2 196 1 105 1 79 1 314 1 106 1 295 1 
0 2 254 1 158 1 159 1 255 2 256 1 61 1 304 6 215 2 21 1 308 2 123 3 76 1 314 3 270 1 84 1 224 1 180 1 181 1 34 1 229 4 279 1 96 2 238 1 284 1 324 2 190 3 323 3 41 1 369 1 44 1 289 1 197 1 196 2 293 3 105 2 51 4 106 1 380 1 107 1 203 2 153 1 
225 1 0 2 181 2 56 1 254 2 132 1 339 2 255 1 229 8 114 1 256 1 212 2 304 6 142 1 260 1 284 2 215 2 324 1 190 5 323 5 286 1 217 1 372 1 308 1 309 1 123 5 196 2 293 5 105 2 200 1 314 3 106 1 380 2 202 1 107 2 
0 1 361 1 255 1 229 2 212 2 213 1 144 1 215 1 323 2 216 1 307 1 46 1 308 1 196 1 171 1 105 1 376 1 200 1 269 1 250 1 380 2 107 1 316 1 318 1 317 1 154 1 
0 1 339 1 123 1 196 1 229 1 182 1 105 1 262 1 215 1 323 1 
181 1 254 1 123 2 229 2 293 2 304 4 314 2 380 1 107 1 284 1 323 2 190 2 
308 1 106 1 123 1 339 1 255 1 324 1 
225 2 0 2 180 2 255 3 88 1 229 2 343 1 344 1 8 1 277 1 256 2 137 1 61 2 365 1 238 1 215 2 324 4 323 2 41 2 287 1 100 1 308 3 77 1 196 2 195 1 105 1 51 2 378 1 270 4 106 2 84 4 108 2 203 3 153 4 
156 1 180 1 115 1 183 2 61 1 13 1 163 1 238 1 189 1 144 3 285 1 41 1 307 2 42 1 43 1 350 1 167 1 168 1 171 3 376 1 51 1 126 1 270 1 315 1 84 1 316 2 153 1 203 1 317 2 318 2 109 1 333 1 
225 1 0 1 339 1 123 2 196 1 229 1 105 1 256 1 304 2 314 1 215 1 190 1 323 1 
4 1 149 1 18 1 
253 1 151 1 301 1 149 1 18 1 
4 1 149 1 18 1 
4 1 149 1 18 1 
11 1 149 1 18 1 
11 1 149 1 18 1 
11 1 149 1 18 1 
149 1 18 1 
173 1 19 1 
33 2 228 1 361 1 276 2 183 4 163 2 213 1 214 5 325 1 350 2 20 4 43 10 167 2 46 1 311 1 250 1 315 5 380 2 107 2 109 2 
228 1 311 1 73 1 
20 2 350 1 43 4 167 1 33 1 181 1 254 1 276 1 183 2 377 1 163 1 214 2 315 2 380 1 107 1 284 1 109 1 
43 7 20 2 33 1 181 1 56 1 254 1 114 2 276 1 214 3 315 4 380 1 107 1 284 1 296 1 286 1 
33 3 181 2 228 1 254 2 361 1 114 2 276 2 183 2 163 1 213 1 214 10 284 2 286 2 43 20 20 5 325 1 350 1 167 1 46 1 310 1 311 1 250 1 380 4 315 10 107 4 109 1 296 1 111 1 
43 1 315 1 114 1 
43 1 214 1 286 1 
350 1 43 6 20 3 167 1 33 2 181 1 254 1 276 1 183 2 377 1 279 1 163 1 214 3 315 3 380 1 107 1 284 1 109 1 
33 1 181 2 56 1 254 2 114 1 276 1 183 2 163 1 142 1 214 6 260 1 284 2 286 1 43 12 350 1 20 2 167 1 372 1 242 1 309 1 315 6 380 2 107 2 202 1 109 1 
43 6 20 2 33 1 46 1 361 1 276 1 214 3 213 1 380 1 315 3 107 1 
20 2 43 3 325 1 350 1 167 1 33 1 46 1 228 1 311 1 276 1 183 2 163 1 214 1 213 1 250 1 315 2 177 1 109 1 
350 1 20 5 43 10 167 1 33 3 242 1 46 2 361 1 276 2 183 2 163 1 213 2 214 5 250 1 315 5 380 2 107 2 109 1 
350 1 43 2 20 1 167 1 242 1 276 1 183 2 163 1 214 2 380 1 284 1 109 1 
20 2 350 1 43 4 167 1 33 1 242 1 181 1 254 1 276 1 183 2 163 1 214 2 315 2 380 1 107 1 284 1 109 1 
325 1 43 3 350 3 20 2 167 3 33 1 242 1 46 1 276 1 183 6 81 1 163 3 213 1 214 1 315 2 177 1 109 3 
33 3 181 2 56 1 228 1 254 2 361 1 114 3 276 3 183 8 163 4 14 1 213 1 214 12 284 2 286 3 325 1 350 4 43 24 20 6 167 4 192 1 46 1 242 1 266 1 311 1 81 1 377 1 250 1 315 12 380 4 107 4 109 4 
33 2 56 1 228 1 361 1 114 1 276 1 183 2 163 1 142 1 214 5 213 1 286 1 20 3 43 10 350 1 167 1 242 1 46 1 311 1 380 2 315 5 250 1 107 2 109 1 
33 2 181 1 56 1 228 1 361 1 114 2 276 2 183 4 163 2 213 1 142 1 214 7 284 1 286 1 43 13 350 2 20 4 167 2 46 1 242 1 311 1 377 1 250 1 315 6 380 3 107 2 109 2 296 1 
33 3 181 2 56 1 228 1 254 2 361 1 114 1 276 2 183 6 163 3 213 1 142 1 214 10 260 1 284 2 286 1 43 21 350 3 20 5 325 1 167 3 372 1 46 1 242 1 309 1 311 1 377 1 250 1 315 11 380 4 202 1 107 4 109 3 
33 3 181 2 56 1 228 1 254 1 361 1 114 1 276 3 183 6 163 3 213 1 142 1 214 11 260 1 284 2 286 1 325 1 43 19 350 3 20 6 167 3 372 1 46 1 242 1 309 1 311 1 377 1 250 1 315 8 380 4 107 3 202 1 109 3 
33 2 56 1 228 1 361 1 114 1 276 1 183 2 163 1 142 1 214 5 213 1 286 1 20 3 43 10 350 1 167 1 242 1 46 1 311 1 380 2 315 5 250 1 107 2 109 1 
33 1 181 2 56 1 254 2 114 1 276 1 183 2 163 1 142 1 214 6 260 1 284 2 286 1 43 12 350 1 20 2 167 1 372 1 242 1 309 1 315 6 380 2 107 2 202 1 109 1 
33 3 181 2 56 1 228 1 254 1 361 1 114 1 276 2 183 8 163 4 213 1 142 1 214 11 260 1 284 2 286 1 43 20 350 4 20 5 325 2 167 4 372 1 46 1 242 1 309 1 311 1 377 1 250 1 315 9 380 4 202 1 107 3 109 4 
33 3 181 3 56 1 254 2 114 1 276 3 183 8 163 4 142 1 214 9 260 1 284 3 286 1 43 16 350 4 20 6 325 2 167 4 372 1 242 1 309 1 81 1 315 7 380 3 202 1 107 2 109 4 
43 5 20 4 33 2 46 2 228 1 361 1 311 1 276 2 214 2 213 2 315 3 380 1 250 1 107 1 
33 3 181 2 56 1 228 1 254 1 361 1 114 1 276 2 183 8 163 4 213 1 142 1 214 11 260 1 284 2 286 1 43 20 350 4 20 5 325 2 167 4 372 1 46 1 242 1 309 1 311 1 81 1 250 1 315 9 380 4 202 1 107 3 109 4 
251 1 55 1 110 1 
251 1 185 1 27 1 201 1 219 1 97 1 55 1 110 1 
61 1 51 1 180 1 378 1 270 1 84 1 88 1 203 1 153 1 41 1 73 1 
180 1 168 1 171 2 61 1 51 1 126 1 270 1 84 1 238 1 203 1 153 1 318 1 317 1 333 1 144 2 206 1 307 1 41 1 
337 1 180 1 61 2 258 1 238 2 144 2 307 2 351 1 263 1 168 1 47 1 171 2 51 3 126 1 270 1 84 1 153 1 108 1 203 1 317 2 318 1 333 1 206 1 
337 1 180 1 61 2 140 1 258 1 238 2 144 2 307 2 74 1 351 1 263 1 47 1 171 2 51 3 126 1 270 2 84 2 153 2 108 1 203 1 317 2 318 1 333 1 206 1 
337 1 308 2 180 1 86 1 123 1 339 1 255 2 76 1 61 1 80 1 51 4 140 1 258 1 96 1 270 3 84 3 238 1 203 1 108 1 153 3 324 1 41 1 369 1 
337 1 44 1 308 2 180 1 123 1 339 1 255 2 76 1 61 1 51 4 140 1 258 1 96 1 270 3 84 3 238 1 203 1 108 1 153 3 324 1 41 1 369 1 
180 1 270 1 354 1 84 1 203 1 153 1 
100 1 21 1 180 2 3 1 354 1 245 1 61 2 184 1 51 3 36 1 270 7 38 1 84 7 365 1 153 6 238 1 203 3 128 1 239 1 41 2 336 1 
115 1 61 1 163 2 213 1 214 4 307 1 350 2 20 3 167 2 168 1 311 1 171 2 270 1 126 1 315 4 84 1 318 1 317 1 128 1 32 1 33 2 180 1 228 1 361 1 276 1 232 1 183 4 238 1 189 2 144 2 285 1 42 2 43 8 46 1 47 1 327 1 49 1 51 1 250 1 380 2 107 2 153 1 203 1 109 2 333 1 206 1 155 1 
207 1 0 2 339 1 255 3 158 1 34 1 229 1 182 1 96 1 262 1 215 2 323 1 324 2 41 1 369 1 44 1 308 3 123 1 76 1 196 2 195 1 197 1 105 2 51 2 270 1 106 1 84 1 153 1 
289 1 21 1 180 1 354 1 61 1 51 2 270 2 84 2 153 2 238 1 203 2 128 1 369 1 
180 1 88 1 61 1 51 1 140 1 378 1 270 4 84 4 203 1 153 4 54 1 128 1 41 1 
100 1 180 1 8 1 137 1 61 1 51 1 270 2 237 1 84 2 365 1 108 1 153 2 238 1 203 2 
191 1 331 1 180 1 270 1 84 1 169 1 203 1 153 1 145 1 41 1 
61 1 51 1 180 1 52 1 36 1 270 2 84 2 203 1 153 2 128 1 336 1 
180 2 3 1 88 1 61 2 51 3 378 1 270 5 38 1 84 5 108 1 153 4 203 2 54 1 128 1 41 1 336 1 
101 1 180 2 88 1 61 2 51 3 378 1 270 5 38 1 84 5 108 1 153 4 203 2 54 1 128 1 41 1 336 1 
180 1 171 2 61 1 51 1 126 1 270 1 84 1 238 1 203 1 153 1 318 1 317 1 333 1 144 2 206 1 307 1 41 1 74 1 
100 1 21 1 180 1 61 1 51 1 270 1 84 1 365 1 108 1 153 1 238 1 203 2 239 1 
209 1 126 1 98 1 92 1 31 1 
351 1 207 1 147 1 263 1 209 1 308 2 227 1 123 1 339 1 47 1 255 2 5 1 76 1 92 2 126 1 364 1 98 2 204 1 31 2 
371 1 209 1 267 1 317 1 98 1 171 1 144 1 274 1 31 1 
147 1 209 1 364 1 
131 1 326 1 261 1 73 1 
298 1 131 1 326 1 261 1 40 1 248 1 117 1 
170 1 330 1 117 1 
298 1 179 1 131 1 290 2 326 1 23 1 374 1 248 3 117 3 234 1 261 1 40 1 
10 1 298 1 131 1 326 1 261 1 40 1 248 2 375 1 117 2 
358 1 331 1 146 1 298 1 179 1 169 1 261 1 40 1 248 1 125 1 117 1 
298 1 179 1 326 1 261 1 40 1 248 1 117 1 
298 1 131 1 179 1 326 2 40 1 248 1 117 1 
298 2 179 1 326 1 248 2 117 2 26 1 281 1 152 1 261 1 40 2 
298 1 146 1 131 1 179 1 326 1 248 3 117 3 10 2 66 1 366 1 261 2 40 1 165 1 
191 1 358 1 298 1 131 1 179 1 326 1 157 1 48 1 169 2 248 2 117 2 10 1 331 1 261 1 40 1 
298 2 146 1 131 1 179 1 326 1 248 4 117 4 375 1 10 2 66 1 187 1 261 2 40 2 
298 1 131 1 179 1 326 1 261 1 40 1 248 1 117 1 
298 1 146 1 131 2 290 1 326 2 340 1 23 1 248 4 117 4 10 2 234 1 66 1 261 3 40 1 
298 1 179 1 131 1 326 1 291 1 268 1 248 2 117 2 10 1 95 1 261 1 40 1 
298 1 131 1 179 1 234 1 326 1 290 2 23 2 261 1 40 1 248 3 30 1 117 3 
320 2 1 1 362 1 261 2 
298 1 179 1 218 1 40 1 248 1 117 1 
10 1 298 1 131 1 179 1 326 1 261 1 366 1 40 1 248 2 117 2 
305 1 
298 1 131 1 179 1 326 1 261 1 40 1 248 1 117 1 
298 1 179 1 131 1 290 1 326 1 248 3 117 3 10 1 261 1 366 1 40 1 
146 1 66 1 340 1 261 1 
326 1 261 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (127,291) (127,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (127,291) (127,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (127,291) (127,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (127,291) (127,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (139,286) (139,286) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,299,318) (169,261,353) (169,261,353) (169,261,353) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,299,318) (169,261,353) (169,261,353) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (59,299,318) (169,261,353) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,299,318) (169,261,353) (169,261,353) (169,261,353) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,299,318) (59,299,318) (59,299,318) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,299,318) (59,299,318) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,299,318) (59,299,318) (59,299,318) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
92 1 127 1 200 1 69 1 89 1 243 1 137 1 122 1 76 1 291 1 64 1 
92 1 127 1 200 1 69 1 89 1 243 1 137 1 122 1 76 1 291 1 64 1 
92 1 127 1 200 1 69 1 89 1 243 1 137 1 122 1 76 1 291 1 64 1 
92 1 127 1 200 1 69 1 89 1 243 1 137 1 122 1 76 1 291 1 64 1 
367 2 369 1 89 1 3 1 76 4 305 1 226 1 200 1 117 1 119 1 7 2 243 1 69 4 363 1 180 3 220 1 194 3 284 1 
139 1 200 1 286 1 69 1 89 1 243 1 137 1 122 1 76 1 154 1 
367 1 369 1 89 2 137 1 76 3 200 2 119 1 243 1 69 3 180 1 85 1 194 2 284 1 
367 4 234 1 369 3 3 1 89 2 287 1 137 1 76 9 305 1 226 1 326 1 200 2 117 1 119 1 7 2 243 1 69 9 246 1 363 1 180 7 85 1 220 1 194 5 284 1 
367 4 234 1 369 3 3 1 89 2 287 1 137 1 76 9 305 1 226 1 326 1 200 2 117 1 119 1 7 2 243 1 69 9 246 1 363 1 180 7 85 1 220 1 194 5 284 1 
376 1 167 1 6 1 
277 1 
301 2 268 1 217 2 241 2 136 1 309 2 86 2 293 2 
183 1 22 2 314 1 357 2 136 1 90 1 46 1 293 3 93 1 165 1 49 1 50 1 217 2 241 2 242 2 8 1 361 1 320 1 368 1 301 3 268 1 148 1 341 2 151 1 57 2 80 1 228 1 106 1 230 1 229 1 309 2 308 1 17 1 351 1 86 2 19 1 377 1 
372 1 301 1 268 1 217 1 241 1 309 1 47 1 280 1 86 1 293 1 
301 1 222 1 316 1 78 1 251 1 293 1 216 1 215 1 372 1 241 1 376 1 167 1 9 1 247 1 
301 1 222 1 251 1 293 1 216 1 215 1 372 1 217 1 241 1 309 1 376 1 167 1 9 2 86 1 247 2 
43 1 254 1 9 1 289 1 247 1 
43 1 253 1 254 1 376 1 167 1 9 2 79 1 247 2 
43 1 9 1 247 1 
301 1 268 1 47 1 186 1 293 1 372 1 217 1 254 1 241 1 309 1 9 1 280 1 86 1 247 1 
167 1 
266 1 43 1 254 1 376 1 167 1 9 2 79 1 247 2 
43 2 235 1 171 1 1 1 304 1 79 1 68 1 373 2 201 1 254 2 376 1 278 2 38 2 167 1 202 1 9 5 71 1 298 1 247 5 
136 1 6 1 
301 2 136 2 260 1 293 2 217 1 120 1 241 2 309 1 86 1 
65 1 157 1 72 1 
301 1 22 1 357 1 136 1 151 1 293 1 80 1 228 1 229 1 106 1 242 1 308 1 70 1 351 1 19 1 377 1 
301 2 22 1 270 1 65 1 357 1 151 1 293 2 80 1 217 1 228 1 106 1 229 1 241 1 242 1 308 1 337 1 351 1 86 1 19 1 377 1 
301 3 270 1 217 3 241 3 309 1 136 1 86 3 293 3 
372 1 301 1 217 1 241 1 47 1 86 1 293 1 
372 1 301 1 217 1 120 1 241 1 309 1 260 1 86 1 293 1 
183 1 22 1 314 1 357 1 136 1 46 1 293 4 165 1 216 1 215 1 49 1 50 1 217 3 120 1 241 3 242 1 361 1 336 1 9 1 320 1 337 1 247 1 301 4 268 1 148 1 222 1 270 1 341 1 151 1 132 1 251 1 57 2 372 1 80 1 228 1 106 1 229 1 308 1 309 2 351 1 17 1 19 1 86 3 377 1 
301 2 217 1 270 1 241 2 136 1 78 1 55 1 86 1 293 2 
301 3 222 1 270 2 251 1 293 3 262 1 372 1 216 1 215 1 217 3 120 1 241 3 309 1 336 1 167 1 9 1 337 1 86 3 247 1 
301 2 270 1 65 1 293 2 217 2 120 1 241 2 309 1 72 1 86 2 
301 1 22 1 357 1 136 1 151 1 293 1 80 1 228 1 229 1 106 1 242 1 308 1 351 1 19 1 377 1 
301 1 22 1 44 1 357 1 136 1 151 1 293 1 80 1 228 1 229 1 106 1 242 1 308 1 96 1 377 1 
183 2 23 1 314 1 65 2 46 1 93 2 27 1 49 1 50 1 361 1 32 1 340 1 72 2 99 1 322 1 148 1 224 1 370 1 341 4 175 1 343 1 57 2 157 2 134 1 
372 1 215 1 301 1 217 1 223 1 241 1 86 1 293 1 
301 5 270 2 136 1 66 1 78 1 55 1 293 5 217 4 120 1 241 5 309 1 156 1 337 1 86 4 
372 1 301 2 217 2 223 1 241 2 47 1 86 2 293 2 
53 1 364 1 
53 1 364 1 
323 1 273 1 
323 1 273 1 
323 1 273 1 
53 1 296 1 364 1 
53 1 97 1 364 1 
101 1 0 1 323 1 53 2 273 1 364 2 
53 1 296 1 364 1 
53 1 296 1 364 1 
179 1 53 1 364 1 
179 1 53 1 364 1 
179 1 53 1 364 1 
354 2 366 1 0 1 2 2 13 1 53 2 209 2 259 1 115 1 188 3 82 1 294 2 31 1 167 1 9 2 39 2 339 1 364 2 247 2 
301 2 354 1 315 1 2 1 136 1 53 1 209 1 4 1 77 1 152 1 290 1 293 2 188 1 264 1 217 2 241 2 82 1 108 1 294 1 97 1 9 1 364 1 86 2 247 1 
226 1 363 1 220 1 
154 1 
154 1 
154 1 
154 1 
112 1 43 1 235 2 315 1 4 1 292 1 239 1 214 1 27 1 360 1 9 5 167 2 340 1 193 2 298 3 247 5 99 1 322 1 171 1 172 1 77 1 79 1 344 2 373 1 254 4 277 3 38 1 278 1 376 1 233 2 181 1 285 1 
159 1 112 2 43 6 235 6 289 5 214 3 27 3 360 3 218 1 9 9 167 5 51 5 71 1 340 3 193 6 126 1 298 8 247 9 99 3 322 3 171 1 75 1 77 4 79 1 56 1 373 2 105 1 254 7 277 9 376 1 278 2 38 2 233 6 181 2 285 1 
112 1 235 2 47 1 186 1 292 1 239 1 293 1 214 1 27 1 360 1 217 1 241 1 167 2 9 3 71 1 340 1 298 3 193 2 247 3 301 1 99 1 268 1 322 1 77 1 344 1 372 1 373 1 254 2 309 1 376 1 38 1 278 1 277 3 181 1 233 2 280 1 86 1 
235 4 47 1 186 1 292 1 239 1 293 1 241 1 9 4 298 5 193 4 340 2 247 4 301 1 99 2 344 2 56 1 254 3 309 1 112 1 214 2 27 2 360 2 217 1 218 1 167 3 71 1 268 1 322 2 75 1 77 2 372 1 373 1 278 1 38 1 277 6 376 1 181 1 233 4 280 1 86 1 
347 1 151 1 6 1 
151 1 238 1 
146 1 
151 1 377 1 
374 1 106 1 347 2 133 1 151 3 377 1 
106 1 151 1 377 1 
307 1 151 1 
183 3 23 3 322 1 341 7 331 1 288 1 343 2 177 1 103 1 93 4 94 1 61 1 81 1 256 2 124 1 168 1 340 1 
183 3 23 3 322 1 341 7 331 1 288 1 343 2 177 1 103 1 93 4 94 1 61 1 81 1 256 2 124 1 168 1 340 1 
183 3 23 3 322 1 341 7 331 1 288 1 343 2 67 1 177 1 103 1 93 4 94 1 61 1 81 1 256 2 124 1 168 1 340 1 
183 11 182 1 23 7 314 1 331 1 46 1 163 1 93 11 27 3 49 1 94 2 360 3 333 1 334 4 124 1 168 1 321 1 340 3 99 3 100 1 148 1 322 3 341 22 371 1 343 3 103 1 57 2 81 4 256 1 204 3 282 1 
183 4 23 4 314 2 288 1 46 2 163 1 93 5 49 2 94 1 140 1 124 1 168 1 340 1 322 1 12 1 148 2 341 9 343 3 57 4 103 1 177 1 61 1 81 1 256 2 
353 1 22 1 128 1 357 1 250 1 89 1 137 1 76 1 272 1 154 1 261 1 59 1 200 1 80 1 242 1 308 1 243 1 69 1 348 1 95 1 142 1 169 1 
22 1 357 1 250 1 89 1 24 1 137 1 76 2 272 1 154 1 261 1 59 1 200 1 80 1 242 1 308 1 69 2 348 1 109 1 95 1 180 1 111 1 142 1 169 1 
22 1 357 1 250 1 24 1 137 1 76 1 154 1 59 1 80 1 242 1 308 1 69 1 348 1 95 1 111 1 180 1 142 1 169 1 
22 1 357 1 89 1 137 2 242 1 69 1 95 2 265 1 125 1 142 2 150 1 250 2 173 1 76 1 151 1 200 1 60 1 80 1 228 1 308 1 109 1 231 1 377 1 
353 1 22 1 357 1 250 1 89 1 24 1 137 1 76 1 272 1 154 1 261 1 59 1 200 1 80 1 242 1 308 1 243 1 69 1 348 1 95 1 142 1 169 1 
88 1 
43 2 235 2 45 1 293 1 242 2 241 1 9 3 141 1 295 1 298 2 247 3 301 1 195 1 52 1 54 2 151 1 251 1 15 1 60 1 155 1 308 1 22 2 112 1 357 2 208 1 358 1 316 1 212 1 214 1 116 1 216 1 215 1 167 1 125 1 267 1 222 1 171 1 271 1 78 1 79 1 373 1 372 1 80 1 228 2 277 1 278 1 38 1 83 1 279 1 377 1 
43 2 208 1 45 1 316 1 212 1 293 1 216 1 215 1 241 1 9 3 247 3 11 1 301 1 266 1 222 1 271 1 54 2 78 1 79 1 251 1 372 1 83 1 
43 1 208 1 45 1 316 1 212 1 293 1 216 1 215 1 241 1 9 3 167 1 247 3 301 1 266 1 222 1 271 1 54 3 78 1 79 1 251 1 372 1 346 1 376 1 83 1 
43 2 208 1 45 1 316 1 212 1 293 1 216 1 215 1 241 1 9 3 167 1 247 3 145 1 11 1 266 1 301 1 222 1 271 1 54 3 78 1 79 1 251 1 372 1 346 1 376 1 83 1 
355 1 43 7 235 1 208 1 45 1 161 1 316 1 212 1 214 2 293 1 213 1 216 1 215 1 241 1 167 5 9 5 141 1 298 1 247 5 248 1 145 4 11 4 267 1 266 1 301 1 170 2 222 1 171 1 271 1 54 6 78 1 79 3 251 1 373 1 372 1 15 2 346 4 155 2 38 1 278 1 376 5 232 1 83 1 279 2 
235 1 208 1 45 1 358 1 316 1 212 1 214 1 293 1 216 1 215 1 241 1 167 1 9 2 141 1 298 1 247 2 301 1 267 1 222 1 271 1 171 1 54 2 78 1 251 1 373 1 372 1 15 1 155 1 277 1 38 1 278 1 83 1 279 1 
43 4 355 1 235 1 208 1 45 1 161 1 316 1 212 1 214 2 293 1 216 1 215 1 241 1 167 1 9 4 141 1 298 1 247 4 11 2 145 2 248 1 267 1 301 1 170 2 222 1 271 1 171 1 54 4 78 1 79 2 251 1 372 1 373 1 15 2 346 2 155 2 376 1 38 1 278 1 83 1 279 2 
43 4 355 1 235 1 208 1 45 1 161 1 316 1 212 1 214 2 293 1 216 1 215 1 241 1 167 1 9 4 141 1 298 1 247 4 11 2 145 2 248 1 267 1 301 1 170 2 222 1 271 1 171 1 54 4 78 1 79 2 251 1 372 1 373 1 15 2 346 2 155 2 376 1 38 1 278 1 83 1 279 2 
43 4 235 1 184 2 208 1 45 1 161 1 316 1 317 1 212 1 293 1 216 1 215 1 29 1 241 1 167 1 9 4 141 1 297 2 298 1 247 4 11 2 145 2 301 1 222 1 198 1 271 1 171 1 54 4 78 1 79 2 251 1 372 1 373 1 15 2 346 2 155 2 376 1 277 2 38 1 278 1 83 1 
43 5 355 1 235 1 208 1 45 1 161 1 316 1 212 1 214 2 293 1 216 1 215 1 241 1 167 1 9 4 141 1 298 1 247 4 248 1 145 3 11 3 267 1 301 1 170 2 222 1 171 1 271 1 54 5 78 1 79 2 251 1 373 1 372 1 15 2 346 3 155 2 376 1 38 1 278 1 83 1 232 1 279 2 
43 5 355 1 235 1 208 1 45 1 161 1 316 1 212 1 214 2 293 1 216 1 215 1 241 1 167 1 9 4 141 1 298 1 247 4 248 1 145 3 11 3 267 1 301 1 170 2 222 1 171 1 271 1 54 5 78 1 79 2 251 1 373 1 372 1 15 2 346 3 155 2 376 1 38 1 278 1 83 1 232 1 279 2 
43 4 235 1 184 2 45 1 293 1 241 1 9 4 141 1 298 1 297 2 247 4 145 2 11 2 301 1 198 1 54 4 251 1 15 2 346 2 155 2 208 1 358 1 316 1 212 1 215 1 216 1 167 1 222 1 171 1 271 1 78 1 79 2 372 1 373 1 278 1 38 1 277 2 376 1 83 1 
183 3 23 2 314 1 65 1 136 2 288 1 46 1 6 1 93 3 49 1 50 1 361 1 168 1 72 1 340 1 148 1 322 1 370 1 341 6 343 2 103 1 57 2 177 1 61 1 256 1 157 1 
183 6 329 1 23 2 314 2 65 11 136 1 46 2 162 1 93 8 27 1 49 2 360 2 50 2 334 3 361 1 320 1 338 1 321 1 72 4 340 1 368 1 99 2 148 2 322 2 324 1 341 14 371 1 343 1 199 1 57 4 81 1 157 11 204 3 
22 1 183 1 314 1 357 1 136 1 46 1 25 1 293 2 93 1 49 1 50 1 217 1 242 1 241 1 361 1 70 1 337 1 320 1 72 1 144 1 301 2 368 1 148 1 270 1 324 1 341 2 151 1 57 2 80 1 228 1 106 1 229 1 178 1 308 1 351 1 19 1 86 1 377 1 
183 7 136 2 288 1 46 3 293 3 93 7 49 3 50 3 242 1 241 1 337 1 143 1 340 2 301 3 99 1 148 3 249 2 341 14 151 2 343 3 103 1 57 6 252 2 61 1 106 2 308 2 256 1 157 4 313 1 351 2 19 2 22 1 23 3 314 3 65 4 357 1 165 2 27 1 360 1 217 1 361 3 320 1 168 1 72 4 365 1 368 1 322 2 270 1 324 1 177 1 80 2 228 1 229 2 86 1 40 1 377 2 
22 7 183 1 314 2 114 1 357 8 24 1 46 2 5 1 293 1 93 1 49 2 217 1 50 2 241 1 242 8 361 2 219 1 320 1 125 1 301 1 368 1 128 1 221 1 148 2 34 1 270 1 102 1 370 1 341 2 151 3 57 4 60 1 276 1 80 2 228 2 230 2 308 2 86 1 377 2 
183 2 23 1 314 1 65 1 46 1 293 1 93 1 27 1 49 1 360 1 217 1 50 1 120 1 241 1 361 1 72 1 340 1 301 1 99 1 148 1 322 1 131 1 324 1 341 3 343 1 57 2 309 1 157 1 86 1 
99 1 23 1 148 1 322 1 314 1 65 1 341 2 370 1 46 1 57 2 93 2 49 1 50 1 81 1 361 1 157 1 32 1 72 1 
183 2 23 1 148 1 314 1 65 1 341 2 370 1 46 1 343 1 57 2 27 1 49 1 50 1 361 1 157 1 72 1 340 1 134 1 
183 2 23 2 314 1 65 2 46 1 93 2 27 1 49 1 360 1 50 1 361 1 72 2 340 1 99 1 322 1 148 1 370 1 341 4 343 1 57 2 81 1 157 2 
99 1 23 1 148 1 322 1 314 1 65 1 341 2 46 1 5 1 57 2 93 2 49 1 50 1 81 1 361 1 157 1 32 1 72 1 
183 2 23 1 148 1 314 1 65 1 341 2 46 1 343 1 5 1 57 2 27 1 49 1 50 1 361 1 157 1 72 1 340 1 134 1 
183 2 23 2 314 1 65 2 46 1 5 1 93 2 27 1 49 1 360 1 50 1 361 1 72 2 340 1 99 1 322 1 148 1 341 4 343 1 57 2 81 1 157 2 
183 2 23 2 314 1 65 2 46 1 93 2 27 1 49 1 360 1 50 1 361 1 72 2 340 1 99 1 322 1 148 1 341 4 343 1 57 2 81 1 157 2 
22 1 183 1 314 1 357 1 136 1 46 1 293 1 93 1 165 1 49 1 50 1 242 1 361 1 320 1 368 1 301 1 148 1 341 2 151 1 57 2 80 1 228 1 106 1 229 1 308 1 351 1 19 1 377 1 
22 1 183 1 44 1 314 1 357 1 136 1 46 1 293 1 93 1 49 1 50 1 242 1 361 1 96 1 320 1 368 1 301 1 148 1 341 2 151 1 57 2 80 1 228 1 106 1 229 1 308 1 377 1 352 1 
183 2 23 2 314 1 65 2 46 1 93 2 27 1 49 1 360 1 50 1 361 1 72 2 340 1 99 1 322 1 148 1 324 1 341 4 343 1 57 2 81 1 157 2 
183 2 22 1 23 2 314 1 65 2 357 1 46 1 293 1 27 1 93 2 165 1 49 1 360 1 50 1 242 1 361 1 340 1 72 2 99 1 301 1 128 1 322 1 148 1 249 1 341 4 151 1 343 1 57 2 80 1 81 1 106 1 229 1 308 1 157 2 351 1 19 1 377 1 
183 1 23 1 314 1 65 1 46 1 293 1 27 1 93 2 49 1 360 1 217 1 50 1 118 1 120 1 241 1 361 1 340 1 72 1 301 1 99 1 148 1 322 1 324 1 341 3 57 2 81 1 309 1 157 1 86 1 
183 10 23 6 314 2 46 2 93 9 27 3 263 1 49 2 332 1 360 3 140 1 334 2 321 1 340 3 99 3 269 1 148 2 322 3 303 2 341 19 371 1 343 3 37 1 274 1 58 1 57 4 81 3 312 1 204 1 283 2 
158 1 183 12 23 4 314 3 258 1 46 3 163 2 93 14 27 2 263 1 48 1 49 3 332 1 360 3 140 1 334 2 321 2 340 2 99 3 269 1 149 1 148 3 322 3 303 4 341 26 343 2 37 2 58 2 57 6 275 1 81 2 204 2 20 1 283 1 
183 21 288 1 46 3 93 20 48 1 49 3 332 1 140 1 334 4 335 1 340 5 99 4 148 3 149 1 303 4 341 41 343 4 57 6 58 2 103 1 61 1 256 1 204 3 20 1 158 1 23 8 314 3 258 1 163 1 27 4 263 1 360 4 321 3 168 1 269 1 322 5 371 1 37 1 177 1 274 1 275 1 81 4 283 1 
158 1 183 18 23 7 314 4 288 1 258 1 46 4 163 2 93 20 27 3 48 1 263 1 49 4 332 1 360 4 140 1 335 1 334 4 168 1 321 3 340 4 99 4 269 1 149 1 148 4 322 5 303 4 341 38 371 1 343 4 37 1 274 1 177 1 103 1 58 2 57 8 61 1 275 1 81 3 256 1 20 1 204 3 283 1 
158 1 183 25 329 2 23 14 314 2 288 1 258 1 46 2 163 1 93 27 27 7 48 1 263 1 49 2 332 1 360 7 140 1 334 4 168 1 321 2 340 8 99 7 269 1 149 1 148 2 322 8 303 4 341 52 371 2 343 7 37 1 177 1 103 1 58 1 57 4 61 1 275 1 81 7 256 1 20 1 204 4 283 1 
354 1 0 1 2 1 209 1 53 1 294 1 259 1 31 1 63 1 364 1 
97 1 290 1 
354 1 87 1 160 1 2 1 209 1 53 1 294 1 153 1 364 1 
354 1 366 1 0 1 2 1 13 1 53 1 209 1 259 1 188 2 82 1 294 1 31 1 167 1 9 1 39 1 339 1 364 1 247 1 
354 1 366 1 0 1 2 1 13 1 53 1 209 1 259 1 188 2 82 1 294 1 31 1 167 1 9 1 39 1 339 1 364 1 247 1 
354 1 366 1 0 1 2 1 13 1 53 1 209 1 259 1 188 2 82 1 294 1 31 1 167 1 9 1 39 1 339 1 364 1 247 1 
101 1 107 1 296 1 
101 1 107 1 296 1 
179 1 166 1 
101 1 179 1 166 1 
264 1 108 1 
354 1 2 1 315 1 136 1 209 1 4 1 290 1 293 2 188 1 264 1 217 2 241 2 294 1 9 1 97 1 364 1 247 1 301 2 366 1 53 1 152 1 77 1 176 1 254 1 108 1 39 1 86 2 
107 1 296 1 
101 1 179 1 166 1 
183 1 22 2 205 1 314 1 357 2 46 1 164 1 293 2 93 1 28 1 49 1 50 1 242 2 241 2 245 1 361 1 219 1 320 1 301 2 368 1 148 1 34 1 324 1 341 2 151 1 57 2 345 1 80 1 230 2 308 1 377 1 
22 2 128 1 302 1 357 2 250 1 24 1 272 1 154 1 318 1 59 1 80 1 242 2 308 1 348 1 299 1 
22 1 59 1 80 1 250 1 357 1 242 1 308 1 310 1 24 1 348 1 272 1 154 1 318 1 
22 1 302 1 357 1 250 1 173 1 151 1 60 1 80 1 228 1 242 1 308 1 125 1 377 1 10 1 
22 1 302 1 357 1 250 1 24 1 272 1 154 1 318 1 59 1 80 1 242 1 308 1 348 1 299 1 
206 1 
235 1 201 1 376 1 167 1 202 1 298 1 6 1 
267 1 235 1 171 1 214 1 373 1 277 1 278 1 38 1 167 1 279 1 298 1 
43 5 235 7 238 3 242 1 9 5 191 2 298 8 193 6 340 2 247 5 99 2 52 1 151 6 306 1 14 2 251 2 106 1 308 2 347 2 313 2 18 1 22 1 112 2 357 1 211 1 26 2 214 6 27 2 360 2 167 7 322 2 171 3 35 2 36 2 79 3 373 3 374 1 80 1 228 1 375 2 376 1 278 3 38 3 277 12 233 6 377 1 
158 1 112 1 43 1 235 5 185 1 258 1 214 3 27 2 48 1 360 2 189 1 334 1 123 1 9 1 167 5 191 2 321 1 193 5 298 8 340 2 247 1 99 2 322 2 52 1 171 2 79 1 373 2 275 1 277 6 38 2 278 2 376 2 233 5 204 1 20 1 
235 1 186 1 47 1 293 1 217 1 189 1 241 1 9 1 191 2 168 1 340 1 298 2 247 1 248 1 301 1 268 1 322 1 171 1 372 1 103 1 373 1 309 1 38 1 278 1 280 1 42 1 86 1 
235 1 171 1 373 1 201 1 278 1 38 1 376 1 202 1 167 1 298 1 
99 1 322 1 235 2 214 1 27 1 360 1 277 3 167 1 233 2 193 2 340 1 298 2 
43 1 376 1 167 1 9 1 79 1 247 1 
22 4 112 2 43 4 235 2 357 4 237 1 91 1 138 2 116 1 242 4 190 1 9 3 125 1 71 1 298 2 247 3 195 1 171 1 52 2 151 1 79 2 373 2 60 1 80 1 228 2 308 1 38 2 278 2 377 1 
183 1 22 1 314 1 357 1 136 1 46 1 293 3 165 1 49 1 217 2 50 1 242 1 241 2 361 1 320 1 301 3 268 1 148 1 341 1 151 1 57 2 80 1 228 1 229 1 106 1 309 2 308 1 17 1 351 1 86 2 19 1 377 1 
112 1 235 2 171 1 52 1 214 2 373 1 256 1 277 4 278 1 38 1 376 2 167 4 233 2 193 2 298 1 
2 1 209 1 98 1 
135 1 2 1 108 1 209 1 31 1 
2 1 209 1 98 1 
2 1 209 1 98 1 
2 1 209 1 328 1 
2 1 209 1 328 1 
2 1 209 1 328 1 
2 1 209 1 
53 1 364 1 
183 4 23 3 322 1 148 2 314 2 341 8 288 1 46 2 343 2 163 1 177 1 93 4 57 4 103 1 49 2 61 1 81 1 256 1 168 1 340 1 
183 3 23 2 322 1 341 6 288 1 343 2 6 1 103 1 177 1 93 3 61 1 256 1 168 1 340 1 
183 2 147 1 99 1 23 2 148 1 322 1 314 1 341 4 46 1 343 1 27 1 57 2 93 2 49 1 360 1 81 1 340 1 
183 4 99 1 23 2 322 1 341 7 371 1 343 1 27 1 93 3 360 1 81 1 334 2 321 1 340 1 204 1 
183 12 23 9 329 1 314 2 288 1 46 2 163 2 93 11 27 2 49 2 360 2 334 2 362 1 338 1 168 2 340 3 99 2 322 3 148 2 341 23 371 1 343 5 177 1 103 2 57 4 61 1 81 4 256 1 204 2 
183 1 341 1 334 1 
93 1 341 1 204 1 
147 1 183 3 99 1 23 3 148 1 322 1 314 1 341 6 46 1 343 2 57 2 93 3 27 1 49 1 360 1 81 1 313 1 340 1 
183 6 158 1 23 2 314 1 258 1 46 1 93 6 27 2 48 1 49 1 360 2 140 1 334 1 321 1 340 2 99 2 148 1 322 2 341 12 343 1 57 2 275 1 81 1 204 1 20 1 
183 3 23 2 322 1 341 6 343 1 177 1 93 3 103 1 81 1 168 1 340 1 
183 2 23 2 148 1 314 1 341 3 288 1 46 1 343 1 163 1 93 1 103 1 57 2 49 1 61 1 81 1 362 1 168 1 
183 3 23 4 148 1 322 1 314 1 341 6 46 1 343 2 57 2 103 1 93 3 49 1 81 2 140 1 168 1 42 1 340 1 
99 1 23 1 148 1 322 1 314 1 341 2 46 1 57 2 93 2 49 1 81 1 140 1 
183 2 99 1 23 2 148 1 322 1 314 1 341 4 46 1 343 1 27 1 57 2 93 2 49 1 360 1 81 1 140 1 340 1 
183 2 23 2 148 3 314 3 341 3 46 3 343 1 163 1 274 1 57 6 103 1 93 1 49 3 81 1 140 1 362 1 168 1 
182 1 183 18 23 12 314 5 288 1 46 5 163 2 93 16 27 3 49 5 360 3 140 1 334 4 362 1 168 3 321 1 340 5 147 1 99 3 100 1 148 5 322 5 341 34 371 1 343 7 177 2 103 3 274 1 57 10 61 1 81 5 256 1 204 3 282 1 
183 4 23 2 314 1 288 1 46 1 93 4 48 1 49 1 140 1 334 1 321 1 168 1 340 1 322 1 148 1 341 8 343 2 57 2 103 1 177 1 61 1 256 1 204 1 
183 5 23 3 314 2 288 1 46 2 93 6 48 1 49 2 360 1 140 1 334 2 168 1 321 1 340 1 147 1 99 1 148 2 322 2 341 11 371 1 343 2 177 1 103 1 57 4 61 1 81 1 256 1 204 1 
183 10 158 1 23 4 314 3 288 1 258 1 46 3 163 1 93 9 27 2 48 1 49 3 360 2 140 1 334 1 168 1 321 1 340 3 147 1 99 2 148 3 322 3 341 19 343 3 177 1 103 1 57 6 61 1 275 1 81 1 256 1 204 1 20 1 
183 7 158 1 23 5 314 3 288 1 258 1 46 3 163 1 93 10 27 1 48 1 49 3 360 2 140 1 334 1 168 1 321 1 340 2 147 1 99 2 148 3 322 3 341 17 343 3 177 1 103 1 57 6 61 1 275 1 81 2 256 1 204 1 20 1 
183 4 23 2 314 1 288 1 46 1 93 4 48 1 49 1 140 1 334 1 321 1 168 1 340 1 322 1 148 1 341 8 343 2 57 2 103 1 177 1 61 1 256 1 204 1 
183 6 158 1 23 2 314 1 258 1 46 1 93 6 27 2 48 1 49 1 360 2 140 1 334 1 321 1 340 2 99 2 148 1 322 2 341 12 343 1 57 2 275 1 81 1 204 1 20 1 
158 1 183 8 23 5 314 4 288 1 258 1 46 4 163 2 93 10 27 1 48 1 49 4 360 2 140 1 334 1 168 1 321 1 340 2 147 1 99 2 148 4 322 3 341 18 343 3 177 1 103 1 57 8 61 1 275 1 81 2 256 1 204 1 20 1 
158 1 183 7 23 6 314 4 258 1 46 4 163 2 93 9 27 2 48 1 49 4 360 3 140 1 334 1 321 1 340 2 99 3 148 4 322 3 341 16 343 3 57 8 274 1 275 1 81 3 204 1 20 1 
183 4 23 6 322 1 341 7 288 1 343 3 103 3 177 1 93 3 61 2 81 3 168 3 340 1 
158 1 183 8 23 4 314 4 288 1 258 1 46 4 163 2 93 10 27 1 48 1 49 4 360 2 140 1 334 1 168 1 321 1 340 2 99 2 148 4 322 3 341 18 343 3 177 1 103 1 57 8 274 1 61 1 275 1 81 1 256 1 204 1 20 1 
301 1 241 1 136 1 78 1 55 1 187 1 293 1 
301 1 236 1 241 1 225 1 136 1 78 1 55 1 187 1 327 1 41 1 21 1 293 1 
22 1 60 1 80 1 228 1 357 1 242 1 308 1 151 1 125 1 377 1 6 1 
301 2 22 1 270 1 357 1 136 1 151 1 293 2 80 1 217 1 228 1 106 1 229 1 241 1 242 1 308 1 351 1 86 1 377 1 
301 2 22 1 356 1 270 1 357 1 136 1 151 3 138 1 293 2 372 1 215 1 216 1 307 1 80 1 217 1 106 2 229 1 241 2 242 1 308 1 351 1 86 2 377 2 
301 2 22 2 356 1 270 1 44 1 357 2 136 1 151 3 342 1 138 1 293 2 372 1 215 1 216 1 307 1 80 1 217 1 106 2 229 1 241 2 242 2 308 1 86 2 377 2 
22 3 43 1 356 1 357 3 238 1 151 4 342 1 138 1 251 1 307 1 80 1 228 1 106 1 242 3 308 1 347 1 376 1 167 1 9 2 257 1 192 1 377 1 247 2 
22 1 43 1 357 1 47 1 238 1 186 1 138 1 293 1 217 1 241 1 242 1 9 2 167 1 247 2 301 1 268 1 151 2 251 1 14 1 372 1 347 1 309 1 376 1 280 1 86 1 
22 1 80 1 357 1 242 1 102 1 308 1 
22 6 128 1 221 1 102 1 114 1 357 7 24 1 151 3 374 1 276 1 80 2 228 2 230 1 106 1 319 1 242 7 311 1 308 3 219 1 350 1 377 2 
183 3 136 2 288 1 46 2 293 2 93 3 49 2 50 2 242 1 241 1 245 1 340 1 301 2 148 2 249 1 341 6 151 1 343 2 252 1 57 4 103 1 61 1 106 1 308 1 256 1 157 1 351 1 19 1 22 1 23 2 314 2 65 1 357 1 165 1 217 1 361 2 168 1 72 1 128 1 322 1 270 1 324 1 177 1 80 1 229 1 86 1 377 1 
22 1 43 2 235 1 357 1 237 1 238 1 26 1 242 1 167 1 9 3 298 1 247 3 171 2 36 1 151 2 79 1 14 1 251 1 373 2 201 1 228 1 254 1 375 1 347 1 376 1 38 2 278 2 202 1 
22 2 128 1 102 1 357 2 151 2 211 1 374 1 80 1 106 1 242 2 347 1 308 2 377 1 
22 4 128 1 357 4 151 1 342 1 60 1 80 1 228 1 242 4 308 1 110 1 125 1 377 1 
22 2 330 1 196 1 357 2 151 1 138 1 30 1 80 1 106 1 319 1 242 2 311 1 308 2 377 1 
22 1 80 1 228 1 357 1 242 1 308 1 348 1 154 1 
22 2 128 1 80 1 357 2 242 2 308 1 24 1 151 1 219 1 377 1 164 1 
22 4 128 1 357 5 114 1 151 3 138 1 60 1 276 1 80 2 228 1 242 5 308 2 110 1 125 1 219 1 377 2 
22 4 128 1 357 5 114 1 151 3 138 1 60 1 80 2 228 1 242 5 308 2 110 1 84 1 125 1 219 1 377 2 
301 2 22 1 270 1 44 1 357 1 136 1 151 1 293 2 80 1 217 1 228 1 106 1 229 1 241 1 242 1 308 1 86 1 377 1 
22 1 357 1 151 1 138 1 374 1 80 1 106 1 319 1 242 1 311 1 308 2 350 1 377 1 
129 1 136 1 174 1 349 1 300 1 
129 2 33 1 222 1 136 1 174 2 251 1 372 1 215 1 216 1 121 1 254 1 376 1 336 1 167 1 9 2 349 2 247 2 300 1 281 1 
301 1 28 1 345 1 205 1 129 1 241 1 349 1 293 1 300 1 
33 1 281 1 300 1 
119 1 194 1 284 1 6 1 
200 1 119 1 69 1 89 1 76 1 194 1 284 1 
137 1 76 1 142 1 
73 2 130 1 89 1 210 1 76 3 200 1 119 1 244 1 243 1 69 3 194 1 284 1 
200 1 119 1 7 1 69 2 89 1 76 2 180 1 194 1 284 1 
367 1 89 1 3 1 76 1 226 1 200 1 243 1 69 1 363 1 194 1 220 1 
200 1 69 1 89 1 243 1 76 1 194 1 284 1 
200 1 119 1 69 1 89 1 243 1 76 1 284 2 
113 1 207 1 89 2 76 2 240 1 200 2 243 1 69 2 194 1 284 1 
367 1 234 1 369 1 89 1 76 3 326 1 200 1 119 1 243 1 69 3 180 2 194 2 284 1 
200 1 197 1 69 1 89 1 243 1 76 1 154 1 
367 1 369 1 89 2 76 4 305 1 200 2 119 1 7 1 243 1 69 4 180 2 194 2 284 1 
200 1 119 1 69 1 89 1 243 1 76 1 194 1 284 1 
367 1 73 1 369 1 130 1 74 1 89 1 210 1 76 4 200 1 119 2 69 4 180 2 194 3 284 2 
89 1 287 1 76 2 325 1 200 1 104 1 119 1 243 1 69 2 180 1 194 1 284 1 
73 2 130 1 89 1 210 2 76 3 359 1 200 1 119 1 243 1 69 3 194 1 284 1 
227 1 16 1 62 2 194 2 
200 1 69 1 89 1 243 1 255 1 76 1 
234 1 200 1 119 1 69 2 89 1 243 1 76 2 180 1 194 1 284 1 
203 1 
200 1 119 1 69 1 89 1 243 1 76 1 194 1 284 1 
234 1 200 1 73 1 119 1 69 3 89 1 243 1 76 3 180 1 194 1 284 1 
367 1 369 1 74 1 194 1 
194 1 284 1 

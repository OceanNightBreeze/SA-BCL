#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 356 (132,375) (132,375) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 356 (132,375) (132,375) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 356 (132,375) (132,375) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 356 (132,375) (132,375) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 244 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 336 147 314 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 149 262 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 1 0 1 356 1 193 1 293 1 7 1 79 2 129 9 312 1 217 3 103 1 83 2 221 1 64 1 89 5 348 7 21 1 45 1 94 1 307 1 162 2 286 9 163 4 236 1 
191 1 0 1 356 1 193 1 293 1 7 1 79 2 129 9 312 1 217 3 103 1 83 2 221 1 64 1 89 5 348 7 21 1 45 1 94 1 307 1 162 2 163 4 286 9 236 1 
193 1 64 1 89 2 7 1 79 2 348 1 129 3 217 1 83 2 307 1 286 3 163 1 236 1 
356 1 193 1 308 1 79 1 138 1 312 1 129 1 375 1 94 1 132 1 83 1 307 1 104 1 286 1 
356 1 193 1 308 1 79 1 138 1 312 1 129 1 375 1 94 1 132 1 83 1 307 1 104 1 286 1 
356 1 193 1 308 1 79 1 138 1 312 1 129 1 375 1 94 1 132 1 83 1 307 1 104 1 286 1 
356 1 193 1 308 1 79 1 138 1 312 1 129 1 375 1 94 1 132 1 83 1 307 1 104 1 286 1 
356 1 0 1 193 1 89 3 7 1 79 1 348 3 312 1 129 4 45 1 217 1 94 1 103 1 83 1 162 2 286 4 163 2 236 1 
107 1 356 1 193 1 370 1 89 1 7 1 79 1 138 1 129 2 312 1 83 1 307 1 235 1 286 2 236 1 32 1 
327 1 34 1 328 1 276 1 329 1 263 1 309 1 36 1 333 1 306 1 368 1 295 1 105 1 133 1 
297 1 
36 2 297 1 232 1 365 1 295 2 105 1 187 1 196 1 
134 1 297 1 208 1 125 2 110 1 242 1 345 1 280 1 36 5 311 1 232 2 93 2 38 1 365 1 60 1 295 5 105 2 187 1 288 2 
297 1 365 1 20 1 
297 1 325 1 207 2 
276 2 328 2 306 2 34 1 17 1 309 2 263 2 133 2 
121 1 239 1 241 1 209 1 291 2 328 2 34 1 309 3 263 3 243 1 266 2 294 1 247 1 218 2 198 1 335 1 199 1 84 1 133 2 318 1 251 2 86 1 222 1 276 2 17 1 373 1 67 1 321 1 69 2 18 1 160 1 306 2 116 1 27 1 164 1 354 1 31 1 
34 1 328 1 276 1 329 1 263 1 309 1 333 1 306 1 368 1 133 1 
297 1 276 1 16 1 263 1 309 1 168 1 255 1 80 1 81 1 36 1 8 1 365 1 368 1 295 1 
327 1 328 2 34 1 329 1 309 2 263 2 81 1 36 2 8 1 333 1 365 1 368 2 295 2 133 2 297 1 276 2 16 1 255 1 306 2 
36 1 298 1 232 1 295 1 105 1 
36 2 297 1 232 1 365 1 295 2 105 1 187 1 265 1 
36 1 232 1 295 1 
299 1 250 1 276 2 328 1 17 1 263 2 309 2 334 1 306 1 368 1 133 1 
245 1 253 1 126 1 
17 1 373 1 67 1 309 1 263 1 321 1 69 1 243 1 266 1 323 1 116 1 294 1 218 1 199 1 354 1 84 1 
17 1 20 1 
328 1 276 1 373 1 67 1 126 1 321 1 263 2 309 2 243 1 137 1 202 1 69 1 266 1 116 1 306 1 294 1 218 1 199 1 354 1 84 1 
223 1 334 1 276 5 328 4 306 4 58 1 17 1 309 5 263 5 137 1 202 2 168 1 19 1 133 1 
333 1 276 1 328 1 306 1 368 1 309 1 263 1 
276 3 328 3 306 3 17 1 309 3 263 3 202 1 133 1 
333 1 276 1 328 1 306 1 368 1 309 1 263 1 
250 1 328 1 276 1 263 1 309 1 334 1 306 1 368 1 133 1 
121 1 241 1 209 1 291 2 328 3 34 1 309 4 263 4 243 1 266 1 81 1 36 1 8 1 334 1 294 1 366 1 247 1 218 1 368 1 295 1 199 1 84 1 133 2 318 1 340 1 251 1 86 1 276 3 17 1 373 1 16 1 67 1 321 1 202 1 137 1 69 1 255 1 18 1 116 1 306 3 27 1 164 1 354 1 31 1 
299 1 328 1 276 2 17 1 263 2 309 2 202 1 168 1 306 1 58 1 368 1 
297 1 340 1 328 3 276 3 16 1 263 3 309 3 137 1 202 2 255 1 36 1 81 1 8 1 334 1 306 3 368 1 295 1 174 1 133 1 
328 2 276 2 253 1 263 2 309 2 126 1 202 1 334 1 306 2 133 1 
17 1 373 1 67 1 309 1 263 1 321 1 69 1 243 1 266 1 116 1 294 1 218 1 199 1 354 1 84 1 
17 1 373 1 67 1 55 1 309 1 263 1 321 1 69 1 243 1 266 1 116 1 294 1 218 1 248 1 199 1 
121 1 1 1 239 2 209 1 291 2 4 1 126 2 245 2 247 1 219 1 86 1 251 4 224 1 253 2 229 1 90 1 281 1 256 1 139 1 159 1 27 1 259 1 164 2 31 1 
328 1 276 1 68 1 263 1 309 1 255 1 306 1 368 1 
53 1 372 1 331 1 106 1 249 1 
53 1 112 1 249 1 
53 1 249 1 
53 1 249 1 
372 1 
372 1 
372 1 
53 1 320 1 249 1 
53 1 320 1 249 1 
53 1 320 1 249 1 
143 1 53 1 249 1 
143 1 53 1 249 1 
143 1 53 1 249 1 
142 1 328 2 53 1 33 1 166 1 263 2 309 2 332 1 36 1 102 1 59 1 295 1 249 1 61 1 276 2 179 1 17 1 227 1 112 1 180 1 91 1 257 1 306 2 324 1 
297 1 358 1 142 2 53 2 15 1 166 3 227 1 212 1 332 2 36 2 152 1 70 1 102 2 364 2 295 2 74 1 249 2 220 1 324 2 
240 1 312 2 94 1 271 2 32 1 
356 1 312 1 94 1 
356 1 312 1 32 1 
240 1 312 3 101 1 94 2 271 1 32 1 
203 1 240 1 312 2 94 1 271 1 32 1 
1 1 357 1 208 2 33 1 3 1 145 2 125 1 195 2 242 3 98 2 36 5 9 1 365 1 10 1 295 5 105 4 134 1 297 2 180 1 90 1 231 1 256 1 91 1 159 1 232 1 374 1 93 1 234 1 187 1 288 1 325 1 207 3 
1 3 77 1 208 6 145 6 167 1 125 2 195 6 242 8 127 1 36 9 365 1 60 1 10 2 295 9 105 7 134 1 298 5 297 5 87 1 155 5 180 4 90 3 282 1 231 1 256 3 204 1 159 3 232 6 374 3 93 2 234 2 187 1 288 2 325 3 207 9 
327 1 1 1 208 2 328 1 34 1 3 1 145 2 329 1 125 1 309 1 263 1 242 3 195 2 98 1 36 3 333 1 9 1 365 1 60 1 10 1 368 1 295 3 105 2 133 1 297 3 276 1 180 1 90 1 256 1 159 1 306 1 93 1 374 1 234 1 288 1 325 2 207 4 
1 1 77 1 208 2 3 1 145 2 125 1 195 2 242 3 98 1 36 2 9 1 60 1 10 1 295 2 105 1 297 2 180 1 90 1 256 1 159 1 93 1 374 1 234 1 288 1 325 2 207 4 
206 1 
294 1 96 1 20 1 
92 1 294 1 
294 1 67 1 243 1 
294 1 49 1 
294 1 67 1 
294 3 342 1 96 2 67 1 12 1 243 1 
13 1 239 4 300 1 251 7 224 2 226 1 124 2 344 1 111 1 229 3 256 1 159 1 170 1 130 1 184 1 246 1 164 3 326 1 
1 3 239 16 209 1 291 2 124 3 147 1 130 2 170 2 246 1 247 1 315 1 336 3 13 1 251 31 224 5 66 1 226 1 88 4 343 1 344 1 111 5 181 1 229 10 90 3 256 4 159 4 374 3 350 1 184 2 27 1 29 1 164 15 31 1 326 2 
239 8 209 1 291 2 124 2 130 1 170 1 247 1 200 1 13 1 251 14 224 3 226 2 344 1 111 1 229 4 256 3 159 3 349 1 184 2 27 1 258 1 164 6 31 1 326 2 
13 1 239 4 251 7 224 2 226 1 124 2 344 1 111 1 229 3 256 1 159 1 170 1 130 1 184 1 246 1 164 3 326 1 
13 1 239 4 251 7 224 2 226 1 124 2 344 1 111 1 229 3 256 1 159 1 170 1 130 1 184 1 246 1 164 3 326 1 
154 1 67 1 109 1 252 2 321 1 69 1 114 1 79 1 266 1 129 1 116 1 294 1 117 1 218 1 25 1 285 1 307 2 83 1 199 1 185 1 353 2 286 1 165 2 
356 1 193 1 5 1 266 1 79 1 151 1 129 1 312 2 101 1 218 1 367 1 83 1 252 1 321 1 69 1 116 1 94 1 205 1 26 1 307 1 75 1 353 1 286 1 141 1 165 1 32 1 
356 1 193 1 210 1 5 1 7 1 266 1 79 1 129 2 312 2 101 1 218 1 367 1 83 1 89 1 252 1 321 1 69 1 348 1 116 1 94 1 205 1 26 1 307 1 75 1 353 1 286 2 236 1 141 1 165 1 32 1 
356 1 5 1 7 1 266 1 79 1 151 1 129 3 312 2 216 1 101 1 218 1 367 1 83 1 154 1 89 1 252 1 321 1 69 1 348 2 116 1 94 1 205 1 26 1 307 1 353 1 286 3 236 1 141 1 165 1 32 1 
356 1 5 1 7 1 266 1 151 1 129 2 312 2 216 1 101 1 218 1 89 1 252 1 321 1 69 1 348 2 116 1 94 1 26 1 307 1 353 1 286 2 236 1 141 1 165 1 32 1 
177 1 
242 1 8 1 99 2 197 5 295 4 297 1 341 1 16 1 113 1 254 2 255 1 115 1 24 1 28 2 76 2 355 3 208 1 359 3 125 1 263 1 309 1 213 1 168 1 310 1 81 1 36 4 80 1 313 1 82 1 365 1 368 1 134 1 276 1 322 3 232 5 93 1 283 1 376 1 187 2 287 1 288 1 325 2 
208 1 359 3 125 1 242 1 309 1 263 1 213 1 310 1 168 1 81 1 80 1 36 4 8 1 99 2 313 1 82 1 365 1 197 5 368 1 295 4 134 1 297 1 341 1 276 1 16 1 113 1 254 2 322 3 255 1 115 1 232 5 93 1 283 1 24 1 376 1 28 2 187 2 76 2 288 1 287 1 355 3 325 2 
2 1 208 1 359 2 125 1 242 1 263 1 309 1 213 1 168 1 361 1 80 1 36 4 81 1 8 1 99 2 313 1 82 1 365 1 197 4 368 1 295 4 134 1 297 1 341 1 276 1 16 1 322 2 254 2 255 1 232 4 233 2 93 1 24 1 73 2 187 2 355 2 288 1 287 1 207 2 
146 1 242 2 8 1 99 2 294 1 197 4 10 1 295 5 199 2 297 2 341 1 16 1 67 1 254 2 69 2 255 1 116 1 24 1 117 1 28 2 76 2 355 2 207 2 208 2 359 2 125 1 263 1 309 1 213 1 266 2 168 1 361 1 36 5 80 1 81 1 313 1 82 1 365 1 218 2 368 1 175 1 134 1 276 1 321 1 322 2 279 1 183 1 232 6 93 1 376 1 285 1 187 3 288 1 287 1 325 2 
309 1 263 1 213 1 168 1 196 1 81 1 80 1 36 3 8 1 313 1 197 2 368 1 295 3 341 1 276 1 16 1 322 1 255 1 232 2 24 1 187 1 287 1 
359 1 309 1 263 1 213 1 168 1 196 1 81 1 80 1 36 3 8 1 313 1 197 3 365 1 368 1 295 3 297 1 341 1 276 1 16 1 255 1 232 1 24 1 187 1 287 1 
359 1 309 1 263 1 213 1 168 1 196 1 81 1 80 1 36 3 8 1 313 1 197 3 365 1 368 1 295 3 297 1 341 1 276 1 16 1 322 1 255 1 232 2 24 1 187 1 287 1 355 1 
242 1 196 1 8 1 99 2 197 6 295 5 297 5 341 1 16 1 113 1 254 2 255 1 115 1 24 1 28 2 76 2 355 4 208 1 359 4 125 1 309 1 263 1 213 1 168 1 310 1 81 1 36 5 80 1 313 1 82 1 365 5 368 1 134 1 276 1 322 4 232 7 93 1 283 1 376 1 187 3 287 1 288 1 289 1 325 2 
242 1 8 1 99 2 197 4 295 4 297 2 341 1 16 1 254 2 255 1 24 1 28 2 76 2 355 2 207 2 208 1 359 2 125 1 309 1 263 1 213 1 168 1 361 1 81 1 36 4 80 1 313 1 82 1 365 1 368 1 134 1 276 1 322 2 232 4 93 1 376 1 187 2 287 1 288 1 325 2 
208 1 359 2 125 1 242 1 309 1 263 1 213 1 310 1 168 1 81 1 80 1 36 4 8 1 99 2 313 1 82 1 365 1 197 4 368 1 295 4 134 1 297 1 341 1 276 1 16 1 322 2 254 2 255 1 115 1 232 4 93 1 24 1 283 1 376 1 28 2 187 2 76 2 355 2 287 1 288 1 325 2 
208 1 359 2 125 1 242 1 309 1 263 1 213 1 310 1 168 1 81 1 80 1 36 4 8 1 99 2 313 1 82 1 365 1 197 4 368 1 295 4 134 1 297 1 341 1 276 1 16 1 322 2 254 2 255 1 115 1 232 4 93 1 24 1 283 1 376 1 28 2 187 2 76 2 355 2 287 1 288 1 325 2 
2 1 208 1 359 2 125 1 242 1 309 1 263 1 213 1 310 1 168 1 81 1 80 1 36 4 8 1 99 2 313 1 82 1 365 1 197 4 368 1 295 4 85 1 134 1 297 1 341 1 276 1 277 1 16 1 322 2 254 2 255 1 232 4 233 2 93 1 24 1 73 2 187 2 355 2 287 1 288 1 207 2 
121 2 239 1 241 1 209 2 210 1 328 1 291 4 4 1 54 1 292 1 309 1 263 1 266 7 149 1 151 1 294 3 218 8 247 2 198 2 199 2 274 1 86 2 251 2 276 1 67 2 321 2 202 1 69 8 305 1 306 1 116 2 160 1 161 1 117 1 27 2 285 1 186 1 164 1 31 2 
121 1 1 1 239 1 209 1 291 2 328 1 126 1 263 1 309 1 334 1 245 1 247 1 133 1 86 1 251 3 224 1 276 1 253 1 229 1 182 1 90 1 256 1 159 1 306 1 374 1 47 1 27 1 164 2 31 1 
121 1 239 3 209 1 291 2 4 1 124 1 126 1 245 1 247 1 13 1 86 1 251 6 224 2 17 2 226 1 344 1 253 1 229 2 20 1 256 1 159 1 184 1 27 1 164 3 31 1 326 1 
121 2 1 2 239 8 241 1 209 2 291 4 147 1 126 11 169 1 245 11 247 2 336 3 86 1 251 14 224 1 17 1 88 3 111 1 346 1 253 4 229 2 230 1 90 1 256 2 159 1 160 1 374 2 350 1 47 1 27 2 351 1 164 6 31 2 
121 1 239 1 241 1 209 1 328 1 291 2 309 2 263 2 243 1 266 1 37 1 294 1 218 1 247 1 199 1 84 1 63 1 86 1 251 2 276 1 17 1 373 1 67 1 321 1 253 1 69 1 202 1 137 1 323 1 158 1 116 1 306 1 160 1 47 1 27 1 354 1 164 1 31 1 
1 2 239 10 241 1 291 6 328 1 243 2 151 1 294 2 245 7 247 3 11 2 199 1 13 1 251 20 17 2 67 2 344 1 111 4 253 7 347 2 69 3 202 1 256 3 159 3 160 1 306 1 116 2 27 3 120 2 164 10 354 2 31 3 121 3 209 3 124 1 263 3 309 3 126 7 266 3 131 1 218 3 84 2 318 2 86 3 224 4 276 1 135 1 373 2 226 1 321 2 137 1 229 8 90 2 374 2 46 1 184 1 47 1 50 2 326 1 
121 1 1 1 239 2 251 2 86 1 209 1 291 2 4 1 111 1 253 1 126 1 229 1 281 1 256 1 245 1 247 1 27 1 31 1 
121 1 251 2 86 1 209 1 224 1 291 2 4 1 253 1 126 1 229 1 90 1 159 1 245 1 247 1 27 1 259 1 164 2 31 1 
1 1 121 1 239 2 209 1 291 2 4 1 126 2 245 2 247 1 86 1 251 4 224 1 111 1 253 2 229 2 90 1 256 1 159 1 374 1 27 1 164 2 31 1 
121 1 1 1 239 2 251 2 86 1 209 1 291 2 111 1 253 1 126 1 229 1 281 1 256 1 305 1 245 1 247 1 27 1 31 1 
121 1 251 2 86 1 209 1 224 1 291 2 253 1 126 1 229 1 90 1 305 1 159 1 245 1 247 1 27 1 259 1 164 2 31 1 
1 1 121 1 239 2 209 1 291 2 126 2 245 2 247 1 86 1 251 4 224 1 111 1 253 2 229 2 90 1 256 1 305 1 159 1 374 1 27 1 164 2 31 1 
1 1 121 1 239 2 209 1 291 2 126 2 245 2 247 1 251 4 86 1 224 1 111 1 253 2 229 2 90 1 256 1 159 1 374 1 27 1 164 2 31 1 
121 1 239 1 241 1 209 1 291 2 263 1 309 1 243 1 266 1 294 1 218 1 247 1 199 1 84 1 318 1 251 2 86 1 17 1 373 1 67 1 321 1 69 1 160 1 116 1 27 1 354 1 164 1 31 1 
121 1 239 1 241 1 209 1 291 2 55 1 263 1 309 1 243 1 266 1 294 1 218 1 247 1 248 1 199 1 296 1 251 2 86 1 17 1 373 1 67 1 321 1 69 1 160 1 116 1 27 1 164 1 31 1 
1 1 121 1 239 2 209 1 291 2 126 2 245 2 247 1 86 1 251 4 224 1 111 1 253 2 229 2 90 1 256 1 159 1 374 1 47 1 27 1 164 2 31 1 
1 1 121 1 239 2 209 1 210 1 291 2 126 2 263 1 309 1 243 1 266 1 245 2 294 1 218 1 247 1 84 1 318 1 251 4 86 1 224 1 373 1 67 1 111 1 253 2 321 1 229 2 69 1 90 1 256 1 159 1 116 1 374 1 27 1 120 1 164 2 354 1 31 1 
121 1 1 1 239 2 209 1 291 2 328 1 263 1 309 1 126 1 334 1 245 1 247 1 133 1 86 1 251 3 276 1 111 1 253 1 229 1 90 1 256 1 159 1 306 1 374 1 47 1 284 1 27 1 164 1 31 1 
1 4 239 14 209 2 291 4 211 4 147 2 35 2 148 1 247 2 314 1 316 1 336 2 200 1 273 1 178 1 62 1 251 30 224 4 88 4 111 3 43 1 229 7 90 4 256 4 159 4 23 1 374 4 350 2 118 1 27 2 164 16 31 2 
1 1 239 5 209 1 291 2 211 2 147 1 35 1 148 1 247 1 316 1 336 1 200 1 273 1 62 2 251 10 88 1 90 1 256 1 159 1 23 2 374 1 27 1 164 5 31 1 
1 3 239 13 122 1 209 2 291 4 211 4 147 3 35 1 148 1 247 2 314 1 316 1 336 3 200 1 273 1 178 1 62 2 251 28 224 2 88 5 111 2 229 4 90 3 256 3 159 3 23 1 374 3 350 2 118 1 27 2 164 15 31 2 
1 3 239 13 122 1 209 2 291 4 211 4 147 3 35 1 148 1 247 2 314 1 316 1 336 3 200 1 273 1 178 1 62 2 251 28 224 3 88 5 111 2 229 5 90 3 256 3 159 3 23 1 374 3 350 2 118 1 27 2 164 15 31 2 
1 3 239 22 209 1 291 2 211 4 124 3 147 2 35 1 148 1 247 1 314 1 316 1 336 3 200 1 13 3 273 1 178 1 62 1 251 41 224 6 226 3 88 3 344 3 111 3 346 1 229 9 90 3 256 6 159 6 23 1 374 3 350 1 184 3 27 1 164 19 31 1 326 3 
332 1 152 1 142 1 53 1 70 1 102 1 212 1 249 1 128 1 324 1 
179 1 112 1 
332 1 108 1 142 1 53 1 102 1 249 1 189 1 215 1 324 1 
320 1 56 1 
143 1 6 1 106 1 
297 1 358 1 142 1 53 1 166 2 227 1 212 1 36 1 332 1 152 1 70 1 102 1 364 1 295 1 74 1 249 1 220 1 324 1 
297 1 358 1 142 1 53 1 166 2 227 1 212 1 36 1 332 1 152 1 70 1 102 1 364 1 295 1 74 1 249 1 220 1 324 1 
297 1 358 1 142 1 53 1 166 2 227 1 212 1 36 1 332 1 152 1 70 1 102 1 364 1 295 1 74 1 249 1 220 1 324 1 
320 1 56 1 106 1 
320 1 56 1 106 1 
143 1 6 1 
143 1 6 1 106 1 
257 1 61 1 
142 1 144 1 53 1 33 1 328 2 166 1 309 2 263 2 36 1 332 1 102 1 364 1 59 1 295 1 105 1 220 1 249 1 61 1 276 2 179 1 17 1 112 1 180 1 91 1 257 1 306 2 324 1 
121 1 239 1 241 1 209 1 291 2 292 1 309 2 263 2 266 2 149 1 294 1 269 1 218 2 247 1 198 2 86 1 251 2 302 1 276 2 65 1 67 1 321 1 69 2 116 1 160 1 47 1 48 1 27 1 164 1 31 1 377 1 
67 1 109 1 321 1 360 1 69 1 266 1 116 1 294 1 218 1 117 1 285 1 199 1 353 1 95 1 
356 1 319 1 5 1 321 1 69 1 266 1 157 1 151 1 312 2 116 1 101 1 94 1 218 1 205 1 353 1 141 1 32 1 95 1 
356 1 210 1 319 1 321 1 5 1 69 2 266 2 157 1 151 1 312 2 116 1 101 1 94 1 218 2 205 1 353 1 141 1 32 1 95 1 
356 1 319 1 201 1 5 1 321 1 69 1 266 1 151 1 312 2 116 1 101 1 94 1 218 1 205 1 353 1 141 1 32 1 
172 1 
121 1 241 1 209 1 291 2 328 2 34 1 309 3 263 3 243 1 266 1 294 1 247 1 218 1 199 1 84 1 133 2 318 1 251 1 86 1 276 2 17 1 373 1 67 1 321 1 69 1 18 1 306 2 116 1 27 1 164 1 354 1 31 1 
134 1 297 4 208 2 145 2 124 1 125 1 195 2 242 1 183 1 93 1 365 2 10 1 288 1 325 2 207 4 
134 1 297 1 208 1 125 1 345 1 242 1 311 1 93 1 365 1 288 1 
1 2 339 1 297 5 208 5 145 5 195 5 242 5 347 1 90 2 256 2 159 2 374 2 71 2 207 10 325 5 
36 1 297 1 232 1 365 1 295 1 187 1 
208 2 52 1 146 1 125 2 242 2 214 2 266 2 36 3 294 1 60 1 218 2 10 2 295 3 199 2 134 1 67 1 304 1 321 1 69 2 278 1 279 1 183 2 232 4 116 1 93 2 117 1 285 1 187 2 288 2 
297 1 311 1 208 1 365 1 242 1 345 1 20 1 
208 1 125 1 242 1 36 1 365 1 295 1 134 1 297 2 232 1 93 1 376 1 28 1 76 1 187 1 288 1 325 1 207 1 
1 2 52 1 145 6 96 2 242 9 195 6 97 2 243 1 244 1 294 6 10 2 295 5 199 1 338 2 297 8 339 2 342 1 16 2 67 1 345 1 347 2 69 2 256 2 159 2 22 1 116 2 71 2 207 12 208 8 210 1 123 1 78 2 125 4 214 1 266 2 36 5 311 1 365 2 218 2 41 2 42 2 134 4 321 1 90 2 183 1 92 3 232 5 93 4 374 2 187 3 288 4 325 6 
134 1 297 1 208 1 145 1 88 1 125 1 147 1 242 1 195 1 93 1 314 1 336 1 288 1 325 1 207 2 
327 1 208 2 34 1 328 1 125 1 329 1 309 1 263 1 242 2 36 1 333 1 368 1 295 1 133 1 134 1 339 1 276 1 226 1 256 2 159 1 93 1 306 1 71 2 283 1 184 1 258 1 288 1 326 1 
332 1 142 1 212 1 228 1 61 1 
332 1 142 1 330 1 
332 1 142 1 330 1 
332 1 142 1 330 1 
332 1 142 1 352 1 
332 1 142 1 352 1 
332 1 142 1 352 1 
332 1 142 1 
53 1 249 1 
239 5 209 1 251 10 291 2 224 3 226 1 111 2 229 5 256 2 159 2 247 1 184 2 27 1 258 1 164 5 31 1 200 1 326 2 
1 1 239 2 209 1 251 2 291 2 111 1 229 1 256 1 247 1 27 1 31 1 200 1 
1 1 239 2 209 1 251 4 224 1 291 2 111 1 229 2 90 1 256 1 159 1 374 1 247 1 27 1 164 2 31 1 200 1 
290 1 239 1 251 3 209 3 291 6 224 1 111 1 181 1 229 2 247 3 184 1 118 1 27 3 164 2 31 3 200 1 326 1 
1 3 290 1 239 16 209 5 291 10 124 1 147 1 247 5 315 1 336 3 200 1 13 1 251 34 301 1 224 7 226 2 88 4 343 1 344 1 111 5 181 2 229 12 90 3 256 5 159 5 374 3 350 1 184 3 118 1 27 5 29 1 164 18 31 5 326 3 
13 1 239 4 251 8 209 2 224 2 291 4 226 1 124 1 344 1 111 1 181 1 229 3 256 1 159 1 247 2 184 1 27 2 164 4 31 2 326 1 
13 1 239 3 251 6 224 2 226 1 124 1 344 1 229 2 20 1 256 1 159 1 184 1 164 3 326 1 
1 1 239 2 209 1 251 4 224 1 301 1 291 2 111 1 229 2 90 1 256 1 159 1 374 1 247 1 27 1 164 2 31 1 
1 1 239 3 251 7 224 1 88 2 147 1 111 1 229 2 90 1 256 1 159 1 374 1 350 1 336 1 164 4 
1 2 239 11 290 1 209 2 291 4 124 1 247 2 336 2 13 1 251 23 224 5 226 1 88 2 344 1 111 4 346 1 181 2 229 9 230 1 90 2 256 3 159 3 374 2 350 1 184 2 27 2 164 12 31 2 326 2 
251 1 88 1 164 1 
239 1 251 1 336 1 
1 1 239 3 209 1 251 6 291 2 301 1 224 2 111 1 347 1 229 3 90 1 256 1 159 1 374 1 247 1 27 1 164 3 31 1 
1 2 239 6 192 1 209 1 291 2 260 1 147 1 267 1 247 1 314 1 336 1 200 1 251 12 224 1 88 1 111 1 44 1 229 2 90 2 256 2 159 2 374 2 27 1 164 6 31 1 
239 3 251 6 224 1 226 1 111 1 229 2 256 1 159 1 184 1 164 3 326 1 
13 1 239 1 290 1 251 3 209 1 224 1 291 2 344 1 111 1 181 1 229 2 184 1 247 1 27 1 164 2 31 1 326 1 
239 4 209 1 291 2 124 1 147 1 247 1 314 1 336 1 200 1 13 1 251 8 224 2 88 1 226 1 344 1 229 2 256 1 159 1 184 1 27 1 164 4 31 1 326 1 
1 1 239 6 209 2 291 4 124 1 147 1 247 2 314 1 336 1 200 1 13 1 251 11 224 2 301 1 226 1 88 2 344 1 111 1 229 3 256 2 159 1 374 1 350 1 184 1 27 2 164 5 31 2 326 1 
1 2 239 9 192 1 209 3 291 6 260 1 124 1 147 1 267 1 247 3 314 1 336 1 200 1 13 1 251 19 301 1 224 3 226 1 88 1 344 1 111 1 44 1 181 1 229 4 90 2 256 3 159 3 374 2 184 1 27 3 164 10 31 3 326 1 
1 2 239 10 192 1 209 3 291 6 260 1 124 1 147 1 267 1 247 3 314 1 336 1 200 1 13 1 251 17 301 1 224 3 226 1 88 1 344 1 111 2 181 1 44 1 229 5 90 1 256 3 159 2 374 2 184 1 27 3 164 7 31 3 326 1 
239 4 209 1 291 2 124 1 147 1 247 1 314 1 336 1 200 1 13 1 251 8 224 2 88 1 226 1 344 1 229 2 256 1 159 1 184 1 27 1 164 4 31 1 326 1 
1 2 239 6 192 1 209 1 291 2 260 1 147 1 267 1 247 1 314 1 336 1 200 1 251 12 224 1 88 1 111 1 44 1 229 2 90 2 256 2 159 2 374 2 27 1 164 6 31 1 
1 2 239 10 192 1 209 4 291 8 260 1 124 1 147 1 267 1 247 4 314 1 336 1 200 1 13 1 251 18 301 1 224 3 226 1 88 1 344 1 111 2 44 1 181 2 229 5 90 1 256 3 159 2 374 2 184 1 27 4 164 8 31 4 326 1 
1 3 239 9 192 1 209 4 291 8 260 1 147 1 267 1 247 4 314 1 336 1 200 1 251 16 224 3 88 1 111 3 44 1 181 2 229 6 90 2 256 3 159 2 374 3 27 4 118 1 164 7 31 4 
13 2 239 3 251 7 224 3 226 1 344 1 111 3 229 6 256 1 159 1 184 3 164 4 326 3 
1 2 239 10 192 1 209 4 291 8 260 1 124 1 147 1 267 1 247 4 314 1 336 1 200 1 13 1 251 18 224 3 226 1 88 1 344 1 111 1 44 1 181 2 229 4 90 1 256 3 159 2 374 2 184 1 27 4 118 1 164 8 31 4 326 1 
51 1 276 1 58 1 17 1 309 1 263 1 168 1 
51 1 276 1 17 1 263 1 309 1 168 1 140 1 57 1 58 1 171 1 176 1 30 1 
210 1 67 1 321 1 69 4 266 4 116 1 294 1 270 1 218 4 117 1 72 1 285 1 199 1 
67 1 321 1 69 1 243 1 214 1 266 1 268 1 100 1 116 2 294 1 46 1 218 1 119 1 317 1 
356 1 312 1 116 1 218 1 321 1 199 1 69 1 141 1 266 1 32 1 
210 1 65 1 67 1 321 1 69 2 266 2 149 1 151 1 116 1 294 1 218 2 
274 1 210 1 67 2 321 2 69 4 214 1 266 3 149 1 116 2 294 3 161 1 117 1 218 4 72 1 285 1 199 1 
210 1 67 2 262 1 321 2 69 4 214 1 266 3 149 1 116 2 294 3 161 1 117 1 218 4 72 1 285 1 199 1 
116 1 294 1 67 1 117 1 218 1 285 1 321 1 199 1 69 1 266 1 20 1 
328 1 276 1 17 1 373 1 67 1 263 2 309 2 321 1 243 1 202 1 69 1 266 1 116 1 306 1 294 1 218 1 199 1 84 1 
276 1 328 1 306 1 309 1 263 1 202 1 214 1 
276 1 328 1 306 1 309 1 263 1 202 1 214 1 
36 1 295 1 214 1 
36 1 295 1 214 1 
116 1 218 1 321 1 186 1 69 1 266 1 
274 1 210 1 54 1 342 1 67 2 321 2 69 7 243 1 266 6 149 1 268 1 151 1 363 1 116 3 294 3 161 1 218 7 198 1 186 1 119 1 199 2 
239 3 291 4 328 1 243 1 294 1 245 1 11 1 247 2 13 1 251 6 302 1 17 2 67 1 344 1 253 1 69 1 202 1 256 1 159 1 306 1 116 1 27 2 120 1 354 1 164 3 31 2 121 2 209 2 210 1 124 1 263 2 309 2 126 1 266 1 218 1 84 1 318 1 86 2 276 1 224 2 373 1 226 1 321 1 229 2 47 1 184 1 326 1 
208 1 52 1 78 1 96 1 125 2 242 1 97 1 266 1 36 3 311 1 294 2 365 1 218 1 295 3 105 1 199 1 41 1 42 1 134 2 297 1 16 1 345 1 69 1 92 1 232 2 93 2 187 1 288 2 
210 1 123 1 342 1 96 1 67 1 321 1 69 2 243 1 266 2 116 2 294 2 218 2 186 1 
328 1 276 1 17 1 373 1 67 1 263 2 309 2 321 1 243 1 202 1 69 1 266 1 116 1 306 1 294 1 218 1 248 1 199 1 
214 1 
371 1 17 1 40 1 264 1 337 1 
327 1 328 1 34 1 329 1 309 1 263 1 264 1 81 1 36 2 8 1 333 1 365 1 40 1 368 2 295 2 173 1 105 1 337 1 133 1 297 1 340 1 276 1 371 1 225 1 303 1 16 1 255 1 306 1 
276 1 269 1 371 1 40 1 48 1 309 1 263 1 337 1 377 1 
303 1 40 1 173 1 
21 1 129 3 193 1 89 1 83 1 235 1 286 3 7 1 236 1 79 1 348 1 
194 1 217 1 89 1 163 1 
89 1 7 1 
129 1 193 1 89 1 83 1 286 1 7 1 236 1 79 1 
275 1 194 1 89 3 7 2 79 1 348 2 129 4 217 1 83 1 235 1 286 4 163 1 236 2 190 1 
221 1 193 1 89 1 261 1 7 1 79 1 348 1 129 2 83 1 286 2 369 1 236 1 
275 1 193 1 14 1 89 1 79 1 7 1 129 3 83 1 286 3 235 2 236 1 190 2 
39 1 89 2 136 1 153 2 
238 1 129 1 193 1 83 1 286 1 79 1 
21 1 129 2 193 1 89 1 83 1 286 2 7 1 236 1 79 1 348 1 
237 1 
129 1 193 1 89 1 83 1 286 1 7 1 236 1 79 1 
89 1 7 1 236 1 20 1 
129 1 89 1 83 1 286 1 7 1 236 1 79 1 
129 1 307 1 165 1 
129 3 275 1 193 1 89 1 83 1 156 1 235 2 286 3 7 1 236 1 79 1 190 1 
129 2 89 1 83 1 162 1 286 2 7 1 236 1 79 1 348 1 
0 1 356 1 193 1 89 1 79 1 129 1 312 1 94 1 83 1 286 1 163 1 
129 1 193 1 89 1 83 1 286 1 7 1 79 1 
129 1 193 1 83 1 286 1 7 2 236 1 79 1 
193 1 89 1 7 1 79 2 362 1 150 1 129 2 83 2 188 1 286 2 
193 1 89 2 293 1 7 1 79 1 348 2 129 3 21 1 217 1 83 1 286 3 163 1 236 1 
272 1 356 1 193 1 89 1 7 1 79 1 348 1 312 2 129 2 101 1 94 1 83 1 286 2 236 1 32 1 
193 1 89 2 7 1 79 2 348 2 129 4 217 1 103 1 83 2 162 1 286 4 163 1 236 1 

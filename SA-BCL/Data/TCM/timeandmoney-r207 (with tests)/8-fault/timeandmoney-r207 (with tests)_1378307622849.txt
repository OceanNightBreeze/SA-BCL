#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (104,315) 198 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (104,315) 198 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 273 153 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 273 153 27 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 273 153 27 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 273 153 27 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 193 3 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 161 1 94 3 343 1 216 2 348 2 307 1 99 1 2 1 365 2 367 3 104 1 322 1 
343 6 206 1 348 2 113 2 2 3 48 1 49 1 231 2 180 2 89 1 73 1 211 2 29 1 52 1 94 9 161 1 357 1 216 5 307 2 239 1 99 1 309 1 367 9 365 2 315 1 104 1 173 1 322 4 
343 6 206 1 348 2 113 2 2 3 48 1 49 1 231 2 180 2 89 1 73 1 211 2 29 1 52 1 94 9 161 1 357 1 216 5 307 2 239 1 99 1 309 1 367 9 365 2 315 1 104 1 173 1 322 4 
343 7 206 1 348 2 113 2 2 4 48 1 49 1 231 2 180 2 89 1 73 1 211 2 29 1 52 1 94 10 161 1 357 1 216 6 307 2 239 1 99 1 309 1 367 10 365 2 315 1 104 1 173 1 322 5 
343 4 206 1 348 2 113 2 2 2 48 1 49 1 231 2 180 2 89 1 211 1 29 1 52 1 94 7 161 1 357 1 216 4 307 2 239 1 99 1 309 1 367 7 365 2 315 1 104 1 173 1 322 3 
52 1 161 1 94 4 343 3 216 3 348 1 113 1 99 1 2 1 49 1 231 1 365 1 367 4 180 1 73 1 211 2 29 1 322 2 
52 1 161 1 94 2 303 1 357 1 206 1 216 1 348 1 307 1 113 1 99 1 79 1 243 1 231 1 365 1 367 2 209 1 
94 1 161 1 25 1 348 1 104 1 198 1 367 1 365 1 
94 1 161 1 25 1 348 1 104 1 198 1 367 1 365 1 
238 1 306 1 358 1 11 1 228 1 164 1 326 1 192 1 24 1 210 1 59 1 168 1 262 1 249 1 
217 1 
24 1 370 1 217 1 358 2 168 2 222 1 156 1 184 1 
264 1 119 1 97 1 217 1 67 1 358 5 269 2 156 1 336 1 366 1 24 2 352 1 370 2 168 5 234 1 222 1 372 1 130 2 61 2 
217 1 222 1 375 1 
217 1 72 1 219 2 
306 2 210 2 238 2 59 2 11 2 228 1 177 1 249 2 
175 1 295 1 111 1 176 1 347 1 227 1 228 1 177 1 155 1 327 1 350 2 274 1 90 1 181 1 210 2 256 2 213 1 30 1 333 1 237 1 95 2 281 1 306 2 238 2 11 3 185 1 360 1 308 1 122 1 101 2 125 1 37 1 59 2 106 1 85 2 249 3 377 1 
192 1 306 1 210 1 238 1 59 1 11 1 228 1 326 1 262 1 249 1 
306 1 87 1 217 1 11 1 358 1 190 1 188 1 314 1 168 1 222 1 247 1 262 1 93 1 249 1 
238 1 306 1 87 1 217 1 11 1 358 2 190 1 188 1 314 1 210 1 59 1 168 2 222 1 262 1 249 1 
24 1 370 1 358 1 168 1 248 1 
24 1 370 1 217 1 358 2 168 2 222 1 284 1 156 1 
370 1 358 1 168 1 
306 2 238 1 11 2 226 1 229 1 177 2 210 1 59 1 249 2 
4 1 165 1 183 1 
175 1 237 1 95 1 11 1 347 1 227 1 308 1 122 1 177 1 155 1 350 1 256 1 213 1 356 1 249 1 30 1 
175 1 237 1 95 1 238 1 306 1 347 1 11 2 308 1 227 1 122 1 155 1 69 1 350 1 4 1 71 1 210 1 256 1 213 1 249 2 30 1 
177 1 375 1 
238 4 306 5 11 5 46 1 229 1 177 1 69 1 71 2 210 4 59 1 128 1 331 1 93 1 249 5 
192 1 306 2 210 2 238 2 11 2 109 1 262 1 249 2 
71 1 306 3 210 3 238 3 59 1 11 3 177 1 249 3 
192 1 306 1 210 1 238 1 11 1 262 1 249 1 
306 1 210 1 238 1 59 1 11 1 226 1 229 1 262 1 249 1 
175 1 295 1 111 1 176 1 87 1 347 1 227 1 228 1 229 1 177 1 155 1 135 1 69 1 350 1 274 1 71 1 181 1 210 3 159 1 256 1 213 1 30 1 237 1 95 1 281 1 306 3 238 3 11 4 358 1 185 1 308 1 122 1 190 1 188 1 101 2 314 1 125 1 59 2 168 1 106 1 85 1 262 1 249 4 377 1 
71 1 306 2 210 1 238 1 128 1 11 2 177 1 93 1 249 2 
238 3 306 3 87 1 217 1 358 1 11 3 229 1 188 1 190 1 69 1 314 1 71 2 210 3 59 1 159 1 168 1 289 1 262 1 249 3 
238 2 306 2 11 2 229 1 4 1 71 1 210 2 59 1 183 1 249 2 
175 1 237 1 95 1 11 1 347 1 227 1 308 1 122 1 177 1 155 1 350 1 256 1 213 1 249 1 30 1 
237 1 95 1 11 1 347 1 227 1 308 1 122 1 177 1 155 1 178 1 350 1 235 1 256 1 249 1 30 1 
0 1 292 1 295 1 111 1 324 1 327 2 4 2 274 2 181 1 298 1 299 1 182 1 183 2 147 1 10 1 281 1 185 1 123 1 165 2 101 2 338 1 195 1 125 1 85 4 
314 1 306 1 210 1 238 1 11 1 262 1 109 1 249 1 
323 1 320 1 62 1 
41 1 285 1 323 2 127 1 265 1 62 2 
323 1 62 1 
323 1 62 1 
285 1 127 1 
285 1 127 1 
285 1 127 1 
323 1 102 1 62 1 
323 1 102 1 62 1 
323 1 102 1 62 1 
313 1 323 1 62 1 
313 1 323 1 62 1 
313 1 323 1 62 1 
86 1 224 1 323 1 44 1 47 1 177 1 210 2 302 1 77 1 238 2 306 2 358 1 11 2 240 1 80 1 55 1 103 1 105 1 168 1 170 1 320 1 62 1 249 2 223 1 
302 2 86 2 9 2 323 2 265 1 217 1 358 2 44 3 47 1 137 1 105 2 168 2 255 1 143 1 75 1 19 1 174 1 62 2 223 2 
368 2 180 1 139 1 113 2 243 1 
180 1 113 1 231 1 
113 1 243 1 231 1 
368 1 337 1 180 2 139 1 113 3 243 1 
368 1 5 1 180 1 139 1 113 2 243 1 
251 2 224 1 324 1 67 1 269 1 156 1 24 4 72 1 298 1 275 1 355 1 147 1 358 5 217 2 219 3 240 1 80 1 336 2 123 1 366 3 16 2 56 1 369 1 370 1 168 5 83 2 222 1 107 1 130 1 61 1 341 1 40 1 
251 6 324 3 67 1 269 2 156 1 24 7 72 3 234 1 298 3 275 1 304 1 147 3 218 1 358 9 217 5 219 9 240 4 336 6 123 3 366 8 16 6 56 3 370 6 316 1 168 9 288 1 222 1 248 5 130 2 61 2 341 2 290 1 342 5 291 1 40 2 
251 2 324 1 269 1 24 2 72 2 234 1 298 1 355 1 147 1 217 3 358 3 219 4 240 1 336 2 366 3 123 1 16 2 56 1 369 1 168 3 83 1 222 1 130 1 61 1 341 1 40 1 
251 4 324 2 269 1 24 3 72 3 234 1 298 2 355 1 304 1 147 2 217 4 218 1 358 4 219 7 240 2 336 4 366 5 123 2 16 4 56 2 369 1 168 4 83 2 222 1 288 1 130 1 61 1 341 1 40 1 
204 1 
122 1 68 1 375 1 
197 1 122 1 
308 1 227 1 122 1 
78 1 122 1 
308 1 122 1 
263 1 308 1 227 1 122 3 152 1 68 2 
0 2 332 1 344 1 31 1 324 1 14 1 207 1 189 1 327 4 123 1 274 3 338 3 286 1 329 1 199 1 202 1 85 7 108 2 
0 5 344 1 154 4 295 1 111 1 324 4 267 1 207 2 327 16 136 1 274 15 181 1 329 1 298 3 144 1 147 3 31 5 14 2 283 1 189 2 123 4 56 3 101 2 166 3 338 10 125 1 286 1 199 1 18 1 202 2 85 31 108 3 374 1 20 1 
0 3 344 1 148 1 31 1 111 2 295 2 324 1 14 1 207 1 259 1 189 1 327 5 123 1 274 4 101 4 338 4 125 2 181 2 286 1 199 1 18 1 202 1 85 9 108 2 
0 2 344 1 31 1 324 1 14 1 207 1 189 1 327 4 123 1 274 3 338 3 286 1 329 1 199 1 202 1 85 7 108 2 
0 2 344 1 31 1 324 1 14 1 207 1 189 1 327 4 123 1 274 3 338 3 286 1 329 1 199 1 202 1 85 7 108 2 
43 1 347 1 348 1 88 2 208 1 23 1 350 1 70 1 256 1 236 1 30 1 92 1 94 1 7 2 237 1 95 1 307 2 121 2 308 1 122 1 367 1 365 1 203 1 
1 1 252 1 348 1 45 1 347 1 113 2 88 1 231 1 350 1 180 1 232 1 256 1 28 1 94 1 161 1 7 1 237 1 95 1 307 1 120 1 121 1 243 1 15 1 367 1 365 1 337 1 
343 1 66 1 252 1 348 1 45 1 347 1 113 2 88 1 231 1 350 1 180 1 232 1 256 1 28 1 52 1 94 2 161 1 7 1 237 1 95 1 216 1 307 1 120 1 99 1 121 1 243 1 15 1 367 2 365 1 337 1 
1 1 343 2 252 1 348 1 45 1 347 1 112 1 113 2 88 1 231 1 208 1 350 1 180 1 232 1 256 1 28 1 52 1 94 3 7 1 237 1 95 1 216 1 307 1 120 1 99 1 121 1 243 1 367 3 365 1 337 1 
1 1 343 2 252 1 45 1 347 1 112 1 113 2 88 1 231 1 350 1 180 1 256 1 28 1 52 1 94 2 7 1 237 1 95 1 216 1 307 1 99 1 121 1 243 1 367 2 337 1 
242 1 
132 1 42 2 87 1 269 1 179 1 328 4 91 1 92 1 93 1 237 1 95 2 11 1 98 1 336 2 190 1 188 1 191 1 58 2 247 1 201 1 341 1 61 1 249 1 110 2 67 1 347 1 156 3 350 2 70 1 354 1 254 2 72 2 256 2 257 1 30 2 306 1 217 2 358 5 219 2 220 1 308 1 122 1 36 1 366 2 124 1 314 1 82 1 370 6 168 5 222 1 169 2 130 1 262 1 376 2 131 2 
87 1 156 1 328 2 91 1 254 1 184 1 93 1 306 1 11 1 358 3 220 1 36 1 190 1 188 1 191 1 124 1 314 1 370 2 168 3 247 1 262 1 249 1 
87 1 42 1 156 1 328 3 91 1 184 1 93 1 306 1 11 1 358 3 217 1 220 1 36 1 190 1 188 1 191 1 124 1 314 1 370 1 168 3 247 1 222 1 262 1 249 1 
87 1 42 1 156 1 328 3 91 1 254 1 184 1 93 1 306 1 11 1 358 3 217 1 220 1 36 1 190 1 188 1 191 1 124 1 314 1 370 2 168 3 247 1 222 1 262 1 249 1 110 1 
87 1 42 4 266 1 269 1 328 6 91 1 184 1 93 1 11 1 188 1 190 1 336 1 191 1 58 2 247 1 201 1 61 1 249 1 110 4 67 1 156 3 351 1 114 1 254 4 72 2 116 1 306 1 358 5 217 5 220 1 36 1 366 1 314 1 124 1 221 1 82 1 370 7 168 5 222 5 169 2 130 1 262 1 131 2 376 2 
87 1 42 2 269 1 328 4 91 1 93 1 11 1 188 1 190 1 336 1 191 1 58 2 247 1 201 1 61 1 249 1 110 2 67 1 156 2 72 2 254 2 257 1 306 1 358 4 217 2 219 2 220 1 36 1 366 1 314 1 124 1 82 1 370 4 168 4 222 1 169 2 130 1 262 1 131 2 376 2 
42 2 87 1 67 1 269 1 156 2 351 1 328 4 114 1 91 1 254 2 72 2 116 1 93 1 306 1 217 1 11 1 358 4 220 1 336 1 36 1 190 1 188 1 366 1 191 1 124 1 314 1 58 2 82 1 370 4 168 4 222 1 247 1 169 2 201 1 130 1 61 1 262 1 376 2 131 2 249 1 110 2 
42 2 87 1 67 1 269 1 156 2 351 1 328 4 114 1 91 1 254 2 72 2 116 1 93 1 306 1 217 1 11 1 358 4 220 1 336 1 36 1 190 1 188 1 366 1 191 1 124 1 314 1 58 2 82 1 370 4 168 4 222 1 247 1 169 2 201 1 130 1 61 1 262 1 376 2 131 2 249 1 110 2 
42 2 134 1 87 1 67 1 269 1 270 1 156 2 351 1 328 4 91 1 254 2 76 1 93 1 306 1 217 1 11 1 358 4 219 2 220 1 336 1 36 1 190 1 188 1 366 1 191 1 124 1 314 1 58 2 370 4 168 4 222 1 371 2 60 2 247 1 169 2 201 1 130 1 61 1 262 1 249 1 110 2 
87 1 42 3 67 1 269 1 156 2 351 1 328 5 114 1 91 1 72 2 254 3 116 1 93 1 306 1 217 1 11 1 358 4 220 1 336 1 36 1 190 1 188 1 366 1 191 1 124 1 314 1 58 2 82 1 221 1 370 5 168 4 222 1 247 1 169 2 201 1 130 1 61 1 262 1 376 2 131 2 249 1 110 3 
87 1 42 3 67 1 269 1 156 2 351 1 328 5 114 1 91 1 72 2 254 3 116 1 93 1 306 1 217 1 11 1 358 4 220 1 336 1 36 1 190 1 188 1 366 1 191 1 124 1 314 1 58 2 82 1 221 1 370 5 168 4 222 1 247 1 169 2 201 1 130 1 61 1 262 1 376 2 131 2 249 1 110 3 
134 1 87 1 42 2 269 1 328 4 91 1 93 1 11 1 188 1 190 1 336 1 191 1 58 2 247 1 60 2 201 1 61 1 249 1 110 2 67 1 156 2 254 2 257 1 306 1 358 4 217 1 219 2 220 1 36 1 366 1 314 1 124 1 370 4 168 4 371 2 222 1 169 2 130 1 262 1 
1 1 64 1 66 1 295 2 111 2 347 2 327 1 350 7 274 1 70 1 71 1 210 1 181 2 90 1 182 1 256 8 30 2 92 1 162 1 237 2 333 2 280 1 95 8 306 1 238 1 281 2 149 1 11 1 185 2 308 2 122 3 101 4 196 1 125 2 129 1 38 1 85 2 249 1 377 1 
0 1 295 1 111 1 324 1 229 1 327 1 4 1 253 1 274 2 181 1 210 1 298 1 183 1 145 1 147 1 238 1 281 1 306 1 11 1 185 1 123 1 165 1 56 1 101 2 338 1 125 1 59 1 85 3 249 1 
0 2 344 1 295 1 111 1 324 1 207 1 177 2 327 3 4 1 274 3 181 1 182 1 183 1 281 1 185 1 14 1 123 1 165 1 101 2 338 2 125 1 286 1 199 1 85 6 108 1 375 1 
0 1 154 3 295 2 111 2 324 1 177 1 327 8 136 1 253 1 4 11 274 6 90 1 181 2 298 2 183 4 301 1 147 1 31 1 32 1 281 2 185 1 283 1 163 1 123 2 165 11 56 2 101 4 166 3 338 2 125 2 171 1 85 14 377 1 
175 1 111 1 295 1 347 1 227 1 177 1 155 1 327 1 350 1 69 1 253 1 274 1 71 1 181 1 210 1 90 1 256 1 213 1 183 1 356 1 30 1 237 1 95 1 281 1 306 1 238 1 11 2 185 1 33 1 308 1 122 1 186 1 101 2 125 1 85 2 321 1 249 2 377 1 
1 1 0 4 175 2 324 3 227 2 177 2 327 10 4 7 274 10 90 1 181 3 142 2 183 7 237 2 147 2 95 3 238 1 281 3 11 3 185 3 14 1 244 2 56 2 101 6 338 8 286 1 199 1 106 2 151 2 108 1 249 3 344 1 295 3 111 3 347 2 207 1 155 2 350 3 69 1 253 1 71 1 297 1 210 1 298 2 115 2 256 3 213 2 30 1 31 4 306 1 35 1 308 2 122 2 123 3 165 7 125 3 373 1 85 20 377 1 
31 1 111 1 295 1 281 1 185 1 327 2 123 1 4 1 165 1 101 2 338 1 125 1 181 1 298 1 299 1 182 1 183 1 85 2 
0 1 147 1 111 1 295 1 281 1 10 1 324 1 185 1 4 1 165 1 101 2 274 2 338 1 125 1 181 1 182 1 183 1 85 2 
0 1 295 1 111 1 324 1 327 2 4 2 274 2 181 1 298 1 182 1 183 2 147 1 31 1 281 1 185 1 123 1 56 1 165 2 101 2 338 2 125 1 85 4 
31 1 111 1 295 1 281 1 185 1 327 2 123 1 4 1 165 1 101 2 338 1 125 1 181 1 298 1 299 1 38 1 183 1 85 2 
0 1 147 1 111 1 295 1 281 1 10 1 324 1 185 1 4 1 165 1 101 2 274 2 338 1 125 1 181 1 38 1 183 1 85 2 
0 1 295 1 111 1 324 1 327 2 4 2 274 2 181 1 298 1 183 2 147 1 31 1 281 1 185 1 123 1 56 1 165 2 101 2 338 2 125 1 38 1 85 4 
0 1 147 1 31 1 111 1 295 1 324 1 281 1 185 1 327 2 123 1 4 2 165 2 56 1 274 2 101 2 338 2 125 1 181 1 298 1 183 2 85 4 
175 1 111 1 295 1 347 1 227 1 177 1 155 1 327 1 350 1 274 1 90 1 181 1 256 1 213 1 30 1 237 1 95 1 281 1 11 1 185 1 308 1 122 1 101 2 125 1 106 1 85 2 249 1 377 1 
111 1 295 1 347 1 227 1 177 1 155 1 327 1 178 1 350 1 274 1 90 1 181 1 235 1 256 1 117 1 30 1 237 1 95 1 281 1 11 1 185 1 308 1 122 1 101 2 125 1 85 2 249 1 377 1 
0 1 295 1 111 1 324 1 327 2 253 1 4 2 274 2 181 1 298 1 183 2 147 1 31 1 281 1 185 1 123 1 56 1 165 2 101 2 338 2 125 1 85 4 
0 1 175 1 66 1 111 1 295 1 324 1 347 1 227 1 155 1 327 2 350 1 4 2 274 2 181 1 298 1 115 1 256 1 183 2 213 1 147 1 237 1 95 1 31 1 281 1 11 1 185 1 308 1 122 1 123 1 165 2 56 1 101 2 338 2 125 1 106 1 85 4 249 1 
295 1 111 1 324 1 229 1 327 2 253 1 4 1 274 1 181 1 210 1 298 1 183 1 147 1 31 1 238 1 281 1 306 1 11 1 185 1 187 1 123 1 56 1 165 1 101 2 338 1 125 1 59 1 85 3 249 1 
0 3 63 1 154 2 295 2 111 2 324 3 327 9 136 1 274 10 181 2 298 3 300 2 27 1 277 1 278 2 147 3 31 3 34 1 283 1 259 1 123 3 56 3 101 4 166 1 338 6 125 2 246 1 85 19 153 1 172 1 
0 1 63 2 154 2 295 2 111 2 324 1 327 6 136 2 274 8 273 1 181 2 298 1 300 2 27 1 146 1 147 1 259 1 310 1 123 1 56 1 101 4 166 2 338 1 125 2 18 1 85 14 153 2 172 1 
0 2 63 2 154 4 295 3 111 3 324 3 327 12 136 3 273 1 274 15 181 3 298 3 300 3 27 1 146 1 277 1 278 1 147 3 31 2 13 1 283 1 259 1 310 1 123 3 56 3 101 6 166 3 338 4 125 3 246 1 18 1 85 27 153 1 172 1 
0 3 63 2 154 4 295 3 111 3 324 3 327 12 136 3 273 1 274 15 181 3 298 3 300 3 27 1 146 1 277 1 278 1 147 3 31 2 13 1 283 1 259 1 310 1 123 3 56 3 101 6 166 3 338 5 125 3 246 1 18 1 85 27 153 1 172 1 
0 6 63 1 344 1 154 4 295 2 111 2 324 6 207 1 327 23 136 2 273 1 274 19 181 2 298 6 300 2 27 1 212 1 146 1 147 5 31 5 14 1 283 2 163 2 259 1 310 1 123 7 56 6 101 4 166 4 338 11 125 2 286 1 199 1 287 1 18 1 85 42 108 1 153 1 172 1 
302 1 86 1 323 1 265 1 12 1 105 1 255 1 143 1 62 1 223 1 
103 1 320 1 
302 1 215 1 86 1 205 1 323 1 105 1 17 1 62 1 223 1 
282 1 102 1 
313 1 41 1 361 1 
302 1 86 1 9 1 323 1 265 1 217 1 358 1 44 2 47 1 168 1 105 1 255 1 143 1 75 1 19 1 174 1 62 1 223 1 
302 1 86 1 9 1 323 1 265 1 217 1 358 1 44 2 47 1 168 1 105 1 255 1 143 1 75 1 19 1 174 1 62 1 223 1 
302 1 86 1 9 1 323 1 265 1 217 1 358 1 44 2 47 1 168 1 105 1 255 1 143 1 75 1 19 1 174 1 62 1 223 1 
41 1 282 1 102 1 
41 1 282 1 102 1 
313 1 361 1 
313 1 41 1 361 1 
77 1 170 1 
86 1 224 1 323 1 44 1 177 1 24 1 210 2 302 1 53 1 77 1 9 1 238 2 306 2 11 2 358 1 240 1 80 1 55 1 103 1 168 1 105 1 170 1 19 1 320 1 249 2 62 1 223 1 
64 1 111 1 295 1 347 1 327 1 349 1 350 2 253 1 271 1 274 1 181 1 90 1 256 2 237 1 333 2 95 2 281 1 306 2 11 2 185 1 308 1 122 1 54 1 81 1 101 2 194 1 125 1 129 1 85 2 249 2 377 1 
237 1 95 1 347 1 308 1 88 1 122 1 23 1 350 1 70 1 317 1 256 1 30 1 39 1 92 1 
1 1 237 1 95 1 305 1 347 1 45 1 113 2 120 1 243 1 88 1 231 1 245 1 350 1 337 1 180 1 256 1 28 1 39 1 
1 1 237 1 95 2 66 1 305 1 347 1 45 1 113 2 120 1 243 1 88 1 231 1 245 1 350 2 337 1 180 1 256 2 28 1 39 1 
1 1 237 1 95 1 305 1 45 1 347 1 113 2 120 1 243 1 88 1 231 1 350 1 337 1 180 1 74 1 256 1 28 1 
233 1 
119 1 67 1 217 1 269 1 336 1 366 1 352 1 222 1 130 1 61 1 
147 2 251 5 324 2 217 5 219 10 336 5 123 2 366 5 16 5 56 2 50 2 72 5 298 2 142 1 319 1 
370 1 217 1 358 1 168 1 222 1 156 1 
132 1 347 1 67 1 269 2 3 1 156 2 157 1 179 1 350 3 70 1 234 1 256 3 30 2 92 1 237 1 8 1 95 3 358 3 308 1 98 2 122 1 336 2 366 1 193 1 370 4 168 3 130 2 61 2 341 1 
352 1 119 1 217 1 222 1 336 1 366 1 375 1 
67 1 269 1 156 1 72 1 217 2 358 1 219 1 336 1 366 1 82 1 370 1 168 1 222 1 130 1 61 1 131 1 376 1 
237 1 95 1 258 1 263 1 225 1 347 2 67 1 269 1 308 1 227 1 122 2 366 1 350 1 197 1 256 1 130 1 341 1 61 1 30 1 
154 1 251 4 324 1 67 2 269 2 156 1 136 1 50 1 273 1 160 1 72 3 298 1 146 1 147 1 358 1 217 4 219 6 336 2 310 1 366 5 123 1 16 4 56 1 166 1 370 1 168 1 222 1 130 2 61 2 
324 1 67 1 269 1 228 1 207 1 326 1 230 1 50 2 210 1 116 1 238 1 306 1 11 1 358 1 14 1 164 1 336 2 123 2 366 2 192 1 59 1 168 1 286 1 319 1 130 1 61 1 262 1 249 1 
175 1 295 1 111 1 176 1 347 1 228 1 227 1 177 1 155 1 350 1 274 1 210 2 181 1 256 1 213 1 30 1 237 1 95 1 306 2 238 2 281 1 11 3 185 1 308 1 122 1 101 2 125 1 59 2 106 1 85 1 249 3 377 1 
251 2 67 1 217 4 219 4 269 1 98 1 336 2 366 1 16 2 72 2 222 2 130 1 108 1 61 1 341 1 
302 1 158 1 105 1 170 1 143 1 
302 1 260 1 105 1 
302 1 260 1 105 1 
302 1 260 1 105 1 
302 1 105 1 100 1 
302 1 105 1 100 1 
302 1 105 1 100 1 
302 1 105 1 
323 1 62 1 
0 3 295 1 111 1 31 2 324 2 14 2 259 1 207 2 230 1 327 5 123 2 101 2 274 5 338 5 125 1 181 1 286 1 85 10 
111 1 295 1 31 1 259 1 327 2 123 1 101 2 338 1 125 1 181 1 298 1 85 2 
0 1 147 1 111 1 295 1 31 1 324 1 259 1 327 2 123 1 56 1 274 2 101 2 338 2 125 1 181 1 298 1 85 4 
0 1 111 3 295 3 31 1 14 1 362 1 259 1 207 1 327 1 274 2 101 6 338 2 125 3 181 3 246 1 18 1 85 3 
0 7 344 1 154 4 295 5 111 5 324 5 207 3 327 16 136 1 274 18 181 5 298 3 144 1 147 3 31 5 14 3 283 1 362 1 259 1 123 5 56 3 101 10 166 3 150 1 338 12 125 5 246 1 286 2 199 1 18 2 85 34 108 1 374 1 20 1 
166 1 274 1 154 1 273 1 101 2 295 1 111 1 125 1 181 1 259 1 85 2 327 1 136 1 
154 2 31 1 111 2 295 2 283 1 259 1 327 3 123 1 136 1 56 1 166 1 101 4 273 1 274 2 338 1 150 1 125 2 181 2 298 1 85 5 
0 1 147 1 154 1 111 2 295 2 324 1 259 1 310 1 327 3 123 1 136 1 56 1 101 4 273 1 274 5 166 1 338 1 125 2 181 2 298 1 18 1 85 8 146 1 
0 1 154 1 295 2 111 2 324 1 327 7 136 1 274 4 273 1 181 2 298 2 212 1 146 1 147 1 31 1 259 1 310 1 123 2 56 2 166 1 101 4 338 2 125 2 287 1 18 1 85 11 
166 1 274 1 154 1 273 1 101 2 295 1 111 1 125 1 181 1 259 1 85 2 327 1 136 1 
0 1 154 1 295 1 111 1 324 2 327 6 136 1 274 6 273 1 181 1 298 2 212 1 146 1 147 2 31 1 259 1 310 1 123 2 56 2 166 1 101 2 338 2 125 1 287 1 85 12 
0 1 147 1 154 1 111 3 295 3 324 1 259 1 310 1 327 3 123 1 136 1 56 1 166 1 101 6 273 1 274 5 338 1 150 1 125 3 181 3 298 1 18 1 85 8 146 1 
0 2 147 1 154 1 111 3 295 3 324 1 259 1 310 1 327 3 123 1 136 1 56 1 166 1 101 6 273 1 274 5 338 2 125 3 181 3 246 1 298 1 18 1 85 8 146 1 
0 3 344 1 31 3 324 1 14 3 207 3 327 3 123 1 274 4 338 6 286 1 199 2 85 7 
0 1 147 1 154 1 111 3 295 3 324 1 259 1 310 1 327 3 123 1 136 1 56 1 166 1 101 6 273 1 274 5 338 1 125 3 181 3 246 1 298 1 18 1 85 8 146 1 
0 2 344 1 31 1 111 2 295 2 324 1 14 1 207 1 327 4 123 1 274 4 101 4 338 3 125 2 181 2 286 1 199 1 18 1 85 8 108 1 
0 2 344 1 324 1 14 1 207 1 327 3 123 1 274 3 338 2 286 1 199 1 85 6 108 1 375 1 
0 1 147 1 111 1 295 1 31 1 324 1 327 2 123 1 56 1 274 2 101 2 338 2 150 1 125 1 181 1 298 1 85 4 
0 1 147 1 154 2 31 1 324 1 283 1 327 3 136 1 123 1 56 1 274 4 166 1 338 2 298 1 85 7 
0 5 344 1 154 2 111 2 295 2 324 3 207 2 327 11 274 12 181 2 298 2 147 2 31 4 32 1 14 2 283 1 163 1 362 1 123 3 56 2 166 2 101 4 338 9 125 2 286 1 199 1 18 2 85 23 108 1 
274 1 154 1 85 1 
166 1 85 1 327 1 
0 2 147 1 295 1 111 1 31 1 324 1 327 3 123 1 56 1 101 2 274 3 150 1 338 3 125 1 181 1 298 1 142 1 85 6 
0 1 154 1 295 1 111 1 324 2 327 6 136 1 274 6 273 1 181 1 298 2 212 1 146 1 147 2 31 1 259 1 310 1 123 2 56 2 166 1 101 2 338 2 125 1 287 1 85 12 
0 1 31 1 324 1 14 1 207 1 327 3 123 1 274 3 338 2 286 1 85 6 
0 1 344 1 31 1 111 1 295 1 14 1 207 1 362 1 327 1 274 2 101 2 338 2 125 1 181 1 199 1 18 1 85 3 
133 1 306 1 11 1 128 1 177 1 249 1 93 1 
133 1 279 1 293 1 306 1 140 1 11 1 128 1 21 1 268 1 177 1 249 1 93 1 
237 1 70 1 95 4 66 1 138 1 141 1 347 1 308 1 256 4 122 1 92 1 30 1 350 4 
237 1 95 2 334 1 347 2 227 1 308 1 122 1 157 1 364 1 350 2 297 1 200 1 318 1 256 2 
237 1 95 1 347 1 45 1 113 1 243 1 256 1 231 1 30 1 350 1 
1 1 237 1 271 1 95 2 66 1 347 1 129 1 308 1 256 2 122 1 350 2 
237 2 95 5 66 1 149 1 347 2 308 2 122 3 157 1 350 4 70 1 196 1 141 1 129 1 256 5 92 1 30 1 
250 1 237 2 95 5 66 1 347 2 308 2 122 3 157 1 350 4 70 1 196 1 141 1 129 1 256 5 92 1 30 1 
237 1 70 1 95 1 347 1 308 1 256 1 122 1 92 1 375 1 30 1 350 1 
175 1 237 1 95 1 238 1 306 1 347 1 11 2 308 1 227 1 122 1 177 1 155 1 350 1 71 1 210 1 256 1 249 2 30 1 
175 1 347 1 227 2 177 1 155 1 157 1 350 1 71 1 210 2 26 1 256 1 237 1 95 1 306 2 238 1 78 1 11 2 308 2 122 3 190 1 314 1 262 1 249 2 
347 1 227 2 177 1 155 1 157 1 178 1 350 2 71 1 138 1 210 2 26 1 256 2 237 1 95 2 306 2 238 1 78 1 11 2 308 2 122 3 190 1 314 1 262 1 249 2 
347 1 227 1 68 1 157 1 350 3 138 1 26 1 256 3 51 1 30 1 237 1 95 3 78 1 359 1 358 2 217 1 308 1 122 4 188 1 370 1 197 1 168 2 222 1 
228 1 326 1 22 1 157 1 350 1 210 1 256 1 95 1 238 1 306 1 358 1 217 1 11 1 164 1 122 1 192 1 197 1 59 1 168 1 222 1 262 1 249 1 
237 1 162 1 95 1 347 1 256 1 350 1 
1 1 333 1 162 1 237 2 280 1 95 7 263 1 66 1 334 1 149 1 347 3 227 1 308 2 122 3 364 1 350 6 312 1 196 1 129 1 256 7 30 2 
175 1 0 2 324 1 227 1 177 2 327 3 4 1 274 3 181 2 183 1 237 1 95 1 238 1 281 2 11 2 185 2 14 1 101 4 338 2 286 1 106 1 199 1 151 1 108 1 249 2 344 1 66 1 295 2 111 2 347 1 207 1 155 1 350 1 253 1 71 1 210 1 115 1 256 1 213 1 306 1 308 1 122 1 81 1 123 1 165 1 125 2 85 6 
324 2 269 2 228 1 326 1 230 1 50 2 95 1 8 1 238 1 11 1 14 1 336 5 192 1 197 1 59 1 286 1 61 2 249 1 294 1 67 2 207 1 156 1 22 1 350 1 24 1 352 1 210 1 256 1 30 1 214 1 119 1 306 1 358 2 217 2 164 1 122 1 123 2 366 4 370 1 168 2 222 2 84 1 319 1 130 2 262 1 
162 1 237 1 95 2 263 1 66 1 225 1 347 2 227 1 308 1 122 2 68 1 350 2 256 2 
237 1 95 1 238 1 306 1 347 1 11 2 308 1 227 1 122 1 177 1 155 1 178 1 350 1 71 1 210 1 256 1 249 2 30 1 
237 1 95 1 263 1 334 1 347 2 227 1 308 1 122 1 157 1 364 1 350 1 312 1 256 1 
272 1 335 1 261 1 177 1 311 1 
118 1 87 1 217 1 358 2 335 2 296 1 177 1 188 1 190 1 311 2 24 1 314 1 272 1 57 1 159 1 168 2 222 1 261 2 262 1 
306 1 335 1 11 1 54 1 311 1 349 1 272 1 194 1 249 1 
118 1 57 1 272 1 
52 1 94 1 161 1 216 1 348 1 99 1 367 1 365 1 
52 2 94 4 343 2 345 1 357 1 216 3 348 1 241 1 99 2 2 1 367 4 365 1 209 1 322 1 
161 1 94 1 52 1 96 1 348 1 99 1 325 1 365 1 367 1 209 1 25 1 
52 1 94 3 161 1 345 2 167 1 357 2 216 1 348 1 241 1 99 1 367 3 365 1 
216 2 353 1 339 1 340 2 
94 1 161 1 65 1 348 1 367 1 365 1 
52 1 94 2 161 1 343 1 216 1 348 1 99 1 173 1 367 2 365 1 
6 1 
52 1 94 1 161 1 216 1 348 1 99 1 367 1 365 1 
52 1 216 1 99 1 375 1 
52 1 94 1 216 1 348 1 99 1 367 1 365 1 
94 1 307 1 121 1 
52 1 94 3 161 1 345 1 357 2 216 1 348 1 330 1 241 1 99 1 367 3 365 1 
52 1 94 2 343 1 216 1 348 1 211 1 99 1 367 2 365 1 
94 1 161 1 180 1 216 1 348 1 113 1 49 1 231 1 322 1 367 1 365 1 
52 1 94 1 161 1 216 1 348 1 367 1 365 1 
52 2 94 1 161 1 348 1 99 1 367 1 365 1 
52 1 161 1 94 2 216 1 346 1 348 2 365 2 367 2 126 1 276 1 
52 1 161 1 94 3 343 2 216 2 348 1 239 1 99 1 2 1 365 1 367 3 173 1 322 1 
52 1 161 1 94 2 343 1 216 1 348 1 113 2 99 1 243 1 363 1 231 1 365 1 367 2 337 1 180 1 
52 1 161 1 94 4 343 2 216 2 348 2 99 1 2 1 365 2 367 4 73 1 211 1 322 1 
52 1 94 3 161 1 343 1 357 1 216 1 348 1 99 1 173 1 367 3 365 1 
216 1 2 1 322 1 209 1 
52 1 216 1 

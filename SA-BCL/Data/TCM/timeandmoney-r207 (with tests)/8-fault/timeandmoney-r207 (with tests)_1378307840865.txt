#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (32,360) 256 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (27,101) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (67,92,195) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 247 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 247 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 271 134 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (32,360) (32,360) (68,177) 146 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 116 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (32,360) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 254 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (32,360) (32,360) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (1,50) 183 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (1,50) 183 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (1,50) 348 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (1,50) 348 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (27,101) (27,101) 210 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (32,360) 256 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 111 216 107 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 111 216 107 259 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 133 (87,229) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 133 (87,229) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 133 (44,167) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (27,101) (27,101) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (27,101) (27,101) 210 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 133 (44,167) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 319 1 158 1 160 4 206 1 249 9 49 1 342 3 93 6 274 1 118 1 75 2 278 2 102 5 52 2 14 1 285 2 217 2 239 1 288 1 289 2 83 1 242 1 355 1 356 1 153 1 358 9 203 2 
64 1 319 1 158 1 160 4 206 1 249 9 49 1 342 3 93 6 274 1 118 1 75 2 278 2 102 5 52 2 14 1 285 2 217 2 239 1 289 2 288 1 83 1 242 1 355 1 356 1 153 1 358 9 203 2 
64 1 319 1 158 1 160 5 206 1 249 10 49 1 342 4 93 7 274 1 118 1 75 2 278 2 102 6 52 2 14 1 285 2 217 2 239 1 289 2 288 1 83 1 242 1 355 1 356 1 153 1 358 10 203 2 
64 1 319 1 158 1 160 3 206 1 249 7 49 1 342 2 93 4 274 1 118 1 75 2 278 2 102 4 52 2 14 1 285 2 217 2 239 1 289 2 288 1 83 1 242 1 356 1 153 1 358 7 203 1 
64 1 158 1 52 1 160 2 14 1 206 1 217 1 249 4 342 1 93 3 289 1 242 1 355 1 358 4 203 2 75 1 278 1 102 3 
64 1 158 1 115 1 52 1 35 1 285 1 217 1 249 2 49 1 242 1 356 1 358 2 326 1 75 1 102 1 278 1 
64 1 158 1 160 1 285 1 217 2 249 3 342 1 93 1 242 1 153 1 358 3 278 2 102 2 
64 1 158 1 52 1 160 4 206 1 14 1 54 1 285 1 217 2 249 9 342 3 274 1 93 7 289 1 83 1 242 1 355 1 29 1 153 1 358 9 203 2 75 1 102 5 278 2 
64 1 158 1 52 1 160 4 206 1 14 1 54 1 285 1 217 2 249 9 342 3 274 1 93 7 289 1 83 1 242 1 355 1 29 1 153 1 358 9 203 2 75 1 102 5 278 2 
300 1 354 1 247 1 
300 1 117 1 218 2 
336 2 220 2 331 1 
224 2 2 1 208 2 80 1 331 1 275 1 309 2 336 1 220 1 256 1 360 1 132 1 
336 1 220 1 101 1 331 1 
156 1 195 1 76 1 246 1 300 1 67 1 92 1 331 1 170 1 27 1 354 1 336 1 220 1 298 1 345 1 155 1 101 1 111 1 268 1 
336 1 67 1 220 1 
81 1 195 1 211 1 345 1 277 1 
81 1 195 2 211 1 300 1 354 1 148 1 345 2 38 1 
81 1 195 1 345 1 
195 1 211 1 27 1 336 1 220 1 345 1 101 1 331 1 
300 1 
81 1 195 2 211 1 296 1 300 1 354 1 148 1 345 2 
195 5 300 1 197 1 148 1 13 2 23 1 322 1 330 1 7 1 81 2 211 2 138 2 354 1 345 5 213 1 346 1 109 1 222 1 182 2 
247 1 
156 1 76 1 45 1 66 1 37 1 336 1 220 1 155 1 20 1 268 1 
224 1 309 1 220 1 208 1 352 1 80 1 187 1 
336 1 220 3 187 1 
220 1 
45 1 336 1 220 1 37 1 
336 1 220 2 37 1 352 1 187 1 
156 1 76 1 216 1 187 1 220 1 155 1 20 1 111 1 268 1 
220 1 352 1 187 1 
336 1 220 1 37 1 
224 1 309 1 208 1 80 1 
224 1 309 1 208 1 80 1 
25 1 106 1 202 1 270 1 291 1 238 1 313 1 39 2 
142 1 220 1 
156 1 76 1 37 1 216 1 352 1 187 2 336 1 220 4 155 1 20 1 268 1 111 1 362 1 245 1 
220 1 
320 1 304 1 
320 1 304 1 
347 1 266 1 
347 1 266 1 
347 1 266 1 
228 1 320 1 304 1 
50 1 1 1 320 2 347 1 266 1 304 2 
261 1 320 1 304 1 
228 1 320 1 304 1 
228 1 320 1 304 1 
320 1 178 1 304 1 
320 1 178 1 304 1 
320 1 178 1 304 1 
195 2 223 3 300 1 340 1 48 1 320 2 129 1 265 1 321 2 304 2 15 1 137 2 188 2 16 1 200 2 50 1 201 2 345 2 267 1 
195 1 157 1 223 1 261 1 340 1 12 1 320 1 321 1 250 1 304 1 137 1 188 1 171 1 201 1 345 1 220 2 86 1 312 1 349 1 
289 1 52 1 75 1 
115 1 52 1 75 1 
289 2 115 1 72 1 230 1 75 3 180 1 
289 1 115 1 72 1 230 1 75 2 273 1 
289 1 115 1 230 1 72 2 75 2 
135 2 250 1 322 2 7 1 117 1 211 4 26 1 138 1 96 1 27 1 345 5 323 1 101 1 195 5 34 1 300 2 197 3 284 2 36 1 13 1 148 1 130 2 78 1 169 1 218 3 331 1 332 1 81 1 354 1 336 1 220 1 221 1 63 1 182 1 
135 2 250 1 322 2 7 1 117 1 211 4 26 1 138 1 27 1 96 1 345 5 277 2 327 2 101 1 195 5 350 1 34 1 300 2 197 3 284 2 36 1 13 1 148 1 78 1 169 1 218 3 331 1 332 1 81 3 354 1 336 1 220 1 17 1 221 1 182 1 
135 2 250 1 322 2 117 1 211 2 138 1 26 1 27 1 323 1 345 3 101 1 195 3 34 1 300 2 197 3 13 1 36 1 284 2 130 1 330 1 78 1 331 1 169 1 218 3 332 1 354 1 336 1 220 1 221 1 63 1 182 1 
135 4 250 2 322 4 117 3 211 3 138 1 26 2 345 4 323 1 30 1 124 1 195 4 126 1 34 2 300 4 197 5 284 4 13 1 36 2 130 2 330 1 78 2 169 2 218 7 332 1 354 1 221 1 63 1 182 1 
247 1 234 1 
53 1 90 1 
263 1 
53 1 194 1 
119 1 53 1 166 1 263 1 234 2 194 1 236 1 
53 1 194 1 236 1 
53 1 121 1 
145 1 316 1 46 1 269 1 225 1 5 1 189 1 42 1 154 1 19 2 192 1 74 1 181 1 
145 1 316 1 46 1 269 1 225 1 5 1 189 1 42 1 154 1 19 2 192 1 74 1 181 1 
145 1 316 1 46 1 269 1 225 1 5 1 306 1 189 1 42 1 154 1 19 2 74 1 192 1 181 1 
113 4 316 2 225 1 46 5 269 4 5 13 189 2 25 1 26 3 191 3 9 1 74 1 192 25 258 1 145 2 280 1 34 3 36 3 78 3 39 2 169 3 104 12 105 1 106 1 202 1 42 2 154 2 19 9 243 1 313 1 244 1 181 1 315 1 
145 1 280 1 165 1 316 1 46 1 269 2 5 2 240 1 39 4 189 1 104 1 25 2 106 2 42 1 202 2 154 1 19 3 74 1 192 3 313 2 181 1 
64 1 185 1 158 1 115 1 224 1 205 1 47 1 208 1 249 2 251 1 93 1 125 1 235 1 75 2 102 1 278 1 52 1 301 1 285 1 217 1 351 1 168 1 289 1 333 1 307 1 82 1 242 1 309 1 358 2 180 1 
64 1 185 1 115 1 224 1 205 1 47 1 208 1 249 3 251 1 209 1 93 2 8 1 325 1 235 1 75 2 102 1 278 1 52 1 285 1 217 1 351 1 168 1 289 1 333 1 307 1 82 1 242 1 309 1 358 3 180 1 
64 1 185 1 115 1 224 1 205 1 47 1 208 1 249 2 251 1 209 1 93 2 325 1 75 2 102 1 52 1 285 1 168 1 333 1 307 1 289 1 82 1 242 1 309 1 358 2 180 1 
279 1 185 2 53 1 224 1 198 1 47 2 285 2 251 1 217 1 249 1 208 1 149 1 168 2 80 1 94 1 307 1 212 1 309 1 231 1 8 1 358 1 194 1 278 1 
185 1 158 1 115 1 224 1 205 1 47 1 208 1 249 1 251 1 209 1 235 1 75 2 278 1 52 1 301 1 285 1 217 1 351 1 168 1 289 1 333 1 307 1 82 1 309 1 358 1 180 1 
186 1 
224 2 4 2 322 2 7 1 92 1 94 1 138 1 98 1 324 1 194 1 195 5 51 2 53 1 197 2 148 3 13 1 286 1 58 1 199 1 334 2 60 1 155 1 339 2 111 1 156 1 246 1 21 1 67 1 22 1 208 2 251 1 117 2 343 2 344 2 212 1 297 1 73 4 345 5 298 1 123 2 76 1 300 4 128 1 80 2 305 1 218 2 170 1 81 6 307 1 309 2 354 3 219 1 221 1 182 1 268 1 
156 1 246 1 67 1 92 1 296 1 73 2 345 3 298 1 98 1 324 1 195 3 76 1 300 2 148 1 128 1 286 1 58 1 170 1 81 2 354 2 155 1 339 1 268 1 111 1 
195 2 156 1 246 1 76 1 51 1 300 2 67 1 128 1 58 1 286 1 92 1 170 1 354 2 73 3 298 1 345 2 155 1 98 1 324 1 111 1 268 1 
156 1 246 1 67 1 4 1 92 1 296 1 73 3 345 3 298 1 98 1 324 1 195 3 76 1 51 1 300 3 148 1 128 1 286 1 58 1 170 1 81 2 354 3 155 1 339 1 268 1 111 1 
4 4 322 1 7 1 92 1 138 1 98 1 324 1 101 1 195 5 51 3 197 1 148 3 13 1 57 1 58 1 286 1 103 1 331 1 60 1 334 2 336 1 155 1 292 1 339 4 111 1 156 1 246 1 67 1 117 2 69 1 343 2 296 1 344 2 27 1 297 1 73 5 298 1 345 5 123 2 76 1 300 4 128 1 170 1 81 7 354 4 220 1 175 1 268 1 182 1 
156 1 246 1 21 1 67 1 4 2 322 1 7 1 92 1 117 2 343 2 138 1 344 2 297 1 73 4 345 4 298 1 98 1 324 1 123 2 195 4 76 1 51 2 300 4 197 1 148 2 13 1 128 1 58 1 286 1 218 2 170 1 81 4 334 2 60 1 354 3 155 1 339 2 182 1 111 1 268 1 
156 1 246 1 67 1 4 2 322 1 7 1 92 1 117 2 343 2 138 1 344 2 297 1 73 4 345 4 298 1 98 1 324 1 123 2 195 4 76 1 51 2 300 3 197 1 148 2 13 1 57 1 128 1 286 1 58 1 170 1 81 4 334 2 60 1 354 3 155 1 175 1 292 1 339 2 268 1 111 1 182 1 
156 1 246 1 67 1 4 2 322 1 7 1 92 1 117 2 343 2 138 1 344 2 297 1 73 4 345 4 298 1 98 1 324 1 123 2 195 4 76 1 51 2 300 3 197 1 148 2 13 1 57 1 128 1 286 1 58 1 170 1 81 4 334 2 60 1 354 3 155 1 175 1 292 1 339 2 268 1 111 1 182 1 
156 1 246 1 67 1 4 2 322 1 7 1 92 1 343 2 138 1 344 2 295 1 73 4 345 4 298 1 276 2 98 1 324 1 144 1 195 4 76 1 51 2 300 3 197 1 148 2 13 1 57 1 128 1 286 1 58 1 218 2 170 1 81 4 60 1 84 1 354 3 155 1 179 2 339 2 268 1 111 1 182 1 
156 1 246 1 67 1 4 3 322 1 7 1 92 1 117 2 343 2 138 1 344 2 297 1 73 5 345 4 298 1 98 1 324 1 123 2 195 4 76 1 51 3 300 3 197 1 148 2 13 1 57 1 128 1 286 1 58 1 103 1 170 1 81 5 334 2 60 1 354 3 155 1 175 1 292 1 339 3 182 1 268 1 111 1 
156 1 246 1 67 1 4 3 322 1 7 1 92 1 117 2 343 2 138 1 344 2 297 1 73 5 345 4 298 1 98 1 324 1 123 2 195 4 76 1 51 3 300 3 197 1 148 2 13 1 57 1 128 1 286 1 58 1 103 1 170 1 81 5 334 2 60 1 354 3 155 1 175 1 292 1 339 3 182 1 268 1 111 1 
156 1 246 1 21 1 67 1 4 2 322 1 7 1 92 1 343 2 138 1 344 2 73 4 345 4 298 1 276 2 98 1 324 1 144 1 195 4 76 1 51 2 300 3 197 1 148 2 13 1 128 1 58 1 286 1 218 2 170 1 81 4 60 1 354 3 155 1 179 2 339 2 182 1 111 1 268 1 
145 1 269 1 247 1 270 1 238 1 39 2 25 1 189 1 106 1 202 1 19 1 291 1 74 1 313 1 181 1 
113 1 282 1 134 1 270 1 271 1 5 1 39 2 25 1 104 1 106 1 202 1 191 1 192 2 291 1 313 1 
282 1 11 1 270 1 5 1 352 1 24 1 187 1 39 2 253 1 104 1 25 1 106 1 202 1 220 1 176 1 192 2 291 1 313 1 
146 1 224 1 282 1 270 1 208 1 352 1 80 1 187 1 39 2 104 1 25 1 309 1 106 1 202 1 220 1 360 1 176 1 177 1 192 1 291 1 32 1 313 1 
281 1 116 1 224 1 270 1 208 1 5 1 80 1 39 2 253 1 25 1 106 1 309 1 202 1 192 1 291 1 313 1 
34 1 282 1 36 1 37 1 270 1 5 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 336 1 220 1 97 1 192 2 291 1 313 1 
237 1 270 1 238 1 5 1 78 1 39 2 25 1 26 1 106 1 202 1 192 1 291 1 313 1 
34 1 270 1 238 1 39 2 169 1 25 1 104 1 106 1 202 1 357 1 192 1 291 1 313 1 
34 1 36 1 270 1 238 1 5 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 192 2 291 1 313 1 
237 1 281 1 270 1 5 1 78 1 39 2 25 1 26 1 106 1 202 1 192 1 291 1 313 1 
281 1 34 1 270 1 39 2 169 1 25 1 104 1 106 1 202 1 357 1 192 1 291 1 313 1 
34 1 281 1 36 1 270 1 5 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 192 2 291 1 313 1 
34 1 36 1 270 1 5 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 291 1 192 2 313 1 
224 1 309 1 360 1 208 1 80 1 
254 1 224 1 309 1 208 1 80 1 
34 1 282 1 36 1 270 1 5 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 192 2 291 1 313 1 
224 1 309 1 360 1 208 1 32 1 125 1 
34 1 282 1 36 1 37 1 270 1 5 1 272 1 78 1 39 2 169 1 104 1 25 1 26 1 106 1 202 1 336 1 220 1 192 2 291 1 313 1 
113 2 159 2 269 3 46 3 5 9 252 1 25 2 26 3 95 1 140 2 191 1 9 1 233 1 192 19 10 1 165 1 34 3 36 3 78 3 39 4 169 3 104 10 106 2 41 1 202 2 290 1 19 6 244 1 313 2 110 1 
293 1 113 2 159 4 46 2 88 1 269 2 204 1 5 14 25 3 26 3 95 1 140 1 191 2 99 1 233 1 192 26 10 2 280 2 165 1 34 2 36 3 78 3 39 6 169 2 104 12 172 1 106 3 41 1 310 1 202 3 19 4 313 3 244 2 110 2 
46 4 269 3 88 1 5 17 189 1 95 1 140 1 191 3 9 1 99 1 192 36 233 1 10 2 280 1 145 1 104 19 106 3 202 3 19 7 244 3 110 1 113 4 293 1 159 4 204 1 252 1 25 3 26 4 74 1 165 1 34 4 36 4 78 4 39 6 169 4 172 1 308 1 310 1 41 1 313 3 181 1 
46 3 269 4 88 1 5 17 189 1 95 1 140 1 191 3 9 1 99 1 192 33 233 1 10 2 280 2 145 1 104 16 106 4 202 4 19 7 244 3 110 1 113 4 293 1 159 4 204 1 252 1 25 4 26 4 74 1 165 1 34 3 36 4 78 4 39 8 169 3 172 1 308 1 310 1 41 1 313 4 181 1 
293 1 113 4 159 4 88 1 204 1 269 6 46 7 5 24 189 1 25 2 26 7 95 1 140 1 191 4 99 1 9 2 74 1 233 1 192 47 10 1 145 1 280 1 165 1 34 7 196 2 36 7 78 7 39 4 169 7 172 1 104 23 106 2 41 1 310 1 202 2 19 13 244 2 313 2 181 1 110 1 
50 1 201 1 255 1 320 1 129 1 321 1 304 1 15 1 137 1 188 1 
157 1 261 1 
201 1 320 1 321 1 304 1 137 1 361 1 43 1 188 1 260 1 
195 1 223 2 300 1 340 1 48 1 320 1 129 1 265 1 321 1 304 1 15 1 137 1 188 1 16 1 200 1 50 1 201 1 345 1 
195 1 223 2 300 1 340 1 48 1 320 1 129 1 265 1 321 1 304 1 15 1 137 1 188 1 16 1 200 1 50 1 201 1 345 1 
195 1 223 2 300 1 340 1 48 1 320 1 129 1 265 1 321 1 304 1 15 1 137 1 188 1 16 1 200 1 50 1 201 1 345 1 
183 1 1 1 228 1 
183 1 1 1 228 1 
178 1 348 1 
1 1 178 1 348 1 
12 1 171 1 
195 1 157 1 223 1 261 1 12 1 262 1 320 1 321 1 250 1 304 1 137 1 188 1 171 1 16 1 200 1 211 1 201 1 220 2 345 1 86 1 312 1 349 1 
183 1 228 1 
1 1 178 1 348 1 
156 2 224 2 116 1 226 1 270 1 2 2 251 1 208 2 5 1 253 1 25 1 190 1 192 2 194 1 328 1 76 2 53 1 282 1 329 1 79 1 39 2 104 1 307 1 309 2 106 1 202 1 176 1 291 1 313 1 314 1 268 2 
65 1 115 1 185 1 52 1 224 2 205 1 251 1 208 2 351 1 209 1 289 1 307 1 333 1 120 1 309 2 100 1 75 2 125 1 180 1 
65 1 115 1 185 1 52 1 224 1 205 1 207 1 208 1 351 1 251 1 209 1 289 1 333 1 307 1 309 1 75 2 180 1 
279 1 185 1 53 1 224 1 251 1 208 1 80 1 94 1 307 1 309 1 212 1 100 1 194 1 193 1 
65 1 115 1 185 1 52 1 224 1 205 1 208 1 351 1 251 1 209 1 289 1 307 1 333 1 120 1 309 1 100 1 75 2 180 1 
287 1 
300 1 354 1 197 1 247 1 213 1 23 1 322 1 
195 1 300 2 197 1 148 1 13 1 322 1 7 1 218 1 117 1 81 1 138 1 334 1 354 1 297 1 345 1 123 1 182 1 
0 1 224 1 90 2 135 3 322 3 7 2 138 2 229 1 143 1 194 2 234 1 236 2 195 2 53 4 197 4 13 2 148 1 284 3 150 1 251 2 208 1 68 1 117 3 119 1 70 1 26 1 345 2 163 1 257 1 164 1 34 1 300 3 36 1 78 1 80 1 170 1 218 6 169 1 81 2 307 3 309 1 173 1 221 1 182 2 
113 1 88 1 204 1 294 1 135 5 322 5 7 2 117 3 162 1 138 2 26 2 345 1 191 1 99 1 164 2 195 1 34 2 300 5 197 8 148 1 284 5 13 2 36 2 78 2 218 6 169 2 81 1 172 1 354 2 152 1 310 1 219 1 221 1 244 1 182 2 
195 1 145 1 197 2 341 1 13 1 322 1 7 1 331 1 169 1 210 1 189 1 26 1 138 1 27 1 336 1 220 1 345 1 175 1 101 1 164 2 182 1 
300 1 197 1 13 1 23 1 322 1 7 1 138 1 354 1 213 1 182 1 
34 2 300 5 197 5 36 2 284 5 294 1 135 5 322 5 78 2 218 10 117 5 169 2 26 2 163 1 164 2 
195 1 81 1 300 1 354 1 345 1 148 1 
112 2 224 4 22 1 251 1 208 4 322 2 7 1 94 1 138 2 212 1 345 3 122 1 194 1 195 3 53 1 197 2 13 2 148 2 55 1 199 1 330 1 80 2 81 4 307 1 309 4 338 1 219 2 221 2 182 2 
224 1 309 1 336 1 220 1 256 1 360 1 208 1 80 1 331 1 
300 4 197 1 284 2 13 1 135 2 322 2 7 1 117 2 218 4 138 1 354 2 42 1 219 1 221 1 182 1 
302 1 321 1 137 1 
321 1 136 1 15 1 137 1 171 1 
302 1 321 1 137 1 
302 1 321 1 137 1 
214 1 321 1 137 1 
214 1 321 1 137 1 
214 1 321 1 137 1 
321 1 137 1 
320 1 304 1 
280 1 145 1 46 1 269 1 5 1 39 4 104 1 25 2 189 1 106 2 202 2 19 2 192 2 74 1 313 2 181 1 
189 1 145 1 269 1 247 1 19 1 74 1 181 1 
34 1 269 1 46 1 36 1 56 1 5 2 78 1 39 2 169 1 104 2 25 1 26 1 106 1 202 1 19 2 192 4 313 1 
34 1 113 2 269 1 46 1 36 1 5 3 78 1 169 1 104 4 26 1 191 1 9 1 19 2 192 7 244 1 
113 2 269 6 46 5 341 1 271 1 5 13 210 1 189 4 25 2 26 3 191 2 9 1 74 1 192 27 145 4 280 2 34 2 196 1 36 2 215 1 78 2 39 4 169 3 104 14 106 2 42 1 202 2 19 11 313 2 181 1 
104 1 113 1 192 1 
191 1 192 1 5 1 
34 1 46 1 269 2 36 1 56 1 5 3 78 1 39 2 169 1 25 1 104 3 26 1 106 1 202 1 163 1 19 3 192 6 313 1 
113 1 46 1 204 1 269 1 88 1 5 6 25 1 26 2 191 1 99 1 192 12 165 1 34 2 36 2 78 2 39 2 169 2 104 6 172 1 106 1 202 1 310 1 19 2 244 1 313 1 
145 1 269 1 46 1 341 1 5 3 169 1 104 3 189 1 26 1 19 2 192 6 
269 3 46 3 341 1 5 6 210 1 25 1 189 3 26 1 192 12 74 1 280 1 145 3 215 1 39 2 169 1 104 6 106 1 202 1 42 1 19 6 313 1 181 1 
165 1 145 2 269 3 46 2 341 1 5 5 39 2 169 2 25 1 210 1 189 2 104 5 26 2 106 1 202 1 19 5 192 10 313 1 
165 1 46 1 5 2 78 1 39 2 25 1 26 1 106 1 202 1 19 1 192 2 313 1 
165 1 34 1 269 1 46 1 36 1 5 2 78 1 39 2 169 1 104 2 25 1 26 1 106 1 202 1 19 2 192 4 313 1 
280 1 165 1 145 1 269 1 46 1 215 1 5 1 252 1 39 6 104 2 25 3 189 1 106 3 202 3 19 2 192 3 313 3 
113 4 46 5 269 6 341 1 5 13 252 1 189 3 25 5 26 4 191 3 9 1 74 1 192 28 258 1 145 3 280 2 165 1 34 3 215 1 36 3 56 1 78 3 39 10 169 4 104 15 105 1 106 5 202 5 19 11 244 1 313 5 181 1 315 1 
145 1 165 1 113 1 269 1 5 1 39 2 189 1 25 1 104 1 106 1 202 1 191 1 19 1 99 1 74 1 192 2 313 1 244 1 181 1 
113 2 269 1 46 1 5 3 189 1 25 2 26 1 191 1 99 1 9 1 74 1 192 5 145 1 165 1 36 1 56 1 78 1 39 4 104 2 106 2 202 2 19 2 244 1 313 2 181 1 
113 1 46 1 88 1 204 1 269 2 5 6 189 1 25 3 26 2 191 1 99 1 74 1 192 13 145 1 165 1 280 1 34 2 36 2 56 1 78 2 39 6 169 2 104 7 172 1 106 3 202 3 310 1 19 3 244 1 313 3 181 1 
113 1 46 2 204 1 269 2 88 1 5 7 189 1 25 3 26 2 191 1 99 1 74 1 192 11 145 1 280 1 165 1 34 1 36 2 56 1 78 2 39 6 169 1 104 4 172 1 106 3 202 3 310 1 19 4 244 1 313 3 181 1 
145 1 165 1 113 1 269 1 5 1 39 2 189 1 25 1 104 1 106 1 202 1 191 1 19 1 99 1 74 1 192 2 313 1 244 1 181 1 
113 1 46 1 204 1 269 1 88 1 5 6 25 1 26 2 191 1 99 1 192 12 165 1 34 2 36 2 78 2 39 2 169 2 104 6 172 1 106 1 202 1 310 1 19 2 244 1 313 1 
113 1 46 2 88 1 204 1 269 2 5 7 189 1 25 4 26 2 191 1 99 1 74 1 192 12 145 1 165 1 280 2 34 1 36 2 56 1 78 2 39 8 169 1 104 5 172 1 106 4 310 1 202 4 19 4 244 1 313 4 181 1 
113 1 46 3 88 1 204 1 269 3 5 9 252 1 25 4 26 3 191 1 99 1 192 16 165 1 280 2 34 2 36 3 78 3 39 8 169 2 104 7 172 1 106 4 310 1 202 4 19 6 244 1 313 4 
145 2 269 2 46 2 5 1 189 2 104 1 19 4 74 2 192 2 181 1 
113 1 46 1 88 1 204 1 269 2 5 7 252 1 189 1 25 4 26 2 191 1 99 1 74 1 192 12 145 1 165 1 280 2 34 1 36 2 78 2 39 8 169 1 104 5 172 1 106 4 310 1 202 4 19 3 244 1 313 4 181 1 
216 1 107 1 111 1 
335 1 141 1 61 1 89 1 216 1 107 1 259 1 111 1 
94 1 307 1 53 1 212 1 224 1 309 1 247 1 251 1 208 1 194 1 80 1 
53 1 224 1 208 1 251 1 80 1 187 1 307 1 309 1 220 1 87 1 194 1 236 1 133 1 
112 1 53 1 224 1 208 1 251 1 187 1 307 1 309 1 220 1 87 1 194 1 236 1 133 1 
112 1 53 1 224 1 208 1 251 1 167 1 187 1 307 1 309 1 220 1 194 1 236 1 133 1 
0 1 112 1 224 1 90 1 3 1 251 1 208 1 27 1 121 1 345 2 101 1 234 1 194 1 236 1 195 2 53 3 300 1 331 1 170 1 81 1 307 1 309 1 354 1 336 1 220 1 44 1 
0 1 112 1 224 1 90 1 251 1 208 1 229 1 27 1 121 1 345 2 101 1 234 1 194 1 236 1 195 2 53 3 300 1 331 1 170 1 81 1 307 1 309 1 354 1 336 1 220 1 
307 1 114 1 224 1 309 1 251 1 208 1 
299 1 114 1 224 7 53 3 147 1 2 1 264 1 208 6 251 2 79 1 80 2 209 1 119 1 307 3 309 7 85 1 131 1 18 1 125 1 194 2 236 1 
220 1 187 1 
0 1 224 1 341 1 90 1 23 1 208 1 251 1 322 3 7 2 68 1 189 1 210 1 211 1 26 1 138 2 229 1 27 1 345 3 213 1 143 1 101 1 194 1 234 1 236 1 164 2 195 3 145 1 300 2 53 2 197 4 148 1 13 2 55 1 150 1 80 1 331 1 169 2 170 1 81 2 307 1 354 2 309 1 336 1 220 1 182 2 
114 1 224 1 53 1 263 1 208 1 251 1 119 1 307 2 70 1 309 1 234 1 194 1 236 1 
224 4 53 1 208 4 251 1 80 1 94 1 307 1 309 4 212 1 337 1 108 1 125 1 194 1 
112 1 318 1 224 2 53 1 208 2 251 1 161 1 307 2 309 2 28 1 85 1 18 1 194 1 236 1 
307 1 115 1 52 1 224 1 309 1 205 1 251 1 208 1 75 1 80 1 
307 1 53 1 224 2 309 2 190 1 251 1 208 2 194 1 79 1 125 1 209 1 
112 1 224 5 53 3 147 1 264 1 208 4 251 2 79 1 80 1 94 1 307 2 212 1 309 5 337 1 125 1 194 2 
112 1 224 5 53 3 283 1 264 1 208 4 251 2 79 1 80 1 94 1 307 2 212 1 309 5 337 1 125 1 194 2 
53 1 224 1 208 1 251 1 167 1 80 1 187 1 307 1 309 1 220 1 194 1 236 1 133 1 
299 1 112 1 224 1 53 1 208 1 251 1 119 1 307 2 309 1 85 1 18 1 194 1 236 1 
232 1 6 1 241 1 151 1 
195 1 211 1 59 1 232 1 345 1 174 1 227 1 6 1 241 1 151 1 
156 1 76 1 226 1 241 1 151 1 232 1 328 1 314 1 268 1 
59 1 227 1 241 1 
64 1 242 1 247 1 102 1 
64 1 242 1 358 1 249 1 217 1 102 1 278 1 
358 1 285 1 168 1 
64 1 158 1 248 1 217 1 249 3 353 1 139 1 242 1 356 2 358 3 102 1 278 1 
64 1 93 1 242 1 358 2 249 2 217 1 203 1 102 1 278 1 
158 1 52 1 160 1 206 1 217 1 249 1 289 1 358 1 75 1 278 1 102 1 
158 1 242 1 358 1 249 1 217 1 102 1 278 1 
64 1 158 1 242 2 358 1 249 1 217 1 278 1 
158 1 127 1 217 2 249 2 242 1 62 1 311 1 358 2 102 1 278 2 
64 1 158 1 160 1 217 1 249 3 342 1 274 1 93 2 83 1 242 1 358 3 278 1 102 2 
64 1 115 1 158 1 52 1 217 1 249 2 93 1 289 1 242 1 358 2 359 1 75 2 180 1 102 1 278 1 
64 1 158 1 160 1 217 2 249 4 342 1 93 2 242 1 355 1 358 4 203 1 278 2 102 2 
64 1 158 1 242 1 358 1 249 1 217 1 102 1 278 1 
64 2 160 1 248 1 91 1 249 4 217 1 342 1 353 1 93 2 242 2 356 1 358 4 278 1 102 3 
64 1 158 1 54 1 217 1 249 2 40 1 93 1 242 1 358 2 31 1 102 1 278 1 
64 1 158 1 317 1 248 2 217 1 249 3 353 1 242 1 356 2 358 3 102 1 278 1 
77 2 303 1 33 1 102 2 
71 1 158 1 358 1 249 1 217 1 278 1 
64 1 93 1 274 1 158 1 242 1 358 2 249 2 217 1 102 1 278 1 
184 1 
64 1 158 1 242 1 358 1 249 1 217 1 102 1 278 1 
64 1 158 1 217 1 249 3 93 1 274 1 242 1 356 1 358 3 278 1 102 1 
160 1 91 1 342 1 102 1 
242 1 102 1 

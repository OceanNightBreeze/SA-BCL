#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (17,214,307,313,331) (45,253) (45,253) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (17,214,307,313,331) (45,253) (45,253) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (17,214,307,313,331) (45,253) (45,253) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (17,214,307,313,331) (45,253) (45,253) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (17,214,307,313,331) (220,245) (220,245) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 278 282 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 278 282 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 339 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (129,203,240,357) (129,203,240,357) (93,228,323) (93,228,323) (93,228,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (129,203,240,357) (129,203,240,357) (93,228,323) (93,228,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (129,203,240,357) (129,203,240,357) (93,228,323) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (129,203,240,357) (129,203,240,357) (93,228,323) (93,228,323) (93,228,323) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (129,203,240,357) (129,203,240,357) 260 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 1 347 1 253 1 331 1 47 1 357 1 146 1 122 1 272 1 203 1 275 1 129 1 277 1 45 1 141 1 
318 1 347 1 253 1 331 1 47 1 357 1 146 1 272 1 122 1 203 1 275 1 129 1 277 1 45 1 141 1 
318 1 347 1 253 1 331 1 47 1 357 1 146 1 272 1 122 1 203 1 275 1 129 1 277 1 45 1 141 1 
318 1 347 1 253 1 331 1 47 1 357 1 146 1 272 1 122 1 203 1 275 1 129 1 277 1 45 1 141 1 
278 1 318 1 347 1 47 2 221 1 240 1 357 2 159 1 234 1 122 1 203 1 15 1 129 1 277 1 
347 1 220 1 318 1 331 1 47 1 357 1 304 1 245 1 272 1 203 1 275 1 129 1 277 1 
280 1 347 1 47 3 240 1 357 3 234 1 186 1 272 1 295 1 203 2 15 2 129 2 326 1 
278 1 301 1 318 1 347 1 221 1 47 7 240 5 357 7 159 1 282 1 234 3 270 1 186 1 122 1 272 1 15 3 203 2 110 1 129 2 277 1 326 2 
278 1 301 1 318 1 347 1 221 1 47 7 240 5 357 7 159 1 282 1 234 3 270 1 186 1 122 1 272 1 15 3 203 2 110 1 129 2 277 1 326 2 
136 1 112 1 63 1 
154 1 112 1 61 2 
96 2 7 2 33 2 127 2 27 2 145 1 336 2 286 1 
46 2 0 1 22 1 291 1 222 1 269 1 24 1 27 2 145 1 5 1 121 1 96 3 7 3 246 1 149 1 33 2 248 1 127 2 76 1 9 1 230 1 303 1 252 1 329 2 254 1 156 1 351 2 59 1 235 1 286 1 369 1 370 1 289 1 84 2 111 1 16 2 336 2 
96 1 7 1 3 1 143 1 33 1 127 1 27 1 145 1 336 1 10 1 
3 2 143 1 145 1 27 1 96 2 341 1 7 2 177 1 33 1 54 1 127 2 10 1 179 1 208 1 136 1 58 1 107 1 311 1 112 1 336 1 87 1 
3 2 143 1 27 2 145 1 96 2 7 2 33 2 54 1 127 2 179 1 10 1 208 1 136 1 58 2 107 1 311 1 336 2 112 1 87 2 
153 1 348 1 58 1 198 1 87 1 
233 1 348 1 116 1 136 1 58 2 112 1 198 1 87 2 
58 1 198 1 87 1 
348 1 3 1 143 1 145 1 27 1 58 1 311 1 96 1 7 1 33 1 127 1 336 1 10 1 87 1 
112 1 
343 1 348 1 116 1 136 1 58 2 112 1 198 1 87 2 
104 1 266 1 348 2 337 1 116 1 365 2 56 2 135 1 136 1 58 5 360 1 198 2 161 1 164 1 35 1 112 1 139 1 87 5 131 2 
63 1 286 1 
157 1 27 1 340 1 286 2 96 2 7 2 33 1 127 2 336 1 
199 1 52 1 294 1 
46 1 22 1 252 1 254 1 222 1 269 1 156 1 59 1 353 1 286 1 121 1 96 1 7 1 369 1 84 1 16 1 
46 1 22 1 252 1 222 1 254 1 269 1 156 1 27 1 59 1 258 1 285 1 199 1 121 1 96 2 7 2 369 1 33 1 84 1 127 1 16 1 
27 4 118 1 258 1 322 1 340 1 285 2 286 1 334 1 96 5 177 1 7 5 33 4 127 5 336 1 
96 2 7 2 3 1 33 2 92 1 127 2 27 2 10 1 
96 3 7 3 33 3 127 3 27 3 336 1 286 1 285 1 
96 1 7 1 3 1 33 1 127 1 27 1 10 1 
96 1 7 1 3 1 33 1 157 1 127 1 27 1 336 1 340 1 
46 1 0 1 3 2 291 1 145 1 51 1 340 1 96 4 7 4 149 1 54 1 248 1 9 1 102 1 208 1 252 1 303 1 254 1 156 1 351 2 58 1 59 1 107 1 258 1 16 1 22 1 222 1 269 1 27 3 121 1 178 1 33 3 127 3 76 1 179 1 230 1 329 1 235 1 285 1 286 1 369 1 370 1 84 1 336 2 87 1 
96 2 177 1 7 2 33 1 127 2 27 1 322 1 286 1 285 1 
208 1 3 1 27 3 58 1 107 1 258 1 340 1 285 2 96 3 7 3 178 1 33 3 188 1 54 1 127 3 336 1 112 1 179 1 87 1 
27 2 340 1 285 1 199 1 96 2 7 2 52 1 33 2 127 2 336 1 
46 1 22 1 252 1 254 1 222 1 269 1 156 1 59 1 286 1 121 1 96 1 7 1 369 1 84 1 16 1 
46 1 252 1 2 1 254 1 222 1 269 1 156 1 57 1 59 1 286 1 121 1 96 1 7 1 84 1 16 1 
0 1 303 1 65 1 329 2 182 1 291 1 194 1 183 1 351 2 294 1 199 1 368 1 52 1 149 1 248 1 76 2 230 1 206 1 238 1 
96 1 7 1 3 1 33 1 127 1 92 1 27 1 107 1 
20 1 172 1 
20 1 172 1 
6 1 308 1 
6 1 308 1 
6 1 308 1 
20 1 193 1 172 1 
20 1 172 1 223 1 
20 2 6 1 290 1 172 2 283 1 308 1 
20 1 193 1 172 1 
20 1 193 1 172 1 
20 1 132 1 172 1 
20 1 132 1 172 1 
20 1 132 1 172 1 
20 1 172 1 223 1 82 1 28 1 27 2 58 1 361 1 68 1 284 1 215 1 354 1 286 1 96 2 7 2 372 1 33 2 200 1 127 2 263 1 190 1 38 1 377 1 87 1 
79 1 20 2 290 1 172 2 91 1 195 1 82 2 58 2 68 2 284 2 184 2 120 1 72 1 200 2 112 1 263 3 232 1 87 2 377 1 
122 1 318 1 277 1 
318 1 304 1 277 1 
122 2 124 1 304 1 158 1 218 1 277 3 
122 1 217 1 304 1 158 1 218 1 277 2 
122 1 304 1 158 2 218 1 277 2 
65 1 48 1 338 1 116 1 337 3 174 2 225 1 360 1 198 1 201 1 101 2 251 1 38 1 131 1 130 1 78 1 328 2 348 4 154 1 12 1 56 1 365 1 136 1 58 5 309 1 215 1 61 3 368 1 112 2 190 1 139 2 87 5 
266 1 65 3 48 2 116 1 337 8 174 6 225 3 4 1 360 1 198 6 201 2 251 1 103 1 131 2 78 3 328 6 153 5 348 7 154 3 12 3 365 2 56 2 155 1 83 1 136 1 58 9 41 1 215 4 61 9 368 3 259 1 112 5 139 6 264 5 87 9 
65 1 266 1 48 1 337 3 174 2 225 1 201 1 101 1 130 1 131 1 78 1 328 2 348 2 154 2 12 1 56 1 365 1 136 1 58 3 309 1 215 1 61 4 368 1 112 3 139 2 87 3 
65 2 266 1 48 1 337 5 174 4 225 2 4 1 201 1 101 2 131 1 130 1 78 2 328 4 348 3 154 3 12 2 56 1 365 1 136 1 83 1 58 4 309 1 215 2 61 7 368 2 259 1 112 4 139 4 87 4 
59 1 63 1 151 1 
59 1 189 1 
363 1 
121 1 269 1 59 1 
59 1 375 1 
269 1 59 1 
121 1 73 1 269 1 59 3 151 2 271 1 
78 1 265 1 114 1 329 7 194 3 255 1 332 2 24 4 183 2 67 1 70 1 368 1 76 3 36 1 152 1 376 1 44 1 
78 1 265 1 114 1 329 7 194 3 255 1 332 2 24 4 183 2 67 1 70 1 368 1 76 3 36 1 152 1 376 1 44 1 
78 1 265 1 181 1 114 1 329 7 194 3 255 1 332 2 24 4 183 2 67 1 70 1 368 1 76 3 36 1 152 1 376 1 44 1 
78 3 65 3 114 1 329 20 194 4 12 3 40 1 332 1 24 10 350 1 183 1 225 3 339 1 257 1 147 3 31 1 368 3 236 1 34 4 137 1 36 2 76 10 152 3 
265 1 0 1 114 1 291 1 194 5 24 6 67 1 149 1 99 1 36 1 76 5 299 1 152 2 78 2 303 1 329 11 81 1 255 1 332 1 183 3 351 2 368 2 236 1 376 1 44 1 
46 1 318 1 47 1 240 1 357 2 93 1 228 1 71 1 122 1 272 1 296 1 124 1 273 1 323 1 203 1 129 1 277 2 180 1 364 1 347 1 252 1 254 1 304 1 84 1 85 1 16 1 191 1 
46 1 318 1 47 2 240 2 357 3 226 1 93 1 71 1 122 1 272 1 124 1 296 1 273 1 323 1 203 1 129 1 300 1 277 2 364 1 252 1 254 1 304 1 84 1 373 1 85 1 16 1 191 1 
46 1 364 1 318 1 252 1 47 1 240 2 304 1 254 1 357 2 226 1 71 1 122 1 272 1 124 1 296 1 273 1 323 1 373 1 84 1 16 1 277 2 191 1 
171 1 364 2 46 1 252 1 47 1 254 1 117 1 357 1 269 1 156 1 59 1 162 1 362 1 272 2 273 2 165 1 203 1 84 1 16 1 325 1 129 1 300 1 191 2 
46 1 318 1 47 1 240 1 357 2 226 1 93 1 228 1 71 1 122 1 272 1 296 1 124 1 273 1 323 1 203 1 129 1 277 2 364 1 347 1 252 1 254 1 304 1 84 1 85 1 16 1 191 1 
330 1 
46 2 239 1 48 1 337 2 3 1 50 1 243 1 198 6 94 1 341 1 96 1 148 1 7 1 54 1 345 2 208 1 252 1 211 2 212 1 254 1 154 2 56 1 156 2 58 5 59 1 107 1 61 2 162 1 14 1 62 4 355 2 16 2 112 3 170 1 316 1 116 3 117 1 173 1 23 1 269 1 360 1 123 1 177 1 127 1 179 1 276 2 131 1 365 1 366 2 136 2 187 2 84 2 335 2 139 2 87 5 
239 1 116 1 3 1 173 1 50 1 243 1 198 2 96 1 341 1 343 1 7 1 177 1 54 1 127 1 179 1 208 1 211 1 136 2 58 3 107 1 62 2 112 2 170 1 87 3 
208 1 239 1 3 1 173 1 50 1 243 1 136 2 58 2 107 1 341 1 96 1 177 1 7 1 62 3 355 1 54 1 127 1 112 2 179 1 87 2 170 1 
239 1 116 1 3 1 173 1 50 1 243 1 198 2 96 1 341 1 343 1 7 1 177 1 54 1 127 1 345 1 179 1 208 1 211 1 136 2 58 3 107 1 62 3 355 1 112 2 170 1 87 3 
239 1 143 1 3 2 337 1 88 1 50 1 243 1 145 1 198 7 96 2 341 1 7 2 343 1 97 1 54 1 345 4 10 1 208 1 211 4 305 1 154 2 56 1 58 5 107 1 311 1 108 1 62 5 355 3 112 4 170 1 316 1 116 3 173 1 23 1 27 1 359 1 360 1 177 1 33 1 127 2 179 1 276 2 131 1 365 1 366 2 136 4 187 2 335 2 336 1 139 1 87 5 
239 1 3 1 337 1 50 1 243 1 198 4 96 1 341 1 7 1 54 1 345 2 208 1 211 2 212 1 154 2 56 1 58 4 107 1 61 2 62 4 355 2 112 4 170 1 316 1 116 2 173 1 23 1 360 1 177 1 127 1 179 1 276 2 131 1 365 1 366 2 136 3 187 2 335 2 139 1 87 4 
316 1 239 1 116 2 88 1 337 1 3 1 173 1 23 1 50 1 243 1 359 1 360 1 198 4 96 1 341 1 7 1 177 1 97 1 54 1 345 2 127 1 179 1 276 2 131 1 208 1 211 2 154 2 56 1 365 1 366 2 136 3 58 4 107 1 62 4 355 2 187 2 335 2 112 3 139 1 170 1 87 4 
316 1 239 1 116 2 88 1 337 1 3 1 173 1 23 1 50 1 243 1 359 1 360 1 198 4 96 1 341 1 7 1 177 1 97 1 54 1 345 2 127 1 179 1 276 2 131 1 208 1 211 2 154 2 56 1 365 1 366 2 136 3 58 4 107 1 62 4 355 2 187 2 335 2 112 3 139 1 170 1 87 4 
239 1 116 2 88 1 337 1 3 1 173 1 23 1 50 1 243 1 293 1 360 1 198 4 96 1 341 1 7 1 177 1 344 2 54 1 345 2 127 1 179 1 77 1 276 2 346 2 131 1 208 1 207 1 211 2 56 1 365 1 366 2 136 3 58 4 107 1 61 2 62 4 355 2 112 3 139 1 170 1 87 4 
316 1 239 1 116 2 88 1 337 1 3 1 173 1 23 1 50 1 243 1 359 1 360 1 198 5 96 1 341 1 7 1 177 1 97 1 54 1 127 1 345 3 179 1 276 2 131 1 208 1 211 3 154 2 305 1 56 1 365 1 366 2 136 3 58 4 107 1 62 5 187 2 355 3 335 2 112 3 139 1 170 1 87 4 
316 1 239 1 116 2 88 1 337 1 3 1 173 1 23 1 50 1 243 1 359 1 360 1 198 5 96 1 341 1 7 1 177 1 97 1 54 1 127 1 345 3 179 1 276 2 131 1 208 1 211 3 154 2 305 1 56 1 365 1 366 2 136 3 58 4 107 1 62 5 187 2 355 3 335 2 112 3 139 1 170 1 87 4 
239 1 3 1 337 1 50 1 243 1 293 1 198 4 96 1 341 1 7 1 344 2 54 1 345 2 346 2 208 1 211 2 212 1 56 1 58 4 107 1 61 2 62 4 355 2 112 3 170 1 116 2 173 1 23 1 360 1 177 1 127 1 179 1 276 2 131 1 365 1 366 2 136 3 139 1 87 4 
0 1 265 1 291 1 194 2 24 3 67 1 294 1 199 1 52 1 149 1 248 1 76 3 230 1 78 1 303 1 329 6 182 1 255 1 332 1 183 2 351 2 286 2 368 1 63 1 376 1 44 1 
0 2 291 2 194 2 24 10 225 3 5 1 294 12 147 3 199 12 149 2 52 3 34 4 248 1 324 1 76 5 230 2 152 2 327 1 78 3 279 1 303 2 80 1 329 15 12 3 350 2 351 4 306 1 286 1 370 1 137 1 
46 1 22 1 21 1 0 1 291 1 222 1 269 1 24 1 27 1 227 1 5 1 121 1 96 2 7 2 52 1 33 1 149 1 248 1 127 1 76 1 230 1 252 1 303 1 80 1 329 2 254 1 156 1 351 2 59 1 353 1 258 1 286 1 285 1 369 1 370 1 84 1 166 1 16 1 
46 1 0 2 291 2 194 3 294 2 199 2 96 2 7 2 149 2 52 2 248 2 9 1 152 2 303 2 252 1 254 1 12 1 156 1 351 4 59 1 160 1 258 1 310 1 16 1 22 1 222 1 224 1 269 1 26 1 175 1 24 3 225 1 27 1 121 1 33 1 127 1 76 2 230 2 78 1 80 1 329 5 183 1 285 1 369 1 370 1 84 1 
46 8 0 2 66 1 1 1 291 2 117 1 269 2 24 1 226 1 27 1 5 1 96 1 7 1 246 2 53 1 33 1 149 2 127 1 248 2 204 1 76 1 205 1 230 2 250 1 180 1 302 1 252 2 303 2 329 2 182 1 254 2 156 2 351 4 59 3 285 1 162 1 370 1 84 8 16 7 
0 1 65 1 291 1 194 1 24 1 225 1 27 1 294 1 340 1 199 1 96 1 7 1 52 1 33 1 149 1 248 1 127 1 76 2 230 1 78 1 303 1 80 1 329 3 12 1 183 1 351 2 256 1 368 1 336 1 
78 1 0 1 303 1 329 2 182 1 291 1 194 1 12 1 24 2 351 2 294 1 199 1 52 1 149 1 374 1 248 1 230 1 152 1 
0 1 303 1 65 1 329 2 182 1 291 1 194 1 183 1 351 2 294 1 199 1 368 1 52 1 149 1 248 1 76 2 230 1 238 1 
0 1 65 1 291 1 194 2 24 2 225 1 294 2 199 2 149 1 52 2 248 1 76 2 230 1 152 1 78 1 303 1 329 4 182 1 12 1 183 1 351 2 368 1 
78 1 302 1 0 1 303 1 329 2 291 1 194 1 12 1 24 2 351 2 294 1 199 1 52 1 149 1 374 1 248 1 230 1 152 1 
302 1 0 1 303 1 65 1 329 2 291 1 194 1 183 1 351 2 294 1 199 1 368 1 52 1 149 1 248 1 76 2 230 1 238 1 
78 1 302 1 0 1 303 1 329 2 291 1 194 1 12 1 24 2 225 1 351 2 294 1 199 1 52 1 149 1 248 1 230 1 152 1 
78 1 0 1 303 1 329 2 291 1 194 1 12 1 24 2 225 1 351 2 294 1 199 1 52 1 149 1 248 1 230 1 152 1 
46 1 0 1 22 1 303 1 252 1 329 2 291 1 254 1 222 1 269 1 24 1 156 1 351 2 59 1 5 1 286 1 121 1 96 1 7 1 369 1 370 1 149 1 84 1 248 1 76 1 9 1 16 1 230 1 
46 1 0 1 303 1 252 1 329 2 291 1 2 1 254 1 222 1 269 1 24 1 156 1 351 2 57 1 59 1 5 1 286 1 121 1 96 1 7 1 370 1 149 1 75 1 84 1 248 1 76 1 16 1 230 1 
78 1 0 1 303 1 329 2 80 1 291 1 194 1 12 1 24 2 225 1 351 2 294 1 199 1 52 1 149 1 248 1 230 1 152 1 
46 1 22 1 0 1 291 1 194 1 222 1 269 1 24 2 26 1 225 1 294 1 199 1 121 1 96 1 7 1 52 1 149 1 248 1 9 1 230 1 152 1 180 1 78 1 252 1 303 1 329 2 254 1 12 1 351 2 59 1 369 1 84 1 16 1 
317 1 0 1 291 1 194 1 24 2 225 1 27 1 294 1 340 1 199 1 96 1 7 1 33 1 149 1 52 1 248 1 127 1 230 1 152 1 78 1 303 1 80 1 329 2 12 1 351 2 336 1 
0 2 65 3 291 2 267 1 194 6 24 9 225 3 147 1 98 2 149 2 34 2 99 1 76 10 152 3 37 1 231 2 78 3 281 1 303 2 329 19 12 3 350 1 183 3 213 1 351 4 352 1 368 3 314 1 137 1 113 1 
0 1 65 1 291 1 194 1 24 10 225 2 320 1 147 2 74 1 98 1 149 1 34 2 76 8 99 1 152 1 37 1 231 2 78 2 303 1 329 18 12 2 213 1 351 2 352 1 367 1 312 1 368 1 236 1 314 2 137 2 43 1 169 1 113 2 
0 2 65 4 291 2 267 1 194 4 24 15 225 4 320 1 147 3 74 1 98 1 149 2 34 4 99 1 76 17 152 3 37 1 231 3 78 4 303 2 329 32 12 4 350 1 183 1 213 1 351 4 352 1 367 1 312 1 368 4 261 1 314 1 137 3 43 1 169 1 113 2 
0 2 65 3 291 2 267 1 194 5 24 16 225 4 320 1 147 3 74 1 98 1 149 2 34 4 99 1 76 15 152 3 37 1 231 3 78 4 303 2 329 31 12 4 350 1 183 2 213 1 351 4 352 1 367 1 312 1 368 3 236 1 261 1 314 1 137 3 43 1 169 1 113 2 
265 1 0 1 65 7 291 1 194 14 24 26 225 7 67 1 320 1 147 4 74 1 98 1 149 1 34 4 324 2 99 1 76 24 152 7 37 1 231 3 78 8 303 1 329 50 12 7 332 1 255 1 350 2 183 7 213 1 351 2 352 1 367 1 312 1 368 8 236 1 314 1 137 2 43 1 376 1 169 1 44 1 113 1 
20 1 290 1 172 1 200 1 195 1 82 1 197 1 284 1 68 1 232 1 
223 1 28 1 
20 1 172 1 200 1 315 1 82 1 128 1 284 1 68 1 142 1 
193 1 371 1 
132 1 283 1 119 1 
79 1 20 1 290 1 172 1 91 1 195 1 82 1 58 1 68 1 284 1 184 1 72 1 200 1 112 1 263 2 232 1 377 1 87 1 
79 1 20 1 290 1 172 1 91 1 195 1 82 1 58 1 68 1 284 1 184 1 72 1 200 1 112 1 263 2 232 1 377 1 87 1 
79 1 20 1 290 1 172 1 91 1 195 1 82 1 58 1 68 1 284 1 184 1 72 1 200 1 112 1 263 2 232 1 377 1 87 1 
193 1 371 1 283 1 
193 1 371 1 283 1 
132 1 119 1 
132 1 283 1 119 1 
372 1 361 1 
20 1 172 1 223 1 28 1 27 2 68 1 361 1 72 1 96 2 7 2 33 2 200 1 127 2 38 1 348 1 82 1 58 1 184 1 284 1 354 1 215 1 286 1 372 1 168 1 263 1 190 1 87 1 
46 2 0 1 291 1 269 1 24 1 5 1 96 2 342 1 7 2 246 2 53 1 149 1 126 1 248 1 127 2 204 1 76 1 230 1 252 1 210 1 303 1 80 1 39 1 329 2 254 1 351 2 59 1 185 1 370 1 84 2 16 2 
46 2 364 1 318 1 252 1 134 1 304 1 254 1 268 1 226 1 30 1 71 1 122 1 124 1 296 1 84 2 85 1 16 2 277 2 180 1 
46 1 364 1 318 1 252 1 304 1 254 1 226 1 30 1 71 1 122 1 124 1 298 1 296 1 84 1 85 1 16 1 277 2 
46 1 364 1 252 1 254 1 117 1 269 1 268 1 242 1 156 1 59 1 362 1 162 1 84 1 16 1 
46 1 364 1 318 1 252 1 134 1 304 1 254 1 268 1 226 1 30 1 71 1 122 1 124 1 296 1 84 1 85 1 16 1 277 2 
29 1 
104 1 337 1 135 1 136 1 112 1 63 1 139 1 
316 1 337 1 116 1 360 1 198 1 131 1 154 1 56 1 365 1 136 1 58 1 61 1 187 1 335 1 112 2 139 1 87 1 
46 1 48 1 337 4 198 2 247 1 202 1 151 1 252 2 11 1 254 1 154 3 12 1 56 2 156 1 59 4 58 2 61 6 163 1 356 1 16 1 112 3 19 1 65 1 116 1 269 1 174 3 175 1 225 1 360 2 69 1 271 1 121 1 179 1 131 2 78 1 328 3 365 2 333 1 368 1 84 1 189 2 139 3 87 2 
65 2 337 7 174 5 225 2 360 1 147 1 74 1 34 1 131 1 78 2 328 5 154 3 12 2 56 1 365 1 136 1 61 6 367 1 312 1 368 2 137 1 43 1 112 4 169 1 139 4 
265 1 3 1 337 2 143 1 67 1 145 1 27 1 360 1 96 1 7 1 97 1 33 1 150 1 127 1 10 1 299 1 131 1 78 2 255 1 56 1 365 1 58 1 311 1 368 1 356 2 336 1 139 2 87 1 
104 1 337 1 365 1 56 1 135 1 136 1 360 1 112 1 139 1 131 1 
78 2 328 5 65 2 337 5 12 2 174 5 154 5 175 1 225 2 61 10 368 2 150 1 356 2 112 5 139 5 
116 1 136 1 58 1 112 1 198 1 87 1 
46 4 266 1 48 2 337 2 116 2 49 1 117 1 269 1 196 2 360 1 198 4 94 2 95 1 123 1 131 2 252 1 254 1 56 2 365 2 156 2 59 1 58 3 162 1 14 1 287 1 84 4 16 4 139 2 87 3 
46 1 0 1 22 1 291 1 222 1 269 1 27 2 145 1 121 1 96 3 7 3 149 1 33 2 127 2 248 1 76 1 9 1 230 1 303 1 252 1 329 1 254 1 156 1 351 2 59 1 235 1 286 1 369 1 370 1 84 1 16 1 336 2 
328 2 48 1 337 1 174 2 154 2 332 1 365 1 56 1 136 2 360 1 61 4 94 1 112 4 139 2 131 1 
358 1 200 1 284 1 
372 1 200 1 244 1 284 1 232 1 
358 1 200 1 284 1 
358 1 200 1 284 1 
200 1 106 1 284 1 
200 1 106 1 284 1 
200 1 106 1 284 1 
200 1 284 1 
20 1 172 1 
0 1 265 1 291 1 194 4 24 5 67 1 149 1 76 5 299 1 152 2 78 2 303 1 329 10 255 1 183 2 351 2 368 2 236 1 376 1 44 1 
78 1 265 1 329 6 194 2 332 1 255 1 24 3 183 2 67 1 368 1 76 3 63 1 376 1 44 1 
78 1 0 1 65 1 303 1 329 4 291 1 194 2 349 1 12 1 24 2 183 1 225 1 351 2 368 1 149 1 76 2 152 1 
78 1 65 1 329 7 194 2 12 1 24 3 350 1 183 1 225 1 147 1 368 1 34 2 137 1 76 4 152 1 
265 1 65 2 194 5 24 10 225 2 67 1 147 2 34 2 76 10 324 1 299 1 152 2 78 4 279 1 329 20 12 2 255 1 350 1 183 3 368 4 236 1 376 1 44 1 
329 1 34 1 76 1 
329 1 24 1 147 1 
78 1 0 1 303 1 65 1 329 6 291 1 349 1 194 3 12 1 175 1 24 3 225 1 183 2 351 2 368 1 149 1 76 3 152 1 
0 1 65 2 291 1 194 2 24 6 225 2 147 1 74 1 149 1 34 1 76 6 99 1 152 1 78 2 303 1 329 12 12 2 183 1 351 2 367 1 368 2 312 1 137 1 43 1 169 1 
78 1 265 1 329 6 194 2 24 3 255 1 183 1 67 1 368 1 76 3 152 1 
329 1 133 1 236 1 76 1 
78 2 0 1 265 1 303 1 329 10 291 1 194 5 255 2 24 5 183 3 351 2 67 2 368 2 149 1 99 1 76 5 299 1 152 2 
78 1 0 1 303 1 329 2 291 1 194 1 12 1 24 2 351 2 149 1 99 1 152 1 
78 1 0 1 65 1 303 1 329 4 291 1 194 2 12 1 24 2 183 1 225 1 351 2 368 1 149 1 76 2 99 1 152 1 
0 2 303 2 133 1 329 3 291 2 267 1 194 2 255 1 24 1 183 1 351 4 67 1 236 1 149 2 76 2 99 1 152 1 
265 1 0 3 65 2 291 3 267 1 194 6 24 12 225 2 67 1 147 3 31 1 149 3 34 3 76 12 99 1 299 1 152 3 78 4 303 3 329 24 349 1 40 1 12 2 255 1 183 3 351 6 257 1 368 4 236 1 137 1 376 1 44 1 
0 1 265 1 291 1 194 2 24 4 67 1 147 1 149 1 34 1 76 4 99 1 78 1 303 1 329 8 332 1 255 1 183 2 351 2 368 1 137 1 43 1 376 1 44 1 
265 1 0 2 291 2 194 3 24 6 225 1 67 1 147 1 149 2 34 2 76 5 99 1 152 1 78 2 303 2 329 11 349 1 12 1 332 1 255 1 350 1 183 2 351 4 368 1 137 1 43 1 376 1 44 1 
0 2 65 2 291 2 194 1 24 6 225 2 147 1 74 1 149 2 34 1 76 7 99 1 152 1 78 2 303 2 329 13 349 1 12 2 351 4 367 1 368 2 312 1 137 1 43 1 169 1 
0 2 65 1 291 2 194 2 24 7 225 2 147 1 74 1 149 2 34 1 76 4 99 1 152 1 78 2 303 2 329 11 349 1 12 2 183 1 351 4 367 1 368 1 312 1 236 1 137 1 43 1 169 1 
0 1 265 1 291 1 194 2 24 4 67 1 147 1 149 1 34 1 76 4 99 1 78 1 303 1 329 8 332 1 255 1 183 2 351 2 368 1 137 1 43 1 376 1 44 1 
0 1 65 2 291 1 194 2 24 6 225 2 147 1 74 1 149 1 34 1 76 6 99 1 152 1 78 2 303 1 329 12 12 2 183 1 351 2 367 1 368 2 312 1 137 1 43 1 169 1 
0 2 65 1 291 2 194 1 24 7 225 2 147 1 74 1 149 2 34 1 76 5 99 1 152 1 78 2 303 2 329 12 349 1 12 2 351 4 367 1 368 1 312 1 236 1 137 1 43 1 169 1 
0 2 65 1 291 2 267 1 194 4 24 7 225 2 147 1 74 1 149 2 34 1 76 5 99 1 152 2 78 2 303 2 329 12 12 2 183 2 351 4 367 1 312 1 368 1 236 1 137 1 43 1 169 1 
78 1 265 1 329 7 194 6 255 3 24 3 183 3 67 3 368 1 76 4 376 1 152 3 44 2 
0 2 65 1 291 2 194 1 267 1 24 7 225 2 147 1 74 1 149 2 34 1 76 5 99 1 152 1 78 2 303 2 329 12 12 2 351 4 367 1 368 1 312 1 236 1 137 1 43 1 169 1 
96 1 7 1 177 1 127 1 64 1 322 1 286 1 
192 1 115 1 322 1 286 1 176 1 96 1 177 1 7 1 138 1 127 1 100 1 64 1 
46 1 162 1 252 1 254 1 117 1 269 1 84 1 156 1 59 1 16 1 63 1 
46 1 22 1 252 1 222 1 254 1 269 1 156 1 27 1 59 1 286 1 285 1 121 1 96 2 7 2 33 1 84 1 127 1 16 1 
46 1 22 1 3 1 222 1 269 2 196 1 27 2 121 2 96 2 7 2 33 1 127 2 208 1 252 1 254 1 59 3 107 1 286 1 285 1 288 1 84 1 16 1 375 1 
46 2 3 1 222 1 269 2 196 1 27 2 121 2 96 2 7 2 33 1 127 2 208 1 252 1 254 1 57 1 59 3 107 1 286 1 285 1 288 1 84 2 16 2 375 1 140 1 
46 1 3 1 143 1 269 1 27 1 145 1 196 1 198 1 121 1 96 1 7 1 33 1 127 1 10 1 151 1 179 1 209 1 252 1 254 1 13 1 136 1 59 4 58 2 311 1 288 1 84 1 189 1 16 1 336 1 112 1 375 1 87 2 
46 1 3 1 143 1 269 1 27 1 145 1 196 1 198 1 121 1 96 1 7 1 33 1 127 1 10 1 151 1 179 1 252 1 254 1 136 1 59 4 58 2 311 1 288 1 84 1 189 1 16 1 336 1 112 1 375 1 19 1 87 2 
46 1 252 1 66 1 254 1 84 1 16 1 
46 1 252 2 241 1 254 1 269 1 156 1 59 1 271 1 121 1 84 1 167 1 16 1 18 1 
46 1 0 2 291 2 194 2 294 1 199 1 96 2 7 2 52 1 149 2 248 2 9 1 303 2 252 1 254 1 255 1 351 4 59 1 16 1 22 1 265 1 222 1 224 1 269 1 26 1 24 3 27 1 67 1 121 1 33 1 127 1 76 3 230 2 180 1 78 1 39 1 80 1 329 6 332 1 183 2 285 1 286 2 368 1 369 1 84 1 376 1 44 1 
46 1 3 1 337 4 143 1 145 1 198 2 96 1 7 1 150 1 10 1 151 1 299 1 104 1 348 1 11 1 56 2 255 1 156 1 59 2 58 3 311 1 163 1 356 2 16 1 112 2 19 1 265 1 116 1 67 1 27 1 360 2 69 1 33 1 127 1 179 1 131 2 78 2 365 2 135 1 136 2 368 2 287 1 84 1 189 1 336 1 139 5 87 3 
46 2 252 2 66 1 254 1 269 1 59 2 271 1 121 1 247 1 84 2 16 2 151 1 180 1 
46 4 252 1 117 1 254 1 269 1 156 1 59 1 162 1 237 1 84 4 16 4 140 1 180 1 
46 1 252 2 254 1 269 1 105 1 59 1 121 1 216 1 229 1 84 1 167 1 16 1 18 1 
46 1 252 1 318 1 254 1 304 1 156 1 71 1 84 1 16 1 277 1 
46 2 252 1 254 1 269 1 226 1 59 1 342 1 53 1 84 2 16 2 180 1 
46 5 252 2 117 1 254 2 269 2 156 1 196 1 59 3 162 1 53 1 237 1 84 5 16 4 205 1 250 1 180 1 
46 5 252 2 117 1 254 2 269 2 156 1 196 1 59 3 162 1 53 1 237 1 84 5 249 1 16 4 205 1 180 1 
46 1 252 1 222 1 254 1 269 1 156 1 27 1 57 1 59 1 286 1 285 1 121 1 96 2 7 2 33 1 84 1 127 1 16 1 
46 1 252 2 241 1 254 1 269 1 196 1 59 1 271 1 121 1 84 1 167 1 16 1 18 1 
319 1 262 1 60 1 321 1 286 1 
3 2 143 1 27 1 145 1 319 1 321 1 96 1 32 1 7 1 178 1 125 1 33 1 54 1 127 1 55 1 10 1 179 1 208 1 348 1 136 1 58 2 107 1 60 1 311 1 262 1 336 1 112 1 87 2 
210 1 60 1 185 1 321 1 96 1 7 1 126 1 127 1 262 1 
32 1 125 1 321 1 
280 1 295 1 15 1 63 1 
280 1 295 1 47 1 357 1 15 1 203 1 129 1 
272 1 47 1 191 1 
280 1 347 1 47 3 331 2 357 3 307 1 214 1 313 1 295 1 15 1 203 1 129 1 
280 1 295 1 221 1 47 2 240 1 357 2 15 1 203 1 129 1 
347 1 318 1 47 1 357 1 159 1 234 1 122 1 203 1 15 1 129 1 277 1 
280 1 347 1 47 1 357 1 15 1 203 1 129 1 
280 2 295 1 347 1 47 1 357 1 203 1 129 1 
280 1 347 1 47 2 357 2 144 1 42 1 109 1 15 1 203 2 129 2 
280 1 347 1 47 3 240 2 357 3 234 1 270 1 295 1 203 1 15 2 110 1 129 1 326 1 
122 1 318 1 124 1 347 1 47 1 240 1 260 1 357 2 304 1 203 1 129 1 277 2 
280 1 347 1 47 4 221 1 240 2 357 4 234 1 295 1 297 1 203 2 15 2 129 2 326 1 
280 1 295 1 347 1 47 1 357 1 15 1 203 1 129 1 
280 2 331 1 47 4 90 1 240 2 357 4 307 1 234 1 313 1 295 2 203 1 15 3 129 1 326 1 
301 1 280 1 347 1 47 2 89 1 240 1 357 2 25 1 295 1 15 1 203 1 129 1 
280 1 347 1 47 3 331 2 357 3 307 2 313 1 295 1 15 1 203 1 129 1 17 1 
274 1 15 2 8 2 292 1 
347 1 47 1 357 1 203 1 86 1 129 1 
280 1 295 1 347 1 47 2 240 1 357 2 15 1 203 1 110 1 129 1 
219 1 
280 1 295 1 347 1 47 1 357 1 15 1 203 1 129 1 
280 1 295 1 347 1 331 1 47 3 240 1 357 3 15 1 203 1 110 1 129 1 
90 1 15 1 234 1 326 1 
280 1 15 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (52,353) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (52,353) 29 254 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (52,353) 29 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (136,303,320) (136,303,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (136,303,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (136,303,320) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (167,300) (167,300) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (136,303,320) (136,303,320) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 118 131 148 158 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 148 280 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 176 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 1 230 1 28 1 48 2 210 1 97 1 5 1 51 5 338 2 214 1 9 1 260 9 107 2 145 9 263 1 16 2 266 1 169 1 345 3 18 1 56 1 150 2 21 4 85 2 285 2 224 6 326 1 253 1 
305 1 230 1 28 1 48 2 210 1 97 1 5 1 51 5 338 2 214 1 9 1 260 9 107 2 145 9 263 1 266 1 16 2 169 1 345 3 18 1 150 2 56 1 21 4 85 2 285 2 224 6 326 1 253 1 
305 1 230 1 28 1 48 2 210 1 97 1 5 1 51 6 338 2 214 1 9 1 260 10 107 2 145 10 263 1 266 1 16 2 169 1 345 4 18 1 150 2 56 1 21 5 85 2 285 2 224 7 326 1 253 1 
305 1 230 1 28 1 48 2 210 1 97 1 51 4 338 2 214 1 9 1 260 7 107 2 145 7 263 1 266 1 16 1 169 1 345 2 18 1 150 2 56 1 21 3 85 2 285 2 224 4 326 1 253 1 
263 1 28 1 16 2 345 1 18 1 48 1 150 1 210 1 97 1 5 1 51 3 21 2 285 1 224 3 338 1 260 4 107 1 145 4 
307 1 263 1 28 1 48 1 3 1 97 1 51 1 285 1 85 1 338 1 260 2 107 1 326 1 215 1 145 2 253 1 286 1 
263 1 28 1 169 1 345 1 97 1 51 2 21 1 85 1 224 1 338 2 260 3 107 2 145 3 
230 1 28 1 48 1 210 1 97 1 51 5 5 1 102 1 338 2 9 1 260 9 107 2 145 9 263 1 16 2 169 1 345 3 18 1 150 1 21 4 85 1 224 7 285 1 225 1 
230 1 28 1 48 1 210 1 97 1 51 5 5 1 102 1 338 2 9 1 260 9 107 2 145 9 263 1 16 2 169 1 345 3 18 1 150 1 21 4 85 1 224 7 285 1 225 1 
267 1 234 1 180 1 
61 1 137 2 180 1 
347 1 39 1 41 2 219 2 351 2 151 2 124 2 67 2 
92 1 160 1 337 2 162 1 67 2 6 1 8 1 183 1 314 1 31 1 124 3 76 1 14 2 238 1 147 1 239 1 187 1 125 2 80 1 219 2 190 1 35 2 171 1 299 1 242 1 151 2 116 2 347 1 39 1 153 1 41 2 195 1 24 1 155 1 351 3 175 1 60 1 
121 1 39 1 211 1 41 1 219 1 351 1 151 1 110 1 124 1 67 1 
53 1 55 1 180 1 37 1 81 1 67 1 267 1 101 1 211 1 193 1 141 1 133 1 351 1 124 1 
55 1 219 1 180 1 151 1 81 2 37 2 67 1 267 1 211 1 193 1 141 1 41 1 133 1 351 1 124 1 
84 1 273 1 329 1 81 1 37 1 
267 1 84 1 288 1 226 1 180 1 329 1 81 2 37 2 
84 1 81 1 37 1 
121 1 219 1 191 1 151 1 37 1 81 1 67 1 39 1 211 1 41 1 351 1 110 1 329 1 124 1 
180 1 
267 1 84 1 259 1 226 1 180 1 329 1 81 2 37 2 
229 1 306 1 331 1 319 2 170 1 290 1 180 1 20 1 37 5 81 5 267 1 256 1 269 2 84 2 223 2 277 1 226 1 329 2 274 1 
347 1 234 1 
45 1 219 1 17 1 151 1 67 2 347 2 41 1 351 2 124 2 
244 1 103 1 64 1 
125 1 35 1 171 1 299 1 242 1 116 1 347 1 173 1 8 1 195 1 31 1 24 1 155 1 351 1 124 1 76 1 
125 1 219 1 171 1 35 1 299 1 282 1 242 1 67 1 116 1 244 1 8 1 41 1 195 1 23 1 31 1 155 1 24 1 351 2 124 2 76 1 
114 1 45 1 219 4 282 1 151 1 67 5 347 1 101 1 40 1 132 1 41 4 23 2 351 5 124 5 
211 1 41 2 219 2 88 1 351 2 110 1 124 2 67 2 
347 1 41 3 23 1 219 3 351 3 151 1 124 3 67 3 
211 1 41 1 219 1 351 1 110 1 124 1 67 1 
211 1 45 1 41 1 219 1 17 1 351 1 151 1 124 1 67 1 
45 1 160 1 337 1 67 3 99 1 6 1 211 1 8 1 141 1 183 1 31 1 124 4 76 1 237 1 14 2 238 1 147 1 239 1 125 1 55 1 219 3 190 1 171 1 35 1 299 1 282 1 242 1 151 2 37 1 81 1 116 1 347 1 39 1 153 1 193 1 41 3 195 1 23 1 155 1 24 1 133 1 351 4 175 1 60 1 
347 1 101 1 114 1 41 1 219 1 23 1 351 2 124 2 67 2 
45 1 55 1 219 3 282 1 180 1 151 1 81 1 37 1 67 3 68 1 99 1 211 1 193 1 141 1 41 3 23 2 133 1 351 3 124 3 
45 1 219 2 64 1 151 1 67 2 244 1 41 2 23 1 351 2 124 2 
125 1 35 1 171 1 299 1 242 1 116 1 347 1 8 1 195 1 31 1 24 1 155 1 351 1 124 1 76 1 
125 1 35 1 299 1 242 1 116 1 347 1 349 1 8 1 313 1 195 1 31 1 155 1 351 1 124 1 76 1 
160 1 178 1 337 4 64 2 6 2 183 1 103 2 340 1 13 1 14 2 296 1 54 1 147 1 239 1 80 2 190 1 221 1 244 2 247 1 130 1 22 1 118 1 175 1 352 1 
211 1 141 1 41 1 219 1 88 1 351 1 124 1 67 1 
115 1 353 1 
115 1 353 1 
220 1 52 1 
220 1 52 1 
220 1 52 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
115 1 353 1 
29 1 115 1 254 1 203 1 353 1 81 1 37 1 
29 1 115 1 203 1 353 1 
285 1 48 1 150 1 
285 1 215 1 48 1 
322 1 285 3 298 1 215 1 150 2 73 1 
128 1 285 2 298 1 215 1 150 1 73 1 
285 2 298 1 215 1 150 1 73 2 
61 1 137 3 1 1 335 2 2 1 180 2 256 1 277 3 108 2 295 1 123 1 13 1 319 1 170 2 81 5 37 5 283 1 221 1 267 1 269 1 84 1 223 1 249 1 131 1 226 1 194 2 118 1 327 1 352 1 329 4 252 1 26 1 
61 3 306 1 137 9 1 2 335 6 180 5 256 1 140 1 277 8 213 1 108 6 295 4 13 3 319 2 170 6 38 1 81 9 37 9 283 2 221 3 83 1 267 1 84 6 269 2 223 2 131 3 302 1 226 1 200 5 118 3 327 1 272 1 352 3 273 5 329 7 
61 2 306 1 137 4 1 1 335 2 180 3 277 3 295 1 108 2 13 1 319 1 170 2 81 3 37 3 283 1 221 1 267 1 269 1 223 1 131 1 194 1 118 1 352 1 329 2 252 1 26 1 
61 3 137 7 306 1 1 1 335 4 180 4 277 5 213 1 108 4 295 2 13 2 319 1 170 4 81 4 37 4 283 1 221 2 267 1 83 1 269 1 223 1 131 2 194 2 118 2 272 1 352 2 252 1 329 3 26 1 
27 1 234 1 76 1 
188 1 76 1 
122 1 
195 1 299 1 76 1 
342 1 76 1 
195 1 76 1 
27 2 94 1 195 1 299 1 310 1 76 3 
77 1 296 3 135 1 80 2 231 1 337 5 139 1 221 1 6 3 246 1 130 4 227 1 87 2 324 1 352 1 144 1 157 1 
77 1 296 3 135 1 80 2 231 1 337 6 139 1 221 1 6 4 246 1 130 4 227 1 324 1 87 2 352 1 144 1 157 1 
77 1 296 3 134 1 135 1 80 2 231 1 337 5 139 1 221 1 6 3 246 1 130 4 227 1 87 2 324 1 352 1 144 1 157 1 
135 2 332 1 160 1 231 5 337 35 138 1 139 3 292 3 6 19 69 1 104 1 183 1 144 1 13 2 77 3 14 2 296 8 147 1 189 3 80 16 190 1 19 1 82 1 221 5 246 1 130 13 131 2 227 2 324 1 87 3 198 1 118 2 352 5 157 2 
77 1 296 4 14 4 135 1 147 2 231 1 80 3 160 2 190 2 337 8 209 1 139 1 36 1 221 1 6 5 246 1 130 5 104 1 183 2 227 1 324 1 87 2 352 1 157 1 
125 1 320 1 35 1 97 1 116 1 85 1 338 1 303 1 260 1 107 1 204 1 109 1 145 1 
78 1 125 1 320 1 35 1 116 1 224 1 85 1 338 1 260 2 106 1 107 1 201 1 204 1 145 2 
136 1 85 1 224 1 125 1 260 1 106 1 35 1 201 1 204 1 145 1 116 1 
167 1 91 1 78 1 125 1 35 1 242 1 300 1 116 1 85 2 338 1 260 1 107 1 204 2 145 1 
125 1 320 1 35 1 97 1 116 1 85 1 338 1 303 1 260 1 107 1 201 1 204 1 145 1 
208 1 
137 2 180 2 49 2 4 1 101 1 277 2 8 1 141 1 105 2 11 2 278 1 184 1 53 1 112 1 55 1 319 1 242 2 283 1 116 2 193 1 195 1 202 1 328 1 61 2 333 2 336 1 63 1 67 1 256 1 211 1 212 1 339 1 31 1 124 1 76 1 125 2 33 1 170 2 35 2 172 1 346 2 37 5 81 5 267 1 84 6 269 1 223 1 226 3 350 1 42 4 43 2 133 1 351 1 275 2 90 1 
67 1 101 1 211 1 259 1 141 1 212 1 124 1 53 1 112 1 55 1 346 1 81 3 37 3 84 2 193 1 350 1 42 2 226 1 133 1 351 1 328 1 90 1 
333 1 180 1 67 1 101 1 211 1 259 1 141 1 212 1 124 1 53 1 112 1 55 1 81 3 37 3 267 1 84 1 193 1 350 1 42 3 226 1 133 1 351 1 328 1 90 1 
333 1 180 1 67 1 101 1 211 1 259 1 141 1 212 1 105 1 124 1 53 1 112 1 55 1 346 1 81 3 37 3 267 1 84 2 193 1 226 1 350 1 42 3 133 1 351 1 328 1 90 1 
46 1 180 5 49 2 101 1 141 1 277 1 105 4 11 2 278 1 143 1 53 1 112 1 55 1 319 1 193 1 202 1 156 1 328 1 61 2 333 4 67 1 256 1 211 1 259 1 212 1 30 1 124 1 170 1 346 4 37 5 81 5 267 5 84 7 269 1 129 1 223 1 42 6 226 3 350 1 133 1 43 2 351 1 90 1 275 2 
137 2 49 2 180 2 101 1 141 1 277 1 105 2 11 2 278 1 53 1 112 1 55 1 319 1 193 1 202 1 328 1 61 2 333 2 67 1 256 1 211 1 212 1 124 1 170 1 172 1 346 2 37 4 81 4 267 1 269 1 84 4 223 1 42 4 350 1 226 2 133 1 43 2 351 1 90 1 275 2 
61 2 46 1 333 2 180 1 49 2 67 1 101 1 256 1 211 1 277 1 141 1 105 2 212 1 11 2 30 1 278 1 143 1 124 1 53 1 112 1 55 1 319 1 170 1 346 2 81 4 37 4 267 1 84 4 269 1 223 1 193 1 226 2 350 1 42 4 43 2 133 1 202 1 351 1 328 1 275 2 90 1 
61 2 46 1 333 2 180 1 49 2 67 1 101 1 256 1 211 1 277 1 141 1 105 2 212 1 11 2 30 1 278 1 143 1 124 1 53 1 112 1 55 1 319 1 170 1 346 2 81 4 37 4 267 1 84 4 269 1 223 1 193 1 226 2 350 1 42 4 43 2 133 1 202 1 351 1 328 1 275 2 90 1 
137 2 333 2 180 1 49 2 98 2 67 1 101 1 256 1 258 2 211 1 182 1 277 1 141 1 105 2 212 1 11 2 30 1 278 1 124 1 53 1 112 1 55 1 319 1 170 1 149 1 126 1 346 2 81 4 37 4 267 1 84 4 269 1 223 1 193 1 226 2 350 1 42 4 133 1 351 1 328 1 90 1 
61 2 46 1 333 3 180 1 49 2 67 1 256 1 101 1 211 1 277 1 141 1 212 1 105 3 11 2 30 1 278 1 143 1 124 1 53 1 112 1 55 1 319 1 170 1 346 3 81 4 37 4 267 1 269 1 84 5 223 1 193 1 226 2 350 1 42 5 43 2 133 1 202 1 351 1 156 1 328 1 275 2 90 1 
61 2 46 1 333 3 180 1 49 2 67 1 256 1 101 1 211 1 277 1 141 1 212 1 105 3 11 2 30 1 278 1 143 1 124 1 53 1 112 1 55 1 319 1 170 1 346 3 81 4 37 4 267 1 269 1 84 5 223 1 193 1 226 2 350 1 42 5 43 2 133 1 202 1 351 1 156 1 328 1 275 2 90 1 
137 2 49 2 180 1 98 2 101 1 141 1 277 1 105 2 11 2 278 1 53 1 112 1 55 1 319 1 149 1 193 1 328 1 333 2 67 1 256 1 258 2 211 1 212 1 124 1 170 1 172 1 346 2 37 4 81 4 267 1 269 1 84 4 223 1 42 4 350 1 226 2 133 1 351 1 90 1 
296 2 14 2 77 1 239 1 147 1 80 2 160 1 190 1 337 5 64 1 139 1 347 1 221 1 6 3 234 1 244 1 246 1 130 2 247 1 103 1 183 1 87 1 227 1 324 1 175 1 352 1 
308 1 231 1 160 2 233 1 337 14 64 4 292 3 6 6 183 2 103 11 316 1 216 1 13 1 296 1 14 4 166 1 343 1 238 1 147 2 239 2 187 1 189 3 80 8 190 2 19 1 347 1 221 2 244 11 130 2 131 2 118 2 175 1 352 1 
160 1 337 2 64 1 67 1 6 1 8 1 183 1 31 1 217 1 124 2 76 1 166 1 14 2 146 1 238 1 147 1 239 1 187 1 125 1 219 1 80 1 190 1 171 1 35 1 299 1 282 1 242 1 116 1 347 1 173 1 174 1 41 1 195 1 23 1 155 1 24 1 351 2 175 1 
93 2 231 4 139 1 6 10 8 2 183 3 103 7 315 1 13 2 186 1 14 6 238 1 239 3 147 3 187 1 190 3 282 1 242 1 116 3 244 7 246 1 153 2 23 1 195 2 324 1 197 2 201 1 24 2 155 2 118 2 251 1 160 3 161 2 337 19 64 7 67 1 31 2 124 3 76 2 77 1 296 4 166 1 125 3 219 1 80 9 35 3 171 2 299 2 347 1 221 3 348 2 130 8 131 2 41 1 87 1 227 1 351 3 175 3 352 3 
92 2 287 1 160 2 336 1 337 2 309 1 67 1 4 1 6 1 71 1 8 2 183 2 31 2 109 1 124 1 76 3 14 4 238 1 147 2 239 2 297 1 187 1 125 8 219 1 80 1 190 2 35 8 242 2 116 7 192 1 247 1 41 1 23 1 195 2 201 1 199 1 351 1 175 2 44 1 
45 1 160 1 337 3 64 1 67 1 6 2 103 1 183 1 124 1 13 1 296 1 14 2 166 1 147 1 239 1 219 1 80 1 190 1 151 1 221 1 244 1 130 1 131 1 41 1 351 1 118 1 175 1 119 1 352 1 
14 2 54 1 239 1 147 1 231 1 160 1 80 2 190 1 337 2 64 1 221 1 244 1 130 1 247 1 103 1 183 1 118 1 175 1 
296 1 14 2 239 1 147 1 160 1 190 1 337 2 64 1 6 2 244 1 130 1 247 1 103 1 183 1 175 1 340 1 352 1 13 1 
160 1 231 1 337 4 64 2 6 2 183 1 103 2 13 1 14 2 296 1 147 1 239 1 80 2 190 1 221 1 244 2 247 1 130 2 131 1 118 1 175 1 352 1 
14 2 54 1 287 1 239 1 147 1 231 1 160 1 80 2 190 1 337 2 64 1 221 1 244 1 130 1 103 1 183 1 118 1 175 1 
296 1 14 2 287 1 239 1 147 1 160 1 190 1 337 2 64 1 6 2 244 1 130 1 103 1 183 1 175 1 340 1 352 1 13 1 
287 1 160 1 231 1 337 4 64 2 6 2 183 1 103 2 13 1 14 2 296 1 147 1 239 1 80 2 190 1 221 1 244 2 130 2 131 1 118 1 175 1 352 1 
160 1 231 1 337 4 64 2 6 2 183 1 103 2 13 1 14 2 296 1 147 1 239 1 80 2 190 1 221 1 244 2 130 2 131 1 118 1 175 1 352 1 
160 1 337 2 6 1 8 1 183 1 31 1 124 1 76 1 14 2 238 1 239 1 147 1 187 1 125 1 80 1 190 1 171 1 35 1 299 1 242 1 116 1 347 1 153 1 195 1 155 1 24 1 351 1 175 1 
160 1 337 2 6 1 8 1 313 1 183 1 31 1 124 1 76 1 14 2 238 1 239 1 147 1 187 1 125 1 80 1 190 1 35 1 299 1 242 1 116 1 347 1 349 1 195 1 155 1 351 1 175 1 58 1 
160 1 231 1 337 4 64 2 6 2 183 1 103 2 13 1 14 2 166 1 296 1 147 1 239 1 80 2 190 1 221 1 244 2 130 2 131 1 118 1 175 1 352 1 
93 1 231 1 160 1 337 4 64 2 6 2 8 1 103 2 183 1 31 1 109 1 13 1 124 1 76 1 296 1 14 2 239 1 147 1 125 1 80 2 190 1 171 1 35 1 299 1 116 1 221 1 244 2 130 2 153 1 131 1 195 1 155 1 24 1 118 1 351 1 175 1 352 1 
45 1 231 1 160 1 337 3 64 1 67 1 6 1 183 1 103 1 13 1 124 1 14 2 166 1 147 1 239 1 219 1 80 2 190 1 151 1 221 1 127 1 244 1 130 1 131 1 41 1 351 1 118 1 175 1 352 1 
158 1 160 2 47 1 231 2 179 1 337 13 312 1 292 1 6 7 183 2 142 1 13 2 296 2 14 4 343 1 147 2 189 2 148 1 80 6 190 2 241 1 19 1 36 1 221 2 130 4 131 2 118 2 205 1 352 2 
231 1 160 3 47 1 289 1 179 3 337 24 311 1 292 2 6 11 104 2 183 3 142 2 280 1 13 2 296 1 14 6 168 1 147 3 189 2 113 1 148 1 80 13 190 3 241 1 19 2 36 1 221 3 130 2 248 1 131 3 118 3 352 2 205 2 206 1 
304 1 160 3 47 1 231 3 289 1 179 3 337 32 312 1 311 1 292 3 6 17 104 1 183 3 142 2 280 1 13 4 296 2 14 6 343 1 168 1 147 3 113 1 189 4 148 1 80 15 190 3 241 1 19 3 36 1 221 4 130 5 248 1 131 4 118 4 205 1 352 4 206 1 
304 1 160 4 47 1 231 3 289 1 179 4 337 33 312 1 311 1 292 3 6 16 104 2 183 4 142 2 280 1 13 3 296 3 14 8 343 1 168 1 147 4 113 1 189 4 148 1 80 17 190 4 241 1 19 3 36 1 221 4 130 6 248 1 131 4 118 4 205 1 352 3 206 1 
160 2 47 1 231 6 289 1 179 3 233 2 337 46 139 1 311 1 292 4 6 23 104 1 183 2 142 1 280 1 13 6 77 1 296 7 14 4 343 2 168 1 147 2 113 1 189 4 148 1 80 23 190 2 241 1 19 2 36 1 221 7 246 1 130 13 248 1 131 6 87 1 227 1 324 1 118 6 205 1 352 7 206 1 
92 2 95 1 160 1 337 2 67 2 6 1 8 1 183 1 31 1 185 1 124 2 76 1 166 1 14 2 238 1 239 1 147 1 297 1 187 1 125 2 240 1 80 1 190 1 35 2 152 1 116 2 195 1 196 1 351 2 175 1 44 1 
32 1 125 2 79 1 15 1 35 2 48 1 150 1 116 2 57 1 164 1 293 1 222 1 322 1 285 2 8 1 31 1 201 1 215 1 109 1 
32 1 125 1 15 1 35 1 48 1 150 1 116 1 164 1 293 1 222 1 322 1 285 2 8 1 31 1 201 1 215 1 165 1 
125 1 15 1 336 1 35 1 242 1 65 1 116 1 4 1 57 1 243 1 8 1 195 1 31 1 76 1 
32 1 125 1 79 1 15 1 35 1 48 1 150 1 116 1 57 1 164 1 293 1 222 1 322 1 285 2 8 1 31 1 201 1 215 1 
0 1 
267 1 234 1 229 1 277 1 170 1 180 1 274 1 
61 1 137 1 319 1 170 1 180 2 81 1 37 1 267 1 256 1 84 1 269 1 223 1 277 1 226 1 43 1 202 1 275 1 
276 1 94 1 229 1 137 12 180 8 100 2 277 9 8 3 12 2 108 6 109 1 279 2 13 2 188 3 55 2 319 4 281 2 242 1 283 2 116 3 245 1 195 3 154 2 118 2 27 2 62 2 61 6 335 6 291 2 256 4 257 1 339 1 31 4 262 1 342 2 76 10 218 1 125 3 35 3 170 8 299 3 37 5 81 5 221 2 267 2 269 4 84 5 223 4 348 2 131 2 226 3 271 2 352 2 274 1 
61 3 137 6 335 5 289 1 180 4 311 1 292 1 256 2 277 7 108 5 279 1 13 2 189 1 113 1 319 2 170 4 19 1 81 1 37 1 221 2 267 1 84 1 269 2 223 2 248 1 131 2 226 1 325 1 118 2 352 2 206 1 
121 1 138 1 139 1 67 1 256 1 211 1 277 2 143 1 110 1 279 2 124 1 77 1 281 1 319 1 219 1 170 2 191 1 151 1 81 1 37 1 221 2 269 1 39 1 223 1 41 1 227 1 351 1 352 1 
267 1 256 1 269 1 229 1 223 1 277 1 319 1 170 1 180 1 274 1 
61 5 137 10 281 1 335 5 170 5 180 5 221 2 348 1 131 2 277 5 118 2 108 5 352 2 279 2 13 2 
267 1 84 1 226 1 180 1 81 1 37 1 
306 1 63 1 336 1 50 1 255 1 4 1 256 1 257 2 8 1 277 2 339 2 31 1 184 1 76 1 218 1 125 4 319 2 35 4 170 2 242 2 283 2 37 3 81 3 116 4 269 2 84 4 223 2 226 2 195 1 
160 1 337 1 67 2 6 1 8 1 183 1 31 1 124 3 76 1 14 2 238 1 147 1 239 1 125 1 219 2 190 1 35 1 171 1 299 1 242 1 151 2 116 1 347 1 39 1 153 1 41 2 195 1 24 1 155 1 351 3 175 1 60 1 
61 2 137 4 335 2 319 1 170 1 180 3 283 1 256 1 267 1 269 1 223 1 277 2 339 1 87 1 108 2 279 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
176 1 181 1 
115 1 353 1 
296 2 14 4 77 1 147 2 80 3 231 1 160 2 190 2 337 7 139 1 221 1 6 4 246 1 130 3 183 2 104 1 87 1 227 1 324 1 352 1 
77 1 296 2 80 2 337 5 139 1 221 1 6 3 234 1 246 1 130 2 87 1 324 1 227 1 352 1 
296 1 14 2 147 1 160 1 80 2 231 1 321 1 190 1 337 4 221 1 6 2 130 2 131 1 183 1 118 1 352 1 13 1 
296 1 343 1 189 2 80 3 231 1 337 7 19 1 292 1 221 1 6 4 130 2 131 1 118 1 352 1 13 1 
334 1 231 4 160 2 233 1 337 22 139 2 292 2 6 12 104 2 183 2 316 1 13 2 77 2 343 1 296 5 14 4 147 2 189 2 80 10 190 2 221 3 246 1 130 9 131 2 87 1 227 1 324 1 118 2 352 3 
6 1 189 1 337 1 
80 1 337 1 292 1 
14 2 296 2 147 1 160 1 80 3 231 1 190 1 321 1 337 6 221 1 6 3 348 1 130 3 131 1 183 1 118 1 352 1 13 1 
231 1 160 1 289 1 337 12 311 1 292 1 6 6 183 1 13 2 14 2 296 1 147 1 189 1 113 1 80 6 190 1 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 2 206 1 
77 1 296 1 80 3 231 1 337 6 139 1 221 1 6 3 130 2 227 1 352 1 
296 1 77 1 14 2 147 1 334 1 80 1 231 1 160 1 190 1 337 3 139 1 6 2 246 1 130 2 104 1 183 1 324 1 
14 2 77 2 296 3 147 1 160 1 231 2 80 5 190 1 337 10 138 1 36 1 139 2 221 2 6 5 130 5 183 1 227 1 352 2 
14 2 147 1 160 1 80 2 231 1 190 1 337 2 36 1 221 1 130 1 183 1 118 1 
296 1 14 2 147 1 160 1 80 2 231 1 190 1 337 4 36 1 221 1 6 2 130 2 131 1 183 1 118 1 352 1 13 1 
14 6 77 1 296 1 147 3 334 1 160 3 231 1 80 1 190 3 337 3 312 1 36 1 139 1 6 2 130 2 104 1 183 3 
334 1 332 1 160 5 231 5 337 33 139 3 312 1 292 3 6 18 69 1 104 2 183 5 13 3 77 3 14 10 343 1 296 7 147 5 189 4 80 15 321 1 190 5 19 1 36 1 221 5 246 1 130 12 131 3 87 1 227 2 324 1 198 1 118 3 352 5 
160 1 337 7 139 1 292 1 6 4 183 1 14 2 77 1 296 2 147 1 189 1 113 1 80 3 190 1 19 1 36 1 221 1 246 1 130 2 87 1 324 1 227 1 352 1 
160 2 231 1 337 10 139 1 292 1 6 5 183 2 296 2 77 1 14 4 343 1 147 2 189 2 113 1 80 5 190 2 321 1 19 1 36 1 221 2 246 1 130 3 131 1 87 1 227 1 324 1 118 1 352 1 
231 1 160 3 289 1 337 13 311 1 292 1 6 7 183 3 104 1 13 2 14 6 296 1 147 3 189 1 113 1 80 6 321 1 190 3 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 2 206 1 
231 1 160 3 289 1 337 11 311 1 292 1 6 4 104 1 183 3 13 1 14 6 296 1 147 3 189 1 113 1 80 7 321 1 190 3 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 1 206 1 
160 1 337 7 139 1 292 1 6 4 183 1 14 2 77 1 296 2 147 1 189 1 113 1 80 3 190 1 19 1 36 1 221 1 246 1 130 2 87 1 324 1 227 1 352 1 
231 1 160 1 289 1 337 12 311 1 292 1 6 6 183 1 13 2 14 2 296 1 147 1 189 1 113 1 80 6 190 1 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 2 206 1 
231 1 160 4 289 1 337 12 311 1 292 1 6 5 183 4 104 2 13 1 14 8 296 1 147 4 189 1 113 1 80 7 321 1 190 4 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 1 206 1 
231 2 160 4 289 1 337 12 311 1 312 1 292 1 6 5 183 4 104 2 13 1 14 8 296 2 147 4 189 1 113 1 80 7 190 4 19 1 36 1 221 2 130 4 248 1 131 2 118 2 352 1 206 1 
77 3 296 3 231 3 80 3 337 7 139 3 221 1 6 4 246 2 130 6 324 1 227 1 352 1 
231 1 160 4 289 1 337 12 311 1 312 1 292 1 6 5 183 4 104 2 13 1 14 8 296 1 147 4 189 1 113 1 80 7 190 4 19 1 36 1 221 2 130 2 248 1 131 2 118 2 352 1 206 1 
347 1 101 1 114 1 232 1 351 1 124 1 67 1 
347 1 101 1 114 1 232 1 351 1 72 1 25 1 235 1 75 1 124 1 301 1 67 1 
234 1 125 1 8 1 195 1 31 1 336 1 35 1 242 1 76 1 4 1 116 1 
125 1 219 1 35 1 171 1 299 1 242 1 67 1 116 1 347 1 8 1 41 1 195 1 23 1 31 1 155 1 351 2 124 2 76 1 
125 1 219 2 35 1 171 1 299 2 67 2 116 1 347 1 100 1 257 1 211 1 141 1 8 1 41 1 195 2 23 1 31 1 133 1 155 1 351 2 342 1 124 2 76 3 
125 2 219 2 35 2 299 2 96 1 67 2 116 2 347 1 100 1 257 1 211 1 141 1 8 1 41 1 313 1 195 2 23 1 31 1 133 1 155 1 351 2 342 1 124 2 76 3 
27 1 180 1 96 1 100 1 257 1 8 1 31 1 342 1 76 4 188 1 125 3 264 1 55 1 34 1 35 3 299 1 242 1 81 2 37 2 116 3 267 1 84 1 195 1 
27 1 62 1 125 3 188 1 55 1 35 3 299 1 242 1 180 1 96 1 37 2 81 2 116 3 267 1 100 1 257 1 84 1 8 1 195 1 31 1 342 1 76 4 
125 1 8 1 71 1 31 1 35 1 116 1 
92 1 94 1 125 7 159 1 344 1 35 7 299 1 309 1 242 2 116 6 192 1 71 1 8 2 195 2 31 3 201 1 199 1 250 1 109 1 44 1 76 3 
93 1 160 2 161 1 337 5 64 1 139 1 67 1 6 3 8 1 103 1 183 2 31 1 109 1 124 2 76 1 296 2 77 1 166 1 14 4 147 2 239 2 125 1 80 2 219 1 190 2 35 1 171 1 299 1 116 1 347 1 221 1 244 1 246 1 130 2 153 1 41 1 195 1 196 1 23 1 87 1 227 1 324 1 155 1 24 1 351 2 175 2 352 1 
27 1 229 1 62 1 180 1 256 2 277 1 12 1 76 2 125 1 218 1 188 1 55 1 319 2 170 1 35 1 242 1 81 3 37 3 116 1 267 1 269 2 84 2 223 2 226 1 154 1 271 1 329 1 274 1 
27 1 276 1 94 1 125 2 35 2 299 1 116 2 71 1 8 1 195 1 31 2 109 1 76 2 
125 4 265 1 336 1 35 4 242 1 96 1 116 4 4 1 8 1 195 1 31 1 109 1 76 1 
318 1 125 2 159 1 344 1 35 2 299 1 116 2 257 1 268 1 8 1 195 1 31 2 315 1 76 1 
222 1 285 1 125 1 8 1 31 1 35 1 215 1 48 1 242 1 116 1 
125 2 8 1 195 1 240 1 31 1 201 1 35 2 109 1 44 1 76 1 116 2 
125 5 265 1 336 1 35 5 242 1 4 1 116 4 257 1 192 1 8 2 195 2 31 2 199 1 109 1 44 1 76 3 
125 5 265 1 336 1 35 5 242 1 4 1 116 4 257 1 192 1 8 2 10 1 195 2 31 2 109 1 44 1 76 3 
125 1 219 1 35 1 299 1 242 1 67 1 116 1 347 1 8 1 41 1 313 1 195 1 23 1 31 1 155 1 351 2 124 2 76 1 
94 1 125 1 159 1 344 1 35 1 299 1 116 1 257 1 8 1 195 1 31 2 250 1 76 1 
347 1 177 1 86 1 117 1 59 1 
177 2 55 1 180 1 37 2 81 2 347 1 99 1 267 1 211 1 86 1 141 1 193 1 117 2 133 1 59 2 74 1 329 1 330 1 317 1 
177 1 95 1 152 1 67 1 86 1 351 1 185 1 59 1 124 1 
86 1 330 1 317 1 
51 1 234 1 263 1 28 1 
51 1 263 1 338 1 28 1 260 1 107 1 145 1 
85 1 260 1 120 1 
51 1 207 1 270 1 263 1 338 1 28 1 260 3 107 1 341 1 145 3 253 2 97 1 
51 1 224 1 263 1 338 1 28 1 16 1 260 2 107 1 145 2 
48 1 150 1 210 1 97 1 51 1 21 1 285 1 338 1 260 1 107 1 145 1 
51 1 338 1 28 1 260 1 107 1 145 1 97 1 
263 1 338 1 28 2 260 1 107 1 145 1 97 1 
28 1 97 1 51 1 7 1 338 2 260 2 107 2 261 1 145 2 228 1 
263 1 230 1 28 1 345 1 97 1 51 2 21 1 224 2 338 1 9 1 260 3 107 1 145 3 
263 1 28 1 48 1 150 1 97 1 51 1 322 1 285 2 224 1 338 1 323 1 260 2 107 1 215 1 145 2 
263 1 28 1 16 1 345 1 97 1 5 1 51 2 21 1 224 2 338 2 260 4 107 2 145 4 
51 1 263 1 338 1 28 1 260 1 107 1 145 1 97 1 
207 1 263 2 307 1 28 2 345 1 51 3 21 1 270 1 224 2 338 1 260 4 107 1 145 4 253 1 
263 1 28 1 66 1 97 1 51 1 163 1 102 1 224 1 338 1 260 2 107 1 145 2 
51 1 207 2 270 1 263 1 338 1 28 1 260 3 107 1 236 1 145 3 253 2 97 1 
51 2 111 1 294 1 89 2 
338 1 260 1 107 1 145 1 97 1 284 1 
51 1 224 1 263 1 338 1 28 1 9 1 260 2 107 1 145 2 97 1 
70 1 
51 1 263 1 338 1 28 1 260 1 107 1 145 1 97 1 
51 1 224 1 263 1 338 1 9 1 28 1 260 3 107 1 145 3 253 1 97 1 
51 1 21 1 307 1 345 1 
51 1 28 1 

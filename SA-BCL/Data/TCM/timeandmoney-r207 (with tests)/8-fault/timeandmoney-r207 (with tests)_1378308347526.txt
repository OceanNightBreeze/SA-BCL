#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 335 (218,274) (218,274) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 335 (218,274) (218,274) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 335 (218,274) (218,274) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 335 (218,274) (218,274) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 335 4 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 335 4 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 296 134 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 296 134 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 296 134 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 296 134 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 296 134 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
364 4 139 1 146 1 334 1 335 1 2 1 31 1 207 1 18 2 90 1 297 1 214 1 314 2 360 1 199 1 76 1 304 1 154 2 218 1 260 1 274 1 86 4 
364 4 139 1 146 1 334 1 335 1 2 1 31 1 207 1 18 2 90 1 297 1 214 1 314 2 360 1 199 1 76 1 304 1 154 2 218 1 260 1 274 1 86 4 
364 4 139 1 146 1 334 1 335 1 2 1 31 1 207 1 18 2 90 1 297 1 214 1 314 2 360 1 199 1 76 1 304 1 154 2 218 1 260 1 274 1 86 4 
364 4 139 1 146 1 334 1 335 1 2 1 31 1 207 1 18 2 90 1 297 1 214 1 314 2 360 1 199 1 76 1 304 1 154 2 218 1 260 1 274 1 86 4 
364 4 178 1 146 1 139 3 335 1 223 1 359 2 207 1 18 1 90 1 214 1 297 3 360 2 154 1 354 1 260 1 86 4 328 1 
364 2 139 1 146 1 18 1 90 1 214 1 81 1 314 1 151 1 199 1 304 1 154 1 354 1 287 1 86 2 328 1 
364 3 139 2 31 1 18 2 214 1 297 1 314 1 360 1 154 2 354 1 260 1 86 3 328 1 
364 4 139 1 335 1 4 1 31 1 18 2 214 1 297 2 314 1 360 1 76 1 154 2 307 1 260 1 86 4 
364 4 139 1 335 1 4 1 31 1 18 2 214 1 297 2 314 1 360 1 76 1 154 2 307 1 260 1 86 4 
256 1 
325 2 34 1 91 1 
300 2 141 2 25 2 293 1 55 1 52 2 327 2 265 2 
329 2 138 1 23 1 330 1 25 2 71 1 70 2 73 1 279 1 118 1 52 2 54 1 141 3 93 1 315 2 209 1 55 1 95 1 262 1 345 1 265 3 190 1 124 1 15 1 348 2 293 1 350 1 59 1 269 2 19 1 300 2 172 1 42 1 137 1 220 1 327 2 203 1 
300 1 141 1 25 1 222 1 205 1 293 1 52 1 326 1 327 1 265 1 
0 1 205 1 193 1 224 1 74 1 338 1 369 1 91 1 82 1 283 1 141 1 254 1 327 1 265 1 
0 1 25 1 205 1 193 1 224 1 338 2 52 1 91 1 300 1 82 1 283 1 141 1 254 2 327 1 265 1 
211 1 254 1 278 1 338 1 109 1 
283 1 201 1 254 2 278 1 202 1 338 2 109 1 91 1 
254 1 338 1 109 1 
25 1 222 1 205 1 278 1 293 1 61 1 338 1 52 1 300 1 141 1 254 1 326 1 327 1 265 1 
91 1 
283 1 254 2 278 1 217 1 202 1 338 2 109 1 91 1 
79 2 111 1 145 2 113 1 357 1 278 2 140 1 338 5 197 1 91 1 169 1 283 1 92 1 133 1 254 5 202 1 272 1 173 2 109 2 
190 1 25 1 15 1 70 1 73 1 348 1 59 1 279 1 368 1 118 1 300 1 141 2 93 1 315 1 209 1 273 1 308 1 203 1 327 1 265 2 
256 1 
25 1 52 1 32 1 300 1 141 2 164 1 55 2 327 2 265 2 
212 1 273 1 322 1 
190 1 70 1 15 1 73 1 348 1 192 1 59 1 279 1 118 1 141 1 93 1 315 1 209 1 55 1 203 1 265 1 
300 3 141 3 25 3 55 1 368 1 52 1 327 3 265 3 
300 1 141 1 25 1 222 1 205 1 327 1 265 1 
300 1 141 1 25 1 164 1 205 1 52 1 32 1 327 1 265 1 
329 1 138 1 23 1 0 1 330 1 25 3 71 1 70 1 73 1 205 1 224 1 279 1 338 1 118 1 52 2 32 1 141 4 93 1 315 1 209 1 254 1 55 1 95 1 262 1 345 1 265 4 190 1 15 1 348 1 293 1 59 1 193 1 269 2 368 1 40 1 300 3 82 1 172 1 21 1 42 1 137 1 308 1 203 1 327 3 
300 1 141 2 25 1 8 1 55 1 74 1 368 1 327 2 265 2 
0 1 25 3 205 1 193 1 224 1 338 1 368 2 52 1 32 1 91 1 300 3 40 1 82 1 141 3 254 1 308 1 327 3 265 3 157 1 
25 2 368 1 52 1 32 1 322 1 300 2 141 2 273 1 327 2 265 2 
190 1 70 1 15 1 73 1 348 1 59 1 279 1 118 1 141 1 93 1 315 1 209 1 55 1 203 1 265 1 
363 1 190 1 70 1 15 1 73 1 348 1 59 1 279 1 63 1 141 1 93 1 315 1 209 1 55 1 265 1 
329 4 355 1 23 1 330 2 276 1 115 1 187 1 9 1 95 1 78 1 345 1 233 1 289 1 99 1 212 2 269 2 235 1 322 2 20 1 172 1 42 1 137 1 273 2 220 2 
82 1 300 1 141 1 25 1 205 1 48 1 327 1 265 1 
25 4 177 1 125 1 74 1 368 2 52 1 32 1 300 4 141 5 8 1 55 1 308 1 327 5 265 5 
300 2 141 2 25 2 222 1 205 1 48 1 327 2 265 2 
67 1 122 1 
67 1 122 1 
3 1 226 1 
3 1 226 1 
3 1 226 1 
321 1 67 1 122 1 
67 1 122 1 158 1 
333 1 65 1 3 1 67 2 226 1 122 2 
321 1 67 1 122 1 
321 1 67 1 122 1 
67 1 232 1 122 1 
67 1 232 1 122 1 
67 1 232 1 122 1 
112 1 333 1 225 1 338 2 103 1 91 1 186 1 185 3 105 2 251 2 254 2 67 2 57 1 165 1 263 1 122 2 264 2 68 2 14 2 
25 2 275 1 311 1 338 1 185 1 141 2 6 1 251 1 254 1 55 1 122 1 14 1 265 2 103 1 300 2 105 1 106 1 240 1 136 1 67 1 305 1 327 2 68 1 158 1 
146 1 207 1 90 1 
81 1 146 1 90 1 
81 1 207 2 259 1 295 1 361 1 90 3 
81 1 206 1 207 1 259 1 295 1 90 2 
81 1 207 1 295 1 259 2 90 2 
309 1 275 1 331 1 179 1 278 4 338 5 91 2 187 1 283 1 254 5 34 1 78 1 231 1 121 1 286 2 258 2 285 2 233 1 346 1 289 1 79 1 318 1 145 1 325 3 169 1 133 2 136 1 202 1 272 3 305 1 173 1 109 1 
309 3 113 1 179 1 278 7 338 9 91 5 33 1 187 3 283 1 254 9 343 1 34 3 78 3 231 2 257 1 286 6 258 6 233 3 346 2 289 3 79 2 145 2 211 5 39 1 198 1 325 9 169 1 372 1 83 5 133 6 202 1 305 4 272 8 173 2 109 6 
309 1 331 1 113 1 278 2 338 3 91 3 283 1 187 1 254 3 34 2 78 1 231 1 285 1 258 2 286 2 233 1 346 1 79 1 289 1 318 1 145 1 325 4 133 2 272 3 305 1 173 1 
309 2 331 1 113 1 278 3 338 4 91 4 283 1 187 2 254 4 34 3 343 1 78 2 231 1 257 1 286 4 258 4 285 2 233 2 346 1 79 1 289 2 318 1 145 1 39 1 325 7 133 4 272 5 305 2 173 1 
256 1 
190 1 110 1 
367 1 
190 1 93 1 
190 3 93 1 148 1 376 2 279 1 51 1 
190 1 93 1 279 1 
190 1 323 1 
329 7 330 3 115 3 38 1 358 2 128 1 183 1 168 1 20 2 228 1 187 1 171 1 104 1 96 1 233 1 220 4 242 1 
329 7 330 3 115 3 38 1 358 2 128 1 183 1 168 1 20 2 228 1 187 1 171 1 104 1 96 1 233 1 220 4 242 1 
329 7 330 3 115 3 38 1 29 1 358 2 128 1 183 1 168 1 20 2 228 1 187 1 171 1 104 1 96 1 233 1 220 4 242 1 
329 31 309 3 204 1 330 15 332 1 115 10 181 1 45 1 358 3 183 2 228 2 187 4 95 1 78 3 96 5 345 1 233 4 144 1 289 3 38 1 147 3 128 2 269 2 168 1 20 5 104 1 171 1 375 1 66 4 42 1 137 1 156 1 220 16 242 2 
329 9 330 4 115 4 358 2 183 1 228 1 187 1 94 1 95 2 96 1 345 2 233 1 38 1 128 1 269 4 168 1 20 3 104 1 375 1 42 2 137 2 219 1 220 5 242 1 
70 1 139 1 116 1 207 1 90 2 227 1 314 1 315 1 11 1 361 1 98 1 364 2 58 1 15 1 146 1 348 1 294 1 59 1 18 1 297 1 214 1 81 1 324 1 170 1 373 1 200 1 154 1 354 1 86 2 328 1 
70 1 139 1 207 1 90 2 227 1 314 1 340 1 315 1 208 1 11 1 361 1 98 1 364 3 58 1 15 1 146 1 348 1 294 1 59 1 18 1 297 2 81 1 324 1 170 1 200 1 154 1 353 1 354 1 86 3 328 1 
70 1 139 1 207 1 90 2 314 1 315 1 208 1 11 1 361 1 364 2 58 1 15 1 146 1 348 1 294 1 59 1 297 2 81 1 324 1 170 1 200 1 353 1 354 1 86 2 328 1 
364 1 190 1 15 1 70 1 58 2 26 1 73 1 348 1 27 1 59 1 80 1 18 1 314 2 324 2 153 1 170 2 340 1 93 1 315 1 163 1 154 1 230 1 86 1 
364 1 15 1 70 1 58 1 146 1 348 1 116 1 59 1 294 1 207 1 18 1 90 2 214 1 227 1 81 1 314 1 324 1 170 1 315 1 208 1 200 1 154 1 11 1 361 1 86 1 98 1 
261 1 
0 1 1 1 224 1 338 5 339 1 50 2 91 2 283 1 141 1 93 1 142 1 10 2 230 1 346 1 190 1 145 1 15 1 291 4 348 2 17 2 59 1 193 1 352 1 62 1 153 1 202 3 109 6 70 2 310 2 114 2 73 2 205 1 74 1 160 1 315 2 120 1 254 5 34 2 265 1 267 1 79 1 365 1 319 2 320 2 369 1 270 1 325 2 169 1 82 1 133 2 41 1 272 2 87 1 173 1 327 1 
0 1 1 1 205 1 224 1 74 1 338 3 141 1 142 1 254 3 265 1 365 1 319 1 291 2 193 1 369 1 352 1 82 1 41 1 217 1 202 1 327 1 109 2 
0 1 1 1 205 1 224 1 74 1 338 3 91 1 141 1 283 1 142 1 10 1 254 3 265 1 365 1 291 3 193 1 369 1 352 1 82 1 41 1 217 1 202 1 109 1 327 1 
0 1 1 1 205 1 224 1 74 1 338 3 50 1 91 1 141 1 283 1 142 1 10 1 254 3 265 1 365 1 319 1 291 3 193 1 369 1 352 1 82 1 41 1 217 1 202 1 327 1 109 2 
0 1 1 1 224 1 338 5 50 4 91 5 141 1 283 5 142 1 10 4 288 1 145 1 291 6 292 1 17 2 193 1 352 1 196 1 62 1 202 3 109 7 114 2 310 2 205 1 74 1 247 1 254 5 34 2 265 1 267 1 365 1 79 1 319 4 320 2 369 1 129 1 82 1 169 1 41 1 133 1 217 1 272 1 173 1 327 1 
0 1 1 1 224 1 338 4 50 2 91 2 141 1 283 1 142 1 10 2 145 1 291 4 17 2 193 1 352 1 62 1 202 2 109 4 114 2 310 2 205 1 74 1 254 4 34 2 265 1 267 1 365 1 79 1 319 2 320 2 369 1 82 1 169 1 325 2 41 1 133 1 272 1 173 1 87 1 327 1 
0 1 1 1 310 2 114 2 205 1 224 1 74 1 338 4 50 2 91 1 283 1 141 1 142 1 10 2 254 4 34 2 288 1 265 1 267 1 365 1 79 1 319 2 320 2 145 1 291 4 292 1 17 2 193 1 369 1 352 1 129 1 62 1 82 1 169 1 133 1 41 1 202 2 272 1 173 1 109 4 327 1 
0 1 1 1 310 2 114 2 205 1 224 1 74 1 338 4 50 2 91 1 283 1 141 1 142 1 10 2 254 4 34 2 288 1 265 1 267 1 365 1 79 1 319 2 320 2 145 1 291 4 292 1 17 2 193 1 369 1 352 1 129 1 62 1 82 1 169 1 133 1 41 1 202 2 272 1 173 1 109 4 327 1 
0 1 88 2 1 1 114 2 205 1 224 1 74 1 338 4 50 2 91 1 283 1 141 1 7 2 142 1 10 2 254 4 288 1 265 1 267 1 365 1 79 1 319 2 145 1 291 4 17 2 101 1 193 1 369 1 352 1 150 1 298 1 325 2 82 1 169 1 133 1 41 1 202 2 272 1 173 1 109 4 327 1 
0 1 1 1 310 2 114 2 205 1 224 1 74 1 338 4 50 3 91 1 283 1 141 1 142 1 10 3 254 4 34 2 288 1 265 1 267 1 79 1 365 1 319 3 320 2 145 1 291 5 292 1 17 2 193 1 369 1 352 1 196 1 129 1 62 1 169 1 82 1 133 1 41 1 202 2 272 1 173 1 327 1 109 5 
0 1 1 1 310 2 114 2 205 1 224 1 74 1 338 4 50 3 91 1 283 1 141 1 142 1 10 3 254 4 34 2 288 1 265 1 267 1 79 1 365 1 319 3 320 2 145 1 291 5 292 1 17 2 193 1 369 1 352 1 196 1 129 1 62 1 169 1 82 1 133 1 41 1 202 2 272 1 173 1 327 1 109 5 
0 1 88 2 1 1 224 1 338 4 50 2 91 1 141 1 283 1 7 2 142 1 10 2 145 1 291 4 17 2 101 1 193 1 352 1 202 2 109 4 114 2 205 1 74 1 254 4 265 1 267 1 365 1 79 1 319 2 369 1 82 1 169 1 325 2 41 1 133 1 272 1 173 1 87 1 327 1 
23 1 276 1 172 1 95 1 256 1 42 1 137 1 269 2 345 1 
69 1 329 14 309 2 23 2 330 6 115 2 181 1 245 1 187 2 188 1 55 1 95 2 78 1 96 1 262 1 345 2 233 1 290 1 289 2 147 3 212 11 195 1 269 4 19 1 322 4 20 1 172 1 66 3 42 2 137 2 273 11 156 1 220 8 
329 2 23 1 25 1 330 1 205 1 245 1 141 1 55 1 95 1 262 1 345 1 265 1 36 1 351 1 368 1 269 2 322 1 19 1 300 1 172 1 42 1 137 1 135 1 85 1 308 1 327 1 220 1 
329 20 138 2 330 10 279 2 183 1 141 3 187 3 93 2 284 1 55 2 95 3 96 4 345 3 233 3 289 2 190 2 15 2 348 3 349 1 59 2 236 2 19 1 20 4 300 1 104 1 239 2 107 2 308 1 155 2 203 2 309 2 23 3 25 1 70 3 73 1 115 8 358 1 245 1 118 2 315 3 208 1 209 2 78 2 262 1 265 3 38 1 212 7 128 1 269 6 368 1 322 7 168 1 172 3 42 3 137 3 273 7 44 1 327 1 220 10 
329 2 23 2 25 1 330 1 276 1 70 8 73 2 180 1 30 1 337 1 117 1 141 1 54 2 93 2 315 7 208 1 252 1 95 2 230 1 262 1 345 2 265 1 190 3 15 2 348 8 59 2 368 1 269 4 370 1 19 1 300 1 153 1 172 2 373 1 42 2 271 1 137 2 327 1 220 1 
309 1 329 3 23 1 25 1 330 2 115 1 245 1 52 1 32 1 141 1 187 1 95 1 78 1 345 1 233 1 265 1 289 1 212 1 269 2 322 1 20 1 300 1 172 1 303 1 42 1 137 1 273 1 327 1 220 1 
329 2 23 1 289 1 276 1 115 1 212 1 269 2 235 1 322 1 187 1 172 1 95 1 42 1 96 1 137 1 273 1 345 1 220 2 
329 2 23 1 355 1 330 2 276 1 115 1 212 1 269 2 322 1 20 1 172 1 95 1 42 1 78 1 137 1 273 1 345 1 233 1 
309 1 329 4 23 1 330 2 276 1 115 2 187 1 95 1 78 1 96 1 345 1 233 1 289 1 212 2 269 2 322 2 20 1 172 1 42 1 137 1 273 2 220 2 
329 2 23 1 289 1 115 1 180 1 212 1 269 2 235 1 322 1 187 1 172 1 95 1 42 1 96 1 137 1 273 1 345 1 220 2 
329 2 23 1 355 1 330 2 115 1 180 1 212 1 269 2 322 1 20 1 172 1 95 1 42 1 78 1 137 1 273 1 345 1 233 1 
309 1 329 4 23 1 330 2 180 1 115 2 187 1 95 1 78 1 96 1 345 1 233 1 289 1 212 2 269 2 322 2 20 1 172 1 42 1 137 1 273 2 220 2 
329 4 309 1 23 1 330 2 115 2 187 1 95 1 78 1 96 1 345 1 233 1 289 1 212 2 269 2 322 2 20 1 172 1 42 1 137 1 273 2 220 2 
329 2 138 1 23 1 330 1 70 1 73 1 279 1 118 1 141 1 93 1 315 1 209 1 55 1 95 1 262 1 345 1 265 1 190 1 15 1 348 1 59 1 269 2 19 1 172 1 42 1 137 1 220 1 203 1 
329 2 23 1 330 1 70 1 73 1 279 1 141 1 93 1 315 1 209 1 55 1 95 1 262 1 345 1 266 1 265 1 363 1 190 1 15 1 348 1 59 1 269 2 19 1 63 1 172 1 42 1 137 1 220 1 
309 1 329 4 23 1 330 2 115 2 245 1 187 1 95 1 78 1 96 1 345 1 233 1 289 1 212 2 269 2 322 2 20 1 172 1 42 1 137 1 273 2 220 2 
329 4 138 1 309 1 23 1 330 2 70 1 115 2 279 1 118 1 187 1 141 1 93 1 315 1 209 1 95 1 78 1 96 1 345 1 233 1 265 1 289 1 190 1 15 1 348 1 212 2 59 1 269 2 322 2 20 1 172 1 373 1 239 1 42 1 137 1 273 2 220 2 203 1 
309 1 329 3 23 1 330 1 25 1 115 1 245 1 52 1 32 1 141 1 187 1 95 1 78 1 96 1 345 1 233 1 362 1 265 1 289 1 212 1 269 2 322 1 300 1 172 1 42 1 137 1 273 1 327 1 220 2 
95 1 46 1 42 1 134 1 137 1 269 2 219 1 296 1 345 1 53 1 
95 1 46 1 42 1 134 1 137 1 269 2 219 1 296 1 345 1 53 1 
95 1 46 1 42 1 134 1 137 1 269 2 219 1 296 1 345 1 53 1 
95 1 46 1 42 1 134 1 137 1 269 2 219 1 296 1 345 1 53 1 
95 1 46 1 42 1 134 1 137 1 269 2 219 1 296 1 345 1 53 1 
186 1 333 1 251 1 105 1 67 1 263 1 167 1 122 1 14 1 68 1 
106 1 158 1 
152 1 251 1 105 1 47 1 67 1 122 1 243 1 14 1 68 1 
112 1 333 1 225 1 338 1 103 1 91 1 186 1 185 2 105 1 251 1 254 1 67 1 57 1 263 1 122 1 264 1 68 1 14 1 
112 1 333 1 225 1 338 1 103 1 91 1 186 1 185 2 105 1 251 1 254 1 67 1 57 1 263 1 122 1 264 1 68 1 14 1 
112 1 333 1 225 1 338 1 103 1 91 1 186 1 185 2 105 1 251 1 254 1 67 1 57 1 263 1 122 1 264 1 68 1 14 1 
321 1 65 1 302 1 
321 1 65 1 302 1 
130 1 232 1 
130 1 65 1 232 1 
311 1 240 1 
112 1 275 1 25 2 311 1 278 1 338 1 185 1 141 2 6 1 251 1 254 1 55 1 264 1 122 1 265 2 14 1 300 2 105 1 374 1 106 1 240 1 136 1 67 1 305 1 327 2 68 1 158 1 
321 1 302 1 
130 1 65 1 232 1 
329 2 23 1 330 1 70 2 28 1 89 1 245 1 246 1 117 1 141 2 54 2 93 1 315 2 95 1 262 1 345 1 265 2 190 1 15 1 348 2 59 1 269 2 370 1 19 1 172 1 64 1 42 1 137 1 241 1 327 2 220 1 
166 1 15 1 70 2 146 1 348 2 59 1 127 1 294 1 207 1 90 2 81 1 170 1 315 2 208 1 373 1 200 1 344 1 361 1 98 1 
166 1 70 1 15 1 146 1 348 1 294 1 59 1 207 1 90 2 81 1 170 1 315 1 208 1 200 1 361 1 316 1 98 1 
190 1 15 1 70 1 26 1 73 1 348 1 59 1 127 1 170 1 153 1 93 1 315 1 84 1 230 1 
166 1 70 1 15 1 146 1 348 1 59 1 127 1 294 1 207 1 90 2 81 1 170 1 315 1 208 1 200 1 344 1 361 1 98 1 
313 1 
256 1 
310 1 338 1 91 2 283 1 254 1 34 1 79 1 145 1 320 1 62 1 169 1 325 1 133 1 202 1 272 1 173 1 109 1 
0 2 277 1 279 1 338 5 91 7 283 1 187 2 93 1 286 6 346 2 233 2 289 2 190 6 15 1 145 3 348 1 148 1 59 2 237 2 301 1 22 1 202 3 107 2 110 3 109 5 309 2 70 1 73 1 244 2 160 1 315 1 77 2 254 5 34 6 78 2 258 6 79 3 215 2 169 3 325 12 133 7 376 2 272 8 173 3 221 2 
309 2 338 1 160 1 49 1 182 1 91 5 187 2 283 2 342 1 210 1 254 1 34 3 78 2 286 5 258 5 346 1 233 2 317 1 79 2 289 2 145 2 347 2 147 1 126 1 213 1 325 6 169 2 133 5 66 1 202 1 272 8 108 1 173 2 109 1 156 1 
25 1 222 1 205 1 338 1 49 1 183 1 52 1 141 1 187 2 254 1 233 1 265 1 79 1 145 1 347 2 293 1 61 1 128 1 149 1 129 1 168 1 169 1 300 1 133 2 272 2 173 1 326 1 327 1 
79 1 145 1 197 1 91 1 169 1 283 1 92 1 133 1 272 1 173 1 
309 2 289 2 91 5 325 10 187 2 133 5 34 5 78 2 107 1 258 5 286 5 272 5 233 2 
283 1 254 1 338 1 202 1 109 1 91 1 
175 1 70 4 113 1 73 2 338 3 339 1 160 2 93 1 120 1 315 4 254 3 230 1 12 1 346 2 79 2 190 1 15 1 145 2 348 4 100 1 59 1 169 1 153 1 238 2 133 2 202 2 272 2 173 2 109 4 
329 1 138 1 23 1 330 1 25 2 70 1 71 1 73 1 279 1 118 1 52 2 141 3 93 1 315 1 209 1 55 1 95 1 262 1 345 1 265 3 190 1 15 1 348 1 293 1 59 1 269 2 300 2 172 1 42 1 137 1 327 2 203 1 
79 1 145 1 160 1 91 2 325 2 169 1 283 1 133 1 34 1 286 1 272 1 173 1 346 1 
251 1 194 1 14 1 
186 1 131 1 251 1 311 1 14 1 
251 1 194 1 14 1 
251 1 194 1 14 1 
5 1 251 1 14 1 
5 1 251 1 14 1 
5 1 251 1 14 1 
251 1 14 1 
67 1 122 1 
329 8 330 4 115 2 358 1 183 1 187 1 342 1 95 1 345 1 233 1 147 1 38 1 128 1 269 2 168 1 20 2 104 1 66 1 42 1 137 1 219 1 156 1 220 4 
329 11 309 1 330 5 115 3 181 1 358 1 183 1 187 2 342 1 95 2 96 1 345 2 233 1 289 1 37 1 38 1 147 1 128 1 269 4 168 1 20 2 104 1 66 2 42 2 137 2 219 1 156 1 220 6 
329 19 309 2 330 10 115 4 358 1 182 1 183 1 187 3 342 1 210 1 95 3 78 2 96 1 345 3 233 3 289 2 37 1 38 1 147 1 126 1 128 1 213 1 269 6 168 1 20 3 104 1 375 1 66 1 42 3 137 3 219 1 156 1 220 9 
329 17 309 2 330 7 115 5 358 1 182 1 183 1 187 3 342 1 210 1 95 3 78 1 96 2 345 3 233 2 289 2 37 1 38 1 147 1 126 1 128 1 213 1 269 6 168 1 20 3 104 1 375 1 66 1 42 3 137 3 219 1 156 1 220 10 
329 8 330 4 115 2 358 1 183 1 187 1 342 1 95 1 345 1 233 1 147 1 38 1 128 1 269 2 168 1 20 2 104 1 66 1 42 1 137 1 219 1 156 1 220 4 
329 12 309 2 330 6 115 2 182 1 187 2 342 1 210 1 95 1 78 2 96 1 345 1 233 2 289 2 147 1 126 1 213 1 269 2 20 1 66 1 42 1 137 1 219 1 156 1 220 6 
329 18 309 2 330 8 115 5 358 1 182 1 183 1 187 3 342 1 210 1 95 4 78 1 96 2 345 4 233 2 289 2 37 1 38 1 147 1 126 1 128 1 213 1 269 8 168 1 20 3 104 1 375 2 66 1 42 4 137 4 219 1 156 1 220 10 
329 16 309 3 330 7 115 6 182 1 187 3 342 1 210 1 95 4 78 2 96 3 97 1 345 4 233 2 289 3 147 1 126 1 213 1 269 8 20 3 375 2 66 1 42 4 137 4 219 1 156 1 220 9 
329 7 330 4 38 2 115 6 128 3 183 3 168 1 20 3 104 1 187 1 96 3 233 1 220 3 
329 18 309 2 330 8 115 4 358 1 182 1 183 1 187 3 342 1 210 1 95 4 78 1 96 1 97 1 345 4 233 2 289 2 38 1 147 1 126 1 128 1 213 1 269 8 168 1 20 3 104 1 375 2 66 1 42 4 137 4 219 1 156 1 220 10 
329 8 330 4 115 3 38 1 358 1 128 1 269 4 183 1 168 1 20 2 187 1 104 1 375 1 95 2 42 2 96 1 137 2 345 2 233 1 220 4 
256 1 
309 1 329 4 289 1 330 2 37 1 115 2 269 2 20 1 187 1 95 1 78 1 42 1 137 1 96 1 345 1 233 1 220 2 
329 7 309 1 289 1 330 4 147 1 115 2 181 1 20 1 187 1 66 2 78 1 96 1 233 1 156 1 220 3 
309 2 329 23 330 12 115 9 181 1 358 1 183 2 187 3 95 2 78 2 96 4 345 2 233 3 289 2 290 1 38 1 147 2 191 1 195 1 128 2 269 4 168 1 20 5 104 1 375 2 66 2 42 2 137 2 220 11 
329 1 330 1 66 1 
329 1 147 1 220 1 
329 6 309 1 289 1 330 3 37 1 115 3 269 2 20 2 187 1 95 1 42 1 78 1 137 1 107 1 96 1 345 1 220 3 233 1 
329 12 309 2 330 6 115 2 182 1 187 2 342 1 210 1 95 1 78 2 96 1 345 1 233 2 289 2 147 1 126 1 213 1 269 2 20 1 66 1 42 1 137 1 219 1 156 1 220 6 
329 6 330 3 115 2 128 1 183 1 168 1 20 1 187 1 96 1 220 3 233 1 
329 3 330 2 115 2 38 1 191 1 128 1 269 2 183 1 20 1 104 1 375 1 95 1 42 1 96 1 137 1 345 1 220 1 
329 10 330 5 115 5 128 2 269 2 183 2 149 1 168 1 20 3 187 2 95 1 42 1 137 1 96 2 219 1 345 1 220 5 233 2 
329 2 289 1 115 1 269 2 187 1 95 1 42 1 137 1 96 1 219 1 345 1 220 2 
309 1 329 4 289 1 330 2 115 2 269 2 20 1 187 1 95 1 78 1 42 1 137 1 96 1 219 1 345 1 233 1 220 2 
329 3 330 2 191 1 115 2 128 1 269 6 183 1 20 1 375 1 95 3 42 3 137 3 96 1 219 1 97 1 345 3 220 1 
329 34 309 3 204 1 330 18 115 12 45 1 181 1 358 1 183 3 187 5 95 5 78 3 96 5 97 1 345 5 233 5 144 1 289 3 37 1 38 1 191 1 147 3 128 3 269 10 168 2 20 7 104 1 375 2 66 4 42 5 137 5 219 1 156 1 220 16 
141 1 8 1 55 1 74 1 143 1 327 1 265 1 
24 1 336 1 74 1 282 1 371 1 141 1 8 1 55 1 255 1 143 1 327 1 265 1 
70 1 315 1 348 1 73 1 256 1 
190 1 25 1 70 1 15 1 73 1 348 1 59 1 279 1 368 1 300 1 141 2 93 1 315 1 209 1 55 1 327 1 203 1 265 2 
190 3 25 1 70 1 15 1 348 1 205 1 268 1 224 1 59 1 279 2 368 1 323 1 82 1 300 2 141 2 93 2 315 1 209 1 238 1 55 1 327 2 203 1 265 2 
25 1 70 2 205 1 224 1 279 2 141 2 93 2 315 2 209 1 55 1 265 2 363 1 190 3 15 1 348 2 59 1 268 1 234 1 368 1 323 1 300 2 82 1 238 1 327 2 
0 1 174 1 70 3 73 1 279 1 338 2 91 1 283 1 93 1 315 3 254 2 123 1 190 4 15 1 348 3 59 1 268 1 234 1 323 1 238 1 376 1 109 1 110 1 
0 1 190 4 70 3 15 1 73 1 348 3 268 1 59 1 244 1 234 1 279 1 338 2 91 1 323 1 283 1 93 1 315 3 238 1 254 2 376 1 110 1 109 1 
15 1 70 1 315 1 348 1 59 1 30 1 
190 3 70 7 15 2 366 1 73 2 348 7 148 1 30 1 59 3 337 1 279 1 248 1 370 1 162 1 54 1 93 2 315 6 208 1 373 1 252 1 271 1 
329 6 138 1 23 2 330 3 25 1 70 1 115 2 358 1 28 1 279 1 245 1 118 1 183 1 187 1 141 2 93 1 315 1 209 1 55 2 95 2 345 2 233 1 265 2 190 1 15 1 38 1 348 1 212 1 59 1 128 1 368 1 269 4 236 1 322 1 168 1 20 2 300 1 104 1 172 2 373 1 239 1 42 2 137 2 273 1 220 3 327 1 203 1 
0 1 70 1 73 1 278 1 244 1 338 3 91 1 283 1 92 1 315 1 254 3 79 2 190 2 145 2 348 1 100 1 197 1 237 1 215 1 169 2 133 1 376 1 202 1 272 1 173 2 221 1 110 1 109 2 
190 2 70 2 15 1 348 2 148 1 30 1 59 2 279 1 301 1 93 1 315 2 373 1 376 1 
190 1 70 4 15 1 73 1 348 4 59 1 234 1 250 1 153 1 93 1 315 4 373 1 230 1 
190 1 70 2 15 1 348 2 72 1 59 2 279 1 248 1 162 1 93 1 315 2 238 1 44 1 43 1 
81 1 15 1 70 1 146 1 315 1 348 1 73 1 200 1 59 1 90 1 
190 1 15 1 93 1 70 2 315 2 208 1 348 2 373 1 59 1 246 1 370 1 
190 3 70 5 15 2 73 1 348 5 59 2 370 1 250 1 153 1 93 2 315 4 373 1 238 1 252 1 230 1 271 1 
190 3 70 5 15 2 73 1 348 5 59 2 370 1 250 1 153 1 132 1 93 2 315 4 373 1 238 1 230 1 271 1 
363 1 190 1 25 1 70 1 15 1 73 1 348 1 59 1 279 1 368 1 300 1 141 2 93 1 315 1 209 1 55 1 327 1 265 2 
190 1 70 1 15 1 366 1 348 1 148 1 59 2 279 1 248 1 162 1 93 1 315 1 238 1 
299 1 141 1 64 1 89 1 241 1 312 1 327 1 161 1 265 1 
356 1 161 1 13 1 
299 1 55 1 102 1 312 1 161 1 
0 1 16 1 356 1 205 1 278 1 224 1 193 1 338 2 102 2 312 2 161 1 91 1 82 1 299 2 40 1 283 1 254 2 55 1 13 1 
256 1 
364 1 139 1 154 1 18 1 354 1 86 1 328 1 
314 1 364 1 58 1 
364 3 176 1 229 1 139 1 304 2 154 1 18 1 354 1 281 1 86 3 214 1 328 1 
364 2 139 1 154 1 359 1 18 1 354 1 297 1 86 2 328 1 
364 1 139 1 146 1 223 1 207 1 18 1 90 1 214 1 360 1 154 1 86 1 
364 1 139 1 154 1 18 1 354 1 86 1 214 1 
364 1 154 1 18 1 354 2 86 1 214 1 328 1 
364 2 216 1 139 1 154 2 159 1 280 1 18 2 354 1 86 2 214 1 
364 1 35 1 18 1 214 1 76 1 154 1 354 1 86 1 328 1 
364 2 139 1 146 1 207 1 18 1 90 2 249 1 214 1 297 1 81 1 154 1 354 1 361 1 86 2 328 1 
364 4 178 1 139 2 359 1 18 2 214 1 297 2 360 1 154 2 354 1 260 1 86 4 328 1 
364 1 139 1 154 1 18 1 354 1 86 1 214 1 328 1 
364 4 35 1 139 3 18 1 281 1 297 2 360 1 229 1 304 1 154 1 354 2 260 1 86 4 328 2 
364 2 139 1 18 1 119 1 214 1 297 1 341 1 154 1 354 1 307 1 86 2 328 1 
364 3 139 1 60 1 18 1 281 1 214 1 229 2 154 1 304 2 354 1 86 3 328 1 
139 2 253 1 306 2 189 1 
364 1 154 1 18 1 86 1 214 1 75 1 
364 2 139 1 154 1 56 1 18 1 354 1 297 1 86 2 214 1 328 1 
184 1 
364 1 139 1 154 1 18 1 354 1 86 1 214 1 328 1 
364 3 139 1 18 1 297 1 214 1 154 1 304 1 56 1 354 1 86 3 328 1 
35 1 360 1 139 1 260 1 
139 1 354 1 

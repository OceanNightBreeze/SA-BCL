#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (171,296) (171,296) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (267,290) 65 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (171,296) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (4,72,266) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 169 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 169 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 61 120 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (267,290) (267,290) (151,218) 264 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (267,290) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (267,290) (267,290) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 22 203 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (171,296) (171,296) 163 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (267,290) 65 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 63 (148,233) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 63 (148,233) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 63 (310,323) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 63 (310,323) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 29 1 78 1 68 1 194 1 69 1 271 1 48 3 23 2 136 2 332 1 209 2 64 3 
112 1 279 1 68 2 194 4 69 1 46 2 168 1 48 9 23 5 145 2 8 1 347 1 253 1 101 1 56 1 234 1 29 1 78 6 325 1 15 1 257 2 236 2 271 3 238 1 136 2 332 1 209 2 64 9 
112 1 279 1 68 2 194 4 69 1 46 2 168 1 48 9 23 5 145 2 8 1 347 1 253 1 101 1 56 1 234 1 29 1 78 6 325 1 15 1 257 2 236 2 271 3 238 1 136 2 332 1 209 2 64 9 
112 1 279 1 68 2 194 5 69 1 46 2 168 1 48 10 23 6 145 2 8 1 347 1 253 1 101 1 56 1 234 1 29 1 78 7 325 1 15 1 257 2 236 2 271 4 238 1 136 2 332 1 209 2 64 10 
112 1 279 1 68 2 194 3 69 1 46 2 48 7 23 4 145 2 8 1 347 1 253 1 101 1 56 1 234 1 29 1 78 4 325 1 15 1 257 2 236 1 271 2 238 1 136 2 332 1 209 2 64 7 
101 1 78 3 15 1 236 2 257 1 194 2 69 1 46 1 271 1 168 1 48 4 23 3 145 1 136 1 8 1 332 1 209 1 64 4 
101 1 279 1 68 1 69 1 46 1 48 2 249 1 23 1 289 1 145 1 136 1 332 1 347 1 209 1 64 2 187 1 
194 4 68 1 69 1 46 1 70 1 168 1 48 9 23 5 145 1 8 1 253 1 101 1 56 1 29 1 78 7 15 1 236 2 257 1 18 1 271 3 136 2 332 1 209 2 64 9 
194 4 68 1 69 1 46 1 70 1 168 1 48 9 23 5 145 1 8 1 253 1 101 1 56 1 29 1 78 7 15 1 236 2 257 1 18 1 271 3 136 2 332 1 209 2 64 9 
66 1 351 1 129 1 171 1 250 1 266 1 86 1 296 1 
42 1 
351 2 42 1 189 1 207 1 38 1 45 1 266 2 86 1 
73 2 351 5 42 1 352 1 189 2 161 2 140 1 45 1 340 1 164 1 165 1 286 1 133 1 110 1 251 2 38 1 86 2 266 5 62 1 
42 1 169 1 38 1 
349 1 42 1 166 2 
66 2 129 1 250 2 
65 1 66 1 129 1 27 1 90 2 267 1 47 1 359 2 287 2 197 1 250 1 293 1 
66 1 129 1 171 1 250 1 
351 1 42 1 43 1 278 1 4 1 195 1 230 1 72 1 205 1 223 1 291 1 38 1 266 1 361 1 
4 1 66 1 250 1 
351 1 189 1 227 1 266 1 86 1 
351 2 42 1 189 1 38 1 45 1 137 1 266 2 86 1 
351 1 189 1 266 1 
173 1 66 1 43 1 174 1 116 1 195 1 230 1 250 1 146 1 361 1 
169 1 
258 1 66 3 250 1 
66 1 
173 1 66 1 174 1 250 1 
66 2 258 1 174 1 261 1 250 1 
66 1 43 1 334 1 116 1 258 1 195 1 230 1 291 1 361 1 
66 1 258 1 261 1 
66 1 174 1 250 1 
359 1 27 1 287 1 90 1 
359 1 27 1 287 1 90 1 
270 1 221 2 225 1 274 1 314 1 122 1 214 1 252 1 
66 1 328 1 
66 1 258 1 359 1 27 1 287 1 261 1 90 1 
66 4 43 1 174 1 334 1 261 1 116 1 258 2 195 1 230 1 96 1 107 1 250 1 291 1 361 1 
66 1 
17 1 232 1 39 1 
74 1 17 2 71 1 58 1 208 1 39 2 
17 1 39 1 
17 1 39 1 
71 1 58 1 
71 1 58 1 
71 1 58 1 
17 1 39 1 298 1 
17 1 39 1 298 1 
17 1 39 1 298 1 
17 1 346 1 39 1 
17 1 346 1 39 1 
17 1 346 1 39 1 
74 1 157 1 351 2 42 1 191 1 190 2 192 1 354 2 315 1 341 1 17 2 142 1 285 2 7 3 329 2 135 1 39 2 266 2 100 2 
128 1 351 1 66 2 333 1 190 1 77 1 354 1 115 1 339 1 17 1 285 1 232 1 35 1 7 1 135 1 329 1 266 1 39 1 319 1 
46 2 132 1 97 2 257 1 187 1 
46 1 145 1 257 1 
46 1 145 1 187 1 
46 3 132 1 97 1 257 2 297 1 187 1 
46 2 132 1 97 1 257 1 125 1 187 1 
260 1 333 1 42 2 336 1 44 2 189 1 193 1 161 1 140 3 339 1 45 1 340 2 229 2 166 3 6 1 251 1 172 1 266 5 147 1 348 1 349 1 73 1 351 5 324 1 103 1 302 1 306 2 35 1 330 1 110 1 86 4 38 1 
260 3 42 5 336 3 44 6 189 6 193 3 161 2 140 8 339 4 227 5 45 1 340 6 281 1 166 9 6 2 251 2 172 2 266 9 147 1 349 3 73 2 351 9 352 1 26 1 324 3 302 3 28 1 150 1 201 1 307 1 306 6 110 1 86 7 38 1 156 5 
260 1 42 3 336 1 44 2 161 1 193 1 140 3 339 1 340 2 229 1 6 1 166 4 251 1 172 1 266 3 348 1 349 2 73 1 351 3 352 1 324 1 103 1 302 1 306 2 38 1 86 2 
260 2 42 4 336 2 44 4 161 1 193 2 140 5 339 2 340 4 281 1 229 2 166 7 6 1 251 1 172 1 266 4 348 1 349 3 73 1 351 4 352 1 26 1 324 2 103 1 302 2 307 1 306 4 38 1 86 3 
80 1 
182 1 169 1 327 1 
182 1 22 1 
182 1 67 1 
182 3 212 1 176 1 327 2 67 1 326 1 
182 1 67 1 326 1 
182 1 139 1 
260 1 54 2 198 1 175 1 159 1 88 1 336 1 20 1 228 1 93 3 33 7 59 1 308 3 217 2 123 1 311 1 10 1 40 4 
260 4 159 2 88 1 160 3 336 4 20 1 193 3 228 2 214 1 93 15 316 1 167 1 217 3 122 1 53 1 52 1 123 1 10 2 54 5 175 5 324 3 75 1 302 3 356 1 270 1 221 2 33 31 59 2 274 1 237 1 60 4 308 10 311 1 40 16 
260 1 159 1 336 1 20 1 228 1 214 2 93 4 217 2 122 2 123 1 10 1 54 3 175 1 81 1 270 2 221 4 33 9 360 1 59 1 274 2 237 1 308 4 311 1 40 5 
260 1 54 2 175 1 159 1 88 1 336 1 20 1 228 1 93 3 33 7 59 1 308 3 217 2 311 1 123 1 10 1 40 4 
260 1 54 2 175 1 159 1 88 1 336 1 20 1 228 1 93 3 33 7 59 1 308 3 217 2 311 1 123 1 10 1 40 4 
158 2 89 1 226 1 90 1 338 1 213 1 67 1 68 2 342 1 94 1 287 1 48 1 288 2 350 2 27 1 177 1 202 1 359 1 182 1 36 1 136 1 209 1 64 1 
158 1 90 1 226 1 68 1 282 1 46 2 287 1 48 1 145 1 288 1 294 1 297 1 350 1 101 1 199 1 102 1 177 1 235 1 257 1 359 1 272 1 152 1 136 1 209 1 64 1 187 1 
158 1 90 1 226 1 68 1 69 1 282 1 46 2 246 1 287 1 48 2 23 1 145 1 288 1 297 1 350 1 101 1 199 1 102 1 177 1 78 1 235 1 257 1 359 1 272 1 152 1 136 1 332 1 209 1 64 2 187 1 
1 1 158 1 90 1 226 1 213 1 68 1 69 1 282 1 46 2 287 1 48 3 23 1 145 1 288 1 294 1 297 1 350 1 199 1 177 1 78 2 235 1 257 1 359 1 272 1 152 1 136 1 332 1 209 1 64 3 187 1 
1 1 158 1 90 1 226 1 68 1 69 1 46 2 287 1 48 2 23 1 288 1 145 1 294 1 297 1 350 1 199 1 177 1 78 2 235 1 257 1 359 1 272 1 332 1 64 2 187 1 
304 1 
42 2 43 1 2 2 189 6 90 2 226 1 140 2 45 3 262 1 5 2 92 1 4 1 195 1 230 1 266 5 149 4 202 1 205 1 275 2 109 1 110 1 239 1 335 1 278 1 243 2 161 1 67 1 340 2 342 1 284 1 166 2 215 1 119 2 287 2 248 1 72 1 219 2 172 1 251 1 291 1 124 1 349 2 73 1 351 5 220 2 27 2 177 1 359 2 182 1 223 1 134 1 38 1 361 1 363 1 186 1 
43 1 335 1 189 2 278 1 45 1 4 1 195 1 215 1 230 1 72 1 291 1 124 1 266 3 351 3 149 2 205 1 223 1 207 1 239 1 275 1 361 1 186 1 
43 1 42 1 189 1 335 1 278 1 45 1 4 1 195 1 215 1 230 1 119 1 72 1 291 1 124 1 266 3 351 3 149 3 205 1 223 1 207 1 239 1 38 1 361 1 186 1 
43 1 42 1 335 1 189 2 278 1 45 1 4 1 5 1 195 1 215 1 230 1 119 1 72 1 291 1 124 1 266 3 351 3 149 3 205 1 223 1 207 1 239 1 275 1 38 1 361 1 186 1 
43 1 42 5 2 2 189 7 140 1 45 3 5 4 4 1 195 1 143 1 230 1 266 5 149 6 205 1 207 1 275 4 239 1 110 1 109 1 335 1 278 1 161 1 243 2 340 1 284 1 215 1 119 4 72 1 291 1 251 1 219 2 124 1 73 1 349 2 351 5 299 1 220 2 131 1 31 1 223 1 309 1 38 5 361 1 186 1 
42 2 43 1 2 2 189 4 335 1 278 1 243 2 161 1 140 1 45 2 340 1 5 2 4 1 195 1 284 1 166 2 215 1 119 2 230 1 72 1 219 2 251 1 291 1 124 1 266 4 349 2 73 1 351 4 149 4 220 2 205 1 223 1 134 1 275 2 109 1 239 1 110 1 38 1 361 1 186 1 
42 1 43 1 2 2 189 4 335 1 278 1 243 2 161 1 140 1 45 2 340 1 5 2 4 1 284 1 195 1 143 1 215 1 119 2 230 1 72 1 219 2 291 1 251 1 124 1 266 4 349 2 73 1 351 4 149 4 220 2 131 1 205 1 223 1 309 1 275 2 109 1 239 1 110 1 38 1 361 1 186 1 
42 1 43 1 2 2 189 4 335 1 278 1 243 2 161 1 140 1 45 2 340 1 5 2 4 1 284 1 195 1 143 1 215 1 119 2 230 1 72 1 219 2 291 1 251 1 124 1 266 4 349 2 73 1 351 4 149 4 220 2 131 1 205 1 223 1 309 1 275 2 109 1 239 1 110 1 38 1 361 1 186 1 
42 1 43 1 189 4 335 1 278 1 161 1 140 1 45 2 340 1 5 2 4 1 195 1 166 2 143 1 215 1 119 2 230 1 72 1 219 2 291 1 251 1 124 1 266 4 320 2 295 1 126 1 73 1 351 4 149 4 220 2 205 1 223 1 275 2 109 1 239 1 184 1 110 1 38 1 361 1 41 2 186 1 
42 1 43 1 2 2 335 1 189 5 278 1 243 2 161 1 140 1 45 2 340 1 4 1 5 3 284 1 195 1 143 1 215 1 230 1 119 3 72 1 219 2 251 1 291 1 124 1 266 4 349 2 73 1 351 4 299 1 149 5 220 2 131 1 205 1 223 1 309 1 109 1 110 1 239 1 275 3 38 1 361 1 186 1 
42 1 43 1 2 2 335 1 189 5 278 1 243 2 161 1 140 1 45 2 340 1 4 1 5 3 284 1 195 1 143 1 215 1 230 1 119 3 72 1 219 2 251 1 291 1 124 1 266 4 349 2 73 1 351 4 299 1 149 5 220 2 131 1 205 1 223 1 309 1 109 1 110 1 239 1 275 3 38 1 361 1 186 1 
42 1 43 1 189 4 335 1 278 1 161 1 140 1 45 2 340 1 5 2 4 1 195 1 166 2 215 1 119 2 230 1 72 1 219 2 251 1 291 1 124 1 266 4 320 2 295 1 73 1 351 4 149 4 220 2 205 1 223 1 134 1 275 2 109 1 239 1 110 1 38 1 361 1 41 2 186 1 
225 1 27 1 90 1 214 1 280 1 269 1 221 2 270 1 359 1 33 1 274 1 287 1 122 1 276 1 40 1 252 1 
260 1 66 1 225 1 336 1 193 1 214 1 93 1 122 1 250 1 252 1 174 1 301 1 324 1 302 1 270 1 221 2 33 2 274 1 83 1 40 1 
260 1 54 1 225 1 159 1 20 1 314 1 214 1 221 2 270 1 33 2 59 1 274 1 169 1 217 1 308 1 122 1 311 1 123 1 40 2 252 1 
225 1 160 1 301 1 214 1 221 2 270 1 93 1 33 2 274 1 120 1 60 1 61 1 122 1 40 1 252 1 
66 1 225 1 301 1 261 1 255 1 104 1 214 1 280 1 258 1 93 1 221 2 270 1 33 2 274 1 49 1 122 1 40 1 252 1 
66 1 225 1 301 1 27 1 261 1 90 1 267 1 151 1 104 1 214 1 258 1 93 1 359 1 221 2 270 1 33 1 287 1 274 1 264 1 122 1 290 1 252 1 
260 1 225 1 302 1 314 1 214 1 221 2 270 1 33 1 274 1 122 1 155 1 252 1 40 1 
225 1 324 1 336 1 314 1 214 1 221 2 270 1 93 1 33 1 305 1 274 1 122 1 252 1 
260 1 225 1 336 1 324 1 302 1 314 1 193 1 214 1 93 1 221 2 270 1 33 2 274 1 122 1 252 1 40 1 
260 1 225 1 302 1 214 1 269 1 221 2 270 1 33 1 274 1 122 1 155 1 252 1 40 1 
225 1 324 1 336 1 214 1 269 1 221 2 270 1 93 1 33 1 305 1 274 1 122 1 252 1 
260 1 225 1 336 1 324 1 302 1 193 1 214 1 269 1 93 1 221 2 270 1 33 2 274 1 122 1 252 1 40 1 
260 1 225 1 336 1 324 1 302 1 193 1 214 1 93 1 221 2 270 1 33 2 274 1 122 1 252 1 40 1 
359 1 27 1 287 1 90 1 267 1 
359 1 106 1 27 1 287 1 90 1 
260 1 225 1 336 1 324 1 301 1 302 1 193 1 214 1 93 1 221 2 270 1 33 2 274 1 122 1 252 1 40 1 
359 1 246 1 287 1 90 1 290 1 267 1 
260 1 66 1 225 1 336 1 193 1 214 1 93 1 122 1 250 1 252 1 174 1 301 1 13 1 324 1 302 1 270 1 221 2 33 2 274 1 40 1 
260 3 160 1 336 3 193 3 244 1 214 2 93 10 316 1 318 1 122 2 9 1 54 3 175 3 324 3 75 1 302 3 303 2 358 1 32 1 270 2 221 4 33 19 360 1 181 2 274 2 60 2 84 1 308 6 185 1 40 9 
260 3 160 2 336 2 193 3 244 1 214 2 93 12 196 1 122 2 99 1 9 2 54 1 175 1 324 2 14 1 75 2 302 3 130 1 355 1 303 4 358 2 270 2 221 4 33 26 180 1 360 1 181 1 237 1 274 2 60 2 308 2 84 1 185 1 40 14 
260 5 193 4 93 21 316 1 263 1 196 1 318 1 99 1 9 1 54 4 324 4 14 1 270 3 59 1 274 3 237 1 60 4 159 1 160 3 336 5 20 1 214 3 244 1 217 1 122 3 123 1 175 4 302 4 75 3 130 1 355 1 303 4 358 2 221 6 33 41 180 1 360 1 181 1 308 8 84 1 185 1 311 1 40 20 
260 5 193 4 93 18 316 1 263 1 196 1 318 1 99 1 9 1 54 4 324 3 14 1 270 3 59 1 274 3 237 1 60 4 159 1 160 3 336 4 20 1 214 3 244 1 217 1 122 3 123 1 175 2 302 4 75 3 130 1 355 1 303 4 358 2 221 6 33 38 180 1 360 1 181 1 308 6 84 1 185 1 311 1 40 20 
260 8 159 1 160 4 336 8 20 1 193 7 244 1 214 1 93 24 316 2 217 1 196 1 122 1 123 1 99 1 9 1 54 7 175 6 324 7 14 1 75 2 302 7 130 1 355 1 303 3 358 1 270 1 221 2 180 1 33 50 59 1 360 1 181 1 153 2 274 1 60 4 84 1 308 13 185 1 311 1 40 26 
74 1 157 1 17 1 285 1 190 1 192 1 354 1 154 1 329 1 39 1 
128 1 232 1 
283 1 17 1 285 1 247 1 190 1 354 1 329 1 331 1 39 1 
74 1 157 1 351 1 42 1 191 1 190 1 192 1 354 1 341 1 17 1 142 1 285 1 7 2 135 1 329 1 266 1 39 1 100 1 
74 1 157 1 351 1 42 1 191 1 190 1 192 1 354 1 341 1 17 1 142 1 285 1 7 2 135 1 329 1 266 1 39 1 100 1 
74 1 157 1 351 1 42 1 191 1 190 1 192 1 354 1 341 1 17 1 142 1 285 1 7 2 135 1 329 1 266 1 39 1 100 1 
231 1 208 1 298 1 
231 1 208 1 298 1 
50 1 346 1 
50 1 208 1 346 1 
77 1 115 1 
66 2 128 1 351 1 333 1 57 1 190 1 77 1 354 1 115 1 339 1 17 1 142 1 285 1 232 1 35 1 7 1 329 1 39 1 86 1 266 1 319 1 100 1 
231 1 298 1 
50 1 208 1 346 1 
225 1 337 1 241 1 226 1 90 2 67 1 214 1 117 1 280 1 195 2 93 1 287 2 230 2 122 1 197 2 11 1 252 1 301 1 177 1 104 1 16 1 359 2 221 2 270 1 33 2 182 1 274 1 276 1 362 1 361 2 40 1 
27 1 177 1 226 1 90 1 67 1 202 1 118 1 359 1 342 1 343 1 182 1 287 1 288 1 36 1 
199 1 177 1 226 1 90 1 257 1 268 1 46 2 359 1 343 1 272 1 287 1 152 1 145 1 288 1 294 1 87 1 297 1 187 1 
199 1 177 1 226 1 90 2 257 1 268 1 46 2 359 2 343 1 246 1 272 1 287 2 152 1 145 1 288 1 294 1 87 1 297 1 187 1 
312 1 199 1 177 1 90 1 226 1 257 1 46 2 359 1 272 1 287 1 152 1 145 1 288 1 294 1 87 1 297 1 187 1 
200 1 
73 1 42 1 161 1 140 1 164 1 340 1 133 1 110 1 251 1 38 1 
260 2 349 5 55 1 42 5 44 5 324 2 336 2 302 2 193 2 79 1 140 5 340 5 166 10 306 5 170 2 
351 1 42 1 189 1 38 1 266 1 45 1 
189 4 114 1 226 1 161 2 90 4 140 2 67 1 45 2 262 2 340 2 92 1 342 1 287 4 251 2 172 2 266 3 73 2 300 1 351 3 352 1 27 2 177 1 202 1 359 4 34 2 182 1 82 1 110 1 363 1 
42 1 169 1 133 1 140 1 38 1 340 1 164 1 
42 2 2 1 189 1 243 1 161 1 140 1 45 1 340 1 284 1 166 1 251 1 266 1 349 1 73 1 351 1 110 1 38 1 
73 1 27 1 177 1 176 1 226 2 161 1 90 1 67 1 326 1 203 1 359 1 344 1 22 1 182 1 287 1 110 1 251 1 
260 2 42 5 160 1 189 1 44 5 336 2 162 1 161 2 193 2 140 8 45 1 262 1 340 5 91 1 166 6 170 2 172 1 251 2 266 1 99 1 73 2 349 3 351 1 324 2 14 1 75 1 302 2 130 1 79 1 355 1 180 1 306 5 60 1 110 2 38 2 
260 1 73 1 66 1 351 1 129 1 159 1 20 1 131 1 161 1 140 1 163 1 340 1 59 1 170 1 171 1 250 1 110 1 251 1 266 1 296 1 
65 1 66 1 359 1 129 1 27 1 287 1 90 1 250 1 267 1 
349 2 73 1 42 4 44 2 161 1 140 1 340 2 262 1 166 4 306 2 217 1 110 1 251 1 172 1 38 2 
157 1 273 1 77 1 354 1 329 1 
354 1 85 1 329 1 
354 1 85 1 329 1 
354 1 85 1 329 1 
354 1 329 1 292 1 
354 1 329 1 292 1 
354 1 329 1 292 1 
354 1 329 1 
17 1 39 1 
54 1 260 1 159 1 336 1 20 1 163 1 93 3 33 5 59 1 308 1 40 2 
260 1 175 1 302 1 214 1 221 2 270 1 33 2 360 1 274 1 308 1 122 1 40 2 
54 1 260 1 175 1 336 1 324 1 302 1 193 1 214 1 93 2 221 2 270 1 33 4 360 1 274 1 308 2 122 1 40 2 
54 1 159 1 175 1 214 3 93 2 221 6 270 3 33 3 360 1 59 1 237 1 274 3 308 2 318 1 122 3 265 1 40 1 
260 5 159 3 160 3 336 5 20 2 193 3 214 5 93 18 316 1 167 1 217 1 318 1 122 5 265 1 52 1 123 1 54 7 175 5 324 3 75 1 302 3 356 1 270 5 221 10 33 34 105 1 59 3 360 1 237 2 274 5 60 4 308 12 311 1 40 16 
260 1 159 1 160 1 336 1 20 1 214 1 93 4 217 1 122 1 123 1 54 2 75 1 130 1 270 1 221 2 33 8 360 1 59 1 274 1 60 1 308 2 311 1 40 4 
260 2 159 1 160 1 336 1 20 1 193 1 214 2 93 5 316 1 217 1 122 2 123 1 54 2 175 1 75 1 302 1 130 1 270 2 221 4 33 11 105 1 59 1 360 1 274 2 60 2 308 3 311 1 40 6 
260 3 159 1 160 1 336 3 20 1 193 2 214 3 93 10 217 1 122 3 123 1 99 1 54 3 175 1 324 2 75 1 302 2 14 1 130 1 355 1 270 3 221 6 33 19 180 1 105 1 59 1 360 1 274 3 237 1 60 1 308 4 311 1 40 9 
260 2 160 1 336 1 193 2 214 2 93 4 122 2 99 1 54 1 324 1 75 1 302 2 14 1 130 1 355 1 270 2 221 4 33 11 180 1 105 1 360 1 274 2 60 1 308 1 40 7 
260 1 159 1 160 1 336 1 20 1 214 1 93 4 217 1 122 1 123 1 54 2 75 1 130 1 270 1 221 2 33 8 360 1 59 1 274 1 60 1 308 2 311 1 40 4 
260 2 160 1 336 2 193 2 214 1 93 6 122 1 99 1 54 1 175 1 324 2 75 1 302 2 14 1 130 1 355 1 270 1 221 2 33 12 180 1 360 1 274 1 60 1 308 2 40 6 
260 2 160 1 336 1 193 2 214 3 93 5 122 3 99 1 54 1 324 1 14 1 75 1 302 2 130 1 355 1 270 3 221 6 33 12 180 1 105 1 360 1 274 3 237 1 60 1 308 1 40 7 
260 2 160 1 336 1 193 2 214 3 93 5 122 3 318 1 99 1 54 2 175 2 324 1 14 1 75 1 302 2 130 1 355 1 270 3 221 6 33 12 180 1 360 1 274 3 237 1 60 1 308 4 40 7 
54 3 260 1 159 3 175 3 336 1 20 1 93 4 33 7 59 3 308 6 311 1 123 2 40 3 
260 2 160 1 336 1 193 2 214 3 93 5 122 3 318 1 99 1 54 1 324 1 14 1 75 1 302 2 130 1 355 1 270 3 221 6 33 12 180 1 360 1 274 3 237 1 60 1 308 1 40 7 
260 1 54 2 175 1 159 1 336 1 20 1 214 2 93 4 221 4 270 2 33 8 59 1 274 2 237 1 217 1 308 3 122 2 311 1 123 1 40 4 
54 2 260 1 159 1 336 1 20 1 93 3 33 6 59 1 169 1 217 1 308 2 311 1 123 1 40 3 
54 1 260 1 175 1 336 1 324 1 302 1 193 1 214 1 93 2 221 2 270 1 33 4 105 1 274 1 308 2 122 1 40 2 
54 1 260 1 175 1 160 1 336 1 324 1 75 1 302 1 193 1 93 4 33 7 316 1 60 2 308 2 40 3 
260 3 159 2 160 2 336 3 20 1 193 2 214 2 93 12 316 1 217 1 122 2 265 1 123 1 54 5 175 4 324 2 302 2 221 4 270 2 33 23 59 2 153 1 237 2 274 2 60 2 308 9 61 1 311 1 40 11 
93 1 33 1 60 1 
33 1 160 1 40 1 
260 1 54 2 55 1 175 1 324 1 336 1 302 1 193 1 214 1 270 1 221 2 93 3 33 6 105 1 274 1 308 3 122 1 40 3 
260 2 160 1 336 2 193 2 214 1 93 6 122 1 99 1 54 1 175 1 324 2 75 1 302 2 14 1 130 1 355 1 270 1 221 2 33 12 180 1 360 1 274 1 60 1 308 2 40 6 
260 1 54 1 159 1 175 1 336 1 20 1 93 3 33 6 59 1 308 2 40 3 
54 1 175 1 159 1 214 1 93 2 221 2 270 1 33 3 59 1 237 1 274 1 308 2 122 1 265 1 123 1 311 1 40 1 
195 1 334 1 230 1 146 1 291 1 178 1 361 1 
334 1 76 1 242 1 178 1 195 1 222 1 230 1 146 1 37 1 291 1 19 1 361 1 
25 1 111 1 27 1 177 1 226 1 90 4 67 1 202 1 359 4 342 1 246 1 182 1 287 4 
210 1 321 1 177 1 90 2 226 2 326 1 67 1 141 1 179 1 359 2 34 1 182 1 287 2 183 1 
46 1 359 1 272 1 27 1 287 1 177 1 145 1 226 1 90 1 187 1 
177 1 90 2 226 1 67 1 359 2 246 1 182 1 287 2 294 1 362 1 11 1 
25 1 313 1 27 1 177 2 90 4 226 2 67 2 202 1 342 1 359 5 34 1 246 1 182 3 287 5 98 1 11 1 
25 1 313 1 27 1 177 2 90 4 226 2 67 2 202 1 342 1 359 5 34 1 246 1 182 3 287 5 224 1 11 1 
342 1 359 1 182 1 27 1 169 1 287 1 177 1 226 1 90 1 67 1 202 1 
66 1 27 1 177 1 90 1 226 1 326 1 67 1 258 1 359 1 182 1 287 1 148 1 63 1 
66 1 258 1 359 1 34 1 182 1 287 1 177 1 226 1 90 1 67 1 326 1 148 1 63 1 
66 1 258 1 359 1 323 1 34 1 182 1 287 1 177 1 226 1 90 1 67 1 326 1 63 1 
111 1 351 2 42 1 27 1 189 1 177 1 139 1 226 1 90 3 67 1 326 1 327 1 359 3 34 1 22 1 182 4 95 1 287 3 223 1 310 1 38 1 266 2 24 1 
111 1 351 2 42 1 27 1 189 1 177 1 139 1 226 1 90 3 67 1 326 1 327 1 359 3 34 1 22 1 182 4 287 3 223 1 233 1 38 1 266 2 24 1 
359 1 287 1 177 1 226 1 90 1 108 1 
321 1 313 1 27 2 176 1 177 2 90 6 226 3 256 1 326 1 67 2 357 1 359 7 246 1 182 3 287 7 197 1 108 1 183 1 294 1 98 1 11 1 
66 1 258 1 
42 1 189 2 90 1 161 2 140 1 45 1 340 1 164 1 22 1 287 1 121 1 218 1 251 2 233 1 266 3 73 2 351 3 12 1 27 1 327 1 359 1 182 2 82 1 133 1 223 1 110 2 38 1 86 1 
176 1 177 1 90 1 226 2 80 1 327 1 326 1 67 1 359 1 344 1 182 1 287 1 108 1 
66 1 323 1 27 1 177 1 90 1 226 1 326 1 67 1 258 1 359 1 182 1 287 1 63 1 
321 1 176 1 177 1 90 1 226 2 326 1 67 1 357 1 359 1 34 1 182 1 287 1 183 1 
127 1 241 1 3 1 117 1 16 1 195 1 230 1 144 1 361 1 
322 1 21 1 3 1 
127 1 254 1 144 1 3 1 
127 1 322 1 351 1 21 1 317 1 254 1 144 1 3 1 266 1 86 1 
69 1 101 1 48 1 23 1 136 1 332 1 209 1 64 1 
211 1 188 1 78 2 194 1 69 2 245 1 271 1 48 4 23 3 136 1 347 1 332 2 209 1 64 4 
0 1 101 1 113 1 78 1 69 1 70 1 48 2 23 1 136 1 332 1 209 1 64 2 
101 1 188 1 211 2 30 1 69 1 48 3 23 1 136 1 209 1 347 2 332 1 64 3 
216 1 23 2 138 1 259 2 
101 1 48 1 345 1 136 1 209 1 64 1 
69 1 253 1 101 1 48 2 23 1 78 1 136 1 332 1 209 1 64 2 
204 1 
69 1 101 1 48 1 23 1 136 1 332 1 209 1 64 1 
69 1 169 1 23 1 332 1 
69 1 48 1 23 1 136 1 332 1 209 1 64 1 
158 1 68 1 64 1 
69 1 101 1 211 1 188 1 48 3 23 1 206 1 136 1 332 1 347 2 209 1 64 3 
69 1 48 2 23 1 78 1 136 1 332 1 209 1 236 1 64 2 
46 1 101 1 48 1 23 1 145 1 15 1 136 1 209 1 257 1 194 1 64 1 
101 1 48 1 23 1 136 1 332 1 209 1 64 1 
69 1 101 1 48 1 136 1 332 2 209 1 64 1 
101 1 353 1 48 2 23 1 51 1 136 2 332 1 209 2 64 2 240 1 
253 1 101 1 56 1 78 2 194 1 69 1 271 1 48 3 23 2 136 1 332 1 209 1 64 3 
101 1 277 1 78 1 257 1 69 1 46 2 48 2 23 1 145 1 136 1 332 1 209 1 187 1 64 2 297 1 
101 1 78 2 236 1 194 1 69 1 271 1 168 1 48 4 23 2 136 2 332 1 209 2 64 4 
253 1 101 1 78 1 69 1 48 3 23 1 136 1 209 1 347 1 332 1 64 3 
245 1 271 1 23 1 194 1 
23 1 332 1 

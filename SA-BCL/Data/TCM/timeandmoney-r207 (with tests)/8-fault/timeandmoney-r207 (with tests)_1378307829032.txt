#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 217 (27,252) (27,252) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 217 (27,252) (27,252) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 217 (27,252) (27,252) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 217 (27,252) (27,252) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 257 (32,40,62) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 257 83 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 257 83 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 257 (32,40,62) 301 158 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (78,117) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 257 83 194 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 257 83 194 300 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 312 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
107 1 27 1 79 1 80 1 259 2 272 1 252 1 50 2 197 1 217 1 24 1 357 1 254 1 348 1 8 1 123 1 
107 1 27 1 79 1 80 1 259 2 272 1 252 1 50 2 197 1 217 1 24 1 357 1 254 1 348 1 8 1 123 1 
107 1 27 1 79 1 80 1 259 2 272 1 252 1 50 2 197 1 217 1 24 1 357 1 254 1 348 1 8 1 123 1 
107 1 27 1 79 1 80 1 259 2 272 1 252 1 50 2 197 1 217 1 24 1 357 1 254 1 348 1 8 1 123 1 
107 1 176 1 79 1 236 3 80 1 259 4 193 2 46 1 239 1 50 4 242 2 197 1 145 1 24 1 217 1 231 3 276 1 123 1 
107 1 176 1 79 1 80 1 250 1 259 2 352 1 272 1 50 2 197 1 145 1 231 1 24 1 254 1 202 1 8 1 
176 1 236 1 80 1 259 3 50 3 242 1 197 2 145 1 24 2 231 2 254 1 149 1 276 1 
107 1 176 1 79 1 236 7 80 1 298 1 193 2 45 1 259 9 46 1 47 1 239 1 50 9 242 4 197 2 145 1 217 1 231 5 24 2 254 1 149 1 101 1 276 3 123 1 
107 1 176 1 79 1 236 7 80 1 298 1 193 2 45 1 259 9 46 1 47 1 239 1 50 9 242 4 197 2 145 1 217 1 231 5 24 2 254 1 149 1 101 1 276 3 123 1 
312 1 
324 1 33 1 136 2 
17 1 347 1 328 2 220 2 37 2 7 2 240 2 143 2 
293 2 39 2 297 1 143 2 146 1 85 1 347 1 86 1 232 1 63 1 328 3 128 1 7 2 204 1 151 1 64 1 28 2 351 1 179 1 156 1 353 2 30 1 66 1 111 1 31 1 240 2 116 1 356 1 17 1 218 1 265 2 320 1 220 3 359 1 37 2 73 1 20 1 
17 1 106 1 43 1 328 1 220 1 37 1 7 1 221 1 240 1 143 1 
257 1 62 1 
324 1 1 1 40 1 32 2 143 1 240 1 60 2 196 1 106 1 220 1 328 1 173 1 7 1 37 1 279 1 
60 1 51 1 200 1 32 1 144 1 
60 2 191 1 200 1 324 1 1 1 32 2 19 1 144 1 
60 1 200 1 32 1 
139 1 32 1 143 1 240 1 144 1 60 1 17 1 106 1 43 1 220 1 328 1 7 1 37 1 221 1 
324 1 
60 2 200 1 219 1 324 1 1 1 32 2 19 1 144 1 
322 1 281 1 169 2 302 1 324 1 1 1 32 5 126 1 317 1 144 2 60 5 105 2 52 1 333 1 200 2 99 2 290 1 19 1 235 1 
312 1 
143 1 240 1 347 2 220 2 328 2 37 2 7 1 360 1 21 1 
184 1 117 1 175 1 
28 1 351 1 93 1 353 1 66 1 111 1 85 1 265 1 347 1 86 1 63 1 328 1 220 1 128 1 204 1 20 1 
351 1 28 1 138 1 190 1 353 1 111 1 66 1 143 1 240 1 85 1 265 1 184 1 86 1 63 1 128 1 220 2 328 2 37 1 204 1 20 1 
138 1 347 1 328 3 220 3 7 1 37 3 240 3 143 3 
106 1 328 1 220 1 37 1 221 1 240 1 143 1 
106 1 328 1 220 1 37 1 7 1 240 1 143 1 360 1 21 1 
293 1 39 2 138 1 297 1 190 1 40 1 143 3 196 1 60 1 146 1 85 1 106 1 347 1 86 1 232 1 63 1 128 1 328 4 173 1 204 1 7 2 279 1 64 1 351 1 28 1 156 1 353 1 111 1 66 1 32 1 115 1 240 3 116 1 356 1 17 1 265 1 320 1 220 4 359 1 37 3 73 1 222 1 360 1 20 1 
257 1 138 1 328 1 220 1 83 1 37 1 240 1 143 1 
125 1 138 2 190 1 324 1 40 1 32 1 143 3 240 3 115 1 60 1 196 1 106 1 220 3 328 3 173 1 7 1 37 3 360 1 279 1 
138 1 143 2 240 2 117 1 184 1 220 2 328 2 7 1 37 2 360 1 
28 1 351 1 353 1 66 1 111 1 85 1 265 1 347 1 86 1 63 1 328 1 220 1 128 1 204 1 20 1 
28 1 353 1 66 1 342 1 111 1 180 1 85 1 265 1 347 1 86 1 63 1 328 1 220 1 128 1 20 1 
293 4 78 1 39 2 297 2 0 1 226 1 57 1 41 1 146 1 232 1 277 1 206 1 175 2 151 2 311 1 64 1 212 1 49 1 116 1 117 2 288 1 356 1 184 2 359 1 
207 1 106 1 328 1 220 1 37 1 240 1 143 1 279 1 
257 1 138 2 190 1 313 1 83 1 143 4 240 4 15 1 347 1 220 4 328 4 37 4 7 1 360 1 
207 1 106 1 328 2 220 2 37 2 221 1 240 2 143 2 
131 1 26 1 
131 1 26 1 
224 1 34 1 
224 1 34 1 
224 1 34 1 
13 1 131 1 26 1 
13 1 131 1 26 1 
71 1 131 1 26 1 
76 1 319 1 224 1 131 2 34 1 26 2 
13 1 131 1 26 1 
269 1 131 1 26 1 
269 1 131 1 26 1 
269 1 131 1 26 1 
76 1 75 2 152 1 209 2 103 2 324 1 131 2 32 2 314 1 331 3 315 1 213 2 308 1 60 2 160 1 147 1 267 1 26 2 339 2 
75 1 22 1 225 1 103 1 143 2 60 1 347 1 328 2 26 1 209 1 109 1 331 1 131 1 32 1 314 1 240 2 355 1 316 1 71 1 98 1 220 2 100 1 37 2 339 1 
107 1 79 1 123 1 
107 1 79 1 250 1 
107 3 84 1 250 1 192 1 25 1 123 2 
107 2 84 1 250 1 25 1 67 1 123 1 
107 2 84 2 250 1 25 1 123 1 
291 1 322 3 226 1 57 1 169 1 142 1 324 2 1 1 307 1 144 4 105 1 60 5 41 1 200 1 9 2 311 1 281 1 10 2 109 1 238 1 33 1 32 5 317 2 355 1 96 2 241 1 119 1 122 1 99 1 100 1 136 3 19 1 
291 2 322 8 226 3 57 3 169 2 227 5 142 3 324 5 1 1 144 7 60 9 105 2 41 3 200 6 9 6 311 3 281 1 177 1 10 6 238 1 33 3 32 9 317 6 355 4 97 1 51 5 333 1 119 2 99 2 165 1 135 1 102 1 136 9 19 1 74 1 
291 1 322 3 226 1 169 1 57 1 142 1 324 3 1 1 144 2 105 1 60 3 41 1 9 2 311 1 10 2 33 2 32 3 355 1 317 2 96 1 241 1 333 1 119 1 122 1 99 1 136 4 
291 1 322 5 226 2 169 1 57 2 142 2 324 4 1 1 144 3 105 1 60 4 41 2 9 4 311 2 10 4 33 3 32 4 355 2 317 4 96 2 241 1 333 1 119 1 122 1 99 1 165 1 135 1 102 1 136 7 
312 1 
77 1 86 1 
38 1 
86 1 20 1 
16 1 188 1 85 1 251 2 86 3 20 1 
85 1 86 1 20 1 
162 1 86 1 
293 7 311 1 151 4 271 1 297 3 0 2 226 1 283 1 157 1 95 1 264 1 23 1 161 2 288 3 233 1 44 1 234 1 
293 7 311 1 151 4 271 1 297 3 0 2 226 1 283 1 157 1 95 1 264 1 23 1 161 2 288 3 233 1 44 1 234 1 
293 7 311 1 151 4 271 1 297 3 0 2 226 1 283 1 157 1 95 1 264 1 23 1 161 2 288 3 233 1 44 1 150 1 234 1 
293 31 321 4 39 2 271 2 297 15 0 5 57 3 226 4 303 1 142 3 170 1 23 2 146 1 41 3 6 3 44 2 233 5 234 1 255 1 89 1 64 1 151 16 311 4 283 1 157 2 94 1 95 1 264 1 116 1 14 1 161 3 288 10 358 1 359 1 
293 9 39 4 271 1 297 4 0 3 226 1 141 1 23 1 146 2 44 1 233 1 255 1 234 1 90 1 311 1 64 2 151 5 157 1 283 1 116 2 264 1 161 2 288 4 359 2 
168 1 79 1 80 1 250 1 192 1 195 1 345 1 197 1 145 1 231 1 5 1 24 1 254 1 63 1 256 1 107 2 176 1 236 1 28 1 259 2 353 1 211 1 111 1 50 2 215 1 245 1 265 1 36 1 164 1 123 1 
79 1 250 1 192 1 195 1 325 1 197 1 145 1 231 1 5 1 24 1 172 1 254 1 63 1 256 1 107 2 176 1 28 1 236 2 259 3 353 1 211 1 111 1 50 3 215 1 245 1 265 1 36 1 335 1 164 1 123 1 
79 1 250 1 192 1 195 1 145 1 231 1 5 1 254 1 172 1 63 1 256 1 107 2 176 1 28 1 236 2 259 2 353 1 111 1 50 2 215 1 245 1 265 1 36 1 335 1 123 1 
323 1 325 1 326 1 197 1 24 1 5 2 86 1 254 2 63 1 203 1 208 1 28 1 259 1 353 1 111 1 66 1 50 1 215 2 181 1 245 2 265 1 166 1 20 1 
79 1 80 1 250 1 192 1 195 1 345 1 197 1 5 1 24 1 172 1 254 1 63 1 256 1 107 2 28 1 259 1 353 1 211 1 111 1 50 1 215 1 245 1 265 1 36 1 164 1 123 1 
275 1 
340 1 322 1 169 1 301 1 105 1 60 2 86 1 200 2 62 1 63 1 203 1 174 1 257 1 28 2 281 1 353 2 158 1 111 1 66 2 32 2 317 1 68 1 181 1 265 2 119 1 134 1 53 1 99 1 19 1 20 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 2 257 1 301 1 200 1 219 1 158 1 62 1 174 1 32 2 19 1 68 1 
105 1 60 1 257 1 281 1 169 1 301 1 158 1 62 1 99 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
60 1 257 1 301 1 158 1 62 1 174 1 32 1 68 1 
105 1 60 1 257 1 281 1 169 1 301 1 158 1 62 1 99 1 174 1 32 1 68 1 
64 1 146 1 39 2 356 1 312 1 232 1 359 1 116 1 206 1 
293 14 321 3 189 1 39 4 0 1 297 6 296 1 57 2 226 1 142 2 170 1 146 2 41 1 347 1 6 3 233 1 232 2 175 11 64 2 151 8 311 2 210 1 30 1 116 2 117 4 14 1 182 1 288 2 356 1 133 1 184 11 359 2 73 1 
293 1 151 1 64 1 39 2 138 1 190 1 30 1 304 1 143 1 240 1 117 1 116 1 59 1 146 1 356 1 133 1 232 1 220 1 328 1 37 1 359 1 
39 6 0 4 226 3 41 2 85 2 86 2 172 1 232 3 233 4 328 3 128 2 234 1 175 7 283 1 130 2 240 1 288 8 133 1 334 2 184 7 20 2 293 20 138 1 297 10 190 1 57 2 142 2 58 1 143 1 23 1 146 3 347 2 63 2 204 2 64 3 311 3 151 10 28 3 351 2 260 2 157 1 353 3 30 1 29 1 66 1 111 2 264 1 116 3 117 7 161 1 356 3 265 3 163 1 320 2 121 2 220 3 37 1 359 3 73 1 
168 1 293 2 138 1 39 4 297 1 143 1 146 2 4 1 86 3 172 1 350 1 63 2 232 2 328 1 203 1 206 1 64 2 151 1 28 8 353 8 111 2 66 2 30 1 354 1 112 1 114 1 240 1 116 2 286 1 181 1 356 2 265 7 218 2 54 1 220 1 37 1 359 2 73 1 20 2 
293 3 39 2 0 1 297 2 57 1 226 1 142 1 143 1 146 1 41 1 232 1 328 1 7 1 175 1 310 1 64 1 311 1 151 1 240 1 117 1 116 1 288 1 356 1 133 1 184 1 220 1 359 1 37 1 360 1 
293 2 64 1 311 1 151 2 39 2 57 1 117 1 116 1 288 1 146 1 356 1 184 1 233 1 232 1 359 1 277 1 175 1 206 1 
293 2 64 1 39 2 0 1 297 2 226 1 212 1 117 1 116 1 288 1 146 1 41 1 356 1 184 1 232 1 359 1 175 1 206 1 
293 4 39 2 297 2 0 1 57 1 226 1 142 1 146 1 41 1 232 1 233 1 206 1 175 2 151 2 311 1 64 1 116 1 117 2 288 2 356 1 184 2 359 1 
293 2 64 1 311 1 151 2 39 2 57 1 117 1 286 1 116 1 288 1 146 1 356 1 184 1 233 1 232 1 359 1 277 1 175 1 
293 2 64 1 39 2 0 1 297 2 226 1 212 1 117 1 286 1 116 1 288 1 146 1 41 1 356 1 184 1 232 1 359 1 175 1 
293 4 39 2 297 2 0 1 57 1 226 1 142 1 146 1 41 1 232 1 233 1 175 2 151 2 311 1 64 1 116 1 286 1 117 2 288 2 356 1 184 2 359 1 
293 4 39 2 297 2 0 1 57 1 226 1 142 1 146 1 41 1 232 1 233 1 175 2 151 2 311 1 64 1 116 1 117 2 288 2 356 1 184 2 359 1 
293 2 39 2 297 1 146 1 85 1 347 1 86 1 63 1 232 1 128 1 328 1 204 1 151 1 64 1 351 1 28 1 353 1 30 1 111 1 66 1 116 1 356 1 265 1 320 1 220 1 359 1 73 1 20 1 
293 2 39 2 297 1 342 1 146 1 85 1 347 1 86 1 63 1 232 1 128 1 328 1 151 1 64 1 28 1 353 1 30 1 111 1 66 1 180 1 116 1 356 1 265 1 186 1 220 1 359 1 73 1 20 1 
293 4 39 2 297 2 0 1 57 1 226 1 142 1 146 1 41 1 232 1 233 1 175 2 151 2 311 1 64 1 116 1 117 2 288 2 356 1 133 1 184 2 359 1 
293 4 168 1 39 2 0 1 297 2 226 1 57 1 142 1 41 1 146 1 85 1 86 1 233 1 63 1 232 1 128 1 328 1 204 1 175 2 151 2 311 1 64 1 351 1 28 1 353 1 111 1 117 2 116 1 288 2 356 1 265 1 320 1 184 2 121 1 220 1 359 1 20 1 
293 3 39 2 297 1 226 1 57 1 142 1 143 1 41 1 146 1 233 1 232 1 328 1 7 1 278 1 175 1 64 1 311 1 151 2 240 1 116 1 117 1 288 1 356 1 133 1 184 1 220 1 359 1 37 1 360 1 
293 19 321 2 39 4 0 3 140 1 297 10 299 1 57 3 226 3 141 1 142 3 341 1 81 1 170 1 146 2 41 3 42 2 6 1 233 3 64 2 151 9 311 3 261 2 262 1 116 2 14 1 288 6 266 1 246 1 359 2 
293 26 321 2 39 6 0 2 297 12 140 1 299 1 226 2 57 3 141 1 228 1 142 3 341 2 81 2 229 1 146 3 41 2 42 4 6 2 233 2 255 2 64 3 151 14 311 3 92 1 261 1 116 3 14 2 288 4 244 1 266 1 289 1 120 1 359 3 
321 4 39 6 0 4 226 5 228 1 81 1 170 1 41 4 229 1 42 4 6 3 233 4 234 1 92 1 283 1 14 3 288 8 244 1 289 1 293 41 56 1 297 21 140 1 299 1 57 4 141 1 142 4 341 2 23 1 146 3 255 1 311 5 151 20 64 3 261 1 157 1 262 1 116 3 264 1 161 1 266 1 120 1 359 3 
56 1 293 38 321 4 39 8 0 4 140 1 297 18 299 1 57 4 226 4 141 1 228 1 142 4 341 2 81 1 170 1 23 1 229 1 146 4 41 3 42 4 6 3 233 3 234 1 255 2 64 4 151 20 311 5 92 1 261 1 283 1 157 1 262 1 264 1 116 4 14 3 161 1 244 1 288 7 266 1 120 1 289 1 359 4 
293 42 321 3 39 4 0 5 140 1 297 20 299 1 226 6 57 5 141 1 228 1 142 5 341 1 81 1 170 1 23 1 229 1 41 5 146 2 42 4 6 3 233 5 234 1 255 1 64 2 151 22 311 6 210 1 92 1 261 1 283 1 157 1 264 1 116 2 14 2 161 1 244 1 288 10 266 1 120 1 289 1 359 2 
76 1 248 1 75 1 160 1 152 1 209 1 103 1 131 1 26 1 339 1 
71 1 98 1 
75 1 153 1 209 1 103 1 82 1 131 1 270 1 26 1 339 1 
76 1 75 1 152 1 209 1 103 1 324 1 314 1 32 1 131 1 331 2 315 1 213 1 308 1 60 1 160 1 147 1 26 1 339 1 
76 1 75 1 152 1 209 1 103 1 324 1 314 1 32 1 131 1 331 2 315 1 213 1 308 1 60 1 160 1 147 1 26 1 339 1 
76 1 75 1 152 1 209 1 103 1 324 1 314 1 32 1 131 1 331 2 315 1 213 1 308 1 60 1 160 1 147 1 26 1 339 1 
319 1 13 1 205 1 
319 1 13 1 205 1 
287 1 269 1 
319 1 287 1 269 1 
225 1 316 1 
75 1 22 1 225 1 103 1 143 2 144 1 60 1 347 1 328 2 26 1 209 1 109 1 213 1 315 1 48 1 32 1 131 1 331 1 355 1 316 1 240 2 71 1 98 1 220 2 100 1 37 2 339 1 
13 1 205 1 
319 1 287 1 269 1 
293 2 39 2 297 1 253 1 2 1 146 1 4 1 86 1 63 1 232 1 328 2 64 1 151 1 28 2 353 2 111 1 30 1 113 1 35 1 116 1 159 1 356 1 133 1 218 2 265 2 54 1 220 2 359 1 37 2 73 1 20 1 
107 2 168 1 223 1 79 1 28 2 250 1 192 1 353 2 111 1 195 1 5 1 265 2 36 1 172 1 201 1 63 1 268 1 164 1 123 1 
107 2 223 1 79 1 28 1 250 1 192 1 353 1 195 1 111 1 284 1 5 1 265 1 36 1 172 1 164 1 63 1 123 1 
28 1 353 1 111 1 66 1 181 1 273 1 5 1 265 1 86 1 201 1 63 1 166 1 203 1 20 1 
107 2 223 1 79 1 28 1 250 1 192 1 353 1 111 1 195 1 5 1 265 1 36 1 172 1 201 1 268 1 164 1 63 1 123 1 
129 1 
312 1 
322 1 169 1 324 2 1 1 305 1 105 1 60 1 199 1 200 1 148 1 281 1 33 1 32 1 317 1 99 1 136 1 19 1 
168 1 77 3 322 9 169 4 226 2 324 8 1 2 41 2 85 3 86 10 280 1 9 6 91 2 281 4 178 1 10 6 12 1 52 1 16 1 183 2 134 1 99 4 338 2 290 1 19 3 136 12 20 3 295 1 57 2 251 2 142 2 343 1 104 2 105 4 196 2 60 5 346 2 200 5 63 3 311 2 28 3 65 2 260 2 353 3 111 4 66 1 32 5 33 6 317 8 216 2 162 2 265 3 119 2 361 2 
321 1 322 8 169 2 57 2 226 2 142 2 324 5 1 2 60 1 105 2 346 2 229 1 41 2 6 1 200 1 61 1 9 5 311 2 281 2 92 1 10 5 32 1 33 3 317 5 14 1 244 1 119 1 134 1 289 1 120 1 338 1 99 2 137 1 19 1 136 6 
139 1 322 2 169 1 226 1 143 1 23 1 105 1 60 1 346 2 198 1 106 1 43 1 328 1 7 1 311 2 281 1 157 1 110 1 283 1 32 1 317 2 240 1 17 1 338 1 99 1 220 1 37 1 221 1 
281 1 322 1 169 1 324 1 1 1 317 1 105 1 52 1 99 1 290 1 
311 2 322 5 260 1 57 2 10 5 226 2 142 2 324 5 33 5 317 5 346 2 41 2 338 1 136 10 9 5 
60 1 200 1 324 1 1 1 32 1 19 1 
340 1 322 2 169 2 343 1 105 2 60 3 86 1 200 4 63 1 203 1 28 4 281 1 178 2 353 4 111 1 66 2 32 3 317 2 181 1 333 1 265 4 119 2 134 2 72 1 185 1 53 1 99 2 19 2 20 1 
293 1 39 2 297 1 143 2 146 1 85 1 347 1 86 1 63 1 232 1 328 3 128 1 7 2 204 1 64 1 28 1 351 1 353 1 156 1 66 1 111 1 240 2 116 1 17 1 356 1 265 1 320 1 220 3 37 2 359 1 73 1 20 1 
281 1 322 1 10 2 169 1 324 4 1 2 33 2 317 2 105 1 161 1 119 1 134 1 99 1 136 4 9 2 
332 1 75 1 103 1 
332 1 75 1 103 1 
75 1 160 1 225 1 237 1 103 1 
332 1 75 1 103 1 
75 1 103 1 87 1 
75 1 103 1 87 1 
75 1 103 1 87 1 
75 1 103 1 
131 1 26 1 
293 8 311 1 151 4 64 2 39 4 297 4 0 2 226 1 283 1 157 1 116 2 264 1 23 1 161 1 288 3 146 2 233 1 359 2 255 1 234 1 
312 1 
293 4 64 1 311 1 151 2 39 2 0 1 297 2 226 1 57 1 142 1 116 1 41 1 288 2 146 1 233 1 329 1 359 1 
293 2 151 1 321 1 297 1 6 1 14 1 
293 25 321 2 39 2 0 4 297 12 296 1 226 5 57 2 142 2 170 1 23 2 41 2 146 1 198 1 6 2 233 4 255 1 234 1 311 5 151 13 64 1 210 1 283 2 157 2 264 1 116 1 161 1 288 8 359 1 
293 1 321 1 297 1 
293 1 151 1 6 1 
293 6 64 1 311 1 151 3 39 2 297 3 0 2 260 1 57 1 226 1 142 1 116 1 146 1 288 3 41 1 233 1 359 1 329 1 
293 12 321 1 39 2 297 6 0 1 57 2 226 2 141 1 142 2 146 1 41 2 229 1 6 1 233 1 64 1 151 6 311 2 92 1 116 1 14 1 244 1 288 2 289 1 120 1 359 1 
293 6 311 1 151 3 297 3 0 1 226 1 283 1 157 1 23 1 288 2 233 1 
293 3 151 1 64 1 39 2 0 1 297 2 157 1 264 1 116 1 23 1 288 2 146 1 233 1 359 1 255 1 234 1 247 1 
293 10 64 1 151 5 311 2 39 2 0 3 297 5 226 2 141 1 157 2 283 1 116 1 23 2 146 1 288 5 198 1 233 2 359 1 
293 2 64 1 311 1 151 2 39 2 57 1 141 1 116 1 146 1 288 1 233 1 359 1 
293 4 64 1 311 1 151 2 39 2 0 1 297 2 226 1 57 1 141 1 142 1 116 1 41 1 288 2 146 1 233 1 359 1 
293 3 64 3 151 1 39 6 297 2 0 1 141 1 157 1 262 1 116 3 23 1 146 3 288 2 233 1 359 3 255 1 247 1 
293 34 321 4 39 10 297 18 0 7 57 3 226 5 141 1 142 3 170 1 23 3 146 5 41 3 6 3 233 5 329 1 234 1 255 2 89 1 64 5 151 16 311 5 283 2 157 3 94 1 262 1 264 1 116 5 14 1 161 1 288 12 358 1 359 5 247 1 
293 8 321 1 39 2 297 4 0 2 226 1 141 1 23 1 146 1 6 1 234 1 311 1 64 1 151 4 157 1 283 1 116 1 264 1 14 1 161 1 244 1 288 2 359 1 
293 11 321 2 39 4 0 2 297 5 226 1 57 1 141 1 142 1 170 1 23 1 146 2 6 1 233 1 329 1 234 1 64 2 151 6 311 2 283 1 157 1 264 1 116 2 14 1 161 1 244 1 288 3 359 2 
293 19 321 1 39 6 297 10 0 3 57 2 226 3 141 1 142 2 23 1 229 1 146 3 41 2 6 1 233 1 329 1 234 1 255 1 64 3 151 9 311 3 92 1 283 1 157 1 264 1 116 3 14 1 161 1 244 1 288 4 289 1 120 1 359 3 
293 17 321 1 39 6 297 7 0 3 57 2 226 2 141 1 142 2 23 1 146 3 41 1 229 1 6 1 233 2 329 1 234 1 255 1 64 3 151 10 311 3 92 1 283 1 157 1 264 1 116 3 14 1 161 1 244 1 288 5 289 1 120 1 359 3 
293 8 321 1 39 2 297 4 0 2 226 1 141 1 23 1 146 1 6 1 234 1 311 1 64 1 151 4 157 1 283 1 116 1 264 1 14 1 161 1 244 1 288 2 359 1 
293 12 321 1 39 2 297 6 0 1 57 2 226 2 141 1 142 2 146 1 41 2 229 1 6 1 233 1 64 1 151 6 311 2 92 1 116 1 14 1 244 1 288 2 289 1 120 1 359 1 
293 18 321 1 39 8 297 8 0 3 57 2 226 2 141 1 142 2 23 1 229 1 146 4 41 1 6 1 233 2 329 1 234 1 255 2 64 4 151 10 311 3 92 1 283 1 157 1 264 1 116 4 14 1 161 1 244 1 288 5 289 1 120 1 359 4 
293 16 321 1 39 8 297 7 0 3 57 3 226 2 141 1 142 3 229 1 146 4 41 2 6 1 233 3 255 2 64 4 151 9 311 3 92 1 262 1 116 4 14 1 244 1 288 6 289 1 120 1 359 4 
293 7 311 1 151 3 297 4 0 3 226 1 157 3 283 1 264 2 23 3 288 6 233 3 234 1 
293 18 321 1 39 8 297 8 0 3 57 2 226 2 141 1 142 2 23 1 229 1 146 4 41 1 6 1 233 1 234 1 255 2 64 4 151 10 311 3 92 1 283 1 157 1 262 1 264 1 116 4 14 1 161 1 244 1 288 4 289 1 120 1 359 4 
257 1 194 1 83 1 
257 1 3 1 258 1 155 1 300 1 194 1 83 1 306 1 
28 1 312 1 265 1 353 1 66 1 
28 1 351 1 138 1 353 1 111 1 66 1 143 1 240 1 85 1 265 1 347 1 86 1 63 1 128 1 220 2 328 2 37 1 20 1 
138 1 143 1 85 2 106 1 347 1 86 3 63 1 328 2 128 1 173 1 279 1 351 1 28 1 178 1 353 1 111 1 240 2 162 1 183 1 265 1 220 2 37 2 20 2 
138 1 143 1 85 2 106 1 347 1 86 3 63 1 328 2 128 1 173 1 279 1 28 2 178 1 353 2 111 1 180 1 240 2 162 1 183 1 265 2 336 1 220 2 37 2 20 2 
77 1 251 1 324 1 1 1 60 2 196 1 85 1 86 4 200 1 63 1 28 3 178 1 353 3 111 1 66 1 32 2 162 1 183 1 265 3 336 1 167 1 187 1 20 1 
77 1 28 3 178 1 65 1 251 1 353 3 66 1 111 1 324 1 1 1 32 2 196 1 60 2 162 1 85 1 183 1 265 3 86 4 336 1 200 1 63 1 20 1 
28 1 265 1 353 1 111 1 63 1 350 1 
168 1 28 7 282 1 353 7 66 2 111 3 354 1 112 1 114 1 118 1 16 1 4 1 85 1 218 1 265 6 86 3 172 1 350 1 63 2 127 1 20 2 
168 1 39 4 0 2 226 1 85 1 86 1 232 2 328 2 128 1 234 1 175 1 283 1 130 1 240 1 288 2 133 1 184 1 20 1 293 6 138 1 297 3 143 1 253 1 23 1 146 2 347 2 63 1 204 1 64 2 311 1 151 3 351 1 28 1 353 1 157 1 111 1 117 1 116 2 264 1 161 1 356 2 265 1 320 1 121 1 220 2 37 1 359 2 
77 1 322 1 169 2 251 1 324 1 1 1 343 1 104 1 144 1 105 2 60 3 196 1 86 2 200 2 91 1 28 1 281 2 65 1 353 1 66 1 32 3 317 1 52 1 265 1 99 2 290 1 19 1 361 1 
168 1 28 2 251 1 353 2 111 2 16 1 85 1 265 2 86 2 350 1 63 1 280 1 20 1 
168 1 28 4 353 4 111 1 66 1 181 1 265 4 86 1 336 1 63 1 203 1 88 1 20 1 
294 1 28 2 178 1 282 1 353 2 111 2 85 1 265 2 18 1 163 1 86 1 63 1 127 1 20 1 
107 1 79 1 28 1 250 1 265 1 353 1 111 1 195 1 66 1 63 1 
168 1 28 2 353 2 111 1 35 1 4 1 265 2 86 1 172 1 63 1 20 1 
168 1 28 5 178 1 353 5 66 1 111 2 354 1 114 1 181 1 4 1 265 4 86 3 63 2 203 1 88 1 20 2 
168 1 28 5 178 1 353 5 66 1 111 2 114 1 181 1 69 1 4 1 265 4 86 3 63 2 203 1 88 1 20 2 
28 1 138 1 353 1 111 1 66 1 143 1 240 1 180 1 85 1 265 1 347 1 86 1 63 1 128 1 220 2 328 2 37 1 20 1 
28 1 178 1 282 1 353 1 111 2 118 1 16 1 85 1 265 1 86 1 63 1 127 1 20 1 
292 1 2 1 159 1 243 1 230 1 328 1 220 1 113 1 37 1 
292 1 249 1 349 1 
318 1 292 1 243 1 230 1 347 1 
292 1 249 1 324 1 1 1 40 1 32 2 115 1 144 1 196 1 60 2 318 2 243 2 230 2 106 1 347 1 309 1 349 1 173 1 279 1 
312 1 
176 1 197 1 145 1 231 1 24 1 259 1 50 1 
245 1 254 1 50 1 
124 1 176 1 80 1 259 3 263 1 50 3 197 1 132 1 145 1 231 1 24 1 8 2 
176 1 197 1 145 1 236 1 231 1 24 1 193 1 259 2 50 2 
107 1 242 1 197 1 79 1 231 1 24 1 80 1 259 1 46 1 50 1 123 1 
197 1 145 1 231 1 24 1 80 1 259 1 50 1 
176 1 197 1 145 2 24 1 80 1 259 1 50 1 
80 1 259 2 50 2 197 2 145 1 70 1 231 1 24 2 337 1 55 1 
176 1 236 2 80 1 259 3 45 1 47 1 50 3 242 1 197 1 145 1 24 1 231 2 276 1 
107 2 176 1 79 1 236 1 250 1 80 1 259 2 192 1 330 1 50 2 197 1 145 1 231 1 24 1 123 1 
176 1 236 2 80 1 259 4 193 1 239 1 50 4 242 1 197 2 145 1 24 2 231 2 276 1 
176 1 197 1 145 1 231 1 24 1 80 1 259 1 50 1 
124 1 176 2 236 2 259 4 344 1 50 4 242 1 132 1 197 1 145 2 24 1 231 3 276 1 8 1 
176 1 236 1 80 1 298 1 259 2 108 1 50 2 214 1 197 1 145 1 231 1 24 1 
124 2 176 1 80 1 259 3 50 3 132 1 197 1 274 1 145 1 231 1 24 1 8 2 
154 1 231 2 327 1 171 2 
197 1 24 1 80 1 259 1 11 1 50 1 
176 1 197 1 145 1 236 1 231 1 24 1 80 1 45 1 259 2 50 2 
285 1 
176 1 197 1 145 1 231 1 24 1 80 1 259 1 50 1 
176 1 236 1 80 1 259 3 45 1 50 3 197 1 145 1 24 1 231 1 8 1 
242 1 231 1 344 1 276 1 
145 1 231 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 24 (30,167,315) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 213 1 187 2 107 2 85 3 134 1 250 3 321 1 340 1 198 1 91 1 23 1 313 2 
54 1 168 1 118 2 146 2 206 1 123 1 340 1 313 2 233 1 66 1 317 1 213 4 373 1 187 2 43 2 107 5 191 1 85 9 134 6 250 9 322 1 321 3 325 2 253 1 198 1 91 1 23 2 25 1 
54 1 168 1 118 2 146 2 206 1 123 1 340 1 313 2 233 1 66 1 317 1 213 4 373 1 187 2 43 2 107 5 191 1 85 9 134 6 250 9 322 1 321 3 325 2 253 1 198 1 91 1 23 2 25 1 
54 1 168 1 118 2 146 2 206 1 123 1 340 1 313 2 233 1 66 1 317 1 213 5 373 1 187 2 43 2 107 6 191 1 85 10 134 7 250 10 322 1 321 4 325 2 253 1 198 1 91 1 23 2 25 1 
168 1 118 2 146 2 206 1 123 1 340 1 313 2 233 1 66 1 317 1 213 3 373 1 187 2 43 1 107 4 191 1 85 7 134 4 250 7 322 1 321 2 325 2 253 1 198 1 91 1 23 2 25 1 
54 1 317 1 168 1 213 2 118 1 187 1 43 2 146 1 107 3 85 4 134 3 250 4 321 1 325 1 340 1 198 1 313 1 25 1 
168 1 373 1 187 1 107 1 146 1 85 2 250 2 322 1 172 1 33 1 325 1 379 1 340 1 198 1 23 1 313 1 
54 1 168 1 280 1 118 1 146 1 340 1 366 1 313 2 66 1 317 1 213 4 187 2 43 2 107 5 134 7 85 9 250 9 321 3 325 1 253 1 91 1 198 1 23 1 25 1 
54 1 168 1 280 1 118 1 146 1 340 1 366 1 313 2 66 1 317 1 213 4 187 2 43 2 107 5 134 7 85 9 250 9 321 3 325 1 253 1 91 1 198 1 23 1 25 1 
81 1 27 1 11 1 248 1 284 1 320 1 271 1 71 1 378 1 46 1 208 1 90 1 199 1 303 1 
128 1 
81 2 27 2 248 1 32 1 128 1 247 1 349 1 88 1 
361 1 220 1 143 1 117 1 81 5 27 5 248 2 77 1 296 2 88 1 35 1 126 2 231 1 48 1 328 2 128 1 247 1 76 1 349 2 
140 1 128 1 247 1 
237 1 
223 1 90 2 208 2 46 2 199 2 284 1 303 2 271 2 
223 1 334 1 56 1 225 1 120 1 4 1 284 1 99 1 171 1 149 1 243 2 363 1 6 1 102 1 208 2 209 1 368 1 312 1 343 1 210 1 155 2 212 2 348 1 159 1 14 1 271 2 252 1 193 1 354 2 194 2 324 1 297 1 72 1 90 3 46 2 199 3 303 2 
378 1 90 1 208 1 46 1 11 1 199 1 284 1 303 1 320 1 271 1 
115 1 81 1 351 1 27 1 320 1 208 1 90 1 199 1 256 1 50 1 104 1 128 1 247 1 238 1 
115 1 81 2 351 1 27 2 271 1 320 1 46 1 208 1 90 1 199 1 256 1 50 1 303 1 128 1 247 1 
81 1 27 1 248 1 100 1 349 1 
81 2 27 2 248 1 128 1 247 1 349 1 88 1 96 1 
81 1 27 1 349 1 
223 2 58 1 271 1 208 2 90 2 380 1 46 1 199 2 303 1 
173 1 181 1 129 1 
223 1 56 1 99 1 14 1 171 1 363 1 354 1 194 1 297 1 102 1 90 1 218 1 209 1 199 1 343 1 155 1 
223 1 140 1 
277 1 181 1 56 1 99 1 171 1 14 1 271 1 363 1 354 1 194 1 297 1 102 1 46 1 208 1 90 2 209 1 92 1 199 2 343 1 155 1 
223 1 90 3 208 3 46 3 92 1 199 3 303 1 271 3 
90 1 208 1 46 1 11 1 199 1 320 1 271 1 
90 1 208 1 46 1 380 1 199 1 58 1 303 1 320 1 271 1 
240 1 277 1 115 1 223 1 334 1 56 1 27 1 225 1 120 1 284 1 99 1 171 1 243 2 363 1 6 1 102 1 208 3 209 1 368 1 312 1 343 1 155 1 212 1 348 1 81 1 159 1 351 1 14 1 271 3 320 1 252 1 354 1 194 1 297 1 72 1 274 1 380 1 90 4 46 3 92 1 199 4 256 1 50 1 303 2 
223 1 90 2 208 2 46 1 92 1 199 2 271 1 238 1 258 1 
115 1 277 1 81 1 351 1 27 1 320 1 271 3 207 1 380 1 46 3 208 3 90 3 274 1 92 2 199 3 256 1 50 1 303 1 128 1 
181 1 271 2 380 1 46 2 208 2 90 2 92 1 199 2 303 1 129 1 
223 1 56 1 99 1 14 1 171 1 363 1 354 1 194 1 297 1 102 1 90 1 209 1 199 1 343 1 155 1 
223 1 56 1 3 1 99 1 171 1 363 1 354 1 194 1 297 1 124 1 90 1 209 1 199 1 343 1 155 1 
334 1 283 1 225 1 120 1 147 1 243 2 228 1 173 2 152 1 288 1 6 1 368 1 344 1 210 2 129 2 212 4 181 2 82 1 159 1 352 1 252 2 359 1 112 1 113 1 
131 1 90 1 208 1 46 1 199 1 256 1 320 1 271 1 
277 1 331 1 223 1 271 4 300 1 46 4 208 5 90 5 380 1 92 2 199 5 303 1 238 1 258 1 
131 1 90 2 208 2 46 2 11 1 199 2 320 1 271 2 
278 1 30 1 24 1 315 1 
167 1 278 1 315 1 
278 1 315 1 
278 1 315 1 
30 1 24 1 
30 1 24 1 
30 1 24 1 
278 1 275 1 315 1 
278 1 275 1 315 1 
278 1 275 1 315 1 
278 1 290 1 315 1 
278 1 290 1 315 1 
278 1 290 1 315 1 
278 2 350 1 81 2 27 2 119 1 235 2 336 3 338 2 108 2 125 1 244 1 47 2 176 1 358 1 257 2 141 1 128 1 315 2 9 1 
167 1 278 1 223 1 27 1 29 1 336 1 338 1 153 1 208 2 315 1 9 1 81 1 188 1 235 1 271 2 108 1 357 1 196 1 46 2 47 1 90 2 199 2 139 1 381 1 
118 1 12 1 146 2 59 2 172 1 
325 1 118 1 146 1 
325 1 146 1 172 1 
118 2 224 1 12 1 146 3 59 1 172 1 
105 1 118 1 12 1 146 2 59 1 172 1 
361 1 259 1 27 5 204 2 283 1 145 1 77 2 78 1 62 1 310 2 126 1 341 1 344 1 128 2 247 1 349 1 372 1 81 5 352 1 248 4 374 1 296 1 88 1 237 3 357 1 273 1 359 1 137 2 328 1 139 1 381 1 76 3 
361 1 259 3 27 9 283 3 145 3 98 5 77 6 100 5 121 1 78 2 364 1 310 6 126 2 231 1 341 2 344 3 128 5 247 1 349 6 294 1 81 9 352 3 248 7 374 1 83 1 296 2 88 1 18 1 237 9 22 1 359 3 137 6 328 2 139 4 76 8 
259 1 27 3 204 1 283 1 145 2 77 2 78 1 62 1 310 2 126 1 231 1 341 1 344 1 128 3 247 1 81 3 352 1 248 2 296 1 237 4 273 1 359 1 137 2 328 1 139 1 76 3 
259 2 27 4 204 2 283 2 145 3 77 4 121 1 78 1 62 1 310 4 126 1 231 1 341 1 344 2 128 4 247 1 81 4 352 2 248 3 296 1 18 1 237 7 22 1 273 1 359 2 137 4 328 1 139 2 76 5 
232 1 
209 1 42 1 140 1 
209 1 34 1 
297 1 209 1 
297 1 182 1 21 1 42 2 209 3 171 1 
297 1 209 1 171 1 
209 1 355 1 
221 1 292 2 82 3 106 1 352 1 283 1 260 1 69 1 148 1 192 1 252 3 376 1 228 2 8 1 37 1 210 4 166 1 212 7 
97 1 259 3 334 1 281 1 225 1 260 2 283 3 120 1 148 4 243 2 228 4 8 1 368 1 37 1 263 1 344 3 210 16 346 1 369 4 212 29 292 3 106 1 82 8 352 4 69 2 192 2 376 2 252 13 135 1 356 1 197 1 359 2 49 3 166 1 
334 2 283 3 225 2 260 1 120 2 226 1 148 4 243 4 228 5 8 1 368 2 37 1 154 1 210 9 212 16 292 2 82 9 352 3 69 1 192 2 252 7 376 2 135 1 110 1 166 2 
292 2 82 3 106 1 352 1 283 1 260 1 69 1 148 1 192 1 252 3 376 1 228 2 8 1 37 1 210 4 166 1 212 7 
292 2 82 3 106 1 352 1 283 1 260 1 69 1 148 1 192 1 252 3 376 1 228 2 8 1 37 1 210 4 166 1 212 7 
293 1 157 1 222 1 56 1 187 1 57 1 68 1 99 1 85 1 86 1 250 1 70 2 363 1 354 1 194 1 297 1 17 2 209 1 73 1 23 2 313 1 155 1 211 2 
118 1 56 1 224 1 241 1 146 2 60 1 99 1 227 1 285 1 172 1 313 1 38 1 155 1 211 1 266 1 187 1 85 1 250 1 70 1 194 1 354 1 17 1 325 1 198 1 23 1 75 1 
168 1 118 1 56 1 224 1 241 1 146 2 60 1 99 1 285 1 150 1 172 1 340 1 313 1 38 1 155 1 211 1 266 1 187 1 107 1 134 1 85 2 250 2 70 1 194 1 354 1 17 1 325 1 198 1 23 1 75 1 
168 1 118 1 224 1 56 1 241 1 146 2 99 1 227 1 285 1 172 1 340 1 313 1 38 1 155 1 211 1 266 1 185 1 187 1 68 1 107 1 85 3 134 2 250 3 70 1 194 1 354 1 17 1 325 1 23 1 75 1 
168 1 56 1 224 1 118 1 146 2 99 1 227 1 285 1 172 1 340 1 38 1 155 1 211 1 266 1 185 1 107 1 85 2 134 2 250 2 70 1 194 1 354 1 17 1 325 1 23 1 
20 1 
56 1 145 2 2 1 335 1 99 1 208 1 209 1 341 1 345 2 155 2 104 1 349 6 64 1 65 2 293 1 157 1 351 1 296 1 15 1 216 2 354 2 297 1 111 2 256 1 76 2 361 1 115 1 116 1 362 1 27 5 77 2 363 2 126 1 127 2 128 1 39 2 269 1 40 2 81 5 186 1 84 1 133 4 320 1 44 1 88 3 194 2 237 2 90 1 199 1 327 1 328 1 50 1 330 1 238 1 
65 1 115 1 269 1 116 1 81 3 351 1 27 3 186 1 2 1 133 2 32 1 320 1 88 1 208 1 90 1 199 1 256 1 50 1 330 1 104 1 349 2 238 1 
115 1 116 1 27 3 2 1 32 1 208 1 104 1 128 1 247 1 349 1 269 1 81 3 40 1 351 1 186 1 133 3 320 1 88 1 90 1 199 1 256 1 50 1 330 1 238 1 
65 1 115 1 269 1 116 1 81 2 351 1 27 2 186 1 2 1 133 2 320 1 208 1 90 1 199 1 256 1 50 1 345 1 330 1 104 1 349 1 238 1 
2 1 284 1 208 2 345 2 104 1 247 1 349 3 64 1 65 2 351 1 11 1 296 1 71 1 256 1 303 1 76 1 115 1 361 1 116 1 28 1 27 3 77 1 32 1 230 1 126 1 128 1 269 1 81 3 186 1 133 2 190 1 320 2 271 1 88 1 378 1 46 1 90 2 199 2 328 1 50 1 330 1 276 1 238 1 
2 1 145 2 284 1 208 2 345 1 104 1 247 1 64 1 349 2 65 1 351 1 11 1 296 1 216 1 71 1 256 1 111 2 303 1 76 1 115 1 361 1 116 1 27 3 362 1 77 1 126 1 127 2 128 3 39 2 269 1 81 3 40 1 186 1 133 3 271 1 320 2 44 1 88 1 237 2 378 1 46 1 90 2 199 2 328 1 50 1 330 1 238 1 
115 1 361 1 116 1 27 2 2 1 284 1 77 1 230 1 208 2 126 1 104 1 128 1 247 1 64 1 269 1 81 2 351 1 186 1 11 1 133 2 190 1 296 1 271 1 320 2 378 1 71 1 46 1 90 2 199 2 256 1 328 1 50 1 303 1 330 1 76 1 238 1 
115 1 361 1 116 1 27 2 2 1 284 1 77 1 230 1 208 2 126 1 104 1 128 1 247 1 64 1 269 1 81 2 351 1 186 1 11 1 133 2 190 1 296 1 271 1 320 2 378 1 71 1 46 1 90 2 199 2 256 1 328 1 50 1 303 1 330 1 76 1 238 1 
2 1 284 1 61 1 208 2 345 2 104 1 247 1 349 4 65 2 351 1 11 1 296 1 299 1 71 1 256 1 111 2 301 2 303 1 76 1 361 1 115 1 116 1 27 4 362 1 77 1 36 1 126 1 127 2 177 2 128 1 269 1 81 4 40 2 186 1 133 4 271 1 320 2 88 2 237 2 378 1 46 1 90 2 199 2 328 1 50 1 330 1 52 1 238 1 
2 1 284 1 208 2 345 1 104 1 247 1 349 1 64 1 65 1 351 1 11 1 296 1 71 1 256 1 303 1 76 1 115 1 361 1 116 1 27 2 77 1 230 1 126 1 128 1 269 1 81 2 186 1 190 1 133 2 320 2 271 1 378 1 90 2 46 1 199 2 328 1 50 1 330 1 276 1 238 1 
2 1 284 1 208 2 345 1 104 1 247 1 349 1 64 1 65 1 351 1 11 1 296 1 71 1 256 1 303 1 76 1 115 1 361 1 116 1 27 2 77 1 230 1 126 1 128 1 269 1 81 2 186 1 190 1 133 2 320 2 271 1 378 1 90 2 46 1 199 2 328 1 50 1 330 1 276 1 238 1 
2 1 284 1 208 2 345 2 104 1 247 1 349 4 65 2 351 1 11 1 296 1 299 1 71 1 256 1 111 2 301 2 303 1 76 1 115 1 361 1 116 1 27 4 362 1 77 1 126 1 127 2 177 2 128 1 269 1 81 4 40 1 186 1 133 3 271 1 320 2 44 1 88 2 237 2 378 1 46 1 90 2 199 2 328 1 50 1 330 1 238 1 
334 2 56 2 225 2 120 2 99 2 227 1 150 1 262 1 363 2 243 4 174 1 6 2 208 1 209 3 368 2 210 1 155 8 130 1 212 2 348 1 371 1 293 1 157 1 159 2 41 1 251 1 271 1 252 1 193 2 194 8 354 7 195 1 324 1 297 2 90 1 46 1 92 1 199 1 112 1 
259 1 334 1 225 1 283 1 120 1 228 1 243 2 173 1 6 1 208 1 368 1 344 1 210 1 129 1 212 3 316 1 181 1 82 1 10 1 159 1 352 1 271 1 252 2 380 1 46 1 90 1 199 1 359 1 303 1 
292 1 181 1 82 2 223 2 159 1 334 1 352 1 283 1 225 1 120 1 192 1 252 3 376 1 228 2 243 2 173 1 6 1 8 1 368 1 37 1 140 1 210 3 112 1 129 1 166 1 212 6 
259 3 223 1 334 2 225 2 283 1 120 2 169 1 148 1 228 1 243 4 173 13 6 2 368 2 263 2 344 3 210 10 129 4 348 1 369 4 212 17 156 1 181 13 82 2 10 1 159 1 352 3 252 7 324 1 16 1 356 1 165 1 359 1 49 3 
277 1 223 1 334 1 56 1 225 1 120 1 99 1 171 1 363 1 243 2 6 1 102 1 208 1 209 1 368 1 342 1 343 1 210 1 155 1 129 1 348 1 212 2 10 1 159 1 14 1 353 1 271 1 252 1 194 1 354 1 297 1 324 1 218 1 90 2 46 1 92 1 199 2 302 1 
277 1 334 3 56 2 283 3 99 2 148 4 243 6 6 3 8 1 102 2 208 1 209 2 343 2 344 2 210 10 155 3 348 1 212 20 292 1 158 1 10 1 159 3 352 3 14 2 252 10 354 3 297 2 109 1 359 2 166 1 259 2 223 2 225 3 120 3 227 1 171 2 228 4 363 1 173 7 368 3 312 2 79 2 37 1 80 2 129 7 181 7 318 2 82 8 192 1 271 1 376 1 236 1 194 3 324 1 46 1 90 3 92 1 199 3 203 2 
181 1 82 1 159 1 334 1 352 1 225 1 120 1 147 1 148 1 243 2 173 1 6 1 368 1 344 1 210 2 112 1 129 1 212 2 
181 1 82 1 159 1 334 1 225 1 283 1 120 1 252 2 228 1 243 2 173 1 6 1 359 1 368 1 112 1 129 1 113 1 212 2 
259 1 334 1 225 1 283 1 120 1 148 1 243 2 228 1 173 2 6 1 368 1 344 1 210 2 129 2 212 4 181 2 82 2 159 1 352 1 252 2 359 1 112 1 
181 1 82 1 159 1 334 1 352 1 225 1 120 1 147 1 148 1 251 1 243 2 173 1 6 1 368 1 344 1 210 2 129 1 212 2 
181 1 82 1 159 1 334 1 225 1 283 1 120 1 251 1 252 2 228 1 243 2 173 1 6 1 359 1 368 1 129 1 113 1 212 2 
259 1 334 1 225 1 283 1 120 1 148 1 243 2 228 1 173 2 6 1 368 1 344 1 210 2 129 2 212 4 181 2 82 2 159 1 352 1 251 1 252 2 359 1 
259 1 334 1 225 1 283 1 120 1 148 1 243 2 228 1 173 2 6 1 368 1 344 1 210 2 129 2 212 4 181 2 82 2 159 1 352 1 252 2 359 1 
223 1 334 1 56 1 225 1 120 1 99 1 171 1 363 1 243 2 6 1 102 1 209 1 312 1 368 1 343 1 210 1 155 1 212 2 348 1 159 1 14 1 252 1 194 1 354 1 324 1 297 1 90 1 199 1 
223 1 334 1 56 1 225 1 120 1 3 1 99 1 171 1 363 1 243 2 124 1 6 1 209 1 368 1 343 1 210 1 155 1 212 2 348 1 159 1 252 1 194 1 354 1 324 1 297 1 19 1 90 1 199 1 
259 1 334 1 225 1 283 1 120 1 148 1 243 2 228 1 173 2 6 1 368 1 344 1 210 2 129 2 212 4 181 2 10 1 82 2 159 1 352 1 252 2 359 1 
259 1 334 1 56 1 283 1 225 1 120 1 99 1 148 1 171 1 150 1 228 1 243 2 173 2 6 1 102 1 209 1 312 1 368 1 343 1 344 1 210 2 155 1 129 2 212 4 181 2 82 2 159 1 352 1 14 1 252 2 194 1 354 1 297 1 90 1 359 1 199 1 203 1 
259 1 334 1 283 1 225 1 120 1 148 1 243 2 173 1 6 1 208 1 368 1 344 1 210 2 129 1 212 3 181 1 82 1 10 1 159 1 352 1 271 1 252 1 380 1 46 1 90 1 359 1 199 1 303 1 74 1 
259 3 279 1 334 2 283 2 225 2 120 2 205 1 148 2 309 2 337 2 286 1 228 2 243 4 365 1 368 2 263 1 344 3 210 9 369 2 212 17 67 1 82 4 352 3 323 1 252 8 356 1 359 2 110 1 49 1 51 1 
114 1 53 1 259 3 334 3 261 1 283 2 225 3 120 3 205 1 337 1 148 2 309 4 286 2 228 2 243 6 365 1 368 3 344 3 210 14 179 1 212 26 369 2 82 4 352 3 252 12 323 2 377 1 135 2 356 2 254 1 359 2 110 1 49 2 51 1 
53 1 334 3 283 4 205 1 148 3 337 1 286 2 243 6 8 1 344 5 210 22 212 42 292 1 67 1 352 6 252 20 356 3 254 1 359 3 110 1 166 1 114 1 259 5 225 3 261 1 120 3 309 4 228 3 365 1 368 3 263 2 37 1 179 1 369 5 82 6 192 1 323 1 376 1 377 1 135 1 49 3 202 1 51 1 
114 1 53 1 259 5 334 4 261 1 225 4 283 5 120 4 205 1 337 1 148 2 309 4 286 2 243 8 228 5 8 1 365 1 368 4 37 1 263 2 344 5 210 22 179 1 369 5 212 43 292 1 67 1 82 7 352 6 192 1 376 1 323 1 252 21 377 1 135 2 356 3 254 1 359 4 110 1 49 3 202 1 51 1 166 1 
114 1 53 1 259 4 334 1 261 1 283 4 225 1 120 1 205 1 337 1 148 2 309 3 286 1 228 3 243 2 8 1 365 1 368 1 37 1 263 1 344 4 210 17 179 1 369 3 212 32 292 1 82 5 352 5 192 1 376 1 323 1 252 15 377 1 356 2 254 1 359 3 110 1 49 2 51 1 166 1 
278 1 244 1 175 1 47 1 119 1 235 1 338 1 141 1 108 1 315 1 
167 1 153 1 
298 1 278 1 47 1 235 1 360 1 178 1 338 1 108 1 315 1 
278 1 350 1 81 1 27 1 119 1 235 1 336 2 338 1 108 1 125 1 244 1 47 1 176 1 257 1 141 1 128 1 9 1 315 1 
278 1 350 1 81 1 27 1 119 1 235 1 336 2 338 1 108 1 125 1 244 1 47 1 176 1 257 1 141 1 128 1 9 1 315 1 
278 1 350 1 81 1 27 1 119 1 235 1 336 2 338 1 108 1 125 1 244 1 47 1 176 1 257 1 141 1 128 1 9 1 315 1 
333 1 275 1 163 1 
333 1 275 1 163 1 
267 1 290 1 
267 1 333 1 290 1 
196 1 188 1 
167 1 278 1 223 1 27 1 29 1 336 1 338 1 242 1 153 1 208 2 315 1 350 1 81 1 188 1 248 1 235 1 108 1 271 2 357 1 196 1 90 2 47 1 46 2 199 2 139 1 381 1 257 1 
275 1 163 1 
267 1 333 1 290 1 
0 1 334 1 56 1 225 1 120 1 99 1 262 1 243 2 6 1 208 2 209 1 368 1 210 1 155 2 130 1 212 2 348 1 268 1 10 1 159 1 252 1 193 2 194 2 354 2 297 1 324 1 89 1 90 2 200 1 199 2 94 1 
293 1 157 1 56 1 307 1 99 1 86 1 70 1 363 1 354 1 194 1 297 1 164 1 209 1 155 1 
118 1 224 1 56 1 307 1 270 1 13 1 146 2 99 1 227 1 70 1 172 1 354 1 194 1 325 1 38 1 155 1 75 1 266 1 
118 1 224 1 56 1 307 1 270 1 13 1 146 2 99 1 227 1 150 1 70 1 172 1 354 2 194 2 325 1 38 1 155 2 75 1 266 1 
118 1 224 1 56 1 13 1 146 2 99 1 227 1 70 1 172 1 354 1 194 1 325 1 38 1 155 1 347 1 75 1 266 1 
214 1 
361 1 143 1 77 1 296 1 35 1 126 1 328 1 128 1 247 1 76 1 
259 2 352 2 283 2 145 5 77 5 287 2 237 10 310 5 137 5 359 2 79 1 264 1 344 2 128 5 76 5 
81 1 27 1 128 1 247 1 349 1 88 1 
361 1 56 1 27 3 335 1 77 2 99 1 31 2 363 2 122 1 209 1 126 2 231 1 341 2 155 4 349 4 293 1 157 1 81 3 295 1 296 2 15 1 194 4 354 4 88 2 297 1 219 1 328 2 327 2 76 2 
35 1 143 1 77 1 140 1 128 1 247 1 76 1 
361 1 81 1 27 1 145 1 77 1 296 1 88 1 216 1 237 1 126 1 328 1 128 2 247 1 349 1 64 1 76 1 39 1 
143 1 56 3 283 2 145 6 99 2 150 1 287 2 7 1 209 8 341 2 63 2 344 2 155 3 247 2 349 5 160 1 352 2 296 4 354 3 355 1 297 2 255 2 359 2 76 9 361 4 115 2 306 2 259 2 27 5 77 8 31 1 171 2 34 3 363 1 35 1 122 1 310 6 126 4 79 2 264 2 128 8 182 1 183 2 81 5 42 2 234 1 194 3 88 3 237 12 136 2 137 6 327 1 328 4 239 1 
361 2 53 1 259 2 27 1 261 1 283 2 145 3 77 5 287 2 310 5 311 1 126 2 341 1 264 1 344 2 179 1 128 5 247 2 349 1 369 1 81 1 352 2 296 2 88 1 377 1 237 6 356 1 254 1 137 5 359 2 327 1 328 2 49 1 329 1 76 8 
361 1 27 1 283 1 77 2 284 1 226 1 287 2 230 1 208 1 126 1 264 1 81 1 352 2 11 1 192 1 296 1 320 1 271 1 376 1 71 1 378 1 90 1 46 1 199 1 328 1 303 1 166 1 76 2 
223 1 334 1 56 1 225 1 120 1 284 1 99 1 171 1 243 2 363 1 6 1 102 1 208 2 209 1 312 1 368 1 343 1 155 1 212 1 348 1 159 1 14 1 271 2 252 1 194 1 354 1 297 1 72 1 90 3 46 2 199 3 303 2 
292 1 361 1 145 2 77 2 296 1 237 4 310 2 126 1 137 2 341 1 328 1 327 1 128 4 247 2 76 1 
55 1 188 1 235 1 141 1 108 1 
289 1 235 1 108 1 
289 1 235 1 108 1 
289 1 235 1 108 1 
103 1 235 1 108 1 
103 1 235 1 108 1 
103 1 235 1 108 1 
235 1 108 1 
278 1 315 1 
82 5 334 1 352 2 225 1 283 2 120 1 226 1 148 2 192 2 376 2 252 5 243 2 228 3 368 1 110 1 210 5 166 1 212 10 
82 1 334 1 352 1 225 1 120 1 148 1 243 2 110 1 368 1 344 1 210 2 212 2 
259 1 82 2 334 1 352 1 283 1 225 1 120 1 148 1 252 2 228 1 243 2 359 1 110 1 368 1 344 1 210 2 212 4 
67 1 82 2 334 3 225 3 120 3 170 1 148 1 192 1 252 2 376 1 243 6 228 1 135 1 110 1 368 3 210 1 212 3 
97 1 259 3 334 5 281 1 225 5 283 4 120 5 170 1 148 4 228 6 243 10 101 1 8 1 368 5 37 1 263 1 344 3 210 16 369 4 212 32 292 1 67 1 82 10 352 5 192 3 376 3 252 16 135 2 356 1 197 1 359 2 110 1 49 3 166 2 
259 1 334 1 283 1 225 1 120 1 228 2 243 2 8 1 368 1 263 1 37 1 344 1 210 6 212 11 369 2 292 1 82 2 352 2 192 1 376 1 252 5 356 1 254 1 49 1 110 1 166 1 
334 2 283 1 225 2 120 2 243 4 228 2 101 1 8 1 368 2 37 1 210 4 212 8 369 1 292 1 82 2 352 1 192 1 252 4 376 1 356 1 254 1 110 1 49 1 166 1 
53 1 259 2 334 3 225 3 283 3 261 1 120 3 148 1 243 6 228 3 101 1 8 1 368 3 37 1 344 2 210 9 179 1 212 19 369 1 292 1 82 4 352 3 192 1 376 1 252 10 377 1 135 1 356 1 254 1 359 2 49 1 110 1 166 1 
53 1 259 2 334 3 225 3 283 2 261 1 120 3 148 2 243 6 228 3 101 1 8 1 368 3 37 1 344 2 210 10 179 1 212 17 369 1 292 1 82 5 352 3 192 1 376 1 252 7 377 1 135 1 356 1 254 1 359 1 49 1 110 1 166 1 
259 1 334 1 283 1 225 1 120 1 228 2 243 2 8 1 368 1 263 1 37 1 344 1 210 6 212 11 369 2 292 1 82 2 352 2 192 1 376 1 252 5 356 1 254 1 49 1 110 1 166 1 
53 1 259 2 334 1 225 1 283 2 261 1 120 1 148 1 243 2 228 1 368 1 344 2 210 6 179 1 212 12 369 1 82 2 352 2 252 6 377 1 356 1 254 1 359 2 49 1 110 1 
53 1 259 2 334 4 261 1 225 4 283 2 120 4 148 2 243 8 228 3 101 1 8 1 368 4 37 1 344 2 210 10 179 1 212 18 369 1 292 1 82 5 352 3 192 1 376 1 252 8 377 1 135 2 356 1 254 1 359 1 110 1 49 1 166 1 
53 1 259 3 334 4 261 1 225 4 283 2 120 4 148 3 243 8 228 3 368 4 344 3 210 9 179 1 212 16 369 1 67 1 82 6 352 3 252 7 377 1 135 2 356 1 254 1 359 2 110 1 49 1 
82 6 352 1 283 1 148 3 192 3 252 4 376 3 228 3 8 1 37 2 210 3 166 1 212 7 
53 1 259 2 334 4 261 1 225 4 283 2 120 4 148 1 243 8 228 3 8 1 368 4 37 1 344 2 210 10 179 1 212 18 369 1 292 1 67 1 82 4 352 3 192 1 376 1 252 8 377 1 135 2 356 1 254 1 359 1 110 1 49 1 166 1 
292 1 82 3 334 2 352 1 283 1 225 2 120 2 148 1 192 1 252 4 376 1 228 2 243 4 135 1 8 1 368 2 37 1 210 4 166 1 212 8 
292 1 82 2 352 1 283 1 192 1 252 3 376 1 228 2 8 1 37 1 140 1 210 3 166 1 212 6 
259 1 82 2 334 1 352 1 283 1 225 1 120 1 148 1 252 2 228 1 243 2 101 1 359 1 368 1 344 1 210 2 212 4 
259 1 82 1 352 1 283 1 252 4 228 1 356 1 359 1 49 1 263 1 344 1 210 3 369 2 212 7 
259 2 334 2 283 3 225 2 120 2 169 1 148 4 170 1 228 5 243 4 8 1 368 2 37 1 263 1 344 2 210 11 212 23 369 2 292 1 82 9 352 3 192 2 376 2 252 12 135 2 165 1 359 2 49 2 166 1 
252 1 212 1 369 1 
49 1 210 1 212 1 
259 1 82 3 334 1 352 1 225 1 283 1 120 1 148 1 252 3 243 2 228 2 101 1 359 1 368 1 79 1 344 1 210 3 212 6 
53 1 259 2 334 1 225 1 283 2 261 1 120 1 148 1 243 2 228 1 368 1 344 2 210 6 179 1 212 12 369 1 82 2 352 2 252 6 377 1 356 1 254 1 359 2 49 1 110 1 
82 2 352 1 283 1 148 1 192 1 252 3 376 1 228 1 210 3 166 1 212 6 
82 2 334 1 225 1 120 1 148 1 170 1 192 1 376 1 252 2 228 1 243 2 135 1 8 1 368 1 37 1 210 1 212 3 
223 1 90 1 208 1 199 1 367 1 238 1 258 1 
223 1 319 1 375 1 151 1 208 1 90 1 199 1 367 1 291 1 142 1 258 1 238 1 
297 1 293 1 157 1 56 1 209 1 138 1 99 1 150 1 155 4 5 1 194 4 354 4 363 1 
332 1 158 1 56 2 308 1 99 1 171 1 87 1 354 1 194 1 297 1 209 1 155 1 304 1 
325 1 56 1 146 1 99 1 155 1 172 1 266 1 194 1 354 1 363 1 
56 1 99 1 227 1 150 1 354 2 194 2 262 1 297 1 209 1 94 1 155 2 
293 1 157 1 56 2 41 1 99 2 31 1 150 1 5 1 363 1 354 4 194 5 262 1 297 2 174 1 209 3 155 5 
293 1 157 1 56 2 41 1 99 2 31 1 150 1 5 1 363 1 354 4 194 5 262 1 297 2 209 3 314 1 155 5 
297 1 293 1 157 1 56 1 209 1 99 1 140 1 155 1 194 1 354 1 363 1 
223 1 56 1 99 1 171 1 271 1 363 1 354 1 194 1 297 1 102 1 46 1 208 1 90 2 209 1 92 1 199 2 343 1 155 1 
223 1 56 1 99 1 31 1 171 2 102 1 7 1 208 2 209 3 343 1 155 1 271 1 320 1 194 1 354 1 355 1 297 2 90 2 46 2 92 1 199 2 256 1 50 1 
223 1 56 1 3 1 99 1 31 1 171 2 7 1 208 2 209 3 343 1 155 2 271 1 320 1 194 2 354 2 355 1 297 2 90 2 46 2 92 1 199 2 138 1 256 1 50 1 
115 1 81 2 56 1 27 2 42 1 132 1 99 1 171 1 31 1 363 1 355 1 354 3 194 3 34 1 297 1 7 1 209 4 138 1 155 3 128 1 247 1 95 1 349 1 
115 1 81 2 56 1 27 2 42 1 99 1 171 1 31 1 363 1 355 1 354 3 194 3 34 1 297 1 7 1 209 4 255 1 138 1 155 3 128 1 247 1 349 1 
371 1 56 1 99 1 155 1 194 1 354 1 
182 1 56 2 308 1 99 1 171 1 87 1 363 1 354 1 194 1 297 1 209 1 326 1 155 1 
223 2 334 2 56 1 283 1 225 2 120 2 99 1 171 1 150 1 228 2 243 4 173 1 6 2 8 1 102 1 208 1 209 1 368 2 312 1 37 1 343 1 210 3 80 1 155 1 129 1 212 6 292 1 181 1 82 2 10 1 159 2 352 1 14 1 192 1 271 1 252 3 376 1 354 1 194 1 297 1 89 1 90 2 46 1 92 1 199 2 166 1 203 1 
361 2 115 1 143 1 306 1 27 3 77 1 363 1 34 1 35 1 122 1 126 2 209 2 63 1 155 1 128 1 247 1 349 2 81 3 183 1 42 1 248 1 296 2 194 1 354 1 88 1 255 1 328 2 76 1 
371 1 182 1 56 2 42 1 234 1 99 1 171 1 150 1 354 2 194 2 297 1 209 2 155 2 
223 1 56 1 3 1 99 1 171 1 271 1 363 1 354 1 194 1 297 1 46 1 208 1 90 2 209 1 92 1 199 2 343 1 155 1 
182 1 56 2 308 1 99 1 31 1 171 1 87 1 354 1 194 1 297 1 209 1 326 1 155 1 
268 1 0 1 282 1 90 1 208 1 199 1 200 1 93 1 272 1 
282 1 162 1 246 1 
223 1 282 1 93 1 272 1 305 1 
115 1 81 2 223 1 282 1 351 1 27 2 248 1 162 1 320 1 272 2 217 1 274 1 93 2 256 1 50 1 128 1 247 1 246 1 305 2 
168 1 340 1 187 1 198 1 107 1 313 1 85 1 250 1 
168 2 213 1 161 1 187 1 107 3 134 2 85 4 250 4 322 1 321 1 45 1 340 2 245 1 313 1 
280 1 168 1 187 1 1 1 107 1 85 2 134 1 250 2 340 1 198 1 201 1 313 1 
168 1 161 2 187 1 107 1 85 3 250 3 322 2 45 1 229 1 340 1 198 1 313 1 
107 2 189 2 265 1 180 1 
339 1 187 1 198 1 313 1 85 1 250 1 
66 1 168 1 340 1 187 1 198 1 107 1 313 1 134 1 85 2 250 2 
184 1 
168 1 340 1 187 1 198 1 107 1 313 1 85 1 250 1 
168 1 340 1 107 1 140 1 
168 1 340 1 187 1 107 1 313 1 85 1 250 1 
17 1 23 1 250 1 
168 1 161 1 187 1 215 1 107 1 85 3 250 3 322 2 45 1 340 1 198 1 313 1 
168 1 340 1 187 1 43 1 107 1 313 1 134 1 85 2 250 2 
213 1 118 1 187 1 107 1 146 1 85 1 250 1 325 1 198 1 313 1 25 1 
340 1 187 1 198 1 107 1 313 1 85 1 250 1 
168 1 340 2 187 1 198 1 313 1 85 1 250 1 
370 1 26 1 144 1 187 2 107 1 85 2 250 2 340 1 198 1 313 2 
66 1 168 1 213 1 187 1 107 2 85 3 134 2 250 3 321 1 253 1 340 1 198 1 313 1 
168 1 224 1 118 1 187 1 249 1 107 1 146 2 85 2 134 1 250 2 172 1 325 1 340 1 198 1 313 1 
54 1 168 1 213 1 187 2 43 1 107 2 85 4 134 2 250 4 321 1 340 1 198 1 313 2 
66 1 168 1 187 1 107 1 134 1 85 3 250 3 322 1 340 1 198 1 313 1 
213 1 245 1 107 1 321 1 
340 1 107 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 67 (57,226) (57,226) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 67 (57,226) (57,226) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 67 (57,226) (57,226) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 67 (57,226) (57,226) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 321 160 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 321 233 259 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 321 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 321 233 328 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 321 198 139 280 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (167,326) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (167,326) 18 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (167,326) 18 318 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 321 233 74 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 321 160 142 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 108 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 108 34 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 308 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 321 143 146 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 321 138 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 321 233 328 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 321 138 13 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 321 233 328 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 321 233 98 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 321 233 98 35 163 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 321 233 98 35 163 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 321 233 98 35 237 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 321 138 13 234 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 321 138 13 234 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 321 233 98 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (175,317) 184 315 21 162 251 229 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 321 233 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 158 335 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 321 233 309 213 149 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (99,205) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 321 233 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 321 143 146 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 315 21 162 251 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 289 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 321 (166,232) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 321 (144,294) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 321 (144,294) 76 178 (177,276) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 1 12 1 63 1 140 1 65 1 67 1 57 1 302 1 226 1 41 1 201 1 
62 1 12 1 63 1 140 1 65 1 67 1 57 1 302 1 226 1 41 1 201 1 
62 1 12 1 63 1 140 1 65 1 67 1 57 1 302 1 226 1 41 1 201 1 
62 1 12 1 63 1 140 1 65 1 67 1 57 1 302 1 226 1 41 1 201 1 
63 1 65 1 140 4 260 1 211 1 303 1 29 3 194 1 8 1 195 2 219 1 222 2 97 1 225 3 41 4 17 1 201 1 156 1 
63 1 65 1 140 2 211 1 262 1 302 1 303 1 29 1 305 1 113 1 194 1 12 1 219 1 41 2 201 1 153 1 
63 1 65 2 140 3 211 1 302 1 28 1 29 2 194 1 195 1 97 1 225 1 41 3 201 2 
159 1 260 1 211 1 302 1 303 1 165 1 7 1 8 1 219 1 222 2 97 3 225 7 60 1 17 1 63 1 140 9 65 2 28 1 29 5 194 1 195 4 41 9 201 2 156 1 
159 1 260 1 211 1 302 1 303 1 165 1 7 1 8 1 219 1 222 2 97 3 225 7 60 1 17 1 63 1 140 9 65 2 28 1 29 5 194 1 195 4 41 9 201 2 156 1 
135 1 289 1 206 1 
134 1 135 1 267 2 
301 2 171 1 331 1 95 2 1 2 249 2 336 2 298 2 
301 3 84 1 124 1 1 2 2 1 48 1 265 1 91 1 10 1 9 2 171 1 133 2 95 2 136 1 137 2 59 1 180 2 316 1 23 1 320 1 240 1 279 1 144 1 189 1 242 1 73 1 75 1 331 1 246 1 79 1 119 1 249 2 292 2 336 3 298 2 46 1 208 1 
301 1 171 1 95 1 1 1 77 1 249 1 336 1 295 1 190 1 298 1 
301 1 111 1 327 1 190 1 284 1 95 1 135 1 224 1 250 1 336 1 82 1 235 1 122 1 206 1 
301 1 1 1 327 1 190 1 284 1 95 1 135 1 224 1 250 2 249 1 336 1 298 1 82 2 122 1 206 1 
321 1 160 1 36 1 250 1 82 1 
321 1 36 1 259 1 250 1 233 1 82 1 
321 1 250 1 82 1 
301 1 1 1 185 1 190 1 171 1 36 1 95 1 77 1 250 1 249 1 295 1 336 1 82 1 298 1 
135 1 
321 1 36 1 250 1 233 1 328 1 82 1 
321 1 36 2 198 1 250 3 280 1 241 1 253 1 130 1 82 3 139 1 191 1 
331 1 289 1 
301 2 1 1 126 1 95 2 221 1 331 2 249 1 336 2 298 1 
175 1 184 1 145 1 
301 1 84 1 2 1 144 1 242 1 265 1 91 1 9 1 269 1 75 1 133 1 331 1 136 1 137 1 336 1 208 1 
84 1 301 2 1 1 2 1 144 1 265 1 242 1 91 1 9 1 75 1 133 1 95 1 175 1 136 1 39 1 334 1 137 1 249 1 336 2 208 1 
301 3 331 1 95 3 1 3 39 1 249 3 336 3 298 1 
301 1 95 1 1 1 77 1 249 1 336 1 190 1 
301 1 95 1 221 1 1 1 126 1 249 1 336 1 190 1 298 1 
84 1 301 4 124 1 1 3 2 1 48 1 265 1 91 1 10 1 9 1 171 1 133 1 221 1 95 3 136 1 137 1 224 1 180 1 316 1 23 1 240 1 144 1 189 1 327 1 190 1 242 1 284 1 73 1 75 1 331 1 39 1 334 1 119 1 249 3 250 1 292 2 150 1 336 4 299 1 298 2 82 1 122 1 46 1 208 1 
301 2 173 1 331 1 95 2 1 1 39 1 249 1 336 2 235 1 
301 3 1 3 4 1 327 1 190 1 284 1 221 1 95 3 135 1 39 2 334 1 224 1 250 1 249 3 336 3 298 1 82 1 299 1 122 1 
301 2 95 2 221 1 175 1 1 2 39 1 249 2 145 1 336 2 298 1 
301 1 84 1 2 1 144 1 242 1 265 1 91 1 9 1 75 1 133 1 331 1 136 1 137 1 336 1 208 1 
301 1 84 1 2 1 166 1 265 1 91 1 9 1 75 1 133 1 331 1 136 1 137 1 19 1 336 1 208 1 
23 1 124 1 184 1 240 1 183 1 48 2 30 1 307 1 10 1 175 1 119 1 292 2 180 2 300 1 46 1 317 1 
301 1 95 1 1 1 249 1 327 1 336 1 190 1 83 1 
301 5 1 4 330 1 173 1 95 5 221 1 331 1 39 2 56 1 334 1 249 4 336 5 298 1 235 1 
301 2 95 2 1 2 77 1 249 2 336 2 83 1 190 1 
186 1 326 1 
186 1 326 1 
170 1 167 1 
170 1 167 1 
170 1 167 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 
186 1 326 1 18 1 192 1 
318 1 186 1 326 1 250 1 18 1 82 1 192 1 
219 1 303 1 17 1 
219 1 303 1 113 1 
220 1 219 3 270 1 17 2 121 1 113 1 
220 1 219 2 239 1 270 1 17 1 113 1 
220 1 219 2 270 2 17 1 113 1 
74 1 321 1 36 1 250 1 233 1 82 1 
321 1 160 1 36 2 142 1 250 2 82 2 215 1 33 1 
323 1 108 1 241 1 130 1 191 1 332 1 36 1 250 2 227 1 253 1 202 1 82 2 
323 1 108 1 241 1 130 1 191 1 34 1 332 1 227 1 250 1 202 1 253 1 82 1 
289 1 129 1 
136 1 329 1 
16 1 
136 1 91 1 
181 1 129 2 91 1 75 1 136 1 312 1 16 1 
75 1 136 1 91 1 
136 1 274 1 
48 6 88 1 131 1 94 1 310 1 176 4 58 3 180 14 141 2 278 1 183 3 70 1 71 2 114 5 116 2 79 8 40 2 81 1 
48 6 88 1 131 1 94 1 310 3 176 4 58 3 180 14 141 2 278 1 183 3 70 1 71 2 114 7 116 2 79 8 40 2 81 1 
48 6 88 1 131 1 310 1 94 1 176 4 58 3 180 14 20 1 141 2 278 1 183 3 70 1 71 2 114 5 116 2 79 8 40 2 81 1 
141 1 66 3 124 1 322 1 240 1 183 2 48 8 127 1 325 1 114 4 131 1 10 1 310 2 174 1 116 1 176 2 58 2 79 9 40 1 119 1 292 2 103 1 81 1 315 2 180 17 151 1 300 2 204 3 21 2 
124 1 116 1 240 1 79 1 119 1 292 2 81 1 180 1 32 1 131 1 308 1 10 1 
84 1 161 1 211 1 302 1 3 1 303 1 50 1 265 1 9 1 133 1 219 2 137 1 225 1 17 1 63 1 140 2 65 1 29 1 113 1 194 1 115 1 38 1 290 1 80 1 200 1 41 2 201 1 252 1 297 1 121 1 
84 1 161 1 211 1 261 1 302 1 3 1 303 1 50 1 265 1 9 1 133 1 219 2 137 1 225 2 17 1 140 3 65 1 29 1 113 1 194 1 115 1 38 1 80 1 41 3 43 1 201 1 252 1 121 1 297 1 207 1 
84 1 161 1 211 1 261 1 302 1 303 1 50 1 265 1 9 1 133 1 219 2 137 1 225 2 17 1 140 2 29 1 113 1 194 1 38 1 80 1 41 2 43 1 252 1 297 1 121 1 
84 1 302 2 50 2 265 2 306 1 91 2 9 1 133 1 136 2 137 1 140 1 65 1 64 1 69 1 182 1 282 1 75 1 197 1 38 2 78 1 333 1 199 1 80 2 41 1 201 1 203 1 44 1 154 1 208 1 207 1 
84 1 63 1 65 1 140 1 161 1 3 1 302 1 303 1 50 1 113 1 265 1 115 1 9 1 219 2 133 1 38 1 137 1 290 1 41 1 80 1 17 1 252 1 201 1 43 1 121 1 297 1 
248 1 
209 1 321 1 143 1 323 1 241 1 146 1 191 1 9 1 133 1 332 1 137 1 250 1 253 1 82 1 208 1 
301 1 321 1 111 1 327 1 190 1 284 1 268 1 288 1 95 1 224 1 250 2 273 1 138 1 179 1 336 1 254 2 82 2 122 1 235 1 340 1 
301 1 321 1 111 1 327 1 328 1 31 1 190 1 284 1 268 1 288 1 95 1 135 1 224 1 250 2 273 1 179 1 336 1 233 1 254 3 82 2 122 1 235 1 206 1 340 1 
301 1 321 1 111 1 327 1 190 1 284 1 268 1 13 1 288 1 95 1 224 1 250 2 273 1 138 1 179 1 336 1 254 2 82 2 122 1 235 1 340 1 
321 1 250 1 233 1 328 1 82 1 
209 1 301 1 210 1 263 1 264 1 267 1 268 1 134 1 95 1 98 1 224 1 273 1 179 1 233 1 235 1 22 1 321 1 25 1 323 1 110 1 111 1 241 1 327 1 190 1 284 1 191 1 288 1 250 2 253 1 336 1 82 2 254 2 122 1 340 1 
301 1 209 1 210 1 163 1 263 1 212 1 264 1 268 1 134 1 95 1 98 1 224 1 273 1 179 1 233 1 235 1 22 1 321 1 25 1 323 1 110 1 111 1 241 1 327 1 190 1 284 1 191 1 35 1 288 1 250 2 336 1 253 1 82 2 254 2 122 1 340 1 
301 1 209 1 210 1 163 1 263 1 212 1 264 1 268 1 134 1 95 1 98 1 224 1 273 1 179 1 233 1 235 1 22 1 321 1 25 1 323 1 110 1 111 1 241 1 327 1 190 1 284 1 191 1 35 1 288 1 250 2 336 1 253 1 82 2 254 2 122 1 340 1 
301 1 209 1 210 1 87 1 90 1 267 1 268 1 266 1 95 1 98 1 224 1 273 1 179 1 233 1 235 1 237 1 321 1 25 1 323 1 110 1 111 1 241 1 327 1 190 1 284 1 191 1 35 1 288 1 118 1 250 2 336 1 253 1 82 2 254 2 122 1 340 1 
301 1 321 1 111 1 327 1 190 1 284 1 268 1 13 1 288 1 95 1 224 1 250 2 273 1 138 1 179 1 336 1 234 1 254 2 82 2 122 1 235 1 340 1 
301 1 321 1 111 1 327 1 190 1 284 1 268 1 13 1 288 1 95 1 224 1 250 2 273 1 138 1 179 1 336 1 234 1 254 2 82 2 122 1 235 1 340 1 
209 1 301 1 210 1 87 1 90 1 267 1 268 1 95 1 98 1 224 1 273 1 179 1 233 1 235 1 321 1 25 1 323 1 110 1 111 1 241 1 327 1 190 1 284 1 191 1 288 1 118 1 250 2 253 1 336 1 82 2 254 2 122 1 340 1 
23 1 141 1 278 1 124 1 183 1 240 1 48 2 70 1 30 1 71 1 114 2 10 1 331 2 116 1 176 2 58 1 289 1 79 3 40 1 119 1 292 2 180 5 46 1 
23 1 66 1 124 1 162 1 184 4 240 1 324 1 48 1 145 3 10 1 175 4 58 1 79 3 119 1 292 2 251 1 229 1 315 1 180 4 204 1 21 1 46 1 
84 1 301 2 124 1 1 1 2 1 48 1 265 1 91 1 9 1 10 1 269 1 218 1 133 1 95 1 136 1 137 1 59 1 180 2 23 1 107 1 240 1 324 1 144 1 145 1 242 1 75 1 73 1 196 1 331 1 39 1 334 1 79 1 249 1 119 1 292 2 336 2 208 1 46 1 
84 1 301 2 124 2 1 1 2 1 48 2 304 1 265 1 91 1 93 1 10 2 9 1 216 1 133 1 95 1 175 2 136 1 272 1 58 1 137 1 177 1 315 1 180 5 21 1 23 2 184 2 240 2 324 1 144 1 189 1 242 1 75 1 73 1 39 1 334 1 79 3 249 1 119 2 292 4 336 2 46 2 208 1 
84 1 124 1 48 1 164 1 265 2 306 1 91 2 9 2 10 1 133 2 136 2 137 2 59 1 180 2 23 1 64 1 105 1 69 1 240 1 279 1 75 1 73 1 78 1 199 1 79 1 119 1 292 2 44 1 208 1 46 1 
301 1 0 1 124 1 1 1 48 2 10 1 221 1 95 1 175 1 176 1 58 1 315 1 180 3 21 1 23 1 184 1 240 1 183 1 324 1 145 1 114 1 79 1 249 1 119 1 292 2 336 1 298 1 300 1 46 1 
23 1 124 1 184 1 240 1 30 1 10 1 175 1 58 1 79 2 119 1 292 2 296 1 180 2 315 1 46 1 
23 1 124 1 184 1 240 1 183 1 48 2 30 1 307 1 10 1 175 1 119 1 292 2 180 2 300 1 46 1 
23 1 124 1 184 1 240 1 30 1 10 1 175 1 58 1 79 2 119 1 292 2 180 2 315 1 46 1 21 1 
23 1 105 1 124 1 184 1 240 1 10 1 175 1 58 1 79 2 119 1 292 2 296 1 180 2 315 1 46 1 
23 1 105 1 124 1 184 1 240 1 183 1 48 2 307 1 10 1 175 1 119 1 292 2 180 2 300 1 46 1 
23 1 105 1 124 1 184 1 240 1 10 1 175 1 58 1 79 2 119 1 292 2 180 2 315 1 46 1 21 1 
23 1 124 1 184 1 240 1 10 1 175 1 58 1 79 2 119 1 292 2 315 1 180 2 46 1 21 1 
84 1 301 1 124 1 2 1 48 1 265 1 91 1 9 1 10 1 133 1 136 1 137 1 59 1 180 2 23 1 240 1 144 1 189 1 242 1 75 1 73 1 331 1 79 1 119 1 292 2 336 1 208 1 46 1 
84 1 301 1 124 1 2 1 48 1 166 1 265 1 91 1 9 1 10 1 133 1 136 1 137 1 59 1 19 1 180 2 319 1 23 1 240 1 75 1 73 1 331 1 79 1 119 1 292 2 336 1 208 1 46 1 
23 1 124 1 184 1 240 1 324 1 10 1 175 1 58 1 79 2 119 1 292 2 180 2 315 1 46 1 21 1 
84 1 301 1 124 1 2 1 265 1 93 1 91 1 9 1 10 1 133 1 175 1 136 1 58 1 137 1 180 2 315 1 21 1 23 1 184 1 240 1 144 1 189 1 242 1 75 1 79 2 200 1 119 1 292 2 336 1 46 1 
301 1 124 1 1 1 10 1 310 1 221 1 95 1 175 1 58 1 315 1 180 2 21 1 23 1 240 1 184 1 324 1 188 1 145 1 114 1 79 2 249 1 119 1 292 2 336 1 298 1 46 1 
258 1 124 4 48 16 6 1 213 1 10 4 310 3 14 1 176 3 271 1 313 1 58 4 100 1 103 2 180 33 315 3 21 3 141 1 278 1 66 2 183 4 240 4 70 1 325 2 187 1 112 1 71 1 114 6 32 1 147 1 37 1 245 3 149 1 116 1 79 17 40 1 119 4 292 8 293 1 204 2 300 3 
258 1 124 3 48 12 213 1 10 3 217 1 310 2 14 1 176 2 271 2 313 1 58 3 100 1 103 2 180 26 315 3 21 3 66 2 183 2 240 3 325 2 187 1 112 2 114 4 32 1 147 1 245 4 37 1 149 1 79 14 119 3 292 6 204 2 300 2 
258 1 124 4 48 18 213 1 10 4 217 1 310 4 14 1 176 3 271 2 313 1 58 4 100 1 103 2 180 37 315 3 21 3 141 1 278 1 66 3 183 4 240 4 70 1 325 3 187 1 112 1 71 1 114 7 32 1 147 1 37 1 245 4 149 1 116 1 79 19 40 1 119 4 292 8 293 1 152 1 204 3 300 3 
258 1 124 4 48 17 213 1 10 4 217 1 310 3 14 1 176 2 271 1 313 1 58 4 100 1 103 2 180 35 315 3 21 3 141 1 278 1 66 2 183 4 240 4 70 1 325 2 187 1 112 1 71 1 114 5 32 1 147 1 37 1 245 4 149 1 116 1 79 18 40 1 119 4 292 8 293 1 204 2 300 3 
258 1 124 3 48 14 213 1 10 3 217 1 310 3 14 1 176 3 271 1 313 1 58 3 100 1 103 2 180 28 315 3 21 3 66 2 183 3 240 3 325 2 187 1 112 1 114 6 32 1 147 1 37 1 245 4 149 1 79 14 119 3 292 6 204 2 300 3 
301 1 95 1 15 1 89 1 336 1 169 1 
84 1 106 1 161 1 3 1 303 1 113 1 265 1 9 2 219 2 133 2 38 1 137 2 200 1 17 1 42 1 43 1 252 1 121 1 155 1 
84 1 161 1 3 1 303 1 113 1 265 1 9 1 219 2 133 1 38 1 137 1 17 1 102 1 42 1 43 1 252 1 121 1 
84 1 306 1 265 2 91 2 9 1 133 1 136 2 137 1 64 1 182 1 69 1 282 1 75 1 38 1 78 1 199 1 44 1 255 1 155 1 208 1 
84 1 106 1 161 1 3 1 303 1 113 1 265 1 9 1 219 2 133 1 38 1 137 1 17 1 42 1 43 1 252 1 121 1 155 1 
5 1 
135 1 25 1 323 1 289 1 99 1 205 1 206 1 
209 1 321 1 25 1 323 1 263 1 241 1 264 1 191 1 267 1 134 1 253 1 233 1 22 1 
84 1 158 1 209 1 133 1 335 1 137 1 241 1 253 1 265 1 191 1 9 1 208 1 
209 1 213 1 309 1 267 7 134 4 14 1 135 4 58 1 101 4 233 1 315 1 21 1 104 1 321 1 66 1 25 2 183 1 323 5 325 1 241 1 191 1 149 1 253 1 204 1 300 1 206 1 123 4 
301 1 209 1 1 1 212 1 88 1 171 1 95 1 58 2 104 2 141 1 68 1 25 2 183 1 323 2 185 1 241 1 71 1 190 1 191 1 77 1 40 1 250 1 249 1 336 1 253 1 295 1 82 1 298 1 
209 1 135 1 25 1 323 1 99 1 241 1 253 1 206 1 191 1 
25 2 183 1 323 1 267 2 134 1 135 1 58 1 101 1 315 1 300 1 21 1 123 1 
321 1 233 1 
209 1 321 1 143 1 323 1 241 1 146 1 191 1 9 1 133 1 332 1 54 1 137 1 253 1 208 1 
301 3 84 1 124 1 1 2 2 1 48 1 265 1 91 1 10 1 9 1 133 1 171 1 95 2 136 1 137 1 180 1 316 1 23 1 240 1 144 1 189 1 242 1 73 1 75 1 331 1 119 1 249 2 292 2 336 3 298 2 208 1 46 1 
209 1 25 2 323 1 241 1 191 1 267 4 134 2 332 1 311 1 116 1 135 4 101 2 253 1 206 2 123 2 
47 1 247 1 314 1 
157 1 47 1 86 1 314 1 285 1 
47 1 247 1 314 1 
47 1 247 1 314 1 
47 1 314 1 45 1 
47 1 314 1 45 1 
47 1 314 1 45 1 
47 1 314 1 
186 1 326 1 
124 2 48 8 88 1 10 2 310 3 176 4 58 3 103 1 180 17 141 2 278 1 240 2 183 3 70 1 71 2 114 7 116 1 79 9 40 2 119 2 292 4 
141 1 278 1 183 1 48 2 70 1 71 1 114 2 116 1 176 2 289 1 58 1 79 3 40 1 180 5 
124 1 183 1 240 1 48 2 114 2 10 1 310 1 176 1 58 1 79 2 291 1 119 1 292 2 315 1 180 4 300 1 21 1 
66 1 79 1 48 1 325 1 180 2 204 1 
66 1 162 1 58 1 79 3 48 1 251 1 315 1 180 4 204 1 21 1 
48 1 180 1 204 1 
66 1 79 1 180 1 
124 1 240 1 183 1 48 3 304 1 114 3 10 1 310 1 176 2 58 1 79 3 119 1 291 1 292 2 180 6 315 1 300 1 21 1 
258 1 124 1 48 6 213 1 10 1 310 1 14 1 176 1 58 2 180 12 315 2 21 2 66 1 240 1 183 2 325 1 32 1 114 2 147 1 149 1 79 6 119 1 292 2 204 1 300 2 
141 1 183 1 48 3 71 1 114 2 310 1 176 1 58 1 79 3 40 1 180 6 
141 1 278 1 124 1 240 1 48 2 70 1 114 2 283 1 10 1 310 1 176 1 79 1 40 1 119 1 292 2 103 1 180 3 
141 2 124 1 240 1 183 2 48 5 88 1 71 1 32 1 114 5 10 1 310 2 176 3 58 2 79 5 40 2 119 1 292 2 180 10 
124 1 240 1 32 1 114 1 10 1 310 1 58 1 79 2 119 1 292 2 315 1 180 2 
124 1 183 1 240 1 48 2 114 2 32 1 10 1 310 1 176 1 58 1 79 2 119 1 292 2 315 1 180 4 300 1 21 1 
141 1 124 3 240 3 48 2 283 1 32 1 114 2 10 3 310 1 176 1 79 1 40 1 119 3 292 6 103 1 293 1 180 3 
124 4 48 15 127 1 88 1 10 4 310 4 174 1 176 4 58 5 103 1 180 31 315 2 21 2 141 2 278 1 66 3 322 1 240 4 183 5 70 1 325 1 71 2 32 1 114 8 116 1 79 16 40 2 291 1 119 4 292 8 293 1 204 3 300 2 
258 1 124 2 48 10 88 1 213 1 10 2 310 4 14 1 176 5 58 5 103 1 180 24 315 2 21 2 141 2 278 1 66 1 240 2 183 4 70 1 325 1 71 2 32 1 114 9 147 1 149 1 116 1 79 14 40 2 119 2 292 4 204 1 300 1 
258 1 124 3 48 10 88 1 213 1 10 3 310 2 14 1 176 5 58 5 103 1 180 24 315 2 21 2 141 2 278 1 66 1 240 3 183 4 70 1 325 1 71 2 32 1 114 7 147 1 149 1 116 1 79 14 40 2 119 3 291 1 292 6 204 1 300 1 
258 1 124 3 48 13 88 1 213 1 10 3 310 2 14 1 176 5 58 5 103 1 180 26 315 2 21 2 141 2 278 1 66 1 240 3 183 5 70 1 325 1 71 2 32 1 114 7 147 1 149 1 116 1 79 13 40 2 291 1 119 3 292 6 204 1 300 2 
258 1 124 3 48 10 88 1 213 1 10 3 310 4 14 1 176 5 58 5 103 1 180 24 315 2 21 2 141 2 278 1 66 1 240 3 183 4 70 1 325 1 71 2 32 1 114 9 147 1 149 1 116 1 79 14 40 2 291 1 119 3 292 6 204 1 300 1 
258 1 124 2 48 10 88 1 213 1 10 2 310 4 14 1 176 5 58 5 103 1 180 24 315 2 21 2 141 2 278 1 66 1 240 2 183 4 70 1 325 1 71 2 32 1 114 9 147 1 149 1 116 1 79 14 40 2 119 2 292 4 204 1 300 1 
258 1 124 1 48 6 213 1 10 1 310 1 14 1 176 1 58 2 180 12 315 2 21 2 66 1 240 1 183 2 325 1 32 1 114 2 147 1 149 1 79 6 119 1 292 2 204 1 300 2 
258 1 124 4 48 11 88 1 213 1 10 4 310 2 14 1 176 5 58 5 103 2 180 25 315 2 21 2 141 2 278 1 66 1 240 4 183 4 70 1 325 1 71 2 32 1 114 7 147 1 149 1 116 1 79 14 40 2 291 1 119 4 292 8 204 1 300 1 
258 1 124 4 48 7 213 1 10 4 310 3 14 1 176 3 58 3 103 2 180 16 315 3 21 3 66 1 240 4 183 2 325 1 32 1 114 6 147 1 149 1 79 9 119 4 292 8 293 1 204 1 300 2 
141 3 278 1 183 1 48 4 70 2 71 1 114 6 310 3 176 3 58 1 79 3 40 3 180 7 
258 1 124 4 48 11 88 1 213 1 10 4 310 2 14 1 176 5 58 5 103 2 180 25 315 2 21 2 141 2 278 1 66 1 240 4 183 4 70 1 325 1 71 2 32 1 114 7 147 1 149 1 116 1 79 14 40 2 119 4 292 8 293 1 204 1 300 1 
301 1 173 1 331 1 95 1 109 1 336 1 235 1 
301 1 24 1 256 1 109 1 51 1 92 1 193 1 173 1 331 1 95 1 336 1 235 1 
64 1 133 1 136 1 289 1 137 1 306 1 91 1 9 1 208 1 
301 2 84 1 1 1 2 1 144 1 265 1 91 1 9 1 75 1 133 1 331 1 95 1 136 1 39 1 137 1 249 1 336 2 208 1 
84 1 301 2 1 2 2 1 265 1 91 2 214 1 9 1 133 1 95 2 136 3 137 1 274 1 275 1 144 1 327 1 190 1 75 2 331 1 39 1 249 1 336 2 122 1 
84 1 301 2 1 2 2 1 166 1 265 1 91 2 214 1 9 2 133 2 95 2 136 3 137 2 274 1 275 1 26 1 327 1 190 1 75 2 331 1 39 1 249 1 336 2 122 1 
133 1 321 1 136 1 137 1 250 1 232 1 82 1 275 1 329 1 9 1 
133 1 321 1 136 1 137 1 250 1 294 1 82 1 275 1 329 1 9 1 
84 1 133 1 85 1 137 1 265 1 9 1 
84 2 257 1 85 1 279 1 52 1 265 3 91 2 9 7 75 1 148 1 133 6 136 3 78 1 312 1 137 7 199 1 200 1 43 1 61 1 337 1 208 2 
84 1 1 1 2 1 88 1 265 1 93 1 91 1 9 1 10 2 95 1 176 4 177 1 180 13 23 2 277 1 278 1 183 3 189 1 190 1 114 5 116 1 39 1 40 2 200 1 119 2 292 4 46 2 301 2 124 2 48 6 310 1 133 1 136 1 137 1 58 3 141 2 240 2 324 1 144 1 70 1 71 2 242 1 243 1 75 1 331 3 79 7 249 1 336 2 
209 1 276 1 321 1 241 1 191 1 329 1 9 1 133 1 36 1 54 1 136 1 76 1 137 1 178 1 250 1 294 1 253 1 82 1 208 1 
84 1 158 1 133 1 85 1 137 1 265 1 9 1 
84 1 64 1 69 1 265 2 306 1 91 2 9 2 75 1 133 2 136 2 78 1 137 2 199 1 200 1 44 1 208 1 
84 1 69 1 265 2 91 1 9 2 75 1 133 2 136 1 78 1 137 2 199 1 120 1 44 1 275 1 
84 1 219 1 133 1 161 1 137 1 303 1 113 1 265 1 9 1 208 1 
84 1 265 1 91 1 9 2 133 2 172 1 148 1 136 1 137 2 200 1 43 1 
84 2 257 1 265 3 52 1 306 1 91 3 9 3 133 2 136 4 137 3 64 1 69 1 75 1 148 1 78 1 199 1 200 1 44 1 208 1 
84 2 257 1 265 3 306 1 91 3 9 3 133 2 136 4 137 3 231 1 64 1 69 1 75 1 148 1 78 1 199 1 200 1 44 1 208 1 
301 2 84 1 1 1 2 1 166 1 265 1 91 1 9 1 75 1 133 1 331 1 95 1 136 1 39 1 137 1 249 1 336 2 208 1 
84 1 265 2 91 1 9 1 75 1 133 1 136 1 78 1 312 1 137 1 199 1 61 1 275 1 
238 1 15 1 49 1 89 1 338 1 169 1 
238 1 72 1 168 1 
331 1 238 1 96 1 49 1 338 1 
238 1 49 2 128 1 327 1 190 1 72 1 284 1 168 1 331 1 36 1 135 1 96 2 224 1 250 2 82 2 299 1 122 1 206 1 338 2 
211 1 289 1 29 1 194 1 
140 1 65 1 211 1 41 1 29 1 201 1 194 1 
302 1 41 1 50 1 
63 1 65 1 140 3 211 1 125 1 29 1 305 2 194 1 287 1 117 1 41 3 201 1 
140 2 65 1 222 1 211 1 225 1 41 2 29 1 201 1 194 1 
63 1 65 1 140 1 303 1 29 1 195 1 219 1 41 1 17 1 201 1 156 1 
63 1 140 1 65 1 211 1 41 1 29 1 201 1 
63 1 140 1 65 1 211 2 41 1 201 1 194 1 
63 1 65 2 140 2 211 1 27 1 29 1 11 1 223 1 41 2 201 2 
63 1 159 1 65 1 140 3 211 1 165 1 29 2 194 1 195 1 97 1 225 2 41 3 201 1 
63 1 65 1 140 2 211 1 303 1 29 1 113 1 194 1 219 2 225 1 41 2 17 1 201 1 121 1 236 1 
63 1 65 2 140 4 211 1 29 2 194 1 8 1 195 1 222 1 97 1 225 2 41 4 201 2 
63 1 140 1 65 1 211 1 41 1 29 1 201 1 194 1 
140 4 65 1 211 2 125 1 29 3 305 1 194 2 195 1 117 1 55 1 97 1 225 2 41 4 201 1 
63 1 65 1 140 2 211 1 29 1 132 1 194 1 225 1 41 2 228 1 60 1 201 1 
63 1 65 1 140 3 211 1 125 1 29 1 305 2 194 1 244 1 117 2 41 3 201 1 
286 2 29 2 230 1 339 1 
63 1 140 1 65 1 41 1 201 1 281 1 
159 1 63 1 140 2 65 1 211 1 225 1 41 2 29 1 201 1 194 1 
53 1 
63 1 140 1 65 1 211 1 41 1 29 1 201 1 194 1 
159 1 63 1 140 3 65 1 211 1 225 1 41 3 29 1 201 1 305 1 194 1 
195 1 55 1 97 1 29 1 
211 1 29 1 

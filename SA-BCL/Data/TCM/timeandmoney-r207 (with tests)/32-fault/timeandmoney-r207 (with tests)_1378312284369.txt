#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 323 (106,219) (106,219) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 323 (106,219) (106,219) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 323 (106,219) (106,219) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 323 (106,219) (106,219) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) 325 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 290 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) 325 5 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 235 172 231 (154,189) 262 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (73,328) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (73,328) 45 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (73,328) 45 35 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 235 172 213 296 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 235 172 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (115,184,234) (115,184,234) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (115,184,234) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (115,184,234) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (250,298) (250,298) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (115,184,234) (115,184,234) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 235 71 294 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 290 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) (173,229) (26,282) 18 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 235 71 294 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 235 172 231 (154,189) 262 89 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) (173,229) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 159 240 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 159 240 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 159 240 164 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 159 240 164 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 235 71 294 (66,230) (66,230) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 172 213 104 130 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 235 71 294 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) 325 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 235 172 231 (154,189) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 260 (154,189) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 260 (33,270) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 235 172 231 (33,270) 36 (173,229) (173,229) (26,282) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 235 172 213 104 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 235 71 294 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 235 172 195 332 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 235 320 291 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 235 320 136 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 235 172 231 (154,189) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 1 275 1 300 1 276 1 323 1 219 1 263 1 201 1 203 1 19 1 118 1 77 1 163 1 
106 1 275 1 300 1 276 1 323 1 219 1 263 1 201 1 203 1 19 1 118 1 77 1 163 1 
106 1 275 1 300 1 276 1 323 1 219 1 263 1 201 1 203 1 19 1 118 1 77 1 163 1 
106 1 275 1 300 1 276 1 323 1 219 1 263 1 201 1 203 1 19 1 118 1 77 1 163 1 
275 1 300 4 277 3 176 1 323 1 87 2 263 1 201 4 149 1 285 1 222 3 13 2 224 1 19 1 99 1 77 1 163 1 125 1 
275 1 300 1 276 1 323 1 263 1 201 1 149 1 311 1 95 1 19 1 118 1 77 1 142 1 169 1 125 1 
275 2 300 3 277 1 263 1 201 3 149 1 285 1 222 2 13 1 118 1 77 2 124 1 125 1 
300 9 176 1 87 2 263 1 222 5 13 4 224 1 19 1 99 1 188 1 275 2 145 1 277 7 323 1 201 9 149 1 285 3 41 1 118 1 77 2 163 1 251 1 124 1 125 1 
300 9 176 1 87 2 263 1 222 5 13 4 224 1 19 1 99 1 188 1 275 2 145 1 277 7 323 1 201 9 149 1 285 3 41 1 118 1 77 2 163 1 251 1 124 1 125 1 
174 1 
206 1 305 1 102 2 
144 2 42 1 52 2 46 2 22 2 239 2 16 1 114 2 
172 1 3 1 173 1 52 1 16 1 92 2 56 2 187 2 22 1 23 1 270 1 231 1 144 1 235 1 281 1 325 1 70 1 239 1 202 1 36 1 114 1 46 1 335 1 
144 1 9 1 52 1 46 1 150 1 22 1 239 1 16 1 114 1 170 1 
0 1 232 1 144 1 196 1 233 1 52 1 305 1 111 1 239 1 329 1 316 1 61 1 297 1 170 1 
232 2 144 1 196 1 233 1 52 1 305 1 239 1 329 1 114 1 46 1 22 1 316 2 61 1 297 1 170 1 
232 1 301 1 120 1 316 1 289 1 
232 2 57 1 196 1 120 1 305 1 316 2 55 1 289 1 
232 1 316 1 289 1 
232 1 144 1 9 1 88 1 52 1 150 1 16 1 239 1 114 1 120 1 46 1 22 1 316 1 170 1 
305 1 
232 2 63 1 196 1 120 1 305 1 316 2 55 1 289 1 
232 5 196 1 7 1 305 1 11 1 287 2 90 1 55 1 152 1 289 2 40 1 75 1 209 2 120 2 315 1 122 2 316 5 143 1 24 1 
174 1 
144 2 52 2 32 1 239 2 114 1 225 1 42 2 46 1 22 1 
261 1 253 1 38 1 
231 1 172 1 3 1 290 1 235 1 187 1 202 1 23 1 92 1 270 1 36 1 56 1 
231 1 172 1 144 1 3 1 321 1 235 1 52 1 239 1 202 1 92 1 36 1 56 1 312 1 187 1 46 1 22 1 23 1 270 1 
144 3 321 1 42 1 52 3 46 3 22 3 239 3 114 1 
144 1 52 1 46 1 150 1 22 1 239 1 170 1 
225 1 144 1 52 1 46 1 32 1 22 1 239 1 114 1 170 1 
172 1 173 1 3 1 5 1 52 3 16 1 92 1 56 1 312 1 187 1 22 3 316 1 61 1 23 1 270 1 231 1 232 1 144 3 321 1 233 1 235 1 32 1 325 1 112 1 239 3 202 1 36 1 329 1 114 2 46 3 297 1 170 1 
183 1 144 2 321 1 42 1 52 2 46 1 111 1 22 1 239 2 
232 1 144 3 321 2 233 1 32 1 52 3 305 1 239 3 112 1 329 1 114 1 312 1 46 3 314 1 22 3 316 1 61 1 297 1 170 1 
144 2 321 1 261 1 52 2 46 2 32 1 22 2 239 2 253 1 114 1 
231 1 172 1 3 1 235 1 187 1 202 1 23 1 92 1 270 1 36 1 56 1 
231 1 172 1 3 1 235 1 187 1 189 1 262 1 202 1 23 1 92 1 56 1 
49 1 175 1 50 1 198 1 261 1 326 2 223 1 180 1 309 1 38 1 155 1 313 1 161 1 186 1 141 2 265 1 105 1 253 1 214 2 
144 1 233 1 58 1 52 1 46 1 22 1 239 1 170 1 
144 5 321 2 52 5 32 1 111 1 239 5 114 1 183 1 312 1 42 1 46 4 211 1 245 1 22 4 
144 2 58 1 52 2 46 2 150 1 22 2 239 2 170 1 
73 1 264 1 
73 1 264 1 
1 1 328 1 
1 1 328 1 
1 1 328 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
73 1 264 1 
128 1 45 1 73 1 264 1 
232 1 128 1 45 1 316 1 35 1 73 1 264 1 
19 1 323 1 163 1 
19 1 323 1 95 1 
256 1 19 3 10 1 163 2 267 1 95 1 
256 1 19 1 97 1 10 1 247 1 95 1 
256 1 19 2 10 2 163 1 95 1 
50 1 257 1 7 3 218 1 131 1 305 2 306 1 309 1 55 1 185 1 100 2 102 3 315 1 21 1 316 5 232 5 147 2 196 1 197 1 278 1 280 1 287 1 238 2 34 1 152 2 289 1 158 1 206 1 209 1 120 4 122 1 254 1 
301 5 50 3 7 8 305 5 306 1 309 3 55 1 185 4 100 6 102 9 315 1 316 9 60 1 24 1 191 1 232 9 196 1 278 3 110 1 280 2 284 1 236 1 287 2 238 6 34 3 237 1 152 6 289 6 333 5 158 3 206 3 209 2 120 7 122 2 254 2 
50 1 257 1 7 3 305 3 309 1 185 1 100 2 21 1 102 4 316 3 24 1 232 3 196 1 147 1 278 1 280 1 287 1 34 1 238 2 152 2 158 1 206 2 209 1 120 2 122 1 254 1 
50 2 257 1 7 5 305 4 309 2 185 2 100 4 102 7 21 1 316 4 24 1 191 1 232 4 196 1 147 2 278 2 110 1 280 1 236 1 287 1 238 4 34 2 152 4 158 2 206 3 209 1 120 3 122 1 254 1 
174 1 
260 1 
200 1 
235 1 
172 1 235 1 296 1 213 1 
172 1 235 1 
336 1 
299 1 310 4 309 2 139 1 141 4 105 3 317 1 107 1 30 1 324 1 326 8 286 1 34 2 155 4 292 1 241 1 121 1 168 1 
299 1 310 4 309 2 139 1 141 5 105 3 317 1 107 1 30 1 324 1 326 9 286 1 34 2 155 5 292 1 241 2 121 1 168 1 
299 1 4 1 310 4 309 2 139 1 141 4 105 3 317 1 107 1 30 1 324 1 326 8 286 1 34 2 155 4 241 1 292 1 121 1 168 1 
299 2 171 1 175 1 50 3 302 1 180 1 310 15 309 5 313 1 139 2 265 1 141 18 103 1 105 7 317 1 271 1 107 2 30 1 278 3 324 1 199 4 326 33 286 2 34 5 153 1 331 1 155 11 292 2 241 4 158 3 43 3 160 1 121 1 168 1 214 2 
299 1 175 2 180 2 309 2 310 5 313 2 139 1 265 2 141 6 105 4 317 1 107 1 30 1 326 11 286 1 34 2 155 6 292 1 241 2 160 1 121 1 244 1 168 1 214 4 216 1 
300 1 275 1 184 1 156 1 86 1 234 1 118 1 187 1 77 1 201 1 263 1 92 1 56 1 
300 2 275 1 273 1 184 1 156 1 277 1 207 1 118 1 187 1 77 1 201 2 269 1 92 1 56 1 
300 1 156 1 277 1 207 1 118 1 187 1 201 1 92 1 269 1 115 1 56 1 
273 1 275 1 300 1 3 1 259 1 201 1 92 1 56 1 156 2 187 1 118 2 77 1 250 1 298 1 
300 1 275 1 184 1 156 1 234 1 207 1 118 1 187 1 77 1 201 1 263 1 92 1 56 1 
47 1 
232 2 3 2 64 1 7 1 235 1 71 1 287 1 92 2 93 1 55 1 152 1 289 2 56 2 293 1 294 1 209 1 187 2 315 1 122 1 316 2 254 1 
0 1 52 1 55 1 316 3 61 1 232 3 272 1 144 1 63 1 233 1 65 1 283 2 111 1 239 1 329 1 289 2 157 1 119 1 48 1 297 1 80 1 170 1 
0 1 52 1 305 1 55 1 316 3 61 1 232 3 144 1 63 1 233 1 196 1 65 1 283 3 68 1 111 1 239 1 329 1 289 1 157 1 119 1 48 1 297 1 80 1 170 1 
0 1 52 1 305 1 55 1 181 1 316 3 61 1 232 3 272 1 144 1 63 1 233 1 196 1 65 1 283 3 68 1 111 1 239 1 329 1 289 2 157 1 119 1 48 1 297 1 80 1 170 1 
0 1 7 1 181 4 101 1 272 4 196 5 31 1 283 6 111 1 287 1 113 2 289 7 206 2 209 1 119 1 122 1 295 2 123 1 48 1 297 1 52 1 305 5 308 2 55 3 315 1 316 5 61 1 318 2 232 5 144 1 63 1 233 1 322 1 65 1 68 4 69 1 239 1 329 1 152 1 157 1 242 1 78 1 80 1 170 1 
0 1 7 1 181 2 102 2 272 2 196 1 31 1 283 4 111 1 287 1 113 2 289 4 206 2 209 1 119 1 122 1 295 2 48 1 297 1 52 1 305 2 54 1 308 2 55 2 315 1 316 4 61 1 318 2 232 4 144 1 233 1 65 1 68 2 239 1 329 1 152 1 157 1 242 1 80 1 170 1 
0 1 7 1 52 1 305 1 308 2 181 2 55 2 101 1 315 1 316 4 61 1 318 2 272 2 232 4 144 1 196 1 233 1 31 1 65 1 68 2 283 4 69 1 111 1 287 1 239 1 113 2 329 1 289 4 152 1 157 1 206 2 242 1 209 1 119 1 295 2 122 1 123 1 48 1 297 1 80 1 170 1 
0 1 7 1 52 1 305 1 308 2 181 2 55 2 101 1 315 1 316 4 61 1 318 2 272 2 232 4 144 1 196 1 233 1 31 1 65 1 68 2 283 4 69 1 111 1 287 1 239 1 113 2 329 1 289 4 152 1 157 1 206 2 242 1 209 1 119 1 295 2 122 1 123 1 48 1 297 1 80 1 170 1 
0 1 2 1 7 1 9 1 88 1 16 1 22 1 102 2 192 1 196 1 283 2 111 1 287 1 113 2 114 1 289 2 209 1 44 2 46 1 119 1 122 1 123 1 48 1 297 1 52 2 220 1 305 1 308 2 55 2 315 1 316 4 61 1 232 4 144 2 233 1 65 1 150 1 239 2 72 2 329 1 152 1 157 1 242 1 80 1 170 2 
0 1 7 1 52 1 305 1 308 2 55 2 181 3 315 1 101 1 316 4 61 1 318 2 232 4 272 3 144 1 196 1 233 1 322 1 31 1 65 1 283 5 68 3 69 1 111 1 287 1 239 1 113 2 329 1 152 1 289 5 157 1 206 2 242 1 209 1 119 1 295 2 122 1 123 1 48 1 297 1 80 1 170 1 
0 1 7 1 52 1 305 1 308 2 55 2 181 3 315 1 101 1 316 4 61 1 318 2 232 4 272 3 144 1 196 1 233 1 322 1 31 1 65 1 283 5 68 3 69 1 111 1 287 1 239 1 113 2 329 1 152 1 289 5 157 1 206 2 242 1 209 1 119 1 295 2 122 1 123 1 48 1 297 1 80 1 170 1 
0 1 7 1 52 1 220 1 54 1 308 1 55 1 102 1 315 1 316 3 61 1 232 3 144 1 233 1 65 1 283 2 111 1 287 1 72 1 239 1 113 1 329 1 289 1 152 1 157 1 44 1 242 1 209 1 119 1 122 1 48 1 297 1 80 1 170 1 
49 1 174 1 175 1 313 1 161 1 265 1 223 1 180 1 214 2 
49 1 175 1 313 1 265 1 223 1 15 1 180 1 214 2 37 1 
49 1 172 1 3 1 175 1 52 1 178 1 223 1 15 1 92 1 180 1 310 1 56 1 312 1 313 1 187 1 265 1 141 1 22 1 23 1 270 1 231 1 144 1 321 1 109 1 235 1 67 1 326 2 239 1 202 1 36 1 290 1 74 1 46 1 337 1 253 1 214 2 
49 1 172 1 173 1 175 1 3 1 52 1 223 1 15 1 180 1 92 1 56 1 312 1 18 1 313 1 265 1 187 1 141 1 229 1 22 1 23 1 270 1 231 1 26 1 144 1 321 1 235 1 67 1 326 1 239 1 202 1 36 1 46 1 214 2 
49 1 175 1 3 1 235 1 67 1 281 1 326 2 71 1 223 1 180 1 92 2 310 1 56 2 226 1 313 1 294 1 141 1 265 1 187 2 162 1 337 1 214 2 
49 1 217 1 175 1 50 1 261 1 52 1 223 1 15 1 180 1 310 1 309 1 313 1 265 1 141 2 22 1 105 1 144 1 278 1 32 1 326 3 239 1 34 1 114 1 38 1 155 1 158 1 46 1 253 1 214 2 
49 1 175 1 129 1 261 1 326 2 223 1 34 1 180 1 310 2 38 1 155 1 241 1 313 1 158 1 161 1 265 1 253 1 214 2 
49 1 175 1 50 1 198 1 261 1 326 2 223 1 180 1 309 1 38 1 155 1 313 1 161 1 265 1 141 2 105 1 253 1 214 2 
49 1 175 1 50 1 261 2 223 1 180 1 310 2 309 1 313 1 265 1 141 2 105 1 278 1 326 4 34 1 38 2 155 2 241 1 158 1 161 1 214 2 253 2 
49 1 175 1 129 1 261 1 326 2 223 1 34 1 180 1 310 2 38 1 155 1 241 1 226 1 313 1 158 1 265 1 253 1 214 2 
49 1 175 1 50 1 198 1 261 1 326 2 223 1 180 1 309 1 38 1 155 1 226 1 313 1 265 1 141 2 105 1 253 1 214 2 
49 1 175 1 278 1 261 1 326 2 223 1 34 1 180 1 310 2 38 1 155 1 241 1 226 1 313 1 158 1 265 1 253 1 214 2 
49 1 175 1 278 1 261 1 326 2 223 1 34 1 180 1 310 2 38 1 155 1 241 1 313 1 158 1 265 1 253 1 214 2 
231 1 172 1 173 1 3 1 235 1 187 1 202 1 23 1 92 1 270 1 36 1 56 1 
231 1 172 1 3 1 235 1 187 1 189 1 262 1 89 1 202 1 23 1 92 1 56 1 
49 1 175 1 278 1 261 1 326 2 223 1 15 1 34 1 180 1 310 2 38 1 155 1 241 1 313 1 158 1 265 1 253 1 214 2 
231 1 173 1 172 1 86 1 235 1 92 1 202 1 36 1 56 1 187 1 229 1 23 1 270 1 
49 1 175 1 52 1 261 1 223 1 15 1 180 1 310 2 313 1 265 1 22 1 144 1 28 1 278 1 32 1 326 2 239 1 34 1 114 1 38 1 155 1 241 1 158 1 46 1 214 2 253 1 
175 2 126 1 50 3 304 1 180 2 310 9 309 3 137 2 313 2 265 2 141 10 103 1 105 3 194 1 278 3 199 2 326 19 34 3 153 1 240 1 155 6 241 3 158 3 43 1 164 1 246 2 165 1 167 1 214 4 216 1 
255 1 175 3 126 1 50 1 133 1 180 3 309 1 310 10 17 1 313 3 141 8 265 3 268 1 103 2 105 1 278 2 199 2 326 18 327 1 34 2 155 2 240 2 241 1 159 1 158 2 160 2 43 2 164 1 246 2 165 2 214 6 216 1 
255 1 175 3 126 1 50 4 304 1 133 1 180 3 310 17 309 4 17 1 137 1 313 3 140 1 265 3 141 18 268 1 103 3 105 2 278 5 199 5 326 35 327 1 34 5 153 2 240 1 155 5 241 3 159 1 158 5 160 1 43 3 164 1 246 3 165 2 167 1 214 6 216 1 
255 1 175 4 126 1 50 4 304 1 133 1 180 4 310 18 309 4 17 1 137 1 313 4 140 1 265 4 141 18 268 1 103 3 105 4 278 5 199 5 326 36 327 1 34 5 153 2 240 1 155 7 241 3 159 1 158 5 160 2 43 3 164 1 246 3 165 2 167 1 214 8 216 1 
255 1 175 2 126 1 50 5 133 1 180 2 310 20 309 5 17 1 228 2 313 2 265 2 141 17 268 1 103 2 105 5 317 1 30 1 278 6 199 4 326 37 327 1 34 6 153 2 240 1 155 10 241 5 159 1 158 6 160 1 43 4 164 1 246 2 165 1 214 4 216 1 
144 1 85 1 8 1 52 1 266 1 239 1 
86 1 323 1 51 1 177 1 132 1 179 1 202 1 92 2 95 1 56 2 19 2 207 1 208 1 187 2 163 1 267 1 248 1 23 1 81 1 
323 1 53 1 132 1 179 1 92 1 202 1 95 1 56 1 19 2 207 1 208 1 187 1 163 1 267 1 248 1 23 1 81 1 
3 1 66 1 235 1 177 1 71 1 92 1 56 1 187 1 294 1 230 1 81 1 
323 1 51 1 177 1 132 1 179 1 202 1 92 1 95 1 56 1 19 2 207 1 208 1 187 1 163 1 267 1 248 1 23 1 81 1 
135 1 
174 1 
7 1 305 2 55 1 315 1 102 1 316 1 318 1 232 1 196 1 31 1 287 1 152 1 289 1 206 1 209 1 122 1 295 1 
172 1 3 1 235 1 130 1 287 1 92 1 56 1 209 1 187 1 315 1 122 1 104 1 213 1 
255 1 50 2 258 1 7 8 305 5 133 1 55 1 309 2 17 1 96 2 100 5 102 6 268 1 315 2 316 1 103 1 232 1 64 1 196 2 278 2 199 1 327 1 287 2 238 5 34 2 289 1 152 5 158 2 206 3 43 1 334 1 209 2 122 2 166 1 254 1 
299 1 7 2 9 1 52 1 88 1 16 1 309 1 96 2 139 1 315 1 101 1 22 1 316 1 232 1 144 1 150 1 287 1 239 1 34 2 152 2 114 1 334 1 209 1 121 1 46 1 122 1 168 1 170 1 
196 1 7 1 305 1 287 1 11 1 152 1 209 1 315 1 122 1 143 1 
50 2 278 2 7 5 305 5 34 2 238 5 309 2 152 5 96 2 158 2 206 5 334 1 100 5 102 10 249 1 
232 1 196 1 305 1 316 1 55 1 289 1 
319 1 232 1 3 2 64 1 7 1 235 1 71 1 287 1 92 2 93 1 55 1 152 1 289 2 56 2 293 1 294 1 187 2 209 1 315 1 122 1 316 1 254 1 
231 1 172 1 173 1 144 1 3 1 235 1 325 1 52 1 16 1 239 1 202 1 92 1 36 1 114 1 56 1 187 1 46 1 22 1 23 1 270 1 
7 2 305 3 96 1 100 2 315 1 102 4 64 1 196 1 287 1 238 2 152 1 292 1 206 2 209 1 122 1 254 1 
193 1 146 1 117 1 210 1 288 1 
193 1 39 1 146 1 
193 1 39 1 146 1 
193 1 39 1 146 1 
193 1 146 1 307 1 
193 1 146 1 307 1 
193 1 146 1 307 1 
193 1 146 1 
73 1 264 1 
299 1 175 2 180 2 310 5 309 2 313 2 139 1 265 2 141 5 105 2 317 1 30 1 326 10 34 2 155 4 241 2 160 1 121 1 214 4 168 1 
174 1 
175 1 50 1 278 1 326 4 91 1 34 1 180 1 309 1 310 2 155 2 241 1 313 1 158 1 141 2 265 1 105 1 214 2 
50 1 278 1 199 2 326 7 34 1 309 1 310 3 153 1 155 2 241 1 158 1 43 1 141 4 103 1 105 1 
299 2 175 1 180 1 309 2 310 7 313 1 139 2 265 1 141 8 105 3 317 1 148 1 30 1 199 1 326 15 34 2 155 6 241 3 160 1 43 1 121 1 168 1 214 2 338 1 
141 1 199 1 326 1 
43 1 326 1 310 1 
175 1 50 1 278 1 326 6 91 1 34 1 180 1 310 3 309 1 155 3 241 1 313 1 158 1 265 1 141 3 249 1 105 2 214 2 
255 1 175 1 50 2 180 1 133 1 310 6 309 2 17 1 313 1 141 6 265 1 268 1 103 1 105 1 278 2 199 1 326 12 327 1 34 2 155 2 241 1 158 2 43 1 214 2 216 1 
299 1 326 6 34 1 310 3 309 1 155 2 241 1 139 1 141 3 105 1 168 1 
299 2 175 1 180 1 309 2 310 6 313 1 139 2 265 1 141 7 105 3 317 1 30 1 326 13 34 2 155 6 241 3 160 1 121 1 214 2 338 1 168 1 
299 2 326 12 34 2 310 6 309 2 155 6 241 3 139 2 141 6 121 1 105 3 168 1 
175 1 326 2 34 1 180 1 310 2 155 1 241 1 313 1 158 1 265 1 214 2 216 1 
175 1 50 1 278 1 326 4 34 1 180 1 309 1 310 2 155 2 241 1 313 1 158 1 141 2 265 1 105 1 214 2 216 1 
299 1 175 3 304 1 326 3 180 3 310 1 155 2 241 1 313 3 160 1 139 1 141 2 265 3 105 1 338 1 214 6 216 1 
299 1 171 1 175 4 50 2 304 1 91 1 180 4 310 14 309 4 313 4 139 1 141 13 265 4 103 1 105 3 317 1 271 1 30 1 278 3 199 4 326 27 34 5 153 1 331 1 155 6 241 3 158 3 160 1 43 3 121 1 168 1 214 8 216 1 
299 1 175 1 180 1 309 2 310 7 313 1 139 1 141 6 265 1 268 1 103 1 105 2 317 1 30 1 278 1 199 2 326 13 34 3 153 1 155 3 241 1 158 1 43 1 121 1 168 1 214 2 216 1 
299 1 175 2 91 1 180 2 309 2 310 7 313 2 139 1 141 6 265 2 268 1 103 1 105 2 317 1 30 1 278 1 199 2 326 13 34 3 153 1 155 4 241 2 158 1 43 1 121 1 168 1 214 4 216 1 
299 1 255 1 175 3 50 2 91 1 133 1 180 3 310 10 309 4 17 1 313 3 139 1 141 11 265 3 268 1 103 1 105 3 317 1 30 1 278 2 199 1 326 21 327 1 34 4 155 5 241 2 158 2 43 1 160 1 121 1 168 1 214 6 216 1 
299 1 255 1 175 3 50 1 91 1 180 3 133 1 310 11 309 3 17 1 313 3 139 1 141 8 265 3 268 1 103 1 105 3 317 1 30 1 278 2 199 1 326 19 327 1 34 4 155 6 241 3 158 2 160 1 43 1 121 1 168 1 214 6 216 1 
299 1 175 1 180 1 309 2 310 7 313 1 139 1 141 6 265 1 268 1 103 1 105 2 317 1 30 1 278 1 199 2 326 13 34 3 153 1 155 3 241 1 158 1 43 1 121 1 168 1 214 2 216 1 
255 1 175 1 50 2 180 1 133 1 310 6 309 2 17 1 313 1 141 6 265 1 268 1 103 1 105 1 278 2 199 1 326 12 327 1 34 2 155 2 241 1 158 2 43 1 214 2 216 1 
299 1 255 1 175 4 50 1 91 1 133 1 180 4 310 11 309 3 17 1 313 4 139 1 141 9 265 4 268 1 103 1 105 3 317 1 30 1 278 2 199 1 326 20 327 1 34 4 155 5 241 2 158 2 43 1 160 2 121 1 168 1 214 8 216 1 
255 1 175 4 50 2 304 1 133 1 180 4 310 9 309 2 17 1 313 4 141 7 265 4 268 1 103 1 105 3 278 3 199 1 326 16 327 1 34 3 155 6 241 3 158 3 43 1 160 2 214 8 216 1 
299 2 30 1 326 5 34 1 309 1 310 2 155 4 241 2 139 2 141 3 121 1 105 2 168 1 317 1 
299 1 255 1 175 4 50 1 304 1 133 1 180 4 310 11 309 3 17 1 313 4 139 1 141 9 265 4 268 1 103 1 105 3 317 1 30 1 278 2 199 1 326 20 327 1 34 4 155 5 241 2 158 2 43 1 160 2 121 1 168 1 214 8 216 1 
183 1 144 1 20 1 42 1 52 1 111 1 239 1 
183 1 144 1 84 1 20 1 42 1 52 1 111 1 239 1 14 1 151 1 134 1 94 1 
174 1 3 1 187 1 92 1 56 1 
231 1 172 1 144 1 3 1 321 1 235 1 52 1 239 1 202 1 92 1 56 1 187 1 46 1 22 1 23 1 270 1 
231 1 108 1 172 1 144 1 321 1 235 1 52 1 239 1 202 1 92 1 56 1 187 1 46 1 22 1 23 1 270 1 
231 1 108 1 172 1 144 1 321 1 235 1 52 1 239 1 202 1 92 1 56 1 187 1 46 1 189 1 22 1 23 1 
154 1 108 1 232 1 260 1 187 1 316 1 92 1 56 1 
108 1 232 1 260 1 187 1 316 1 33 1 92 1 56 1 
187 1 202 1 23 1 92 1 56 1 182 1 
3 1 187 1 12 1 92 1 56 1 
49 1 172 1 175 1 173 1 86 1 52 1 223 1 15 1 180 1 92 1 56 1 313 1 265 1 187 1 22 1 229 1 23 1 270 1 231 1 144 1 26 1 321 1 235 1 239 1 202 1 36 1 330 1 46 1 214 2 
299 1 3 1 9 1 7 4 52 1 88 1 305 1 11 1 16 1 92 1 309 2 56 1 96 2 139 1 187 1 22 1 315 1 316 1 143 1 319 1 232 1 144 1 196 1 282 1 150 1 287 1 239 1 34 2 114 1 152 4 334 1 209 1 46 1 120 1 121 1 122 1 168 1 170 1 
172 1 235 1 187 1 104 1 92 1 213 1 56 1 182 1 
3 1 86 1 235 1 294 1 187 2 71 1 92 2 56 2 
332 1 172 1 195 1 235 1 187 1 221 1 92 1 56 1 
3 1 19 1 208 1 323 1 187 1 202 1 23 1 92 1 95 1 56 1 
274 1 86 1 207 1 187 2 202 1 23 1 92 2 56 2 
320 1 291 1 3 1 86 1 235 1 187 2 92 2 56 2 
320 1 3 1 86 1 136 1 235 1 187 2 92 2 56 2 
231 1 172 1 144 1 3 1 321 1 235 1 52 1 239 1 202 1 92 1 56 1 187 1 46 1 189 1 22 1 23 1 
108 1 187 1 12 1 92 1 56 1 
42 1 279 1 190 1 204 1 62 1 
232 2 127 1 196 1 233 1 279 2 305 1 112 1 204 2 329 1 116 1 205 1 42 1 120 1 316 2 61 1 190 2 297 1 62 1 170 1 
85 1 8 1 279 1 266 1 190 1 62 1 
127 1 205 1 62 1 
174 1 
300 1 275 1 77 1 201 1 222 1 149 1 125 1 
300 1 227 1 118 1 
275 1 300 3 25 1 263 1 201 3 222 1 149 1 138 2 77 1 243 1 59 1 125 1 
300 2 275 1 277 1 87 1 77 1 201 2 222 1 149 1 125 1 
275 1 300 1 323 1 263 1 201 1 222 1 13 1 19 1 99 1 77 1 163 1 
300 1 275 1 77 1 201 1 263 1 222 1 125 1 
300 1 275 1 77 1 201 1 263 1 149 1 125 2 
82 1 275 2 300 2 6 1 263 1 201 2 222 1 77 2 252 1 125 1 
275 1 300 3 145 1 277 2 263 1 201 3 149 1 285 1 222 2 13 1 41 1 77 1 125 1 
275 1 300 2 277 1 323 1 263 1 201 2 222 1 149 1 95 1 19 2 76 1 77 1 163 1 267 1 125 1 
275 2 300 4 277 2 176 1 87 1 263 1 201 4 149 1 285 1 222 2 13 1 77 2 125 1 
300 1 275 1 77 1 201 1 263 1 222 1 149 1 125 1 
25 1 300 4 275 1 277 2 201 4 149 2 285 1 222 3 13 1 311 1 138 1 243 1 77 1 125 2 
275 1 300 2 83 1 277 1 263 1 201 2 222 1 149 1 188 1 77 1 125 1 215 1 
275 1 300 3 25 2 263 1 201 3 222 1 149 1 138 2 243 1 77 1 79 1 125 1 
29 1 98 1 222 2 212 2 
300 1 275 1 303 1 77 1 201 1 263 1 
300 2 275 1 145 1 277 1 77 1 201 2 263 1 222 1 149 1 125 1 
27 1 
300 1 275 1 77 1 201 1 263 1 222 1 149 1 125 1 
275 1 300 3 145 1 277 1 263 1 201 3 149 1 222 1 138 1 77 1 125 1 
222 1 285 1 13 1 311 1 
222 1 125 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (59,95) (134,266) (134,266) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (59,95) (134,266) (134,266) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (59,95) (134,266) (134,266) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (59,95) (134,266) (134,266) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (59,95) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (59,95) 51 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (59,95) 51 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 50 (15,245,300) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 100 114 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 100 114 45 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 187 207 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 187 207 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 187 207 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 187 207 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 187 207 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 123 (21,96,162) (20,148,257) (20,148,257) (20,148,257) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 109 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 123 (21,96,162) (21,96,162) (21,96,162) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 197 268 320 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 100 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 19 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 106 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
66 1 315 1 95 1 9 1 199 1 178 2 123 1 57 1 56 1 225 1 59 1 266 1 62 1 133 1 334 2 134 1 
66 1 315 1 95 1 9 1 199 1 178 2 123 1 57 1 56 1 225 1 59 1 266 1 62 1 133 1 334 2 134 1 
66 1 315 1 95 1 9 1 199 1 178 2 123 1 57 1 56 1 225 1 59 1 266 1 62 1 133 1 334 2 134 1 
66 1 315 1 95 1 9 1 199 1 178 2 123 1 57 1 56 1 225 1 59 1 266 1 62 1 133 1 334 2 134 1 
90 1 252 3 66 1 315 1 72 2 115 2 178 4 14 1 123 1 57 1 225 1 41 1 265 1 101 1 188 1 133 1 86 3 334 4 
163 1 66 1 33 1 9 1 199 1 178 2 14 1 57 1 123 1 225 1 265 1 184 1 62 1 86 1 133 1 334 2 
57 1 225 1 95 1 133 1 178 1 334 1 
252 1 57 1 225 1 95 1 51 1 133 1 271 1 178 2 334 2 
252 1 57 1 225 1 95 1 51 1 133 1 271 1 178 2 334 2 
277 1 142 1 19 1 
29 1 142 1 64 2 
37 2 140 1 295 1 217 2 329 2 68 2 116 2 239 2 
251 1 1 2 3 1 140 1 295 1 5 1 216 2 141 1 8 1 217 3 256 1 258 1 220 1 58 1 182 1 16 1 183 2 264 1 151 1 302 1 306 1 239 3 309 2 110 1 111 1 68 2 279 1 116 2 73 1 201 2 200 1 323 1 37 3 121 1 38 2 126 2 40 1 83 2 329 3 209 1 332 1 249 2 
253 1 37 1 140 1 83 1 217 1 329 1 68 1 116 1 239 1 261 1 
251 1 277 1 27 1 142 1 217 1 297 1 220 1 83 1 329 1 248 1 231 1 234 1 239 1 272 1 
251 1 253 1 140 1 217 2 142 1 297 1 220 1 261 1 234 2 272 2 239 2 277 1 68 2 116 2 37 2 325 1 83 2 248 1 329 2 
226 1 303 1 234 1 104 1 272 1 
277 1 303 1 142 1 185 1 234 2 104 1 194 1 272 2 
234 1 104 1 272 1 
253 1 140 1 68 1 217 1 116 1 261 1 37 1 325 1 83 1 303 1 329 1 234 1 272 1 239 1 
142 1 
277 1 303 1 142 1 34 1 234 2 104 1 194 1 272 2 
2 1 277 1 139 1 142 1 53 1 13 1 322 2 122 1 224 2 99 1 97 2 303 2 186 1 157 1 234 5 160 1 104 2 194 1 272 5 
251 1 309 1 110 1 3 1 173 1 216 2 217 2 32 1 220 1 73 1 116 1 323 1 37 2 38 2 182 1 126 2 264 1 183 1 326 1 83 1 329 2 306 1 249 1 239 2 
295 1 19 1 
295 1 217 2 68 1 279 1 116 1 37 1 83 1 329 2 129 1 103 1 239 2 
326 1 235 1 222 1 
251 1 3 1 216 2 295 1 217 1 220 1 182 1 264 1 183 1 306 1 239 1 309 1 110 1 279 1 73 1 323 1 206 1 37 1 38 2 126 2 83 2 329 1 249 1 
37 3 295 1 68 1 217 3 329 3 32 1 116 3 239 3 
253 1 37 1 83 1 217 1 329 1 116 1 239 1 
68 1 217 1 116 1 37 1 83 1 329 1 129 1 103 1 239 1 
251 2 1 1 3 1 173 1 140 1 295 1 5 1 216 2 8 1 217 4 256 1 297 1 220 2 58 1 182 1 16 1 264 1 183 1 151 1 304 1 103 1 234 1 306 1 239 4 272 1 309 1 110 1 68 2 32 1 167 1 73 1 116 3 201 2 323 1 37 4 121 1 38 2 126 2 40 1 83 2 329 4 248 1 209 1 332 1 249 1 
37 1 27 1 295 1 217 2 329 2 32 1 307 1 116 1 239 2 
251 1 173 1 68 1 142 1 217 3 32 2 297 1 167 1 116 3 220 1 54 1 37 3 83 1 248 1 329 3 103 1 234 1 272 1 239 3 
37 2 326 1 217 2 329 2 68 1 32 1 103 1 116 2 235 1 239 2 
251 1 3 1 216 2 295 1 217 1 220 1 182 1 264 1 183 1 306 1 239 1 309 1 110 1 279 1 73 1 323 1 37 1 38 2 126 2 83 2 329 1 249 1 
251 1 216 2 295 1 217 1 220 1 182 1 264 1 183 1 306 1 238 1 239 1 309 1 110 1 279 1 73 1 37 1 38 2 126 2 42 1 83 2 329 1 249 1 
91 1 137 1 1 4 5 1 8 1 256 2 144 1 222 2 58 1 16 1 151 1 227 1 60 1 156 1 189 1 235 2 26 1 111 2 201 2 326 2 285 1 209 1 
251 1 217 1 116 1 37 1 83 1 329 1 131 1 239 1 
173 1 27 1 295 1 217 5 68 1 32 2 116 4 244 1 37 4 84 1 329 5 103 1 307 1 239 5 
253 1 37 2 83 1 217 2 329 2 131 1 116 2 239 2 
276 1 245 1 
276 1 245 1 
300 1 50 1 
300 1 50 1 
300 1 50 1 
276 1 219 1 245 1 
15 1 276 1 245 1 
300 1 276 1 50 1 245 1 
276 1 219 1 245 1 
276 1 219 1 245 1 
276 1 308 1 245 1 
276 1 308 1 245 1 
276 1 308 1 245 1 
276 1 100 1 114 1 63 1 245 1 11 1 
276 1 100 1 114 1 234 1 63 1 245 1 11 1 45 1 272 1 
123 1 66 1 315 1 
123 1 66 1 184 1 
315 2 66 3 184 1 296 1 230 1 291 1 
315 1 66 2 184 1 296 1 198 1 291 1 
315 1 66 2 184 1 296 1 291 2 
250 1 91 1 137 1 142 2 298 1 53 2 13 1 224 1 97 1 99 3 227 1 303 4 153 1 158 1 233 1 234 5 232 1 64 3 104 1 107 2 194 1 272 5 65 1 26 1 277 1 29 1 322 1 119 2 39 2 327 1 211 1 46 1 
253 1 140 1 217 1 142 1 261 1 226 1 303 2 305 1 234 2 104 1 236 1 272 2 239 1 277 1 28 1 68 1 116 1 37 1 325 1 83 1 329 1 
250 1 253 1 91 1 137 1 140 1 217 1 142 3 261 1 53 2 224 1 97 1 99 3 227 1 303 2 186 1 234 3 232 1 233 1 64 4 107 1 239 1 272 3 65 1 26 1 277 1 29 2 68 1 116 1 322 1 119 2 37 1 39 2 325 1 327 1 83 1 329 1 211 1 
250 1 91 1 137 1 142 2 146 1 53 2 224 1 97 1 99 3 227 1 303 1 186 1 234 2 232 1 233 1 64 4 107 1 272 2 65 1 26 1 29 2 322 1 119 2 39 2 327 1 211 1 
126 1 19 1 288 1 
126 1 74 1 
228 1 
38 1 126 1 
38 1 126 3 164 1 216 1 132 1 288 2 
38 1 126 1 216 1 
126 1 203 1 
207 1 1 1 111 1 267 1 187 1 
207 1 1 1 111 1 267 1 187 1 
207 1 1 1 111 1 294 1 267 1 187 1 
207 1 1 1 111 1 267 1 187 1 
207 1 1 1 111 1 267 1 187 1 
93 1 138 1 257 1 178 1 57 1 148 1 183 1 225 1 184 1 62 1 230 1 20 1 191 1 105 1 193 1 309 1 110 1 162 1 315 1 66 2 73 1 123 1 128 1 133 1 334 1 249 1 
252 2 93 1 138 1 257 1 178 3 179 1 14 1 57 1 183 1 225 1 265 1 184 1 62 1 230 1 20 1 191 1 193 1 309 1 110 1 162 1 315 1 113 1 66 2 73 1 78 1 123 1 128 1 286 1 86 1 334 3 249 1 
252 2 93 1 138 1 178 2 14 1 183 1 265 1 184 1 62 1 230 1 20 1 191 1 193 1 309 1 110 1 162 1 113 1 66 2 315 1 73 1 78 1 123 1 286 1 86 1 334 2 249 1 
93 2 138 2 299 1 178 1 179 1 260 1 182 1 57 1 183 1 225 1 62 2 193 2 309 1 110 1 278 1 73 1 280 1 319 1 38 1 126 1 328 1 334 1 249 1 
93 1 138 1 257 1 178 1 57 1 148 1 183 1 225 1 184 1 62 1 230 1 20 1 191 1 193 1 309 1 110 1 162 1 315 1 66 2 73 1 123 1 128 1 286 1 133 1 334 1 249 1 
4 1 
251 1 180 2 13 1 182 2 183 2 99 2 97 1 102 1 104 6 194 3 272 5 110 1 277 1 27 1 29 2 31 1 278 1 35 1 36 1 38 1 126 1 284 1 289 2 212 2 214 1 215 4 142 2 217 1 143 1 297 1 299 1 220 1 53 2 223 1 224 1 150 2 231 1 232 1 234 5 64 2 161 2 239 1 309 2 317 1 71 1 169 2 73 1 322 1 83 1 329 1 248 1 85 2 330 1 333 1 249 2 
251 1 214 1 27 1 215 2 143 1 31 1 217 1 297 1 34 1 220 1 180 1 223 1 83 1 248 1 329 1 330 1 231 1 234 3 104 2 194 1 272 3 239 1 
251 1 214 1 277 1 27 1 215 3 142 1 143 1 31 1 217 1 297 1 34 1 220 1 223 1 83 1 248 1 329 1 330 1 231 1 234 3 104 1 194 1 161 1 272 3 239 1 
251 1 214 1 215 3 217 1 143 1 142 1 297 1 220 1 180 1 223 1 231 1 234 3 104 2 194 1 239 1 272 3 161 1 27 1 277 1 31 1 34 1 83 1 329 1 248 1 330 1 289 1 
212 2 251 1 254 1 214 1 215 6 142 5 217 1 143 1 297 1 220 1 53 1 13 1 180 4 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 5 104 7 161 4 194 3 272 5 239 1 277 5 27 1 313 1 29 2 31 1 34 1 169 2 35 1 322 1 81 1 82 1 83 1 329 1 248 1 43 1 85 2 330 1 289 4 
212 2 251 1 214 1 215 4 142 2 217 1 143 1 297 1 220 1 180 2 53 1 13 1 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 4 64 2 161 2 194 2 272 4 239 1 277 1 27 1 29 2 31 1 169 2 35 1 322 1 83 1 284 1 329 1 248 1 85 2 330 1 289 2 
212 2 251 1 214 1 254 1 215 4 142 1 217 1 143 1 297 1 220 1 180 2 53 1 13 1 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 4 161 2 194 2 239 1 272 4 277 1 27 1 29 2 31 1 169 2 35 1 322 1 81 1 83 1 329 1 248 1 43 1 85 2 330 1 289 2 
212 2 251 1 214 1 254 1 215 4 142 1 217 1 143 1 297 1 220 1 180 2 53 1 13 1 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 4 161 2 194 2 239 1 272 4 277 1 27 1 29 2 31 1 169 2 35 1 322 1 81 1 83 1 329 1 248 1 43 1 85 2 330 1 289 2 
251 1 109 1 214 1 27 1 215 2 143 1 31 1 217 1 297 1 220 1 223 1 83 1 248 1 329 1 330 1 231 1 234 2 272 2 239 1 
212 2 251 1 214 1 254 1 215 5 142 1 217 1 143 1 297 1 220 1 53 1 13 1 180 3 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 5 194 2 239 1 272 4 161 3 277 1 27 1 29 2 31 1 169 2 35 1 322 1 81 1 82 1 83 1 329 1 248 1 43 1 85 2 330 1 289 3 
212 2 251 1 214 1 254 1 215 5 142 1 217 1 143 1 297 1 220 1 53 1 13 1 180 3 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 5 194 2 239 1 272 4 161 3 277 1 27 1 29 2 31 1 169 2 35 1 322 1 81 1 82 1 83 1 329 1 248 1 43 1 85 2 330 1 289 3 
212 2 251 1 214 1 48 2 215 4 142 1 217 1 143 1 297 1 220 1 180 2 53 1 13 1 223 1 224 1 150 2 99 1 97 1 231 1 102 1 234 4 104 4 64 2 161 2 194 2 272 4 239 1 240 2 277 1 27 1 31 1 322 1 202 1 83 1 284 1 329 1 248 1 330 1 289 2 
213 1 5 1 196 1 8 1 144 1 201 2 246 1 58 1 16 1 151 1 170 1 209 1 19 1 159 1 270 1 
91 2 1 14 137 1 295 1 5 2 8 2 256 6 145 3 12 1 147 1 259 3 222 11 181 1 58 2 16 2 151 2 302 1 227 1 61 1 233 2 159 1 235 4 23 1 26 2 111 8 195 1 201 4 283 1 124 1 326 11 209 1 332 1 
251 1 0 1 1 2 173 1 3 1 5 1 8 1 256 1 182 1 16 1 183 1 264 1 23 1 110 1 111 1 32 1 279 1 116 1 201 2 204 1 206 1 37 2 38 2 126 2 209 1 216 2 295 1 217 2 220 1 58 1 151 1 302 1 306 1 235 1 239 2 309 1 73 1 323 1 83 2 329 2 332 1 335 1 249 1 
251 1 91 1 173 1 1 7 3 1 5 2 8 2 256 4 177 1 182 1 183 1 16 2 264 1 23 1 110 1 26 1 111 3 32 1 116 1 201 4 37 2 38 2 126 2 40 1 209 2 135 1 137 1 216 2 217 2 220 1 222 3 55 1 58 2 151 2 227 1 233 1 306 1 159 1 235 3 239 2 309 1 73 1 323 1 246 1 326 3 83 1 329 2 331 1 332 1 249 1 336 1 
1 2 255 1 216 1 5 1 49 1 8 1 256 1 299 1 182 1 58 1 183 2 16 1 151 1 302 1 18 1 309 2 110 2 111 1 278 1 73 3 201 2 200 1 77 1 38 2 126 2 80 1 209 1 332 1 89 1 249 2 
91 1 136 1 1 3 137 1 5 1 8 1 217 1 256 2 222 1 58 1 16 1 151 1 227 1 103 1 233 1 235 1 23 1 239 1 26 1 111 1 68 1 116 1 201 2 37 1 326 1 329 1 209 1 
91 1 1 2 26 1 111 2 5 1 8 1 144 1 147 1 201 2 222 1 58 1 16 1 151 1 326 1 156 1 209 1 159 1 235 1 
1 2 137 1 5 1 8 1 256 2 144 1 201 2 222 1 58 1 16 1 151 1 326 1 227 1 209 1 189 1 235 1 
91 1 137 1 1 4 26 1 111 2 5 1 8 1 256 2 144 1 201 2 222 2 58 1 16 1 151 1 227 1 326 2 209 1 233 1 235 2 
91 1 1 2 26 1 111 2 5 1 8 1 147 1 201 2 222 1 58 1 16 1 80 1 151 1 326 1 156 1 209 1 159 1 235 1 
1 2 137 1 5 1 8 1 256 2 201 2 222 1 58 1 16 1 80 1 151 1 326 1 227 1 209 1 189 1 235 1 
91 1 1 4 137 1 5 1 8 1 256 2 147 1 222 2 58 1 16 1 151 1 227 1 233 1 159 1 235 2 26 1 111 2 201 2 80 1 326 2 209 1 
91 1 137 1 26 1 1 4 111 2 5 1 8 1 256 2 201 2 222 2 58 1 16 1 151 1 227 1 326 2 209 1 233 1 235 2 
251 1 1 2 3 1 295 1 216 2 5 1 8 1 217 1 256 1 220 1 182 1 58 1 16 1 264 1 183 1 151 1 302 1 306 1 239 1 309 1 110 1 111 1 279 1 73 1 201 2 323 1 37 1 38 2 126 2 40 1 83 2 329 1 209 1 332 1 249 1 
251 1 1 1 295 1 216 2 5 1 8 1 217 1 256 1 220 1 52 1 182 1 58 1 16 1 264 1 183 1 151 1 306 1 238 1 239 1 309 1 110 1 279 1 73 1 201 2 37 1 38 2 126 2 42 1 83 2 329 1 209 1 332 1 249 1 
91 1 137 1 1 4 26 1 111 2 5 1 8 1 256 2 201 2 222 2 58 1 16 1 151 1 227 1 326 2 209 1 233 1 235 2 23 1 
251 1 91 1 137 1 1 4 3 1 216 2 5 1 8 1 217 1 256 2 220 1 222 2 58 1 16 1 264 1 183 1 151 1 227 1 233 1 306 1 105 1 235 2 239 1 309 1 110 1 26 1 111 2 73 1 201 2 323 1 37 1 38 2 126 2 40 1 326 2 83 1 329 1 209 1 249 1 336 1 
91 1 137 1 1 3 5 1 8 1 217 1 256 1 147 1 222 1 58 1 16 1 151 1 227 1 103 1 233 1 159 1 235 1 23 1 239 1 26 1 111 2 68 1 165 1 116 1 201 2 37 1 326 1 329 1 209 1 
91 1 1 8 94 1 8 2 256 3 145 1 259 1 58 2 16 2 149 2 151 2 233 1 192 1 311 1 26 1 111 5 321 1 201 4 124 1 324 1 130 1 87 1 337 1 
91 1 1 8 94 1 8 2 256 3 145 1 259 1 58 2 16 2 149 2 151 2 233 1 192 1 311 1 26 1 111 5 321 1 201 4 124 1 324 1 130 1 87 1 337 1 
91 3 213 1 137 3 1 28 94 1 8 3 256 14 175 1 145 2 147 2 259 2 58 3 16 3 149 4 151 3 227 3 268 1 233 3 159 4 270 1 311 1 26 3 111 14 241 1 196 1 197 1 320 1 117 2 321 1 201 6 246 2 124 2 324 1 127 1 170 1 130 1 87 1 337 1 
91 1 137 1 1 8 94 1 8 2 256 4 145 1 259 1 58 2 16 2 149 1 151 2 227 1 233 1 192 1 108 1 311 1 26 1 111 4 321 1 201 4 124 1 324 1 130 1 87 1 
91 3 137 2 1 23 94 2 8 2 256 11 175 1 145 2 259 2 58 2 149 3 16 2 151 2 227 2 268 1 233 3 159 1 311 1 26 3 111 12 241 1 197 1 320 1 117 1 321 2 201 4 246 1 124 2 324 1 127 1 130 1 87 1 337 1 
47 1 1 2 5 1 217 2 8 1 218 1 256 1 58 1 16 1 183 2 151 1 302 1 18 1 23 1 239 2 309 2 110 1 112 1 111 1 314 1 73 1 75 1 201 2 200 2 118 1 38 1 126 1 329 2 209 1 332 1 249 2 
309 2 110 1 93 1 162 1 315 1 66 2 176 1 96 1 73 1 123 1 183 2 184 1 128 1 230 1 286 1 191 1 105 1 21 1 249 2 
309 1 110 1 93 1 162 1 315 1 66 2 96 1 73 1 123 1 183 1 301 1 184 1 128 1 230 1 286 1 191 1 249 1 
309 1 110 1 93 1 176 1 278 1 73 1 299 1 319 1 262 1 38 1 182 1 126 1 183 1 249 1 
309 1 110 1 93 1 162 1 315 1 66 2 176 1 96 1 73 1 123 1 183 1 184 1 128 1 230 1 286 1 191 1 21 1 249 1 
70 1 
122 1 99 1 277 1 142 1 157 1 19 1 53 1 
277 1 29 1 142 2 169 1 35 1 13 1 322 1 53 1 224 1 97 1 99 1 85 1 234 1 104 1 64 1 272 1 194 1 
309 1 110 1 164 1 216 1 74 1 73 2 13 1 322 1 38 1 182 1 126 2 224 1 183 1 125 1 97 1 22 1 249 1 
91 1 292 1 137 1 142 4 145 1 259 1 13 2 53 3 224 2 99 5 97 2 227 1 268 1 234 1 233 1 104 1 64 6 272 1 194 1 26 1 241 1 277 1 29 3 197 1 168 1 320 1 322 2 119 4 39 4 124 1 127 1 
253 1 292 1 213 1 137 1 140 1 217 1 13 1 53 2 261 1 224 1 97 1 99 2 234 1 269 1 239 1 272 1 26 2 242 1 68 1 116 1 281 1 322 1 37 1 325 1 83 1 170 1 329 1 43 1 
277 1 142 1 13 1 322 1 53 1 122 1 224 1 97 1 99 1 157 1 
91 2 26 2 137 2 29 5 142 5 53 5 119 5 39 5 99 5 227 2 233 2 64 10 135 1 
277 1 142 1 234 1 104 1 272 1 194 1 
299 1 10 2 13 1 53 2 182 2 224 2 183 2 97 2 99 2 186 1 232 2 234 3 104 4 194 2 272 3 309 2 110 1 67 1 317 1 71 1 278 1 73 1 282 1 322 2 36 2 38 1 126 1 290 1 249 2 
251 1 1 1 3 1 140 1 295 1 5 1 216 2 8 1 217 3 256 1 220 1 58 1 182 1 16 1 183 1 264 1 151 1 306 1 239 3 309 1 110 1 68 2 116 2 73 1 201 2 323 1 37 3 121 1 38 2 126 2 40 1 83 1 329 3 209 1 332 1 249 1 
277 1 29 1 142 2 53 1 13 1 322 1 36 1 39 1 224 1 97 1 99 1 232 1 64 2 
100 1 63 1 
100 1 63 1 
100 1 63 1 
100 1 63 1 
100 1 63 1 
100 1 63 1 
100 1 63 1 
100 1 63 1 
276 1 245 1 
137 2 1 10 213 2 8 1 256 5 145 1 147 1 259 1 58 1 16 1 151 1 159 3 269 1 270 1 26 2 111 5 196 1 281 1 320 1 201 2 246 2 124 1 170 2 87 1 
137 2 1 10 213 2 8 2 256 5 145 1 147 1 259 1 58 2 16 2 151 2 159 3 269 1 270 1 26 2 111 5 196 1 316 1 281 1 320 1 201 4 246 2 124 1 170 2 87 1 
91 2 1 14 137 2 8 4 256 7 145 1 147 2 259 1 58 4 16 4 151 4 227 2 233 2 268 1 159 3 26 2 111 7 241 1 316 1 197 1 320 1 201 8 117 2 246 1 124 1 127 1 87 1 
91 2 213 2 1 19 137 3 8 3 256 9 145 1 147 3 259 1 58 3 16 3 151 3 227 1 233 2 268 1 159 6 269 1 270 1 26 4 111 10 241 1 196 1 316 1 197 1 281 1 320 1 201 6 117 1 246 3 124 1 127 1 170 2 87 1 
137 2 1 10 213 2 8 1 256 5 145 1 147 1 259 1 58 1 16 1 151 1 159 3 269 1 270 1 26 2 111 5 196 1 281 1 320 1 201 2 246 2 124 1 170 2 87 1 
91 2 1 14 137 2 8 3 256 7 145 1 147 2 259 1 58 3 16 3 151 3 227 2 233 2 268 1 159 3 26 2 111 7 241 1 197 1 320 1 201 6 117 2 246 1 124 1 127 1 87 1 
91 2 1 11 137 1 8 3 256 5 145 1 259 1 58 3 16 3 151 3 227 1 268 1 233 2 159 1 26 2 111 6 241 1 197 1 316 1 320 1 201 6 117 1 246 1 124 1 127 1 87 1 
91 2 1 11 137 1 8 3 256 5 145 1 147 1 259 1 58 3 16 3 151 3 227 1 268 1 233 2 159 2 192 1 26 2 111 6 241 1 197 1 320 1 201 6 117 1 246 1 124 1 127 1 87 1 
137 1 1 5 26 1 213 3 111 2 196 1 256 3 281 1 147 3 246 3 170 3 159 6 270 1 269 1 
91 2 1 11 137 1 8 3 256 5 145 1 259 1 58 3 16 3 151 3 227 1 268 1 233 2 159 1 192 1 26 2 111 6 241 1 197 1 320 1 201 6 117 1 246 1 124 1 127 1 87 1 
213 2 1 12 137 2 8 2 256 6 147 3 58 2 16 2 151 2 159 5 270 1 269 1 26 2 111 6 196 1 281 1 117 1 201 4 246 2 170 2 
246 1 213 1 170 1 196 1 19 1 159 1 270 1 
91 1 137 1 26 1 1 4 111 2 316 1 8 1 256 2 201 2 147 1 58 1 16 1 151 1 227 1 233 1 159 1 
1 2 124 1 111 1 256 1 145 1 259 1 
91 2 213 2 137 4 1 20 8 1 256 10 145 2 259 2 147 4 181 1 58 1 16 1 151 1 227 2 61 1 233 2 159 6 269 1 270 1 26 4 111 10 196 1 195 1 281 1 117 1 201 2 246 2 170 2 
1 1 256 1 145 1 
1 1 111 1 259 1 
91 1 1 6 26 1 137 1 111 3 256 3 147 1 246 1 227 1 233 1 159 2 135 1 
91 2 1 14 137 2 8 3 256 7 145 1 147 2 259 1 58 3 16 3 151 3 227 2 233 2 268 1 159 3 26 2 111 7 241 1 197 1 320 1 201 6 117 2 246 1 124 1 127 1 87 1 
26 1 1 6 137 1 213 1 111 3 256 3 281 1 147 1 246 1 170 1 159 2 
213 1 1 3 111 1 196 1 6 1 8 1 256 2 147 1 117 1 201 2 246 1 58 1 16 1 151 1 170 1 159 2 270 1 
246 1 137 2 1 8 26 2 213 1 111 4 170 1 256 4 159 2 281 1 269 1 147 1 
91 1 26 1 1 2 111 2 8 1 201 2 147 1 58 1 16 1 151 1 159 1 87 1 
91 1 137 1 26 1 1 4 111 2 8 1 256 2 201 2 58 1 16 1 151 1 227 1 233 1 87 1 
1 3 213 1 111 1 6 1 8 3 256 2 117 1 201 6 147 1 58 3 246 1 16 3 151 3 170 1 159 2 87 1 192 1 
91 2 213 2 1 26 137 4 8 4 256 13 145 3 259 3 147 4 58 4 16 4 151 4 227 2 233 2 159 6 269 1 270 1 192 1 26 4 111 13 196 1 316 1 318 1 281 1 117 1 201 8 246 2 124 1 170 2 208 1 87 1 88 1 
27 1 295 1 217 1 329 1 69 1 307 1 239 1 
274 1 27 1 174 1 295 1 217 1 69 1 205 1 120 1 247 1 329 1 307 1 239 1 
309 1 110 1 38 1 182 1 126 1 183 1 278 1 19 1 73 1 299 1 249 1 
251 1 3 1 216 2 295 1 217 2 220 1 182 1 183 1 264 1 306 1 239 2 309 1 110 1 32 1 279 1 116 1 73 1 37 2 38 2 126 2 83 2 329 2 249 1 
37 1 217 1 329 1 32 1 116 1 10 1 239 1 
37 1 217 1 329 1 32 1 116 1 10 1 239 1 
234 1 10 1 272 1 
234 1 10 1 272 1 
309 1 110 1 73 1 183 1 190 1 249 1 
309 1 110 1 255 1 164 1 216 1 73 2 182 1 38 1 183 1 126 1 210 1 249 1 89 1 
251 1 1 8 3 1 5 2 8 2 256 4 183 1 16 2 264 1 105 1 270 1 269 1 23 1 110 1 26 2 111 4 196 1 32 1 279 1 116 1 281 1 201 4 118 1 37 2 38 2 126 2 40 1 209 2 137 2 213 2 295 1 216 2 217 2 220 1 147 1 58 2 151 2 306 1 159 3 239 2 309 1 73 1 323 1 246 2 83 2 170 2 329 2 331 1 249 1 336 1 
253 1 292 1 137 2 213 1 140 1 217 1 142 1 261 1 53 4 13 1 182 1 183 1 224 1 99 4 97 1 303 1 234 1 157 1 269 1 239 1 272 1 309 1 26 2 277 1 242 1 68 1 116 1 281 1 76 1 322 1 37 1 122 1 325 1 83 1 170 1 329 1 249 1 290 1 
309 1 110 1 164 1 216 1 73 2 38 1 183 1 125 1 126 2 228 1 190 1 288 1 249 1 
309 2 110 2 255 1 216 1 49 1 278 1 73 3 299 1 77 1 182 1 38 2 183 2 126 2 105 1 89 1 249 2 
309 1 273 1 110 1 255 1 216 1 49 1 73 2 77 1 38 1 183 1 126 1 249 1 89 1 
309 1 110 1 66 1 73 1 182 1 123 1 183 1 184 1 191 1 249 1 
309 2 110 1 47 1 112 1 73 1 38 1 183 2 126 1 286 1 105 1 249 2 
255 1 216 1 49 1 299 1 182 1 183 2 152 1 105 1 309 3 110 3 112 1 278 1 73 4 77 1 38 3 126 4 171 1 249 3 89 1 
255 1 216 1 49 1 299 1 182 1 17 1 183 2 152 1 105 1 309 3 110 3 112 1 278 1 73 4 77 1 38 3 126 4 249 3 89 1 
251 1 216 2 295 1 217 2 220 1 182 1 183 1 264 1 306 1 239 2 309 1 110 1 32 1 279 1 116 1 73 1 37 2 38 2 126 2 42 1 83 2 329 2 249 1 
10 1 
310 1 295 1 7 1 155 1 287 1 
25 1 303 1 7 1 154 1 234 1 106 1 272 1 
314 1 7 1 217 1 218 1 75 1 329 1 155 1 287 1 239 1 
251 1 25 1 310 1 7 1 297 1 167 1 220 1 83 1 248 1 155 1 234 1 287 1 106 1 272 1 
14 1 265 1 19 1 86 1 
14 1 57 1 225 1 265 1 86 1 178 1 334 1 
138 1 62 1 178 1 
92 1 275 1 166 1 9 2 178 3 14 1 57 1 225 1 265 1 86 1 133 1 334 3 
252 1 14 1 57 1 225 1 265 1 72 1 86 1 178 2 334 2 
315 1 66 1 115 1 178 1 57 1 123 1 225 1 41 1 133 1 86 1 334 1 
57 1 225 1 265 1 86 1 133 1 178 1 334 1 
14 1 57 1 225 1 265 2 133 1 178 1 334 1 
243 1 178 2 57 2 225 2 98 1 265 1 86 1 133 1 334 2 24 1 
252 2 90 1 115 1 178 3 221 1 14 1 57 1 225 1 265 1 229 1 133 1 86 2 334 3 
252 1 66 2 315 1 178 2 14 1 57 1 123 1 225 1 265 1 184 1 230 1 86 1 133 1 44 1 334 2 
252 2 90 1 72 1 115 1 178 4 14 1 57 2 225 2 265 1 101 1 133 1 86 2 334 4 
14 1 57 1 225 1 265 1 86 1 133 1 178 1 334 1 
252 2 90 1 92 1 275 1 9 1 115 1 178 4 78 1 14 2 57 1 225 1 265 2 86 3 334 4 
252 1 30 1 178 2 14 1 57 1 225 1 265 1 86 1 133 1 334 2 271 1 172 1 
92 1 293 1 275 2 9 2 178 3 14 1 57 1 225 1 265 1 86 1 133 1 334 3 
79 1 86 1 237 1 
57 1 225 1 312 1 133 1 178 1 334 1 
252 1 14 1 57 1 225 1 265 1 229 1 86 1 133 1 178 2 334 2 
263 1 
14 1 57 1 225 1 265 1 86 1 133 1 178 1 334 1 
252 1 9 1 178 3 14 1 57 1 225 1 265 1 229 1 133 1 86 1 334 3 
78 1 90 1 115 1 86 1 
265 1 86 1 

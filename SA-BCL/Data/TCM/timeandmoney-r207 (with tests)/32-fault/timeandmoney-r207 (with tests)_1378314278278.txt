#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (41,102) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 141 203 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 141 203 63 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 196 139 226 274 225 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) (207,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (207,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) (207,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (86,162,178,287) (86,162,178,287) (86,162,178,287) 89 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 44 168 129 237 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 44 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 44 168 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 44 168 111 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 44 168 129 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 44 168 129 198 271 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 44 168 129 198 271 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 44 168 129 198 251 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 44 168 228 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 44 168 228 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 44 168 129 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 128 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 138 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 73 269 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 73 269 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 141 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 196 139 226 274 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
100 1 39 1 128 1 
88 2 39 1 32 1 
190 1 52 2 55 2 6 2 118 2 97 2 181 2 34 1 
122 1 190 1 126 2 273 1 84 2 5 1 6 3 46 1 48 1 276 1 164 2 90 1 52 2 53 1 201 1 11 2 55 3 97 2 205 2 175 1 253 1 212 1 256 1 20 1 22 1 181 2 69 1 24 1 149 1 262 1 112 1 72 1 184 1 156 1 118 2 34 1 33 1 
159 1 241 1 52 1 179 1 55 1 6 1 118 1 97 1 181 1 34 1 
159 2 38 1 2 1 39 1 6 2 241 1 166 1 52 1 279 1 55 2 97 1 60 1 286 1 100 1 179 1 181 1 71 1 74 1 115 1 118 2 34 1 
159 2 38 1 2 2 39 1 6 2 241 1 52 2 279 1 55 2 97 2 286 2 100 1 179 1 181 2 71 1 74 1 115 1 118 2 34 1 
286 1 2 1 193 1 16 1 91 1 
159 1 39 1 2 2 193 1 6 1 241 1 52 1 55 1 97 1 100 1 286 2 16 1 179 1 181 1 221 1 115 1 158 1 34 1 118 1 
286 1 2 1 16 1 
159 1 286 1 193 1 2 1 179 1 181 1 6 1 241 1 52 1 115 1 55 1 34 1 97 1 118 1 
39 1 
100 1 234 1 286 2 39 1 2 2 193 1 16 1 221 1 
204 1 173 1 124 2 100 1 286 5 210 1 176 1 39 1 193 2 2 5 16 2 131 1 23 1 153 1 221 1 265 2 280 2 301 1 80 1 
190 1 128 1 
284 1 205 1 122 1 175 1 41 1 253 1 256 1 273 1 84 1 22 1 6 2 7 1 90 1 184 1 52 1 53 1 11 1 55 2 97 1 118 1 
190 2 52 1 143 1 31 1 55 2 97 1 181 1 6 2 118 2 
41 1 136 1 145 1 
205 1 122 1 190 1 175 1 253 1 256 1 273 1 84 1 6 1 22 1 90 1 184 1 154 1 53 1 11 1 55 1 
190 1 52 3 55 3 181 1 6 3 118 3 97 3 7 1 
159 1 241 1 52 1 55 1 6 1 118 1 97 1 
159 1 52 1 31 1 143 1 55 1 6 1 118 1 97 1 181 1 
159 2 2 1 84 1 6 4 7 1 164 2 90 1 11 1 98 1 97 3 175 1 254 1 253 1 256 1 20 1 181 2 22 1 24 1 184 1 188 1 34 1 118 3 33 1 122 1 190 1 38 1 273 1 126 1 46 1 48 1 276 1 52 3 53 1 279 1 55 4 284 1 205 1 286 1 143 1 69 1 149 1 71 1 72 1 74 1 156 1 
190 1 51 1 166 1 52 1 55 2 6 2 118 2 97 1 7 1 
159 1 284 1 38 1 286 1 39 1 2 1 143 1 181 1 6 3 7 2 71 1 52 3 74 1 279 1 300 1 55 3 188 1 97 3 118 3 
41 1 52 2 143 1 136 1 55 2 6 2 118 2 97 2 181 1 7 1 
205 1 122 1 190 1 175 1 253 1 256 1 84 1 273 1 6 1 22 1 90 1 184 1 53 1 11 1 55 1 
159 1 205 1 190 1 175 1 253 1 256 1 84 1 273 1 67 1 6 1 22 1 293 1 90 1 53 1 11 1 55 1 98 1 
102 1 65 1 
159 1 62 1 38 1 52 1 55 1 6 1 118 1 97 1 
284 1 190 1 270 1 143 1 6 5 181 1 7 2 51 1 166 1 52 4 75 1 55 5 97 4 118 5 
159 1 241 1 62 1 52 2 55 2 6 2 118 2 97 2 
295 1 10 1 
295 1 10 1 
252 1 218 1 
252 1 218 1 
252 1 218 1 
295 1 140 1 10 1 
295 1 140 1 10 1 
295 1 186 1 10 1 
242 1 295 2 61 1 252 1 10 2 218 1 
295 1 140 1 10 1 
295 1 113 1 10 1 
295 1 113 1 10 1 
295 1 113 1 10 1 
295 1 278 1 141 1 177 1 10 1 203 1 
295 1 278 1 286 1 63 1 2 1 141 1 177 1 10 1 203 1 
0 1 116 1 299 1 
0 1 116 1 130 1 
0 3 42 1 66 1 299 2 267 1 130 1 
0 2 236 1 42 1 299 1 267 1 130 1 
0 2 42 1 299 1 267 2 130 1 
229 1 124 1 191 2 2 5 193 4 39 2 82 1 238 1 45 1 196 1 275 1 49 2 88 3 93 1 280 1 204 2 139 1 286 5 100 1 16 1 103 1 146 1 27 1 153 1 29 1 221 1 32 1 114 2 265 1 224 1 301 3 189 1 
159 1 233 1 2 2 193 2 39 1 6 1 241 1 91 1 52 1 94 1 55 1 97 1 286 2 100 1 16 1 179 1 181 1 115 1 35 1 34 1 118 1 
124 1 191 2 39 3 193 2 2 3 82 1 238 1 45 1 275 1 49 1 196 1 88 4 93 1 280 1 204 2 100 1 286 3 210 1 139 1 103 1 27 1 32 2 114 2 265 1 224 1 301 3 
124 1 191 4 39 4 2 4 82 2 193 3 238 2 45 2 85 1 275 1 49 2 196 2 88 7 245 1 93 2 280 1 204 4 100 1 209 1 286 4 210 1 139 2 103 1 27 1 32 3 114 4 265 1 224 1 301 5 
169 1 273 1 128 1 
151 1 273 1 
222 1 
256 1 273 1 
37 1 28 1 169 2 256 1 273 3 22 1 
256 1 273 1 22 1 
161 1 273 1 
120 1 230 1 249 1 126 5 214 1 45 1 24 2 8 1 260 3 261 2 262 3 135 1 167 1 93 1 76 1 96 1 227 2 
120 1 230 1 249 1 126 5 214 1 45 1 24 2 8 1 260 3 261 2 262 3 135 1 167 1 93 1 76 1 96 1 227 2 
120 1 230 1 249 1 126 5 214 1 45 1 24 2 8 1 260 3 261 2 135 1 262 3 167 1 9 1 93 1 76 1 96 1 227 2 
230 1 120 2 125 2 3 1 238 1 126 14 45 1 48 1 274 1 196 2 8 2 276 1 164 2 87 1 167 1 93 2 139 2 24 6 260 4 262 8 261 2 296 1 72 1 76 1 78 1 226 1 223 2 225 1 156 1 227 1 
120 1 230 1 101 1 214 1 126 7 45 1 48 2 8 1 24 3 292 1 276 2 87 1 164 4 260 4 135 1 261 3 262 4 167 1 72 2 93 1 76 1 156 2 96 1 227 2 
86 1 162 1 89 1 178 1 239 1 
86 1 162 1 207 1 178 1 239 1 
86 1 287 1 281 1 239 1 
86 1 162 1 207 1 178 1 239 1 
86 1 162 1 89 1 178 1 239 1 
213 1 
159 1 1 1 2 4 237 1 84 2 6 1 88 1 243 1 90 1 166 1 168 1 11 2 13 1 12 2 100 2 16 3 253 1 256 1 32 1 265 1 266 1 117 1 118 1 124 1 38 1 39 2 194 1 273 1 44 1 129 1 277 1 53 2 280 1 279 1 55 1 56 1 57 1 204 2 205 2 60 1 206 1 286 4 290 1 147 1 148 1 71 1 153 1 221 2 74 1 77 1 301 2 224 1 79 1 
12 2 159 1 60 1 38 1 100 2 286 2 39 2 2 2 44 1 6 1 290 1 147 1 166 1 71 1 74 1 279 1 56 1 79 1 55 1 57 1 118 1 
12 3 159 1 60 1 38 1 100 2 286 2 39 2 2 2 6 1 290 1 147 1 166 1 71 1 297 1 74 1 279 1 56 1 79 1 55 1 57 1 118 1 
12 2 159 1 60 1 38 1 100 2 286 2 39 2 2 2 44 1 6 1 290 1 147 1 166 1 71 1 168 1 74 1 279 1 56 1 79 1 55 1 57 1 118 1 
159 1 38 1 234 1 2 3 39 2 44 1 6 1 166 1 168 1 279 1 55 1 56 1 57 1 12 2 60 1 286 3 100 2 16 1 290 1 147 1 71 1 111 1 221 1 74 1 79 1 118 1 
159 1 1 1 124 1 38 1 194 1 2 3 39 2 44 1 129 1 6 1 88 1 277 1 166 1 168 1 280 1 279 1 56 1 55 1 57 1 13 1 204 1 12 2 60 1 286 3 100 2 16 1 290 1 147 1 71 1 153 1 221 1 74 1 32 1 265 1 77 1 301 1 79 1 118 1 
159 1 1 1 38 1 124 1 194 1 2 3 39 2 271 1 44 1 129 1 6 1 277 1 166 1 198 1 168 1 280 1 279 1 55 1 56 1 57 1 13 1 204 1 12 2 60 1 286 3 100 2 16 1 290 1 147 1 71 1 153 1 221 1 74 1 32 1 265 1 77 1 298 1 301 1 79 1 118 1 
159 1 1 1 38 1 124 1 194 1 2 3 39 2 271 1 44 1 129 1 6 1 277 1 166 1 198 1 168 1 280 1 279 1 55 1 56 1 57 1 13 1 204 1 12 2 60 1 286 3 100 2 16 1 290 1 147 1 71 1 153 1 221 1 74 1 32 1 265 1 77 1 298 1 301 1 79 1 118 1 
159 1 1 1 38 1 124 1 235 1 2 3 39 2 44 1 129 1 6 1 88 1 166 1 198 1 168 1 280 1 279 1 55 1 56 1 57 1 13 1 204 1 12 2 60 1 286 3 100 2 251 1 16 1 180 1 290 1 147 1 71 1 152 1 153 1 221 1 264 1 74 1 265 1 301 1 79 1 118 1 
12 2 159 1 60 1 38 1 100 2 286 2 39 2 2 2 44 1 6 1 290 1 147 1 166 1 71 1 168 1 74 1 279 1 56 1 79 1 55 1 57 1 118 1 228 1 
12 2 159 1 60 1 38 1 100 2 286 2 39 2 2 2 44 1 6 1 290 1 147 1 166 1 71 1 168 1 74 1 279 1 56 1 79 1 55 1 57 1 118 1 228 1 
159 1 1 1 124 1 38 1 235 1 2 3 39 2 44 1 129 1 6 1 88 1 166 1 168 1 280 1 279 1 56 1 55 1 57 1 13 1 204 1 12 2 60 1 286 3 100 2 16 1 180 1 290 1 147 1 71 1 152 1 153 1 221 1 74 1 265 1 301 1 79 1 118 1 
65 1 128 1 
69 1 276 1 121 1 164 2 72 1 156 1 20 1 217 1 48 1 
122 1 121 1 123 1 190 1 273 1 84 1 126 2 6 2 7 1 48 1 276 1 164 2 90 1 92 1 52 1 53 1 136 1 11 1 55 2 97 1 284 1 205 1 175 1 253 1 256 1 20 1 22 1 69 1 24 1 149 1 262 1 184 1 72 1 112 1 154 1 155 1 156 1 118 1 
121 1 126 2 84 1 6 1 7 1 48 1 240 1 276 1 164 2 52 1 53 1 11 1 55 1 97 1 137 1 284 1 205 1 138 1 20 1 69 1 24 2 149 1 110 1 72 1 156 1 118 1 
36 1 43 1 273 3 84 7 126 2 5 2 6 1 7 1 48 1 50 1 276 1 164 2 90 2 52 1 53 2 199 1 200 1 11 6 55 1 171 1 97 1 205 7 253 2 142 1 256 2 65 1 20 1 291 1 69 1 24 1 148 1 149 1 262 1 72 1 112 1 156 1 117 1 118 1 
121 1 41 1 238 1 126 3 45 1 6 1 48 1 196 1 276 1 164 2 52 1 93 1 136 1 55 1 97 1 139 1 143 1 19 1 20 1 145 1 181 1 69 1 24 2 260 1 261 1 262 1 72 1 156 1 118 1 
65 1 
65 1 
65 1 
41 1 43 1 126 2 20 1 145 1 48 1 69 1 196 1 8 1 276 1 164 2 260 1 150 1 262 2 72 1 93 1 136 1 156 1 
41 1 238 1 43 1 126 2 20 1 145 1 45 1 48 1 69 1 276 1 24 2 164 2 260 1 261 1 165 1 72 1 136 1 156 1 
139 1 41 2 238 1 43 1 126 4 20 1 45 1 145 2 48 1 69 1 196 1 24 2 8 1 276 1 164 2 260 2 261 1 262 2 72 1 93 1 136 2 156 1 
139 1 41 2 238 1 126 4 20 1 45 1 145 2 48 1 69 1 196 1 24 2 8 1 276 1 164 2 260 2 261 1 262 2 72 1 93 1 136 2 156 1 
122 1 190 1 126 2 84 1 273 1 6 1 48 1 276 1 164 2 90 1 53 1 11 1 55 1 205 1 175 1 253 1 256 1 20 1 22 1 69 1 24 1 149 1 262 1 112 1 184 1 72 1 156 1 33 1 
159 1 190 1 126 1 84 1 273 1 6 1 48 1 276 1 164 2 90 1 53 1 11 1 55 1 98 1 205 1 175 1 253 1 256 1 104 1 20 1 67 1 22 1 69 1 293 1 24 1 149 1 72 1 156 1 
121 1 139 1 41 2 238 1 126 4 20 1 45 1 145 2 48 1 69 1 196 1 24 2 8 1 276 1 164 2 260 2 261 1 262 2 72 1 93 1 136 2 156 1 
122 1 41 2 238 1 126 4 84 1 273 1 45 1 6 1 48 1 196 1 8 1 276 1 164 2 90 1 93 1 136 2 11 1 55 1 205 1 175 1 208 1 139 1 253 1 256 1 20 1 145 2 22 1 291 1 69 1 24 2 260 2 261 1 262 2 184 1 72 1 156 1 33 1 
121 1 41 1 238 1 126 3 45 1 6 1 48 1 196 1 8 1 276 1 164 2 52 1 93 1 136 1 55 1 97 1 139 1 143 1 20 1 145 1 181 1 258 1 69 1 24 1 260 1 262 2 72 1 156 1 118 1 
269 1 125 5 3 3 238 5 126 43 45 5 195 2 48 3 196 7 276 3 8 5 87 1 164 6 134 2 93 7 54 1 170 1 282 3 285 1 139 7 15 1 64 1 144 1 21 1 292 1 24 20 260 8 261 3 109 1 262 23 263 1 72 3 73 1 78 2 223 5 156 3 119 1 302 1 
269 1 125 6 3 3 238 9 126 60 45 9 195 3 48 4 196 9 276 4 8 7 87 2 164 8 134 2 93 9 54 1 170 1 282 4 285 1 139 9 15 1 64 1 144 1 21 1 292 1 24 30 260 13 261 6 109 1 262 30 263 1 72 4 73 1 78 3 223 6 156 4 119 1 302 1 
269 1 125 4 3 2 238 6 126 42 45 6 195 2 48 3 196 6 276 3 8 6 87 2 164 6 134 1 93 6 170 1 282 3 285 1 139 6 15 1 64 1 21 1 292 1 24 21 260 12 261 6 109 1 262 21 263 1 72 3 73 1 78 2 223 4 156 3 119 1 302 1 
81 1 125 2 3 2 238 4 126 28 45 4 48 3 196 4 276 3 8 2 87 1 164 6 134 1 93 4 170 1 282 2 285 1 139 4 15 1 64 1 144 1 21 1 292 1 24 15 260 4 261 2 109 1 262 13 263 1 72 3 73 1 78 1 223 3 156 3 119 1 302 1 
269 1 125 4 3 2 238 6 126 44 45 6 195 2 48 3 196 7 8 3 276 3 87 2 164 6 134 2 93 7 170 1 282 3 285 1 139 7 15 1 64 1 21 2 24 21 292 1 260 6 109 1 262 23 261 3 263 1 72 3 73 1 78 2 156 3 223 4 119 1 302 1 
132 1 55 1 6 1 118 1 
0 2 205 2 172 1 231 1 40 1 253 1 17 1 84 2 66 1 130 1 47 1 257 1 106 1 291 1 90 1 248 1 11 2 116 1 299 1 
0 2 205 1 172 1 40 1 17 1 253 1 84 1 66 1 127 1 130 1 257 1 106 1 90 1 248 1 11 1 116 1 299 1 
205 1 253 1 17 1 272 1 256 1 273 1 84 1 47 1 148 1 90 1 53 1 202 1 11 1 117 1 
0 2 205 1 172 1 231 1 40 1 253 1 17 1 84 1 66 1 130 1 47 1 257 1 106 1 90 1 248 1 11 1 116 1 299 1 
58 1 
204 1 173 1 100 1 39 1 301 1 128 1 23 1 
204 1 124 1 100 1 286 1 2 1 39 2 194 1 16 1 88 1 277 1 153 1 221 1 32 1 265 1 280 1 77 1 301 1 
205 1 37 1 124 1 192 1 14 1 253 2 256 1 273 2 84 1 22 1 90 1 151 1 153 1 53 1 265 1 280 1 11 1 
124 2 191 8 2 1 39 6 125 2 3 1 238 4 45 4 195 1 196 4 88 10 197 1 93 4 280 2 95 2 204 7 285 1 286 1 100 1 139 4 16 1 64 1 263 1 153 2 221 1 114 8 32 5 265 2 78 1 301 12 223 2 119 1 302 1 
159 1 160 1 124 1 2 1 45 1 6 1 241 1 167 1 52 1 93 2 95 2 280 1 55 1 96 1 97 1 204 2 286 1 179 1 181 1 182 1 153 1 265 1 76 1 298 1 115 1 301 2 34 1 118 1 
204 1 124 1 173 1 100 1 39 1 23 1 153 1 265 1 280 1 301 1 
204 5 138 1 160 1 139 2 191 5 39 5 238 2 45 2 196 2 88 10 93 2 114 5 32 5 95 2 301 5 
100 1 286 1 39 1 2 1 16 1 221 1 
124 2 2 3 83 1 4 1 273 2 84 4 243 2 90 2 246 1 53 2 280 2 11 4 204 2 205 4 206 1 210 1 286 3 253 3 16 4 255 1 256 2 22 1 219 2 148 1 26 1 153 1 221 2 265 2 266 1 187 1 157 1 224 2 301 2 117 1 
122 1 190 1 126 1 84 1 273 1 6 3 46 1 48 1 276 1 164 2 90 1 52 2 53 1 11 1 55 3 97 2 205 1 175 1 253 1 256 1 20 1 181 2 22 1 69 1 24 1 149 1 72 1 184 1 156 1 118 2 34 1 33 1 
204 2 124 1 191 2 100 2 39 4 88 4 243 1 153 1 114 2 32 2 265 1 280 1 224 1 301 1 227 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
141 1 177 1 
295 1 10 1 
126 6 214 1 45 1 48 2 24 3 8 1 276 2 164 4 87 1 260 3 262 3 261 2 135 1 72 2 167 1 93 1 76 1 156 2 96 1 227 1 
24 2 260 2 262 2 261 2 135 1 167 1 93 1 126 4 214 1 76 1 128 1 45 1 96 1 227 1 
139 1 238 1 126 4 45 1 48 1 196 1 24 2 276 1 8 1 164 2 260 2 261 1 262 2 72 1 93 1 156 1 268 1 
139 2 125 2 3 1 238 2 126 12 45 2 195 1 196 2 8 1 24 6 260 2 261 1 262 6 93 2 78 1 223 2 
125 2 238 2 126 21 45 3 195 1 48 2 196 2 8 4 276 2 87 2 164 4 135 1 167 2 93 3 96 1 139 2 214 1 105 1 24 11 260 9 262 10 261 5 296 1 72 2 76 2 78 1 223 2 156 2 227 1 
24 1 126 1 223 1 
262 1 125 1 126 1 
138 1 139 1 238 1 126 6 45 1 48 1 196 1 276 1 24 3 8 2 164 2 260 4 262 3 261 2 72 1 93 1 156 1 268 1 
125 2 3 1 238 4 126 22 45 4 48 1 195 1 196 4 276 1 8 2 164 2 93 4 285 1 139 4 64 1 24 11 292 1 260 4 262 11 261 2 263 1 72 1 78 1 223 2 156 1 119 1 302 1 
24 1 262 1 93 1 126 2 45 1 96 1 
126 3 214 1 48 1 8 1 24 2 276 1 87 1 164 2 260 2 262 1 261 1 135 1 296 1 167 1 72 1 76 1 156 1 
125 1 3 1 238 1 126 11 45 1 48 2 196 2 8 1 276 2 87 1 164 4 93 2 285 1 139 2 64 1 24 4 292 1 260 2 262 7 261 1 263 1 72 2 223 1 156 2 119 1 302 1 
125 1 3 1 126 9 45 1 48 2 196 1 276 2 8 1 164 4 135 1 167 1 93 2 96 1 139 1 214 1 24 4 292 1 260 3 261 2 262 5 72 2 76 1 78 1 223 2 156 2 227 1 302 1 268 1 
125 2 3 1 238 4 126 23 45 4 48 3 195 1 196 4 276 3 8 2 87 1 164 6 93 4 285 1 139 4 64 1 24 12 292 1 260 4 262 11 261 2 263 1 72 3 78 1 223 2 156 3 119 1 268 1 302 1 
125 2 3 1 238 3 126 21 45 3 48 3 195 1 196 4 276 3 8 2 87 1 164 6 93 4 285 1 139 4 64 1 24 9 292 1 260 4 262 12 261 2 263 1 72 3 78 1 223 2 156 3 119 1 268 1 302 1 
125 1 3 1 238 1 126 11 45 1 48 2 196 2 8 1 276 2 87 1 164 4 93 2 285 1 139 2 64 1 24 4 292 1 260 2 262 7 261 1 263 1 72 2 223 1 156 2 119 1 302 1 
125 2 3 1 238 4 126 22 45 4 48 1 195 1 196 4 276 1 8 2 164 2 93 4 285 1 139 4 64 1 24 11 292 1 260 4 262 11 261 2 263 1 72 1 78 1 223 2 156 1 119 1 302 1 
125 2 3 1 238 3 126 22 45 3 48 4 195 1 196 4 276 4 8 2 87 2 164 8 93 4 285 1 139 4 64 1 24 10 292 1 260 4 262 12 261 2 263 1 72 4 78 1 223 2 156 4 119 1 302 1 268 1 
125 1 3 1 238 1 126 7 45 1 48 2 196 1 276 2 164 4 93 1 139 1 144 1 24 4 292 1 260 1 262 3 261 1 72 2 78 1 223 2 156 2 302 1 
126 9 214 1 45 3 182 1 24 4 8 3 260 7 135 1 261 4 262 5 167 2 93 3 76 2 96 2 227 1 
125 1 3 1 238 1 126 7 45 1 48 2 196 1 276 2 164 4 93 1 139 1 144 1 24 4 292 1 260 1 262 3 261 1 72 2 78 1 223 2 156 2 302 1 
126 8 45 2 48 1 276 1 292 1 182 1 8 2 24 4 164 2 260 4 261 2 262 4 72 1 167 1 93 2 76 1 156 1 96 1 
126 2 48 1 196 1 292 1 276 1 8 1 164 2 260 1 262 2 72 1 93 1 156 1 
139 1 238 1 126 4 45 1 48 1 196 1 24 2 292 1 276 1 8 1 164 2 260 2 261 1 262 2 72 1 93 1 156 1 
126 3 144 1 48 3 24 2 292 1 276 3 8 1 87 1 164 6 260 2 296 1 261 1 262 1 72 3 167 1 76 1 156 3 
139 1 125 2 3 1 126 5 144 1 48 3 196 1 274 1 292 1 276 3 24 1 164 6 262 4 72 3 93 1 226 1 156 3 223 1 268 1 
190 1 51 1 166 1 288 1 55 1 6 1 118 1 
190 1 250 1 288 1 216 1 6 1 108 1 51 1 166 1 30 1 247 1 55 1 118 1 
148 1 205 1 90 1 253 1 53 1 256 1 273 1 84 1 11 1 128 1 117 1 
205 1 190 1 175 1 253 1 256 1 273 1 84 1 22 1 6 2 7 1 90 1 184 1 52 1 53 1 11 1 55 2 97 1 118 1 
159 1 205 1 190 1 38 1 175 1 161 1 253 1 256 2 273 3 84 1 22 2 6 2 7 1 219 1 90 1 184 1 52 1 74 1 11 1 55 2 97 2 118 2 283 1 
159 2 190 1 38 1 161 1 84 1 273 3 6 2 7 1 90 1 52 1 11 1 55 2 98 1 97 2 283 1 205 1 175 1 253 1 256 2 67 1 22 2 219 1 74 1 118 2 
159 1 232 1 2 2 39 1 161 1 273 4 84 1 6 1 241 1 90 1 52 1 169 1 11 1 279 1 55 1 97 1 283 1 205 1 286 2 100 1 16 1 253 1 256 1 179 1 181 1 22 1 219 1 220 1 151 1 115 1 118 1 34 1 
159 1 2 2 39 1 273 2 84 1 6 1 241 1 169 1 52 1 279 1 11 1 55 1 97 1 205 1 286 2 100 1 211 1 16 1 179 1 181 1 219 1 151 1 115 1 118 1 34 1 
205 1 36 1 90 1 253 1 84 1 11 1 
205 1 37 1 253 2 83 1 256 1 84 1 273 1 68 1 22 1 90 1 53 1 246 1 11 1 
159 1 121 1 126 6 84 1 45 2 6 1 7 1 48 1 8 1 276 1 164 2 135 1 167 1 52 1 93 2 11 1 55 1 98 1 96 1 97 1 205 1 214 1 20 1 69 1 291 1 24 3 182 1 70 1 260 3 262 3 261 2 110 1 72 1 76 1 156 1 118 1 
159 1 160 1 2 3 84 1 6 1 241 1 163 1 167 1 169 1 93 2 11 1 95 2 96 1 97 1 173 1 100 1 16 2 18 1 179 1 23 1 181 1 182 1 185 1 265 2 187 1 115 1 34 1 118 1 124 2 193 1 39 1 273 2 45 2 52 1 53 1 279 1 280 2 55 1 204 4 205 1 286 3 211 1 151 1 153 2 221 1 76 1 301 3 
205 2 36 1 37 1 14 1 253 2 256 1 84 2 273 2 22 1 291 1 90 1 169 1 11 2 
291 1 148 1 205 4 174 1 90 1 253 1 53 1 256 1 273 1 84 4 11 4 215 1 117 1 
205 1 253 2 255 1 83 1 256 1 84 1 4 1 273 1 22 1 133 1 90 1 246 1 11 1 
0 1 172 1 205 1 90 1 253 1 53 1 84 1 11 1 116 1 130 1 
291 1 205 2 107 1 90 1 253 1 256 1 248 1 273 1 200 1 84 2 11 2 
205 5 253 2 256 2 84 5 273 3 215 1 219 1 291 1 148 1 50 1 90 2 53 1 200 1 11 4 117 1 171 1 
205 5 99 1 253 2 256 2 84 5 273 3 215 1 219 1 291 1 148 1 90 2 53 1 200 1 11 4 117 1 171 1 
159 1 190 1 84 1 273 1 6 2 7 1 90 1 52 1 53 1 11 1 55 2 97 1 98 1 205 1 175 1 253 1 256 1 67 1 22 1 118 1 
205 1 37 1 253 2 83 1 256 1 84 1 273 1 68 1 22 1 219 1 90 1 246 1 11 1 
132 1 259 1 25 1 289 1 
294 1 244 1 289 1 
59 1 259 1 25 1 190 1 289 1 
159 2 38 1 2 2 193 1 39 1 6 1 241 1 244 1 52 1 279 1 55 1 97 1 59 1 286 2 100 1 289 1 179 1 181 1 294 1 259 1 25 1 183 1 71 1 74 1 115 1 188 1 118 1 34 1 

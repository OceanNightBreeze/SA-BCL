#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 228 (84,186) (84,186) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 228 (84,186) (84,186) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 228 (84,186) (84,186) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 228 (84,186) (84,186) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (11,249,279) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (11,249,279) 110 262 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (11,249,279) 110 128 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (119,296) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (119,296) 55 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (119,296) 55 222 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 43 58 185 8 221 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (11,249,279) (11,249,279) 192 283 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 102 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 43 58 185 8 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 111 17 (15,304) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (11,249,279) 110 91 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 79 (233,276) (233,276) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 1 79 1 56 1 42 2 276 1 219 1 285 3 71 1 290 1 94 1 20 2 233 1 39 3 52 1 
159 1 56 1 42 1 208 1 84 1 107 1 182 1 285 2 260 1 71 1 228 1 20 1 186 1 169 1 253 1 39 2 
159 1 56 1 42 1 208 1 84 1 107 1 182 1 285 2 260 1 71 1 228 1 20 1 186 1 169 1 253 1 39 2 
159 1 56 1 42 1 208 1 84 1 107 1 182 1 285 2 260 1 71 1 228 1 20 1 186 1 169 1 253 1 39 2 
159 1 56 1 42 1 208 1 84 1 107 1 182 1 285 2 260 1 71 1 228 1 20 1 186 1 169 1 253 1 39 2 
79 2 42 1 276 1 285 4 49 1 290 1 95 1 94 3 20 1 253 1 169 1 139 2 56 1 175 2 182 1 219 1 228 1 39 4 233 1 
159 1 56 1 140 1 42 1 171 1 276 1 107 1 219 1 285 2 10 1 71 1 20 1 253 1 169 1 233 1 39 2 
79 4 42 2 276 1 44 1 285 9 49 1 290 3 94 7 95 1 203 1 20 2 253 1 169 1 52 1 139 4 56 1 209 1 175 2 181 1 182 1 219 1 71 1 228 1 233 1 39 9 
79 4 42 2 276 1 44 1 285 9 49 1 290 3 94 7 95 1 203 1 20 2 253 1 169 1 52 1 139 4 56 1 209 1 175 2 181 1 182 1 219 1 71 1 228 1 233 1 39 9 
172 1 178 1 62 1 280 1 27 1 214 1 220 1 11 1 34 1 252 1 227 1 131 1 315 1 187 1 
7 1 
11 2 173 1 172 1 251 1 280 2 7 1 284 1 199 1 
117 1 301 1 172 2 105 1 142 1 280 5 7 1 281 2 282 1 284 1 127 1 199 2 11 5 251 1 298 1 299 1 317 2 234 1 78 2 
251 1 291 1 7 1 
194 1 
34 1 266 1 227 2 252 2 131 2 27 2 315 2 187 2 
193 1 236 2 120 2 1 1 240 1 123 1 124 1 85 1 197 1 88 1 16 1 201 1 252 3 131 2 133 1 24 1 103 2 176 1 210 1 27 2 61 2 213 1 211 1 307 1 29 1 148 1 63 1 218 2 68 1 35 1 34 1 114 1 266 1 227 3 315 2 187 2 157 1 
34 1 227 1 252 1 62 1 131 1 27 1 214 1 315 1 187 1 220 1 
249 1 227 1 252 1 279 1 131 1 261 1 
227 1 252 1 279 1 131 1 27 1 315 1 187 1 
11 1 170 1 172 1 280 1 199 1 
11 2 172 1 251 1 25 1 280 2 7 1 284 1 199 1 
11 1 280 1 199 1 
206 1 24 1 1 1 103 1 240 1 27 1 61 1 211 1 123 1 307 1 218 1 88 1 68 1 16 1 252 2 227 2 131 1 134 1 315 1 190 1 
302 1 62 1 27 1 252 2 227 2 266 1 131 2 231 1 98 1 315 1 187 1 
53 1 163 1 134 1 
24 1 1 1 103 1 240 1 61 1 123 1 211 1 307 1 218 1 68 1 88 1 16 1 266 1 227 1 252 1 93 1 
266 1 291 1 
266 1 227 3 252 3 131 3 27 3 315 3 187 1 190 1 
227 1 252 1 62 1 131 1 27 1 214 1 315 1 
302 1 27 1 62 1 252 1 227 1 131 1 315 1 98 1 187 1 
206 1 302 1 227 2 252 2 279 1 131 2 27 2 315 2 187 1 110 1 262 1 190 1 
62 1 27 1 261 1 184 1 252 2 227 2 266 1 131 2 231 1 315 1 190 1 
128 1 206 1 227 1 252 1 279 1 131 1 27 1 315 1 110 1 190 1 
302 1 27 2 163 1 252 2 227 2 131 2 315 2 134 1 187 1 190 1 
24 1 1 1 103 1 240 1 61 1 123 1 211 1 307 1 218 1 68 1 88 1 16 1 266 1 227 1 252 1 
24 1 1 1 103 1 304 1 239 1 240 1 61 1 307 1 218 1 68 1 88 1 16 1 266 1 227 1 252 1 
53 1 205 1 193 1 236 2 120 2 306 1 195 1 213 1 125 1 63 1 148 1 29 1 201 1 247 1 163 1 293 1 155 1 134 1 157 2 
27 1 62 1 6 1 9 1 252 1 227 1 131 1 315 1 
206 1 302 1 62 1 27 3 252 3 227 3 266 1 131 3 231 1 315 3 187 1 190 2 
227 1 252 1 62 1 131 1 27 1 214 1 315 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
119 1 92 1 296 1 87 1 
119 1 92 1 296 1 87 1 
92 1 296 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
119 1 87 1 
55 1 119 1 223 1 87 1 
11 1 55 1 222 1 119 1 223 1 280 1 87 1 
255 2 310 1 171 1 182 1 253 2 
169 1 253 1 182 1 
171 1 169 1 253 1 
255 1 310 1 171 1 51 1 182 2 253 3 
255 1 310 1 171 1 182 1 253 2 244 1 
7 3 11 5 251 1 252 1 99 1 172 4 105 3 178 1 177 1 26 1 27 1 259 2 109 2 112 1 31 1 34 1 265 2 267 1 187 1 43 1 194 4 280 5 125 1 281 1 282 2 284 1 199 1 131 1 301 1 58 1 62 1 214 1 220 1 70 2 73 1 227 1 155 1 315 1 317 1 78 1 
7 3 11 5 251 1 252 1 167 1 99 1 170 2 172 4 105 3 178 1 177 1 27 1 26 1 109 2 31 1 34 1 265 2 267 1 187 1 43 1 194 4 280 5 125 1 281 1 282 2 284 1 199 3 131 1 301 1 57 2 58 1 62 1 214 1 220 1 70 2 227 1 155 1 314 1 315 1 317 1 78 1 
43 1 194 4 280 3 125 1 7 3 281 1 282 2 11 3 251 1 252 1 131 1 99 1 172 2 58 1 105 3 178 1 177 1 62 1 27 1 214 1 259 1 109 2 220 1 112 1 31 1 70 2 34 1 265 2 227 1 73 1 267 1 155 1 315 1 187 1 317 1 78 1 234 1 
158 1 43 1 194 4 280 2 125 1 7 2 281 1 282 2 11 2 99 1 172 1 58 1 105 3 177 1 259 1 109 2 112 1 31 1 70 2 265 2 73 1 267 1 155 1 317 1 78 1 234 1 
54 1 
13 1 1 1 291 1 
1 1 82 1 
24 1 1 1 
13 2 24 1 16 1 1 3 242 1 263 1 
24 1 16 1 1 1 
1 1 108 1 
120 14 277 2 122 1 195 4 125 3 161 1 48 2 293 5 96 2 297 1 22 1 136 1 137 1 31 3 224 1 35 8 72 1 157 6 40 2 
273 2 43 1 120 6 58 1 8 1 221 1 31 1 47 1 72 1 35 5 185 1 166 1 22 2 157 1 40 1 
193 2 236 4 120 16 277 2 122 2 195 5 125 3 161 1 200 1 201 2 48 2 293 7 96 2 19 1 135 1 22 1 136 1 29 2 148 2 31 3 35 9 72 1 224 1 157 7 40 2 
120 14 277 2 122 1 195 4 125 3 161 1 48 2 293 5 96 2 136 1 22 1 137 1 31 3 224 1 35 8 72 1 157 6 40 2 
120 14 277 2 122 3 195 4 125 3 161 1 48 2 293 7 96 2 136 1 22 1 137 1 31 3 224 1 35 8 72 1 157 6 40 2 
42 1 1 1 237 2 81 1 240 1 5 1 285 1 88 1 20 1 21 2 24 1 103 1 174 1 61 1 308 2 218 1 68 1 36 1 71 2 154 1 116 1 38 1 39 1 
42 1 237 1 2 1 83 1 240 1 285 1 12 1 88 1 51 1 20 1 169 1 21 1 253 2 56 1 303 1 171 1 103 1 61 1 182 1 308 1 218 1 151 1 71 1 152 1 77 1 39 1 
42 1 276 1 237 1 2 1 83 1 240 1 285 2 12 1 88 1 51 1 94 1 20 1 169 1 21 1 253 2 56 1 303 1 171 1 103 1 61 1 182 1 308 1 218 1 219 1 151 1 71 1 152 1 233 1 39 2 272 1 
42 1 276 1 237 1 2 1 83 1 240 1 285 3 12 1 88 1 51 1 94 2 20 1 169 1 21 1 253 2 171 1 103 1 61 1 182 1 308 1 218 1 219 1 151 1 36 1 71 1 152 1 74 1 77 1 233 1 39 3 
276 1 237 1 83 1 240 1 285 2 12 1 88 1 51 1 94 2 21 1 253 2 169 1 171 1 103 1 61 1 308 1 218 1 182 1 219 1 151 1 71 1 74 1 77 1 233 1 39 2 
256 1 
192 1 1 1 279 1 240 1 280 2 281 1 282 1 283 1 284 1 199 2 11 2 88 1 249 1 252 1 292 1 131 1 301 1 207 1 24 1 103 2 174 1 105 1 177 1 61 2 218 2 261 1 183 1 68 2 113 1 225 1 227 1 38 1 317 1 78 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
192 1 173 1 279 1 280 2 284 1 283 1 261 1 199 1 11 2 249 1 225 1 227 1 252 1 292 1 131 1 
301 1 192 1 279 1 280 1 281 1 261 1 283 1 11 1 249 1 225 1 227 1 252 1 292 1 131 1 317 1 78 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
11 1 192 1 249 1 225 1 227 1 252 1 279 1 292 1 131 1 280 1 261 1 283 1 
301 1 192 1 279 1 280 1 281 1 261 1 283 1 11 1 249 1 225 1 227 1 252 1 292 1 131 1 317 1 78 1 
191 1 193 2 118 1 236 4 1 3 120 2 240 2 241 1 124 1 196 1 162 1 88 2 201 2 252 1 131 1 97 1 205 1 24 2 103 7 174 1 176 1 27 1 61 8 213 2 29 2 148 2 63 2 218 8 68 2 311 1 35 1 114 2 227 1 315 1 38 1 77 1 157 1 272 1 190 1 
193 1 236 2 43 1 120 3 195 1 125 1 245 1 201 1 163 1 252 1 293 1 131 1 134 1 254 1 53 1 302 1 58 1 27 1 213 1 29 1 148 1 63 1 31 1 35 1 227 1 155 1 315 1 187 1 157 2 
205 1 193 1 236 2 120 5 277 1 195 2 213 1 125 1 63 1 148 1 29 1 31 1 35 3 201 1 224 1 48 1 266 2 293 2 291 1 96 1 157 2 136 1 40 1 
193 1 245 1 236 2 201 1 4 1 213 1 29 1 148 1 63 1 
193 1 236 2 1 1 120 2 238 1 240 1 123 1 124 1 88 1 245 1 16 1 201 1 163 1 252 2 289 1 93 1 131 1 206 1 24 1 103 1 176 1 61 1 27 1 211 1 213 1 307 1 148 1 63 1 29 1 218 1 68 1 35 1 153 1 266 1 227 2 315 1 157 1 190 1 
236 4 1 1 240 1 85 1 245 1 88 1 89 1 16 1 90 1 252 2 163 2 24 1 103 1 176 1 27 1 29 2 31 1 35 3 190 1 193 2 43 1 120 5 122 2 123 1 195 1 201 2 288 1 293 3 131 1 294 1 134 2 206 1 53 2 58 1 61 1 213 2 211 1 307 1 63 2 148 2 218 1 68 1 227 2 226 1 315 1 157 2 
53 1 205 1 193 1 236 2 43 1 120 2 122 1 213 1 63 1 148 1 29 1 31 1 246 1 201 1 35 2 163 1 293 1 134 1 
53 1 205 1 193 1 236 2 120 2 306 1 195 1 213 1 125 1 63 1 148 1 29 1 201 1 163 1 293 1 155 1 134 1 157 2 
193 1 43 1 236 2 120 4 122 1 195 1 125 1 201 1 163 2 293 2 134 2 205 1 53 2 58 1 213 1 29 1 148 1 63 1 31 1 35 2 155 1 157 2 
53 1 191 1 193 1 236 2 43 1 120 2 122 1 213 1 63 1 148 1 29 1 31 1 246 1 201 1 35 2 163 1 293 1 134 1 
53 1 191 1 193 1 236 2 120 2 306 1 195 1 213 1 125 1 63 1 148 1 29 1 201 1 163 1 293 1 155 1 134 1 157 2 
53 1 191 1 193 1 236 2 43 1 120 2 58 1 122 1 213 1 63 1 148 1 29 1 31 1 201 1 35 2 163 1 293 1 134 1 
53 1 193 1 236 2 43 1 120 2 58 1 122 1 213 1 63 1 148 1 29 1 31 1 201 1 35 2 163 1 293 1 134 1 
193 1 236 2 120 2 1 1 240 1 123 1 124 1 85 1 88 1 16 1 201 1 252 1 24 1 103 1 176 1 61 1 211 1 213 1 307 1 63 1 148 1 29 1 218 1 68 1 35 1 266 1 227 1 157 1 
193 1 236 2 120 2 1 1 240 1 239 1 124 1 88 1 16 1 201 1 252 1 23 1 24 1 304 1 103 1 176 1 61 1 213 1 307 1 63 1 148 1 29 1 218 1 68 1 35 1 266 1 227 1 157 1 
53 1 193 1 236 2 43 1 120 2 58 1 122 1 213 1 63 1 148 1 29 1 245 1 31 1 201 1 35 2 163 1 293 1 134 1 
193 1 43 1 236 2 120 2 1 1 122 1 240 1 123 1 85 1 88 1 89 1 16 1 201 1 163 1 252 1 293 1 134 1 53 1 24 1 103 1 58 1 61 1 211 1 213 1 307 1 63 1 148 1 29 1 218 1 31 1 35 2 227 1 272 1 
193 1 236 2 43 1 120 2 122 1 243 1 245 1 201 1 252 1 163 1 293 1 131 1 134 1 53 1 302 1 58 1 27 1 213 1 29 1 148 1 63 1 31 1 35 2 227 1 315 1 187 1 
193 2 273 1 236 4 43 2 120 11 195 1 125 1 126 1 200 1 47 1 201 2 250 1 287 1 202 1 293 1 166 2 58 2 60 1 146 1 29 2 148 2 180 1 309 1 31 2 35 6 115 1 155 1 157 5 
193 1 273 2 236 2 43 2 120 18 125 1 126 1 200 1 47 2 201 1 250 2 129 1 164 1 166 2 300 1 58 2 60 2 146 1 29 1 148 1 217 1 180 1 67 1 31 2 35 10 115 2 230 1 155 1 75 1 157 8 
193 2 273 1 236 4 43 2 120 11 125 1 126 1 200 1 47 1 201 2 250 1 202 1 166 2 58 2 60 1 146 1 29 2 148 2 180 1 67 1 309 1 31 2 35 6 115 1 155 1 157 5 
193 2 273 1 236 4 43 2 120 11 125 1 126 1 200 1 47 1 201 2 250 1 202 1 166 2 58 2 60 1 146 1 29 2 148 2 180 1 67 1 309 1 31 2 35 6 115 1 155 1 157 5 
193 1 273 2 236 2 43 4 120 30 277 1 122 2 195 2 125 4 126 1 200 1 47 2 48 1 201 1 250 1 129 1 164 1 293 4 96 1 166 3 136 1 300 1 58 4 60 1 146 1 29 1 148 1 217 1 180 1 67 1 309 1 31 5 224 1 35 16 115 2 230 1 155 3 75 1 157 14 40 1 
193 1 236 2 1 1 120 2 240 1 241 1 124 1 286 1 88 1 245 1 201 1 252 2 131 2 97 1 168 1 24 1 103 2 176 1 61 2 213 1 63 1 148 1 29 1 218 2 30 1 32 1 33 1 35 1 114 2 227 2 157 1 
24 1 1 1 103 1 237 1 174 1 240 1 61 1 179 1 218 1 88 1 68 1 116 1 38 1 100 1 
171 1 103 1 237 1 83 1 240 1 61 1 147 1 179 1 182 1 218 1 88 1 151 1 152 1 51 1 156 1 169 1 253 2 77 1 
171 1 103 2 237 1 240 1 83 1 61 2 147 1 179 1 182 1 218 2 88 1 151 1 152 1 51 1 156 1 169 1 253 2 77 1 272 1 
171 1 103 1 237 1 83 1 240 1 61 1 147 1 215 1 182 1 218 1 88 1 151 1 152 1 51 1 169 1 253 2 77 1 
248 1 
301 1 251 1 105 1 142 1 7 1 281 1 282 1 298 1 317 1 78 1 
43 1 58 1 194 4 105 2 7 2 125 1 282 2 109 2 31 1 70 2 265 2 155 1 
11 1 251 1 280 1 7 1 284 1 199 1 
41 1 275 1 1 2 240 2 280 3 281 2 282 2 284 2 199 4 11 3 88 3 16 1 301 1 207 2 24 2 141 1 103 4 174 1 59 1 105 2 177 2 61 4 258 2 218 4 183 1 68 2 113 1 229 1 271 1 38 1 316 1 317 2 234 1 78 2 
251 1 105 1 142 1 291 1 7 1 282 1 298 1 
301 1 194 1 105 1 212 1 7 1 281 1 160 1 282 1 70 1 317 1 78 1 
1 4 80 1 82 2 240 1 242 1 7 3 11 2 88 2 13 1 16 1 24 1 103 1 105 4 177 1 109 3 31 1 265 3 269 1 43 1 121 1 194 6 280 2 281 2 125 1 282 3 284 1 199 2 130 1 294 1 295 1 301 2 58 1 61 1 216 1 218 1 150 1 68 1 69 1 70 3 155 1 317 2 78 2 
273 1 43 2 194 6 281 1 7 4 125 2 282 4 47 1 251 1 129 1 164 1 166 1 300 1 301 1 58 2 105 7 217 1 109 5 31 2 70 3 265 5 230 1 155 2 317 1 78 1 
277 1 280 1 281 1 125 1 161 1 282 2 11 1 48 1 252 1 96 1 131 1 204 2 301 1 105 2 178 1 62 1 27 1 214 1 66 1 220 1 31 2 34 1 264 1 227 1 315 1 187 1 317 1 78 1 
193 1 236 2 120 1 1 1 240 1 123 1 85 1 88 1 16 1 201 1 252 3 131 2 24 1 103 1 176 1 210 1 61 1 27 2 211 1 213 1 307 1 29 1 148 1 63 1 218 1 68 1 34 1 266 1 227 3 315 2 187 2 157 1 
301 1 207 1 194 2 105 1 177 1 281 1 7 2 282 1 70 1 265 1 251 1 317 1 78 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
102 1 18 1 
119 1 87 1 
193 1 236 2 120 10 277 2 122 2 195 3 125 2 29 1 148 1 161 1 200 1 31 2 201 1 48 2 35 5 293 5 96 1 157 5 
193 1 236 2 43 1 120 2 122 1 148 1 29 1 200 1 31 1 201 1 35 2 293 1 
193 1 236 2 43 1 120 4 58 1 122 1 195 1 125 1 148 1 29 1 200 1 31 1 201 1 35 2 293 2 155 1 157 2 
193 3 236 6 0 1 120 3 277 1 122 1 195 1 148 3 29 3 200 1 201 3 48 1 35 1 202 1 293 2 19 1 157 2 
273 2 193 3 43 2 236 6 120 8 58 2 8 1 148 3 29 3 149 1 309 1 31 2 200 1 47 1 35 6 201 3 202 1 185 1 166 2 157 2 
193 2 236 4 120 17 277 2 122 3 195 4 125 3 161 1 48 2 201 2 293 7 96 2 19 1 136 1 29 2 148 2 31 3 224 1 35 9 157 8 40 1 
120 5 277 1 195 2 125 1 31 1 224 1 48 1 35 3 291 1 293 2 96 1 157 2 136 1 40 1 
193 1 236 2 43 1 120 4 58 1 122 1 195 1 125 1 148 1 29 1 149 1 31 1 201 1 35 2 293 2 155 1 157 2 
273 1 43 1 120 7 58 1 195 1 125 1 309 1 31 1 47 1 35 3 293 1 166 2 155 1 157 4 
273 2 193 1 43 2 236 2 120 25 277 2 122 2 195 5 125 5 161 1 48 2 201 1 293 7 96 2 166 2 19 1 136 1 58 2 305 1 148 1 29 1 309 1 31 5 224 1 35 13 155 2 157 12 318 1 40 1 
120 1 166 1 157 1 
273 1 120 1 35 1 
193 1 236 2 43 1 120 6 58 1 122 1 195 2 125 1 29 1 148 1 149 1 31 1 201 1 35 3 293 3 294 1 155 1 157 3 
273 1 193 1 236 2 43 2 120 12 122 1 195 1 125 2 200 1 47 1 201 1 129 1 293 2 164 1 166 1 300 1 58 2 29 1 148 1 217 1 31 2 35 6 230 1 155 2 157 6 
120 6 277 1 122 1 195 1 125 1 31 1 35 3 48 1 293 2 96 1 157 3 
193 1 236 2 0 1 120 3 277 1 122 1 195 1 148 1 29 1 35 1 48 1 201 1 224 1 293 2 19 1 136 1 157 2 
273 1 193 1 236 2 43 1 120 18 277 2 122 1 195 4 125 3 161 1 200 1 47 1 201 1 48 2 129 1 293 5 96 2 166 2 136 1 58 1 29 1 148 1 309 1 31 4 35 10 224 1 157 8 40 1 
193 2 273 1 236 4 120 15 277 2 122 1 195 4 125 3 161 1 200 1 47 1 201 2 48 2 129 1 293 5 96 2 166 1 136 1 29 2 148 2 149 1 31 3 35 8 224 1 157 7 40 1 
273 1 193 2 236 4 43 2 120 13 122 1 125 2 200 1 47 1 201 2 129 1 164 1 293 1 166 1 300 1 58 2 29 2 148 2 217 1 149 1 31 2 35 6 230 1 155 2 157 7 
273 1 193 2 236 4 43 2 120 11 195 1 125 1 200 1 47 1 201 2 129 1 293 1 164 1 166 1 300 1 58 2 29 2 148 2 217 1 149 1 31 2 35 7 230 1 155 1 157 4 
273 1 193 1 236 2 43 1 120 18 277 2 122 1 195 4 125 3 161 1 200 1 47 1 201 1 48 2 129 1 293 5 96 2 166 2 136 1 58 1 29 1 148 1 309 1 31 4 35 10 224 1 157 8 40 1 
273 1 193 1 236 2 43 2 120 12 122 1 195 1 125 2 200 1 47 1 201 1 129 1 293 2 164 1 166 1 300 1 58 2 29 1 148 1 217 1 31 2 35 6 230 1 155 2 157 6 
193 2 273 1 236 4 43 2 120 12 125 1 200 1 47 1 201 2 129 1 164 1 166 1 300 1 58 2 29 2 148 2 217 1 149 1 31 2 35 7 230 1 155 1 157 5 
193 2 273 1 236 4 43 2 120 12 122 2 195 2 125 1 200 1 47 1 201 2 129 1 202 1 164 1 293 4 166 1 300 1 58 2 29 2 148 2 217 1 31 2 35 7 230 1 155 1 157 5 
120 7 277 3 122 3 195 3 125 1 31 1 224 1 48 3 35 3 293 6 96 1 157 4 136 2 
193 2 273 1 236 4 43 2 120 12 125 1 200 1 47 1 201 2 129 1 202 1 164 1 166 1 300 1 58 2 29 2 148 2 217 1 31 2 35 7 230 1 155 1 157 5 
184 1 266 1 227 1 252 1 131 1 261 1 198 1 
138 1 3 1 261 1 198 1 184 1 312 1 266 1 252 1 227 1 268 1 131 1 270 1 
24 1 1 1 103 4 174 1 143 1 257 1 240 1 61 4 218 4 88 1 68 1 38 1 272 1 
274 1 24 1 1 1 103 2 59 1 240 1 61 2 258 1 218 2 88 2 16 1 229 1 271 1 316 1 
88 1 68 1 151 1 171 1 103 1 240 1 61 1 169 1 253 1 218 1 
24 1 1 1 103 2 240 1 61 2 241 1 218 2 88 1 33 1 77 1 272 1 
118 1 24 2 1 3 174 1 103 4 143 1 240 2 61 5 241 1 258 1 196 1 218 5 68 1 88 2 38 1 272 1 
24 2 1 2 103 2 59 1 240 2 61 2 241 1 218 2 68 1 88 3 16 1 50 1 229 1 271 1 38 1 316 1 272 1 
88 1 68 1 24 1 1 1 174 1 103 1 240 1 291 1 61 1 38 1 218 1 
24 1 1 1 103 1 240 1 27 1 61 1 211 1 307 1 218 1 88 1 68 1 16 1 266 1 252 2 227 2 131 1 315 1 190 1 
1 3 240 1 9 1 88 1 16 2 252 2 131 2 24 2 103 1 61 1 27 1 62 2 211 1 28 1 258 1 307 1 108 1 218 1 111 1 266 1 227 2 231 1 315 2 190 1 
1 3 240 1 9 1 88 1 16 2 252 2 131 2 24 2 304 1 103 1 61 1 27 1 62 2 28 1 258 1 307 1 108 1 218 1 111 1 266 1 227 2 231 1 315 2 190 1 
24 1 1 4 103 1 82 1 240 1 280 1 61 1 258 1 108 1 218 1 111 1 11 1 13 1 88 1 16 1 15 1 17 1 
24 1 1 4 103 3 257 1 82 1 240 1 280 2 61 3 7 1 258 1 108 1 218 3 150 1 199 1 111 1 11 2 68 1 88 1 13 1 16 1 251 1 130 1 
88 1 162 1 103 1 240 1 61 1 218 1 
101 1 118 1 24 2 1 3 103 6 240 2 61 7 241 1 242 1 196 1 218 7 162 1 68 2 88 3 311 1 16 1 114 1 229 1 77 1 316 1 272 1 
236 4 1 1 240 1 161 1 85 1 245 1 88 1 89 1 16 1 252 2 96 2 24 1 103 1 27 1 29 2 32 1 31 3 35 7 266 3 272 1 190 1 40 1 193 2 120 13 277 2 122 1 123 1 195 4 125 3 201 2 48 2 293 5 131 1 136 1 62 1 61 1 211 1 213 2 307 1 63 2 148 2 218 1 224 1 226 1 227 2 231 1 315 1 157 6 
275 1 1 2 80 1 82 1 280 3 7 1 281 2 282 1 284 1 199 2 11 3 13 1 251 1 130 1 298 1 301 2 172 1 103 1 105 1 142 1 61 1 216 1 218 1 150 1 68 1 269 1 317 2 78 2 
54 1 24 1 1 2 103 1 240 1 61 1 242 1 218 1 13 1 162 1 88 2 69 1 16 1 
24 1 1 1 103 1 304 1 240 1 27 1 61 1 307 1 218 1 88 1 68 1 16 1 266 1 252 2 227 2 131 1 315 1 190 1 
101 1 24 1 1 1 103 1 240 1 61 1 258 1 242 1 218 1 88 2 16 1 229 1 316 1 
235 1 278 1 266 1 144 1 165 1 
11 1 235 1 172 1 278 1 91 1 37 1 313 1 279 1 144 1 165 1 280 1 110 1 
278 1 144 1 286 1 30 1 252 1 227 1 165 1 131 1 168 1 
278 1 91 1 37 1 
56 1 42 1 276 1 285 1 219 1 20 1 39 1 233 1 
139 1 79 1 42 1 276 1 219 2 285 3 290 1 94 2 20 1 233 1 39 3 
56 1 42 1 209 1 276 1 104 1 219 1 285 2 94 1 20 1 233 1 39 2 189 1 
56 1 159 1 42 1 276 1 145 1 219 1 285 2 20 1 76 1 39 2 233 1 
46 1 79 2 14 1 86 2 
56 1 42 1 20 1 65 1 39 1 285 1 
56 1 42 1 276 1 181 1 219 1 285 2 94 1 20 1 39 2 233 1 
106 1 
56 1 42 1 276 1 285 1 219 1 20 1 39 1 233 1 
276 1 291 1 233 1 
42 1 276 1 285 1 219 1 20 1 39 1 233 1 
71 1 308 1 39 1 
56 1 159 1 42 1 276 1 145 1 219 1 285 2 45 1 20 1 39 2 233 1 
42 1 276 1 175 1 219 1 285 2 94 1 20 1 39 2 233 1 
79 1 139 1 56 1 42 1 95 1 20 1 169 1 253 1 182 1 39 1 285 1 
56 1 42 1 20 1 233 1 39 1 285 1 
79 1 56 1 42 1 276 1 20 1 233 1 39 1 285 1 
56 1 42 2 64 1 285 2 20 2 232 1 233 1 39 2 188 1 
139 1 79 1 56 1 42 1 276 1 181 1 219 1 285 3 290 1 94 2 203 1 20 1 233 1 39 3 
56 1 171 1 42 1 276 1 182 1 219 1 285 2 51 1 94 1 132 1 20 1 253 2 169 1 233 1 39 2 
139 1 79 1 56 1 42 1 276 1 175 1 219 1 285 3 49 1 290 1 94 2 20 1 233 1 39 3 
56 1 159 1 42 1 276 1 219 1 285 2 20 1 39 2 233 1 
79 1 139 1 290 1 219 1 
233 1 

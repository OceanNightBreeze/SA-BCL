#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 88 (5,130) (5,130) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 88 (5,130) (5,130) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 88 (5,130) (5,130) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 88 (5,130) (5,130) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 88 (49,192) (49,192) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (57,108,114,298) (57,108,114,298) (57,108,114,298) 153 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (57,108,114,298) (57,108,114,298) (57,108,114,298) 153 239 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (57,108,114,298) (57,108,114,298) (57,108,114,298) 153 239 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 122 6 181 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 122 6 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,186,262) (119,186,262) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (119,186,262) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (119,186,262) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (96,237) (96,237) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (119,186,262) (119,186,262) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 261 101 33 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 261 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 261 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 261 101 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 261 101 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 226 302 30 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 122 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 69 344 (27,232) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 69 344 (42,250) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 309 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 296 1 298 1 130 1 300 1 5 1 251 1 88 1 108 1 
114 1 296 1 298 1 130 1 300 1 5 1 251 1 88 1 108 1 
114 1 296 1 298 1 130 1 300 1 5 1 251 1 88 1 108 1 
114 1 296 1 298 1 130 1 300 1 5 1 251 1 88 1 108 1 
298 4 57 3 300 1 323 1 325 1 99 1 46 1 215 1 288 1 114 1 244 2 308 2 103 1 187 1 275 3 251 4 108 1 90 1 
114 1 296 1 298 1 171 1 49 1 103 1 300 1 192 1 251 1 88 1 108 1 
114 2 296 1 298 2 300 1 153 1 251 1 108 2 
114 2 296 1 298 3 57 1 230 1 300 1 153 1 251 2 108 2 239 1 
114 2 296 1 298 3 57 1 230 1 300 1 153 1 251 2 108 2 239 1 
309 1 
166 1 
141 1 218 2 110 2 334 2 60 2 238 2 71 1 47 2 
297 2 203 2 259 2 110 2 2 1 263 2 151 1 211 1 112 1 47 2 218 2 306 2 272 1 220 1 120 1 310 1 121 1 87 1 124 1 320 1 172 1 231 1 232 1 60 3 238 3 28 1 329 1 138 1 330 1 141 1 31 1 185 1 67 1 334 2 38 1 344 1 71 1 
141 1 218 1 110 1 334 1 164 1 18 1 60 1 238 1 81 1 47 1 
175 1 111 1 60 1 238 1 47 1 137 1 82 1 219 1 158 1 163 1 106 1 18 1 89 1 39 1 
110 1 175 2 111 1 60 1 238 1 47 1 137 1 82 1 218 1 158 1 334 1 163 1 106 2 18 1 39 1 
175 1 106 1 79 1 317 1 254 1 
13 1 163 1 175 2 26 1 106 2 79 1 39 1 317 1 
175 1 106 1 317 1 
110 1 175 1 60 1 79 1 134 1 81 1 238 1 47 1 141 1 218 1 334 1 164 1 106 1 18 1 
163 1 
322 1 163 1 175 2 26 1 106 2 79 1 39 1 317 1 
149 3 1 1 110 1 3 2 303 2 79 2 81 1 47 1 156 1 218 1 273 1 163 2 164 1 224 1 312 1 18 1 225 1 317 2 173 1 175 5 26 1 133 1 60 1 134 1 238 1 287 2 240 2 141 1 331 2 241 1 65 2 334 1 338 1 106 5 37 3 196 1 39 2 
309 1 
218 1 110 1 334 1 60 2 154 1 326 1 238 2 71 2 47 2 
318 1 295 1 91 1 
320 1 259 1 232 1 263 1 60 1 211 1 112 1 238 1 28 1 330 1 306 1 120 1 223 1 87 1 344 1 71 1 
318 1 320 1 258 1 259 1 232 1 263 1 60 2 211 1 112 1 28 1 238 2 330 1 47 1 218 1 306 1 334 1 120 1 87 1 19 1 344 1 
258 2 110 1 43 1 60 5 154 1 238 5 47 5 218 4 116 1 334 4 161 1 19 1 89 1 71 1 
218 2 131 1 334 2 164 1 18 1 60 2 238 2 47 2 
218 3 258 1 110 1 334 3 60 3 238 3 71 1 47 3 
218 1 334 1 164 1 18 1 60 1 238 1 47 1 
218 1 110 1 334 1 18 1 60 1 154 1 326 1 238 1 47 1 
297 2 203 1 258 1 259 1 110 2 2 1 263 1 111 1 268 1 211 1 154 1 112 1 47 3 82 1 218 3 306 1 272 1 220 1 158 1 120 1 121 1 87 1 18 1 124 1 19 1 320 1 231 1 232 1 175 1 60 4 28 1 238 4 329 1 138 1 330 1 137 1 141 1 184 1 67 1 334 3 106 1 38 1 344 1 71 1 
218 1 258 1 116 1 334 1 60 2 89 1 238 2 71 1 47 2 
72 1 258 2 110 1 175 1 111 1 60 3 154 1 238 3 47 3 137 1 82 1 218 3 184 1 158 1 334 3 163 1 106 1 18 1 19 1 
318 1 258 1 110 1 60 2 154 1 238 2 47 2 218 2 334 2 295 1 
320 1 259 1 232 1 263 1 60 1 211 1 112 1 238 1 28 1 330 1 306 1 120 1 87 1 344 1 71 1 
259 1 24 1 263 1 60 1 211 1 112 1 238 1 28 1 330 1 306 1 120 1 87 1 250 1 344 1 71 1 
318 1 199 1 297 2 281 1 203 2 173 1 2 1 231 2 4 1 138 1 329 1 113 1 143 1 220 1 67 1 124 1 252 1 295 1 91 1 
82 1 218 1 131 1 334 1 18 1 60 1 238 1 47 1 
293 1 147 1 
293 1 147 1 
127 1 307 1 293 1 147 1 
127 1 307 1 293 1 147 1 
127 1 307 1 
247 1 293 1 147 1 
247 1 293 1 147 1 
290 1 293 1 147 1 
227 1 127 1 307 1 210 1 293 2 147 2 
247 1 293 1 147 1 
293 1 147 1 168 1 
293 1 147 1 168 1 
293 1 147 1 168 1 
260 1 321 1 175 1 122 1 6 1 106 1 293 1 181 1 147 1 
260 1 321 1 122 1 6 1 293 1 147 1 
103 1 323 1 215 1 
171 1 103 1 215 1 
171 1 103 3 323 2 266 1 44 1 277 1 
282 1 171 1 103 2 323 1 266 1 44 1 
171 1 103 2 323 1 266 2 44 1 
149 2 1 1 110 1 3 1 303 1 79 4 212 1 81 1 47 1 156 1 218 1 271 1 163 1 221 1 164 1 18 1 166 1 278 1 317 1 319 2 95 1 58 1 98 1 175 5 26 1 177 1 324 1 60 1 134 1 238 1 287 1 141 1 332 1 334 1 106 5 37 1 39 1 
202 1 110 1 208 1 79 2 81 1 11 1 47 1 218 1 163 1 164 1 18 1 317 1 175 2 60 1 134 1 238 1 141 1 334 1 106 2 254 1 39 1 
149 2 1 1 110 1 3 1 209 1 303 1 79 2 81 1 212 1 47 1 113 1 218 1 271 1 163 2 221 1 164 1 18 1 166 3 319 1 173 1 95 1 58 1 175 3 98 1 324 1 177 2 60 1 134 1 238 1 287 1 141 1 332 2 334 1 106 3 338 1 37 3 39 1 
149 4 1 2 110 1 3 1 301 1 209 2 303 1 79 2 81 1 212 1 47 1 113 2 218 1 271 1 163 3 221 1 164 1 18 1 166 6 319 1 173 2 95 1 58 2 174 1 175 3 98 2 324 2 177 4 60 1 134 1 238 1 287 1 141 1 332 4 334 1 106 3 338 1 37 5 70 1 39 1 
309 1 
211 1 292 1 
207 1 
120 1 211 1 330 1 
211 1 136 1 
120 1 211 1 
206 2 120 1 211 3 36 1 328 1 330 1 
148 1 203 6 1 1 173 1 231 3 152 1 240 2 143 4 64 1 65 2 15 1 310 3 224 1 16 1 195 1 343 2 252 2 
148 1 203 6 1 1 173 1 231 3 152 1 240 2 143 4 64 1 65 2 15 1 310 3 224 1 16 1 195 1 343 2 252 2 
148 1 203 6 1 1 173 1 231 3 176 1 152 1 240 2 143 4 64 1 65 2 15 1 310 3 224 1 16 1 195 1 343 2 252 2 
109 1 297 2 203 6 302 1 220 1 15 1 310 3 16 1 226 1 55 1 229 1 231 3 138 1 329 1 240 1 64 1 143 2 65 1 67 1 35 1 195 2 252 1 343 1 294 1 
109 1 148 1 297 4 203 8 1 1 173 1 231 4 152 1 213 1 240 2 138 2 329 2 143 4 64 1 65 2 220 2 15 1 67 2 310 4 224 1 195 1 342 1 343 1 252 3 
298 1 296 1 259 1 300 1 262 1 263 1 264 1 183 1 114 1 306 1 186 1 251 1 108 1 
298 2 296 1 259 1 57 1 262 1 263 1 183 1 114 1 306 1 311 1 123 1 190 1 251 2 108 1 
296 1 298 1 306 1 259 1 57 1 119 1 263 1 311 1 190 1 251 1 183 1 
298 1 296 2 259 1 96 1 263 1 237 1 183 2 114 1 306 1 87 1 123 1 251 1 52 1 108 1 
298 1 296 1 259 1 300 1 262 1 263 1 183 1 114 1 306 1 186 1 311 1 251 1 108 1 
29 1 
149 2 74 2 259 2 3 1 263 2 156 1 157 1 270 1 82 1 158 1 163 2 160 1 86 1 87 2 18 1 166 2 89 1 20 4 170 1 175 5 26 3 178 2 182 2 287 1 28 1 289 2 106 5 194 2 37 2 39 1 299 2 111 1 209 2 303 1 211 1 112 1 47 1 306 2 48 1 219 1 120 1 221 1 51 1 53 1 315 1 317 6 228 1 60 1 236 2 238 1 137 1 140 1 246 1 337 1 341 1 
111 1 47 1 82 1 48 1 219 1 158 1 86 1 18 1 89 1 317 2 20 2 228 1 170 1 322 1 175 3 26 1 60 1 238 1 137 1 289 1 106 3 341 1 
111 1 47 1 82 1 48 1 219 1 158 1 86 1 163 1 18 1 89 1 317 1 20 3 228 1 170 1 322 1 175 3 26 1 60 1 236 1 238 1 137 1 106 3 341 1 39 1 
111 1 47 1 82 1 48 1 219 1 158 1 86 1 163 1 18 1 89 1 317 2 20 3 228 1 170 1 322 1 175 3 26 1 60 1 182 1 236 1 238 1 137 1 289 1 106 3 341 1 39 1 
261 1 111 1 47 1 82 1 48 1 219 1 158 1 86 1 18 1 89 1 317 3 20 2 228 1 170 1 322 1 175 3 26 1 60 1 182 2 238 1 137 1 101 1 289 2 33 1 106 3 341 1 
149 1 74 2 3 1 156 1 157 1 82 1 270 1 158 1 86 1 163 1 18 1 166 2 89 1 20 4 170 1 175 4 26 2 178 2 182 2 287 1 289 2 106 4 37 1 194 2 39 1 299 2 111 1 209 2 303 1 47 1 48 1 219 1 317 4 228 1 60 1 236 2 238 1 137 1 337 1 341 1 
20 2 228 1 170 1 261 1 175 2 111 1 60 1 238 1 137 1 47 1 82 1 48 1 158 1 219 1 86 1 106 2 18 1 341 1 89 1 
20 2 228 1 170 1 261 1 175 2 111 1 60 1 238 1 137 1 47 1 82 1 48 1 158 1 219 1 86 1 106 2 18 1 341 1 89 1 
149 1 74 2 204 1 3 1 265 1 111 1 303 1 47 1 156 1 157 1 82 1 48 1 115 1 219 1 158 1 163 1 86 1 18 1 166 2 89 1 317 4 20 4 228 1 170 1 175 4 26 2 233 1 60 1 236 2 182 2 238 1 287 1 137 1 142 2 289 2 105 2 106 4 341 1 194 2 37 1 39 1 
20 3 228 1 170 1 261 1 175 2 111 1 60 1 236 1 182 1 238 1 137 1 47 1 82 1 48 1 289 1 101 1 158 1 219 1 86 1 106 2 18 1 341 1 89 1 317 1 
20 3 228 1 170 1 261 1 175 2 111 1 60 1 236 1 182 1 238 1 137 1 47 1 82 1 48 1 289 1 101 1 158 1 219 1 86 1 106 2 18 1 341 1 89 1 317 1 
149 1 74 1 3 1 111 1 303 1 156 1 47 1 157 1 270 1 82 1 48 1 219 1 158 1 86 1 18 1 166 1 89 1 20 2 228 1 170 1 175 2 233 1 60 1 287 1 238 1 137 1 142 1 106 2 341 1 194 1 37 1 
297 2 309 1 220 1 2 1 67 1 4 1 124 1 329 1 138 1 
297 4 203 10 1 2 2 2 9 1 220 2 121 1 310 7 18 1 165 1 124 1 226 2 125 1 55 2 126 1 91 5 318 5 22 1 231 3 285 1 98 2 324 2 329 2 138 2 143 1 185 1 67 2 339 1 343 1 71 1 295 1 
297 2 203 2 258 1 2 1 8 1 47 1 218 1 220 1 121 1 310 1 18 1 124 1 19 1 126 1 22 1 231 1 60 1 180 1 238 1 138 1 329 1 333 1 185 1 334 1 67 1 71 1 295 1 
259 1 258 1 1 1 2 2 263 1 84 1 87 1 19 1 91 2 98 1 28 1 104 1 38 1 295 2 297 4 203 5 40 1 211 1 112 1 47 1 306 1 218 1 220 2 120 1 121 1 310 3 124 2 313 1 126 1 318 2 320 1 129 1 231 2 232 1 324 1 60 2 238 2 329 2 138 2 330 1 143 3 67 2 334 1 343 2 252 1 344 1 
259 6 258 1 2 2 263 7 4 1 264 1 269 1 162 1 87 2 17 1 169 1 28 3 31 1 185 1 189 1 297 4 203 2 200 1 211 4 112 4 47 1 306 7 218 1 220 2 120 3 121 1 310 1 311 1 124 2 53 1 56 1 231 1 59 1 60 1 238 1 138 2 329 2 330 1 139 1 246 1 67 2 334 1 68 1 145 1 
297 2 203 3 1 1 110 1 2 1 154 1 80 1 47 1 113 1 218 1 220 1 310 1 124 1 126 1 91 1 318 1 173 1 231 2 98 1 324 1 60 1 238 1 329 1 138 1 143 1 67 1 334 1 252 1 295 1 
318 1 297 2 255 1 203 2 1 1 2 1 98 1 4 1 138 1 329 1 143 1 220 1 67 1 310 2 124 1 343 1 295 1 91 1 
318 1 199 1 297 2 203 2 173 1 2 1 231 2 4 1 138 1 329 1 113 1 143 1 220 1 67 1 124 1 252 1 295 1 91 1 
297 2 203 4 1 1 2 1 4 1 113 1 220 1 310 2 124 1 91 2 318 2 173 1 231 2 98 1 324 1 329 1 138 1 143 2 67 1 343 1 252 1 295 2 
318 1 297 2 255 1 203 2 1 1 56 1 2 1 98 1 138 1 329 1 143 1 220 1 67 1 310 2 124 1 343 1 295 1 91 1 
318 1 199 1 297 2 203 2 56 1 173 1 2 1 231 2 138 1 329 1 113 1 143 1 220 1 67 1 124 1 252 1 295 1 91 1 
318 1 297 2 203 2 1 1 56 1 2 1 98 1 324 1 138 1 329 1 143 1 220 1 67 1 310 2 124 1 343 1 295 1 91 1 
318 1 297 2 203 2 1 1 2 1 98 1 324 1 138 1 329 1 143 1 220 1 67 1 310 2 124 1 343 1 295 1 91 1 
297 2 203 2 259 1 2 1 263 1 211 1 112 1 306 1 220 1 120 1 310 1 121 1 87 1 124 1 320 1 232 1 231 1 60 1 28 1 238 1 330 1 138 1 329 1 185 1 67 1 38 1 344 1 71 1 
297 2 203 2 259 1 2 1 263 1 211 1 112 1 306 1 220 1 120 1 310 1 121 1 87 1 124 1 24 1 231 1 60 1 28 1 238 1 330 1 138 1 329 1 185 1 67 1 250 1 146 1 344 1 71 1 
318 1 297 2 203 2 1 1 2 1 98 1 324 1 138 1 329 1 143 1 220 1 67 1 310 2 124 1 343 1 126 1 295 1 91 1 
297 2 203 2 1 1 40 1 259 1 2 1 263 1 264 1 211 1 112 1 306 1 220 1 120 1 310 2 124 1 91 1 318 1 320 1 232 1 98 1 324 1 60 1 28 1 238 1 330 1 138 1 329 1 143 1 67 1 343 1 38 1 344 1 295 1 
297 2 203 2 1 1 110 1 2 1 154 1 47 1 218 1 220 1 310 2 124 1 126 1 91 1 318 1 98 1 324 1 60 1 238 1 329 1 138 1 143 1 67 1 334 1 343 1 198 1 295 1 
297 4 203 8 1 1 77 2 150 1 45 1 213 1 113 1 305 1 85 1 14 2 220 2 310 4 279 1 92 1 284 1 173 1 231 4 98 1 324 1 329 2 138 2 143 1 67 2 343 1 
297 4 203 8 1 1 77 2 150 1 45 1 213 1 113 1 305 1 85 1 14 2 220 2 310 4 279 1 92 1 284 1 173 1 231 4 98 1 324 1 329 2 138 2 143 2 67 2 252 1 343 1 
297 2 148 2 203 18 1 3 77 2 150 1 152 2 45 1 213 1 113 1 305 1 85 1 14 1 220 1 310 8 224 2 279 1 173 3 231 10 98 1 324 1 329 1 138 1 240 4 143 6 65 4 67 1 343 1 252 5 
297 4 203 12 1 2 77 2 150 1 45 2 213 1 113 2 305 1 85 1 14 1 220 2 310 6 279 1 280 1 284 1 173 2 231 6 98 2 324 2 329 2 138 2 143 4 67 2 252 2 343 2 
297 2 203 8 1 1 77 2 150 1 45 1 213 1 113 1 305 2 85 1 14 2 220 1 310 4 279 1 173 1 231 4 98 1 324 1 329 1 138 1 67 1 
0 1 97 1 25 1 60 1 238 1 47 1 
171 1 259 2 94 1 41 1 263 2 323 1 264 1 112 1 28 1 214 1 215 1 62 1 61 1 306 2 66 1 103 2 311 1 277 1 197 1 
171 1 259 1 94 1 41 1 263 1 323 1 112 1 214 1 28 1 215 1 216 1 306 1 66 1 103 2 311 1 277 1 197 1 
306 1 259 1 32 1 94 1 263 1 87 1 316 1 62 1 
171 1 259 1 94 1 41 1 263 1 323 1 112 1 214 1 28 1 215 1 62 1 61 1 306 1 66 1 103 2 311 1 277 1 197 1 
135 1 
309 1 
149 1 299 1 3 1 209 1 303 1 156 1 163 1 166 1 317 1 175 1 26 1 178 1 287 1 337 1 106 1 37 1 39 1 
149 3 1 1 259 1 205 1 3 2 263 1 209 3 303 2 211 3 10 1 112 2 155 1 156 2 113 1 306 1 163 3 120 1 221 1 87 1 313 1 166 6 54 1 317 1 93 1 173 1 98 1 175 1 26 1 324 1 177 3 27 1 328 1 287 2 28 1 330 1 332 3 188 1 106 1 37 4 292 2 
149 1 3 1 302 1 177 1 303 1 287 1 156 1 30 1 332 1 226 1 37 1 166 1 55 1 
149 2 1 2 110 1 3 1 303 1 81 1 156 1 47 1 218 1 273 1 164 1 224 1 18 1 21 1 173 1 175 1 60 1 134 1 238 1 287 1 240 1 141 1 331 2 243 1 65 1 334 1 106 1 37 2 
149 1 3 1 303 1 287 1 156 1 241 1 163 1 312 1 37 1 39 1 
149 2 1 1 173 1 98 1 324 1 177 2 209 2 113 1 332 2 163 2 37 2 166 4 
163 1 175 1 26 1 106 1 39 1 317 1 
73 1 149 2 259 4 3 2 263 4 211 1 303 2 112 1 156 1 217 1 306 4 120 1 160 2 221 2 51 1 87 2 314 1 315 1 53 1 167 2 317 4 175 3 26 2 28 1 287 2 246 1 338 1 106 3 37 2 
297 2 203 1 259 1 110 2 2 1 263 1 211 1 112 1 47 2 306 1 218 2 272 1 220 1 120 1 121 1 87 1 124 1 320 1 231 1 232 1 60 3 238 3 28 1 329 1 138 1 330 1 141 1 67 1 334 2 38 1 344 1 71 1 
149 1 3 1 303 1 287 1 156 1 332 1 163 1 160 1 221 1 37 1 166 1 39 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
260 1 122 1 
293 1 147 1 
109 2 297 6 256 1 203 10 1 2 78 1 302 1 213 1 220 3 274 1 310 7 226 1 55 1 231 3 98 2 324 2 329 3 138 3 30 1 143 2 67 3 34 1 252 1 343 1 
109 2 297 8 256 1 203 10 1 2 78 1 302 1 213 1 220 4 274 1 222 1 310 7 226 1 55 1 231 3 98 2 324 2 329 4 138 4 30 1 143 3 67 4 34 1 343 2 252 1 
297 4 256 1 203 12 1 2 78 1 302 1 213 1 113 2 220 2 274 1 222 1 310 6 226 1 55 1 173 2 231 6 98 2 324 2 329 2 138 2 30 1 143 2 67 2 34 1 343 1 252 1 
109 1 148 1 297 6 256 1 203 16 1 3 78 1 302 1 152 1 213 1 113 1 220 3 274 1 222 1 310 9 224 1 226 1 55 1 173 2 231 7 98 2 324 2 240 2 329 3 138 3 30 1 143 5 65 2 67 3 34 1 252 2 343 3 
109 2 297 6 256 1 203 10 1 2 78 1 302 1 213 1 220 3 274 1 310 7 226 1 55 1 231 3 98 2 324 2 329 3 138 3 30 1 143 2 67 3 34 1 252 1 343 1 
297 2 256 1 203 12 1 2 78 1 302 1 213 1 113 2 220 1 274 1 310 6 226 1 55 1 173 2 231 6 98 2 324 2 329 1 138 1 30 1 143 1 67 1 34 1 343 1 
109 1 297 6 256 1 203 11 1 2 78 1 302 1 213 1 113 1 220 3 274 1 222 1 310 7 226 1 55 1 173 1 231 4 98 2 324 2 329 3 138 3 30 1 143 2 67 3 34 1 343 1 252 1 
109 2 297 8 256 1 203 16 1 3 78 1 302 1 213 1 113 2 220 4 274 1 310 9 226 1 55 1 284 1 173 2 231 7 98 3 324 3 329 4 138 4 30 1 143 6 67 4 34 1 343 3 252 3 
148 2 203 7 1 1 173 1 231 4 152 1 240 2 143 4 65 2 310 3 224 1 252 2 343 2 
109 2 148 1 297 8 256 1 203 17 1 3 78 1 302 1 152 1 213 1 113 1 220 4 274 1 310 9 224 1 226 1 55 1 284 1 173 2 231 8 98 2 324 2 240 2 329 4 138 4 30 1 143 5 65 2 67 4 34 1 343 1 252 4 
109 1 297 4 148 1 203 9 1 1 173 1 231 5 152 1 138 2 329 2 240 2 143 4 65 2 220 2 67 2 310 4 224 1 343 2 252 2 
309 1 
297 2 203 4 1 1 173 1 231 2 98 1 324 1 138 1 329 1 113 1 143 2 220 1 67 1 222 1 310 2 252 1 343 1 
203 2 231 1 310 1 302 1 226 1 55 1 
109 1 148 1 297 2 203 19 1 3 152 1 113 2 220 1 310 9 224 1 165 1 226 2 125 1 55 2 173 3 231 10 98 2 324 2 240 3 138 1 329 1 143 6 65 3 67 1 339 1 252 4 343 2 
203 1 231 1 55 1 
203 1 310 1 226 1 
297 2 203 6 1 1 173 1 231 3 98 1 324 1 329 1 138 1 113 1 143 3 220 1 67 1 222 1 310 3 313 1 343 1 252 2 
297 2 256 1 203 12 1 2 78 1 302 1 213 1 113 2 220 1 274 1 310 6 226 1 55 1 173 2 231 6 98 2 324 2 329 1 138 1 30 1 143 2 67 1 34 1 343 1 252 1 
203 4 1 1 173 1 231 2 240 1 143 1 65 1 310 2 224 1 252 1 
109 1 148 1 297 2 203 3 231 2 152 1 240 1 138 1 329 1 143 2 65 1 220 1 67 1 310 1 343 1 252 1 294 1 
203 5 1 1 173 1 231 3 240 2 143 2 65 2 273 1 310 2 224 1 252 2 
297 2 203 2 1 1 98 1 213 1 138 1 329 1 143 1 220 1 67 1 310 2 343 1 
297 2 203 4 1 1 173 1 231 2 98 1 324 1 213 1 138 1 329 1 113 1 143 2 220 1 67 1 310 2 252 1 343 1 
109 1 297 6 203 3 284 1 231 2 213 1 138 3 329 3 240 1 143 2 65 1 220 3 67 3 310 1 252 1 343 1 294 1 
109 1 297 8 148 1 203 14 1 1 302 1 152 1 213 1 220 4 273 1 222 1 310 6 224 1 226 1 55 1 229 1 173 1 284 1 231 8 329 4 138 4 240 3 143 6 65 3 67 4 343 3 252 3 294 1 
116 1 118 1 60 1 238 1 89 1 71 1 47 1 
257 1 7 1 60 1 238 1 47 1 116 1 117 1 144 1 118 1 340 1 89 1 71 1 
306 1 259 1 309 1 263 1 87 1 
258 1 259 1 232 1 263 1 60 2 211 1 112 1 238 2 28 1 330 1 47 1 218 1 306 1 334 1 120 1 87 1 344 1 71 1 
258 1 259 1 232 1 263 1 60 1 211 3 112 1 136 1 238 1 28 1 330 2 47 1 218 1 306 1 334 1 120 2 69 1 344 1 167 1 
258 1 259 1 263 1 60 1 211 3 112 1 136 1 238 1 28 1 330 2 47 1 218 1 306 1 334 1 120 2 69 1 250 1 344 1 167 1 
259 1 110 1 42 1 263 1 211 1 81 1 47 1 306 1 218 1 163 1 164 1 18 1 167 1 175 1 60 1 134 1 238 1 141 1 334 1 106 1 292 1 39 1 
259 1 110 1 263 1 211 1 81 1 47 1 306 1 218 1 163 1 164 1 18 1 167 1 175 1 27 1 60 1 134 1 238 1 141 1 334 1 106 1 292 1 39 1 
169 1 306 1 259 1 263 1 112 1 28 1 
169 1 200 1 259 5 128 1 263 6 264 1 269 1 211 3 112 3 328 1 28 2 330 1 139 1 306 6 189 1 120 2 311 1 145 1 87 2 17 1 
148 1 297 4 203 5 1 1 258 1 259 1 40 1 2 2 263 1 264 1 152 1 211 1 112 1 47 1 218 1 306 1 84 1 220 2 120 1 310 2 224 1 124 2 126 1 320 1 173 1 231 3 232 1 60 2 28 1 238 2 240 2 330 1 138 2 329 2 143 2 65 2 334 1 67 2 248 1 252 2 38 1 344 1 71 2 
73 1 149 3 259 1 1 1 3 2 263 1 79 1 155 1 81 1 156 2 273 1 163 2 87 1 164 1 18 1 173 1 175 2 26 1 27 1 287 2 188 1 106 2 37 3 292 1 39 2 110 1 211 1 303 2 47 1 306 1 218 1 312 1 224 1 54 1 317 1 60 1 134 1 238 1 240 2 141 1 241 1 331 2 65 2 334 1 
169 1 259 2 93 1 206 1 263 2 264 1 211 2 112 2 328 1 28 1 330 1 306 2 120 1 
201 1 259 4 263 4 264 1 211 1 112 1 28 1 242 1 306 4 246 1 120 1 87 1 53 1 
259 2 263 2 59 1 211 1 112 2 28 1 330 1 306 2 162 1 120 1 145 1 249 1 17 1 167 1 
306 1 171 1 259 1 41 1 103 1 263 1 87 1 112 1 28 1 215 1 
259 2 132 1 263 2 264 1 269 1 211 1 112 1 28 1 306 2 120 1 311 1 
259 4 263 5 264 1 269 1 211 3 112 2 28 2 139 1 242 1 306 5 246 1 189 1 120 2 87 1 53 1 167 1 
259 4 263 5 264 1 269 1 211 3 112 2 28 2 139 1 242 1 306 5 246 1 50 1 120 2 87 1 53 1 167 1 
258 1 259 1 263 1 60 2 211 1 112 1 238 2 28 1 330 1 47 1 218 1 306 1 334 1 120 1 87 1 250 1 344 1 71 1 
306 1 128 1 259 1 120 1 263 1 145 1 17 1 211 1 112 2 28 1 328 1 330 1 167 1 
100 1 83 1 276 1 107 1 71 1 
76 1 175 2 111 1 79 1 137 1 100 1 82 1 83 2 12 1 184 1 158 1 336 1 163 1 106 2 18 1 276 2 107 2 71 1 39 1 
0 1 100 1 83 1 97 1 25 1 276 1 
100 1 12 1 336 1 
309 1 
114 1 298 1 275 1 99 1 251 1 108 1 46 1 
296 1 191 1 251 1 
298 1 23 1 283 1 300 1 99 1 46 1 114 1 63 1 251 1 108 1 
114 1 298 2 57 1 308 1 275 1 99 1 251 2 108 1 46 1 
114 1 298 1 244 1 103 1 300 1 323 1 275 1 251 1 108 1 215 1 288 1 
114 1 298 1 300 1 275 1 99 1 251 1 108 1 
114 1 298 1 300 1 99 2 251 1 108 1 46 1 
114 2 304 1 298 2 300 1 275 1 286 1 99 1 251 2 327 1 108 2 
114 1 298 3 244 1 57 2 102 1 300 1 275 2 325 1 99 1 235 1 251 3 108 1 46 1 
298 2 171 1 57 1 300 1 323 1 99 1 46 1 215 1 114 1 103 2 335 1 275 1 251 2 277 1 108 1 
298 4 57 2 300 1 325 1 99 1 46 1 114 2 244 1 308 1 275 2 251 4 108 2 90 1 
114 1 298 1 300 1 275 1 99 1 251 1 108 1 46 1 
298 3 23 2 283 1 57 2 325 1 99 2 46 2 63 1 114 1 244 1 275 2 251 3 108 1 
114 1 298 2 245 1 75 1 57 1 230 1 300 1 275 1 99 1 251 2 108 1 46 1 
298 1 23 1 283 1 300 1 99 1 46 1 114 1 251 1 193 1 108 1 
291 2 275 2 234 1 253 1 
114 1 298 1 159 1 300 1 251 1 108 1 
114 1 298 2 57 1 102 1 300 1 275 1 99 1 251 2 108 1 46 1 
267 1 
114 1 298 1 300 1 275 1 99 1 251 1 108 1 46 1 
298 3 57 1 300 1 179 1 99 1 46 1 114 1 102 1 275 1 251 3 108 1 
23 1 244 1 275 1 325 1 
275 1 99 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 130 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (137,141,162) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (137,141,162) 143 49 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (137,141,162) 143 12 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 156 (60,78,239) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 93 218 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 93 218 110 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 20 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 20 206 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) (5,59) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) 103 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (22,158,163,173) (5,59) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (22,158,163,173) (22,158,163,173) (5,59) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 244 53 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (137,141,162) (137,141,162) 157 52 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 130 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 46 195 230 192 3 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 46 195 230 192 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 46 195 230 192 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 46 195 230 192 3 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 46 195 230 192 3 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 130 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 81 (44,184) 209 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 195 230 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 93 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 130 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (27,177) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (96,112) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (137,141,162) 143 223 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
221 1 18 1 141 1 
221 1 18 1 141 1 
100 1 106 1 221 2 131 1 170 1 18 1 141 2 
130 1 
227 1 66 1 137 1 238 1 113 1 162 1 
227 1 105 1 66 1 150 1 90 1 137 1 238 1 
221 1 18 1 141 1 
221 1 18 1 141 1 
221 1 141 1 
116 1 150 1 90 1 238 2 208 1 64 1 227 2 105 1 66 2 57 1 67 1 
61 1 207 1 
117 1 238 1 155 2 17 1 119 1 243 1 64 1 227 1 97 1 229 1 108 1 231 1 146 1 179 1 181 1 112 1 58 1 183 2 74 2 
64 1 130 1 
64 1 227 3 105 3 66 3 150 3 90 1 68 1 238 3 
227 1 105 1 66 1 150 1 238 1 208 1 30 1 
116 1 150 1 90 1 238 1 208 1 105 1 227 1 66 1 67 1 
116 1 227 2 105 2 143 1 66 2 150 2 90 1 45 1 137 1 68 1 238 2 49 1 
64 1 227 2 105 1 66 2 150 1 68 1 238 2 113 1 19 1 
227 1 105 1 143 1 12 1 66 1 150 1 45 1 137 1 68 1 238 1 
61 1 116 1 150 2 90 1 238 2 105 2 227 2 66 2 68 1 134 1 
238 1 17 1 155 1 243 1 64 1 227 1 97 1 229 1 108 1 231 1 146 1 181 1 112 1 183 1 74 1 
238 1 17 1 155 1 208 1 243 1 64 1 227 1 97 1 229 1 57 1 246 1 177 1 231 1 146 1 181 1 183 1 74 1 
61 2 115 1 33 1 79 1 220 1 207 2 92 1 168 2 190 1 122 1 171 1 140 1 225 4 193 1 65 2 98 2 25 1 107 1 129 1 83 1 47 1 29 1 75 1 
227 1 105 1 66 1 150 1 238 1 48 1 208 1 28 1 
150 1 238 2 17 1 155 1 243 1 105 1 227 2 97 1 66 1 229 1 108 1 45 1 231 1 68 1 146 1 181 1 112 1 183 1 74 1 134 1 
21 1 64 1 116 1 227 5 105 4 66 5 150 4 45 1 90 1 68 2 238 5 113 1 123 1 19 1 
227 2 105 2 66 2 150 2 238 2 48 1 208 1 30 1 
24 1 239 1 156 1 60 1 
78 1 24 1 60 1 
24 1 60 1 
24 1 60 1 
239 1 156 1 
239 1 156 1 
239 1 156 1 
24 1 60 1 50 1 
24 1 60 1 50 1 
24 1 60 1 50 1 
24 1 95 1 60 1 
24 1 95 1 60 1 
24 1 95 1 60 1 
24 1 218 1 7 1 93 1 60 1 114 1 
24 1 110 1 218 1 221 1 7 1 93 1 60 1 114 1 141 1 
82 1 234 2 237 2 185 1 224 1 
234 1 104 1 185 1 
82 1 234 1 104 1 
82 1 234 3 37 1 237 1 185 2 224 1 
82 1 54 1 234 2 237 1 185 1 224 1 
221 1 18 1 40 1 141 1 
136 1 221 2 248 1 18 2 132 1 141 2 
100 1 89 1 15 1 221 2 170 1 18 1 20 1 141 2 106 1 127 1 131 1 247 1 
100 1 89 1 206 1 15 1 221 1 170 1 20 1 141 1 106 1 127 1 247 1 131 1 
11 1 
14 1 130 1 181 1 
181 1 118 1 
229 1 181 1 
34 1 14 2 229 1 181 3 232 1 243 1 
229 1 181 1 243 1 
102 1 181 1 
33 5 220 3 4 1 154 1 121 1 122 4 225 14 98 8 43 1 160 2 129 3 72 1 236 2 168 6 210 1 212 1 111 2 182 2 85 1 
115 2 33 4 0 2 62 1 220 2 153 1 154 2 4 3 63 1 122 1 225 18 41 2 193 2 65 4 195 1 98 9 160 1 129 2 47 2 46 3 161 1 236 1 168 9 210 1 211 3 140 2 171 2 212 1 56 1 25 2 182 1 
115 2 33 9 0 1 220 3 154 1 4 4 121 1 122 5 193 2 225 16 65 4 98 9 43 1 160 2 129 3 47 2 236 2 168 7 241 1 171 2 212 1 111 2 182 2 85 1 31 1 
33 5 220 3 154 1 4 1 121 1 122 4 225 14 98 8 43 1 160 2 129 3 236 2 168 6 210 1 212 1 111 2 85 1 182 2 
33 7 220 3 154 1 4 3 121 1 122 4 225 14 98 8 43 1 160 2 129 3 236 2 168 6 210 1 212 1 111 2 85 1 182 2 
158 1 87 1 173 1 163 1 59 1 
158 1 103 1 87 1 173 1 163 1 
158 1 103 1 87 1 173 1 163 1 
158 1 87 1 173 1 163 1 59 1 
22 1 5 1 87 1 173 1 
125 1 
100 1 89 1 15 1 221 1 17 1 155 1 170 1 141 1 244 1 53 1 131 1 183 1 186 1 74 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
221 1 141 1 
100 1 137 1 238 1 221 1 52 1 170 1 141 1 157 1 227 1 66 1 131 1 86 1 113 1 186 1 148 1 162 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
157 1 227 1 66 1 137 1 238 1 221 1 86 1 52 1 113 1 162 1 148 1 141 1 
100 1 137 1 238 1 221 1 52 1 170 1 141 1 157 1 227 1 66 1 131 1 86 1 113 1 186 1 148 1 162 1 
115 2 1 1 150 1 155 8 92 2 190 1 193 2 225 2 227 1 65 4 66 1 98 1 229 2 198 1 68 1 231 2 47 2 74 7 233 1 133 1 202 1 166 1 167 1 204 1 203 1 80 1 238 1 17 2 168 1 169 1 171 2 105 1 144 1 107 2 215 1 146 2 181 3 183 8 58 2 
116 1 227 1 105 1 66 1 150 1 90 1 178 1 238 1 
115 1 33 2 220 1 236 1 92 1 168 2 190 1 121 1 122 2 171 1 225 5 193 1 64 2 65 2 98 3 107 1 160 1 129 1 130 1 111 1 47 1 182 1 85 1 
115 2 61 8 33 2 220 1 4 1 92 2 122 1 6 1 193 2 225 11 41 2 64 1 65 4 98 6 129 2 46 2 47 2 16 1 207 8 168 5 208 1 171 2 211 2 140 1 245 1 215 1 107 1 25 2 57 1 109 1 180 1 249 1 
61 1 115 1 150 1 149 1 155 1 92 1 119 1 193 1 225 2 64 1 227 2 65 2 97 1 66 1 98 1 229 1 45 1 231 1 68 1 70 1 47 1 74 1 166 1 17 1 238 2 168 1 171 1 243 1 242 1 105 1 107 1 215 1 108 1 146 1 181 1 112 1 183 1 249 1 
115 3 61 6 4 1 121 1 122 6 194 1 193 3 64 3 65 6 66 1 129 5 68 1 74 1 17 1 207 6 208 1 140 2 215 1 25 2 147 2 146 2 26 2 85 1 33 7 150 1 36 2 220 5 155 1 92 3 222 2 225 27 41 2 227 3 42 1 97 2 98 14 43 1 229 2 160 2 45 1 231 2 47 3 166 1 236 2 238 3 168 13 171 3 243 2 105 1 107 3 108 2 57 1 111 2 181 2 182 1 112 2 183 1 184 2 249 1 
61 1 115 1 33 1 4 1 207 1 92 1 190 1 171 1 225 2 193 1 65 2 98 2 107 1 25 1 129 1 83 1 47 1 
61 1 115 1 33 1 220 1 207 1 92 1 168 2 190 1 122 1 171 1 140 1 225 2 193 1 65 2 107 1 47 1 29 1 
115 1 61 2 33 2 220 1 92 1 4 1 190 1 122 1 41 1 193 1 225 4 65 2 98 2 129 1 47 1 207 2 168 2 171 1 140 1 25 1 107 1 
61 1 115 1 33 1 80 1 4 1 207 1 92 1 171 1 225 2 193 1 65 2 98 2 107 1 25 1 129 1 83 1 47 1 
61 1 115 1 33 1 80 1 220 1 207 1 92 1 168 2 122 1 171 1 140 1 225 2 193 1 65 2 107 1 47 1 29 1 
115 1 61 2 33 1 220 1 92 1 122 1 41 1 193 1 225 4 65 2 98 2 129 1 47 1 80 1 207 2 168 2 171 1 140 1 25 1 107 1 
61 2 115 1 33 2 220 1 4 1 207 2 92 1 168 2 122 1 140 1 171 1 193 1 41 1 225 4 65 2 98 2 107 1 25 1 129 1 47 1 
115 1 36 1 155 1 92 1 225 2 193 1 64 1 227 1 65 2 97 1 98 1 229 1 231 1 47 1 74 1 166 1 17 1 238 1 168 1 171 1 243 1 107 1 215 1 108 1 146 1 181 1 112 1 183 1 
115 1 155 1 92 1 225 1 193 1 64 1 227 1 65 2 97 1 229 1 231 1 47 1 74 1 17 1 238 1 168 1 208 1 171 1 172 1 243 1 107 1 215 1 57 1 246 1 177 1 146 1 181 1 183 1 
115 1 61 2 33 2 220 1 92 1 4 1 122 1 41 1 193 1 225 4 65 2 98 2 129 1 47 1 207 2 168 2 171 1 140 1 25 1 107 1 249 1 
61 2 115 1 33 2 36 1 220 1 4 1 155 1 92 1 122 1 225 4 193 1 41 1 227 1 65 2 97 1 98 2 229 1 129 1 231 1 47 1 74 1 133 1 207 2 238 1 168 2 140 1 171 1 243 1 25 1 107 1 108 1 146 1 147 1 181 1 112 1 183 1 
116 1 115 1 61 1 33 1 150 1 220 1 90 1 92 1 4 1 193 1 41 1 225 3 65 2 227 1 66 1 98 2 129 1 47 1 205 1 238 1 207 1 168 1 140 1 171 1 105 1 107 1 25 1 249 1 
115 2 3 1 168 3 241 1 211 1 171 2 225 5 193 2 192 1 175 1 65 4 195 2 98 2 126 1 230 1 47 2 46 2 8 1 250 1 
115 1 3 1 168 3 241 1 211 1 171 1 225 5 193 1 192 2 65 2 195 2 98 2 230 1 126 1 46 2 47 1 8 2 250 1 
115 2 3 1 168 3 241 1 211 1 171 2 225 5 193 2 192 1 175 1 65 4 195 2 98 2 126 1 230 1 47 2 46 2 8 1 250 1 
115 2 3 1 168 3 241 1 211 1 171 2 225 5 193 2 192 1 175 1 65 4 195 2 98 2 126 1 230 1 47 2 46 2 8 1 250 1 
115 1 33 1 220 1 3 1 121 1 122 1 192 1 193 1 225 10 65 2 195 2 98 5 230 1 126 1 160 1 129 1 46 2 47 1 8 1 236 1 168 5 241 1 171 1 211 1 111 1 182 1 85 1 250 1 
115 1 189 1 155 2 92 1 193 1 225 2 124 1 227 2 65 2 66 2 98 1 229 1 196 1 231 1 47 1 74 2 77 1 166 1 167 1 238 2 168 1 169 1 171 1 213 1 107 1 215 1 146 1 181 1 183 2 58 2 249 1 
188 1 204 1 203 1 17 1 155 1 94 1 176 1 229 1 217 1 231 1 146 1 181 1 183 1 74 1 
202 1 164 1 188 1 234 2 13 1 37 1 155 1 39 1 120 1 104 1 82 1 176 1 231 1 146 1 69 1 183 1 185 1 74 1 
202 1 164 1 188 1 234 2 13 1 37 1 155 2 39 1 120 1 104 1 82 1 176 1 231 1 146 1 69 1 183 2 185 1 74 2 133 1 
202 1 164 1 234 2 35 1 13 1 37 1 155 1 39 1 120 1 104 1 82 1 176 1 231 1 146 1 183 1 185 1 74 1 
38 1 
100 1 131 1 191 1 170 1 186 1 
228 1 25 1 220 1 129 1 15 1 140 1 41 1 
155 1 17 1 183 1 74 1 
130 1 191 1 139 1 
187 1 228 1 100 1 159 1 15 1 131 1 170 1 186 1 
100 1 89 1 15 1 17 1 155 1 118 1 209 1 170 1 243 1 81 1 229 1 44 1 231 1 146 2 181 2 131 1 9 1 183 1 232 1 186 1 74 1 
228 1 100 1 195 1 230 1 15 1 46 1 131 1 170 1 211 1 186 1 
100 1 220 1 15 1 236 1 221 1 170 1 141 1 228 2 197 1 55 1 43 1 160 1 128 2 129 2 111 1 131 1 186 1 
228 1 100 1 89 1 15 1 131 1 71 1 170 1 186 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
7 1 93 1 
24 1 60 1 
115 1 33 5 220 2 236 2 4 2 168 5 241 1 122 3 171 1 193 1 225 10 65 2 98 5 43 1 160 2 129 2 111 1 47 1 
115 1 33 1 4 1 241 1 171 1 193 1 225 2 65 2 98 2 25 1 129 1 47 1 
115 1 33 2 220 1 4 1 168 2 241 1 122 1 140 1 171 1 193 1 41 1 225 4 65 2 98 2 25 1 129 1 47 1 
115 3 0 1 33 2 153 1 236 1 4 1 168 2 241 1 122 1 171 3 225 3 193 3 175 1 65 6 98 1 160 1 47 3 
115 4 33 6 0 1 220 2 153 1 4 3 121 1 63 1 122 3 193 4 225 15 65 8 195 1 98 7 43 1 160 2 129 2 46 1 47 4 165 1 236 2 168 8 241 1 171 4 211 1 175 1 111 1 85 1 
115 1 33 5 220 3 4 1 121 1 122 4 225 15 193 1 65 2 195 1 98 8 43 1 230 1 160 2 129 3 46 1 47 1 236 2 168 7 241 1 211 1 171 1 111 2 182 1 85 1 
115 4 88 1 33 3 0 2 4 2 122 1 225 10 193 4 41 2 65 8 195 1 98 7 230 1 129 2 46 1 47 4 135 1 165 1 168 3 241 1 171 4 211 1 145 1 25 2 32 1 
115 3 88 1 33 7 0 1 220 5 4 2 121 1 122 5 225 26 193 3 41 2 65 6 195 1 98 13 43 1 230 1 160 2 129 5 46 1 47 3 135 1 165 1 236 2 168 13 241 1 211 1 171 3 140 2 145 1 25 2 111 2 182 1 85 1 32 1 
115 3 88 1 0 1 33 8 220 4 4 4 121 1 122 4 225 24 193 3 41 2 65 6 195 1 98 14 43 1 230 1 160 2 129 5 46 1 47 3 135 1 165 1 236 2 168 10 241 1 211 1 171 3 140 1 145 1 25 2 111 2 182 1 85 1 32 1 
115 1 33 5 220 3 4 1 121 1 122 4 225 15 193 1 65 2 195 1 98 8 43 1 230 1 160 2 129 3 46 1 47 1 236 2 168 7 241 1 211 1 171 1 111 2 182 1 85 1 
115 1 88 1 33 1 220 2 4 1 225 12 193 1 41 2 65 2 195 1 98 6 230 1 129 2 46 1 47 1 135 1 168 6 241 1 211 1 171 1 140 2 145 1 25 2 32 1 
88 1 115 4 33 7 0 2 220 4 4 2 121 1 122 5 225 25 193 4 41 2 65 8 195 1 98 14 43 1 230 1 160 2 129 5 46 1 47 4 135 1 165 1 236 2 168 11 241 1 171 4 211 1 140 1 145 1 25 2 111 2 182 1 85 1 32 1 
88 1 115 4 33 6 0 2 220 2 4 3 122 3 225 16 193 4 41 3 65 8 195 1 98 9 230 1 129 3 46 1 47 4 135 1 168 7 241 1 171 4 211 1 140 2 175 1 145 1 25 3 32 1 
33 6 220 1 236 3 4 3 168 4 121 1 122 3 225 7 98 3 160 3 129 1 111 1 85 2 
88 1 115 4 33 7 0 2 220 4 4 2 121 1 122 5 225 25 193 4 41 2 65 8 195 1 98 14 43 1 230 1 160 2 129 5 46 1 47 4 135 1 236 2 168 11 241 1 171 4 211 1 140 1 175 1 145 1 25 2 111 2 182 1 85 1 32 1 
115 2 0 1 33 7 220 3 4 3 121 1 122 4 193 2 225 17 65 4 98 9 43 1 160 2 129 3 47 2 236 2 168 8 171 2 111 2 85 1 182 1 
33 2 220 1 236 1 168 2 121 1 122 2 225 5 98 3 160 1 130 1 129 1 111 1 182 1 85 1 
115 1 33 2 165 1 220 1 4 1 168 2 122 1 140 1 171 1 193 1 41 1 225 4 65 2 98 2 25 1 129 1 47 1 
195 1 98 1 168 1 46 1 211 1 225 2 
115 1 33 7 0 1 220 5 4 2 121 1 122 5 41 2 225 25 193 1 65 2 98 13 43 1 160 2 129 5 46 2 47 1 236 2 16 1 168 12 140 2 211 2 171 1 245 1 25 2 111 2 180 1 182 1 85 1 
168 1 46 1 225 1 
98 1 211 1 225 1 
115 1 33 3 165 1 220 1 4 1 168 3 122 2 171 1 140 1 193 1 225 6 41 1 65 2 98 3 25 1 129 1 26 1 47 1 
115 1 88 1 33 2 220 2 4 1 122 1 225 12 193 1 41 2 65 2 195 1 98 6 230 1 129 2 46 1 47 1 135 1 168 6 241 1 211 1 171 1 140 2 145 1 25 2 32 1 
33 2 220 1 236 1 4 1 168 3 122 1 225 6 98 3 160 1 129 1 111 1 
115 1 33 2 0 1 236 1 153 1 4 1 168 2 121 1 122 1 171 1 225 3 193 1 65 2 98 1 160 1 47 1 85 1 
64 1 227 1 66 1 238 1 113 1 219 1 19 1 
151 1 91 1 238 1 19 1 64 1 226 1 227 1 66 1 216 1 84 1 113 1 219 1 
152 1 204 1 203 1 17 1 155 4 229 1 231 1 146 1 181 1 183 4 73 1 74 4 133 1 
2 1 51 1 235 1 155 2 243 1 214 1 229 1 231 1 146 2 181 1 199 1 183 2 10 1 74 2 
82 1 234 1 231 1 146 1 155 1 17 1 120 1 104 1 183 1 74 1 
202 1 189 1 229 1 231 1 146 1 155 2 181 1 169 1 183 2 74 2 133 1 
1 1 203 1 204 1 235 1 17 1 155 5 169 1 229 2 231 2 146 2 181 3 183 5 73 1 74 4 133 1 233 1 
203 1 204 1 235 1 17 1 155 5 169 1 142 1 229 2 231 2 146 2 181 3 183 5 73 1 74 4 133 1 233 1 
229 1 203 1 204 1 130 1 231 1 146 1 155 1 17 1 181 1 183 1 74 1 
150 1 238 2 17 1 155 1 243 1 64 1 105 1 227 2 97 1 66 1 229 1 68 1 231 1 146 1 181 1 112 1 183 1 74 1 
150 1 155 1 64 1 227 1 66 1 97 1 229 2 231 1 68 1 74 1 235 1 138 1 238 1 102 1 208 2 243 2 105 1 23 1 57 1 146 1 181 3 28 1 112 1 183 1 
150 1 155 1 64 1 227 1 66 1 97 1 229 2 231 1 68 1 74 1 235 1 138 1 238 1 102 1 208 2 243 2 105 1 23 1 57 1 177 1 146 1 181 3 28 1 183 1 
235 1 17 1 155 2 221 1 181 1 118 1 27 1 183 2 74 2 141 1 
96 1 235 1 155 1 221 1 181 1 118 1 183 1 74 1 141 1 
144 1 231 1 146 1 155 1 183 1 74 1 
202 1 1 1 2 1 51 1 101 1 17 2 155 7 169 1 243 1 144 1 229 2 198 1 231 2 146 3 181 3 58 1 183 7 232 1 74 6 233 1 133 1 
115 2 4 1 121 1 122 4 193 2 64 3 65 4 66 1 129 3 68 1 74 1 133 1 208 1 213 1 147 1 146 1 85 1 33 5 150 1 36 1 220 3 155 1 92 2 225 13 227 2 97 1 98 7 43 1 229 1 160 2 231 1 47 2 236 2 238 2 168 6 171 2 243 1 105 1 107 2 108 1 57 1 111 2 181 1 112 1 182 1 184 1 183 1 249 1 
221 1 18 1 141 1 
14 1 155 2 243 1 144 1 229 1 231 1 146 2 181 2 9 1 183 2 232 1 74 2 133 1 
150 1 155 1 64 1 227 2 66 1 97 1 229 1 231 1 68 1 74 1 17 1 238 2 208 1 243 1 105 1 57 1 177 1 146 1 181 1 183 1 
2 1 51 1 235 1 101 1 155 1 243 1 229 1 231 1 146 2 181 1 183 1 232 1 74 1 
77 1 238 1 240 1 174 1 124 1 227 1 66 1 196 1 99 1 
223 1 76 1 174 1 
64 1 201 1 240 1 99 1 174 1 
201 1 200 1 143 1 137 1 221 1 240 1 99 1 223 1 18 1 76 1 141 1 174 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (56,73) (56,73) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (56,73) (56,73) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (56,73) (56,73) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (56,73) (56,73) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 186 53 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (210,332) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (210,332) 96 177 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (210,332) 96 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 233 304 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 181 267 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 256 324 123 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 256 324 123 183 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 139 1 164 1 73 1 140 1 3 1 89 1 6 1 56 1 311 1 47 1 
122 1 139 1 164 1 73 1 140 1 3 1 89 1 6 1 56 1 311 1 47 1 
122 1 139 1 164 1 73 1 140 1 3 1 89 1 6 1 56 1 311 1 47 1 
122 1 139 1 164 1 73 1 140 1 3 1 89 1 6 1 56 1 311 1 47 1 
0 2 139 1 140 4 3 1 300 3 160 1 255 2 83 1 7 1 258 1 189 1 238 3 42 1 89 1 129 1 169 1 47 4 114 1 
274 1 139 1 140 2 97 1 3 1 205 1 300 1 6 1 160 1 122 1 189 1 125 1 89 1 169 1 47 2 114 1 
0 1 83 1 139 2 238 1 10 1 140 3 3 2 89 1 300 2 169 1 6 1 47 3 160 1 
0 4 317 1 139 2 140 9 3 2 38 1 300 5 6 1 160 1 255 2 7 1 83 3 258 1 189 1 326 1 105 1 238 7 10 1 42 1 89 1 129 1 169 1 47 9 114 1 
0 4 317 1 139 2 140 9 3 2 38 1 300 5 6 1 160 1 255 2 7 1 83 3 258 1 189 1 326 1 105 1 238 7 10 1 42 1 89 1 129 1 169 1 47 9 114 1 
11 1 330 1 4 1 
118 1 275 2 4 1 
135 2 103 2 85 2 257 2 295 2 328 1 119 1 254 2 
33 2 243 1 68 1 292 2 201 1 295 2 119 1 156 1 5 1 80 1 254 2 252 1 85 2 257 2 124 1 305 2 270 2 220 1 18 1 136 1 135 3 20 1 100 1 58 1 185 1 281 1 103 3 25 1 192 1 286 1 193 1 145 1 328 1 112 1 196 1 150 2 289 1 
135 1 84 1 103 1 85 1 257 1 295 1 119 1 179 1 254 1 302 1 
135 1 69 1 74 1 4 1 254 1 159 1 103 1 84 1 256 1 232 1 107 1 330 1 309 1 218 1 
135 1 69 1 295 1 74 2 4 1 254 1 159 1 103 1 84 1 257 1 85 1 232 1 107 1 330 1 309 2 
70 1 74 1 226 1 309 1 209 1 
70 1 293 1 295 1 74 2 119 1 4 1 254 1 211 1 302 1 84 1 257 1 85 1 309 2 135 1 226 1 179 1 103 1 61 1 330 1 
74 1 226 1 309 1 
135 1 70 1 293 1 295 1 74 1 119 1 179 1 254 1 302 1 84 1 103 1 257 1 85 1 309 1 
4 1 
70 1 61 1 74 2 330 1 226 1 4 1 309 2 228 1 
132 1 186 1 162 1 117 1 70 1 53 1 329 1 74 2 309 2 
11 1 328 1 
135 2 295 1 254 2 84 1 187 1 103 2 59 1 257 1 85 1 328 1 148 1 
318 1 279 1 269 1 
18 1 135 1 243 1 68 1 136 1 137 1 201 1 20 1 156 1 80 1 103 1 305 1 145 1 328 1 150 1 270 1 
18 1 136 1 68 1 243 1 135 2 201 1 92 1 295 1 20 1 156 1 80 1 254 1 103 2 188 1 85 1 305 1 145 1 150 1 269 1 270 1 
49 1 135 5 92 2 295 4 155 1 254 5 103 5 256 1 324 1 85 4 257 1 188 1 328 1 148 1 
135 2 84 1 103 2 85 2 295 2 30 1 254 2 302 1 
135 3 103 3 257 1 92 1 85 3 295 3 328 1 254 3 
135 1 84 1 103 1 85 1 295 1 254 1 302 1 
135 1 295 1 254 1 103 1 187 1 84 1 257 1 85 1 148 1 
33 2 68 1 243 1 69 1 292 1 201 1 154 1 295 3 74 1 119 1 156 1 5 1 80 1 254 3 252 1 159 1 84 1 257 2 85 3 305 1 309 1 270 1 220 1 18 1 136 1 135 4 92 1 20 1 58 1 185 1 103 4 188 1 232 1 25 1 192 1 107 1 286 1 193 1 145 1 328 1 65 1 148 1 112 1 150 1 
135 2 103 2 256 1 324 1 85 1 92 1 295 1 328 1 254 2 
135 3 69 1 92 2 295 3 74 1 4 1 254 3 158 1 159 1 84 1 103 3 257 1 188 1 85 3 232 1 107 1 65 1 148 1 309 1 
135 2 92 1 295 2 279 1 254 2 103 2 257 1 85 2 148 1 269 1 
18 1 135 1 243 1 68 1 136 1 201 1 20 1 156 1 80 1 103 1 305 1 145 1 328 1 150 1 270 1 
18 1 135 1 243 1 68 1 136 1 156 1 80 1 103 1 305 1 145 1 328 1 111 1 150 1 270 1 268 1 
33 2 244 1 292 4 261 1 165 1 87 1 167 1 269 2 46 1 220 1 16 1 52 1 315 1 318 2 279 2 185 1 234 1 190 1 25 2 192 1 286 1 193 1 112 1 289 2 
69 1 135 1 84 1 103 1 85 1 295 1 254 1 30 1 
331 1 332 1 
331 1 332 1 
296 1 210 1 
296 1 210 1 
296 1 210 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
331 1 332 1 
96 1 74 1 177 1 278 1 309 1 331 1 332 1 
96 1 278 1 331 1 332 1 
7 1 189 1 114 1 
189 1 97 1 114 1 
171 1 7 2 28 1 97 1 271 1 114 3 
171 1 7 1 97 1 168 1 271 1 114 2 
171 1 7 1 97 1 271 2 114 2 
242 3 118 1 70 4 1 2 204 1 74 5 37 1 75 2 4 2 161 1 303 1 162 1 163 1 260 2 309 5 167 1 132 1 172 2 224 1 52 1 315 1 275 3 226 1 322 1 282 1 190 1 60 1 61 1 329 1 330 1 109 1 287 1 
70 1 259 1 74 1 309 1 
242 3 118 2 117 1 70 2 1 2 204 1 74 3 75 1 4 3 303 1 162 1 163 1 260 2 309 3 167 1 132 1 172 2 52 1 315 1 275 4 322 1 282 1 190 1 60 1 329 1 330 1 
242 5 118 3 117 1 70 3 249 1 1 4 204 2 74 4 76 1 75 2 4 4 303 2 162 1 307 1 163 1 260 4 309 4 167 2 132 1 172 4 52 2 315 2 275 7 322 1 282 1 190 2 60 1 329 1 330 1 
203 1 11 1 80 1 
181 1 80 1 
128 1 
18 1 136 1 80 1 
143 1 80 1 
136 1 80 1 
18 1 136 1 294 1 203 2 91 1 80 3 
153 1 313 1 292 7 315 1 121 1 57 2 25 3 190 1 235 1 126 1 165 3 13 1 90 1 166 1 46 2 289 4 272 1 
153 1 313 1 292 7 315 1 121 1 57 2 25 3 190 1 235 1 126 1 165 3 13 1 90 1 166 1 46 2 289 4 272 1 
153 1 313 1 292 7 315 1 121 1 57 2 25 3 190 1 235 1 126 1 285 1 165 3 13 1 166 1 90 1 46 2 289 4 272 1 
33 2 200 1 292 22 204 3 121 1 214 3 126 4 12 1 13 1 165 7 167 3 265 1 219 1 46 3 220 1 272 2 313 1 174 1 52 3 315 3 94 1 99 1 229 4 57 1 185 1 235 1 25 11 190 3 286 1 193 1 289 11 
33 2 153 1 292 9 126 1 13 1 165 3 90 1 166 1 46 2 220 1 272 1 313 1 51 1 175 1 225 1 315 2 57 1 185 1 25 4 190 2 235 1 286 1 193 1 289 5 
243 1 68 1 116 1 3 1 300 1 6 1 160 1 7 1 305 1 89 1 169 1 270 1 47 2 139 1 140 2 97 1 102 1 231 1 325 1 189 1 191 1 106 1 28 1 238 1 147 1 66 1 150 1 29 1 152 1 114 2 
243 1 68 1 116 1 3 1 300 1 6 1 160 1 7 1 305 1 88 1 169 1 270 1 47 3 139 1 140 3 97 1 102 1 227 1 231 1 325 1 189 1 28 1 106 1 239 1 238 2 147 1 66 1 150 1 152 1 114 2 
68 1 243 1 116 1 140 2 97 1 300 1 6 1 160 1 231 1 7 1 325 1 189 1 305 1 28 1 238 2 239 1 88 1 147 1 66 1 169 1 150 1 47 2 270 1 152 1 114 2 
197 1 68 1 243 1 116 2 248 1 3 1 207 1 6 2 79 1 80 1 305 1 86 1 270 1 47 1 136 1 139 1 140 1 178 1 227 1 145 1 147 2 150 1 152 2 
243 1 68 1 116 1 3 1 6 1 7 1 305 1 89 1 270 1 47 1 139 1 140 1 97 1 102 1 231 1 325 1 189 1 191 1 106 1 28 1 239 1 147 1 66 1 150 1 152 1 114 2 
113 1 
31 1 68 1 243 1 242 1 247 1 74 2 37 1 207 1 80 1 79 1 304 1 162 1 305 2 260 1 309 2 270 2 132 1 136 1 55 1 226 2 233 1 60 1 145 2 61 1 329 1 110 1 288 1 150 2 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 61 1 74 2 226 1 110 1 309 2 228 1 
132 1 304 1 162 1 233 1 247 1 329 1 74 1 110 1 37 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
304 1 233 1 247 1 74 1 110 1 309 1 
132 1 304 1 162 1 233 1 247 1 329 1 74 1 110 1 37 1 309 1 
33 2 153 1 292 6 11 1 261 1 165 2 166 1 90 1 269 1 46 2 220 1 313 1 315 1 318 1 279 1 57 1 185 1 235 1 190 1 25 3 192 1 286 1 193 1 328 2 112 1 289 3 
33 4 292 14 204 2 36 1 157 1 126 1 214 3 165 2 167 1 46 1 269 11 219 1 220 2 314 1 52 2 138 1 315 1 318 11 99 1 279 4 58 1 229 3 142 1 185 2 281 1 25 6 190 2 192 1 286 2 193 2 328 1 112 2 289 8 
68 1 243 1 33 2 201 1 292 2 295 1 156 1 120 1 157 1 80 1 254 1 85 1 305 1 270 1 220 1 18 1 133 1 136 1 135 2 137 1 19 1 92 1 20 1 279 1 58 1 185 1 103 2 281 1 188 1 25 1 192 1 145 1 193 1 286 1 328 1 112 1 150 1 289 1 
153 1 243 2 68 2 156 2 157 1 5 2 254 1 80 2 85 1 165 5 166 1 90 1 167 2 270 1 269 7 18 2 92 1 20 2 279 7 22 2 185 3 281 1 103 3 104 1 188 1 25 10 190 3 192 3 27 2 286 3 193 3 112 3 289 10 33 6 198 2 199 2 292 20 201 2 295 1 204 2 306 1 305 1 126 1 46 4 220 3 313 1 135 3 136 2 52 2 315 3 318 7 57 1 58 1 235 1 145 1 328 2 150 1 
243 3 68 4 79 1 80 4 254 1 85 1 261 1 263 1 270 6 18 1 92 1 180 1 185 2 281 1 103 1 25 1 26 1 192 2 193 2 286 2 112 2 289 1 290 1 33 4 292 2 295 1 206 1 207 1 124 2 305 7 310 1 221 1 220 2 50 1 136 3 135 1 54 1 320 1 230 1 58 1 145 2 239 1 150 7 
33 2 292 3 295 1 204 1 157 1 254 1 257 1 85 1 165 1 167 1 46 1 269 1 220 1 135 1 52 1 315 1 318 1 279 1 185 1 103 1 190 1 25 2 192 1 286 1 193 1 148 1 112 1 240 1 289 1 
16 1 33 2 292 2 52 1 318 1 279 1 185 1 190 1 192 1 126 1 193 1 286 1 165 1 261 1 112 1 269 1 289 2 220 1 
33 2 292 2 315 1 318 1 279 1 185 1 234 1 25 2 192 1 193 1 286 1 165 1 261 1 112 1 167 1 46 1 269 1 220 1 
33 2 292 4 204 1 126 1 261 1 165 2 167 1 269 2 46 1 220 1 52 1 315 1 318 2 279 2 185 1 190 1 25 2 192 1 286 1 193 1 112 1 289 2 
16 1 33 2 292 2 52 1 318 1 54 1 279 1 185 1 190 1 192 1 126 1 193 1 286 1 165 1 112 1 269 1 289 2 220 1 
33 2 292 2 315 1 318 1 54 1 279 1 185 1 234 1 25 2 192 1 193 1 286 1 165 1 112 1 167 1 46 1 269 1 220 1 
33 2 292 4 204 1 126 1 165 2 167 1 269 2 46 1 220 1 52 1 315 1 54 1 318 2 279 2 185 1 190 1 25 2 192 1 286 1 193 1 112 1 289 2 
33 2 52 1 292 4 315 1 318 2 204 1 279 2 185 1 25 2 190 1 192 1 126 1 193 1 286 1 165 2 167 1 112 1 46 1 269 2 289 2 220 1 
68 1 243 1 33 2 292 2 201 1 156 1 5 1 80 1 305 1 270 1 220 1 18 1 136 1 135 1 20 1 58 1 185 1 281 1 103 1 25 1 192 1 145 1 193 1 286 1 328 1 112 1 150 1 289 1 
68 1 243 1 33 2 292 2 156 1 80 1 305 1 268 1 270 1 220 1 18 1 136 1 135 1 21 1 58 1 185 1 281 1 103 1 25 1 192 1 145 1 193 1 286 1 328 1 111 1 112 1 150 1 289 1 
33 2 292 4 204 1 157 1 126 1 165 2 167 1 269 2 46 1 220 1 52 1 315 1 318 2 279 2 185 1 190 1 25 2 192 1 286 1 193 1 112 1 289 2 
68 1 243 1 33 2 292 4 201 1 204 1 156 1 5 1 80 1 305 1 126 1 165 2 167 1 46 1 269 2 270 1 220 1 18 1 136 1 135 1 52 1 315 1 318 2 20 1 279 2 22 1 185 1 103 1 25 2 190 1 192 1 193 1 286 1 112 1 150 1 29 1 289 2 
33 2 292 3 295 1 204 1 157 1 254 1 257 1 85 1 126 1 165 1 167 1 269 1 220 1 135 1 52 1 315 1 318 1 279 1 185 1 103 1 25 1 190 1 192 1 283 1 286 1 193 1 148 1 112 1 289 2 
33 4 292 9 204 1 299 1 77 1 214 1 126 1 165 2 167 1 46 1 219 1 220 2 17 1 273 1 173 1 175 1 52 1 315 1 99 1 280 1 229 2 185 2 25 5 190 1 286 2 193 2 64 1 289 4 
33 4 292 9 204 1 299 1 77 1 214 1 126 1 165 2 167 1 46 1 219 1 220 2 17 1 273 1 173 1 175 1 52 1 315 1 99 1 280 1 229 2 185 2 25 5 190 1 286 2 193 2 64 1 289 4 
153 1 33 6 292 47 204 6 299 3 77 1 9 1 214 4 126 6 41 1 165 13 166 1 90 1 167 6 265 2 15 1 46 7 219 2 220 3 17 1 313 1 223 1 273 1 314 2 173 1 175 1 52 6 315 7 95 1 99 2 280 1 57 1 229 4 23 1 185 3 235 1 25 23 190 7 286 3 193 3 289 24 
33 4 292 13 204 2 299 1 214 1 126 1 165 2 43 1 167 2 46 1 219 1 220 2 48 1 17 1 273 1 173 1 175 1 52 2 315 2 99 1 280 1 229 2 185 2 25 7 190 2 286 2 193 2 64 1 289 6 
33 4 292 19 204 2 299 3 77 1 126 1 9 1 214 2 41 1 165 1 167 1 265 1 15 1 220 2 17 1 223 1 273 2 173 2 175 1 52 2 315 1 95 1 99 2 280 1 229 2 23 1 185 2 25 8 190 2 286 2 193 2 289 11 
68 1 243 1 33 2 292 2 298 1 157 1 40 1 80 1 254 2 305 2 124 2 270 2 220 1 136 1 135 2 141 1 320 1 58 1 185 1 103 2 281 1 144 1 26 1 25 1 192 1 193 1 286 1 112 1 150 2 241 1 289 1 
68 1 243 1 97 1 101 1 39 1 182 1 231 1 7 1 325 1 189 1 305 2 28 1 106 1 239 1 150 2 29 1 270 2 152 1 114 2 
243 1 68 1 176 1 97 1 39 1 231 1 7 1 325 1 189 1 305 1 28 1 106 1 239 1 150 1 270 1 152 1 114 2 
197 1 68 1 243 1 136 1 101 1 251 1 207 1 80 1 79 1 305 1 145 1 150 1 270 1 152 1 
68 1 243 1 97 1 101 1 39 1 182 1 231 1 7 1 325 1 189 1 305 1 28 1 106 1 239 1 150 1 270 1 152 1 114 2 
67 1 
242 1 260 1 11 1 330 1 4 1 195 1 266 1 
242 1 118 1 72 1 202 1 74 1 37 1 4 2 162 1 260 1 309 1 132 1 275 1 226 1 61 1 329 1 63 1 330 1 
18 1 132 1 68 1 243 1 136 1 37 1 181 1 80 1 162 1 305 1 145 1 329 1 91 1 150 1 267 1 44 1 270 1 
242 6 118 3 1 5 204 2 37 1 4 3 162 1 9 1 214 1 41 1 260 4 167 2 15 1 132 1 172 5 52 2 315 2 275 6 95 1 99 1 229 1 23 1 190 2 329 1 
153 1 242 2 293 1 295 1 74 1 119 1 37 1 254 1 302 1 84 1 162 1 257 1 85 1 215 2 260 2 309 1 132 1 135 1 313 1 225 1 315 1 277 1 179 1 103 1 323 1 235 1 190 2 329 1 
132 1 242 1 37 1 4 1 162 1 260 1 329 1 330 1 195 1 266 1 
172 5 242 5 52 2 118 5 315 2 1 5 275 10 277 1 204 2 4 5 190 2 27 1 215 2 260 5 167 2 
61 1 74 1 330 1 226 1 4 1 309 1 
31 2 68 1 243 1 242 2 34 2 117 1 74 3 37 1 207 1 80 1 79 1 162 2 305 4 260 2 309 3 270 4 132 2 136 1 55 1 226 4 60 2 284 1 145 2 61 2 237 1 329 2 151 1 288 1 150 4 
33 2 243 1 68 1 292 1 201 1 295 2 119 1 156 1 5 1 254 2 252 1 80 1 85 2 257 2 305 1 270 1 220 1 18 1 135 3 136 1 20 1 58 1 185 1 103 3 25 1 192 1 286 1 145 1 193 1 328 1 112 1 150 1 
132 1 31 1 172 2 242 1 118 2 275 4 1 2 37 1 4 4 57 1 162 1 60 1 260 2 329 1 330 2 
93 1 216 1 321 1 
327 1 93 1 98 1 2 1 321 1 
93 1 216 1 321 1 
93 1 216 1 321 1 
93 1 321 1 149 1 
93 1 321 1 149 1 
93 1 321 1 149 1 
93 1 321 1 
331 1 332 1 
33 2 153 1 292 8 214 1 41 1 165 2 90 1 166 1 46 2 220 1 313 1 175 1 315 1 99 1 57 1 229 1 185 1 190 1 25 4 235 1 286 1 193 1 289 4 
153 1 33 4 292 11 204 1 214 1 126 1 41 1 165 3 166 1 90 1 46 2 219 1 220 2 313 1 175 1 52 1 315 1 316 1 99 1 57 1 229 2 185 2 235 1 25 5 190 2 286 2 193 2 289 6 
33 4 292 12 204 2 214 1 9 1 126 1 41 1 165 1 167 2 15 1 220 2 175 1 52 2 316 1 315 2 95 1 99 1 229 1 185 2 23 1 25 6 190 2 286 2 193 2 289 6 
33 8 292 12 204 2 126 1 9 1 214 1 41 1 165 3 167 1 265 2 15 1 46 2 220 4 175 1 52 2 316 1 315 1 95 1 99 1 229 1 185 4 23 1 25 5 190 2 286 4 193 4 289 7 
33 2 153 1 292 8 214 1 41 1 165 2 90 1 166 1 46 2 220 1 313 1 175 1 315 1 99 1 57 1 229 1 185 1 190 1 25 4 235 1 286 1 193 1 289 4 
33 4 292 13 204 2 126 1 9 1 214 1 41 1 165 3 167 2 265 1 15 1 46 2 220 2 175 1 52 2 315 2 95 1 99 1 229 1 185 2 23 1 25 7 190 2 286 2 193 2 289 6 
33 6 292 11 204 2 214 1 9 1 126 1 41 1 165 1 167 1 265 1 15 1 220 3 175 1 52 2 316 1 315 1 95 1 99 1 229 1 185 3 23 1 25 4 190 2 286 3 193 3 289 7 
33 6 292 11 204 2 126 2 9 1 214 1 41 1 165 3 167 1 265 1 15 1 46 1 220 3 175 1 52 2 315 1 95 1 99 1 229 1 185 3 23 1 25 4 190 2 286 3 193 3 64 1 289 7 
313 3 153 1 292 7 315 1 25 4 235 3 190 1 126 3 165 6 90 1 166 2 46 3 289 3 
33 6 292 11 204 2 214 1 9 1 126 1 41 1 165 1 167 1 265 1 15 1 220 3 175 1 52 2 315 1 95 1 99 1 229 1 185 3 23 1 25 4 190 2 286 3 193 3 64 1 289 7 
153 1 33 4 313 1 292 8 315 1 57 1 185 2 190 1 25 4 235 1 126 1 193 2 286 2 165 3 90 1 166 1 265 1 289 4 46 2 220 2 
313 1 153 1 292 6 315 1 57 1 25 3 235 1 190 1 11 1 165 2 90 1 166 1 46 2 289 3 
33 2 52 1 292 4 315 1 316 1 204 1 185 1 25 2 190 1 193 1 286 1 126 1 165 2 167 1 46 1 289 2 220 1 
292 7 52 1 315 1 204 1 99 1 229 2 25 4 190 1 214 1 126 1 165 2 167 1 46 1 289 3 219 1 
153 1 33 4 292 23 204 2 126 4 214 2 165 9 166 1 90 1 167 2 265 2 219 1 46 5 220 2 134 1 313 2 52 2 314 1 315 3 57 1 229 2 142 1 185 2 235 2 190 3 25 12 193 2 286 2 289 11 
229 1 292 1 25 1 
292 1 214 1 289 1 
33 2 292 6 52 1 316 1 315 1 204 1 185 1 25 3 190 1 27 1 286 1 193 1 126 2 165 4 167 1 289 3 46 2 220 1 
33 4 292 13 204 2 126 1 9 1 214 1 41 1 165 3 167 2 265 1 15 1 46 2 220 2 175 1 52 2 315 2 95 1 99 1 229 1 185 2 23 1 25 7 190 2 286 2 193 2 289 6 
153 1 313 1 292 6 315 1 190 1 25 3 235 1 126 1 165 2 289 3 46 1 
134 1 313 1 33 2 292 3 185 1 235 1 25 2 126 1 193 1 286 1 165 2 166 1 90 1 265 1 289 1 46 1 220 1 
33 2 313 2 153 1 175 1 292 10 225 1 315 2 185 1 235 2 25 5 190 2 286 1 193 1 126 2 165 5 46 3 289 5 220 1 
33 2 175 1 52 1 292 2 185 1 190 1 193 1 286 1 126 1 165 1 289 2 220 1 
33 2 175 1 52 1 292 4 315 1 204 1 185 1 25 2 190 1 193 1 286 1 126 1 165 2 167 1 46 1 289 2 220 1 
134 1 33 6 313 1 292 3 175 1 185 3 25 2 235 1 193 3 286 3 126 1 165 2 64 1 265 1 46 1 289 1 220 3 
153 2 33 10 292 34 204 3 214 3 126 5 12 1 165 12 166 1 90 1 167 3 265 2 219 1 46 7 220 5 134 1 313 3 174 1 175 1 52 3 316 1 315 5 94 1 99 1 57 1 229 4 185 5 235 3 25 18 190 5 286 5 193 5 64 1 289 16 
123 1 256 1 324 1 
123 1 183 1 312 1 256 1 324 1 24 1 213 1 208 1 
68 1 243 1 136 1 305 1 145 1 11 1 207 1 150 1 80 1 79 1 270 1 
18 1 136 1 68 1 135 2 243 1 201 1 92 1 295 1 156 1 80 1 254 1 103 2 85 1 305 1 145 1 328 1 150 1 270 1 
243 1 68 1 69 1 201 1 34 1 295 1 156 1 78 1 254 2 80 3 84 2 85 2 305 1 270 1 18 2 135 2 136 2 92 1 143 1 103 2 59 1 232 1 328 1 150 1 
243 1 68 1 69 1 34 1 295 1 156 1 78 1 254 2 80 3 84 2 85 2 305 1 268 1 270 1 18 2 135 2 136 2 92 1 143 1 103 2 59 1 232 1 328 1 150 1 
115 1 243 1 68 1 34 1 293 1 295 1 203 1 119 1 74 2 4 1 78 1 254 1 80 4 253 1 302 1 159 1 84 1 85 1 257 1 305 1 309 2 270 1 18 1 135 1 136 1 226 1 179 1 181 1 143 1 103 1 330 1 150 1 
34 1 293 1 295 1 74 2 119 1 4 1 80 1 254 1 302 1 159 1 84 1 257 1 85 1 305 1 217 1 309 2 270 1 135 1 226 1 179 1 181 1 103 1 330 1 150 1 
68 1 243 1 305 1 150 1 270 1 221 1 
18 1 136 1 243 1 68 2 250 1 180 1 80 1 305 1 145 1 91 1 150 1 310 1 270 1 
153 1 68 1 243 1 33 4 198 1 292 6 201 1 295 1 156 1 157 1 5 1 80 1 254 1 85 1 305 1 165 2 166 1 90 1 269 1 46 2 270 1 220 2 18 1 313 1 136 1 135 2 92 1 315 1 318 1 20 1 279 1 22 1 57 1 185 2 103 2 144 1 25 3 190 1 235 1 192 2 193 2 286 2 328 2 112 2 29 1 150 1 289 3 
153 1 242 4 246 1 70 1 74 3 4 2 80 1 254 1 159 1 84 1 162 2 257 1 85 1 260 5 266 1 270 1 277 1 179 1 181 1 103 1 190 2 194 1 195 1 293 1 295 1 119 1 37 2 302 1 305 1 127 1 215 2 217 1 309 3 132 2 313 1 135 1 225 1 315 2 226 2 235 1 61 1 145 1 237 1 329 2 330 2 150 1 
18 1 136 1 243 1 68 1 203 1 80 1 305 1 128 1 91 1 150 1 44 1 270 1 221 1 
68 1 136 1 243 1 207 1 301 1 79 1 80 1 305 4 145 1 45 1 150 4 29 1 270 4 
170 1 50 1 18 1 136 1 243 1 68 2 180 1 80 1 305 1 150 1 310 1 270 1 290 1 
68 1 243 1 325 1 189 1 305 1 145 1 97 1 150 1 270 1 114 1 
136 1 243 1 68 1 141 1 80 1 305 2 26 1 239 1 29 1 150 2 270 2 
136 2 243 2 68 2 34 1 206 1 207 1 79 1 80 3 230 1 305 5 26 1 145 1 45 1 150 5 29 1 270 4 
136 2 243 2 68 2 34 1 207 1 79 1 80 3 184 1 230 1 305 5 26 1 145 1 45 1 150 5 29 1 270 4 
18 1 136 1 68 1 135 2 243 1 92 1 295 1 156 1 80 1 254 1 103 2 85 1 305 1 145 1 328 1 150 1 270 1 268 1 
18 1 136 1 243 1 68 2 34 1 250 1 180 1 80 1 305 1 91 1 150 1 310 1 270 1 
32 1 71 1 8 1 328 1 81 1 
69 1 291 1 32 2 70 1 71 2 74 2 4 1 81 2 159 1 212 1 84 1 232 1 8 1 107 1 328 1 330 1 65 1 309 2 264 1 
135 1 32 1 103 1 71 1 8 1 298 1 40 1 254 1 241 1 
291 1 8 1 264 1 
11 1 300 1 169 1 160 1 
139 1 140 1 3 1 300 1 169 1 47 1 160 1 
147 1 6 1 47 1 
245 1 139 1 319 1 140 3 3 1 300 1 160 1 82 1 125 2 89 1 169 1 47 3 
255 1 139 1 238 1 140 2 3 1 300 1 169 1 47 2 160 1 
0 1 139 1 140 1 3 1 300 1 7 1 258 1 189 1 89 1 47 1 114 1 
139 1 140 1 3 1 89 1 300 1 169 1 47 1 
139 1 140 1 3 1 89 1 169 2 47 1 160 1 
35 1 139 2 140 2 3 2 300 1 89 1 169 1 14 1 47 2 131 1 
0 1 83 1 326 1 139 1 238 2 140 3 3 1 89 1 300 2 38 1 169 1 47 3 160 1 
139 1 140 2 97 1 3 1 300 1 160 1 7 1 189 1 28 1 236 1 238 1 89 1 169 1 47 2 114 2 
255 1 0 1 83 1 139 2 238 2 140 4 3 2 89 1 300 2 129 1 169 1 47 4 160 1 
139 1 140 1 3 1 89 1 300 1 169 1 47 1 160 1 
245 1 0 1 276 1 139 1 140 4 3 1 300 3 160 2 82 1 83 1 125 1 238 2 169 2 47 4 
317 1 139 1 140 2 3 1 300 1 160 1 146 1 238 1 89 1 262 1 169 1 47 2 
245 2 139 1 140 3 3 1 300 1 160 1 82 1 125 2 108 1 89 1 169 1 47 3 
297 1 308 1 300 2 130 2 
222 1 139 1 140 1 3 1 89 1 47 1 
139 1 238 1 140 2 3 1 89 1 300 1 38 1 169 1 47 2 160 1 
62 1 
139 1 140 1 3 1 89 1 300 1 169 1 47 1 160 1 
139 1 140 3 3 1 300 1 38 1 160 1 125 1 238 1 89 1 169 1 47 3 
0 1 83 1 276 1 300 1 
300 1 169 1 

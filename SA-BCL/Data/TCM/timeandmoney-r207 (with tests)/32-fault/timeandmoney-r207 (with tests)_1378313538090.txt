#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (121,172) 154 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (194,270) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (102,184,210) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (194,270) (194,270) 271 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 10 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 57 218 118 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 57 218 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) (142,150) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (142,150) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) (142,150) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (11,20,193,267) (11,20,193,267) (11,20,193,267) 200 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 160 169 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 19 146 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (121,172) (121,172) (123,144) 54 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (121,172) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (121,172) (121,172) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 18 224 245 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (194,270) (194,270) 271 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 237 226 284 141 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (121,172) 154 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 57 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (194,270) (194,270) 271 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (194,270) (194,270) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 267 1 200 1 
10 1 
285 1 
3 1 214 2 
145 1 154 1 3 1 214 1 172 1 237 2 180 1 201 2 42 1 226 2 30 1 
270 1 3 1 214 1 
102 1 89 1 157 1 91 1 71 1 176 1 197 1 179 1 133 1 138 1 79 1 210 1 289 1 184 1 
214 1 184 1 
102 1 246 1 273 1 8 1 179 1 
102 2 53 1 138 1 246 1 77 1 176 1 8 1 179 2 
102 1 246 1 179 1 
102 1 270 1 3 1 214 1 194 1 8 1 179 1 
176 1 
148 1 102 2 53 1 138 1 246 1 176 1 8 1 179 2 
102 5 104 2 3 1 106 1 214 1 216 2 171 1 107 1 176 1 8 2 177 2 179 5 270 1 222 2 119 2 271 1 149 1 276 1 185 1 53 1 190 1 279 1 194 1 26 1 137 1 138 1 246 2 208 4 207 1 292 2 
145 1 226 1 95 1 237 1 201 1 
10 1 
214 1 108 1 91 1 71 1 238 1 197 1 195 1 133 1 94 1 
214 1 258 1 91 1 71 1 238 1 197 1 195 1 133 1 94 1 151 1 47 1 
133 2 115 1 52 1 258 2 91 2 71 2 197 1 47 2 
214 1 258 2 91 2 71 2 238 1 197 1 195 1 133 2 47 2 151 1 
133 1 52 1 258 1 91 1 71 1 197 1 47 1 
94 1 214 1 108 1 
94 1 214 1 95 1 
133 2 89 1 258 1 91 2 238 1 71 2 47 1 151 1 132 1 
95 1 
94 1 214 1 
145 1 226 1 237 1 201 1 
145 1 226 1 237 1 201 1 
243 1 213 2 244 1 256 1 155 1 43 1 217 1 199 1 
133 1 115 1 258 1 289 1 91 1 71 1 197 1 47 1 
215 1 25 1 
215 1 25 1 
175 1 
175 1 
175 1 
33 1 215 1 25 1 
215 1 93 1 25 1 
76 1 215 1 175 1 159 1 25 1 
33 1 215 1 25 1 
33 1 215 1 25 1 
215 1 25 1 268 1 
215 1 25 1 268 1 
215 1 25 1 268 1 
102 1 235 1 118 1 215 1 272 1 25 1 218 1 179 1 57 1 
235 1 215 1 272 1 25 1 218 1 57 1 
143 1 41 1 60 1 
143 1 60 1 250 1 
254 1 59 1 41 2 60 3 250 1 125 1 
59 1 41 1 60 2 37 1 250 1 125 1 
59 2 41 1 60 2 250 1 125 1 
100 1 102 5 216 1 173 1 174 1 176 1 8 4 179 5 265 1 222 1 225 1 119 1 45 1 232 1 124 1 82 2 53 1 131 1 196 1 26 1 285 1 137 1 164 1 246 1 138 1 287 1 166 1 208 1 292 2 
102 2 3 1 214 1 194 1 176 1 8 2 179 2 263 1 220 1 270 1 138 1 246 1 80 1 273 1 
100 2 102 3 104 1 3 1 214 1 216 1 174 1 176 2 8 2 179 3 270 1 222 1 225 1 119 1 45 1 124 1 82 1 276 1 131 2 194 1 56 1 196 1 26 1 161 1 285 3 138 1 164 1 287 1 208 3 292 2 
100 4 102 4 104 2 216 1 174 1 176 3 8 3 179 4 113 1 222 1 225 1 119 1 45 2 124 1 82 2 276 1 131 4 56 2 196 1 26 2 161 2 28 1 285 6 138 1 164 2 287 2 208 5 290 1 292 4 
10 1 
168 1 1 1 
202 1 
49 1 1 1 255 1 
1 1 181 1 
1 1 255 1 
49 1 83 1 1 3 84 1 128 2 255 1 
101 1 185 1 104 1 2 1 85 1 106 1 92 1 283 2 26 1 266 2 134 3 162 4 207 1 15 1 64 3 31 1 140 7 
101 1 185 1 104 1 2 1 85 1 106 1 92 1 283 2 26 1 266 2 134 3 162 4 207 1 15 1 64 3 31 1 140 7 
101 1 185 1 34 1 104 1 85 1 2 1 106 1 92 1 283 2 26 1 266 2 134 3 162 4 207 1 15 1 64 3 31 1 140 7 
101 5 213 2 104 4 105 4 2 2 106 1 35 1 256 1 217 1 6 1 266 5 15 2 45 3 185 2 51 1 85 1 88 1 130 1 92 1 192 1 199 1 283 3 26 4 161 3 134 10 243 1 162 16 203 1 204 3 164 3 207 2 31 1 64 15 140 31 
101 1 185 1 213 4 104 1 85 1 2 1 106 1 256 2 5 1 217 2 92 1 281 1 283 2 199 2 26 1 266 3 134 4 243 2 162 5 203 1 207 1 15 1 64 4 140 9 
11 1 20 1 183 1 267 1 200 1 
11 1 20 1 183 1 150 1 267 1 
20 1 183 1 193 1 142 1 
11 1 20 1 183 1 150 1 267 1 
11 1 20 1 183 1 267 1 200 1 
4 1 
67 1 102 2 169 1 1 1 145 2 255 1 170 1 216 1 259 1 38 1 179 2 222 1 226 2 229 1 119 1 50 1 186 1 53 1 237 2 191 1 55 1 196 1 160 1 240 1 201 2 29 1 137 1 246 2 62 1 208 2 248 1 249 1 212 1 292 2 
67 1 102 2 53 1 186 1 7 1 179 2 240 1 148 1 246 2 229 1 62 1 
67 1 102 1 233 1 186 1 62 1 229 1 240 1 179 1 9 1 
67 1 102 2 53 1 186 1 233 1 7 1 179 2 240 1 9 1 148 1 269 1 246 2 229 1 62 1 
67 1 102 2 3 1 170 1 214 1 216 1 176 1 7 2 179 2 269 2 148 1 270 1 222 1 229 1 119 1 186 1 53 1 156 1 23 1 194 1 282 1 240 1 27 1 137 1 138 1 246 3 62 1 208 1 292 1 
67 1 102 1 186 1 170 1 216 1 38 1 160 1 179 1 240 1 222 1 137 1 119 1 229 1 62 1 208 1 249 1 292 1 
67 1 102 1 3 1 170 1 214 1 216 1 176 1 179 1 270 1 222 1 229 1 119 1 186 1 23 1 194 1 240 1 27 1 137 1 138 1 62 1 208 1 292 1 
67 1 102 1 3 1 170 1 214 1 216 1 176 1 179 1 270 1 222 1 229 1 119 1 186 1 23 1 194 1 240 1 27 1 137 1 138 1 62 1 208 1 292 1 
67 1 102 3 216 1 38 2 176 1 261 1 7 2 179 3 9 2 74 1 269 2 222 1 229 1 119 1 48 1 126 2 233 2 53 2 186 1 240 1 160 1 285 2 136 2 137 1 138 1 246 4 62 1 247 1 208 1 249 2 292 1 
67 1 102 1 3 1 170 1 214 1 216 1 176 1 7 1 179 1 9 1 269 1 270 1 222 1 229 1 119 1 233 1 186 1 23 1 194 1 282 1 240 1 27 1 137 1 138 1 246 1 62 1 208 1 292 1 
67 1 102 1 3 1 170 1 214 1 216 1 176 1 7 1 179 1 9 1 269 1 270 1 222 1 229 1 119 1 233 1 186 1 23 1 194 1 282 1 240 1 27 1 137 1 138 1 246 1 62 1 208 1 292 1 
67 1 102 1 216 1 38 1 179 1 74 1 222 1 229 1 119 1 230 1 186 1 240 1 160 1 285 1 136 1 137 1 62 1 208 1 249 1 292 1 
10 1 243 1 213 2 244 1 256 1 155 1 43 1 217 1 199 1 
213 2 19 1 105 1 256 1 146 1 155 1 217 1 72 1 199 1 243 1 162 1 204 1 43 1 64 1 140 2 
213 2 256 1 21 1 36 1 155 1 217 1 72 1 199 1 243 1 162 1 206 1 95 1 43 1 64 1 140 2 81 1 
144 1 213 2 145 1 256 1 155 1 172 1 237 1 54 1 217 1 72 1 199 1 201 1 243 1 95 1 226 1 43 1 64 1 121 1 140 1 81 1 
213 2 145 1 256 1 21 1 155 1 237 1 217 1 260 1 199 1 201 1 243 1 162 1 226 1 43 1 140 1 46 1 
213 2 104 1 256 1 214 1 217 1 72 1 43 1 45 1 127 1 155 1 199 1 26 1 161 1 243 1 162 1 164 1 94 1 64 1 140 2 
213 2 256 1 155 1 217 1 199 1 26 1 243 1 244 1 162 1 43 1 165 1 45 1 140 1 
213 2 104 1 256 1 155 1 217 1 199 1 161 1 243 1 244 1 43 1 120 1 64 1 140 1 
213 2 104 1 256 1 155 1 217 1 199 1 26 1 161 1 243 1 244 1 162 1 164 1 43 1 45 1 64 1 140 2 
213 2 256 1 155 1 217 1 260 1 199 1 26 1 243 1 162 1 43 1 165 1 45 1 140 1 
213 2 104 1 256 1 155 1 217 1 260 1 199 1 161 1 243 1 43 1 120 1 64 1 140 1 
213 2 104 1 256 1 155 1 217 1 260 1 199 1 26 1 161 1 243 1 162 1 164 1 43 1 45 1 64 1 140 2 
213 2 104 1 256 1 155 1 217 1 199 1 26 1 161 1 243 1 162 1 164 1 43 1 45 1 64 1 140 2 
145 1 226 1 172 1 237 1 201 1 
145 1 205 1 226 1 237 1 201 1 
213 2 104 1 256 1 155 1 217 1 72 1 199 1 26 1 161 1 243 1 162 1 164 1 43 1 45 1 64 1 140 2 
114 1 226 1 172 1 237 1 121 1 201 1 
213 2 104 1 87 1 256 1 155 1 214 1 217 1 72 1 199 1 26 1 161 1 243 1 162 1 94 1 164 1 43 1 45 1 64 1 140 2 
101 3 103 2 213 4 104 3 105 2 256 2 5 1 217 2 266 3 78 2 228 1 45 3 274 1 187 1 189 1 90 1 130 1 280 1 192 1 198 1 199 2 26 3 161 3 134 6 243 2 162 9 204 1 164 3 64 10 140 19 
101 2 103 4 213 6 104 2 105 2 256 3 5 1 217 3 73 1 266 2 117 1 224 1 75 1 78 1 228 1 45 3 274 1 18 1 189 1 90 2 192 2 198 2 199 3 26 3 161 2 134 4 243 3 162 14 245 1 203 2 204 2 164 3 64 12 140 26 
101 4 103 4 213 6 104 5 105 4 106 1 256 3 5 1 217 3 73 1 266 4 117 1 224 1 75 1 78 1 13 1 228 1 45 4 274 1 18 1 185 1 85 1 189 1 90 2 130 1 280 1 92 1 192 3 283 1 198 1 199 3 26 5 161 4 134 8 243 3 245 1 162 20 203 1 204 3 164 4 207 1 64 21 140 41 
101 3 103 4 213 8 104 4 105 4 106 1 256 4 5 1 217 4 73 1 266 4 117 1 224 1 75 1 78 1 13 1 228 1 45 4 274 1 18 1 185 1 85 1 189 1 90 2 130 1 280 1 92 1 192 3 283 1 198 1 199 4 26 5 161 3 134 7 243 4 245 1 162 20 203 2 204 3 164 4 207 1 64 18 140 38 
101 7 103 4 213 4 104 8 105 4 106 1 256 2 5 1 217 2 73 1 266 7 117 1 224 1 75 1 78 1 228 1 45 7 274 1 18 1 185 1 85 1 189 1 90 1 130 2 92 1 192 2 283 1 198 1 199 2 26 8 161 7 134 14 243 2 245 1 162 27 203 1 204 4 164 7 207 1 64 25 140 52 252 2 
1 1 213 2 255 1 256 1 71 2 217 1 72 1 110 1 226 2 43 1 46 1 81 1 275 1 50 1 277 1 155 1 21 1 237 2 91 2 199 1 201 2 133 2 243 1 162 1 30 2 139 1 97 1 64 1 167 1 140 2 212 1 
253 1 143 1 254 1 50 1 86 1 234 1 237 2 201 2 114 1 135 1 223 1 286 1 41 1 60 2 226 2 211 1 250 1 251 1 212 1 
143 1 254 1 50 1 234 1 237 1 201 1 135 1 223 1 286 1 41 1 60 2 226 1 211 1 250 1 251 1 65 1 212 1 
50 1 1 1 145 1 255 1 86 1 237 1 259 1 55 1 201 1 226 1 288 1 211 1 17 1 212 1 
253 1 143 1 254 1 50 1 86 1 234 1 237 1 201 1 135 1 223 1 286 1 41 1 60 2 226 1 211 1 250 1 251 1 212 1 
109 1 
10 1 
222 1 137 1 170 1 216 1 119 1 208 1 292 1 
102 2 168 2 68 1 1 4 145 1 255 1 216 2 179 2 40 1 182 1 222 2 226 1 119 2 122 1 123 1 83 1 49 1 50 2 128 1 53 1 157 1 22 1 237 1 196 1 201 1 137 2 246 2 208 1 66 1 212 1 
100 4 18 1 104 1 105 1 216 1 192 1 131 4 26 1 161 1 285 3 222 1 117 1 245 1 224 1 75 1 137 1 164 1 204 1 119 1 208 4 45 1 292 3 
102 1 185 1 104 1 3 1 106 1 214 1 216 1 194 1 177 2 179 1 26 1 27 1 270 1 222 1 137 1 119 1 271 1 208 2 207 1 292 1 
222 1 137 1 107 1 216 1 119 1 
100 1 285 1 164 1 45 1 131 1 292 2 26 1 
102 1 53 1 138 1 246 1 176 1 179 1 
102 3 1 1 0 1 145 2 255 1 216 2 259 1 179 3 222 2 226 4 119 2 276 1 50 1 53 2 237 4 191 2 55 1 196 2 284 2 201 4 29 1 137 1 246 4 208 2 248 1 32 1 212 1 292 2 141 1 
145 1 3 1 154 1 226 1 214 1 172 1 237 1 201 1 
100 1 216 1 191 1 176 1 196 1 285 1 222 1 137 1 138 1 119 1 208 1 292 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
272 1 57 1 
215 1 25 1 
101 1 213 4 185 1 104 1 85 1 106 1 256 2 217 2 92 1 283 1 199 2 26 1 266 2 134 3 243 2 162 4 203 1 207 1 64 4 140 8 
10 1 
101 1 213 2 104 1 256 1 217 1 178 1 199 1 26 1 266 1 161 1 134 2 243 1 162 2 164 1 45 1 64 2 140 4 
101 1 104 1 105 2 130 1 192 1 26 1 266 1 161 1 134 2 162 3 204 1 164 1 45 1 64 4 140 7 
101 4 213 4 104 3 105 2 106 1 256 2 217 2 112 1 266 5 45 2 185 2 19 1 85 1 130 1 92 1 283 1 199 2 26 3 161 2 134 9 243 2 162 11 203 2 164 2 204 2 207 2 64 12 140 23 252 1 
105 1 64 1 140 1 
162 1 204 1 140 1 
101 2 213 2 104 1 256 1 217 1 199 1 178 1 26 1 161 1 266 2 134 4 243 1 162 3 164 1 61 1 45 1 64 3 140 6 
101 1 213 2 104 2 105 1 256 1 5 1 217 1 266 1 117 1 75 1 224 1 45 2 18 1 192 1 199 1 26 2 161 2 134 2 243 1 245 1 162 6 204 1 164 2 64 6 140 12 
101 1 185 1 104 1 106 1 26 1 266 1 134 2 162 3 207 1 64 3 140 6 
101 1 185 1 213 2 85 1 256 1 217 1 92 1 199 1 112 1 266 1 134 2 243 1 162 1 203 1 207 1 64 2 140 3 
101 2 213 2 185 2 104 2 256 1 106 1 5 1 217 1 199 1 26 2 266 3 134 5 243 1 162 5 271 1 207 2 64 5 140 10 
101 1 213 2 256 1 5 1 217 1 199 1 26 1 134 1 243 1 162 2 45 1 140 2 
101 1 213 2 104 1 256 1 5 1 217 1 199 1 26 1 266 1 161 1 134 2 243 1 162 2 164 1 45 1 64 2 140 4 
101 1 213 6 185 1 256 3 5 1 280 1 217 3 199 3 112 1 266 1 134 2 243 3 162 1 203 1 207 1 64 2 140 3 
101 5 213 8 104 4 105 4 106 1 35 1 256 4 5 1 217 4 178 1 266 5 45 3 185 2 51 1 85 1 88 1 130 1 280 1 92 1 192 1 283 1 199 4 26 4 161 3 134 10 243 4 162 14 203 1 204 3 164 3 207 2 64 15 140 29 
213 2 104 1 105 1 256 1 106 1 5 1 217 1 266 2 185 1 85 1 192 1 92 1 283 1 199 1 26 1 134 2 243 1 245 1 162 4 204 1 207 1 64 4 140 8 
101 1 213 4 104 1 105 2 106 1 256 2 5 1 217 2 178 1 266 2 45 1 185 1 85 1 130 1 92 1 192 1 283 1 199 2 26 2 134 3 243 2 245 1 162 6 204 1 164 1 207 1 64 5 140 11 
101 1 213 6 104 3 105 1 106 1 256 3 5 1 217 3 178 1 266 3 117 1 75 1 224 1 45 2 18 1 185 1 85 1 92 1 192 1 283 1 199 3 26 3 161 2 134 4 243 3 245 1 162 9 203 1 204 1 164 2 207 1 64 10 140 19 
101 2 213 6 104 2 105 1 106 1 256 3 5 1 217 3 178 1 266 3 117 1 75 1 224 1 45 2 18 1 185 1 85 1 92 1 192 1 283 1 199 3 26 3 161 1 134 5 243 3 245 1 162 10 203 1 204 1 164 2 207 1 64 7 140 17 
213 2 104 1 105 1 256 1 106 1 5 1 217 1 266 2 185 1 85 1 192 1 92 1 283 1 199 1 26 1 134 2 243 1 245 1 162 4 204 1 207 1 64 4 140 8 
101 1 213 2 104 2 105 1 256 1 5 1 217 1 266 1 117 1 75 1 224 1 45 2 18 1 192 1 199 1 26 2 161 2 134 2 243 1 245 1 162 6 204 1 164 2 64 6 140 12 
101 2 213 8 104 2 105 1 106 1 256 4 5 1 217 4 178 1 266 3 117 1 224 1 75 1 45 2 18 1 185 1 85 1 92 1 192 1 283 1 199 4 26 3 161 1 134 5 243 4 245 1 162 10 203 2 204 1 164 2 207 1 64 8 140 18 
101 3 213 8 104 2 105 1 256 4 5 1 217 4 266 3 117 1 224 1 75 1 45 3 18 1 280 1 192 1 199 4 26 3 161 2 134 6 243 4 245 1 162 9 203 2 204 1 164 3 64 7 140 16 
101 3 185 3 104 1 85 2 106 1 92 1 26 1 266 3 134 6 162 3 207 3 64 4 140 7 
101 1 213 8 104 2 105 1 106 1 256 4 5 1 217 4 266 3 117 1 224 1 75 1 45 2 18 1 185 1 85 1 280 1 92 1 192 1 283 1 199 4 26 3 161 1 134 4 243 4 245 1 162 10 203 2 204 1 164 2 207 1 64 8 140 18 
133 1 89 1 91 1 238 1 71 1 24 1 132 1 
70 1 89 1 158 1 91 1 238 1 71 1 24 1 132 1 133 1 58 1 12 1 291 1 
10 1 145 1 226 1 237 1 201 1 
49 1 1 1 50 1 153 1 145 1 255 1 129 1 258 1 237 1 91 1 238 1 71 2 201 1 133 2 226 1 151 1 47 1 212 1 
1 3 255 2 258 2 71 2 181 1 226 1 79 1 47 1 151 1 49 2 153 1 50 1 129 1 237 1 91 2 238 1 197 1 241 1 201 1 284 1 133 2 289 1 212 1 
1 3 255 2 258 2 71 2 111 1 181 1 116 1 226 2 79 1 47 1 151 1 49 2 50 1 129 1 237 2 91 2 238 1 197 1 241 1 201 2 284 1 133 2 289 1 212 1 
49 1 102 2 168 1 50 1 1 4 145 1 128 1 255 1 157 1 237 3 176 1 111 1 179 2 262 1 241 1 181 1 284 1 201 3 138 1 246 1 226 3 16 1 212 1 
49 1 102 2 168 1 50 1 1 4 145 1 128 1 255 1 157 1 237 3 176 1 111 1 179 2 241 1 181 1 284 1 201 3 138 1 246 1 226 3 122 1 212 1 
50 1 226 1 237 1 63 1 212 1 201 1 
83 1 49 1 69 1 1 3 50 3 145 2 255 2 236 1 237 7 147 1 219 1 201 7 114 1 223 1 226 6 30 1 63 1 44 1 139 1 212 2 99 1 
1 1 213 4 144 1 104 1 255 1 106 1 256 2 258 1 172 1 71 2 217 2 72 1 266 2 114 1 221 1 226 1 43 2 121 1 47 1 151 1 152 1 49 1 185 1 50 1 153 1 85 1 278 1 129 1 155 2 237 1 91 1 238 2 92 1 283 1 199 2 26 1 201 1 134 2 133 2 243 2 162 3 163 1 207 1 64 3 140 6 167 1 212 1 
102 3 68 1 168 1 0 1 1 2 104 2 145 1 3 1 106 1 214 1 107 1 171 1 216 2 176 1 177 2 8 1 179 3 40 1 270 1 222 2 226 1 271 1 119 2 122 1 123 1 185 1 128 1 53 1 237 1 157 1 194 1 26 1 201 1 137 2 138 1 246 2 208 4 207 1 292 2 
83 1 49 1 1 2 50 2 128 1 255 1 237 2 22 1 201 2 114 1 226 2 63 1 212 1 
50 1 1 1 145 1 255 1 237 4 259 1 55 1 111 1 242 1 201 4 114 1 226 4 212 1 
49 1 1 1 50 2 255 1 237 2 239 1 219 1 39 1 284 1 201 2 226 2 231 1 212 1 99 1 
143 1 135 1 50 1 145 1 60 1 226 1 237 1 250 1 212 1 201 1 
1 1 50 1 277 1 255 1 237 2 201 2 114 1 223 1 226 2 139 1 212 1 
1 3 50 2 145 1 255 2 236 1 259 1 237 5 55 1 242 1 284 1 201 5 114 1 226 4 44 1 139 1 212 2 
1 3 50 2 145 1 255 2 259 1 237 5 55 1 242 1 284 1 201 5 114 1 226 4 44 1 96 1 139 1 212 2 
49 1 1 1 50 1 145 1 255 1 129 1 258 1 237 1 91 1 238 1 71 2 201 1 133 2 116 1 226 1 151 1 47 1 212 1 
83 1 49 1 1 1 50 2 255 1 237 1 147 1 219 1 284 1 201 1 226 1 212 1 99 1 
188 1 91 1 71 1 110 1 197 1 195 1 133 1 14 2 97 1 98 1 275 1 
102 2 3 1 257 1 214 1 71 1 110 1 176 1 8 1 179 2 264 1 270 1 227 1 79 1 14 2 184 1 275 1 188 1 157 1 91 1 194 1 197 1 133 1 138 1 209 1 289 1 97 1 98 1 
188 1 98 1 
257 1 227 1 14 1 

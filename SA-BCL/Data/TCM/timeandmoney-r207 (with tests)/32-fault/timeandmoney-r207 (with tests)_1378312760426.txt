#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 (144,166) (144,166) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 (144,166) (144,166) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 (144,166) (144,166) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 (144,166) (144,166) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 254 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 76 254 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 60 (28,121,261) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (18,233) (18,233) (151,309) 335 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 91 17 168 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 326 85 75 41 88 222 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 326 85 75 41 88 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 132 337 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 341 (151,309) 78 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 126 41 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 326 85 75 41 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 91 17 168 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 91 17 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 91 190 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 24 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 24 189 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
70 1 49 1 90 1 252 2 92 2 118 2 3 1 4 1 332 2 33 2 99 1 276 1 76 1 259 7 144 1 108 1 314 7 195 2 245 1 284 1 166 1 86 2 285 3 323 3 68 4 
48 1 70 1 49 1 90 1 92 2 252 2 118 2 3 1 4 1 332 2 33 2 99 1 276 1 76 1 259 9 144 1 108 1 314 9 195 3 284 1 245 2 166 1 86 2 285 4 323 4 68 6 
48 1 70 1 49 1 90 1 92 2 252 2 118 2 3 1 4 1 332 2 33 2 99 1 276 1 76 1 259 9 144 1 108 1 314 9 195 3 284 1 245 2 166 1 86 2 285 4 323 4 68 6 
70 1 49 1 90 1 92 2 252 2 118 2 3 1 4 1 332 2 33 2 99 1 276 1 76 1 259 7 144 1 108 1 314 7 195 2 284 1 245 1 166 1 86 2 285 3 323 3 68 4 
48 1 252 1 92 1 314 4 195 1 3 1 332 1 33 1 245 2 86 1 276 1 76 1 285 2 323 2 259 4 68 3 
108 1 37 1 252 1 314 2 118 1 111 1 3 1 83 1 96 1 332 1 33 1 99 1 86 1 285 1 259 2 312 1 
252 2 314 3 195 1 118 1 111 1 3 1 332 2 284 1 285 2 323 1 259 3 312 1 68 1 
48 1 70 1 49 1 92 1 252 2 314 9 290 1 195 3 118 1 3 1 332 2 33 1 245 2 284 1 254 1 86 1 276 1 76 1 285 4 323 4 259 9 68 7 
48 1 70 1 49 1 92 1 252 2 314 9 290 1 195 3 118 1 3 1 332 2 33 1 245 2 284 1 254 1 86 1 276 1 76 1 285 4 323 4 259 9 68 7 
197 1 
251 1 171 2 295 1 
133 1 174 2 69 2 320 2 210 2 273 1 269 2 238 2 
133 1 174 3 69 2 29 1 327 1 289 1 135 1 273 1 294 1 160 1 140 1 9 1 184 1 74 1 210 2 187 1 141 2 300 1 238 2 107 2 278 1 38 1 18 1 280 1 147 2 42 2 282 1 263 1 320 3 219 2 130 1 170 1 131 1 349 1 288 1 248 1 269 2 
174 1 69 1 320 1 264 1 34 1 210 1 273 1 269 1 238 1 137 1 
174 1 89 1 339 1 242 1 156 1 272 1 194 1 295 1 205 1 320 1 264 1 55 1 211 1 269 1 
174 1 69 1 89 1 339 2 156 2 242 1 272 1 295 1 205 1 320 1 264 1 210 1 211 1 238 1 269 1 
47 1 
47 1 
339 1 156 1 329 1 
47 1 
295 1 
47 1 
202 1 339 1 156 1 230 1 265 1 162 1 47 1 
197 1 
174 2 133 1 69 1 159 1 2 1 64 1 320 2 264 1 210 1 269 2 238 1 
80 1 299 1 330 1 
133 1 174 1 278 1 327 1 289 1 42 1 294 1 148 1 320 1 219 1 184 1 74 1 170 1 141 1 349 1 288 1 
219 1 278 1 250 1 141 1 42 1 
133 1 174 3 69 3 320 3 81 1 210 1 269 3 238 3 
174 1 69 1 320 1 264 1 34 1 269 1 238 1 
174 1 69 1 2 1 64 1 320 1 264 1 210 1 238 1 269 1 
174 1 69 1 320 1 250 1 210 1 2 1 269 1 238 1 
133 1 174 2 69 1 320 2 81 1 194 1 188 1 269 2 238 1 
250 1 
174 2 69 2 80 1 81 1 2 1 320 2 299 1 210 1 238 2 269 2 
133 1 174 1 278 1 327 1 289 1 42 1 294 1 320 1 219 1 184 1 74 1 170 1 141 1 349 1 288 1 
133 1 174 1 278 1 327 1 289 1 42 1 294 1 119 1 320 1 219 1 184 1 46 1 170 1 141 1 288 1 
326 1 231 1 178 1 330 2 135 1 140 2 185 1 9 1 299 2 208 1 258 1 107 2 143 1 80 2 38 1 196 1 147 4 282 2 281 1 263 1 130 1 348 1 131 1 287 1 
174 1 69 1 89 1 320 1 264 1 62 1 269 1 238 1 
174 2 133 1 69 2 250 1 81 1 159 1 2 1 320 2 264 1 210 1 238 2 269 2 
174 2 69 2 320 2 264 1 34 1 62 1 269 2 238 2 
128 1 261 1 
128 1 261 1 
28 1 60 1 
28 1 60 1 
128 1 28 1 261 1 60 1 
128 1 261 1 25 1 
128 1 28 1 60 1 261 1 
128 1 261 1 121 1 
128 1 261 1 25 1 
128 1 261 1 25 1 
225 1 128 1 261 1 
225 1 128 1 261 1 
225 1 128 1 261 1 
174 1 249 2 69 1 156 2 328 1 117 1 180 1 204 1 273 1 6 1 51 1 295 1 137 1 34 1 210 1 238 1 36 2 339 2 261 2 125 2 193 1 343 1 127 2 244 1 319 2 128 2 149 1 246 1 320 1 264 1 269 1 
133 1 249 1 174 2 69 2 156 1 256 1 121 1 257 1 311 1 238 2 36 1 339 1 261 1 125 1 317 1 127 1 344 1 319 1 128 1 246 1 150 1 320 2 132 1 269 2 
33 1 86 1 92 1 
33 1 86 1 96 1 
173 1 33 3 92 2 215 1 96 1 268 1 
173 1 33 2 30 1 92 1 96 1 268 1 
173 1 33 2 92 1 96 1 268 2 
228 1 47 1 
116 1 47 1 
201 2 304 1 202 1 251 2 156 1 326 1 230 1 231 1 232 3 293 2 333 1 162 1 310 1 258 1 339 1 109 1 198 2 150 1 85 1 265 1 169 1 287 1 26 1 171 2 224 1 47 2 
201 2 175 1 202 1 304 1 251 2 156 1 326 1 230 1 231 1 232 3 293 2 333 1 162 1 310 1 258 1 339 1 109 1 198 2 150 1 85 1 265 1 169 1 287 1 171 2 26 1 224 1 47 1 
197 1 
52 1 289 1 
138 1 
289 1 294 1 
289 3 170 1 71 1 306 2 294 1 237 1 
289 1 170 1 294 1 
289 1 82 1 
15 1 163 1 16 1 231 2 176 2 178 4 196 3 243 1 147 9 282 4 95 1 307 1 140 5 298 1 236 2 79 1 258 2 260 1 
15 3 163 1 16 1 231 2 176 2 178 6 196 3 243 1 147 9 282 4 95 1 307 1 140 5 298 1 236 2 79 1 258 2 260 1 
176 2 231 2 178 4 95 1 307 1 140 5 298 1 236 2 79 1 258 2 260 1 15 1 163 1 213 1 16 1 243 1 196 3 147 9 282 4 
326 3 176 4 231 6 178 15 95 1 274 1 72 1 307 2 275 1 140 21 298 1 9 1 236 4 79 2 258 6 260 2 107 2 277 1 163 1 15 8 16 1 38 1 126 1 243 2 196 7 147 41 282 20 84 4 217 1 167 1 85 3 130 1 131 1 286 3 287 3 
231 2 176 2 178 6 95 1 307 1 140 6 9 2 236 2 79 1 258 2 260 1 107 4 277 1 59 1 15 2 163 1 16 1 38 2 243 1 196 4 147 11 282 5 165 1 130 2 131 2 
270 1 92 1 0 1 252 1 271 1 118 1 3 1 96 1 332 1 297 1 33 2 184 1 141 1 259 2 312 1 338 1 192 1 314 2 19 1 111 1 215 1 42 1 318 1 219 1 302 1 86 1 285 1 266 1 288 1 68 1 
270 1 92 1 0 1 252 1 118 1 96 1 332 1 297 1 33 2 184 1 100 1 141 1 259 3 312 1 338 1 192 1 314 3 19 1 111 1 215 1 42 1 318 1 219 1 86 1 347 1 45 1 285 1 266 1 288 1 68 2 
270 1 0 1 92 1 118 1 96 1 297 1 33 2 184 1 141 1 259 2 312 1 338 1 314 2 19 1 111 1 215 1 42 1 219 1 347 1 86 1 45 1 285 1 266 1 288 1 68 2 
278 1 270 2 252 1 0 2 289 1 314 1 118 2 1 1 42 1 294 1 332 1 219 1 184 1 255 1 54 1 100 1 141 1 266 2 288 1 267 1 155 1 259 1 350 1 
270 1 92 1 0 1 252 1 118 1 3 1 96 1 332 1 297 1 33 2 184 1 141 1 259 1 338 1 192 1 314 1 19 1 215 1 42 1 318 1 219 1 302 1 86 1 45 1 266 1 288 1 
94 1 
230 1 177 1 232 2 182 2 139 1 184 1 11 2 141 2 310 1 56 3 106 1 58 2 278 2 315 1 21 2 247 1 65 2 321 1 288 1 114 1 156 4 251 2 289 1 329 6 253 2 293 2 32 1 294 1 295 1 162 1 212 1 339 4 123 2 340 1 164 1 42 2 219 2 220 1 265 1 87 1 129 2 267 1 171 2 350 1 
122 1 339 2 156 2 340 1 315 1 329 2 321 1 87 1 129 1 114 1 56 1 
182 1 123 1 339 1 156 1 321 1 87 1 340 1 315 1 114 1 
58 1 122 1 339 2 123 1 156 2 340 1 315 1 329 2 182 1 321 1 87 1 129 1 114 1 56 1 
174 1 230 1 272 2 232 1 273 1 181 1 137 1 182 3 139 1 11 2 56 3 238 1 58 4 315 1 199 1 21 2 149 1 320 1 65 2 321 1 114 1 69 1 156 4 251 2 329 7 253 2 32 1 293 1 73 1 295 2 34 1 210 1 162 1 122 1 123 3 339 4 39 1 340 1 218 1 264 1 220 1 265 1 129 4 87 1 269 1 
156 3 251 2 230 1 272 1 329 4 232 1 253 2 32 1 293 1 295 2 182 2 139 1 11 2 162 1 56 2 58 2 123 2 339 3 340 1 164 1 315 1 21 2 65 2 220 1 321 1 265 1 129 2 87 1 171 2 114 1 
251 2 156 3 230 1 272 1 329 4 232 1 253 2 32 1 293 1 73 1 295 1 182 2 139 1 11 2 162 1 56 2 58 2 123 2 339 3 39 1 340 1 315 1 199 1 21 2 65 2 220 1 321 1 265 1 129 2 87 1 114 1 
251 2 156 3 230 1 272 1 329 4 232 1 253 2 32 1 293 1 73 1 295 1 182 2 139 1 11 2 162 1 56 2 58 2 123 2 339 3 39 1 340 1 315 1 199 1 21 2 65 2 220 1 321 1 265 1 129 2 87 1 114 1 
156 3 230 1 272 1 329 4 232 1 292 1 293 1 295 1 182 2 8 1 139 1 207 1 11 2 162 1 103 2 56 2 58 2 123 2 339 3 340 1 315 1 199 1 21 2 220 1 321 1 265 1 129 2 87 1 171 2 114 1 200 2 
251 2 156 3 230 1 272 1 329 5 232 1 253 2 32 1 293 1 73 1 295 1 181 1 182 3 139 1 11 2 162 1 56 2 58 3 123 3 339 3 39 1 340 1 315 1 199 1 21 2 65 2 220 1 321 1 265 1 129 3 87 1 114 1 
251 2 156 3 230 1 272 1 329 5 232 1 253 2 32 1 293 1 73 1 295 1 181 1 182 3 139 1 11 2 162 1 56 2 58 3 123 3 339 3 39 1 340 1 315 1 199 1 21 2 65 2 220 1 321 1 265 1 129 3 87 1 114 1 
156 3 230 1 272 1 329 4 232 1 292 1 293 1 295 1 182 2 139 1 11 2 162 1 103 2 56 2 58 2 123 2 339 3 340 1 164 1 315 1 21 2 220 1 321 1 265 1 129 2 87 1 171 2 114 1 200 2 
107 2 143 1 9 1 38 1 197 1 130 1 131 1 135 1 263 1 
133 1 29 1 326 2 231 2 178 2 330 11 135 1 206 1 140 8 9 2 299 11 77 1 258 1 300 1 107 4 15 1 80 4 38 2 126 1 146 1 196 1 147 14 282 6 84 3 263 2 167 1 23 1 85 2 153 1 130 2 131 2 286 3 287 1 
107 2 29 1 250 1 38 1 147 2 135 1 282 1 263 1 140 1 9 1 23 1 130 1 131 1 191 1 300 1 142 1 
107 2 278 1 250 1 38 1 18 1 147 1 135 1 42 1 233 1 282 1 263 1 219 1 9 1 335 1 23 1 309 1 130 1 141 1 131 1 300 1 
174 1 69 1 29 1 91 1 305 1 289 3 271 1 135 2 294 3 140 1 184 3 9 2 308 1 334 1 141 4 102 1 300 1 238 1 143 1 107 4 240 1 278 2 17 1 81 1 38 2 147 2 42 4 282 1 263 2 320 1 219 4 168 1 170 1 130 2 131 2 288 2 267 1 223 1 350 1 269 1 248 1 
174 1 69 1 326 1 231 1 178 1 330 1 2 1 135 1 140 1 9 1 299 1 210 1 258 1 105 1 238 1 107 2 80 1 38 1 196 1 147 3 282 2 263 1 320 1 23 1 85 1 130 1 131 1 287 1 269 1 
143 1 107 2 15 1 80 1 326 1 38 1 231 1 178 1 330 1 147 2 135 1 281 1 263 1 140 2 9 1 299 1 130 1 131 1 
143 1 107 2 80 1 38 1 178 1 196 1 330 1 147 2 135 1 282 2 263 1 9 1 299 1 130 1 131 1 348 1 287 1 258 1 
143 1 107 2 15 1 80 2 326 1 38 1 231 1 178 2 196 1 330 2 147 4 135 1 282 2 263 1 140 2 9 1 299 2 85 1 130 1 131 1 287 1 258 1 
107 2 15 1 80 1 326 1 38 1 231 1 178 1 330 1 147 2 135 1 281 1 263 1 140 2 9 1 299 1 334 1 130 1 131 1 
107 2 80 1 38 1 178 1 196 1 330 1 147 2 135 1 282 2 263 1 9 1 299 1 334 1 130 1 131 1 348 1 287 1 258 1 
107 2 15 1 80 2 326 1 38 1 231 1 178 2 196 1 330 2 147 4 135 1 282 2 263 1 140 2 9 1 299 2 334 1 85 1 130 1 131 1 287 1 258 1 
107 2 15 1 80 2 326 1 38 1 231 1 178 2 196 1 330 2 135 1 147 4 282 2 263 1 140 2 9 1 299 2 85 1 130 1 131 1 287 1 258 1 
133 1 174 1 29 1 327 1 289 1 135 1 294 1 140 1 184 1 9 1 74 1 141 1 300 1 107 2 278 1 38 1 18 1 147 2 42 1 282 1 263 1 219 1 320 1 170 1 130 1 349 1 131 1 288 1 
133 1 174 1 29 1 327 1 289 1 135 1 5 1 294 1 119 1 140 1 184 1 9 1 141 1 300 1 107 2 278 1 38 1 147 2 42 1 282 1 263 1 219 1 320 1 170 1 46 1 130 1 131 1 288 1 
107 2 15 1 80 2 326 1 38 1 231 1 178 2 196 1 330 2 147 4 135 1 282 2 263 1 140 2 9 1 299 2 23 1 85 1 130 1 131 1 287 1 258 1 
174 1 326 1 231 1 327 1 178 2 289 1 271 1 330 2 135 1 233 1 294 1 140 2 184 1 9 1 299 2 74 1 141 1 258 1 107 2 15 1 80 2 38 1 18 1 196 1 147 4 42 1 282 2 263 1 219 1 320 1 85 1 170 1 130 1 349 1 131 1 287 1 288 1 
174 1 69 1 326 1 231 1 178 1 2 1 330 1 135 1 140 2 9 1 299 1 210 1 258 1 238 1 107 2 15 1 80 1 38 1 147 3 282 1 263 1 320 1 23 1 66 1 85 1 130 1 131 1 287 1 269 1 
229 1 326 1 157 1 231 1 178 2 235 1 140 4 9 2 161 1 10 1 258 1 107 4 15 1 38 2 126 1 196 1 262 1 147 9 84 2 282 5 165 1 167 1 85 1 130 2 88 1 131 2 286 1 287 1 222 1 
229 1 326 1 157 1 231 1 178 2 235 1 140 4 9 2 161 1 10 1 258 1 107 4 15 1 38 2 126 1 196 1 262 1 147 9 84 2 282 5 165 1 167 1 85 1 130 2 88 1 131 2 286 1 287 1 222 1 
324 1 226 1 229 2 326 6 176 1 231 6 178 10 235 1 140 19 9 1 236 1 75 1 77 2 258 5 107 2 163 1 15 4 16 1 38 1 126 2 196 6 41 1 262 1 147 36 84 4 282 17 165 1 346 1 167 2 85 6 130 1 88 1 131 1 286 4 287 5 222 1 
229 1 326 1 157 1 231 1 178 2 235 1 140 4 9 2 161 1 258 1 107 4 15 1 38 2 126 1 196 1 262 1 147 9 316 1 84 2 282 5 165 1 167 1 85 1 130 2 88 1 131 2 286 1 287 1 222 1 
324 1 226 1 229 2 326 2 231 2 178 1 235 2 140 9 9 2 75 1 258 1 277 1 107 4 38 2 126 2 196 1 41 1 262 1 147 17 282 8 84 2 165 1 346 1 85 2 130 2 88 2 131 2 286 2 287 1 222 1 
249 1 36 1 261 1 145 1 204 1 343 1 6 1 127 1 244 1 128 1 319 1 
256 1 121 1 
319 1 36 1 128 1 249 1 261 1 154 1 115 1 127 1 35 1 
174 1 249 1 69 1 156 1 328 1 117 1 180 1 204 1 273 1 6 1 51 1 295 1 137 1 34 1 210 1 238 1 36 1 339 1 261 1 125 2 193 1 343 1 127 1 244 1 319 1 128 1 149 1 246 1 320 1 264 1 269 1 
174 1 249 1 69 1 156 1 328 1 117 1 180 1 204 1 273 1 6 1 51 1 295 1 137 1 34 1 210 1 238 1 36 1 339 1 261 1 125 2 193 1 343 1 127 1 244 1 319 1 128 1 149 1 246 1 320 1 264 1 269 1 
174 1 249 1 69 1 156 1 328 1 117 1 180 1 204 1 273 1 6 1 51 1 295 1 137 1 34 1 210 1 238 1 36 1 339 1 261 1 125 2 193 1 343 1 127 1 244 1 319 1 128 1 149 1 246 1 320 1 264 1 269 1 
313 1 25 1 203 1 
313 1 25 1 203 1 
225 1 31 1 
225 1 313 1 31 1 
257 1 311 1 
337 1 319 1 36 1 128 1 249 1 261 1 125 1 117 1 180 1 132 1 127 1 47 1 
25 1 203 1 
225 1 313 1 31 1 
174 1 320 1 322 1 269 1 
134 1 338 1 270 1 92 1 271 1 19 1 215 1 42 2 96 1 318 1 33 2 234 1 219 2 184 1 221 1 86 1 45 1 141 2 288 1 
338 1 270 1 92 1 19 1 215 1 42 1 96 1 318 1 33 2 234 1 219 1 184 1 86 1 45 1 141 1 303 1 288 1 
278 1 270 1 289 1 42 1 294 1 43 1 219 1 184 1 221 1 54 1 141 1 288 1 267 1 350 1 
134 1 338 1 270 1 92 1 19 1 215 1 42 1 96 1 318 1 33 2 234 1 219 1 184 1 221 1 86 1 45 1 141 1 288 1 
216 1 
197 1 
65 1 220 1 230 1 265 1 162 1 232 1 293 1 32 1 
278 1 230 1 289 2 341 1 232 1 42 1 294 1 52 1 219 1 184 2 220 1 151 1 53 1 265 1 78 1 170 1 162 1 141 1 310 1 288 1 237 1 
220 1 230 1 265 1 126 1 286 1 41 1 162 1 232 1 293 1 84 1 
174 1 69 1 156 1 230 1 176 1 231 2 232 2 273 1 95 1 293 2 73 1 137 1 236 1 34 1 210 1 162 1 258 1 260 1 238 1 339 1 109 1 149 1 320 1 264 1 220 1 265 1 169 2 269 1 
220 1 230 1 265 1 61 1 162 1 
201 2 326 1 251 2 231 1 109 1 198 2 232 2 293 2 85 1 169 1 287 1 171 2 258 1 
219 1 278 1 141 1 42 1 
220 1 230 1 177 1 265 1 162 1 232 1 310 1 293 1 
319 1 36 1 291 1 
183 1 319 1 36 1 257 1 239 1 
319 1 36 1 291 1 
319 1 36 1 291 1 
319 1 36 1 214 1 
319 1 36 1 214 1 
319 1 36 1 214 1 
319 1 36 1 
128 1 261 1 
231 2 176 2 178 4 95 1 140 5 9 1 236 2 258 2 260 1 107 2 15 1 163 1 16 1 38 1 126 1 196 3 41 1 147 10 282 5 84 1 165 1 130 1 286 1 131 1 
326 1 176 2 231 3 178 5 95 1 140 7 9 2 236 2 258 2 260 1 57 1 107 4 163 1 15 2 16 1 38 2 126 1 196 3 41 1 147 13 282 6 84 2 165 1 167 1 85 1 130 2 131 2 286 1 
277 1 324 1 107 4 226 1 326 2 38 2 231 2 178 1 126 1 196 1 41 1 147 11 84 1 282 5 165 1 140 6 346 1 9 2 75 1 85 2 130 2 131 2 286 1 287 1 258 1 
324 1 107 2 226 1 326 2 38 1 231 2 178 1 126 1 196 1 41 1 147 10 84 1 282 4 165 1 140 6 346 1 9 1 75 1 85 2 130 1 131 1 286 1 287 1 258 1 
231 2 176 2 178 4 95 1 140 5 9 1 236 2 258 2 260 1 107 2 15 1 163 1 16 1 38 1 126 1 196 3 41 1 147 10 282 5 84 1 165 1 130 1 286 1 131 1 
324 1 107 2 226 1 326 2 38 1 231 2 178 1 126 1 196 1 41 1 147 10 84 1 282 4 165 1 140 6 346 1 9 1 75 1 85 2 130 1 131 1 286 1 287 1 258 1 
324 1 226 1 326 2 231 2 178 1 140 6 9 3 75 1 258 1 57 1 107 6 277 1 38 3 126 1 196 1 41 1 147 11 282 5 84 1 165 1 346 1 85 2 130 3 131 3 286 1 287 1 
324 1 226 1 326 2 157 1 231 2 178 2 140 6 9 3 75 1 258 1 107 6 277 1 38 3 126 1 196 2 41 1 147 11 282 5 84 1 165 1 346 1 85 2 130 3 131 3 286 1 287 1 
163 1 15 3 16 1 231 1 176 3 178 6 196 3 147 5 282 3 95 1 140 2 236 3 258 1 260 1 
324 1 226 1 326 2 157 1 231 2 178 1 140 6 9 3 75 1 258 1 107 6 277 1 38 3 126 1 196 1 41 1 147 11 282 5 84 1 165 1 346 1 85 2 130 3 131 3 286 1 287 1 
176 2 231 2 178 6 95 1 140 6 9 2 236 2 258 2 260 1 277 1 107 4 163 1 15 3 16 1 38 2 196 3 147 12 282 6 130 2 131 2 
197 1 
107 2 15 1 326 1 38 1 231 1 178 2 196 1 147 4 282 2 140 2 9 1 85 1 130 1 131 1 287 1 258 1 57 1 
15 1 326 1 231 1 178 2 126 1 196 1 147 7 84 2 282 4 140 3 167 1 85 1 286 1 287 1 258 1 
326 2 176 2 231 4 178 6 95 1 140 10 9 1 236 2 77 1 258 4 260 1 277 1 107 2 163 1 15 2 16 1 38 1 146 1 196 4 147 20 282 10 84 2 167 1 85 2 130 1 286 2 131 1 287 2 
147 1 282 1 84 1 
140 1 286 1 147 1 
107 2 15 1 326 1 38 1 231 1 178 3 196 2 147 6 282 3 140 3 9 1 85 1 130 1 131 1 287 1 12 1 258 1 57 1 
324 1 107 2 226 1 326 2 38 1 231 2 178 1 126 1 196 1 41 1 147 10 84 1 282 4 165 1 140 6 346 1 9 1 75 1 85 2 130 1 131 1 286 1 287 1 258 1 
15 1 231 1 176 1 178 2 196 1 147 6 282 3 140 3 236 1 258 1 260 1 
277 1 107 2 15 1 163 1 16 1 38 1 176 1 178 2 196 1 63 1 147 3 282 2 140 1 9 1 236 1 130 1 131 1 
107 2 15 2 38 1 176 2 231 2 178 5 196 3 147 10 95 1 282 5 165 1 140 5 9 1 236 2 130 1 131 1 258 2 260 1 
107 2 15 1 326 1 38 1 231 1 178 1 147 2 165 1 140 2 9 1 130 1 131 1 
107 2 15 1 326 1 38 1 231 1 178 2 196 1 147 4 282 2 165 1 140 2 9 1 85 1 130 1 131 1 287 1 258 1 
277 1 107 6 15 1 38 3 157 1 176 1 178 2 196 1 63 1 147 3 282 2 165 1 140 1 9 3 236 1 130 3 131 3 
326 2 176 2 157 1 231 4 178 8 95 1 274 1 275 1 140 13 9 4 236 2 258 4 260 1 57 1 277 1 107 8 163 1 15 4 16 1 38 4 126 1 196 4 147 26 282 13 84 3 217 1 165 1 85 2 130 4 131 4 286 3 287 2 
133 1 174 1 320 1 325 1 194 1 188 1 269 1 
133 1 174 1 124 1 325 1 194 1 179 1 296 1 320 1 22 1 188 1 104 1 269 1 
219 1 278 1 197 1 141 1 42 1 
133 1 174 2 69 1 278 1 81 1 327 1 289 1 42 1 294 1 320 2 219 1 184 1 170 1 141 1 349 1 288 1 238 1 269 1 
133 1 174 2 69 1 89 1 327 1 289 3 136 1 294 2 97 1 184 1 141 1 238 2 242 1 81 1 82 1 42 1 219 1 320 2 264 1 170 2 349 1 288 1 269 2 
133 1 174 2 69 1 89 1 327 1 289 3 136 1 294 2 119 1 97 1 184 1 141 2 101 1 238 2 242 1 81 1 82 1 42 2 219 2 320 2 264 1 170 2 288 1 269 2 
174 1 69 1 156 2 289 4 272 1 329 1 273 1 306 1 136 1 294 1 137 1 295 1 205 1 52 1 97 1 184 1 34 1 210 1 209 1 141 2 238 1 13 1 278 1 339 2 82 1 42 2 149 1 320 1 219 2 264 1 170 1 288 1 269 1 
227 1 278 1 339 2 156 2 289 4 272 1 82 1 329 1 306 1 136 1 42 3 294 1 295 1 205 1 97 1 52 1 219 3 184 1 170 1 141 3 101 1 288 1 
219 1 184 1 141 1 288 1 42 1 301 1 
240 1 278 2 91 1 17 1 305 2 289 3 271 1 93 1 42 3 294 3 219 3 184 4 308 2 168 1 170 2 141 3 102 1 288 2 237 1 
174 2 133 1 176 2 231 2 178 4 271 1 135 2 233 1 95 1 140 4 9 2 184 1 236 2 309 1 141 1 238 1 107 4 15 1 241 1 16 1 18 1 196 3 147 8 282 4 320 2 23 1 288 1 69 1 327 1 289 1 159 1 294 1 74 1 258 2 260 1 163 1 38 2 81 1 42 1 263 2 219 1 264 1 130 2 170 1 349 1 131 2 269 1 
47 1 
289 2 306 1 42 1 301 1 294 1 138 1 219 1 184 2 53 1 170 1 141 1 288 1 237 1 
172 1 278 1 289 1 271 1 42 4 294 1 219 4 184 1 141 4 101 1 267 1 288 1 350 1 
240 1 305 1 289 1 20 1 136 1 42 2 294 1 219 2 184 2 308 1 170 1 141 2 102 1 288 1 
33 1 219 1 184 1 278 1 86 1 19 1 141 1 288 1 42 1 96 1 
219 2 184 1 152 1 45 1 271 1 141 2 288 1 42 2 
240 1 278 1 17 1 91 1 305 1 289 2 271 1 42 2 294 2 219 2 184 2 308 1 170 1 141 2 288 1 102 1 
240 1 278 1 91 1 305 1 289 2 271 1 42 2 294 2 219 2 184 2 308 1 170 1 141 2 288 1 102 1 190 1 
133 1 174 2 69 1 278 1 81 1 327 1 289 1 42 1 294 1 119 1 320 2 219 1 184 1 170 1 141 1 288 1 238 1 269 1 
305 1 289 1 93 1 136 1 42 1 294 1 219 1 184 2 308 1 170 1 141 1 288 1 237 1 
44 2 24 1 40 1 322 1 
44 2 158 1 24 1 40 1 336 1 322 1 189 1 47 1 
24 1 40 1 
44 1 336 1 189 1 
197 1 
252 1 285 1 314 1 111 1 259 1 312 1 332 1 
314 1 118 1 266 1 
108 2 252 1 314 3 3 1 111 1 7 1 332 1 98 1 345 1 285 1 259 3 312 1 
245 1 252 1 285 1 314 2 111 1 259 2 312 1 68 1 332 1 
252 1 92 1 314 1 3 1 332 1 33 1 276 1 86 1 285 1 323 1 259 1 
252 1 285 1 314 1 3 1 259 1 312 1 332 1 
252 1 314 1 111 1 3 1 259 1 312 2 332 1 
252 2 279 1 314 2 3 1 332 2 285 1 67 1 259 2 27 1 312 1 
70 1 49 1 252 1 314 3 195 1 111 1 3 1 332 1 285 2 323 1 259 3 312 1 68 2 
252 1 92 1 314 2 111 1 3 1 215 1 96 1 332 1 33 2 86 1 113 1 285 1 259 2 312 1 68 1 
48 1 252 2 314 4 195 1 111 1 3 1 332 2 245 1 285 2 323 1 259 4 312 1 68 2 
252 1 285 1 314 1 111 1 3 1 259 1 312 1 332 1 
108 1 252 1 314 4 195 1 111 2 332 1 98 1 345 1 112 1 285 3 323 1 259 4 312 2 68 2 
252 1 314 2 290 1 3 1 111 1 331 1 283 1 332 1 285 1 259 2 312 1 68 1 
108 2 252 1 314 3 342 1 3 1 111 1 332 1 98 1 345 2 285 1 259 3 312 1 
14 1 285 2 110 2 50 1 
120 1 252 1 314 1 3 1 259 1 332 1 
49 1 252 1 285 1 314 2 111 1 3 1 259 2 312 1 68 1 332 1 
186 1 
252 1 285 1 314 1 111 1 3 1 259 1 312 1 332 1 
49 1 108 1 252 1 314 3 3 1 111 1 332 1 285 1 259 3 68 1 312 1 
112 1 285 1 195 1 323 1 
285 1 312 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (264,319) 209 (73,350) (73,350) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (264,319) 209 (73,350) (73,350) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (264,319) 209 (73,350) (73,350) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (264,319) 209 (73,350) (73,350) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (149,189,305,332) (149,189,305,332) 64 346 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (149,189,305,332) (149,189,305,332) 64 346 218 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (149,189,305,332) (149,189,305,332) 64 346 218 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 76 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 339 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 63 (56,99,342) (40,237,313) (40,237,313) (40,237,313) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 299 340 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 353 302 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 77 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 77 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 79 153 225 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 77 170 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 77 170 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 163 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 290 133 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 63 (56,99,342) (56,99,342) (56,99,342) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 91 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 328 315 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 293 265 (238,256) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 293 265 (161,348) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (149,189,305,332) (149,189,305,332) 64 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (149,189,305,332) (149,189,305,332) 64 29 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 1 350 1 338 1 332 1 305 1 189 1 185 1 157 1 209 1 32 1 73 1 
319 1 350 1 338 1 332 1 305 1 189 1 185 1 157 1 209 1 32 1 73 1 
319 1 350 1 338 1 332 1 305 1 189 1 185 1 157 1 209 1 32 1 73 1 
319 1 350 1 338 1 332 1 305 1 189 1 185 1 157 1 209 1 32 1 73 1 
346 1 149 1 332 2 305 1 189 1 185 1 64 1 32 1 
337 1 278 1 338 1 305 1 349 1 10 1 185 1 72 1 211 1 332 1 189 1 222 1 157 1 32 1 63 1 
337 1 289 1 149 1 305 2 349 1 185 1 245 2 264 1 332 3 189 2 285 1 157 1 32 3 
346 1 289 2 149 5 305 2 185 1 245 2 218 1 261 1 203 1 264 1 332 7 214 1 189 2 285 2 157 1 64 1 32 6 
346 1 289 2 149 5 305 2 185 1 245 2 218 1 261 1 203 1 264 1 332 7 214 1 189 2 285 2 157 1 64 1 32 6 
58 1 307 1 4 1 
102 1 244 2 4 1 
186 1 1 2 164 2 23 1 213 2 140 2 83 2 141 2 
1 2 204 1 2 1 23 1 159 1 140 3 26 1 113 2 141 2 318 1 186 1 162 2 229 1 164 2 165 1 230 1 231 2 213 3 83 2 232 1 5 2 6 1 303 1 172 1 11 1 152 1 308 1 14 2 219 1 354 1 93 1 15 1 49 1 333 1 355 1 221 1 238 1 265 1 51 1 
186 1 1 1 308 1 255 1 164 1 213 1 140 1 83 1 101 1 141 1 
1 2 140 2 101 1 272 1 141 1 186 1 164 1 213 2 58 1 83 1 4 1 33 1 121 1 85 1 148 1 255 1 67 1 13 1 74 1 308 2 132 1 
121 2 1 2 85 2 255 1 67 1 140 2 101 1 272 1 141 2 186 1 74 1 308 2 164 2 213 2 58 1 83 2 4 1 33 1 132 1 
242 1 
242 1 
121 1 85 1 68 1 
242 1 
4 1 
242 1 
223 1 121 1 85 1 242 1 66 1 129 1 284 1 
23 1 307 1 
224 1 1 2 23 2 140 2 141 1 80 1 164 1 213 2 83 1 
52 1 124 1 176 1 
6 1 172 1 23 1 257 1 140 1 11 1 113 1 162 1 152 1 308 1 230 1 231 1 213 1 15 1 333 1 238 1 265 1 51 1 
286 1 1 1 6 1 172 1 124 1 140 2 11 1 113 1 141 1 162 1 152 1 230 1 231 1 15 1 213 2 238 1 83 1 265 1 253 1 51 1 
1 3 164 1 23 1 213 3 140 3 83 3 253 1 141 3 
1 1 308 1 213 1 140 1 83 1 101 1 141 1 
224 1 1 1 80 1 308 1 164 1 213 1 140 1 83 1 141 1 
224 1 1 3 227 1 2 1 140 4 272 1 141 3 186 1 318 1 229 1 231 1 230 1 5 1 6 1 67 1 11 1 74 1 152 1 14 2 15 1 333 1 238 1 286 1 204 1 23 1 159 1 113 1 162 1 164 2 213 4 83 3 253 1 121 1 85 1 169 1 172 1 303 1 308 2 93 1 354 1 355 1 221 1 265 1 132 1 51 1 
1 2 262 1 23 1 213 2 140 2 83 1 13 1 141 1 253 1 
224 1 121 1 286 1 85 1 1 3 227 1 67 1 140 3 175 1 272 1 141 3 74 1 308 1 164 1 213 3 83 3 4 1 253 2 132 1 
224 1 1 2 52 1 124 1 140 2 141 2 164 1 213 2 83 2 253 1 
6 1 172 1 23 1 140 1 11 1 113 1 162 1 152 1 308 1 231 1 230 1 213 1 15 1 333 1 238 1 265 1 51 1 
6 1 172 1 23 1 183 1 140 1 11 1 113 1 161 1 162 1 152 1 308 1 231 1 230 1 213 1 15 1 333 1 265 1 
158 1 204 1 52 2 2 1 207 1 318 1 229 2 341 1 187 1 144 1 62 1 5 4 233 1 303 1 123 1 124 2 176 2 14 2 155 1 354 1 49 2 221 1 95 1 334 1 
1 1 308 1 213 1 140 1 83 1 61 1 132 1 141 1 
224 1 286 1 1 5 23 1 140 5 13 1 235 1 141 4 262 1 320 1 164 1 213 5 83 4 253 2 
1 2 308 1 213 2 140 2 83 2 61 1 101 1 141 2 
135 1 53 1 
135 1 53 1 
184 1 125 1 
184 1 125 1 
184 1 125 1 
135 1 53 1 190 1 
135 1 53 1 190 1 
135 1 53 1 190 1 
100 1 135 1 53 1 
288 1 135 2 53 2 184 1 125 1 301 1 
135 1 53 1 12 1 
135 1 53 1 12 1 
135 1 53 1 12 1 
121 2 85 2 135 2 53 2 71 2 234 2 246 1 27 1 251 1 321 1 322 3 117 2 119 1 103 1 4 1 96 2 94 2 191 1 301 1 
1 2 336 1 267 1 98 1 135 1 100 1 23 1 138 1 53 1 290 1 140 2 141 2 246 1 213 2 322 1 117 1 300 1 83 2 121 1 85 1 71 1 234 1 47 1 96 1 
278 1 228 1 63 1 
278 1 10 1 63 1 
151 1 78 1 278 3 228 2 10 1 345 1 
151 1 78 1 278 2 228 1 324 1 10 1 
151 2 78 1 278 2 228 1 10 1 
242 1 76 1 
242 2 22 1 156 1 150 1 
223 1 158 1 336 1 242 2 25 1 114 1 343 1 166 1 31 1 62 1 121 1 85 1 86 2 192 1 145 1 66 1 90 1 129 1 284 1 20 1 
223 1 158 1 336 1 242 1 25 1 339 1 114 1 343 1 166 1 31 1 62 1 121 1 85 1 86 2 192 1 145 1 66 1 90 1 129 1 284 1 20 1 
230 1 202 1 307 1 
154 1 230 1 
142 1 
6 1 230 1 
152 1 266 1 6 1 201 1 202 2 230 3 
152 1 6 1 230 1 
230 1 196 1 
5 4 277 1 147 1 134 1 123 2 69 1 229 1 46 1 351 1 155 1 48 1 57 1 49 3 312 1 144 3 104 2 62 1 
5 5 277 1 147 1 134 1 123 2 69 1 229 2 46 1 351 1 155 1 48 1 57 1 49 3 312 1 144 3 104 2 62 1 
5 4 277 1 147 1 134 1 123 2 69 1 330 1 229 1 46 1 351 1 155 1 48 1 57 1 49 3 312 1 144 3 104 2 62 1 
5 2 134 1 123 1 69 1 229 1 57 2 49 1 144 1 104 1 178 1 
318 2 229 4 250 1 57 1 144 5 104 2 62 1 5 8 277 1 147 1 303 2 123 4 217 1 69 1 9 1 46 1 14 4 351 1 155 1 48 1 354 2 49 4 312 1 221 2 
0 1 228 1 185 1 113 1 273 1 162 1 342 1 81 1 231 1 189 1 63 1 32 1 345 1 34 1 172 1 278 2 195 1 305 1 40 1 10 1 44 1 15 1 332 1 237 1 313 1 157 1 
0 1 337 1 228 1 245 1 113 1 273 1 162 1 342 1 231 1 28 1 189 1 63 1 32 3 345 1 34 1 172 1 278 2 195 1 36 1 149 2 305 1 349 1 10 1 44 1 75 1 15 1 332 3 237 1 313 1 222 1 157 1 
337 1 228 1 245 1 113 1 273 1 162 1 342 1 231 1 32 2 63 1 345 1 34 1 172 1 278 2 195 1 36 1 149 2 349 1 10 1 44 1 75 1 15 1 332 2 313 1 222 1 157 1 
254 1 34 2 6 1 172 1 37 1 195 2 269 1 305 1 11 1 107 1 113 1 45 1 273 2 162 1 230 1 231 1 15 1 28 1 332 1 189 1 157 2 325 1 32 1 
0 1 228 1 185 1 113 1 273 1 162 1 342 1 231 1 189 1 63 1 32 1 345 1 34 1 172 1 278 2 195 1 36 1 305 1 40 1 10 1 44 1 15 1 332 1 237 1 313 1 157 1 
194 1 
121 1 223 1 86 1 85 1 205 1 66 1 216 1 25 1 68 2 11 1 113 1 162 1 114 1 295 1 340 1 231 1 284 1 299 1 
1 1 205 1 140 1 317 1 54 1 272 1 213 1 167 1 58 2 4 2 121 2 85 2 148 1 67 1 279 1 68 2 259 2 13 1 74 1 308 1 353 1 220 1 314 1 132 1 
121 2 85 2 1 1 148 1 67 1 279 1 140 1 259 3 54 1 317 1 272 1 13 1 74 1 308 1 213 1 58 2 167 1 118 1 314 1 4 2 132 1 
1 1 205 1 140 1 317 1 54 1 272 1 213 1 167 1 58 2 118 1 4 2 121 2 85 2 148 1 302 1 67 1 279 1 68 2 259 3 13 1 74 1 308 1 353 1 220 1 314 1 132 1 
121 1 85 1 205 1 220 1 68 1 
223 1 1 1 205 1 25 1 244 1 140 1 317 1 54 1 272 1 79 1 295 1 212 2 102 1 213 1 167 1 58 2 275 1 118 1 4 2 121 2 84 1 86 1 85 2 302 1 148 1 66 1 67 1 68 2 279 1 126 2 42 2 259 3 13 1 74 1 308 1 353 1 311 1 284 1 314 1 132 1 
77 1 121 2 85 2 1 1 148 1 67 1 279 1 140 1 259 2 54 1 317 1 272 1 13 1 74 1 308 1 213 1 58 2 167 1 314 1 4 2 132 1 
77 1 121 2 85 2 1 1 148 1 67 1 279 1 140 1 259 2 54 1 317 1 272 1 13 1 74 1 308 1 213 1 58 2 167 1 314 1 4 2 132 1 
1 1 225 1 140 1 317 1 54 1 272 1 79 1 212 1 213 1 167 1 58 2 4 2 121 2 85 2 148 1 67 1 279 1 42 1 259 2 13 1 74 1 308 1 153 1 314 1 132 1 
77 1 1 1 140 1 317 1 54 1 272 1 213 1 167 1 58 2 118 1 4 2 121 2 85 2 170 1 148 1 302 1 67 1 279 1 68 1 259 3 13 1 74 1 308 1 353 1 314 1 132 1 
77 1 1 1 140 1 317 1 54 1 272 1 213 1 167 1 58 2 118 1 4 2 121 2 85 2 170 1 148 1 302 1 67 1 279 1 68 1 259 3 13 1 74 1 308 1 353 1 314 1 132 1 
223 1 1 1 205 1 244 1 140 1 317 1 54 1 272 1 79 1 295 1 212 2 213 1 167 1 58 2 59 2 275 1 118 1 4 2 121 2 86 1 85 2 302 1 171 1 148 1 66 1 89 1 67 1 68 2 279 1 42 2 259 3 13 1 74 1 308 1 353 1 284 1 314 1 132 1 
5 3 204 1 277 1 147 1 303 1 52 1 123 1 2 1 23 1 124 1 307 1 176 1 318 1 229 1 46 1 14 2 155 1 48 1 354 1 187 1 49 2 144 1 312 1 221 1 104 1 62 1 
158 2 97 1 204 1 21 3 52 4 2 2 23 1 206 1 318 2 229 6 341 1 144 2 62 2 5 14 328 1 146 3 145 2 87 1 303 2 122 1 123 1 304 1 124 11 306 1 176 11 351 1 14 4 219 1 155 1 354 2 49 8 355 1 221 2 
286 1 1 1 204 1 52 1 2 1 23 1 140 1 141 1 318 1 229 1 82 1 213 1 83 1 253 1 5 2 303 1 306 1 308 1 199 1 14 2 219 1 354 1 49 1 333 1 355 1 221 1 130 1 
286 1 1 1 287 1 204 1 2 1 140 1 113 1 141 1 318 1 162 1 163 1 229 2 249 1 231 1 213 1 188 1 83 1 253 1 5 2 303 1 306 1 11 1 14 2 354 1 355 1 221 1 
204 1 2 1 243 1 26 1 113 2 162 2 318 1 229 1 296 1 116 1 230 2 231 2 143 1 325 1 5 2 6 2 172 3 303 1 11 1 45 1 152 1 309 1 14 2 219 1 354 1 15 2 16 1 49 1 355 1 221 1 
224 1 158 1 1 1 204 1 52 1 2 1 140 1 141 1 318 1 229 2 341 1 164 1 213 1 144 1 83 1 62 1 5 3 145 1 303 1 123 1 124 1 306 1 176 1 14 2 155 1 354 1 49 1 221 1 109 1 
5 2 158 1 204 1 303 1 52 1 2 1 124 1 176 1 318 1 351 1 14 2 354 1 187 1 49 2 144 1 221 1 62 1 334 1 
5 2 204 1 303 1 52 1 123 1 2 1 124 1 176 1 318 1 229 2 14 2 341 1 155 1 354 1 187 1 144 1 221 1 95 1 
158 1 204 1 52 2 2 1 318 1 229 2 341 1 187 1 144 2 62 1 5 4 145 1 303 1 123 1 124 2 176 2 14 2 351 1 155 1 354 1 49 2 221 1 
5 2 158 1 204 1 303 1 52 1 2 1 124 1 176 1 318 1 351 1 14 2 116 1 354 1 49 2 144 1 221 1 62 1 334 1 
5 2 204 1 303 1 52 1 123 1 2 1 124 1 176 1 318 1 229 2 14 2 341 1 116 1 155 1 354 1 144 1 221 1 95 1 
158 1 204 1 52 2 2 1 318 1 229 2 341 1 116 1 144 2 62 1 5 4 145 1 303 1 123 1 124 2 176 2 14 2 351 1 155 1 354 1 49 2 221 1 
158 1 204 1 52 2 2 1 318 1 229 2 341 1 144 2 62 1 5 4 145 1 303 1 123 1 124 2 176 2 14 2 351 1 155 1 354 1 49 2 221 1 
204 1 2 1 23 1 140 1 113 1 162 1 318 1 229 1 231 1 230 1 213 1 5 2 6 1 172 1 303 1 11 1 152 1 308 1 14 2 219 1 93 1 354 1 15 1 49 1 333 1 355 1 238 1 221 1 265 1 51 1 
204 1 2 1 23 1 183 1 140 1 113 1 161 1 162 1 318 1 229 1 231 1 230 1 213 1 5 1 6 1 172 1 303 1 8 1 11 1 152 1 308 1 14 2 354 1 15 1 333 1 355 1 221 1 265 1 
158 1 204 1 52 2 2 1 318 1 229 2 341 1 144 2 62 1 5 4 145 1 303 1 123 1 124 2 306 1 176 2 14 2 351 1 155 1 354 1 49 2 221 1 
158 1 204 1 52 2 2 1 140 1 113 1 162 1 318 1 229 2 248 1 341 1 81 1 231 1 230 1 213 1 144 1 62 1 5 4 6 1 145 1 172 1 303 1 123 1 124 2 176 2 152 1 14 2 155 1 93 1 354 1 15 1 49 2 238 1 221 1 265 1 51 1 
224 1 158 1 1 1 204 1 52 1 2 1 140 1 141 1 318 1 229 1 341 1 164 1 213 1 144 1 83 1 62 1 5 3 145 1 303 1 173 1 124 1 306 1 176 1 351 1 14 2 155 1 354 1 49 2 221 1 
158 3 21 3 110 1 182 1 315 1 137 1 112 1 318 2 229 13 250 1 341 3 298 1 144 2 62 3 326 2 5 26 146 3 328 3 145 3 303 2 174 1 7 1 41 1 127 1 280 1 351 2 14 4 155 3 282 3 354 2 49 13 17 1 221 2 239 1 
158 3 21 3 110 1 182 1 315 1 137 1 112 1 318 3 229 12 250 1 341 2 298 1 144 3 62 3 326 2 5 27 146 3 328 3 145 3 303 3 123 1 174 1 7 1 217 1 41 1 127 1 280 1 351 2 14 6 155 2 282 4 354 3 49 15 17 1 221 3 239 1 
158 3 21 2 110 1 182 1 315 1 137 1 112 1 318 2 229 16 250 1 341 3 144 7 104 1 62 4 326 1 5 31 277 1 146 2 328 2 145 3 147 1 303 2 123 5 174 1 7 1 217 1 41 1 280 1 46 1 351 2 14 4 48 1 155 4 282 4 354 2 49 15 17 1 312 1 221 2 239 1 
158 2 21 1 316 1 112 1 318 2 229 7 341 2 250 1 298 1 144 4 62 2 326 1 5 14 146 1 328 1 145 2 303 2 123 2 41 1 280 1 14 4 351 2 155 2 282 2 354 2 49 7 17 1 221 2 239 2 
158 3 21 2 110 1 182 1 315 1 137 1 112 1 318 2 229 10 250 1 341 2 144 1 62 3 326 2 5 23 328 2 146 2 145 3 303 2 174 1 7 1 217 1 41 1 280 2 351 1 14 4 155 2 282 3 354 2 49 13 17 1 221 2 239 1 
115 1 135 1 53 1 117 1 119 1 71 1 96 1 191 1 301 1 234 1 
260 1 281 1 135 1 53 1 117 1 71 1 96 1 208 1 234 1 
100 1 47 1 
121 1 85 1 135 1 53 1 71 1 246 1 234 1 27 1 321 1 322 2 117 1 119 1 103 1 4 1 96 1 94 1 191 1 301 1 
121 1 85 1 135 1 53 1 71 1 246 1 234 1 27 1 321 1 322 2 117 1 119 1 103 1 4 1 96 1 94 1 191 1 301 1 
121 1 85 1 135 1 53 1 71 1 246 1 234 1 27 1 321 1 322 2 117 1 119 1 103 1 4 1 96 1 94 1 191 1 301 1 
288 1 297 1 190 1 
288 1 297 1 190 1 
120 1 12 1 
120 1 288 1 12 1 
98 1 138 1 
133 1 242 1 135 1 27 1 322 1 290 1 53 1 117 1 94 1 71 1 96 1 234 1 
297 1 190 1 
120 1 288 1 12 1 
181 1 179 1 1 2 204 1 2 1 24 1 140 2 26 2 113 2 162 2 318 1 229 1 230 1 231 2 213 2 5 2 6 1 172 1 303 1 306 1 108 1 331 1 309 1 200 1 14 2 219 1 354 1 15 1 49 1 355 1 221 1 
0 1 105 1 99 1 278 2 172 1 36 1 228 1 10 1 44 1 113 2 162 2 273 1 342 1 81 1 56 1 231 2 15 1 63 1 345 1 
0 1 99 1 278 2 172 1 36 1 228 1 10 1 44 1 113 1 162 1 273 1 342 1 231 1 15 1 63 1 356 1 345 1 
105 1 254 1 6 1 172 1 11 1 113 1 45 1 162 1 273 1 198 1 230 1 231 1 15 1 325 1 
0 1 105 1 99 1 278 2 172 1 36 1 228 1 10 1 44 1 113 1 162 1 273 1 342 1 56 1 231 1 15 1 63 1 345 1 
55 1 
86 1 240 1 347 1 58 1 25 1 307 1 4 1 
223 1 86 1 295 1 66 1 311 1 25 1 284 1 126 1 
223 1 266 1 6 1 172 2 66 1 11 1 113 1 162 1 152 1 295 1 154 1 91 1 230 2 231 1 15 1 284 1 323 1 
223 1 86 1 146 1 328 1 295 1 21 1 66 1 315 1 25 1 284 1 
223 1 1 1 25 2 140 1 101 1 141 1 186 1 274 1 295 1 164 1 213 1 83 1 62 2 33 1 121 1 35 1 85 1 86 2 147 1 255 1 66 1 39 2 308 1 46 1 48 1 155 1 284 1 335 1 
223 1 240 1 86 1 66 1 295 1 58 1 284 1 4 1 
158 1 86 2 145 1 166 1 20 1 62 1 
162 1 231 1 11 1 113 1 
223 1 86 1 114 1 295 1 66 1 216 1 25 1 284 1 
71 1 160 1 234 1 
71 1 160 1 234 1 
71 1 160 1 234 1 
98 1 38 1 71 1 191 1 234 1 
271 1 71 1 234 1 
271 1 71 1 234 1 
271 1 71 1 234 1 
71 1 234 1 
135 1 53 1 
21 1 315 1 318 1 229 2 250 1 144 1 104 1 62 1 5 5 146 1 328 1 277 1 147 1 303 1 123 1 46 1 14 2 155 1 48 1 354 1 49 3 312 1 221 1 
21 1 315 1 318 2 229 2 250 1 144 1 104 1 62 1 5 5 146 1 328 1 277 1 147 1 303 2 123 1 329 1 46 1 14 4 155 1 48 1 354 2 49 3 312 1 221 2 
158 2 21 1 110 1 315 1 182 1 318 2 229 6 250 1 341 2 144 1 62 2 5 12 146 1 328 1 145 2 303 2 174 1 7 1 329 1 14 4 351 1 155 2 354 2 49 6 221 2 
158 2 21 1 110 1 182 1 315 1 318 4 229 5 250 1 341 1 144 3 62 2 5 12 146 1 328 1 145 2 303 4 123 2 174 1 7 1 217 2 329 1 351 1 14 8 155 1 354 4 49 7 221 4 
21 1 315 1 318 1 229 2 250 1 144 1 104 1 62 1 5 5 146 1 328 1 277 1 147 1 303 1 123 1 46 1 14 2 155 1 48 1 354 1 49 3 312 1 221 1 
158 2 21 1 110 1 182 1 315 1 318 2 229 7 250 1 341 2 144 3 62 2 5 13 146 1 328 1 145 2 303 2 123 2 174 1 7 1 217 1 351 1 14 4 155 2 354 2 49 6 221 2 
158 2 21 1 110 1 315 1 182 1 318 3 229 4 250 1 341 1 144 1 62 2 5 11 146 1 328 1 145 2 303 3 174 1 7 1 217 1 329 1 14 6 351 1 155 1 354 3 49 7 221 3 
158 2 21 1 110 1 182 1 315 1 318 3 229 4 250 1 341 1 298 1 144 3 62 2 5 11 146 1 328 1 145 2 303 3 123 1 174 1 7 1 217 1 351 2 14 6 155 1 354 3 49 7 221 3 
5 5 277 2 147 2 123 2 229 2 46 1 351 2 155 1 48 2 49 3 312 1 144 4 104 1 62 1 
158 2 21 1 110 1 315 1 182 1 318 3 229 4 250 1 341 1 298 1 144 1 62 2 5 11 146 1 328 1 145 2 303 3 174 1 7 1 217 1 14 6 351 1 155 1 354 3 49 7 221 3 
5 5 277 1 147 1 303 2 123 1 217 1 318 2 229 2 46 1 351 1 14 4 155 1 48 1 354 2 49 3 144 2 312 1 221 2 104 1 62 1 
5 3 277 1 147 1 123 1 307 1 229 1 46 1 48 1 155 1 49 2 312 1 144 1 104 1 62 1 
158 1 5 4 145 1 303 1 123 1 329 1 318 1 229 2 341 1 14 2 351 1 155 1 354 1 49 2 144 2 221 1 62 1 
5 2 229 1 146 1 328 1 21 1 49 1 
158 2 97 1 21 2 291 1 318 2 229 10 341 2 144 8 104 1 62 3 5 20 277 1 145 2 146 2 147 2 122 1 303 2 123 4 304 1 217 2 46 1 351 4 14 4 48 2 155 3 354 2 49 10 312 1 221 2 
5 1 229 1 146 1 
5 1 21 1 49 1 
5 6 158 1 145 1 303 1 123 2 329 1 318 1 163 1 229 3 14 2 351 1 341 1 155 1 354 1 49 3 144 3 221 1 62 1 
158 2 21 1 110 1 182 1 315 1 318 2 229 7 250 1 341 2 144 3 62 2 5 13 146 1 328 1 145 2 303 2 123 2 174 1 7 1 217 1 351 1 14 4 155 2 354 2 49 6 221 2 
5 2 229 1 46 1 155 1 49 1 62 1 
5 3 277 1 147 1 303 1 123 1 291 1 217 1 318 1 229 2 351 1 14 2 48 1 354 1 49 1 144 2 312 1 221 1 
5 8 35 1 147 1 303 1 123 2 318 1 229 4 46 1 14 2 250 1 351 2 48 1 155 2 354 1 49 4 144 4 221 1 62 2 
158 1 5 2 303 1 318 1 250 1 14 2 351 1 354 1 49 2 144 1 221 1 62 1 
158 1 5 4 145 1 303 1 123 1 318 1 229 2 341 1 250 1 14 2 351 1 155 1 354 1 49 2 144 2 221 1 62 1 
5 3 147 1 303 3 123 1 217 1 291 1 318 3 229 2 250 1 14 6 351 1 48 1 354 3 49 1 298 1 144 2 221 3 
158 2 21 3 111 1 291 1 318 5 229 12 250 1 341 2 298 1 144 8 104 1 62 4 5 24 277 1 146 3 328 1 145 2 147 2 303 5 123 4 88 1 217 2 329 1 46 2 14 10 351 4 48 2 236 1 155 4 354 5 49 12 312 1 221 5 
1 1 23 1 292 1 140 1 13 1 308 1 262 1 213 1 333 1 
1 1 226 1 23 1 292 1 140 1 197 1 13 1 294 1 308 1 262 1 92 1 213 1 177 1 333 1 
162 1 6 1 172 1 230 1 231 1 15 1 11 1 307 1 325 1 113 1 45 1 
1 1 23 1 140 2 113 1 141 1 162 1 231 1 230 1 213 2 83 1 253 1 6 1 172 1 11 1 152 1 308 1 15 1 333 1 238 1 265 1 
1 1 6 2 172 1 196 1 293 1 140 1 70 1 113 1 141 1 162 1 152 2 230 3 231 1 213 1 15 1 83 1 238 1 265 1 253 1 
1 1 6 2 172 1 196 1 293 1 140 1 70 1 113 1 141 1 161 1 162 1 152 2 230 3 231 1 213 1 15 1 83 1 265 1 253 1 
1 1 140 1 293 1 101 1 113 1 272 1 141 1 186 1 162 1 164 1 230 4 231 1 213 1 252 1 58 1 83 1 4 1 33 1 121 2 85 2 6 1 255 1 172 1 68 1 348 1 70 1 196 1 152 1 308 1 154 1 202 1 15 1 
1 1 140 1 101 1 113 1 141 1 162 1 186 1 164 1 230 1 231 1 213 1 58 1 83 1 4 1 33 1 121 1 85 1 255 1 256 1 70 1 308 1 154 1 
172 1 270 1 113 1 162 1 231 1 15 1 
327 1 266 1 6 1 172 2 243 1 11 1 113 1 162 1 152 1 231 1 230 1 15 1 16 1 
181 1 1 1 204 1 2 1 140 1 113 1 141 1 318 1 162 1 229 3 81 1 231 1 213 1 188 1 144 3 83 1 62 2 253 1 5 6 35 1 277 1 147 1 303 1 123 2 306 1 308 1 46 1 351 1 14 2 155 2 48 1 354 1 49 3 333 1 312 1 221 1 
242 1 
266 1 6 1 172 2 270 1 113 1 162 1 152 1 142 1 202 1 231 1 230 2 15 1 323 1 
6 2 172 3 243 1 11 1 113 2 45 1 162 2 152 1 296 1 81 1 231 2 230 2 15 2 16 1 143 1 325 1 
6 1 172 2 243 1 113 1 162 1 152 1 352 1 296 1 231 1 230 1 15 1 16 1 143 1 
172 1 278 1 11 1 10 1 44 1 113 1 162 1 231 1 15 1 63 1 
6 1 172 1 36 1 108 1 113 2 162 2 331 1 81 1 231 2 230 1 15 1 
241 1 243 1 113 2 162 3 81 1 296 1 230 4 231 3 143 1 325 1 6 3 172 4 11 1 108 1 45 1 152 1 15 3 283 1 16 1 
241 1 243 1 113 2 162 3 81 1 296 1 230 4 231 3 143 1 325 1 6 3 172 4 11 1 108 1 45 1 152 1 15 3 16 1 19 1 
1 1 23 1 140 2 113 1 161 1 141 1 162 1 231 1 230 1 213 2 83 1 253 1 6 1 172 1 11 1 152 1 308 1 15 1 333 1 265 1 
327 1 266 1 6 1 172 2 243 1 70 1 113 1 162 1 152 1 231 1 230 1 15 1 16 1 
1 1 179 1 200 1 213 1 106 1 24 1 139 1 140 1 50 1 
344 1 106 1 60 1 
210 1 23 1 106 1 139 1 50 1 
1 1 227 1 242 1 139 1 140 1 101 1 272 1 141 1 210 1 186 1 164 1 213 1 344 1 60 1 83 1 33 1 121 1 85 1 255 1 106 1 67 1 128 1 74 1 308 2 50 1 132 1 
337 1 349 1 307 1 245 1 
337 1 332 1 305 1 349 1 189 1 245 1 32 1 
195 1 157 1 32 1 
337 1 193 1 136 2 305 1 349 1 185 1 245 1 263 1 332 3 189 1 32 3 131 1 
149 1 332 2 305 1 189 1 64 1 32 1 
289 1 278 1 305 1 228 1 185 1 245 1 310 1 332 1 189 1 32 1 63 1 
337 1 332 1 305 1 189 1 185 1 245 1 32 1 
337 2 332 1 305 1 349 1 189 1 185 1 32 1 
337 1 180 1 305 2 185 1 245 1 332 2 189 2 30 1 32 2 168 1 
337 1 289 1 149 2 305 1 349 1 185 1 245 2 261 1 203 1 332 3 189 1 285 1 32 3 
337 1 278 2 65 1 149 1 305 1 228 1 349 1 10 1 185 1 245 1 332 2 189 1 32 2 63 1 345 1 
149 1 332 2 305 1 29 1 189 1 185 1 64 1 32 1 
337 1 332 1 305 1 349 1 189 1 185 1 245 1 32 1 
337 2 193 1 289 1 136 1 149 2 305 1 349 2 245 3 263 1 332 4 189 1 222 1 285 1 32 4 
337 1 149 1 305 1 349 1 185 1 245 1 247 1 332 2 276 1 214 1 189 1 32 2 
337 1 193 2 136 2 305 1 349 1 185 1 245 1 263 1 332 3 189 1 215 1 32 3 
268 1 18 2 43 1 245 2 
332 1 305 1 3 1 189 1 185 1 32 1 
337 1 149 1 203 1 332 2 305 1 349 1 189 1 185 1 245 1 32 2 
258 1 
337 1 332 1 305 1 349 1 189 1 185 1 245 1 32 1 
337 1 149 1 136 1 305 1 349 1 185 1 245 1 203 1 332 3 189 1 32 3 
289 1 222 1 285 1 245 1 
337 1 245 1 

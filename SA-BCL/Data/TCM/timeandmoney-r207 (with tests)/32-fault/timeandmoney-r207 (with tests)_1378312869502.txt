#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 308 189 (76,100) (76,100) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 308 189 (76,100) (76,100) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 308 189 (76,100) (76,100) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 308 189 (76,100) (76,100) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (68,131,150,228) (68,131,150,228) 232 262 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 308 189 227 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 308 189 227 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) 16 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 331 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) 16 217 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 154 192 126 40 178 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 180 (177,190) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 290 12 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 212 95 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 155 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 154 192 109 27 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 154 192 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 154 263 285 (23,60) (53,205) (53,205) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 154 263 285 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 331 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) (5,97) (128,245) 45 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 154 263 285 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 154 192 126 40 178 133 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) (5,97) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 170 181 265 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 170 181 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 170 181 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 170 181 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 170 181 265 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 235 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 290 12 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 290 12 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 290 12 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 212 95 237 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 154 73 169 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 154 263 285 (23,60) (23,60) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 154 192 109 116 115 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 154 263 285 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) 16 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 154 192 109 259 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 154 192 126 (14,41) 224 (5,97) (5,97) (128,245) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 155 (14,41) 299 114 (128,245) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 154 192 109 116 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 154 263 285 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 154 192 188 51 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 154 73 169 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 154 73 31 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 154 73 22 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 154 192 126 40 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (68,131,150,228) (68,131,150,228) 232 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (68,131,150,228) (68,131,150,228) 232 75 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 322 2 228 1 207 1 253 1 302 1 100 1 68 2 32 1 189 1 308 2 286 1 288 1 131 4 198 1 150 2 76 1 105 1 316 1 292 4 293 2 
160 1 322 2 228 1 207 1 253 1 302 1 100 1 68 2 32 1 189 1 308 2 286 1 288 1 131 4 150 2 76 1 198 1 105 1 316 1 292 4 293 2 
160 1 322 2 228 1 207 1 253 1 302 1 100 1 68 2 32 1 189 1 308 2 286 1 288 1 131 4 150 2 76 1 198 1 105 1 316 1 292 4 293 2 
160 1 322 2 228 1 207 1 253 1 302 1 100 1 68 2 32 1 189 1 308 2 286 1 288 1 131 4 150 2 76 1 198 1 105 1 316 1 292 4 293 2 
228 1 262 1 131 2 288 1 150 1 68 1 232 1 292 1 
160 1 61 1 322 1 182 1 66 1 302 1 68 1 32 1 286 1 288 1 131 2 150 1 54 1 106 1 241 1 292 2 
322 1 182 1 228 1 66 1 68 2 308 1 288 1 131 3 150 2 54 1 292 3 316 1 293 1 
189 1 308 2 322 1 228 2 227 1 253 1 131 4 288 1 150 2 117 1 68 2 316 1 292 4 293 2 
189 1 308 2 322 1 228 2 227 1 253 1 131 4 288 1 150 2 117 1 68 2 316 1 292 4 293 2 
274 1 
307 1 
175 1 158 2 321 2 287 2 17 2 78 2 342 2 121 1 
158 1 112 1 84 1 5 1 43 1 121 1 126 1 14 1 16 1 129 2 17 1 315 2 321 1 224 1 185 1 278 2 192 1 146 1 287 1 78 1 342 1 154 1 200 1 
158 1 162 1 321 1 148 1 287 1 17 1 77 1 78 1 342 1 121 1 
158 1 319 1 204 1 113 1 165 1 206 1 4 1 87 1 330 1 46 1 70 1 287 1 77 1 78 1 
158 1 319 1 321 1 113 2 165 1 206 1 4 2 87 1 330 1 70 1 287 1 17 1 77 1 78 1 342 1 
247 1 295 1 113 1 4 1 8 1 
72 1 247 1 249 1 295 1 113 2 165 1 4 2 87 1 
247 1 113 1 4 1 
162 1 158 1 321 1 295 1 113 1 4 1 69 1 121 1 148 1 287 1 17 1 77 1 78 1 342 1 
87 1 
72 1 247 1 295 1 113 2 165 1 4 2 87 1 153 1 
24 2 163 1 247 2 295 2 98 2 113 5 165 1 4 5 87 1 7 1 119 1 167 1 72 1 334 1 91 1 102 1 171 1 130 2 289 1 
274 1 
175 1 158 2 321 1 65 1 144 1 287 2 17 1 77 1 240 1 78 2 342 1 
335 1 110 1 57 1 
192 1 126 1 146 1 112 1 14 1 224 1 129 1 315 1 331 1 154 1 200 1 278 1 
158 1 112 1 3 1 224 1 278 1 33 1 192 1 126 1 146 1 14 1 287 1 129 1 17 1 78 1 342 1 315 1 154 1 200 1 
175 1 33 1 158 3 321 1 287 3 17 3 78 3 342 3 
158 1 148 1 287 1 17 1 77 1 78 1 342 1 
158 1 321 1 144 1 287 1 17 1 77 1 240 1 78 1 342 1 
158 3 112 1 3 1 113 1 206 1 4 1 5 1 121 1 126 1 14 1 16 1 129 1 17 3 217 1 315 1 319 1 321 2 224 1 273 1 330 1 144 1 70 1 278 1 33 1 192 1 146 1 287 3 77 1 78 3 342 3 154 1 200 1 
175 1 38 1 33 1 158 2 287 2 17 1 78 2 342 1 46 1 
158 3 319 1 321 1 3 1 273 1 113 1 206 1 4 1 87 1 330 1 144 1 70 1 33 2 287 3 17 3 77 1 78 3 342 3 37 1 
158 2 321 1 144 1 33 1 335 1 287 2 17 2 78 2 342 2 110 1 
192 1 126 1 146 1 112 1 14 1 224 1 129 1 315 1 154 1 200 1 278 1 
192 1 126 1 146 1 178 1 112 1 40 1 129 1 315 1 154 1 200 1 278 1 
83 1 297 2 209 1 44 1 118 1 255 1 47 1 258 2 213 1 310 2 132 1 136 1 218 1 57 2 26 1 326 4 183 1 143 1 67 1 335 2 340 1 149 1 110 2 201 1 
319 1 158 1 287 1 85 1 17 1 77 1 78 1 342 1 
38 1 175 1 158 5 321 1 3 1 277 1 46 1 144 1 33 2 193 1 287 5 17 4 78 5 342 4 
158 2 148 1 287 2 85 1 17 2 77 1 78 2 342 2 
190 1 
190 1 
177 1 180 1 
177 1 180 1 
177 1 180 1 
190 1 
190 1 
190 1 
190 1 
190 1 
190 1 
190 1 177 1 180 1 
190 1 
158 1 162 1 2 1 113 2 82 2 4 2 87 1 121 1 12 1 17 1 92 1 222 1 321 1 226 2 28 2 229 1 69 1 280 2 190 2 35 2 148 1 287 1 341 1 290 1 77 1 78 1 242 1 342 1 
158 1 2 1 113 1 226 1 82 1 28 1 4 1 306 1 280 1 190 1 212 1 35 1 287 1 17 1 238 1 95 1 78 1 21 1 342 1 
198 1 302 1 32 1 
302 1 106 1 32 1 
157 1 161 1 233 1 198 2 106 1 32 3 
157 1 246 1 233 1 198 1 106 1 32 2 
157 2 233 1 198 1 106 1 32 2 
158 1 162 1 163 2 247 1 295 4 113 5 165 1 4 5 87 1 119 1 121 1 257 1 307 1 50 2 309 1 130 1 17 1 136 1 139 1 218 1 24 1 25 1 321 1 98 1 275 1 69 1 72 1 334 1 148 1 339 1 287 1 238 1 77 1 78 1 107 1 108 1 342 1 
162 1 158 1 163 2 247 3 295 4 113 5 165 1 4 5 254 1 87 1 8 2 119 1 121 1 257 1 124 1 307 1 309 1 130 1 17 1 136 1 139 1 218 1 24 1 321 1 98 1 275 1 69 1 72 1 334 1 283 2 148 1 339 1 287 1 238 1 77 1 108 1 78 1 342 1 
158 1 162 1 163 2 295 2 113 3 165 1 4 3 87 1 121 1 257 1 307 1 50 1 309 1 171 1 130 1 17 1 136 1 218 1 139 1 24 1 25 1 321 1 98 1 275 1 69 1 334 1 148 1 287 1 339 1 77 1 238 1 78 1 107 1 342 1 
0 1 163 2 295 1 113 2 4 2 257 1 307 1 50 1 309 1 171 1 130 1 136 1 139 1 218 1 24 1 25 1 98 1 275 1 334 1 339 1 238 1 107 1 
274 1 
155 1 
29 1 
154 1 
192 1 27 1 109 1 154 1 
192 1 154 1 
225 1 
248 1 83 3 6 1 258 6 310 7 261 2 215 2 312 1 173 1 135 1 96 1 218 3 59 2 26 3 140 1 326 13 99 1 143 4 
248 1 83 3 6 1 258 6 310 7 261 2 215 2 312 1 173 1 135 1 96 3 218 3 59 2 26 3 140 1 326 13 99 1 143 6 
248 1 83 3 6 1 258 6 310 7 261 2 215 2 312 1 173 1 135 1 96 1 218 3 59 2 176 1 26 3 140 1 326 13 99 1 143 4 
159 1 248 1 297 2 83 1 86 1 303 1 258 6 213 1 261 1 310 5 312 1 313 1 132 1 173 2 136 1 96 2 218 1 59 1 271 2 26 2 140 1 326 11 183 1 143 4 67 1 196 1 337 1 339 1 201 1 111 1 
83 3 252 1 297 4 6 1 303 1 258 7 213 2 310 8 261 2 215 2 312 1 132 2 173 1 135 1 96 2 218 3 59 2 26 4 140 1 99 1 326 15 183 2 184 1 143 6 67 2 
1 1 161 1 112 1 302 1 10 1 129 1 131 2 93 1 54 1 315 1 266 1 138 1 322 1 323 1 182 1 228 1 328 1 66 1 68 1 278 1 32 2 281 1 288 1 198 1 150 1 239 1 106 1 292 2 200 1 243 1 
161 1 112 1 302 1 10 1 168 1 129 1 131 3 93 1 54 1 315 1 266 1 138 1 221 1 322 1 323 1 182 1 228 2 328 1 66 1 68 1 278 1 32 2 198 1 150 1 239 1 106 1 292 3 80 1 200 1 243 1 
161 1 112 1 302 1 10 1 168 1 129 1 131 2 93 1 54 1 315 1 266 1 138 1 322 1 182 1 228 2 328 1 66 1 278 1 32 2 198 1 106 1 292 2 80 1 200 1 243 1 
23 1 221 1 205 1 322 2 63 1 328 2 68 1 278 1 146 1 285 1 53 1 129 1 131 1 263 1 150 1 93 2 315 1 266 2 292 1 154 1 
1 1 161 1 112 1 302 1 10 1 168 1 129 1 131 1 93 1 315 1 266 1 138 1 322 1 323 1 328 1 68 1 278 1 32 2 288 1 198 1 150 1 239 1 106 1 292 1 200 1 243 1 
123 1 
24 1 163 1 247 2 39 1 98 1 113 2 4 2 327 1 119 1 88 1 278 2 72 1 146 2 334 1 285 1 309 1 130 1 129 2 263 1 315 2 154 1 
158 1 247 2 204 1 113 3 206 1 4 3 46 1 256 1 122 1 211 2 172 1 55 1 319 1 330 1 70 1 279 1 72 1 336 1 287 1 77 1 78 1 153 1 
158 1 247 1 204 1 113 3 206 1 165 1 4 3 87 1 46 1 256 1 122 1 211 3 172 1 55 1 319 1 330 1 70 1 72 1 336 1 287 1 77 1 78 1 153 1 244 1 
158 1 247 2 204 1 250 1 113 3 206 1 165 1 4 3 87 1 46 1 256 1 122 1 211 3 172 1 55 1 319 1 330 1 70 1 279 1 72 1 336 1 287 1 77 1 78 1 153 1 244 1 
156 2 158 1 247 7 163 1 250 4 165 5 4 5 87 5 256 1 260 2 172 1 24 1 98 1 101 1 279 4 282 1 287 1 104 1 204 1 113 5 206 1 296 2 119 1 210 2 46 1 122 1 211 6 130 1 55 1 319 1 141 2 330 1 64 1 70 1 145 1 72 3 71 1 334 1 336 1 77 1 78 1 79 1 153 1 244 4 
156 1 158 1 163 1 204 1 113 2 296 1 206 1 4 2 87 1 119 1 210 1 256 1 46 1 122 1 307 1 211 2 172 1 130 1 55 1 24 1 319 1 272 1 98 1 141 1 330 1 101 1 70 1 334 1 336 1 287 1 104 1 77 1 78 1 
156 2 158 1 247 4 163 1 250 2 204 1 113 4 165 1 296 2 206 1 4 4 87 1 119 1 210 2 46 1 256 1 122 1 211 4 260 2 172 1 130 1 55 1 24 1 319 1 98 1 141 2 330 1 64 1 101 1 70 1 279 2 72 2 71 1 334 1 282 1 336 1 287 1 104 1 77 1 78 1 244 2 
156 2 158 1 247 4 163 1 250 2 204 1 113 4 165 1 296 2 206 1 4 4 87 1 119 1 210 2 46 1 256 1 122 1 211 4 260 2 172 1 130 1 55 1 24 1 319 1 98 1 141 2 330 1 64 1 101 1 70 1 279 2 72 2 71 1 334 1 282 1 336 1 287 1 104 1 77 1 78 1 244 2 
269 1 319 1 158 1 204 1 113 2 206 1 4 2 330 1 256 1 46 1 70 1 122 1 211 2 336 1 172 1 287 1 236 1 77 1 78 1 55 1 
162 1 158 2 247 1 204 1 250 1 113 2 165 1 206 1 4 2 87 1 121 1 46 1 256 1 122 1 211 3 172 1 17 1 55 1 319 1 321 1 330 1 69 1 70 1 145 1 279 1 148 1 336 1 287 2 77 2 78 2 342 1 244 1 
162 1 158 2 247 1 204 1 250 1 113 2 165 1 206 1 4 2 87 1 121 1 46 1 256 1 122 1 211 3 172 1 17 1 55 1 319 1 321 1 330 1 69 1 70 1 145 1 279 1 148 1 336 1 287 2 77 2 78 2 342 1 244 1 
156 1 158 1 163 1 204 1 113 2 296 1 206 1 4 2 119 1 256 1 46 1 122 1 211 2 172 1 130 1 55 1 24 1 319 1 270 1 98 1 330 1 101 1 70 1 334 1 147 1 336 1 287 1 77 1 78 1 
213 1 274 1 340 1 297 2 132 1 183 1 209 1 44 1 67 1 
159 1 297 4 83 1 86 3 209 1 258 6 90 1 213 2 311 1 310 8 132 2 136 2 96 1 57 11 218 2 58 1 175 1 271 3 26 1 30 1 326 14 183 2 329 1 143 2 67 2 332 1 335 4 340 2 339 2 291 1 110 11 201 1 111 1 
158 1 112 1 3 1 297 2 209 1 258 1 126 1 13 1 90 1 213 1 14 1 310 1 129 1 17 1 132 1 314 1 315 1 317 1 58 1 224 1 326 2 183 1 329 1 67 1 331 1 278 1 33 1 192 1 146 1 335 1 340 1 287 1 78 1 342 1 154 1 200 1 
245 1 158 1 112 1 3 1 297 2 5 1 209 1 45 1 258 1 126 1 90 1 213 1 14 1 129 1 17 1 132 1 315 1 58 1 97 1 224 1 326 1 183 1 67 1 278 1 33 1 192 1 146 1 340 1 287 1 78 1 342 1 154 1 200 1 
326 2 297 2 183 1 185 1 329 1 42 1 209 1 67 1 278 2 258 1 146 1 213 1 285 1 310 1 340 1 129 2 36 1 132 1 263 1 315 2 154 1 58 1 
158 1 297 2 83 1 209 1 258 2 90 1 213 1 310 1 132 1 17 1 134 1 136 1 57 1 218 1 321 1 26 1 326 3 183 1 143 1 67 1 144 1 335 1 340 1 287 1 339 1 78 1 342 1 110 1 201 1 
326 2 297 2 183 1 209 1 143 1 44 1 118 1 67 1 335 1 213 1 340 1 310 2 132 1 136 1 96 1 110 1 57 1 218 1 
26 1 326 2 297 2 83 1 183 1 209 1 143 1 44 1 67 1 258 2 335 1 213 1 340 1 132 1 149 1 110 1 57 1 201 1 
297 2 83 1 209 1 44 1 258 2 213 1 310 2 132 1 136 1 96 1 218 1 57 2 26 1 326 4 183 1 143 2 67 1 335 2 339 1 340 1 110 2 201 1 
326 2 297 2 183 1 209 1 143 1 118 1 67 1 335 1 213 1 340 1 310 2 36 1 132 1 136 1 96 1 110 1 57 1 218 1 
26 1 326 2 297 2 83 1 183 1 209 1 143 1 67 1 258 2 335 1 213 1 340 1 36 1 132 1 149 1 110 1 57 1 201 1 
297 2 83 1 209 1 258 2 213 1 310 2 132 1 136 1 96 1 218 1 57 2 26 1 326 4 183 1 143 2 67 1 335 2 339 1 340 1 36 1 110 2 201 1 
26 1 83 1 297 2 326 4 183 1 209 1 143 2 67 1 258 2 335 2 213 1 340 1 339 1 310 2 132 1 136 1 96 1 110 2 201 1 57 2 218 1 
192 1 126 1 146 1 112 1 14 1 224 1 129 1 5 1 315 1 154 1 200 1 278 1 
192 1 126 1 146 1 178 1 112 1 40 1 129 1 133 1 315 1 154 1 200 1 278 1 
297 2 83 1 209 1 258 2 90 1 213 1 310 2 132 1 136 1 96 1 218 1 57 2 26 1 326 4 183 1 143 2 67 1 335 2 339 1 340 1 110 2 201 1 
97 1 112 1 224 1 5 1 278 1 126 1 192 1 281 1 14 1 129 1 315 1 154 1 200 1 
158 1 83 1 297 2 209 1 48 1 258 1 90 1 213 1 310 2 132 1 17 1 136 1 96 1 218 1 57 1 321 1 326 3 183 1 143 1 67 1 144 1 335 1 340 1 287 1 339 1 78 1 342 1 110 1 201 1 
213 1 179 1 170 1 181 1 297 2 132 1 183 1 184 1 265 1 67 1 
213 1 179 1 170 1 181 1 297 2 132 1 183 1 184 1 265 1 67 1 
213 1 179 1 170 1 181 1 297 2 132 1 183 1 184 1 265 1 67 1 
213 1 179 1 170 1 181 1 297 2 132 1 183 1 184 1 265 1 67 1 
213 1 179 1 170 1 181 1 297 2 132 1 183 1 184 1 265 1 67 1 
190 1 35 1 226 1 214 1 82 1 290 1 242 1 280 1 
212 1 
190 1 35 1 235 1 226 1 82 1 280 1 
158 1 162 1 2 1 113 1 82 1 4 1 87 1 121 1 12 1 17 1 92 1 222 1 321 1 226 1 28 2 229 1 69 1 280 1 190 1 35 1 148 1 287 1 341 1 290 1 77 1 78 1 242 1 342 1 
158 1 162 1 2 1 113 1 82 1 4 1 87 1 121 1 12 1 17 1 92 1 222 1 321 1 226 1 28 2 229 1 69 1 280 1 190 1 35 1 148 1 287 1 341 1 290 1 77 1 78 1 242 1 342 1 
158 1 162 1 2 1 113 1 82 1 4 1 87 1 121 1 12 1 17 1 92 1 222 1 321 1 226 1 28 2 229 1 69 1 280 1 190 1 35 1 148 1 287 1 341 1 290 1 77 1 78 1 242 1 342 1 
264 1 
264 1 
230 1 
230 1 
223 1 187 1 
222 1 295 1 226 1 113 1 82 1 28 1 4 1 306 1 280 1 190 1 212 1 35 1 341 1 238 1 237 1 95 1 21 1 
264 1 
230 1 
158 2 297 2 209 1 42 1 120 1 258 1 90 1 169 1 213 1 310 1 129 2 132 1 315 2 318 1 58 1 326 2 276 1 183 1 185 2 329 1 67 1 278 2 103 1 73 1 340 1 287 2 78 2 154 1 
161 1 112 1 251 1 302 1 278 2 10 1 32 2 168 1 281 1 195 1 129 2 198 1 239 1 106 1 152 1 315 2 266 1 138 1 200 1 
161 1 112 1 251 1 302 1 278 1 10 1 32 2 168 1 129 1 198 1 239 1 106 1 315 1 266 1 138 1 200 1 220 1 
23 1 60 1 278 1 146 1 195 1 285 1 129 1 263 1 315 1 266 1 154 1 
161 1 112 1 251 1 302 1 278 1 10 1 32 2 168 1 195 1 129 1 198 1 239 1 106 1 152 1 315 1 266 1 138 1 200 1 
125 1 
274 1 
24 1 163 1 98 1 141 1 87 1 119 1 210 1 307 1 334 1 130 1 104 1 
24 1 98 1 115 1 116 1 119 1 278 1 192 1 146 1 130 1 129 1 315 1 109 1 154 1 
159 1 163 4 83 2 86 1 119 1 305 1 257 5 307 3 127 1 130 1 18 1 136 2 139 5 218 2 268 1 271 1 24 1 98 1 334 6 339 2 199 1 201 2 
162 1 158 1 163 2 113 1 4 1 83 1 119 1 121 1 261 1 215 1 130 1 17 1 218 2 59 1 24 1 321 1 98 1 99 1 62 2 64 1 69 1 334 2 148 1 287 1 77 1 78 1 342 1 294 1 
24 1 163 1 98 1 165 1 87 1 119 1 167 1 334 1 91 1 130 1 
307 1 163 2 339 1 136 1 257 1 139 1 218 1 
72 1 247 1 113 1 165 1 4 1 87 1 
247 2 163 1 39 1 113 1 4 1 119 1 88 1 309 1 130 1 129 2 263 1 315 2 219 1 24 1 98 1 327 1 278 2 72 1 146 2 334 1 285 1 154 1 
158 1 112 1 321 1 224 1 5 1 121 1 278 1 192 1 126 1 146 1 14 1 16 1 287 1 129 1 17 1 78 1 342 1 315 1 154 1 200 1 
24 1 163 1 98 1 165 1 87 1 327 1 119 1 257 1 307 1 334 1 309 1 130 1 
164 1 226 1 82 1 
164 1 226 1 82 1 
164 1 226 1 82 1 
226 1 82 1 231 1 
226 1 82 1 231 1 
226 1 82 1 231 1 
226 1 82 1 186 1 9 1 187 1 
226 1 82 1 
190 1 
26 3 99 1 83 3 326 16 297 4 183 2 6 1 303 1 143 6 67 2 258 8 213 2 215 2 310 8 261 2 132 2 135 1 96 3 218 3 59 2 
274 1 
26 1 83 1 297 2 326 4 183 1 143 2 67 1 258 2 213 1 339 1 310 2 132 1 151 1 136 1 96 1 201 1 218 1 
159 1 271 2 26 1 83 1 326 7 86 1 143 2 258 4 310 3 339 1 136 1 96 1 201 1 218 1 111 1 
83 5 297 2 6 1 86 2 303 1 258 12 213 1 215 2 261 2 310 12 132 1 135 1 136 2 96 2 218 5 59 2 271 2 26 4 30 1 99 1 326 24 183 1 143 6 67 1 339 2 291 1 201 2 111 1 
271 1 326 1 258 1 
310 1 326 1 86 1 
26 1 297 2 326 6 83 1 183 1 143 2 67 1 258 3 213 1 338 1 339 1 310 3 132 1 151 1 136 1 96 1 218 1 201 1 
159 1 297 2 83 2 86 1 305 1 258 6 213 1 127 1 310 6 132 1 18 1 136 2 96 1 218 2 268 1 271 1 26 1 326 12 183 1 184 1 143 2 67 1 339 2 199 1 201 2 
26 1 326 6 83 1 143 2 258 3 215 1 310 3 261 1 96 1 218 1 59 1 
26 1 326 3 297 2 183 1 6 1 303 1 143 2 67 1 258 2 213 1 310 1 261 1 313 1 132 1 135 1 96 1 59 1 
26 3 297 2 99 1 326 10 83 2 183 1 184 1 143 5 67 1 258 5 213 1 261 2 310 5 215 1 132 1 96 2 218 2 59 2 
297 2 326 2 184 1 183 1 143 1 67 1 213 1 310 2 132 1 136 1 96 1 218 1 
26 1 83 1 297 2 326 4 184 1 183 1 143 2 67 1 258 2 213 1 339 1 310 2 132 1 136 1 96 1 201 1 218 1 
202 1 26 1 326 3 297 6 184 1 183 3 303 1 143 2 67 3 258 2 213 3 261 1 310 1 313 1 132 3 96 1 59 1 
202 1 159 1 83 2 297 8 86 1 6 1 303 1 258 8 213 4 215 1 310 7 261 2 313 1 132 4 135 1 96 3 218 2 59 2 271 1 26 3 99 1 326 15 183 4 184 1 143 6 67 4 337 1 151 1 
159 1 83 3 297 2 86 1 6 1 258 7 213 1 310 7 261 2 215 2 132 1 18 1 135 1 96 1 218 3 59 2 271 1 26 3 99 1 326 14 183 1 184 1 143 4 67 1 
159 1 83 3 297 4 6 1 86 1 258 8 213 2 215 2 261 2 310 9 132 2 18 1 135 1 136 1 96 2 218 4 59 2 271 2 26 3 99 1 326 17 184 1 183 2 143 5 67 2 339 1 151 1 111 1 
159 1 297 6 83 5 6 1 86 1 303 1 305 1 258 13 213 3 127 1 215 2 261 2 310 12 132 3 18 1 135 1 136 2 96 2 218 5 268 1 59 2 271 1 26 4 99 1 326 25 183 3 184 1 143 6 67 3 339 2 199 1 151 1 201 2 
159 1 297 6 83 4 6 1 86 1 303 1 305 1 258 10 213 3 127 1 215 2 261 2 310 13 132 3 18 1 135 1 136 2 96 4 218 5 268 1 59 2 271 1 26 4 99 1 326 23 183 3 184 1 143 8 67 3 339 2 199 1 151 1 201 1 
159 1 83 3 297 2 86 1 6 1 258 7 213 1 310 7 261 2 215 2 132 1 18 1 135 1 96 1 218 3 59 2 271 1 26 3 99 1 326 14 183 1 184 1 143 4 67 1 
159 1 297 2 83 2 86 1 305 1 258 6 213 1 127 1 310 6 132 1 18 1 136 2 96 1 218 2 268 1 271 1 26 1 326 12 183 1 184 1 143 2 67 1 339 2 199 1 201 2 
159 1 297 8 83 4 6 1 86 1 303 2 305 1 258 11 213 4 127 1 215 2 261 2 310 13 132 4 18 1 135 1 136 2 96 2 268 1 218 5 59 2 271 1 26 4 99 1 326 24 183 4 184 1 143 6 67 4 339 2 199 1 151 1 201 1 
202 1 159 1 297 8 83 2 86 1 303 2 305 1 258 7 213 4 127 1 310 9 132 4 18 1 136 3 96 3 268 1 218 3 271 1 26 3 326 16 184 1 183 4 143 6 67 4 339 3 199 1 201 2 
26 3 83 1 326 7 6 1 143 6 258 4 261 3 215 1 310 3 135 2 96 3 218 1 59 3 
202 1 159 1 297 8 83 4 6 1 86 1 303 2 305 1 258 11 213 4 127 1 215 2 261 2 310 13 132 4 18 1 135 1 136 2 96 2 268 1 218 5 59 2 271 1 26 4 99 1 326 24 184 1 183 4 143 6 67 4 339 2 199 1 201 1 
175 1 38 1 158 1 287 1 298 1 78 1 46 1 
203 1 166 1 174 1 267 1 49 1 
146 1 274 1 129 1 315 1 278 1 
158 1 112 1 278 1 33 1 192 1 126 1 146 1 14 1 287 1 129 1 17 1 78 1 342 1 315 1 154 1 200 1 
33 1 158 1 15 1 287 1 17 1 78 1 342 1 
33 1 158 1 15 1 287 1 17 1 78 1 342 1 
15 1 113 1 4 1 
15 1 113 1 4 1 
112 1 234 1 129 1 315 1 200 1 278 1 
192 1 259 1 146 1 129 1 315 1 109 1 154 1 278 1 
245 1 158 1 112 1 297 2 5 1 209 1 126 1 90 1 213 1 14 1 129 1 17 1 132 1 315 1 97 1 224 1 183 1 276 1 67 1 278 1 33 1 192 1 281 1 340 1 287 1 78 1 342 1 154 1 200 1 
155 1 24 1 295 1 98 1 113 1 114 1 4 1 41 1 299 1 119 1 278 1 146 1 128 1 130 1 129 1 315 1 219 1 
192 1 234 1 129 1 116 1 315 1 109 1 154 1 278 1 
146 1 281 1 285 1 129 2 263 1 315 2 154 1 278 2 
192 1 320 1 51 1 129 1 315 1 154 1 278 1 188 1 
146 1 112 1 129 1 302 1 106 1 315 1 200 1 10 1 278 1 32 1 
168 1 169 1 281 1 73 1 129 2 315 2 154 1 278 2 
146 1 281 1 73 1 129 2 31 1 315 2 154 1 278 2 
146 1 281 1 73 1 129 2 315 2 154 1 22 1 278 2 
158 1 112 1 40 1 278 1 33 1 192 1 126 1 146 1 287 1 129 1 17 1 78 1 342 1 315 1 154 1 200 1 
15 1 
158 1 120 1 89 1 103 1 287 1 197 1 216 1 78 1 318 1 
333 1 216 1 20 1 
175 1 52 1 197 1 216 1 89 1 
175 1 319 1 295 1 273 1 113 2 165 1 206 1 324 1 4 2 87 1 330 1 70 1 89 2 333 1 52 2 197 2 216 1 77 1 20 1 
274 1 
182 1 131 1 150 1 54 1 66 1 68 1 292 1 
322 1 93 1 292 1 
182 1 66 1 68 1 34 1 191 1 286 2 288 1 131 3 150 1 54 1 292 3 137 1 
228 1 131 2 150 1 68 1 232 1 292 1 
208 1 131 1 288 1 198 1 150 1 302 1 68 1 292 1 293 1 32 1 
182 1 131 1 288 1 150 1 54 1 68 1 292 1 
182 2 131 1 288 1 150 1 66 1 68 1 292 1 
182 1 300 1 68 2 284 1 288 1 131 2 150 2 54 1 94 1 292 2 
189 1 308 1 253 1 131 1 288 1 150 1 68 1 292 1 293 1 
161 1 182 1 228 1 325 1 66 1 302 1 68 1 32 2 288 1 131 2 150 1 198 1 54 1 106 1 292 2 
228 1 131 2 288 1 75 1 150 1 68 1 232 1 292 1 
182 1 131 1 288 1 150 1 54 1 66 1 68 1 292 1 
182 2 228 2 66 2 68 1 191 1 308 1 286 1 131 4 150 1 54 2 137 1 56 1 292 4 293 1 
182 1 228 1 66 1 117 1 68 1 304 1 288 1 131 2 150 1 54 1 19 1 292 2 
182 1 142 1 66 1 68 1 191 2 286 2 288 1 131 3 150 1 54 1 137 1 292 3 
81 1 194 2 74 1 54 2 
131 1 288 1 150 1 68 1 292 1 11 1 
182 1 253 1 66 1 68 1 288 1 131 1 150 1 56 1 292 1 
301 1 
182 1 131 1 288 1 150 1 54 1 66 1 68 1 292 1 
182 1 286 1 253 1 131 2 288 1 150 1 54 1 66 1 68 1 292 2 
308 1 228 1 131 1 292 1 293 1 
182 1 54 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 3 (150,305) (150,305) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (0,125) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (0,125) 320 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (0,125) 320 212 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 51 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 46 251 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 46 251 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 13 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 192 94 264 31 235 199 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 192 94 264 31 235 199 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 192 94 264 31 235 199 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 192 94 264 31 235 199 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 192 94 264 31 235 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 13 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 192 94 264 31 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 127 74 (2,184) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 127 74 (147,256) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 124 113 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
5 1 78 1 
5 1 78 1 
5 1 78 1 
5 1 78 1 
278 1 5 1 
150 1 3 1 188 1 5 1 92 1 305 1 
216 1 5 1 
100 1 5 1 
100 1 5 1 
324 1 204 1 13 1 
301 1 
1 1 243 2 17 2 20 2 157 2 6 2 203 2 195 1 
1 1 144 2 55 1 299 1 4 1 6 2 8 1 195 1 196 1 268 1 74 1 234 1 17 3 20 2 157 2 201 1 312 1 203 3 85 1 166 2 209 2 243 2 129 1 89 1 322 1 33 1 214 1 174 2 217 1 40 1 286 1 134 1 45 2 290 1 136 1 332 1 184 1 
26 1 243 1 17 1 20 1 157 1 6 1 203 1 195 1 
186 1 56 1 6 1 195 1 11 1 17 2 19 1 20 1 157 2 203 2 314 1 82 1 204 1 26 1 243 1 280 1 252 1 36 1 324 1 331 1 
314 1 82 1 204 1 26 1 186 2 56 1 243 2 6 2 280 1 195 1 36 1 252 1 324 1 17 2 19 2 20 2 157 2 203 2 
186 1 178 1 226 1 19 1 323 1 
324 1 112 1 204 1 186 2 178 1 276 1 19 2 323 1 
186 1 178 1 19 1 
26 1 186 1 56 1 243 1 323 1 6 1 195 1 17 1 19 1 20 1 157 1 203 1 
324 1 
324 1 112 1 204 1 186 2 178 1 19 2 323 1 131 1 
123 1 204 1 186 5 225 1 263 1 60 1 169 1 248 2 323 2 229 2 68 1 95 1 324 1 112 1 283 2 155 1 178 2 16 1 19 5 
1 1 13 1 
314 1 1 1 262 1 243 1 59 1 62 1 6 1 17 2 20 1 157 2 203 2 
15 1 61 1 300 1 
1 1 274 1 166 1 209 1 4 1 129 1 89 1 322 1 33 1 217 1 74 1 45 1 17 1 201 1 184 1 203 1 
166 1 209 1 4 1 105 1 129 1 89 1 322 1 6 1 33 1 217 1 74 1 15 1 45 1 17 2 18 1 20 1 201 1 157 1 184 1 203 2 
1 1 243 1 17 3 18 1 20 3 157 3 6 3 203 3 
314 1 17 1 20 1 157 1 6 1 202 1 203 1 
314 1 243 1 59 1 62 1 6 1 17 1 20 1 157 1 203 1 
1 1 186 1 262 1 4 1 105 1 6 3 8 1 195 1 268 1 17 4 19 1 18 1 20 3 201 1 203 4 209 1 129 1 280 1 33 1 36 1 214 1 217 1 45 1 134 1 135 1 290 1 136 1 55 1 144 1 299 1 59 1 74 1 157 3 312 1 314 2 240 1 82 1 85 1 166 1 243 2 89 1 322 1 252 1 174 2 184 1 
314 1 1 1 262 1 27 1 6 1 11 1 17 2 18 1 20 1 157 2 203 2 
314 1 240 1 82 1 223 1 186 1 243 1 59 1 105 1 6 3 280 1 252 1 36 1 324 1 17 3 19 1 18 2 20 3 157 3 203 3 
243 1 59 1 300 1 6 2 15 1 17 2 18 1 20 2 157 2 203 2 
1 1 166 1 209 1 4 1 129 1 89 1 322 1 33 1 217 1 74 1 45 1 17 1 201 1 184 1 203 1 
256 1 1 1 166 1 209 1 4 1 129 1 89 1 322 1 33 1 74 1 45 1 17 1 200 1 201 1 203 1 
121 1 163 1 24 1 85 1 296 1 144 4 55 1 299 1 61 2 108 1 192 1 300 2 8 2 214 1 111 1 174 2 98 1 282 1 40 2 268 1 232 1 15 2 134 1 77 1 
314 1 6 1 67 1 280 1 17 1 20 1 157 1 203 1 
1 1 27 1 243 1 59 1 105 1 6 4 130 1 11 1 71 1 17 5 18 2 20 4 157 5 203 5 
314 1 17 1 20 1 157 1 6 1 202 1 203 1 
125 1 294 1 
125 1 294 1 
99 1 0 1 
99 1 0 1 
99 1 0 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 294 1 
125 1 224 1 320 1 294 1 
125 1 186 1 224 1 320 1 19 1 212 1 294 1 
87 1 188 1 35 1 
87 1 188 1 92 1 
52 1 104 1 188 3 246 1 92 1 35 2 
104 1 188 2 246 1 291 1 92 1 35 1 
104 1 188 2 246 2 92 1 35 1 
204 1 186 4 30 1 107 1 323 3 149 1 324 1 12 1 112 1 132 1 178 1 19 4 
204 1 186 4 226 1 279 1 323 3 149 1 324 1 112 1 12 1 267 1 178 2 19 4 161 1 
296 1 186 3 56 1 263 1 108 1 107 1 192 1 6 1 229 1 301 4 194 1 195 1 68 3 149 1 17 1 19 3 75 1 20 1 157 1 118 2 203 1 121 1 204 1 26 1 243 1 30 1 248 1 323 2 94 1 95 2 324 3 283 1 132 1 133 2 182 2 
51 1 296 1 186 2 263 1 108 1 107 1 192 1 301 4 229 1 194 1 68 3 149 1 19 2 75 1 118 2 121 1 30 1 248 1 323 1 94 1 95 2 324 2 283 1 132 1 133 2 182 2 
152 1 13 1 4 1 
4 1 310 1 
206 1 
4 1 322 1 
81 1 176 1 152 2 4 3 322 1 33 1 
4 1 322 1 33 1 
4 1 265 1 
295 1 144 14 189 2 108 3 303 2 8 6 306 1 158 1 77 4 119 1 121 3 242 2 208 1 172 2 215 1 282 5 253 1 40 8 
295 1 144 14 189 2 108 3 303 2 8 6 306 1 158 1 77 4 119 1 121 3 208 3 242 2 172 2 215 1 282 7 253 1 40 8 
295 1 144 14 189 2 108 3 303 2 8 6 306 1 158 1 77 4 119 1 121 3 208 1 242 2 167 1 172 2 215 1 282 5 253 1 40 8 
215 2 253 1 39 1 40 1 144 1 158 1 172 1 
295 1 55 2 259 1 144 16 108 3 189 2 8 7 303 2 306 1 268 2 159 1 77 5 119 1 121 3 85 2 208 2 242 2 172 2 213 1 174 4 215 1 282 7 253 1 40 9 134 2 
221 1 209 1 166 1 45 1 5 1 146 1 
49 1 52 1 188 2 58 1 227 1 146 1 304 1 233 1 201 1 160 1 239 1 83 3 316 1 87 1 209 1 166 1 29 1 88 1 129 1 90 1 92 1 173 1 34 1 35 1 325 2 45 1 43 1 101 1 289 1 140 3 
52 1 188 2 58 1 227 1 146 1 233 1 201 1 160 1 239 1 83 2 209 1 166 1 87 1 29 1 129 1 90 1 92 1 173 1 34 1 35 1 325 2 45 1 101 1 289 1 140 2 
49 1 4 1 146 2 304 1 230 1 73 1 233 2 114 1 236 1 201 1 239 2 83 1 23 1 209 1 166 1 129 1 88 1 89 1 173 2 322 1 211 1 45 1 140 1 
209 1 166 1 45 1 5 1 90 1 146 1 
91 1 
258 2 186 5 261 1 4 1 7 2 112 3 11 1 197 1 114 1 17 1 19 5 21 1 201 1 203 1 272 1 204 3 209 2 129 1 32 1 211 1 280 1 36 1 283 1 284 2 133 2 220 1 45 2 44 1 53 2 228 1 64 1 301 2 229 1 68 2 308 1 155 1 75 1 157 1 238 2 314 1 313 4 82 1 165 1 166 2 319 2 248 1 89 2 322 1 95 2 252 1 324 4 175 2 178 6 255 1 331 1 
53 1 186 3 64 1 112 1 11 1 17 1 19 3 21 1 157 1 203 1 314 1 313 2 82 1 204 2 165 1 32 1 280 1 131 1 36 1 252 1 324 2 220 1 178 2 331 1 
313 3 314 1 82 1 204 2 165 1 186 2 32 1 64 1 280 1 252 1 36 1 324 2 11 1 284 1 220 1 17 1 19 2 331 1 21 1 157 1 203 1 
53 1 186 3 258 1 64 1 112 1 11 1 17 1 19 3 21 1 157 1 203 1 314 1 313 3 82 1 204 3 165 1 32 1 280 1 131 1 36 1 252 1 324 3 284 1 220 1 178 2 331 1 
186 5 258 4 6 1 7 2 195 1 112 3 11 1 270 1 17 2 19 5 20 1 21 1 203 2 204 3 26 1 207 1 32 1 280 1 36 1 131 1 283 1 133 2 284 2 220 1 46 1 53 4 56 1 228 1 64 1 229 1 68 1 154 1 155 1 157 2 238 2 313 4 314 1 82 1 165 1 243 1 319 2 248 1 251 1 252 1 95 1 324 3 175 2 178 7 255 1 331 1 
186 4 258 2 7 2 11 1 112 2 197 1 17 1 19 4 21 1 203 1 204 3 32 1 280 1 36 1 283 1 133 2 284 2 220 1 53 2 228 1 64 1 229 1 301 2 68 1 155 1 157 1 238 2 313 4 314 1 82 1 165 1 319 2 248 1 252 1 95 1 324 4 175 2 178 4 255 1 331 1 
186 4 258 2 6 1 7 2 195 1 11 1 112 2 17 2 19 4 20 1 21 1 203 2 204 3 26 1 207 1 32 1 280 1 36 1 283 1 133 2 284 2 220 1 46 1 53 2 56 1 228 1 64 1 229 1 68 1 155 1 154 1 157 2 238 2 313 4 314 1 82 1 165 1 243 1 319 2 248 1 252 1 95 1 324 3 175 2 178 4 255 1 331 1 
186 4 258 2 6 1 7 2 195 1 11 1 112 2 17 2 19 4 20 1 21 1 203 2 204 3 26 1 207 1 32 1 280 1 36 1 283 1 133 2 284 2 220 1 46 1 53 2 56 1 228 1 64 1 229 1 68 1 155 1 154 1 157 2 238 2 313 4 314 1 82 1 165 1 243 1 319 2 248 1 252 1 95 1 324 3 175 2 178 4 255 1 331 1 
186 4 258 2 191 2 6 1 195 1 11 1 112 2 17 2 19 4 20 1 21 1 203 2 204 3 26 1 207 1 32 1 280 1 36 1 283 1 284 2 220 1 53 2 56 1 297 1 63 1 64 1 229 1 301 2 68 1 155 1 157 2 238 2 313 4 314 1 82 1 80 1 165 1 243 1 248 1 252 1 95 1 324 3 175 2 326 2 178 4 255 1 331 1 
53 1 186 2 258 1 64 1 11 1 17 1 19 2 21 1 157 1 203 1 314 1 313 3 82 1 204 2 165 1 32 1 280 1 251 1 36 1 252 1 324 2 284 1 220 1 178 1 46 1 331 1 
53 1 186 2 258 1 64 1 11 1 17 1 19 2 21 1 157 1 203 1 314 1 313 3 82 1 204 2 165 1 32 1 280 1 251 1 36 1 252 1 324 2 284 1 220 1 178 1 46 1 331 1 
186 4 258 2 191 2 11 1 112 2 197 1 17 1 19 4 21 1 203 1 204 3 32 1 280 1 36 1 283 1 284 2 220 1 53 2 64 1 229 1 301 2 68 1 155 1 157 1 238 2 313 4 314 1 82 1 80 1 165 1 248 1 252 1 95 1 324 3 175 2 326 2 178 4 255 1 331 1 
121 1 163 1 1 2 85 1 144 5 55 1 242 1 299 1 108 1 189 1 172 1 8 2 303 1 214 1 174 2 306 1 282 2 40 3 268 1 13 1 134 1 77 2 119 1 
1 1 296 1 55 2 144 14 299 2 61 11 108 1 192 2 300 4 110 1 8 6 196 1 70 3 268 2 15 11 77 1 312 1 122 1 121 2 85 2 210 1 208 1 86 1 28 1 245 3 128 1 94 2 214 1 174 4 282 2 40 8 285 1 134 2 
1 1 55 1 144 2 299 1 4 1 105 1 300 1 110 1 6 1 8 1 196 1 268 1 74 1 17 2 18 1 20 1 76 1 201 1 157 1 203 2 312 1 85 1 274 1 209 1 166 1 129 1 89 1 322 1 33 1 214 1 174 2 217 1 177 1 40 1 254 1 45 1 134 1 184 1 
144 1 55 2 299 2 4 1 105 1 110 1 6 1 8 1 268 2 74 1 309 1 17 2 18 1 20 1 201 1 157 1 203 2 312 1 85 2 166 1 209 1 321 1 129 1 89 1 170 1 322 1 33 1 214 2 174 4 217 1 134 2 45 1 136 1 293 1 184 1 
143 1 260 1 55 2 144 2 299 2 4 3 6 1 8 1 196 1 268 2 114 1 17 1 18 1 20 1 157 1 201 2 203 1 312 1 163 1 85 2 209 8 166 7 129 2 90 1 89 2 322 2 211 1 214 2 174 4 281 1 37 1 40 1 221 1 286 2 45 8 134 2 288 1 292 1 103 1 
296 1 55 1 144 3 299 1 59 1 61 1 108 1 300 1 192 1 110 1 6 1 8 2 268 1 15 1 17 1 20 1 157 1 77 1 22 1 203 1 121 1 85 1 243 1 94 1 214 1 174 2 282 1 40 1 134 1 
121 1 163 1 85 1 144 2 55 1 208 1 299 1 61 1 300 1 192 1 214 1 174 2 111 1 282 1 40 2 268 1 15 1 134 1 
163 1 24 1 85 1 296 1 144 2 55 1 299 1 61 1 108 1 300 1 8 2 214 1 174 2 282 1 268 1 15 1 134 1 77 1 
296 1 55 1 144 4 299 1 61 2 108 1 192 1 300 2 8 2 268 1 15 2 77 1 121 1 163 1 85 1 208 1 94 1 214 1 174 2 282 2 40 2 134 1 
121 1 85 1 144 2 55 1 208 1 299 1 61 1 300 1 192 1 214 1 174 2 111 1 282 1 281 1 40 2 268 1 15 1 134 1 
24 1 85 1 296 1 144 2 55 1 299 1 61 1 108 1 300 1 8 2 214 1 174 2 282 1 281 1 268 1 15 1 134 1 77 1 
296 1 55 1 144 4 299 1 61 2 108 1 192 1 300 2 8 2 268 1 15 2 77 1 121 1 85 1 208 1 94 1 214 1 174 2 281 1 282 2 40 2 134 1 
296 1 144 4 55 1 299 1 61 2 108 1 192 1 300 2 8 2 268 1 15 2 77 1 121 1 85 1 208 1 94 1 214 1 174 2 282 2 40 2 134 1 
1 1 144 2 55 1 299 1 4 1 8 1 196 1 268 1 74 1 17 1 201 1 203 1 312 1 85 1 209 1 166 1 129 1 89 1 322 1 33 1 214 1 174 2 217 1 40 1 45 1 134 1 136 1 184 1 
314 1 1 1 85 1 144 1 55 1 166 1 209 1 262 1 299 1 89 1 8 1 97 1 214 1 174 2 268 1 45 1 134 1 312 1 
296 1 55 1 144 4 299 1 61 2 108 1 192 1 300 2 110 1 8 2 268 1 15 2 77 1 121 1 85 1 208 1 94 1 214 1 174 2 282 2 40 2 134 1 
296 1 144 4 55 1 299 1 4 1 108 1 61 2 300 2 192 1 8 2 268 1 74 1 15 2 309 1 17 1 201 1 77 1 203 1 121 1 85 1 208 1 209 1 166 1 129 1 322 1 33 1 94 1 214 1 174 2 282 2 217 1 40 2 221 1 45 1 134 1 136 1 184 1 
296 1 55 1 144 3 299 1 59 1 108 1 61 1 192 1 300 1 110 1 6 1 8 1 268 1 151 1 15 1 17 1 20 1 157 1 203 1 121 1 85 1 208 1 243 1 94 1 214 1 174 2 282 1 40 2 134 1 
121 1 54 1 205 1 85 2 144 11 259 1 55 2 264 1 106 2 31 1 245 2 192 1 94 1 8 5 174 4 70 2 40 6 268 2 285 2 235 1 134 2 237 1 199 1 138 1 
121 1 54 1 205 1 85 2 144 11 259 1 55 2 264 1 106 2 31 1 245 2 192 1 94 1 8 5 174 4 70 2 40 6 268 2 285 2 235 1 134 2 237 1 199 1 138 1 
54 1 55 1 259 1 144 16 106 2 264 1 108 1 189 1 192 1 303 1 8 7 306 1 70 2 268 1 235 1 237 1 199 1 77 1 119 1 121 2 85 1 242 1 245 2 31 1 172 1 94 1 174 2 282 1 40 9 285 2 134 1 138 1 
121 1 54 1 205 1 85 2 144 11 259 1 55 2 264 1 106 2 31 1 245 2 192 1 94 1 8 5 174 4 70 2 40 6 268 2 285 2 235 1 134 2 237 1 199 1 138 1 
121 1 54 1 85 1 144 11 259 1 55 1 264 1 106 2 31 1 245 2 192 1 94 1 8 5 174 2 70 2 40 6 285 2 268 1 235 2 134 1 237 1 199 1 138 2 
142 1 17 1 157 1 203 1 
316 1 52 1 87 1 166 2 209 2 188 2 129 1 227 1 92 1 90 1 109 1 247 1 35 1 233 1 221 1 45 2 101 1 201 1 137 1 
316 1 52 1 87 1 166 1 209 1 188 2 227 1 129 1 92 1 90 1 247 1 35 1 233 1 153 1 45 1 101 1 201 1 
23 1 166 1 209 1 4 1 129 1 89 1 322 1 211 1 233 1 114 1 45 1 102 1 201 1 137 1 
316 1 52 1 87 1 166 1 209 1 188 2 129 1 227 1 92 1 90 1 109 1 247 1 35 1 233 1 45 1 101 1 137 1 201 1 
266 1 
324 1 204 1 13 1 16 1 60 1 68 1 95 1 
186 1 228 1 229 1 301 1 7 1 68 1 112 1 155 1 19 1 204 1 319 1 248 1 95 1 324 2 283 1 133 1 178 1 
186 2 2 1 4 4 229 2 68 1 112 1 152 1 155 2 19 2 75 1 310 2 201 1 79 1 81 1 209 1 166 1 129 2 89 1 248 2 322 1 33 1 252 1 283 2 218 1 327 1 178 2 45 1 329 1 181 1 183 1 
121 2 54 1 296 2 264 1 108 2 245 1 31 1 192 2 248 1 229 1 301 2 93 1 94 2 95 4 68 6 324 1 283 1 70 1 133 1 285 1 155 1 182 4 116 1 118 4 
50 1 295 1 186 1 56 1 189 1 108 1 229 1 6 1 303 1 68 2 195 1 9 2 155 1 154 1 17 1 19 1 20 1 157 1 203 1 121 2 26 1 242 1 243 1 248 1 95 2 283 1 
204 1 60 1 248 1 229 1 95 1 68 1 324 1 283 1 155 1 16 1 
121 2 50 1 296 2 108 2 192 2 301 10 94 2 95 5 68 5 9 2 324 5 133 5 182 5 118 5 139 1 
324 1 112 1 204 1 186 1 178 1 19 1 
257 2 186 3 261 2 263 1 4 1 190 1 229 2 193 1 68 2 112 2 308 1 155 1 114 1 75 2 19 3 201 1 209 4 166 4 275 1 129 1 248 2 89 2 322 1 211 1 95 2 283 2 178 4 44 1 45 4 
1 1 144 1 55 1 299 1 4 1 6 2 8 1 195 1 268 1 74 1 17 3 20 2 157 2 201 1 312 1 203 3 85 1 209 1 166 1 243 2 129 1 89 1 322 1 33 1 214 1 174 2 217 1 134 1 45 1 290 1 136 1 184 1 
204 2 261 1 248 1 172 1 301 4 229 1 95 2 68 1 324 4 283 1 133 2 155 1 182 2 75 1 118 2 
179 1 250 1 96 1 
120 1 156 1 198 1 250 1 96 1 
179 1 250 1 96 1 
179 1 250 1 96 1 
66 1 250 1 96 1 
66 1 250 1 96 1 
66 1 250 1 96 1 
250 1 96 1 
125 1 294 1 
174 2 70 1 40 1 285 1 268 1 85 1 144 2 55 1 259 1 134 1 245 1 31 1 8 1 
121 1 54 1 185 1 85 2 55 2 259 1 144 5 264 1 245 1 31 1 192 1 94 1 8 2 174 4 70 1 40 3 268 2 285 1 134 2 
121 1 54 1 85 1 259 1 55 1 144 5 264 1 31 1 245 1 192 1 94 1 8 2 174 2 70 1 40 3 268 1 285 1 134 1 
121 1 54 1 85 1 259 1 55 1 144 5 264 1 31 1 245 1 192 1 94 1 8 2 174 2 70 1 40 3 268 1 285 1 134 1 
174 2 70 1 40 1 285 1 268 1 85 1 144 2 55 1 259 1 134 1 245 1 31 1 8 1 
121 1 54 1 85 1 259 1 55 1 144 5 264 1 31 1 245 1 192 1 94 1 8 2 174 2 70 1 40 3 268 1 285 1 134 1 
121 1 54 1 185 1 85 2 259 1 55 2 144 5 264 1 245 1 31 1 192 1 94 1 8 2 174 4 70 1 40 3 268 2 285 1 134 2 
121 1 54 1 205 1 85 2 55 2 259 1 144 5 264 1 245 1 31 1 192 1 94 1 8 2 174 4 70 1 40 3 268 2 285 1 134 2 
121 1 144 7 208 3 242 1 108 1 189 3 8 4 303 3 306 1 282 6 40 3 77 3 119 2 
121 1 54 1 205 1 85 2 55 2 259 1 144 5 264 1 245 1 31 1 192 1 94 1 8 2 174 4 70 1 40 3 268 2 285 1 134 2 
295 1 55 2 144 17 189 2 108 3 303 2 8 8 306 1 268 2 77 4 119 1 121 3 85 2 208 3 242 2 172 1 213 1 174 4 282 7 40 9 134 2 
121 1 144 5 242 1 189 1 108 1 172 1 8 2 303 1 306 1 282 2 40 3 13 1 77 2 119 1 
121 1 185 1 296 1 85 1 55 1 144 4 208 1 108 1 192 1 8 2 94 1 174 2 282 2 40 2 268 1 134 1 77 1 
70 1 40 1 285 1 144 2 245 1 8 1 
295 1 296 2 144 25 55 1 189 2 108 5 192 2 303 2 8 12 306 1 70 2 268 1 77 5 119 1 121 5 122 1 85 1 242 2 208 2 28 1 128 1 245 2 172 1 94 2 213 1 174 2 282 7 40 13 134 1 
70 1 144 1 8 1 
40 1 144 1 245 1 
121 1 185 1 85 1 296 1 55 1 144 6 208 1 108 1 192 1 8 3 94 1 174 2 282 3 40 3 268 1 134 1 139 1 77 2 
121 1 54 1 85 1 259 1 55 1 144 5 264 1 31 1 245 1 192 1 94 1 8 2 174 2 70 1 40 3 268 1 285 1 134 1 
121 1 144 6 242 1 208 1 108 1 189 1 8 3 303 1 282 2 40 3 77 1 
85 1 144 3 55 1 208 1 277 1 189 1 303 1 8 2 213 1 174 2 306 1 282 2 40 1 268 1 134 1 77 1 119 1 
121 2 85 1 295 1 55 1 259 1 144 10 208 2 242 1 189 2 108 2 303 2 8 5 174 2 282 5 40 5 268 1 134 1 77 3 
121 1 85 1 259 1 55 1 144 2 208 1 192 1 174 2 282 1 40 2 268 1 134 1 
121 1 296 1 85 1 259 1 55 1 144 4 208 1 108 1 192 1 8 2 94 1 174 2 282 2 40 2 268 1 134 1 77 1 
205 1 85 3 144 3 259 1 55 3 208 1 277 1 189 1 213 1 8 2 303 1 174 6 282 2 40 1 268 3 134 3 77 1 
185 1 295 1 296 2 55 4 259 1 144 31 189 2 108 5 192 2 303 2 8 15 306 1 148 1 70 3 268 4 269 1 77 5 119 1 121 5 205 1 85 4 242 2 208 4 245 3 172 1 213 1 94 2 174 8 282 9 40 16 285 1 42 1 134 4 
11 1 1 1 187 1 27 1 17 1 157 1 203 1 
1 1 164 1 187 1 27 1 57 1 249 1 11 1 180 1 17 1 157 1 48 1 203 1 
13 1 114 1 209 1 166 1 45 1 4 1 129 1 89 1 201 1 322 1 211 1 
1 1 166 1 209 1 4 1 129 1 89 1 322 1 6 1 33 1 74 1 45 1 17 2 18 1 20 1 157 1 201 1 184 1 203 2 
257 1 166 1 209 1 4 3 265 1 127 1 129 1 322 2 6 1 33 2 74 1 45 1 17 1 18 1 20 1 157 1 201 1 184 1 203 1 
256 1 257 1 166 1 209 1 4 3 265 1 127 1 129 1 322 2 6 1 33 2 74 1 45 1 17 1 18 1 20 1 157 1 201 1 203 1 
257 1 186 2 56 1 4 4 265 1 6 1 147 1 195 1 152 1 17 1 19 2 20 1 310 1 271 1 157 1 201 1 203 1 204 1 26 1 209 1 166 1 243 1 127 1 129 1 322 1 33 1 252 1 324 1 178 1 45 1 
257 1 2 1 186 2 56 1 4 4 265 1 6 1 195 1 152 1 17 1 19 2 20 1 310 1 157 1 201 1 203 1 204 1 26 1 209 1 166 1 243 1 127 1 129 1 322 1 33 1 252 1 324 1 178 1 45 1 
209 1 166 1 45 1 129 1 292 1 201 1 
81 1 84 1 143 1 260 1 166 6 209 7 4 3 129 3 90 1 89 2 322 2 302 1 33 1 37 1 221 1 286 1 45 7 330 1 288 1 292 1 201 2 
1 3 262 1 4 1 189 2 108 3 6 1 110 1 8 6 268 2 17 2 18 1 20 1 201 1 203 2 119 1 121 3 208 1 209 1 129 1 33 1 214 2 217 1 282 5 40 7 221 1 45 1 134 2 136 1 295 1 55 2 144 13 299 2 303 2 306 1 74 1 309 1 157 1 77 4 314 1 85 2 166 1 242 2 321 1 322 1 172 1 174 4 328 1 184 1 
2 1 186 3 4 2 190 1 189 1 108 2 6 1 195 1 9 2 112 1 16 1 17 1 19 3 20 1 203 1 121 2 204 2 26 1 209 1 283 2 45 1 50 1 295 1 56 1 60 1 229 2 303 1 68 4 152 1 155 2 310 1 157 1 79 1 166 1 242 1 243 1 248 2 89 1 323 1 252 1 95 5 324 2 327 1 178 2 329 1 
81 1 166 2 209 2 4 2 129 2 322 1 33 1 218 1 152 1 221 1 45 2 292 1 201 1 
72 1 221 1 114 1 209 4 166 4 45 4 4 1 126 1 129 1 89 1 201 1 322 1 211 1 
141 1 257 1 84 1 25 1 166 2 209 2 4 1 129 2 322 1 33 1 41 1 45 2 330 1 201 1 
87 1 209 1 166 1 188 1 45 1 129 1 227 1 92 1 89 1 201 1 
143 1 166 2 209 2 4 1 129 1 90 1 322 1 221 1 45 2 287 1 201 1 
257 1 143 1 166 4 209 5 4 3 126 1 129 2 89 1 322 2 211 1 37 1 221 1 114 1 45 5 288 1 201 2 
141 1 84 1 143 1 166 2 209 2 4 2 129 3 89 1 322 2 33 1 211 1 307 1 41 1 221 1 330 1 45 2 201 2 
256 1 1 1 166 1 209 1 4 1 129 1 89 1 322 1 6 1 33 1 74 1 45 1 17 2 18 1 20 1 157 1 201 1 203 2 
257 1 81 1 84 1 166 1 209 1 4 1 129 2 322 1 302 1 33 1 45 1 330 1 201 1 
162 1 124 1 
113 1 38 1 317 1 
162 1 124 1 142 1 317 2 
162 1 113 1 124 1 38 1 142 1 186 1 219 1 317 2 19 1 323 1 
13 1 58 1 34 1 160 1 
83 1 58 1 88 1 34 1 304 1 160 1 140 1 
239 1 173 1 140 1 
83 1 315 1 298 1 168 1 5 1 47 1 140 1 
325 1 222 1 83 2 58 1 88 1 34 1 304 1 160 1 140 2 
5 1 
5 1 
5 1 
244 1 5 1 
83 2 298 1 318 1 145 1 5 1 171 1 34 1 325 2 311 1 140 2 
188 1 5 1 92 1 
222 1 83 2 298 1 5 1 171 1 34 1 325 2 14 1 311 1 140 2 
298 1 5 1 
83 4 315 1 298 1 168 1 58 2 88 1 171 1 304 1 34 3 325 2 47 1 311 1 160 2 140 4 
241 1 83 1 298 1 5 1 325 1 231 1 117 1 140 1 
83 1 298 1 168 1 5 1 115 1 47 1 140 1 
10 1 273 2 65 1 34 2 
5 1 
325 1 83 1 298 1 145 1 5 1 140 1 
69 1 
5 1 
83 1 298 1 5 1 47 1 140 1 
298 1 171 1 311 1 34 1 
34 1 160 1 

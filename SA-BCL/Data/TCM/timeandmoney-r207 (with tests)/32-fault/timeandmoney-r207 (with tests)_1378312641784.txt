#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (179,223) (179,223) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (179,223) (179,223) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (179,223) (179,223) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (179,223) (179,223) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (220,270) (220,270) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 192 266 78 207 51 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 192 266 78 207 51 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 304 (34,168) 89 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 304 255 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 304 (34,168) 89 101 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (127,143,206) (81,281,311) (81,281,311) (81,281,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (127,143,206) (81,281,311) (81,281,311) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (127,143,206) (81,281,311) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (158,269) (115,144) (115,144) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (127,143,206) (81,281,311) (81,281,311) (81,281,311) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 9 142 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 9 142 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 286 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 304 255 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 184 77 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 304 (34,168) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 304 (34,168) (34,168) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (20,63) 216 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (20,63) 216 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (20,63) 120 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (20,63) 120 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (127,143,206) (127,143,206) (127,143,206) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (127,143,206) (127,143,206) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (158,269) (158,269) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (127,143,206) (127,143,206) (127,143,206) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 304 (34,168) 89 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 286 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 286 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 192 266 78 207 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 1 225 1 175 1 186 1 170 1 5 1 215 1 199 1 179 1 
223 1 225 1 175 1 186 1 170 1 5 1 215 1 199 1 179 1 
223 1 225 1 175 1 186 1 170 1 5 1 215 1 199 1 179 1 
223 1 225 1 175 1 186 1 170 1 5 1 215 1 199 1 179 1 
1 1 293 1 175 1 5 4 215 4 8 1 218 1 266 2 225 1 186 1 15 1 64 1 192 3 18 3 157 1 27 2 36 1 290 1 78 1 
220 1 225 1 175 1 186 1 170 1 5 1 215 1 199 1 270 1 93 1 
271 1 192 2 157 1 18 1 175 2 5 3 215 3 218 1 266 1 225 1 186 2 170 1 78 1 
192 2 271 1 18 2 175 2 5 4 215 4 51 1 52 1 266 2 121 1 225 1 186 2 207 1 170 1 78 2 
192 2 271 1 18 2 175 2 5 4 215 4 51 1 52 1 266 2 121 1 225 1 186 2 207 1 170 1 78 2 
219 1 286 1 287 1 
3 1 287 1 236 2 
118 2 17 2 80 1 2 2 97 2 257 1 90 2 21 2 
80 1 17 1 2 1 89 1 21 1 90 1 118 1 185 2 97 1 241 1 34 1 57 1 304 1 319 1 253 1 
118 1 17 1 80 1 2 1 97 1 159 1 32 1 90 1 21 1 147 1 
190 1 44 1 159 1 48 1 21 1 90 1 26 1 219 1 297 1 264 1 97 1 287 1 122 1 104 1 
17 1 190 1 2 1 159 1 48 2 21 1 90 1 26 1 219 1 118 1 297 1 264 1 97 1 287 1 122 2 
95 1 107 1 122 1 197 1 48 1 
17 1 80 1 107 1 2 1 275 1 159 1 87 1 48 2 90 1 21 1 95 1 219 1 118 1 97 1 32 1 287 1 122 2 147 1 208 1 
95 1 122 1 48 1 
107 1 80 1 17 1 2 1 159 1 87 1 48 1 21 1 90 1 118 1 97 1 32 1 122 1 147 1 
287 1 
95 1 219 1 54 1 107 1 287 1 122 2 48 2 208 1 
131 1 80 1 132 2 2 1 134 1 212 1 87 1 48 5 90 1 181 1 95 2 53 1 221 3 224 1 97 1 98 1 100 2 58 1 147 1 151 1 17 1 107 2 272 2 159 1 21 1 161 1 118 1 72 3 315 1 32 1 122 5 243 1 288 1 124 1 252 1 208 1 
118 1 2 1 185 1 97 1 55 1 244 1 90 1 21 1 304 1 253 1 
286 1 257 1 
17 1 2 1 257 2 21 2 90 2 49 1 118 1 314 1 97 2 
174 1 94 1 
185 1 255 1 304 1 253 1 
17 1 118 3 2 3 55 1 97 3 257 1 90 3 21 3 
118 1 2 1 97 1 159 1 32 1 90 1 21 1 
118 1 17 1 314 1 2 1 97 1 159 1 90 1 21 1 49 1 
80 1 190 1 17 2 2 3 159 1 89 1 48 1 21 3 90 3 49 1 26 1 297 1 118 3 264 1 185 1 55 1 97 3 122 1 101 1 34 1 244 1 304 1 38 1 253 1 
118 1 2 1 97 2 55 1 257 1 90 2 21 2 104 1 71 1 
17 1 190 1 2 3 159 1 48 1 21 3 90 3 49 1 26 1 141 1 118 3 297 1 264 1 55 2 97 3 287 1 122 1 244 1 38 1 
17 1 2 2 174 1 46 1 21 2 90 2 49 1 118 2 55 1 97 2 
185 1 304 1 253 1 
307 1 185 1 159 1 214 1 257 1 253 1 
132 1 174 1 136 1 84 1 85 2 46 1 88 1 139 1 296 1 94 1 184 1 263 1 262 1 146 2 100 1 303 1 16 1 191 1 233 1 282 1 162 3 313 1 29 1 249 1 
118 1 264 1 2 1 97 1 159 1 90 1 21 1 128 1 
65 1 17 1 2 4 47 1 257 1 21 5 90 5 49 1 71 1 118 4 55 2 97 5 244 1 104 1 
118 2 2 2 97 2 159 1 32 1 90 2 21 2 128 1 
91 1 148 1 
91 1 148 1 
284 1 14 1 
284 1 14 1 
284 1 14 1 
119 1 91 1 148 1 
119 1 91 1 148 1 
119 1 91 1 148 1 
256 1 91 1 148 1 
284 1 232 1 20 1 91 2 14 1 148 2 
102 1 91 1 148 1 
102 1 91 1 148 1 
102 1 91 1 148 1 
173 1 308 1 4 2 110 1 86 2 68 1 48 2 91 2 163 2 116 1 165 2 267 1 145 2 287 1 122 2 291 1 148 2 230 3 63 1 
2 2 4 1 211 1 256 1 257 1 48 1 91 1 90 2 145 1 97 2 305 1 230 1 148 1 188 1 308 1 274 1 21 2 200 1 163 1 165 1 118 2 122 1 247 1 35 1 
64 1 36 1 290 1 
93 1 
93 1 
93 1 
93 1 
107 3 42 1 156 1 6 1 48 4 95 1 237 1 219 1 312 1 287 1 122 4 243 1 208 1 
189 1 107 3 156 1 48 4 197 1 95 2 237 1 219 1 10 1 287 1 122 4 243 1 292 1 208 1 
80 1 42 1 132 1 2 1 3 1 87 1 6 1 48 3 88 1 90 1 184 1 53 1 219 1 221 1 224 1 97 1 98 1 100 1 12 1 147 1 17 1 107 2 159 1 234 1 198 1 21 1 161 1 236 2 237 1 312 1 118 1 72 3 32 1 287 2 122 3 247 1 77 1 
42 1 132 1 3 1 6 1 88 1 48 2 184 1 53 1 221 1 224 1 98 1 100 1 12 1 107 1 234 1 198 1 161 1 236 2 237 1 312 1 72 3 240 1 287 1 122 2 247 1 77 1 
130 1 286 1 195 1 
130 1 180 1 
39 1 
130 1 76 1 
152 1 153 1 130 2 195 2 74 1 76 1 39 1 
130 1 74 1 76 1 
130 1 213 1 
131 1 132 2 136 4 181 2 162 7 114 1 262 3 263 4 265 1 146 3 226 1 100 2 242 1 288 2 59 1 126 1 251 1 151 1 
131 1 132 2 136 6 181 2 162 7 114 3 262 3 263 4 265 1 146 3 226 1 100 2 242 1 288 2 59 1 126 1 251 1 151 1 
131 1 132 2 136 4 181 2 263 4 262 3 265 1 226 1 146 3 100 2 59 1 151 1 67 1 162 7 114 1 242 1 288 2 126 1 251 1 
209 1 131 1 132 5 136 9 294 1 254 1 84 1 85 2 88 3 139 1 181 3 184 3 263 14 262 5 265 1 226 1 146 16 100 5 59 2 303 1 151 1 162 30 114 4 24 1 164 1 205 4 242 1 288 3 246 3 249 1 250 1 37 1 126 2 77 3 251 2 
172 1 131 1 132 2 136 6 84 2 85 4 139 2 181 2 263 5 262 4 146 4 226 1 100 2 303 2 59 1 149 1 151 1 162 9 114 2 164 1 242 1 288 2 249 2 126 1 251 1 
81 1 175 1 5 1 215 1 259 1 281 1 50 1 283 1 311 1 298 1 225 1 186 1 185 1 56 1 170 1 127 1 
81 1 154 1 18 1 175 1 5 2 215 2 259 1 50 1 311 1 204 1 298 1 186 1 185 1 56 1 170 1 301 1 127 1 
298 1 154 1 18 1 185 1 170 1 5 1 259 1 215 1 301 1 127 1 50 1 311 1 
158 1 175 1 111 1 5 1 215 1 259 2 50 2 115 1 204 1 298 2 144 1 186 1 185 1 170 2 253 1 
81 1 154 1 175 1 5 1 215 1 259 1 281 1 50 1 311 1 298 1 225 1 186 1 185 1 56 1 170 1 127 1 
248 1 
185 1 122 1 243 1 48 1 253 1 
106 1 129 1 133 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 95 1 26 1 297 1 264 1 285 1 11 2 97 1 122 2 228 1 104 1 
129 1 44 1 48 3 90 1 95 1 219 1 297 1 54 1 264 1 97 1 11 3 228 1 104 1 106 1 190 1 310 1 159 1 21 1 26 1 117 1 285 1 287 1 122 3 208 1 
106 1 129 1 133 1 190 1 44 1 159 1 310 1 48 3 21 1 90 1 70 1 95 2 26 1 117 1 54 1 297 1 264 1 285 1 11 3 97 1 122 3 228 1 104 1 208 1 
129 1 80 1 133 1 2 1 44 1 87 1 48 3 90 2 95 2 219 1 54 1 297 1 264 1 97 2 11 3 228 1 103 1 147 1 104 1 106 1 17 1 190 1 310 1 159 2 21 2 70 1 26 1 117 1 118 1 285 1 32 1 287 1 122 3 208 1 
106 1 129 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 26 1 297 1 264 1 285 1 11 2 97 1 122 2 228 1 243 1 104 1 
106 1 129 1 210 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 26 1 9 1 297 1 264 1 285 1 11 2 97 1 122 2 228 1 243 1 104 1 
106 1 129 1 210 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 26 1 9 1 297 1 264 1 285 1 11 2 97 1 122 2 228 1 243 1 104 1 
106 1 129 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 26 1 297 1 264 1 285 1 11 2 97 1 99 1 122 2 228 1 243 1 289 1 104 1 
129 1 210 1 133 1 44 1 48 2 90 1 95 1 297 1 142 1 9 1 264 1 97 1 11 3 228 1 104 1 106 1 190 1 310 1 159 1 21 1 70 1 26 1 117 1 285 1 122 2 243 1 
129 1 210 1 133 1 44 1 48 2 90 1 95 1 297 1 142 1 9 1 264 1 97 1 11 3 228 1 104 1 106 1 190 1 310 1 159 1 21 1 70 1 26 1 117 1 285 1 122 2 243 1 
106 1 129 1 190 1 44 1 159 1 310 1 48 2 21 1 90 1 26 1 297 1 264 1 285 1 11 2 97 1 122 2 228 1 243 1 104 1 
136 1 85 2 84 1 139 1 181 1 262 1 313 1 29 1 286 1 226 1 242 1 288 1 303 1 249 1 16 1 
132 2 174 7 136 2 84 2 85 4 46 1 257 1 139 2 88 2 92 1 261 1 94 7 184 2 262 2 263 4 146 7 100 2 303 2 16 2 307 1 277 1 159 1 280 1 235 1 201 1 162 11 24 1 29 1 205 2 246 2 249 2 77 2 
2 1 45 1 255 1 46 1 85 2 84 1 178 1 139 1 90 1 261 1 263 1 268 1 185 1 97 1 55 1 146 1 303 1 304 1 16 1 21 1 201 1 162 2 118 1 29 1 123 1 244 1 249 1 253 1 
2 1 84 1 85 2 139 1 21 1 90 1 261 1 28 1 118 1 29 1 185 1 55 1 97 1 244 1 303 1 249 1 16 1 253 1 
2 1 45 1 84 2 85 4 139 2 90 1 263 1 97 1 185 4 146 1 55 1 57 1 303 2 16 2 196 1 21 1 283 1 162 2 201 1 25 1 313 1 118 1 29 2 238 1 249 2 253 2 
132 1 17 1 2 1 83 1 85 2 84 1 139 1 90 1 21 1 49 1 162 2 184 1 261 1 263 2 118 1 29 1 97 1 303 1 249 1 77 1 16 1 
132 1 233 1 85 2 84 1 139 1 162 1 184 1 263 1 313 1 29 1 303 1 249 1 16 1 
174 1 136 1 46 1 85 2 84 1 139 1 88 1 296 1 162 2 94 1 262 1 313 1 29 1 146 2 100 1 303 1 249 1 16 1 
132 1 174 1 136 1 46 1 85 2 84 1 88 1 139 1 162 3 94 1 184 1 262 1 263 1 313 1 29 1 146 2 100 1 303 1 249 1 77 1 16 1 
132 1 233 1 85 2 84 1 139 1 162 1 184 1 263 1 238 1 29 1 303 1 249 1 16 1 
174 1 136 1 46 1 85 2 84 1 139 1 88 1 296 1 162 2 94 1 262 1 238 1 29 1 146 2 100 1 303 1 249 1 16 1 
132 1 174 1 136 1 46 1 85 2 84 1 88 1 139 1 162 3 94 1 184 1 262 1 263 1 238 1 29 1 146 2 100 1 303 1 249 1 77 1 16 1 
132 1 174 1 136 1 46 1 85 2 84 1 88 1 139 1 162 3 94 1 184 1 262 1 263 1 29 1 146 2 100 1 303 1 249 1 77 1 16 1 
185 1 34 1 304 1 253 1 
307 1 159 1 214 1 85 2 84 1 257 1 139 1 162 1 201 1 29 1 146 1 185 1 187 1 303 1 249 1 16 1 253 1 
132 1 174 1 136 1 46 1 85 2 84 1 88 1 139 1 162 3 94 1 261 1 184 1 262 1 263 1 29 1 146 2 100 1 303 1 249 1 77 1 16 1 
168 1 185 1 34 1 304 1 283 1 
132 1 2 1 84 1 85 2 139 1 88 1 90 1 49 1 183 1 261 1 184 1 263 1 97 1 146 1 100 1 303 1 16 1 17 1 21 1 162 2 118 1 29 1 249 1 77 1 
132 2 136 2 137 1 294 1 84 2 85 4 139 2 88 2 184 2 263 4 262 2 146 7 100 2 227 1 303 2 149 1 276 1 112 1 162 11 202 1 24 1 205 2 317 1 33 1 75 1 246 1 249 2 77 2 
41 1 132 3 135 1 136 1 177 1 294 2 84 2 85 4 138 1 139 2 88 3 184 3 262 1 263 10 146 14 100 3 227 1 303 2 149 1 273 1 276 1 112 2 279 1 162 24 202 1 164 1 166 1 205 2 33 2 75 4 246 2 249 2 77 3 
132 2 136 1 294 1 84 2 85 4 139 2 88 2 184 2 263 5 262 1 146 8 100 2 227 1 303 2 149 1 273 1 276 1 112 1 162 13 202 1 24 1 205 2 317 1 33 1 75 2 246 1 249 2 77 2 
132 2 136 1 294 1 84 2 85 4 139 2 88 2 184 2 263 5 262 1 146 8 100 2 227 1 303 2 149 1 273 1 276 1 112 1 162 13 202 1 24 1 205 2 317 1 33 1 75 2 246 1 249 2 77 2 
41 1 132 7 135 1 136 6 177 1 294 2 84 1 85 2 138 1 139 1 88 7 181 1 184 7 263 15 262 6 226 1 146 22 100 7 227 1 303 1 149 1 273 1 276 1 112 1 279 1 235 2 162 37 202 1 24 2 166 1 205 4 242 1 33 1 75 3 288 1 246 4 249 1 77 7 
116 1 173 1 165 1 4 1 145 1 7 1 91 1 148 1 163 1 63 1 
165 1 299 1 4 1 145 1 169 1 91 1 217 1 148 1 163 1 
274 1 256 1 
173 1 308 1 4 1 86 1 68 1 48 1 91 1 163 1 116 1 165 1 267 1 145 1 287 1 122 1 291 1 148 1 230 2 63 1 
173 1 308 1 4 1 86 1 68 1 48 1 91 1 163 1 116 1 165 1 267 1 145 1 287 1 122 1 291 1 148 1 230 2 63 1 
173 1 308 1 4 1 86 1 68 1 48 1 91 1 163 1 116 1 165 1 267 1 145 1 287 1 122 1 291 1 148 1 230 2 63 1 
119 1 20 1 216 1 
119 1 20 1 216 1 
120 1 102 1 
120 1 20 1 102 1 
200 1 188 1 
2 2 4 1 211 1 86 1 256 1 257 1 48 1 90 2 91 1 145 1 97 2 305 1 148 1 230 1 188 1 107 1 274 1 68 1 21 2 113 1 200 1 163 1 165 1 118 2 122 1 247 1 35 1 
119 1 216 1 
120 1 20 1 102 1 
82 1 45 1 278 1 84 1 85 2 196 1 139 1 21 2 90 2 201 1 162 2 261 1 263 1 96 1 29 1 185 2 146 1 97 2 57 2 303 1 249 1 16 1 105 1 
143 1 154 1 193 1 185 2 56 1 206 1 259 1 127 1 283 1 
154 1 185 1 56 1 206 1 259 1 127 1 140 1 
193 1 158 1 269 1 185 1 259 1 253 1 
143 1 154 1 193 1 185 1 56 1 206 1 259 1 127 1 
316 1 
219 1 72 1 221 1 315 1 286 1 287 1 252 1 
243 1 
185 1 243 1 253 1 
243 1 
210 1 122 1 243 1 48 1 
315 1 243 1 
132 1 272 1 3 1 234 1 88 1 198 1 236 2 184 1 72 2 221 1 100 1 287 1 77 1 
95 1 219 1 287 1 122 1 48 1 208 1 
108 1 185 1 243 1 253 1 
118 1 17 1 80 1 2 1 185 1 97 1 34 1 89 1 90 1 21 1 304 1 253 1 
243 1 
165 1 66 1 145 1 
165 1 66 1 145 1 
165 1 66 1 145 1 
116 1 165 1 145 1 200 1 182 1 
165 1 145 1 31 1 
165 1 145 1 31 1 
165 1 145 1 31 1 
165 1 145 1 
91 1 148 1 
131 1 132 2 136 6 85 4 84 2 139 2 181 2 162 10 114 3 263 5 262 3 164 1 146 5 226 1 100 2 242 1 288 2 303 2 249 2 151 1 
262 1 136 1 226 1 286 1 242 1 288 1 181 1 
132 1 136 1 194 1 85 2 84 1 139 1 88 1 162 3 184 1 262 1 263 1 146 2 100 1 303 1 249 1 77 1 
132 1 136 1 294 1 88 1 162 6 24 1 184 1 262 1 263 2 205 2 146 4 100 1 246 1 77 1 
131 1 132 4 136 5 85 2 84 1 88 2 139 1 181 2 184 2 263 7 262 4 226 1 146 9 100 4 303 1 151 1 277 1 235 1 162 16 114 1 24 1 164 1 205 2 242 1 288 2 246 2 249 1 77 2 
205 1 146 1 162 1 
263 1 246 1 162 1 
132 1 194 1 136 2 84 1 85 2 139 1 88 1 22 1 162 5 184 1 263 2 262 2 146 3 100 1 303 1 249 1 77 1 
41 1 132 2 136 1 294 1 177 1 84 1 85 2 138 1 139 1 88 2 184 2 263 4 262 1 146 6 100 2 303 1 149 1 279 1 162 10 166 1 205 1 246 1 249 1 77 2 
263 1 132 1 146 1 100 1 162 2 151 1 
136 2 85 2 84 1 139 1 181 1 162 3 114 1 263 1 262 1 164 1 226 1 146 2 242 1 288 1 303 1 249 1 306 1 
131 1 132 2 136 4 84 1 85 2 139 1 181 1 162 8 114 2 262 2 263 4 146 4 100 2 288 1 303 1 249 1 149 1 151 1 
132 1 85 2 84 1 139 1 162 1 184 1 263 1 303 1 249 1 149 1 
132 1 136 1 85 2 84 1 139 1 88 1 162 3 184 1 262 1 263 1 146 2 100 1 303 1 249 1 77 1 149 1 
136 2 85 6 84 3 139 3 181 1 162 3 114 1 164 1 262 1 263 1 317 1 146 2 288 1 303 3 249 3 306 1 149 1 
209 1 131 1 132 4 136 6 294 1 254 1 84 4 85 8 139 4 88 2 181 2 184 2 262 3 263 10 226 1 146 12 100 4 303 4 149 1 151 1 194 1 162 22 114 3 164 1 205 3 317 1 242 1 288 2 246 3 249 4 37 1 77 2 
131 1 132 2 136 4 294 1 84 1 85 2 139 1 181 2 263 4 262 3 146 4 226 1 100 2 303 1 149 1 151 1 162 8 114 1 166 1 205 1 242 1 288 2 246 1 249 1 
132 4 41 1 136 3 177 1 294 1 84 2 85 4 138 1 139 2 88 4 184 4 263 7 262 3 146 11 100 4 303 2 149 1 194 1 279 1 235 1 162 18 24 1 166 1 205 2 246 2 249 2 77 4 
131 1 41 1 132 4 136 5 294 1 177 1 84 3 85 6 138 1 139 3 88 2 181 2 184 2 263 7 262 4 226 1 146 10 100 4 303 3 149 1 151 1 194 1 279 1 162 17 114 1 164 1 166 1 205 1 242 1 288 2 246 1 249 3 77 2 
41 1 132 2 136 1 294 1 177 1 84 2 85 4 138 1 139 2 88 2 184 2 263 4 262 1 146 6 100 2 303 2 149 1 194 1 279 1 162 10 166 1 205 1 246 1 249 2 77 2 
131 1 132 2 136 4 294 1 84 1 85 2 139 1 181 2 263 4 262 3 146 4 226 1 100 2 303 1 149 1 151 1 162 8 114 1 166 1 205 1 242 1 288 2 246 1 249 1 
41 1 132 2 136 1 294 1 177 1 84 1 85 2 138 1 139 1 88 2 184 2 263 4 262 1 146 6 100 2 303 1 149 1 279 1 162 10 166 1 205 1 246 1 249 1 77 2 
41 1 132 2 136 1 177 1 294 1 84 3 85 6 138 1 139 3 88 2 184 2 263 4 262 1 146 7 100 2 303 3 149 1 194 1 279 1 162 11 164 1 166 1 205 1 246 1 249 3 77 2 
41 1 132 2 136 2 177 1 294 1 84 3 85 6 138 1 139 3 88 2 184 2 263 4 262 2 146 7 100 2 303 3 149 1 279 1 162 11 164 1 166 1 205 1 317 1 246 1 249 3 77 2 
131 1 132 2 136 6 181 2 162 6 114 3 263 3 262 3 146 3 226 1 100 2 242 1 288 2 151 1 
41 1 132 2 136 1 177 1 294 1 84 3 85 6 138 1 139 3 88 2 184 2 263 4 262 1 146 7 100 2 303 3 149 1 279 1 162 11 164 1 166 1 205 1 317 1 246 1 249 3 77 2 
40 1 97 1 257 1 90 1 21 1 104 1 71 1 
40 1 109 1 167 1 97 1 257 1 258 1 90 1 21 1 302 1 13 1 104 1 71 1 
286 1 185 1 253 1 
118 1 2 1 185 1 97 1 55 1 90 1 21 1 253 1 
118 1 2 1 185 1 97 1 55 1 90 1 21 1 62 1 
118 1 2 1 185 1 97 1 55 1 90 1 21 1 62 1 
185 1 122 1 48 1 62 1 
185 1 122 1 48 1 62 1 
239 1 185 1 
185 1 253 1 
2 1 278 1 84 1 85 2 139 1 21 1 90 1 283 1 261 1 118 1 29 1 185 1 55 1 97 1 303 1 249 1 16 1 
107 1 108 1 185 1 122 1 243 1 48 1 253 1 
239 1 185 1 
19 1 185 4 283 1 23 1 253 1 
185 1 150 1 
185 1 253 1 
154 1 185 2 283 1 
185 2 283 1 253 1 
185 2 283 1 253 1 
118 1 2 1 185 1 97 1 55 1 90 1 21 1 253 1 
185 1 62 1 
96 1 82 1 155 1 97 1 90 1 21 1 60 1 229 1 105 1 
0 1 61 1 60 1 
155 1 257 1 125 1 60 1 229 1 
0 1 190 1 107 1 155 2 176 1 159 1 257 1 48 2 26 1 219 1 297 1 264 1 287 1 122 2 60 1 61 1 125 2 229 2 38 1 
218 1 192 1 157 1 286 1 
218 1 192 1 157 1 175 1 186 1 5 1 215 1 
298 1 170 1 5 1 
192 1 231 2 309 1 157 1 175 1 5 3 215 3 218 1 30 1 225 1 73 1 186 1 
192 1 18 1 157 1 175 1 5 2 215 2 8 1 218 1 27 1 186 1 
64 1 192 1 293 1 266 1 225 1 175 1 186 1 5 1 215 1 36 1 290 1 
218 1 192 1 225 1 175 1 186 1 5 1 215 1 
218 2 157 1 225 1 175 1 186 1 5 1 215 1 
218 1 192 1 43 1 225 1 175 2 186 2 5 2 69 1 215 2 171 1 
192 1 266 1 121 1 225 1 175 1 186 1 207 1 5 1 215 1 78 1 
225 1 175 1 186 1 5 1 215 1 318 1 93 1 
192 2 157 1 18 2 175 1 5 3 215 3 8 1 218 1 27 1 266 1 225 1 186 1 15 1 78 1 
218 1 192 1 157 1 225 1 175 1 186 1 5 1 215 1 
231 1 192 3 157 2 18 2 175 1 5 4 215 4 8 1 218 2 30 1 266 1 73 1 186 1 78 1 
218 1 203 1 192 1 300 1 157 1 18 1 225 1 175 1 186 1 5 2 215 2 52 1 
192 1 231 2 157 1 175 1 5 3 215 3 218 1 30 1 225 1 73 2 186 1 245 1 
79 1 192 2 160 2 295 1 
222 1 225 1 175 1 186 1 5 1 215 1 
157 1 175 1 5 1 215 1 8 1 218 1 225 1 121 1 186 1 
260 1 
218 1 192 1 157 1 225 1 175 1 186 1 5 1 215 1 
218 1 192 1 231 1 157 1 121 1 225 1 175 1 186 1 5 2 215 2 
192 1 266 1 8 1 78 1 
218 1 192 1 

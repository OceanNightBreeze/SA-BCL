#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 63 122 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 63 122 94 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 63 49 242 18 (40,253) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 202 164 204 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 202 164 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 63 159 168 266 145 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 63 286 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) (95,182) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (95,182) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) (95,182) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (1,54,136,151) (1,54,136,151) (1,54,136,151) 92 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 70 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 63 159 78 22 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 63 122 290 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 63 122 260 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 63 122 153 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 63 49 242 18 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 63 49 242 18 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 63 122 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 63 122 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 63 10 47 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 63 10 47 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 63 10 47 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 63 10 47 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 63 10 47 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 63 122 153 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 288 284 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 63 122 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 202 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 70 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 63 159 168 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 63 159 78 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 63 159 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 63 74 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 63 159 168 186 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 63 49 124 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 63 285 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 63 49 242 262 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 97 102 201 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 63 159 168 266 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 97 102 201 184 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
70 1 27 1 29 1 
27 1 71 1 84 2 
194 1 181 1 233 2 257 2 88 2 239 2 246 2 220 2 
33 2 147 1 150 1 216 1 257 2 154 1 41 1 220 3 42 1 4 2 165 1 194 1 87 2 88 3 122 1 123 1 15 1 269 1 96 1 173 1 233 2 235 1 239 2 205 1 63 1 64 1 245 1 291 2 292 1 144 1 67 1 31 1 246 2 
126 1 233 1 257 1 239 1 280 1 220 1 194 1 88 1 106 1 246 1 
69 1 99 1 109 1 237 1 259 1 220 1 83 1 27 1 29 1 195 1 88 1 141 1 106 1 246 1 
69 1 126 1 99 1 233 2 257 2 239 2 259 2 280 1 23 1 220 2 83 2 27 1 194 1 29 1 195 1 88 2 141 1 106 2 246 2 
83 1 0 1 132 1 259 1 161 1 
83 2 27 1 29 1 0 1 259 2 79 1 171 1 161 1 
83 1 259 1 161 1 
126 1 233 1 257 1 0 1 259 1 239 1 23 1 280 1 220 1 83 1 194 1 88 1 106 1 246 1 
27 1 
83 2 27 1 38 1 29 1 0 1 259 2 79 1 161 1 
251 1 148 1 187 1 232 1 55 1 127 1 174 1 0 2 259 5 79 1 24 2 113 1 161 2 83 5 27 1 244 2 9 2 29 1 48 1 
70 1 181 1 
233 1 257 1 61 1 239 1 220 2 243 1 7 1 181 1 88 2 106 1 246 2 
253 1 231 1 183 1 
33 1 150 1 269 1 235 1 21 1 220 1 205 1 4 1 64 1 165 1 181 1 245 1 87 1 88 1 292 1 31 1 
33 1 253 1 150 1 269 1 233 1 235 1 239 1 220 2 205 1 283 1 64 1 4 1 165 1 5 1 245 1 87 1 88 2 292 1 31 1 246 1 
125 1 233 4 257 1 237 1 239 4 220 5 283 2 193 1 7 1 5 1 181 1 88 5 246 5 265 1 
126 1 233 1 88 1 106 1 239 1 246 1 220 1 
283 1 181 1 233 3 257 1 88 3 239 3 246 3 220 3 
126 1 233 1 88 1 106 1 239 1 246 1 220 1 
233 1 257 1 61 1 239 1 220 1 7 1 88 1 106 1 246 1 
33 1 147 1 69 1 150 1 257 2 259 1 41 1 220 4 42 1 83 1 4 1 165 1 7 1 5 1 194 1 195 1 87 1 88 4 122 1 123 1 94 1 15 1 269 1 273 1 96 1 173 1 99 1 233 3 235 1 239 3 205 1 283 1 63 1 64 1 245 1 141 1 291 2 292 1 67 1 31 1 106 1 246 3 
233 1 237 1 239 1 220 2 283 1 243 1 181 1 88 2 106 1 246 2 265 1 
69 1 273 1 99 1 233 3 257 1 259 1 239 3 220 3 83 1 283 2 27 1 7 1 5 1 261 1 195 1 88 3 141 1 106 1 246 3 
253 1 233 2 257 1 239 2 220 2 283 1 7 1 88 2 183 1 246 2 
33 1 269 1 150 1 235 1 220 1 205 1 4 1 64 1 165 1 181 1 245 1 87 1 88 1 292 1 31 1 
33 1 254 1 269 1 150 1 235 1 190 1 220 1 4 1 64 1 181 1 245 1 87 1 88 1 292 1 31 1 
42 1 15 1 63 1 242 1 18 1 173 1 140 1 291 2 49 1 67 1 40 1 41 1 123 1 
149 1 233 1 239 1 220 1 195 1 88 1 106 1 246 1 
142 1 236 1 
142 1 236 1 
200 1 135 1 
200 1 135 1 
200 1 135 1 
128 1 142 1 236 1 
104 1 142 1 236 1 
221 1 19 1 200 1 142 2 236 2 135 1 
128 1 142 1 236 1 
128 1 142 1 236 1 
36 1 142 1 236 1 
36 1 142 1 236 1 
36 1 142 1 236 1 
83 1 44 1 164 1 202 1 142 1 236 1 259 1 197 1 204 1 
44 1 164 1 202 1 142 1 236 1 197 1 
206 1 105 1 176 1 
206 1 178 1 176 1 
178 1 270 1 225 1 105 2 264 1 176 3 
178 1 272 1 225 1 105 1 264 1 176 2 
178 1 105 1 225 2 264 1 176 2 
249 2 215 1 71 1 72 1 0 4 259 5 79 1 192 1 161 1 83 5 84 3 9 1 262 1 89 1 91 1 49 1 51 1 268 1 199 1 232 1 55 3 174 2 24 1 27 2 242 1 179 1 28 2 244 1 29 1 289 1 66 2 108 1 
71 3 72 1 0 7 79 1 161 6 220 1 83 9 82 5 162 1 8 1 84 9 9 2 88 1 91 3 229 1 232 1 233 1 174 6 238 1 239 1 23 1 24 2 27 5 242 3 28 6 244 2 29 1 106 1 246 1 249 6 257 1 259 9 192 2 194 1 262 3 120 1 49 3 51 4 126 1 199 3 55 8 127 1 132 5 280 1 289 2 68 1 
249 2 71 2 0 2 259 3 192 1 83 3 84 4 9 1 262 1 91 1 49 1 51 1 268 1 199 1 55 3 127 1 174 2 24 1 27 3 242 1 28 2 244 1 29 1 289 1 66 1 108 1 
249 4 71 4 0 3 259 4 192 1 83 4 162 1 84 8 9 1 262 2 91 2 120 1 49 2 51 2 268 1 199 2 55 5 127 1 174 4 24 1 27 5 242 2 28 4 244 1 29 1 289 1 66 2 68 1 108 1 
70 1 150 1 32 1 
150 1 288 1 
281 1 
150 1 235 1 31 1 
150 1 111 1 
150 1 31 1 
198 1 150 3 235 1 287 1 31 1 32 2 
16 1 97 1 201 1 276 1 155 1 102 1 2 1 114 1 208 1 116 1 226 1 184 1 
16 1 97 1 201 1 276 1 155 1 102 1 2 1 114 1 208 1 116 1 226 1 184 1 
16 1 97 1 201 1 276 1 130 1 155 1 102 1 2 1 114 1 208 1 116 1 226 1 184 1 
114 1 2 2 63 1 208 1 116 1 168 1 155 1 159 1 145 1 266 1 
42 1 250 1 114 1 2 1 63 1 286 1 173 1 208 1 116 1 291 2 155 1 67 1 41 1 
54 1 92 1 136 1 1 1 60 1 
54 1 95 1 136 1 1 1 60 1 
136 1 151 1 60 1 182 1 
54 1 95 1 136 1 1 1 60 1 
54 1 92 1 136 1 1 1 60 1 
45 1 
69 1 71 2 150 1 77 1 157 1 79 3 160 1 161 6 220 1 83 5 163 1 4 2 224 2 84 2 9 1 87 2 88 1 11 1 228 1 172 1 232 1 99 1 100 2 174 2 101 1 237 1 240 2 24 1 27 2 244 1 245 1 29 1 31 1 106 1 246 1 33 2 109 1 259 5 192 1 115 4 195 1 118 1 263 1 50 2 53 1 271 2 269 1 55 2 131 2 277 1 134 2 282 1 141 1 292 2 211 1 
69 1 38 1 77 1 109 1 259 3 79 1 220 1 161 2 83 3 115 2 195 1 88 1 263 1 53 1 99 1 100 1 237 1 101 1 282 1 141 1 106 1 246 1 
69 1 38 1 77 1 109 1 259 3 79 1 161 1 220 1 83 3 115 3 195 1 88 1 263 1 53 1 99 1 237 1 101 1 134 1 282 1 27 1 29 1 141 1 106 1 246 1 
69 1 38 1 77 1 109 1 259 3 79 1 220 1 161 2 83 3 115 3 195 1 88 1 263 1 53 1 271 1 99 1 100 1 237 1 101 1 134 1 282 1 27 1 29 1 141 1 106 1 246 1 
69 1 38 1 257 1 77 1 39 1 109 1 259 3 79 1 161 2 220 2 83 3 194 1 115 2 195 1 88 2 263 1 53 1 126 1 271 1 99 1 233 1 100 1 237 1 101 1 239 1 280 1 23 1 282 1 27 1 29 1 141 1 106 2 246 2 
69 1 71 2 77 1 79 2 220 1 161 4 83 4 163 1 224 2 84 2 9 1 88 1 172 1 232 1 99 1 174 1 100 2 237 1 101 1 240 2 24 1 27 2 244 1 29 1 106 1 246 1 109 1 259 4 115 4 195 1 118 1 263 1 50 2 53 1 271 2 55 1 131 2 134 2 282 1 141 1 
69 1 71 2 77 1 109 1 259 4 79 2 161 4 220 1 83 4 163 1 224 2 115 4 9 1 195 1 88 1 263 1 50 2 172 1 53 1 271 2 232 1 55 1 99 1 100 2 174 1 20 1 237 1 101 1 131 2 134 2 240 2 279 1 24 1 282 1 27 1 244 1 29 1 141 1 106 1 246 1 185 1 
69 1 71 2 77 1 109 1 259 4 79 2 161 4 220 1 83 4 163 1 224 2 115 4 9 1 195 1 88 1 263 1 50 2 172 1 53 1 271 2 232 1 55 1 99 1 100 2 174 1 20 1 237 1 101 1 131 2 134 2 240 2 279 1 24 1 282 1 27 1 244 1 29 1 141 1 106 1 246 1 185 1 
69 1 217 1 77 1 109 1 158 2 259 4 79 2 219 1 161 4 220 1 83 4 163 1 224 2 84 2 115 4 85 1 9 1 195 1 88 1 263 1 53 1 271 2 232 1 55 1 99 1 100 2 174 1 59 2 237 1 101 1 131 2 134 2 279 1 24 1 282 1 27 1 244 1 29 1 141 1 106 1 246 1 
69 1 71 2 77 1 109 1 259 4 79 2 220 1 161 5 83 4 163 1 224 2 9 1 115 5 195 1 88 1 263 1 227 1 50 2 172 1 53 1 232 1 271 3 55 1 99 1 174 1 100 3 20 1 237 1 101 1 131 2 240 2 134 3 279 1 24 1 282 1 27 1 244 1 29 1 141 1 106 1 246 1 185 1 
69 1 71 2 77 1 109 1 259 4 79 2 220 1 161 5 83 4 163 1 224 2 9 1 115 5 195 1 88 1 263 1 227 1 50 2 172 1 53 1 232 1 271 3 55 1 99 1 174 1 100 3 20 1 237 1 101 1 131 2 240 2 134 3 279 1 24 1 282 1 27 1 244 1 29 1 141 1 106 1 246 1 185 1 
69 1 217 1 77 1 158 2 79 2 220 1 161 4 83 4 163 1 224 2 84 2 9 1 88 1 232 1 99 1 174 1 100 2 237 1 101 1 24 1 27 1 244 1 29 1 106 1 246 1 109 1 259 4 115 4 195 1 118 1 263 1 53 1 271 2 55 1 59 2 131 2 134 2 282 1 141 1 
42 1 70 1 15 1 16 1 173 1 140 1 226 1 291 2 67 1 41 1 123 1 
42 1 15 1 63 1 173 1 98 1 78 1 291 2 22 1 159 1 67 1 41 1 123 1 
15 1 173 1 98 1 233 1 239 1 41 1 220 1 42 1 283 1 63 1 5 1 88 1 290 1 291 2 67 1 122 1 246 1 123 1 
33 1 15 1 173 1 98 1 233 1 239 1 41 1 260 1 220 1 42 1 283 1 63 1 4 1 5 1 87 1 88 1 292 1 291 2 67 1 122 1 246 1 123 1 
33 1 15 1 173 1 153 1 155 1 41 1 42 1 114 1 63 1 4 1 87 1 119 1 90 1 291 2 292 1 67 1 122 1 123 1 
15 1 199 1 98 1 173 1 233 1 257 1 155 1 239 1 41 1 220 1 42 1 114 1 63 1 242 1 7 1 262 1 88 1 91 1 291 2 49 1 30 1 67 1 246 1 123 1 
15 1 34 1 35 1 253 1 231 1 199 1 173 1 155 2 110 1 41 1 42 1 114 2 140 1 291 2 91 1 67 1 183 1 123 1 
42 1 15 1 63 1 242 1 18 1 173 1 140 1 291 2 49 1 67 1 41 1 123 1 
15 1 253 1 231 1 199 1 173 1 155 2 41 1 42 1 114 2 63 1 242 1 140 1 262 1 291 2 91 1 49 1 67 1 183 1 123 1 
15 1 34 1 35 1 253 1 231 1 199 1 173 1 155 2 110 1 41 1 42 1 114 2 119 1 291 2 91 1 67 1 183 1 123 1 
42 1 15 1 63 1 242 1 18 1 173 1 119 1 291 2 49 1 67 1 41 1 123 1 
15 1 253 1 231 1 199 1 173 1 155 2 41 1 42 1 114 2 63 1 242 1 262 1 119 1 291 2 91 1 49 1 67 1 183 1 123 1 
15 1 253 1 231 1 199 1 173 1 155 2 41 1 42 1 114 2 63 1 242 1 262 1 291 2 91 1 49 1 67 1 183 1 123 1 
33 1 15 1 147 1 150 1 269 1 173 1 235 1 41 1 220 1 205 1 42 1 63 1 4 1 64 1 165 1 245 1 87 1 88 1 291 2 292 1 67 1 31 1 122 1 123 1 
33 1 15 1 254 1 150 1 269 1 173 1 235 1 129 1 41 1 190 1 220 1 42 1 63 1 4 1 64 1 245 1 87 1 88 1 291 2 292 1 67 1 31 1 122 1 123 1 
15 1 253 1 231 1 199 1 98 1 173 1 155 2 41 1 42 1 114 2 63 1 242 1 262 1 291 2 91 1 49 1 67 1 183 1 123 1 
33 1 147 1 253 1 150 1 155 2 156 1 41 1 220 1 42 1 114 2 4 1 165 1 46 1 87 1 262 1 88 1 91 1 49 1 123 1 15 1 231 1 199 1 269 1 173 1 235 1 205 1 63 1 64 1 242 1 245 1 291 2 31 1 67 1 183 1 
253 1 257 1 155 2 41 1 112 1 220 1 42 1 114 2 7 1 262 1 88 1 91 1 49 1 123 1 15 1 231 1 199 1 173 1 98 1 233 1 239 1 63 1 242 1 291 2 67 1 246 1 183 1 
13 1 42 1 250 1 26 1 63 1 6 1 173 1 47 1 10 1 291 2 67 1 41 1 
13 1 42 1 250 1 26 1 63 1 6 1 173 1 47 1 10 1 291 2 67 1 41 1 
13 1 42 1 250 1 26 1 63 1 6 1 173 1 47 1 10 1 291 2 67 1 41 1 
13 1 42 1 250 1 26 1 63 1 6 1 173 1 47 1 10 1 291 2 67 1 41 1 
13 1 42 1 250 1 26 1 63 1 6 1 173 1 47 1 10 1 291 2 67 1 41 1 
252 1 15 1 173 1 98 1 153 1 155 1 41 1 220 2 42 1 114 1 63 1 88 2 90 1 291 2 293 1 67 1 122 1 246 2 294 1 230 1 123 1 
33 2 270 1 269 1 57 1 76 1 218 1 156 1 176 2 206 1 178 1 4 2 245 1 105 1 87 2 167 1 209 1 121 1 213 1 214 1 
33 1 270 1 269 1 73 1 57 1 76 1 218 1 176 2 206 1 178 1 4 1 245 1 105 1 87 1 167 1 209 1 213 1 
33 1 269 1 150 1 17 1 234 1 160 1 4 1 245 1 87 1 167 1 292 1 31 1 121 1 228 1 
33 1 270 1 269 1 57 1 76 1 218 1 176 2 206 1 178 1 4 1 245 1 105 1 87 1 167 1 209 1 121 1 213 1 214 1 
223 1 
70 1 27 1 187 1 55 1 29 1 174 1 48 1 
71 1 259 1 79 1 161 1 83 1 84 1 9 1 50 1 172 1 232 1 55 1 174 1 240 1 24 1 27 2 244 1 29 1 
33 1 198 1 269 1 150 1 232 1 235 1 24 1 25 1 284 1 4 1 245 1 244 1 9 1 87 1 288 1 292 1 31 1 
249 5 71 3 157 1 259 1 159 1 79 1 192 1 81 2 161 1 83 1 166 1 84 6 9 2 262 2 168 1 91 2 169 1 49 2 93 1 232 2 199 2 55 8 56 1 174 5 175 1 24 2 27 5 242 2 28 5 244 2 138 1 139 1 29 2 146 1 186 1 
232 1 201 1 20 1 259 1 81 1 24 1 83 1 102 1 244 1 9 1 184 1 
232 1 187 1 55 1 174 1 24 1 27 1 244 1 9 1 29 1 48 1 
93 1 249 5 71 5 199 2 55 5 74 1 174 5 81 2 27 5 242 2 28 5 84 10 262 2 91 2 49 2 
83 1 27 1 29 1 259 1 79 1 161 1 
33 4 150 2 37 1 188 1 75 1 157 2 259 3 79 2 192 2 160 1 161 4 83 3 4 4 9 2 87 4 228 1 52 1 269 3 232 1 55 2 274 2 127 1 235 1 174 2 277 1 177 1 24 2 207 1 245 2 244 2 103 1 292 2 211 1 31 2 
33 1 147 1 150 1 257 2 41 1 220 3 42 1 4 1 165 1 194 1 87 1 88 3 122 1 123 1 15 1 269 1 96 1 173 1 233 2 235 1 239 2 205 1 63 1 64 1 245 1 291 2 292 1 67 1 31 1 246 2 
249 2 71 2 232 1 55 1 174 2 157 1 192 1 24 1 27 4 28 2 84 4 244 1 208 1 9 1 29 2 
202 1 197 1 
202 1 197 1 
202 1 197 1 
202 1 197 1 
202 1 197 1 
202 1 197 1 
202 1 197 1 
202 1 197 1 
142 1 236 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
42 2 250 1 63 1 173 2 137 1 168 1 291 4 159 1 67 2 41 2 186 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
42 2 250 1 63 1 137 1 173 2 168 1 291 4 159 1 67 2 41 2 186 1 
42 2 250 1 63 1 222 1 173 2 168 1 291 4 159 1 67 2 41 2 186 1 
102 1 16 1 97 1 201 1 226 1 184 1 
42 2 250 1 63 1 222 1 173 2 168 1 291 4 159 1 67 2 41 2 186 1 
16 1 97 1 173 2 201 1 41 2 42 2 102 1 86 1 291 4 226 1 67 2 184 1 
70 1 16 1 226 1 
42 1 114 2 63 1 242 1 199 1 173 1 137 1 262 1 155 2 91 1 291 2 49 1 67 1 41 1 
63 1 168 1 159 1 
63 1 78 1 159 1 
63 1 159 1 
114 1 155 1 146 1 
63 1 74 1 
42 1 250 1 63 1 173 1 168 1 291 2 159 1 67 1 41 1 186 1 
124 1 114 1 63 1 155 1 91 1 49 1 
63 1 285 1 
102 1 97 1 201 1 184 1 
250 1 35 1 199 1 173 1 155 2 110 1 41 1 42 1 114 2 291 2 91 1 67 1 
42 1 114 2 250 1 63 1 242 1 199 1 173 1 262 1 155 2 91 1 291 2 49 1 67 1 41 1 
42 1 102 1 250 1 97 1 173 1 201 1 291 2 67 1 41 1 
42 3 250 1 63 1 222 1 137 1 173 3 168 1 291 6 159 1 67 3 41 3 266 1 
181 1 256 1 88 1 237 1 246 1 265 1 220 1 
14 1 267 1 65 1 275 1 107 1 
33 1 70 1 4 1 269 1 150 1 245 1 87 1 292 1 31 1 228 1 160 1 
33 1 150 1 269 1 233 1 235 1 239 1 220 2 283 1 64 1 4 1 165 1 181 1 245 1 87 1 88 2 292 1 31 1 246 1 
33 1 69 1 150 3 111 1 220 2 4 1 165 1 87 1 195 1 88 2 196 1 269 1 274 1 233 2 235 2 239 1 283 1 64 1 181 1 245 1 31 2 106 1 246 2 
33 1 69 1 150 3 111 1 190 1 220 2 4 1 87 1 195 1 88 2 196 1 269 1 274 1 233 2 235 2 239 1 283 1 64 1 243 1 181 1 245 1 31 2 106 2 246 2 
33 1 150 2 257 1 259 2 220 1 161 1 83 2 4 1 194 1 87 1 88 1 126 1 99 1 274 1 233 1 239 1 203 1 23 1 280 1 27 1 29 1 288 1 106 1 246 1 32 1 
33 1 150 4 257 1 259 2 111 1 220 1 161 1 43 1 83 2 4 1 194 1 87 1 88 1 196 1 126 1 269 1 274 1 99 1 233 1 235 1 239 1 280 1 23 1 27 1 245 1 29 1 288 1 106 1 31 1 246 1 32 1 
33 1 4 1 269 1 245 1 87 1 212 1 
33 1 198 1 150 1 269 2 152 1 235 1 4 1 245 1 87 1 103 1 292 1 31 1 52 1 
33 1 252 1 147 1 150 1 156 1 41 2 220 2 42 2 4 1 46 1 165 1 87 1 88 2 226 1 12 1 123 2 15 2 16 1 269 1 97 1 98 1 173 2 201 1 233 1 235 1 239 1 205 1 102 1 283 1 64 1 245 1 291 4 31 1 67 2 246 1 184 1 
33 1 187 1 150 2 75 1 0 1 259 3 258 1 191 1 79 1 161 2 83 3 43 1 4 1 9 2 87 1 48 1 232 2 55 1 99 1 174 1 278 1 24 2 27 1 244 2 29 1 288 1 292 1 32 1 
33 1 198 1 150 1 269 1 235 1 281 1 25 1 4 1 245 1 87 1 212 1 31 1 32 1 
33 4 269 1 150 1 255 1 58 1 156 1 160 1 4 4 245 1 87 4 292 1 31 1 228 1 
33 1 150 1 269 2 188 1 235 1 133 1 4 1 207 1 245 1 87 1 103 1 31 1 52 1 
33 1 206 1 178 1 4 1 269 1 245 1 87 1 292 1 213 1 176 1 
33 2 4 2 269 1 245 1 87 2 218 1 156 1 80 1 
33 4 150 3 269 2 255 1 274 1 156 1 160 1 4 5 245 2 87 5 117 1 143 1 292 1 31 2 170 1 228 1 
33 4 150 3 269 2 255 1 274 1 156 1 160 1 4 5 180 1 245 2 87 5 143 1 292 1 31 2 170 1 228 1 
33 1 150 1 269 1 233 1 235 1 239 1 190 1 220 2 283 1 64 1 4 1 181 1 245 1 87 1 88 2 292 1 31 1 246 1 
33 1 198 1 150 1 269 2 274 1 152 1 235 1 4 1 245 1 87 1 103 1 31 1 52 1 
248 1 241 1 181 1 189 1 210 1 
248 1 69 1 257 1 189 1 0 1 259 2 220 1 83 2 3 1 194 1 195 1 88 1 126 1 273 1 99 1 233 1 239 1 62 1 23 1 280 1 241 1 27 1 29 1 141 1 210 1 106 2 246 1 247 1 
248 1 88 1 189 1 210 1 293 1 246 1 294 1 220 1 230 1 
248 1 62 1 247 1 

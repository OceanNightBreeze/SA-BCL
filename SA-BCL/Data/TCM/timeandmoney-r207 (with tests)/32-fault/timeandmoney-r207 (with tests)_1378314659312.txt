#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (224,291) (224,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (224,291) (224,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (224,291) (224,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (224,291) (224,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 302 (255,288) (255,288) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 195 (24,227,276) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 267 279 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 267 279 157 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 127 303 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 136 (190,205,232) (52,171,174) (52,171,174) (52,171,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 22 260 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 65 238 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 78 46 73 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 78 46 73 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 78 46 258 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 65 238 220 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 65 238 220 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 149 72 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 136 (190,205,232) (190,205,232) (190,205,232) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V ERROR java.lang.NullPointerException 149 72 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 107 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 208 244 102 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 128 172 (154,266) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 128 172 (106,245) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (106,245) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (154,266) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 126 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 302 (255,288) (255,288) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 3 165 2 30 1 272 1 278 1 204 1 302 1 255 1 76 2 210 1 121 1 64 3 288 1 
214 1 247 1 144 1 291 1 165 1 249 1 75 1 76 1 64 1 121 1 161 1 224 1 278 1 
214 1 247 1 144 1 291 1 165 1 249 1 75 1 76 1 64 1 121 1 161 1 224 1 278 1 
214 1 247 1 144 1 291 1 165 1 249 1 75 1 76 1 64 1 121 1 161 1 224 1 278 1 
214 1 247 1 144 1 291 1 165 1 249 1 75 1 76 1 64 1 121 1 161 1 224 1 278 1 
214 1 247 4 144 1 105 1 165 1 30 3 69 1 19 2 136 1 8 1 204 1 302 2 255 1 76 1 210 2 121 1 64 4 288 1 
247 1 144 1 165 1 278 1 199 1 135 1 136 1 302 1 255 1 97 1 75 1 76 1 121 1 64 1 288 1 
214 1 247 9 144 1 105 1 66 1 148 1 165 2 30 7 272 1 235 1 69 1 19 2 278 1 136 1 8 1 226 1 204 3 302 4 255 1 76 2 210 4 121 1 64 9 288 1 
214 1 247 9 144 1 105 1 66 1 148 1 165 2 30 7 272 1 235 1 69 1 19 2 278 1 136 1 8 1 226 1 204 3 302 4 255 1 76 2 210 4 121 1 64 9 288 1 
152 1 262 1 101 1 
152 1 262 1 101 1 
28 1 237 1 47 1 152 1 122 1 262 2 101 2 
126 1 
188 1 230 1 17 1 251 1 68 1 18 1 203 1 262 1 124 1 101 1 162 1 185 1 
230 1 50 1 53 1 17 1 251 1 252 1 68 1 18 1 203 1 262 2 101 2 162 1 185 1 
152 1 262 1 101 1 
152 1 262 1 101 1 
262 1 101 1 
50 1 17 2 251 2 53 1 68 2 252 1 9 2 259 1 12 1 
301 1 156 1 
266 1 4 1 108 1 5 1 68 1 202 1 282 1 9 1 285 1 40 2 80 2 160 2 166 1 251 1 21 1 172 1 298 1 25 1 306 1 185 1 263 1 
126 1 
266 1 108 1 166 1 53 1 17 1 251 2 252 1 68 2 172 1 21 1 202 1 298 1 283 1 178 1 117 1 285 1 40 1 160 1 80 1 263 1 
50 1 9 1 283 1 251 3 17 3 53 3 68 3 252 3 
257 1 251 1 17 1 53 1 68 1 252 1 185 1 
50 1 251 1 17 1 53 1 259 1 12 1 68 1 252 1 185 1 
83 1 230 1 50 1 88 1 53 2 17 2 251 2 252 2 68 2 18 1 203 1 283 1 117 1 259 1 262 1 101 1 185 1 162 1 
188 1 9 1 283 1 295 1 251 2 17 2 53 1 68 2 252 1 
83 1 230 1 32 1 53 1 17 1 251 1 252 1 68 1 18 1 203 1 283 1 117 1 262 1 101 1 185 1 162 1 
50 1 53 2 17 2 251 2 156 1 252 2 68 2 283 1 178 1 259 1 
266 1 108 1 251 1 166 1 68 1 202 1 21 1 172 1 298 1 9 1 25 1 285 1 40 1 160 1 80 1 185 1 263 1 
108 1 251 1 166 1 68 1 21 1 172 1 298 1 9 1 10 1 25 1 285 1 40 1 160 1 80 1 185 1 245 1 263 1 
265 1 231 1 149 1 6 3 275 1 156 2 236 1 7 2 201 1 36 1 158 1 11 1 51 1 87 1 168 1 134 1 175 1 23 1 301 2 59 1 180 1 62 2 
230 1 221 1 53 1 17 1 251 1 252 1 68 1 185 1 
50 1 53 3 17 3 251 3 252 3 68 3 283 2 9 1 117 1 25 1 259 1 185 1 
221 1 257 1 251 2 17 2 53 2 68 2 252 2 185 1 
24 1 195 1 100 1 276 1 
24 1 227 1 100 1 
24 1 100 1 
24 1 100 1 
195 1 276 1 
195 1 276 1 
195 1 276 1 
24 1 100 1 141 1 
24 1 100 1 141 1 
24 1 100 1 141 1 
24 1 100 1 277 1 
24 1 100 1 277 1 
24 1 100 1 277 1 
0 1 267 1 279 1 24 1 109 1 100 1 
0 1 267 1 157 1 279 1 24 1 109 1 100 1 262 1 101 1 
214 1 144 2 241 2 97 1 94 1 
214 1 136 1 144 1 
136 1 144 1 97 1 
214 2 144 3 241 1 150 1 97 1 94 1 
214 1 144 2 241 1 97 1 94 1 264 1 
151 1 152 1 262 1 101 1 
198 1 146 1 152 2 262 2 101 2 197 1 
189 1 28 1 191 1 47 1 127 1 152 1 237 1 56 1 122 1 123 1 262 2 101 2 
189 1 28 1 191 1 47 1 127 1 237 1 56 1 303 1 122 1 123 1 262 1 101 1 
250 1 
126 1 
263 1 44 1 
298 1 263 1 
250 1 166 1 298 1 239 2 39 1 229 1 263 2 
298 1 166 1 263 1 
129 1 263 1 
125 1 275 1 222 1 6 7 7 4 115 1 201 3 158 3 116 1 240 1 242 1 59 2 58 2 26 1 284 1 139 1 82 1 43 1 
1 1 231 1 149 3 271 1 6 28 275 4 7 16 115 2 201 10 158 12 72 3 116 1 240 1 242 5 244 1 208 3 284 1 11 1 211 1 287 1 81 1 43 1 82 2 215 4 125 1 90 1 168 1 134 3 175 1 58 3 59 5 26 2 62 2 139 2 
187 1 231 2 271 1 275 1 6 9 113 1 7 5 115 1 201 4 158 4 116 1 240 1 242 1 11 2 284 1 82 1 125 1 168 2 175 2 58 2 59 3 62 4 26 1 139 1 
125 1 275 1 6 7 7 4 115 1 201 3 158 3 116 1 240 1 242 1 59 2 58 2 26 1 284 1 139 1 82 1 43 1 
125 1 275 1 6 7 7 4 115 1 201 3 158 3 116 1 240 1 242 1 59 2 58 2 26 1 284 1 139 1 82 1 43 1 
247 1 143 2 193 2 108 1 293 1 165 1 54 1 278 2 21 1 298 1 254 1 173 2 177 1 38 1 76 1 159 1 228 1 64 1 285 1 40 1 160 1 80 1 263 1 
143 1 144 2 193 1 108 1 150 1 278 1 205 1 76 1 209 1 119 1 40 1 121 1 80 1 160 1 214 1 247 1 165 1 52 1 171 1 136 1 21 1 173 1 174 1 97 1 27 1 64 1 
143 1 144 2 193 1 108 1 150 1 278 1 205 1 76 1 119 1 40 1 121 1 80 1 160 1 214 1 247 1 165 1 52 1 20 1 171 1 136 1 21 1 173 1 174 1 97 1 27 1 64 1 
143 1 144 2 193 1 108 1 150 1 30 2 278 1 205 1 207 1 76 1 209 1 159 1 119 1 40 1 80 1 160 1 288 1 214 1 247 3 165 1 171 1 136 1 21 1 173 1 174 1 255 1 97 1 27 1 64 3 
214 1 247 2 144 2 143 1 193 1 108 1 150 1 30 2 278 1 136 1 21 1 174 1 173 1 205 1 255 1 97 1 207 1 119 1 209 1 64 2 40 1 160 1 80 1 288 1 
223 1 
189 1 28 1 86 1 237 1 22 1 260 1 122 1 285 1 40 1 123 1 262 1 160 1 80 1 101 1 
65 1 188 1 230 1 3 1 49 1 233 1 17 1 251 1 68 1 18 1 296 1 95 1 203 1 262 2 101 2 124 1 185 1 162 1 
188 1 230 1 3 1 49 1 233 1 17 1 251 1 68 1 18 1 296 1 95 1 200 1 203 1 262 2 101 2 124 1 185 1 162 1 
65 1 188 1 230 1 3 1 49 1 233 1 17 1 251 1 68 1 18 1 296 1 95 1 203 1 238 1 262 2 101 2 124 1 185 1 162 1 
262 1 101 1 
28 1 188 1 230 1 3 1 110 1 233 1 68 1 33 1 237 1 203 1 77 1 78 1 122 1 212 1 123 1 124 1 162 1 86 1 49 1 17 1 251 1 18 1 296 1 95 1 96 1 262 2 101 2 185 1 
188 1 28 1 230 1 3 1 110 1 233 1 68 1 33 1 237 1 203 1 73 1 77 1 78 1 122 1 212 1 123 1 124 1 162 1 289 1 46 1 49 1 86 1 251 1 17 1 18 1 296 1 95 1 96 1 262 2 101 2 185 1 
188 1 28 1 230 1 3 1 110 1 233 1 68 1 33 1 237 1 203 1 73 1 77 1 78 1 122 1 212 1 123 1 124 1 162 1 289 1 46 1 49 1 86 1 251 1 17 1 18 1 296 1 95 1 96 1 262 2 101 2 185 1 
188 1 28 1 230 1 3 1 153 1 233 1 68 1 33 1 237 1 203 1 281 1 77 1 78 1 122 1 123 1 212 1 124 1 162 1 46 1 290 1 49 1 86 1 251 1 17 1 18 1 296 1 95 1 258 1 262 2 101 2 185 1 
65 1 188 1 230 1 3 1 49 1 220 1 233 1 17 1 251 1 68 1 18 1 296 1 95 1 203 1 238 1 262 2 101 2 124 1 185 1 162 1 
65 1 188 1 230 1 3 1 49 1 220 1 233 1 17 1 251 1 68 1 18 1 296 1 95 1 203 1 238 1 262 2 101 2 124 1 185 1 162 1 
28 1 188 1 230 1 3 1 153 1 233 1 68 1 33 1 237 1 203 1 281 1 77 1 78 1 122 1 123 1 212 1 124 1 162 1 86 1 49 1 17 1 251 1 18 1 296 1 95 1 262 2 101 2 185 1 
103 1 231 1 4 1 194 1 108 2 6 2 7 1 158 1 38 1 40 2 285 1 11 1 80 2 160 2 213 1 42 1 45 1 51 1 166 1 169 1 168 1 225 1 21 3 298 2 175 1 254 1 23 1 62 2 138 1 263 2 
231 1 149 1 275 1 6 2 156 1 68 1 7 1 201 1 72 1 158 1 11 1 50 1 51 1 53 1 17 1 251 1 252 1 168 1 134 1 253 1 175 1 23 1 301 1 59 1 62 2 259 1 261 1 
265 1 126 1 231 1 175 1 23 1 51 1 62 2 11 1 168 1 
231 2 149 1 196 1 6 10 275 2 156 8 7 6 201 2 158 4 72 2 9 1 242 1 208 2 11 2 246 1 215 2 45 1 15 1 51 1 90 1 168 2 134 2 299 1 253 1 175 2 23 2 301 8 25 1 59 1 62 4 185 1 
2 1 266 1 104 1 231 1 108 1 6 2 156 1 68 2 7 1 202 1 158 1 9 1 282 1 283 1 117 1 40 1 285 1 11 1 80 1 160 1 42 1 45 1 51 1 166 1 251 2 17 1 53 1 252 1 168 1 172 1 21 1 298 1 253 1 300 1 175 1 23 1 25 1 62 2 185 1 263 1 
266 1 231 2 108 1 6 1 68 2 202 1 158 1 283 1 117 1 11 2 285 1 40 1 160 1 80 1 45 1 85 1 294 1 51 2 89 1 166 1 251 2 17 1 53 1 252 1 168 2 172 1 21 1 298 1 253 1 175 2 23 2 61 1 98 1 62 4 263 1 
265 1 231 1 51 1 6 2 275 1 156 1 168 1 134 1 7 2 201 1 175 1 301 1 23 1 242 1 180 1 62 2 11 1 
265 1 231 1 149 1 51 1 87 1 6 1 156 1 168 1 201 1 175 1 301 1 23 1 158 1 59 1 62 2 11 1 
265 1 231 1 149 1 275 1 6 3 156 2 7 2 201 2 72 1 158 1 242 1 11 1 51 1 168 1 134 1 175 1 23 1 301 2 59 1 62 2 
231 1 51 1 6 2 275 1 156 1 168 1 134 1 7 2 201 1 175 1 301 1 23 1 242 1 180 1 62 2 11 1 213 1 
231 1 149 1 51 1 87 1 6 1 156 1 168 1 201 1 175 1 301 1 23 1 158 1 59 1 62 2 11 1 213 1 
231 1 149 1 275 1 6 3 156 2 7 2 201 1 72 1 158 1 11 1 213 1 51 1 168 1 134 1 175 1 23 1 301 2 59 1 62 2 
231 1 149 1 51 1 275 1 6 3 156 2 168 1 134 1 7 2 201 2 175 1 158 1 301 2 23 1 72 1 59 1 242 1 62 2 11 1 
266 1 231 1 108 1 6 2 68 1 7 1 202 1 158 1 9 1 40 1 285 1 11 1 80 1 160 1 42 1 45 1 85 1 51 1 166 1 251 1 168 1 172 1 21 1 298 1 175 1 23 1 25 1 62 2 185 1 263 1 
231 1 108 1 6 1 68 1 158 1 9 1 10 1 40 1 285 1 11 1 80 1 160 1 245 1 45 1 51 1 130 1 166 1 251 1 168 1 172 1 21 1 298 1 175 1 23 1 25 1 62 2 185 1 263 1 
231 1 149 1 51 1 6 3 275 1 156 2 168 1 134 1 7 2 201 2 253 1 175 1 158 1 301 2 23 1 72 1 59 1 242 1 62 2 11 1 
266 1 231 1 108 1 149 1 6 3 275 1 156 2 68 1 7 2 201 2 202 1 158 1 72 1 242 1 40 1 11 1 80 1 160 1 85 1 51 1 89 1 166 1 251 1 168 1 134 1 20 1 172 1 21 1 298 1 175 1 301 2 23 1 59 1 62 2 263 1 
231 1 149 1 275 1 6 3 68 1 156 1 7 2 201 1 158 1 72 1 242 1 11 1 292 1 50 1 51 1 53 1 17 1 251 1 252 1 168 1 134 1 253 1 175 1 23 1 301 1 62 2 259 1 
231 3 269 1 149 4 271 1 31 1 234 1 6 37 275 5 113 1 7 20 115 1 201 8 206 1 158 17 72 4 116 1 240 1 74 1 242 4 244 3 208 3 284 1 11 3 79 1 215 4 125 1 90 1 91 1 92 1 168 3 134 4 297 1 176 1 175 3 304 1 58 1 60 1 179 4 59 4 26 1 62 6 63 2 102 1 
231 4 269 1 149 3 271 2 31 1 234 1 6 35 275 5 113 1 7 20 115 1 201 7 206 1 158 15 72 4 116 1 240 1 74 1 242 3 244 3 208 3 284 1 11 4 79 1 215 4 125 1 90 1 91 1 92 1 168 4 134 4 297 1 176 1 175 4 304 1 58 1 60 1 179 4 59 4 26 1 62 8 63 2 102 1 
231 2 269 1 149 7 271 1 31 1 234 1 196 2 6 45 275 8 113 1 7 27 115 1 201 14 206 1 158 18 72 7 116 1 240 1 74 1 242 7 244 2 208 4 284 1 11 2 79 1 215 4 125 1 90 2 92 1 168 2 134 7 176 1 175 2 304 1 58 1 60 1 179 4 59 7 26 1 62 4 63 1 102 1 
231 2 269 1 149 3 234 1 6 16 275 3 113 1 7 9 201 6 158 7 72 3 242 3 244 1 208 1 11 2 215 2 217 1 90 1 92 1 168 2 134 3 297 1 176 2 175 2 304 1 179 2 59 3 62 4 63 1 
231 3 269 1 149 2 271 2 31 1 234 2 6 24 275 3 113 1 7 14 201 4 206 1 158 10 72 3 242 2 74 1 244 2 208 2 11 3 79 1 215 2 92 1 168 3 134 3 176 1 175 3 304 1 59 2 179 4 60 1 62 6 63 2 102 1 
231 1 4 2 108 1 273 1 6 2 68 2 7 1 71 1 158 1 120 1 40 2 11 1 80 2 160 2 42 1 45 1 14 1 248 1 51 1 251 2 17 2 167 1 168 1 225 1 21 1 298 1 253 1 175 1 23 1 62 2 263 1 
84 1 193 1 108 1 21 1 298 1 254 1 177 1 38 1 99 1 285 1 40 1 160 1 80 1 263 1 
214 1 84 1 190 1 144 2 193 1 108 1 150 1 232 1 136 1 21 1 205 1 97 1 209 1 27 1 119 1 40 1 160 1 80 1 
214 1 84 1 190 1 144 2 193 1 108 1 150 1 232 1 20 1 136 1 21 1 205 1 97 1 209 1 27 1 119 1 40 2 160 2 80 2 
214 1 144 2 193 1 108 1 150 1 232 1 170 1 136 1 21 1 205 1 97 1 209 1 27 1 119 1 40 1 160 1 80 1 
35 1 
28 1 237 1 86 1 122 1 140 1 
72 1 149 1 275 1 123 1 212 1 134 1 
40 1 285 1 80 1 160 1 
126 1 
28 1 237 1 96 1 86 1 110 1 122 1 212 1 123 1 
28 1 108 1 86 1 107 1 166 1 112 1 237 1 21 2 298 1 122 1 285 1 40 1 160 1 80 1 44 1 263 2 229 1 
215 1 28 1 237 1 86 1 244 1 208 1 122 1 212 1 123 1 102 1 
28 1 86 1 132 1 237 1 115 1 181 1 26 1 122 1 262 1 101 1 289 1 
189 1 28 1 237 1 86 1 131 1 122 1 212 1 123 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
0 1 267 1 
24 1 100 1 
231 1 275 1 6 8 113 1 7 4 115 1 201 2 158 4 116 1 240 1 244 1 208 1 11 1 284 1 215 1 125 1 168 1 175 1 58 1 59 2 62 2 26 1 102 1 
231 2 6 11 275 2 113 1 7 6 115 1 201 3 158 5 72 1 116 1 240 1 242 1 37 1 244 1 208 1 284 1 11 2 215 2 125 1 90 1 168 2 134 1 175 2 58 1 59 2 26 1 62 4 102 1 
231 3 149 2 271 1 6 17 275 3 113 1 7 9 115 1 201 4 158 8 72 2 206 1 116 1 240 1 242 1 74 1 37 1 244 1 208 1 284 1 11 3 79 1 215 1 125 1 168 3 134 2 175 3 58 1 60 1 59 3 26 1 62 6 102 1 
231 3 149 1 271 1 6 16 275 3 113 1 7 10 115 1 201 5 158 6 72 2 206 1 116 1 240 1 74 1 242 2 37 1 244 1 208 1 284 1 11 3 79 1 215 1 125 1 168 3 134 2 175 3 58 1 60 1 59 3 26 1 62 6 102 1 
231 1 275 1 6 8 113 1 7 4 115 1 201 2 158 4 116 1 240 1 244 1 208 1 11 1 284 1 215 1 125 1 168 1 175 1 58 1 59 2 62 2 26 1 102 1 
215 1 231 1 149 2 275 2 6 10 113 1 168 1 134 2 7 6 201 2 175 1 206 1 72 2 158 4 242 1 74 1 59 1 60 1 62 2 244 1 208 1 11 1 79 1 102 1 
231 4 149 1 271 2 6 17 275 3 113 1 7 10 115 1 201 5 158 7 72 2 206 1 116 1 240 1 242 2 74 1 37 1 244 1 208 1 284 1 11 4 79 1 215 1 125 1 168 4 134 2 175 4 58 1 60 1 59 3 26 1 62 8 102 1 
231 4 149 2 271 2 6 14 275 3 113 1 7 9 201 6 158 5 72 3 206 1 242 3 74 1 244 1 208 1 11 4 79 1 215 1 168 4 134 3 297 1 175 4 60 1 59 3 62 8 102 1 
125 2 6 7 275 1 7 3 115 3 201 6 158 4 116 1 240 1 59 3 242 3 26 3 284 1 
231 4 149 1 271 2 6 17 275 3 113 1 7 10 115 1 201 4 158 7 72 2 206 1 116 1 240 1 242 1 74 1 244 1 208 1 284 1 11 4 79 1 215 1 125 1 168 4 134 2 297 1 175 4 58 1 60 1 59 3 26 1 62 8 102 1 
115 1 201 1 59 1 26 1 132 1 
231 1 275 1 6 2 113 1 168 1 134 1 7 2 201 1 175 1 242 1 62 2 11 1 
231 1 149 1 275 1 6 3 113 1 168 1 134 1 7 2 201 2 175 1 158 1 72 1 59 1 242 1 62 2 11 1 
231 3 271 1 6 3 113 1 168 3 7 1 297 1 115 1 201 2 175 3 158 2 59 1 242 1 137 1 62 6 26 1 11 3 
1 1 231 5 149 3 271 2 6 31 275 5 113 1 7 16 115 3 201 12 158 15 72 3 116 2 240 1 242 5 37 1 244 1 208 3 284 2 11 5 81 1 287 1 215 4 125 1 90 1 168 5 134 3 297 1 175 5 58 1 59 7 26 3 137 1 62 10 
125 1 231 2 271 1 275 1 6 8 168 2 7 4 115 1 201 3 175 2 158 4 116 1 240 1 58 1 242 1 59 2 62 4 26 1 284 1 11 2 
126 1 
231 1 149 1 275 1 6 3 168 1 134 1 7 2 201 2 175 1 158 1 72 1 59 1 242 1 37 1 62 2 11 1 
215 2 149 1 6 6 90 1 275 1 134 1 7 3 201 2 158 3 72 1 59 1 242 1 244 1 208 1 
231 2 149 2 271 2 275 3 6 21 196 1 7 11 115 2 201 9 72 2 158 10 116 1 240 1 242 4 208 2 284 1 11 2 215 2 125 1 15 1 90 1 168 2 134 2 175 2 58 1 59 5 26 2 62 4 137 1 
215 1 158 1 6 1 
208 1 6 1 7 1 
231 1 149 1 6 5 275 1 168 1 134 1 7 3 201 3 175 1 158 2 72 1 242 1 59 2 37 1 62 2 118 1 11 1 
215 1 231 1 149 2 275 2 6 10 113 1 168 1 134 2 7 6 201 2 175 1 206 1 72 2 158 4 242 1 74 1 59 1 60 1 62 2 244 1 208 1 11 1 79 1 102 1 
275 1 6 6 7 3 115 1 201 2 158 3 116 1 59 1 242 1 26 1 284 1 
125 1 231 1 271 1 6 3 168 1 7 1 115 1 201 2 175 1 158 2 240 1 242 1 59 1 26 1 137 1 62 2 11 1 
188 1 9 1 274 1 251 1 17 1 295 1 68 1 
188 1 216 1 111 1 274 1 295 1 17 1 251 1 114 1 68 1 9 1 243 1 286 1 
103 1 194 1 108 2 166 1 169 1 20 1 21 3 298 2 254 1 38 1 138 1 285 1 40 2 160 2 80 2 263 2 
103 1 194 1 108 1 166 1 169 1 93 1 21 2 298 1 138 1 40 1 160 1 80 1 263 1 
144 1 108 1 21 1 136 1 97 1 119 1 285 1 40 1 160 1 80 1 
108 1 273 1 20 1 21 1 298 1 209 1 40 2 120 1 160 2 80 2 263 1 
103 1 194 1 108 3 273 1 166 1 155 1 169 1 20 1 21 4 298 3 254 1 38 1 138 1 285 1 40 3 160 2 80 3 263 4 186 1 
103 1 163 1 194 1 108 3 273 1 166 1 169 1 20 1 21 4 298 3 254 1 38 1 138 1 285 1 40 3 160 2 80 3 263 4 186 1 
126 1 40 1 285 1 80 1 160 1 
266 1 108 1 166 1 53 1 17 1 251 2 252 1 68 2 172 1 21 1 298 1 9 1 283 1 25 1 285 1 40 1 160 1 80 1 185 1 263 1 
266 1 147 1 108 1 128 1 166 2 53 1 17 1 251 1 252 1 68 1 172 1 21 1 298 2 283 1 40 1 160 1 80 1 263 2 
147 1 108 1 128 1 166 2 53 1 17 1 251 1 252 1 68 1 172 1 21 1 298 2 283 1 40 1 160 1 80 1 263 2 245 1 
106 1 147 1 285 1 40 2 80 2 160 2 262 1 101 1 263 1 44 1 
147 1 154 1 40 1 80 1 160 1 262 1 101 1 263 1 44 1 
21 1 108 1 40 1 80 1 160 1 41 1 
142 1 194 1 108 1 166 1 169 1 21 2 298 1 285 1 40 1 160 1 80 1 229 1 263 1 
231 2 6 5 68 2 156 1 7 3 158 2 240 1 9 2 11 2 80 1 160 1 85 1 248 1 89 1 17 1 251 2 166 1 252 1 168 2 20 1 21 1 172 1 253 1 175 2 23 2 26 2 263 1 266 1 108 1 275 1 115 2 202 1 201 2 283 1 116 1 40 1 284 1 125 1 294 1 51 2 132 1 53 1 298 1 301 1 59 2 58 1 62 4 
152 1 262 1 101 1 
108 1 250 1 112 1 166 1 21 2 298 1 239 1 40 1 41 1 160 1 80 1 229 1 263 2 
108 1 166 1 53 1 17 1 251 2 252 1 68 2 172 1 21 1 298 1 9 1 283 1 25 1 285 1 40 1 160 1 80 1 185 1 263 1 245 1 
142 1 147 1 194 1 108 1 166 1 169 1 21 2 298 1 40 1 160 1 80 1 229 1 263 1 
29 1 34 1 70 1 9 1 55 1 
29 2 83 1 230 1 145 1 152 1 18 1 55 2 203 1 70 1 57 1 34 2 9 1 256 1 262 2 101 2 185 1 162 1 
14 1 17 1 251 1 68 1 167 1 55 1 34 1 70 1 71 1 
145 1 57 1 70 1 
247 1 255 1 165 1 76 1 64 1 121 1 288 1 
247 4 164 1 270 1 165 1 30 2 67 1 16 1 204 1 302 1 255 2 76 1 210 1 64 4 288 2 
247 2 218 1 268 1 148 1 255 1 165 1 30 1 76 1 64 2 121 1 288 1 
247 3 270 1 165 1 67 2 16 2 255 1 76 1 121 1 64 3 183 1 288 1 
192 1 280 1 302 2 133 2 
247 1 165 1 76 1 64 1 121 1 13 1 
247 2 226 1 255 1 165 1 30 1 76 1 64 2 121 1 288 1 
182 1 
247 1 255 1 165 1 76 1 64 1 121 1 288 1 
126 1 
247 1 255 1 165 1 76 1 64 1 288 1 
247 1 173 1 278 1 
247 3 165 1 270 1 67 1 16 2 255 1 305 1 76 1 121 1 64 3 288 1 
247 2 255 1 165 1 30 1 76 1 64 2 288 1 19 1 
214 1 247 1 144 1 105 1 165 1 136 1 302 1 76 1 210 1 121 1 64 1 
247 1 165 1 76 1 64 1 121 1 288 1 
247 1 302 1 255 1 165 1 76 1 64 1 121 1 288 1 
247 1 48 1 165 1 76 1 121 1 64 1 184 1 
247 3 165 1 30 2 235 1 226 1 204 1 302 1 255 1 76 1 210 1 121 1 64 3 288 1 
214 1 247 2 144 2 219 1 165 1 150 1 30 1 136 1 255 1 97 1 76 1 121 1 64 2 288 1 
247 4 165 2 30 2 69 1 19 1 204 1 302 1 255 1 76 2 210 1 121 1 64 4 288 1 
247 3 226 1 255 1 165 1 30 1 76 1 16 1 64 3 121 1 288 1 
164 1 204 1 302 1 210 1 
288 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) (185,203) (185,203) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) (185,203) (185,203) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) (185,203) (185,203) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) (185,203) (185,203) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 259 (11,173,234,244) 208 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) 340 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 259 276 (115,160) 340 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (16,301) (16,301) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (91,142) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (91,142) 198 310 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (91,142) 198 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 289 255 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 252 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 47 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 153 313 320 1 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (16,301) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 196 61 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 259 (11,173,234,244) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 259 276 328 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 259 276 12 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 259 276 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
276 1 238 1 259 1 269 2 14 2 159 1 88 1 160 1 3 1 115 1 290 1 82 1 185 1 202 1 330 1 151 1 315 3 236 2 332 3 203 1 
276 1 238 1 259 1 269 2 14 2 159 1 88 1 160 1 3 1 115 1 290 1 82 1 185 1 202 1 330 1 151 1 315 3 236 2 332 3 203 1 
276 1 238 1 259 1 269 2 14 2 159 1 88 1 160 1 3 1 115 1 290 1 82 1 185 1 202 1 330 1 151 1 315 3 236 2 332 3 203 1 
276 1 238 1 259 1 269 2 14 2 159 1 88 1 160 1 3 1 115 1 290 1 82 1 185 1 202 1 330 1 151 1 315 3 236 2 332 3 203 1 
259 1 14 1 208 1 88 1 244 1 99 1 77 1 330 1 3 1 315 2 332 2 236 1 
269 1 14 1 159 1 88 1 3 1 245 1 82 1 292 1 211 1 330 1 202 1 151 1 121 1 315 2 236 1 332 2 72 1 
276 1 259 1 269 1 115 1 14 2 88 1 330 1 3 1 315 2 332 2 236 2 
276 1 340 1 259 1 269 1 115 1 14 2 88 1 77 1 330 1 3 1 315 3 332 3 236 2 11 1 
276 1 340 1 259 1 269 1 115 1 14 2 88 1 77 1 330 1 3 1 315 3 332 3 236 2 11 1 
117 1 348 1 303 1 
298 2 17 1 348 1 
182 2 92 2 233 2 164 1 19 1 63 2 226 2 286 2 
227 1 306 1 229 1 2 2 100 1 329 1 182 2 30 1 233 2 288 1 209 1 53 1 314 1 135 1 250 2 164 1 165 2 9 1 140 1 110 1 13 1 262 1 299 2 57 1 240 2 89 1 19 1 63 2 92 3 342 1 344 1 281 1 43 1 283 1 226 3 286 2 129 1 
182 1 200 1 92 1 233 1 164 1 63 1 226 1 286 1 
155 1 97 1 0 1 118 1 104 1 273 1 182 2 233 1 164 1 334 1 218 1 219 1 63 1 200 1 92 2 176 1 117 1 348 1 226 2 286 1 
334 1 155 1 97 2 118 1 218 1 104 2 63 2 219 1 273 1 182 2 200 1 233 2 92 2 164 1 117 1 348 1 286 2 226 2 
97 1 111 1 321 1 104 1 109 1 
97 2 177 1 321 1 117 1 348 1 318 1 104 2 109 1 
97 1 104 1 109 1 
97 1 218 1 104 1 63 1 182 1 200 1 233 1 92 1 321 1 164 1 286 1 226 1 
348 1 
97 2 177 1 321 1 223 1 117 1 348 1 104 2 109 1 
97 5 16 1 177 1 301 1 336 2 104 5 181 1 343 2 41 1 81 1 321 2 95 2 187 1 117 1 7 1 348 1 294 1 109 2 154 1 
303 1 19 1 
60 1 273 1 63 1 19 1 182 2 92 2 233 1 322 1 267 1 226 2 286 1 
101 1 33 1 64 1 
306 1 299 1 2 1 57 1 240 1 89 1 19 1 92 1 342 1 43 1 314 1 69 1 135 1 9 1 226 1 129 1 
306 1 299 1 2 1 57 1 240 1 89 1 63 1 64 1 327 1 182 1 342 1 92 2 314 1 43 1 135 1 152 1 9 1 286 1 226 2 129 1 
0 1 337 1 272 1 60 1 18 1 273 1 63 4 19 1 327 1 182 5 92 5 233 1 152 2 267 1 286 4 226 5 
182 2 92 2 126 1 180 1 273 1 63 2 226 2 286 2 
182 3 233 1 92 3 152 1 19 1 63 3 226 3 286 3 
182 1 92 1 180 1 273 1 63 1 226 1 286 1 
60 1 63 1 273 1 182 1 233 1 92 1 322 1 286 1 226 1 
227 1 97 1 306 1 2 1 308 1 100 1 104 1 273 2 182 3 233 2 53 1 314 1 135 1 9 1 13 1 110 1 140 1 57 1 240 1 60 1 63 3 19 1 152 1 283 1 286 3 155 1 118 1 327 1 288 1 164 1 250 1 165 2 334 1 262 1 299 1 89 1 219 1 92 4 342 1 344 1 125 1 43 1 267 1 129 1 226 4 
0 1 18 1 273 1 63 1 19 1 182 2 92 2 152 1 267 1 286 1 226 2 
155 1 334 1 97 1 118 1 308 1 60 1 172 1 104 1 273 1 63 3 219 1 327 1 182 3 233 1 92 3 152 2 348 1 286 3 226 3 
101 1 60 1 63 2 64 1 182 2 233 1 92 2 152 1 286 2 226 2 
306 1 299 1 2 1 57 1 240 1 89 1 19 1 92 1 342 1 43 1 314 1 135 1 9 1 226 1 129 1 
316 1 299 1 243 1 2 1 57 1 240 1 89 1 19 1 92 1 342 1 43 1 314 1 135 1 226 1 129 1 
227 2 13 1 110 1 140 1 130 1 263 1 101 1 64 1 48 1 344 1 53 1 32 1 250 2 84 1 33 1 165 2 283 1 
182 1 92 1 126 1 273 1 219 1 63 1 226 1 286 1 
142 1 102 1 
142 1 102 1 
222 1 142 1 102 1 91 1 
222 1 142 1 102 1 91 1 
222 1 91 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
142 1 102 1 
198 1 97 1 142 1 102 1 310 1 104 1 120 1 
198 1 142 1 102 1 120 1 
238 1 159 1 202 1 
159 1 202 1 121 1 
238 2 55 1 307 1 170 1 202 3 121 1 
238 1 55 1 307 1 75 1 202 2 121 1 
238 1 55 2 307 1 202 2 121 1 
97 5 130 1 204 1 177 1 179 1 313 1 104 5 289 1 5 2 54 1 32 1 7 2 187 3 293 2 294 1 109 1 298 3 336 1 17 1 264 1 279 1 241 1 343 1 321 4 95 1 70 1 242 2 117 1 348 2 153 1 25 1 128 1 
97 7 130 1 204 1 177 1 246 3 179 1 313 1 104 7 181 1 289 1 32 1 7 2 187 3 293 2 294 1 109 4 137 1 298 3 111 3 15 1 336 2 17 1 264 2 174 1 241 1 343 2 321 5 95 2 242 2 117 1 348 3 153 1 
97 2 204 1 336 1 279 1 104 2 181 1 343 1 289 1 321 1 95 1 187 1 25 1 
97 1 204 1 336 1 279 1 104 1 181 1 343 1 289 1 95 1 187 1 255 1 25 1 
87 1 57 1 303 1 
86 1 57 1 
133 1 
57 1 135 1 89 1 
80 1 57 1 
57 1 135 1 
87 2 57 3 135 1 58 1 89 1 34 1 
192 1 227 3 130 1 27 2 157 1 271 1 179 1 4 2 49 2 78 1 207 1 287 4 281 3 282 1 6 2 250 6 24 1 
192 1 227 3 130 1 27 2 157 1 271 1 179 1 4 2 49 2 78 1 207 1 287 4 281 3 282 1 6 2 250 6 24 1 
192 1 227 3 130 1 27 2 157 1 131 1 271 1 179 1 4 2 49 2 78 1 207 1 287 4 281 3 282 1 6 2 250 6 24 1 
227 14 27 1 228 1 130 4 74 2 271 1 179 4 309 1 313 4 4 1 49 4 287 5 50 1 184 4 32 4 53 2 6 1 250 28 165 4 252 1 192 1 140 2 110 2 113 1 147 1 59 1 344 2 281 14 282 1 346 1 285 4 153 4 
192 1 140 1 110 1 344 1 281 1 53 1 271 1 282 1 250 1 165 2 47 1 339 1 
269 1 2 1 159 1 77 1 3 1 312 1 119 1 106 1 292 1 211 1 134 1 330 1 249 1 121 1 315 2 332 2 236 1 189 1 238 1 167 1 56 1 14 1 299 1 170 1 240 1 280 1 342 1 93 1 43 1 202 2 
269 1 2 1 159 1 77 2 3 1 312 1 106 1 292 1 211 1 134 1 249 1 121 1 315 3 332 3 236 1 189 1 238 1 167 1 56 1 14 1 299 1 170 1 240 1 280 1 342 1 22 1 42 1 43 1 202 2 224 1 
269 1 2 1 159 1 77 2 3 1 312 1 106 1 292 1 211 1 134 1 121 1 315 2 332 2 167 1 238 1 56 1 299 1 170 1 240 1 280 1 342 1 42 1 43 1 202 2 224 1 
261 1 269 2 56 2 14 1 299 1 300 1 2 1 57 1 240 1 37 1 311 1 312 2 79 1 342 1 22 1 106 2 43 1 135 1 315 1 85 1 236 1 332 1 129 1 
269 1 2 1 159 1 312 1 106 1 134 1 330 1 249 1 121 1 315 1 332 1 236 1 189 1 238 1 167 1 56 1 14 1 299 1 170 1 240 1 280 1 342 1 93 1 43 1 202 2 224 1 
83 1 
97 5 0 1 177 3 2 2 104 5 273 1 182 1 275 1 52 1 186 2 135 1 7 2 187 2 109 6 108 4 317 1 57 1 240 2 17 2 278 2 61 1 148 2 196 1 66 1 117 3 155 1 204 1 28 1 118 1 205 2 79 1 163 2 294 1 253 1 213 1 334 1 335 1 298 2 299 2 217 2 336 1 37 1 304 1 219 1 40 1 342 1 92 1 265 2 343 1 43 1 95 1 176 1 348 4 129 2 226 1 
155 1 97 3 0 1 177 1 28 1 118 1 104 3 273 1 182 1 253 1 213 1 108 2 109 2 334 1 317 1 148 1 304 1 219 1 92 1 176 1 223 1 117 2 348 2 226 1 
155 1 334 1 97 2 0 1 28 1 118 1 317 1 278 1 104 2 273 1 219 1 304 1 182 1 92 1 176 1 117 2 348 2 253 1 108 3 213 1 226 1 
155 1 97 3 0 1 177 1 28 1 118 1 205 1 104 3 273 1 182 1 253 1 213 1 108 3 109 2 334 1 317 1 278 1 148 1 304 1 219 1 92 1 176 1 223 1 117 3 348 3 226 1 
97 4 0 1 177 2 104 4 273 1 182 2 183 1 233 1 275 1 52 1 186 1 187 1 7 1 108 3 109 5 317 1 17 1 278 1 148 3 63 1 200 1 117 3 286 1 155 1 28 1 118 1 205 3 163 1 164 1 123 1 253 1 294 1 213 1 334 1 217 1 336 1 218 1 338 1 219 1 304 1 92 2 343 1 265 1 94 1 176 1 95 1 223 1 44 1 348 3 226 2 
97 4 0 1 177 2 104 4 273 1 182 1 275 1 52 1 186 2 187 1 7 1 108 4 109 4 317 1 17 2 278 2 148 2 66 1 117 3 155 1 28 1 118 1 205 2 163 2 294 1 253 1 213 1 334 1 298 2 217 2 336 1 219 1 304 1 92 1 343 1 265 2 95 1 176 1 348 4 226 1 
97 3 0 1 177 1 104 3 273 1 182 2 183 1 233 1 275 1 52 1 186 1 187 1 7 1 108 3 109 2 317 1 17 1 278 1 148 1 63 1 200 1 117 3 286 1 155 1 28 1 118 1 205 1 163 1 164 1 123 1 294 1 253 1 213 1 334 1 217 1 336 1 218 1 219 1 304 1 92 2 343 1 265 1 176 1 95 1 44 1 348 3 226 2 
97 3 0 1 177 1 104 3 273 1 182 2 183 1 233 1 275 1 52 1 186 1 187 1 7 1 108 3 109 2 317 1 17 1 278 1 148 1 63 1 200 1 117 3 286 1 155 1 28 1 118 1 205 1 163 1 164 1 123 1 294 1 253 1 213 1 334 1 217 1 336 1 218 1 219 1 304 1 92 2 343 1 265 1 176 1 95 1 44 1 348 3 226 2 
97 3 0 1 177 1 104 3 273 1 182 2 183 1 233 1 52 1 7 1 187 1 108 3 109 2 317 1 278 1 148 1 63 1 199 1 200 1 117 3 284 1 286 1 155 1 324 1 28 1 118 1 76 1 205 1 163 1 164 1 294 1 253 1 213 1 334 1 298 1 217 1 336 1 218 1 90 1 219 1 304 1 92 2 343 1 176 1 95 1 348 3 226 2 
97 3 0 1 177 1 104 3 273 1 182 2 183 1 233 1 275 1 52 1 186 1 187 1 7 1 109 3 108 4 317 1 17 1 278 2 148 2 63 1 200 1 117 3 286 1 155 1 28 1 118 1 205 2 163 1 164 1 123 1 253 1 294 1 213 1 334 1 217 1 336 1 218 1 219 1 304 1 92 2 343 1 265 1 94 1 176 1 95 1 44 1 348 3 226 2 
97 3 0 1 177 1 104 3 273 1 182 2 183 1 233 1 275 1 52 1 186 1 187 1 7 1 109 3 108 4 317 1 17 1 278 2 148 2 63 1 200 1 117 3 286 1 155 1 28 1 118 1 205 2 163 1 164 1 123 1 253 1 294 1 213 1 334 1 217 1 336 1 218 1 219 1 304 1 92 2 343 1 265 1 94 1 176 1 95 1 44 1 348 3 226 2 
155 1 97 4 324 1 0 1 177 2 28 1 118 1 205 2 76 2 104 4 273 1 182 1 52 1 163 2 187 1 7 1 253 1 294 1 109 4 213 1 108 4 334 1 298 2 317 1 217 2 336 1 278 2 90 2 148 2 304 1 219 1 66 1 92 1 343 1 176 1 95 1 117 3 348 3 226 1 
227 3 13 1 110 1 140 1 130 1 157 1 27 2 263 1 179 1 303 1 19 2 4 2 207 1 287 2 344 1 281 2 53 1 6 2 250 5 165 2 24 1 283 1 
227 7 130 1 229 1 100 1 231 1 101 3 179 3 309 1 313 3 49 2 287 2 31 1 32 1 184 4 53 2 250 17 33 13 165 4 140 2 110 2 13 1 144 1 147 2 59 1 19 1 64 13 344 2 281 10 347 1 283 2 285 3 153 3 
227 1 306 1 229 1 2 1 100 1 101 1 231 1 327 1 105 1 182 1 53 1 314 1 135 1 250 2 122 1 165 2 9 1 110 1 13 1 140 1 299 1 57 1 240 1 195 1 89 1 19 1 63 1 342 1 92 2 344 1 281 1 43 1 69 1 152 1 283 1 129 1 226 2 286 1 
227 2 306 1 2 1 100 1 231 1 101 2 179 1 313 1 49 2 182 1 53 2 314 1 135 1 8 1 9 1 140 2 13 2 110 2 57 1 240 1 63 1 64 2 197 1 281 3 152 1 283 2 153 1 286 1 156 1 327 1 287 2 288 1 250 5 33 2 165 4 333 1 299 1 171 1 89 1 92 2 342 1 344 2 43 1 129 1 226 2 
227 1 229 1 2 7 100 1 119 1 46 1 79 1 182 1 30 2 53 2 135 2 250 2 165 4 166 1 140 2 110 2 13 2 299 8 143 1 263 1 57 3 240 8 37 1 63 1 65 1 124 1 92 1 342 2 116 1 344 2 281 1 43 2 152 1 224 1 45 1 283 2 226 1 286 1 129 2 
227 2 130 1 101 1 231 1 179 1 313 1 182 1 233 1 53 1 32 1 250 3 33 1 165 2 35 1 140 1 110 1 13 1 60 1 63 1 64 1 92 1 344 1 281 1 283 1 153 1 286 1 226 1 
13 1 110 1 140 1 263 1 101 1 179 1 49 1 64 1 39 1 287 1 344 1 281 2 53 1 250 2 33 1 165 2 283 1 153 1 
13 1 110 1 140 1 227 2 130 1 263 1 101 1 64 1 48 1 344 1 53 1 32 1 250 2 33 1 165 2 283 1 
227 2 130 1 101 2 179 1 313 1 49 1 287 1 53 1 32 1 250 4 33 2 165 2 140 1 110 1 13 1 263 1 64 2 344 1 281 2 153 1 283 1 
13 1 110 1 140 1 101 1 179 1 49 1 64 1 39 1 124 1 287 1 344 1 281 2 53 1 250 2 33 1 165 2 283 1 153 1 
13 1 110 1 140 1 227 2 130 1 101 1 64 1 48 1 124 1 344 1 53 1 32 1 250 2 33 1 165 2 283 1 
13 1 110 1 140 1 101 1 179 1 313 1 49 1 64 1 124 1 287 1 344 1 281 2 53 1 250 2 33 1 165 2 283 1 153 1 
13 1 110 1 140 1 101 1 179 1 313 1 49 1 64 1 287 1 344 1 281 2 53 1 250 2 33 1 165 2 283 1 153 1 
227 1 140 1 110 1 13 1 306 1 299 1 229 1 2 1 100 1 57 1 240 1 89 1 19 1 92 1 342 1 344 1 288 1 281 1 53 1 43 1 314 1 135 1 250 2 165 2 283 1 9 1 226 1 129 1 
227 1 229 1 243 1 2 1 100 1 53 1 314 1 135 1 250 2 165 2 191 1 316 1 13 1 110 1 140 1 299 1 57 1 240 1 89 1 19 1 342 1 92 1 344 1 281 1 43 1 283 1 129 1 226 1 
13 1 110 1 140 1 101 1 231 1 179 1 313 1 49 1 64 1 287 1 344 1 281 2 53 1 250 2 33 1 165 2 283 1 153 1 
306 1 156 1 2 1 101 1 179 1 119 1 313 1 49 1 287 1 288 1 53 1 314 1 135 1 250 2 33 1 165 2 9 1 13 1 110 1 140 1 299 1 57 1 240 1 89 1 64 1 342 1 92 1 344 1 281 2 43 1 153 1 283 1 226 1 
231 1 101 1 179 1 313 1 49 1 182 1 287 1 233 1 53 1 250 2 33 1 165 2 140 1 110 1 13 1 114 1 60 1 63 1 64 1 92 1 344 1 281 2 283 1 153 1 286 1 226 1 
227 17 130 5 1 1 325 1 179 5 309 2 313 5 232 1 49 5 51 3 287 5 184 4 53 2 32 5 235 1 250 34 165 4 138 1 140 2 110 2 36 1 147 2 59 2 339 1 341 1 320 1 344 2 281 17 23 1 285 4 153 5 
227 8 130 1 158 1 179 1 309 2 313 1 232 1 51 4 32 1 53 1 184 2 250 16 235 1 165 2 138 1 140 1 110 1 36 2 339 1 341 1 344 1 320 1 281 8 23 2 285 2 153 1 
227 20 130 5 325 1 158 1 179 6 309 3 313 6 232 1 49 5 51 4 287 5 184 6 53 2 32 5 235 1 250 41 165 4 138 1 258 1 140 2 110 2 36 2 147 3 59 2 339 1 341 1 320 1 344 2 281 21 23 1 285 5 153 6 
227 18 130 5 325 1 158 1 179 5 309 2 313 5 232 1 49 4 51 4 287 4 184 4 53 2 32 5 235 1 250 36 165 4 138 1 140 2 110 2 36 1 147 2 59 2 339 1 341 1 320 1 344 2 281 18 23 1 285 4 153 5 
227 27 27 6 157 3 130 8 158 1 179 8 309 2 313 5 4 6 232 1 49 5 207 3 51 4 287 11 184 4 53 1 32 5 6 6 235 1 250 51 165 2 138 1 140 1 110 1 36 1 147 2 59 2 339 1 341 1 320 1 344 1 281 24 23 1 24 3 285 4 153 5 
227 1 229 1 2 2 132 1 100 1 231 1 182 2 30 2 53 1 250 2 165 2 13 1 110 1 140 1 299 2 143 1 240 2 220 1 342 1 92 2 68 1 344 1 281 1 43 1 345 1 127 1 283 1 226 2 
238 1 167 1 141 1 56 1 98 1 299 2 2 2 159 1 170 1 240 2 119 1 342 1 43 1 134 1 202 2 249 1 121 1 224 1 268 1 
238 1 167 1 141 1 56 1 299 1 2 1 159 1 170 1 240 1 342 1 134 1 43 1 202 2 249 1 121 1 136 1 224 1 
277 1 56 1 299 1 2 1 57 1 240 1 37 1 79 1 342 1 43 1 135 1 85 1 129 1 268 1 
238 1 167 1 141 1 56 1 98 1 299 1 2 1 159 1 170 1 240 1 342 1 134 1 43 1 202 2 249 1 121 1 224 1 268 1 
29 1 
16 1 301 1 187 1 117 1 7 1 348 1 303 1 
97 1 177 1 104 1 275 1 186 1 7 1 187 1 294 1 109 1 298 1 336 1 17 1 343 1 265 1 95 1 117 1 348 2 
155 1 97 2 130 1 204 1 177 1 2 1 230 1 206 1 179 1 313 1 104 2 248 1 32 1 135 1 7 3 8 1 187 4 293 3 254 1 10 1 294 2 109 2 86 2 298 6 87 1 299 1 216 1 336 2 57 4 240 1 17 3 58 1 89 1 342 2 343 2 43 1 95 2 242 3 348 3 153 1 225 1 129 1 
204 1 161 1 309 1 182 1 233 1 184 1 164 1 235 1 187 2 7 2 293 2 294 1 190 1 139 1 335 1 298 2 336 1 17 1 218 1 63 1 200 1 92 1 343 1 95 1 117 1 242 2 348 2 285 1 226 1 286 1 
97 1 27 1 130 1 179 2 104 1 182 1 233 1 6 1 164 1 123 1 7 2 187 2 294 1 190 2 139 1 336 1 239 1 218 1 63 1 200 1 92 1 343 1 95 1 24 1 226 1 286 1 
16 1 343 1 336 1 95 1 187 1 117 1 7 1 348 1 294 1 
298 2 130 1 17 1 179 1 313 1 32 1 7 2 242 1 187 1 293 1 348 1 153 1 
97 1 177 1 117 1 348 1 104 1 109 1 
97 2 204 1 177 1 2 2 104 2 181 1 79 1 135 1 187 1 7 1 294 1 109 2 335 1 193 1 299 2 57 1 336 2 240 2 37 1 61 1 196 1 342 1 343 2 43 1 95 2 129 2 
227 1 306 1 2 1 100 1 182 2 233 2 288 1 53 1 314 1 135 1 250 1 164 1 165 2 9 1 140 1 110 1 13 1 262 1 299 1 57 1 240 1 89 1 19 1 63 2 92 3 342 1 344 1 43 1 283 1 129 1 226 3 286 2 
335 1 298 4 204 1 271 1 336 1 17 2 343 1 95 1 242 2 7 2 187 1 117 2 293 2 348 4 294 1 
168 1 210 1 302 1 
221 1 210 1 302 1 
168 1 210 1 302 1 
168 1 210 1 302 1 
210 1 302 1 62 1 
210 1 302 1 62 1 
210 1 302 1 62 1 
210 1 302 1 
142 1 102 1 
227 5 110 2 140 2 130 1 157 1 27 2 74 1 179 1 4 2 49 2 207 1 287 4 344 2 281 4 53 2 6 2 250 9 165 4 24 1 
227 3 157 1 27 2 130 1 179 1 303 1 4 2 207 1 287 2 281 2 6 2 250 5 24 1 
227 2 110 1 140 1 130 1 179 1 313 1 20 1 344 1 281 2 53 1 32 1 250 4 165 2 153 1 
227 6 130 2 147 1 59 1 179 2 309 1 313 2 49 2 287 2 281 6 32 2 184 2 250 12 285 2 153 2 
227 16 27 4 157 1 130 4 74 2 179 4 313 2 4 4 49 5 207 1 287 9 50 1 184 2 32 2 53 2 6 4 250 29 165 4 110 2 140 2 239 1 147 1 59 1 344 2 281 13 347 1 24 2 153 2 285 2 
227 1 184 1 250 1 
281 1 250 1 285 1 
140 1 110 1 227 3 130 1 179 1 313 1 49 1 20 1 287 1 344 1 281 3 53 1 32 1 250 6 8 1 165 2 153 1 
110 1 140 1 227 1 309 1 339 1 344 1 281 1 53 1 184 1 235 1 250 2 165 2 285 1 
227 2 130 1 27 1 179 1 4 1 287 1 281 2 6 1 250 4 24 1 
227 2 110 1 140 1 27 1 157 1 74 1 4 1 49 1 207 1 287 2 50 1 344 1 281 1 53 1 6 1 250 3 165 2 
227 3 27 2 130 1 239 1 179 1 4 2 287 2 281 2 6 2 250 5 24 1 
110 1 140 1 179 1 339 1 49 1 287 1 344 1 281 2 53 1 250 2 165 2 153 1 
227 2 110 1 140 1 130 1 179 1 313 1 339 1 49 1 287 1 344 1 281 2 32 1 53 1 250 4 165 2 153 1 
227 2 110 3 140 3 27 1 74 1 325 1 4 1 339 1 49 1 50 1 287 2 344 3 281 1 53 3 6 1 250 3 165 6 
227 21 27 3 157 1 228 1 130 6 74 2 325 1 179 6 309 1 313 4 4 3 49 7 207 1 50 1 287 10 184 4 53 5 32 4 6 3 250 40 165 10 140 5 110 5 113 1 147 1 59 1 339 1 20 1 344 5 281 19 346 1 24 2 285 4 153 4 
227 11 27 4 157 1 130 3 74 1 326 1 179 5 309 1 313 3 4 4 49 5 207 1 287 9 184 2 53 2 32 1 6 4 250 24 235 1 251 1 165 4 140 2 110 2 239 1 147 1 339 1 344 2 281 13 266 1 24 2 285 1 153 3 71 1 
227 8 27 2 157 1 130 2 74 1 326 1 179 4 309 1 313 3 4 2 49 2 207 1 287 4 184 2 53 3 32 1 6 2 250 19 235 1 251 1 165 6 140 3 110 3 147 1 339 1 20 1 344 3 266 1 281 11 24 1 71 1 285 1 153 3 
227 4 130 1 157 1 27 2 179 1 309 1 4 2 207 1 287 2 184 1 53 2 6 2 250 7 235 1 165 4 140 2 110 2 339 1 20 1 344 2 281 3 24 1 285 1 
227 7 130 2 157 1 27 4 179 2 309 1 4 4 49 4 207 1 287 8 184 1 53 2 6 4 250 12 235 1 165 4 140 2 110 2 239 1 339 1 20 1 344 2 281 5 24 2 285 1 
227 11 27 4 157 1 130 3 74 1 326 1 179 5 309 1 313 3 4 4 49 5 207 1 287 9 184 2 53 2 32 1 6 4 250 24 235 1 251 1 165 4 140 2 110 2 239 1 147 1 339 1 344 2 281 13 266 1 24 2 285 1 153 3 71 1 
110 1 140 1 227 1 309 1 339 1 344 1 281 1 53 1 184 1 235 1 250 2 165 2 285 1 
110 2 140 2 227 1 309 1 339 1 20 1 344 2 281 1 53 2 184 1 235 1 250 2 165 4 285 1 
110 2 140 2 227 1 325 1 309 1 339 1 344 2 281 1 53 2 184 1 235 1 250 2 165 4 285 1 
227 4 130 1 157 1 27 2 179 1 4 2 49 2 207 2 287 4 281 3 6 2 250 7 24 1 
110 2 140 2 227 1 325 1 309 1 339 1 344 2 281 1 53 2 184 1 235 1 250 2 165 4 285 1 
0 1 18 1 273 1 19 1 182 1 92 1 267 1 257 1 226 1 
0 1 146 1 18 1 273 1 19 1 150 1 182 1 247 1 21 1 92 1 267 1 296 1 257 1 226 1 
79 1 342 1 299 1 2 1 43 1 57 1 135 1 240 1 37 1 303 1 129 1 
299 1 2 1 57 1 240 1 89 1 19 1 63 1 182 1 342 1 92 2 314 1 43 1 135 1 152 1 9 1 286 1 226 2 129 1 
2 1 273 2 182 2 314 1 135 2 212 1 9 1 297 1 334 1 299 1 57 2 240 1 89 2 63 1 219 1 19 1 92 2 342 1 43 1 152 1 267 1 226 2 286 2 
243 1 2 1 273 2 182 2 314 1 135 2 212 1 297 1 334 1 299 1 57 2 240 1 89 2 63 1 219 1 19 1 92 2 342 1 43 1 152 1 267 1 226 2 286 2 
155 1 97 2 2 1 104 2 182 1 233 1 135 1 164 1 212 1 109 1 297 1 86 1 87 1 215 1 299 1 57 3 240 1 89 1 218 1 63 1 200 1 92 1 342 1 43 1 117 1 348 1 226 1 286 1 26 1 
155 1 97 2 2 1 104 2 182 1 233 1 135 1 164 1 212 1 109 1 297 1 86 1 87 1 299 1 57 3 240 1 89 1 218 1 63 1 200 1 92 1 342 1 43 1 117 1 348 1 225 1 226 1 286 1 
342 1 299 1 2 1 43 1 240 1 46 1 
260 1 299 7 2 6 57 3 240 7 58 1 89 1 119 1 46 1 65 1 67 1 30 1 342 3 116 1 43 2 135 2 224 1 45 1 323 1 166 1 129 2 
227 3 130 1 27 2 157 1 156 1 306 1 2 1 132 1 231 1 179 1 119 1 4 2 207 1 182 1 287 2 288 1 53 2 6 2 314 1 135 1 250 5 165 4 9 1 333 1 110 2 13 2 140 2 299 1 57 1 240 1 89 1 19 2 63 1 342 1 92 2 344 2 281 2 43 1 152 1 24 1 283 2 226 2 286 1 
155 1 97 3 130 1 27 2 177 1 2 1 230 1 179 1 104 3 182 1 233 1 6 2 164 1 187 3 7 3 294 2 10 1 190 2 109 2 86 1 193 1 87 1 16 1 299 1 216 1 301 1 336 2 57 2 239 1 240 1 218 1 63 1 200 1 92 1 343 2 321 1 95 2 117 2 348 2 24 1 225 1 226 1 286 1 129 1 
87 1 299 2 2 2 57 2 240 2 206 1 58 1 89 1 119 1 46 1 342 2 43 1 135 1 
214 1 299 4 2 4 57 1 240 4 37 1 119 1 79 1 342 1 43 1 135 1 256 1 129 1 
260 1 299 2 2 2 57 1 240 2 89 1 342 2 175 1 201 1 43 1 107 1 135 1 212 1 323 1 
342 1 299 1 2 1 159 1 43 1 134 1 202 1 240 1 121 1 129 1 
342 1 299 2 2 2 43 1 345 1 240 2 224 1 119 1 
299 5 2 4 57 3 240 5 37 1 119 1 79 1 342 2 116 1 43 2 135 2 212 1 45 1 256 1 129 1 166 1 
169 1 299 5 2 4 57 3 240 5 37 1 119 1 79 1 342 2 43 2 135 2 212 1 45 1 256 1 129 1 166 1 
299 1 243 1 2 1 57 1 240 1 89 1 19 1 63 1 182 1 342 1 92 2 314 1 43 1 135 1 152 1 286 1 226 2 129 1 
260 1 299 1 2 1 57 1 240 1 58 1 89 1 67 1 342 2 43 1 135 1 212 1 323 1 
112 1 145 1 162 1 237 1 19 1 
155 1 97 2 118 1 308 1 162 1 103 1 104 2 273 1 182 1 233 1 164 1 237 1 334 1 112 1 145 1 218 1 63 1 219 1 200 1 92 1 321 1 117 1 348 1 305 1 226 1 286 1 96 1 
112 1 162 1 220 1 182 1 92 1 68 1 127 1 237 1 226 1 
237 1 305 1 103 1 
292 1 211 1 3 1 303 1 
14 1 292 1 211 1 3 1 315 1 332 1 236 1 
269 1 106 1 332 1 
14 1 3 1 38 1 82 2 211 1 292 1 330 1 331 1 315 3 236 1 332 3 295 1 
14 1 292 1 211 1 99 1 77 1 3 1 315 2 332 2 236 1 
259 1 14 1 88 1 244 1 330 1 3 1 315 1 332 1 236 1 
14 1 292 1 330 1 3 1 315 1 332 1 236 1 
14 1 292 2 211 1 330 1 315 1 332 1 236 1 
270 1 14 1 274 1 330 1 315 1 236 1 332 1 
276 1 259 1 14 1 194 1 88 1 77 1 330 1 3 1 315 2 332 2 236 1 328 1 
238 1 14 1 159 1 170 1 77 1 3 1 178 1 292 1 211 1 202 2 330 1 121 1 315 2 236 1 332 2 
276 1 12 1 259 1 14 1 88 1 99 1 77 1 330 1 3 1 315 2 332 2 236 1 
14 1 292 1 211 1 330 1 3 1 315 1 332 1 236 1 
276 1 259 1 14 1 88 2 77 1 3 1 315 2 236 1 332 2 
14 1 77 1 3 1 173 1 234 1 292 1 211 1 330 1 315 2 236 1 332 2 11 1 
73 1 14 1 3 1 38 1 82 2 211 1 292 1 330 1 315 3 236 1 332 3 295 2 
291 1 3 1 149 1 
14 1 330 1 188 1 315 1 332 1 236 1 
14 1 194 1 292 1 211 1 77 1 330 1 3 1 315 2 332 2 236 1 
319 1 
14 1 292 1 211 1 330 1 3 1 315 1 332 1 236 1 
14 1 194 1 77 1 3 1 82 1 211 1 292 1 330 1 315 3 236 1 332 3 
276 1 259 1 77 1 3 1 315 1 332 1 
292 1 3 1 

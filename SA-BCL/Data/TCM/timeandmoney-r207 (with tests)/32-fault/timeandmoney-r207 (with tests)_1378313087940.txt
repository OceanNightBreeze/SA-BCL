#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (1,158) (124,318) (124,318) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (1,158) (124,318) (124,318) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (1,158) (124,318) (124,318) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (1,158) (124,318) (124,318) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (1,158) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (1,158) 93 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (1,158) 93 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 277 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 250 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 205 338 132 208 40 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 205 338 132 208 40 302 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 34 342 208 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 25 324 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 205 338 132 208 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 1 216 1 318 1 268 1 1 1 124 1 126 1 183 1 289 1 158 1 259 1 115 2 261 1 96 1 210 1 151 2 
265 1 216 1 318 1 268 1 1 1 124 1 126 1 183 1 289 1 158 1 259 1 115 2 261 1 96 1 210 1 151 2 
265 1 216 1 318 1 268 1 1 1 124 1 126 1 183 1 289 1 158 1 259 1 115 2 261 1 96 1 210 1 151 2 
265 1 216 1 318 1 268 1 1 1 124 1 126 1 183 1 289 1 158 1 259 1 115 2 261 1 96 1 210 1 151 2 
265 1 216 1 170 1 183 1 33 1 289 1 291 1 185 1 311 1 186 3 24 1 251 1 199 2 259 1 201 2 115 4 96 1 151 4 
265 1 216 1 268 1 126 1 183 1 33 1 47 1 289 1 291 1 257 1 311 1 259 1 115 2 261 1 326 1 151 2 
216 1 1 1 259 1 115 1 183 1 151 1 
186 1 216 1 1 1 188 1 93 1 259 1 115 2 183 1 151 2 
186 1 216 1 1 1 188 1 93 1 259 1 115 2 183 1 151 2 
323 1 
138 1 
266 2 127 1 273 2 248 2 349 2 328 2 306 1 219 2 
266 2 214 1 319 1 44 2 4 1 347 1 219 3 241 1 127 1 273 3 248 2 349 2 272 1 249 1 62 1 81 1 7 1 128 1 176 1 177 1 202 1 303 2 152 1 328 2 284 1 306 1 204 1 53 2 157 1 71 2 339 1 56 1 39 1 316 2 192 1 211 1 212 1 
310 1 266 1 273 1 248 1 349 1 113 1 328 1 306 1 219 1 20 1 
11 1 239 1 50 1 285 1 219 1 299 1 337 1 248 1 273 1 113 1 222 1 274 1 161 1 235 1 
266 1 11 1 328 1 50 1 285 2 219 1 337 1 349 1 248 1 273 1 113 1 222 1 274 1 161 2 235 1 
285 1 161 1 107 1 332 1 163 1 
222 1 50 1 285 2 161 2 107 1 163 1 367 1 140 1 
285 1 161 1 163 1 
266 1 328 1 285 1 306 1 218 1 219 1 20 1 310 1 349 1 248 1 273 1 113 1 161 1 107 1 
222 1 
222 1 50 1 285 2 161 2 154 1 107 1 163 1 367 1 
10 1 50 1 285 5 169 2 112 1 90 1 196 1 322 1 70 1 23 1 247 2 222 1 161 5 37 1 107 2 191 1 367 1 163 2 117 2 
323 1 
266 1 120 1 328 1 219 2 155 1 136 1 248 2 273 2 349 1 127 1 113 1 
237 1 283 1 119 1 
214 1 44 1 204 1 4 1 45 1 219 1 53 1 241 1 127 1 273 1 249 1 56 1 176 1 316 1 202 1 211 1 
237 1 266 1 214 1 328 1 44 1 204 1 345 1 4 1 219 2 53 1 241 1 300 1 248 1 273 2 249 1 56 1 176 1 316 1 202 1 211 1 
266 2 328 2 120 1 219 2 155 1 300 1 248 2 273 2 349 1 127 1 113 1 
310 1 266 2 273 2 248 2 113 1 328 2 95 1 219 2 
266 3 328 3 219 3 155 1 349 1 248 3 273 3 300 1 127 1 113 1 
310 1 266 1 273 1 248 1 113 1 328 1 219 1 
266 1 273 1 248 1 349 1 113 1 328 1 120 1 219 1 136 1 
266 3 214 1 120 1 44 1 345 1 4 1 219 4 241 1 242 1 127 1 249 1 349 2 273 4 248 3 300 1 81 1 7 1 128 1 274 1 176 1 177 1 202 1 303 1 152 1 11 1 328 3 284 1 285 1 306 1 204 1 53 1 157 1 337 1 71 2 113 1 339 1 161 1 56 1 39 1 316 1 235 1 211 1 97 1 212 1 
266 1 127 1 273 2 248 2 300 1 328 1 84 1 219 2 299 1 
266 3 11 1 120 1 328 3 285 1 345 1 219 3 333 1 242 1 337 1 349 1 300 2 248 3 273 3 113 1 222 1 274 1 161 1 235 1 
237 1 266 2 283 1 120 1 328 2 219 2 300 1 349 1 248 2 273 2 
214 1 44 1 204 1 4 1 219 1 53 1 241 1 127 1 273 1 249 1 56 1 176 1 316 1 202 1 211 1 
44 1 18 1 204 1 4 1 219 1 53 1 241 1 127 1 273 1 15 1 56 1 176 1 316 1 202 1 211 1 
237 1 303 2 283 1 119 1 152 1 284 1 172 1 91 1 157 1 321 1 54 1 71 2 81 1 150 1 128 1 39 1 177 2 263 1 280 1 
266 1 273 1 248 1 113 1 328 1 95 1 219 1 235 1 
121 1 99 1 
121 1 99 1 
363 1 94 1 
363 1 94 1 
363 1 94 1 
121 1 99 1 220 1 
121 1 99 1 220 1 
121 1 99 1 233 1 
363 1 121 2 99 2 26 1 125 1 94 1 
121 1 99 1 220 1 
22 1 121 1 99 1 
22 1 121 1 99 1 
22 1 121 1 99 1 
266 2 294 1 121 1 99 1 0 1 122 1 346 1 217 1 19 1 219 2 243 1 244 1 127 1 248 2 273 2 328 2 285 1 290 1 233 1 260 1 234 1 161 1 315 1 368 1 
294 2 99 2 121 2 296 1 153 1 285 2 122 1 123 2 125 1 217 2 184 1 207 1 245 1 63 1 222 1 260 2 234 2 161 2 315 3 
265 1 96 1 289 1 
265 1 257 1 289 1 
265 3 257 1 149 1 9 1 96 2 197 1 
265 2 257 1 229 1 9 1 96 1 197 1 
265 2 257 1 9 1 96 1 197 2 
266 1 169 1 218 1 219 1 20 1 273 1 248 1 349 1 247 1 222 1 107 4 131 1 327 1 66 1 356 1 135 1 328 1 306 1 285 5 50 1 52 1 331 1 112 2 205 1 90 1 310 1 70 1 138 1 113 1 338 1 161 5 116 1 163 1 367 1 368 1 165 2 117 1 
266 1 3 1 218 1 219 1 20 1 349 1 248 1 273 1 222 1 107 2 109 1 328 1 285 2 50 1 306 1 332 1 336 1 310 1 113 1 161 2 163 1 
266 1 100 1 169 1 218 1 219 1 20 1 321 1 273 1 248 1 349 1 247 1 222 2 107 2 131 1 327 1 280 1 66 2 10 1 356 1 328 1 135 2 306 1 50 1 285 3 331 1 205 1 112 2 90 3 310 1 138 3 113 1 338 1 161 3 116 1 368 1 165 1 117 1 
266 1 169 1 320 1 218 1 219 1 321 2 273 1 222 3 129 1 131 2 327 1 280 2 10 1 135 4 328 1 285 4 50 1 331 1 90 5 138 6 338 2 193 1 100 2 20 1 247 1 349 1 248 1 107 3 66 4 356 1 306 1 112 4 205 2 310 1 113 1 161 4 116 1 368 2 165 2 117 1 
323 1 
4 1 314 1 
343 1 
4 1 202 1 211 1 
77 1 4 1 
4 1 202 1 
72 2 198 1 67 1 4 3 202 1 211 1 
213 1 303 8 101 1 194 1 255 1 171 1 206 1 172 2 147 1 91 3 321 1 364 1 25 1 64 2 131 1 177 3 192 5 
213 1 303 9 101 1 194 1 255 1 171 1 206 1 172 2 147 1 91 3 321 1 364 1 25 1 64 2 131 1 192 5 177 4 
213 1 303 8 101 1 194 1 255 1 171 1 206 1 172 2 147 1 91 3 321 1 364 1 25 1 64 2 131 1 177 3 28 1 192 5 
303 2 101 1 277 1 64 1 194 2 172 1 177 1 91 1 192 1 
264 1 213 1 101 1 194 1 172 4 147 1 321 1 81 2 128 2 25 1 64 2 131 1 177 6 303 12 152 2 255 1 206 1 91 5 157 2 71 4 364 1 232 1 341 1 192 6 
265 2 344 1 216 1 268 1 44 1 104 1 241 1 149 1 151 2 134 1 110 1 329 1 204 1 183 1 33 1 89 1 53 1 156 1 289 1 35 1 291 1 257 1 311 1 186 1 230 1 259 1 189 1 115 2 96 1 316 1 
265 2 216 1 268 1 44 1 79 1 104 1 241 1 221 1 149 1 151 3 134 1 110 1 329 1 204 1 183 1 33 1 89 1 53 1 156 1 289 1 35 1 291 1 257 1 311 1 186 2 189 1 115 3 96 1 316 1 17 1 
265 2 268 1 44 1 79 1 241 1 149 1 151 2 134 1 110 1 329 1 204 1 33 1 89 1 53 1 156 1 289 1 291 1 257 1 311 1 186 2 189 1 115 2 96 1 316 1 17 1 
304 1 268 2 216 1 134 2 78 1 44 1 51 1 144 1 329 2 204 1 4 1 183 1 89 2 53 1 241 1 361 1 362 1 221 1 115 1 56 1 316 1 202 1 151 1 
265 2 216 1 268 1 44 1 104 1 241 1 149 1 151 1 134 1 110 1 329 1 204 1 183 1 89 1 53 1 156 1 289 1 35 1 257 1 230 1 259 1 189 1 115 1 96 1 316 1 17 1 
223 1 
168 2 44 2 169 1 4 1 219 1 174 2 273 1 222 2 82 1 274 1 85 2 86 2 48 1 11 1 88 2 50 1 51 1 285 5 90 2 53 2 337 1 138 2 56 2 190 2 235 1 100 2 239 1 348 1 241 1 299 1 247 1 248 1 301 1 352 1 27 1 202 1 356 1 357 4 254 2 204 1 112 2 360 1 361 1 70 1 113 1 74 1 73 1 161 5 76 1 262 1 367 3 163 6 316 2 164 1 117 1 
239 1 219 1 348 1 299 1 273 1 248 1 274 1 352 1 85 1 357 2 11 1 285 3 154 1 360 1 337 1 113 1 161 3 262 1 163 2 367 1 235 1 164 1 
239 1 168 1 219 1 348 1 299 1 273 1 248 1 222 1 274 1 352 1 357 3 11 1 285 3 50 1 154 1 360 1 337 1 113 1 161 3 262 1 163 1 367 1 235 1 164 1 
239 1 168 1 219 1 348 1 299 1 174 1 273 1 248 1 222 1 274 1 352 1 85 1 357 3 11 1 285 3 50 1 154 1 360 1 337 1 113 1 161 3 262 1 367 1 163 2 235 1 164 1 
168 4 169 1 219 1 174 4 273 1 222 5 274 1 85 4 86 2 11 1 88 2 285 5 50 5 90 1 337 1 92 1 190 2 235 1 58 1 239 1 100 2 348 1 299 1 105 1 248 1 247 1 350 1 352 1 301 1 357 6 254 2 111 1 154 1 112 1 360 1 70 1 113 1 73 1 161 5 262 1 367 3 163 7 164 1 117 1 
168 2 169 1 219 1 174 2 273 1 222 1 274 1 85 2 86 2 11 1 88 2 285 4 50 1 90 1 337 1 138 2 190 2 235 1 239 1 100 2 348 1 299 1 248 1 247 1 352 1 301 1 357 4 254 2 112 1 360 1 70 1 113 1 73 1 161 4 76 1 262 1 367 2 163 4 164 1 117 1 
58 1 100 2 239 1 168 2 169 1 219 1 348 1 299 1 105 1 174 2 273 1 248 1 247 1 222 1 274 1 301 1 352 1 85 2 86 2 357 4 11 1 254 2 88 2 50 1 285 4 111 1 112 1 90 1 360 1 337 1 70 1 113 1 73 1 161 4 190 2 262 1 163 4 367 2 235 1 164 1 117 1 
58 1 100 2 239 1 168 2 169 1 219 1 348 1 299 1 105 1 174 2 273 1 248 1 247 1 222 1 274 1 301 1 352 1 85 2 86 2 357 4 11 1 254 2 88 2 50 1 285 4 111 1 112 1 90 1 360 1 337 1 70 1 113 1 73 1 161 4 190 2 262 1 163 4 367 2 235 1 164 1 117 1 
357 2 11 1 239 1 285 2 219 1 348 1 360 1 299 1 337 1 248 1 273 1 113 1 250 1 274 1 161 2 352 1 262 1 235 1 164 1 
58 1 100 2 239 1 168 3 169 1 219 1 348 1 299 1 105 1 174 3 247 1 273 1 248 1 222 1 274 1 301 1 352 1 85 3 86 2 357 5 11 1 254 2 88 2 50 1 285 4 111 1 112 1 90 1 360 1 337 1 92 1 70 1 113 1 73 1 161 4 190 2 262 1 367 2 163 5 235 1 164 1 117 1 
58 1 100 2 239 1 168 3 169 1 219 1 348 1 299 1 105 1 174 3 247 1 273 1 248 1 222 1 274 1 301 1 352 1 85 3 86 2 357 5 11 1 254 2 88 2 50 1 285 4 111 1 112 1 90 1 360 1 337 1 92 1 70 1 113 1 73 1 161 4 190 2 262 1 367 2 163 5 235 1 164 1 117 1 
239 1 169 1 143 1 219 1 146 1 348 1 299 1 247 1 248 1 273 1 274 1 301 1 352 1 357 2 11 1 88 1 285 2 112 1 90 1 360 1 337 1 70 1 138 1 113 1 161 2 76 1 190 1 262 1 235 1 164 1 117 1 
323 1 152 1 71 2 81 1 150 1 128 1 284 1 39 1 157 1 
237 13 213 2 119 13 46 1 145 4 321 1 246 2 127 1 62 1 81 2 7 1 128 2 325 1 354 1 131 3 177 7 280 1 303 17 253 1 152 2 283 3 284 1 205 3 91 2 157 2 71 4 338 3 209 1 160 3 39 2 192 10 98 1 
266 1 214 1 44 1 345 1 4 1 45 1 219 2 241 1 127 1 249 1 273 2 248 1 300 1 81 1 62 1 7 1 128 1 176 1 202 1 177 1 303 2 283 1 152 1 328 1 284 1 228 1 204 1 53 1 157 1 312 1 71 2 209 1 56 1 39 1 38 1 316 1 192 1 211 1 
266 1 213 2 214 1 119 2 44 1 4 1 80 1 219 2 270 1 273 2 81 2 7 1 128 2 8 1 176 1 131 1 177 2 283 2 328 1 284 2 287 1 53 1 91 2 338 1 339 1 56 1 192 3 237 2 142 1 345 1 241 1 300 1 248 1 249 1 202 1 303 5 152 2 204 1 205 1 157 2 71 4 209 1 39 2 316 1 211 1 
266 1 344 1 44 3 4 1 347 1 219 1 241 1 273 1 248 1 300 1 81 2 62 1 150 1 7 1 128 2 175 1 177 1 202 1 49 1 303 2 152 2 328 1 284 2 51 1 204 1 53 3 361 1 157 2 71 4 56 1 39 2 316 3 192 1 41 1 
237 1 266 1 119 1 120 1 219 1 172 1 321 1 349 1 248 1 273 1 81 1 128 1 131 1 177 2 280 1 303 3 283 1 152 1 328 1 284 1 330 1 205 1 91 1 157 1 71 2 338 1 209 1 39 1 192 1 
237 1 213 1 303 2 283 1 119 1 152 1 284 1 205 1 91 1 157 1 71 2 81 1 150 1 128 1 83 1 39 1 131 1 192 2 
237 1 303 2 283 1 119 1 152 1 284 1 172 1 91 1 157 1 321 1 54 1 71 2 81 1 150 1 128 1 39 1 177 2 280 1 
237 2 213 1 119 2 172 1 321 1 81 1 150 1 128 1 131 1 177 2 280 1 303 4 152 1 283 2 284 1 205 1 91 2 157 1 71 2 338 1 39 1 192 2 
237 1 213 1 303 2 283 1 119 1 152 1 284 1 205 1 91 1 157 1 71 2 81 1 128 1 83 1 39 1 131 1 192 2 41 1 
237 1 303 2 283 1 119 1 152 1 284 1 172 1 91 1 157 1 321 1 54 1 71 2 81 1 128 1 39 1 177 2 41 1 280 1 
237 1 213 1 303 2 283 1 119 1 152 1 284 1 205 1 91 1 157 1 71 2 81 1 338 1 128 1 39 1 131 1 192 2 41 1 
237 1 213 1 303 2 283 1 119 1 152 1 284 1 205 1 91 1 157 1 71 2 81 1 338 1 128 1 39 1 131 1 192 2 
214 1 44 1 4 1 219 1 241 1 127 1 249 1 273 1 62 1 81 1 7 1 128 1 176 1 202 1 177 1 303 2 152 1 284 1 204 1 53 1 157 1 71 2 339 1 56 1 39 1 316 1 192 1 211 1 
44 1 18 1 4 1 219 1 241 1 127 1 273 1 62 1 81 1 7 1 128 1 176 1 202 1 177 1 303 2 152 1 358 1 284 1 204 1 53 1 157 1 71 2 15 1 56 1 39 1 316 1 192 1 211 1 
237 1 213 1 303 2 283 1 119 1 152 1 284 1 205 1 91 1 157 1 71 2 81 1 338 1 128 1 209 1 39 1 131 1 192 2 
237 1 213 1 119 1 214 1 344 1 44 1 4 1 270 1 219 1 241 1 249 1 273 1 81 1 128 1 131 1 176 1 202 1 303 2 283 1 152 1 284 1 204 1 205 1 91 1 53 1 157 1 71 2 338 1 339 1 39 1 316 1 192 2 211 1 
237 1 213 1 266 1 119 1 120 1 219 1 349 1 248 1 273 1 81 1 128 1 131 1 282 1 303 2 152 1 283 1 328 1 284 1 205 1 91 1 157 1 71 2 338 1 209 1 39 1 192 2 
213 1 167 1 145 2 172 1 321 1 246 1 61 1 81 2 252 1 128 2 302 1 131 1 177 5 280 1 303 9 152 2 32 1 205 1 69 1 91 2 157 2 71 4 338 1 160 1 341 1 40 1 192 4 317 1 98 1 
132 1 303 11 152 1 167 1 205 1 145 2 69 2 157 1 208 1 71 2 61 2 81 1 338 1 128 1 160 2 131 1 302 1 341 1 192 6 40 2 177 5 42 1 98 2 
213 1 167 1 145 2 172 1 321 1 246 1 61 1 81 2 252 1 128 2 302 1 131 1 224 1 177 5 280 1 303 9 152 2 205 1 69 1 91 2 157 2 71 4 338 1 160 1 341 1 40 1 192 4 317 1 98 1 
213 1 167 1 145 2 172 1 321 1 246 1 61 1 81 2 252 1 128 2 302 1 131 1 224 1 177 5 280 1 303 9 152 2 205 1 69 1 91 2 157 2 71 4 338 1 160 1 341 1 40 1 192 4 317 1 98 1 
213 4 167 1 46 2 145 4 172 6 147 1 321 5 246 2 61 2 81 1 128 1 25 1 64 1 302 1 131 6 177 19 280 4 132 1 303 39 152 1 255 1 205 5 206 1 69 1 91 10 157 1 364 1 208 1 71 2 338 5 160 4 341 1 40 1 192 20 42 1 98 2 
245 1 294 1 215 1 63 1 121 1 99 1 260 1 234 1 125 1 217 1 
233 1 19 1 
256 1 294 1 121 1 99 1 258 1 260 1 309 1 234 1 217 1 
182 1 220 1 
22 1 30 1 26 1 
294 1 99 1 121 1 296 1 153 1 122 1 285 1 123 1 125 1 217 1 184 1 245 1 63 1 222 1 260 1 161 1 234 1 315 2 
294 1 99 1 121 1 296 1 153 1 122 1 285 1 123 1 125 1 217 1 184 1 245 1 63 1 222 1 260 1 161 1 234 1 315 2 
294 1 99 1 121 1 296 1 153 1 122 1 285 1 123 1 125 1 217 1 184 1 245 1 63 1 222 1 260 1 161 1 234 1 315 2 
182 1 26 1 220 1 
182 1 26 1 220 1 
22 1 30 1 
22 1 30 1 26 1 
244 1 243 1 
294 1 266 2 121 1 99 1 0 1 123 1 346 1 217 1 19 1 219 2 243 1 244 1 127 1 273 2 248 2 107 1 328 2 180 1 153 1 285 1 290 1 233 1 260 1 161 1 234 1 315 1 368 1 
44 2 4 1 347 2 219 2 241 1 273 2 248 2 81 1 62 1 7 1 128 1 200 1 275 1 202 1 177 1 226 1 49 1 303 2 152 1 284 1 204 1 359 1 53 2 157 1 71 2 114 1 209 1 313 1 39 1 316 2 192 1 
87 1 265 2 344 1 110 1 44 2 269 1 204 1 89 1 53 2 289 1 241 1 35 1 257 1 149 1 189 1 96 1 353 1 316 2 17 1 
265 2 110 1 44 1 269 1 204 1 59 1 89 1 53 1 289 1 241 1 35 1 257 1 149 1 189 1 96 1 316 1 17 1 
44 1 144 1 51 1 286 1 204 1 4 1 89 1 53 1 241 1 361 1 56 1 353 1 316 1 202 1 
87 1 265 2 110 1 44 1 269 1 204 1 89 1 53 1 289 1 241 1 35 1 257 1 149 1 189 1 96 1 353 1 316 1 17 1 
293 1 
323 1 
100 1 169 1 247 1 222 1 86 1 254 1 285 1 50 1 112 1 90 1 70 1 138 1 73 1 161 1 367 1 163 1 117 1 
44 1 169 2 4 4 241 1 60 1 198 1 247 2 8 1 274 1 130 1 131 1 65 1 202 1 66 2 356 1 135 2 305 1 227 1 285 2 181 1 308 1 204 2 112 3 205 1 90 2 53 1 70 2 138 2 72 1 338 1 161 2 56 1 314 2 367 1 163 2 316 1 211 1 117 2 43 1 
132 1 135 3 169 1 205 1 112 3 145 1 90 4 34 1 321 1 70 1 247 1 208 1 138 1 338 1 160 1 131 1 280 1 42 1 342 1 117 1 98 1 66 3 
70 1 58 1 247 1 25 1 324 1 169 1 285 1 161 1 255 1 112 1 90 1 57 1 117 1 
169 1 50 1 112 1 196 1 90 1 322 1 70 1 247 1 222 1 117 1 
138 1 135 1 338 1 112 2 131 1 205 1 66 1 
222 1 50 1 285 1 161 1 163 1 367 1 
267 1 44 4 102 2 169 2 2 1 195 1 4 2 241 2 247 2 27 1 202 2 225 1 10 1 356 2 48 2 307 1 285 3 51 1 204 3 112 2 90 2 53 4 13 1 361 1 70 1 139 1 74 1 161 3 56 2 316 4 163 4 367 2 211 1 117 2 
266 2 214 1 44 1 4 1 219 3 241 1 127 1 273 3 248 2 349 2 249 1 81 1 7 1 128 1 176 1 177 1 202 1 303 1 152 1 328 2 306 1 284 1 204 1 53 1 157 1 71 2 339 1 56 1 39 1 316 1 211 1 212 1 
356 1 48 1 135 1 169 1 50 1 112 1 90 1 70 1 138 1 247 1 222 1 117 1 
141 1 260 1 217 1 
141 1 260 1 217 1 
244 1 295 1 63 1 260 1 217 1 
141 1 260 1 217 1 
31 1 260 1 217 1 
31 1 260 1 217 1 
31 1 260 1 217 1 
260 1 217 1 
121 1 99 1 
213 1 152 2 255 1 172 1 91 2 147 1 157 2 71 4 364 1 81 2 128 2 232 1 25 1 
323 1 
303 4 213 1 152 1 205 1 172 1 91 2 321 1 157 1 71 2 81 1 338 1 128 1 131 1 279 1 177 2 192 2 280 1 
303 7 213 1 145 2 205 1 172 1 91 2 321 1 246 1 338 1 160 1 131 1 177 4 192 3 280 1 98 1 
213 4 46 1 145 2 172 4 147 1 321 3 246 1 81 2 128 2 25 2 64 1 131 3 177 10 280 2 303 20 253 1 152 2 255 2 205 2 206 1 91 8 157 2 364 1 71 4 338 2 232 2 160 2 16 1 192 10 
303 1 145 1 177 1 
303 1 160 1 192 1 
303 6 213 2 152 1 205 1 172 2 91 4 157 1 321 1 71 2 81 1 338 1 128 1 8 1 131 1 279 1 177 3 192 3 280 1 
132 1 303 5 152 1 205 1 145 1 157 1 71 2 208 1 81 1 338 1 128 1 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
303 6 213 1 255 1 206 1 172 1 91 2 321 1 25 1 131 1 192 3 177 3 
213 1 303 1 152 1 255 1 172 1 91 2 147 1 157 1 364 1 71 2 81 1 232 1 128 1 25 1 16 1 177 1 
213 2 303 10 152 1 255 1 172 2 206 1 91 4 157 1 321 2 71 2 81 1 128 1 324 1 25 1 131 2 341 1 192 5 177 5 
303 2 213 1 152 1 205 1 91 1 157 1 71 2 81 1 128 1 131 1 341 1 192 2 
303 4 213 1 152 1 205 1 172 1 91 2 321 1 157 1 71 2 81 1 338 1 128 1 131 1 341 1 177 2 192 2 280 1 
303 2 152 1 255 1 172 1 91 1 157 1 71 2 81 1 128 1 25 1 341 1 177 1 192 1 
213 5 145 4 172 4 147 1 321 4 246 1 81 5 6 1 252 1 128 5 25 3 276 1 131 4 279 1 177 13 280 3 303 24 152 5 255 3 205 3 206 1 91 9 157 5 364 1 71 10 338 3 232 2 55 1 160 3 16 1 341 1 192 11 98 1 
145 2 172 1 147 1 321 1 246 1 81 1 128 1 25 1 64 1 131 2 177 5 303 12 152 1 255 1 205 1 206 1 91 1 157 1 208 1 71 2 364 1 338 1 160 1 341 1 192 7 98 1 
213 1 145 2 172 1 147 1 321 1 246 1 81 2 128 2 25 1 64 1 131 2 279 1 177 5 303 12 152 2 255 1 205 1 206 1 91 2 157 2 364 1 208 1 71 4 338 1 160 1 341 1 192 7 98 1 
132 1 303 5 152 1 205 1 145 1 157 1 71 2 208 1 81 1 338 1 128 1 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
132 1 303 5 152 1 205 1 145 1 157 1 71 2 208 1 81 1 338 1 128 1 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
145 2 172 1 147 1 321 1 246 1 81 1 128 1 25 1 64 1 131 2 177 5 303 12 152 1 255 1 205 1 206 1 91 1 157 1 208 1 71 2 364 1 338 1 160 1 341 1 192 7 98 1 
132 1 303 5 152 1 205 1 145 1 157 1 71 2 208 1 81 1 338 1 128 1 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
132 1 303 5 152 2 205 1 145 1 157 2 71 4 208 1 81 2 338 1 128 2 160 1 131 1 341 1 279 1 192 3 177 2 42 1 98 1 
132 1 303 5 152 2 205 1 145 1 157 2 71 4 208 1 81 2 338 1 252 1 128 2 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
213 2 303 4 255 2 172 2 147 1 91 4 364 2 25 2 192 2 177 2 
132 1 303 5 152 2 205 1 145 1 157 2 71 4 208 1 81 2 338 1 252 1 128 2 160 1 131 1 341 1 192 3 177 2 42 1 98 1 
179 1 127 1 273 1 248 1 219 1 84 1 299 1 
166 1 178 1 179 1 103 1 219 1 335 1 299 1 127 1 248 1 273 1 84 1 236 1 
323 1 44 1 56 1 316 1 53 1 
266 1 214 1 328 1 44 1 204 1 4 1 219 2 53 1 241 1 127 1 300 1 248 1 273 2 56 1 176 1 316 1 202 1 211 1 
77 1 266 2 214 1 44 1 102 1 4 3 219 2 241 1 127 1 273 2 248 2 300 1 176 1 202 2 11 1 328 1 203 1 204 1 53 1 113 1 316 1 235 1 211 2 
77 1 266 2 44 2 102 1 4 3 219 2 241 1 5 1 127 1 273 2 248 2 300 1 176 1 202 2 11 1 328 1 203 1 204 1 53 2 113 1 15 1 316 2 235 1 211 2 
266 1 44 1 102 1 4 1 218 1 219 1 20 1 349 1 248 1 273 1 222 1 328 1 50 1 285 1 306 1 53 1 14 1 310 1 113 1 161 1 314 1 316 1 
266 1 44 1 102 1 4 1 218 1 219 1 20 1 349 1 248 1 273 1 222 1 328 1 50 1 181 1 285 1 306 1 53 1 310 1 113 1 161 1 314 1 316 1 
44 1 351 1 204 1 316 1 53 1 241 1 
133 1 44 1 204 2 195 1 4 1 53 1 241 1 198 1 139 1 56 1 316 1 202 1 211 1 
213 1 266 1 214 1 119 1 44 1 4 1 270 1 219 2 172 3 321 3 273 2 127 5 81 2 128 2 324 1 176 1 131 3 177 8 283 1 328 1 284 2 287 1 53 1 91 4 339 1 192 9 237 1 344 1 147 1 241 1 249 1 300 1 248 1 25 2 64 1 202 1 303 17 152 2 204 1 255 2 155 1 206 2 157 2 71 4 364 1 113 1 114 1 209 1 39 2 316 1 211 1 
44 1 169 2 4 2 196 1 322 1 247 2 222 1 274 1 130 1 107 1 50 1 285 3 308 1 181 1 112 1 90 1 53 1 13 1 70 2 72 1 161 3 56 1 314 1 316 1 163 2 367 1 117 2 43 1 
344 1 44 2 204 2 4 2 53 2 241 1 72 1 198 1 351 1 65 1 316 2 202 1 211 1 
5 1 118 1 344 1 44 4 51 1 204 1 4 1 56 1 316 4 202 1 53 4 241 1 361 1 
44 1 2 1 204 2 195 1 4 1 53 1 241 1 139 1 278 1 316 1 202 1 211 1 225 1 
265 1 257 1 44 1 189 1 204 1 56 1 316 1 53 1 289 1 241 1 
226 1 344 1 44 2 275 1 204 1 4 1 316 2 202 1 17 1 53 2 241 1 
226 1 118 1 344 1 44 4 102 1 51 1 204 2 4 3 297 1 53 5 361 1 241 2 137 1 56 1 316 5 202 2 
226 1 118 1 344 1 44 4 102 1 51 1 204 2 4 3 53 5 361 1 241 2 137 1 292 1 56 1 316 5 202 2 
266 1 328 1 44 1 204 1 4 1 219 2 53 1 241 1 127 1 300 1 248 1 273 2 15 1 56 1 176 1 316 1 202 1 211 1 
133 1 44 1 102 1 204 2 195 1 4 1 53 1 241 1 198 1 139 1 316 1 202 1 211 1 
127 1 288 1 281 1 21 1 36 1 
266 1 218 1 219 1 20 1 242 1 21 2 273 1 248 1 349 1 127 1 222 1 274 1 107 1 281 2 11 1 328 1 306 1 285 2 50 1 288 2 334 1 337 1 36 1 310 1 159 1 113 2 161 2 162 1 235 1 
288 1 219 1 359 1 21 1 36 1 248 1 273 1 313 1 200 1 
162 1 334 1 36 1 
323 1 
291 1 311 1 216 1 115 1 183 1 33 1 151 1 
268 1 134 1 151 1 
216 1 240 1 68 1 183 1 126 2 33 1 291 1 187 1 311 1 259 1 115 3 151 3 
291 1 311 1 186 1 216 1 201 1 115 2 183 1 33 1 151 2 
265 1 216 1 24 1 199 1 259 1 115 1 96 1 183 1 289 1 151 1 
291 1 311 1 216 1 259 1 115 1 183 1 151 1 
291 2 216 1 259 1 115 1 183 1 33 1 151 1 
291 1 311 1 216 2 231 1 259 1 115 2 366 1 183 2 108 1 151 2 
238 1 216 1 183 1 33 1 291 1 311 1 186 2 251 1 199 1 259 1 115 3 355 1 151 3 
265 2 216 1 183 1 33 1 298 1 289 1 291 1 257 1 311 1 186 1 149 1 259 1 115 2 96 1 151 2 
216 2 183 2 33 1 291 1 185 1 311 1 186 2 251 1 199 1 259 1 201 1 115 4 151 4 
291 1 311 1 216 1 259 1 115 1 183 1 33 1 151 1 
216 1 240 1 68 1 126 1 183 1 33 2 173 1 291 2 311 2 186 2 251 1 199 1 115 4 151 4 
216 1 183 1 33 1 291 1 148 1 311 1 186 1 106 1 259 1 188 1 115 2 151 2 
216 1 240 2 68 1 183 1 126 2 33 1 291 1 311 1 259 1 115 3 75 1 151 3 
29 2 311 2 365 1 271 1 
12 1 216 1 259 1 115 1 183 1 151 1 
291 1 311 1 186 1 238 1 216 1 259 1 115 2 183 1 33 1 151 2 
340 1 
291 1 311 1 216 1 259 1 115 1 183 1 33 1 151 1 
238 1 216 1 183 1 126 1 33 1 291 1 186 1 311 1 259 1 115 3 151 3 
186 1 251 1 199 1 115 1 151 1 
291 1 311 1 

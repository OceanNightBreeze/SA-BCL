#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 162 116 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 162 116 187 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) (27,120) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (27,120) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) (27,120) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (138,208,257,278) (138,208,257,278) (138,208,257,278) 205 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 204 259 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (146,258,290) (146,258,290) (146,258,290) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (146,258,290) (146,258,290) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (146,258,290) (146,258,290) (146,258,290) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 43 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 272 128 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 204 259 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 162 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 257 1 205 1 
87 1 96 1 43 1 
96 1 143 1 178 2 
182 2 229 2 10 2 21 2 210 2 165 1 158 1 28 2 
64 1 261 1 182 2 0 1 229 3 262 1 150 1 151 2 233 1 267 1 158 1 270 1 41 1 109 2 111 1 10 2 193 1 119 1 200 1 201 2 165 1 18 2 21 2 210 2 57 1 92 1 28 3 286 1 171 1 217 1 289 1 135 1 136 1 293 1 32 1 176 2 297 1 
182 1 229 1 21 1 210 1 28 1 9 1 10 1 137 1 165 1 100 1 
147 1 182 1 229 1 87 1 264 1 3 1 250 1 28 1 137 1 255 1 96 1 273 1 144 1 243 1 
147 1 182 1 229 1 21 1 210 1 87 1 264 2 250 2 28 1 10 1 137 1 96 1 273 1 144 1 243 1 
95 1 264 1 250 1 81 1 5 1 
95 1 87 1 264 2 96 1 250 2 5 1 122 1 181 1 
264 1 250 1 5 1 
182 1 229 1 21 1 210 1 264 1 250 1 28 1 9 1 137 1 10 1 95 1 80 1 165 1 100 1 
96 1 
182 1 229 1 21 1 210 1 87 1 264 2 250 2 28 1 5 1 9 1 137 1 10 1 95 1 80 1 96 1 165 1 202 1 100 1 181 1 
182 1 229 1 103 1 264 5 234 2 5 2 68 1 190 1 8 1 163 2 9 1 240 2 10 1 45 1 117 1 118 1 80 1 165 1 206 1 169 2 84 2 21 1 210 1 87 1 282 1 90 1 250 5 56 1 28 1 137 1 95 2 141 1 96 1 35 4 175 2 228 4 100 1 181 1 
158 1 43 1 
182 2 229 2 21 1 210 1 28 2 158 1 189 1 220 1 137 1 10 1 246 1 
65 1 53 1 266 1 
229 1 262 1 150 1 233 1 92 1 158 1 28 1 41 1 171 1 109 1 136 1 32 1 119 1 176 1 18 1 50 1 
182 1 150 1 229 2 262 1 53 1 210 1 106 1 233 1 130 1 92 1 28 2 171 1 41 1 109 1 136 1 10 1 32 1 119 1 176 1 18 1 
182 3 229 3 21 1 210 3 106 1 28 3 158 1 137 1 10 3 246 1 
182 1 229 1 137 1 10 1 210 1 28 1 100 1 
182 1 229 1 21 1 210 1 28 1 189 1 220 1 10 1 137 1 
147 1 261 1 182 3 0 1 150 1 229 4 262 1 151 1 106 1 233 1 264 1 267 1 158 1 270 1 41 1 189 1 109 1 111 1 112 1 193 1 10 3 119 1 201 2 273 1 165 1 243 1 18 1 21 2 210 3 130 1 250 1 57 1 92 1 28 4 286 1 171 1 288 1 135 1 136 1 137 1 32 1 144 1 176 1 297 1 
182 2 229 2 10 1 255 1 210 1 106 1 89 1 158 1 28 2 
147 1 182 3 229 3 149 1 21 1 210 3 106 2 264 1 250 1 130 1 28 3 189 1 288 1 137 1 10 3 96 1 273 1 144 1 243 1 
65 1 182 2 229 2 21 1 53 1 210 2 106 1 28 2 189 1 10 2 
229 1 262 1 150 1 233 1 92 1 158 1 28 1 41 1 171 1 109 1 136 1 32 1 119 1 176 1 18 1 
125 1 229 1 262 1 150 1 233 1 92 1 158 1 28 1 41 1 171 1 109 1 137 1 140 1 119 1 176 1 18 1 246 1 
261 1 65 2 39 1 151 4 266 2 270 1 110 1 111 1 201 2 244 1 167 1 84 1 170 1 53 2 213 1 57 1 286 1 217 2 58 1 135 2 31 1 175 1 297 1 298 1 
182 1 229 1 137 1 10 1 210 1 144 1 28 1 191 1 
182 2 229 2 21 1 210 2 106 1 28 2 158 1 189 1 137 1 10 2 246 1 
182 2 229 2 137 1 10 2 210 2 28 2 100 1 191 1 
260 1 212 1 
260 1 212 1 
177 1 161 1 
177 1 161 1 
177 1 161 1 
260 1 212 1 131 1 
248 1 174 1 260 2 212 2 274 1 177 1 161 1 
260 1 212 1 216 1 
260 1 212 1 131 1 
260 1 212 1 131 1 
260 1 212 1 17 1 
260 1 212 1 17 1 
260 1 212 1 17 1 
162 1 260 1 116 1 24 1 212 1 29 1 
162 1 260 1 116 1 24 1 212 1 264 1 187 1 250 1 29 1 
195 1 14 1 72 1 
104 1 
104 1 
104 1 
104 1 
182 1 229 1 105 2 264 5 234 1 5 1 42 1 240 1 9 1 10 1 117 1 80 1 165 1 245 1 169 1 20 1 21 1 86 1 210 1 87 1 55 1 213 1 250 5 132 1 28 1 292 1 137 1 95 4 35 2 175 1 96 1 228 1 100 1 178 1 101 1 179 1 181 1 
182 1 229 1 264 2 5 1 70 1 9 1 10 1 80 1 165 1 81 1 21 1 210 1 87 1 250 2 28 1 284 1 137 1 95 2 139 1 96 1 100 1 
105 1 264 3 234 1 42 1 240 1 244 1 169 1 84 1 20 2 86 1 87 1 55 1 250 3 213 1 132 1 292 2 95 2 141 1 96 3 143 2 175 1 35 2 228 3 179 1 101 1 178 4 
105 2 264 4 234 1 42 2 114 1 240 1 244 2 127 1 169 1 84 2 20 4 86 1 87 1 88 1 55 2 250 4 213 2 132 1 292 4 95 3 141 1 96 4 143 3 175 2 35 4 228 5 178 7 179 1 101 1 
233 1 67 1 43 1 
272 1 233 1 
52 1 
233 1 171 1 
197 1 67 2 233 3 171 1 41 1 159 1 
233 1 171 1 41 1 
233 1 269 1 
84 1 170 3 19 1 232 1 151 7 249 1 129 1 68 1 217 4 160 1 135 3 45 1 118 1 12 2 175 1 145 1 298 2 
84 1 170 3 19 1 232 1 151 7 249 1 129 1 68 1 217 4 160 1 135 3 45 1 118 1 12 2 175 1 145 1 298 2 
84 1 170 3 19 1 232 1 151 7 249 1 129 1 68 1 217 4 160 1 135 3 45 1 118 1 12 2 175 1 37 1 145 1 298 2 
261 1 1 1 151 31 232 5 68 2 236 1 111 1 160 2 74 1 45 1 118 2 12 3 201 2 15 1 16 1 244 3 275 3 51 1 19 1 170 10 84 4 249 1 129 1 55 3 213 3 214 1 286 1 217 16 173 4 135 15 175 4 297 1 145 2 298 5 
261 2 151 9 232 1 68 1 111 2 160 1 45 1 194 1 12 2 118 1 201 4 276 1 51 1 84 1 170 4 249 1 129 1 286 2 217 5 135 4 175 1 297 2 145 1 298 3 
208 1 294 1 138 1 257 1 205 1 
208 1 294 1 138 1 120 1 257 1 
208 1 294 1 27 1 278 1 
208 1 294 1 138 1 120 1 257 1 
208 1 294 1 138 1 257 1 205 1 
285 1 
169 1 262 1 264 1 250 1 234 1 132 1 5 1 109 1 240 1 117 1 176 1 228 1 259 1 18 1 204 1 
147 1 182 1 229 1 38 1 264 3 153 2 3 1 155 1 5 2 273 1 202 1 243 1 277 1 250 3 28 1 134 1 60 1 137 1 255 1 144 1 296 1 181 1 
147 1 182 1 229 1 38 1 264 3 153 3 3 1 155 1 5 1 115 1 273 1 243 1 202 1 87 1 250 3 28 1 134 1 60 1 137 1 255 1 96 1 144 1 296 1 181 1 
147 1 182 1 229 1 38 1 264 3 153 3 3 1 155 1 6 1 5 2 115 1 273 1 202 1 243 1 277 1 250 3 28 1 134 1 60 1 137 1 255 1 144 1 296 1 181 1 
147 1 229 2 153 3 155 1 3 1 234 1 6 3 5 5 237 1 164 1 9 1 240 1 10 1 80 1 79 1 165 1 243 1 166 1 83 1 247 1 169 1 21 1 87 1 250 4 28 2 255 1 33 1 96 1 35 1 100 1 181 2 182 2 38 1 186 1 264 4 115 1 196 1 117 1 273 1 202 1 277 3 210 1 54 1 134 1 59 1 60 1 137 2 143 1 144 1 296 1 228 1 
147 1 229 1 153 4 155 1 234 1 3 1 5 4 6 2 237 2 164 1 240 1 243 1 166 2 247 2 169 1 87 1 250 4 28 1 255 1 33 2 35 1 96 2 178 2 181 2 182 1 38 1 264 4 115 2 117 1 273 1 277 2 59 1 134 1 60 1 222 1 137 1 143 2 144 1 296 1 228 1 
147 1 229 2 153 3 155 1 3 1 234 1 5 2 6 1 237 1 164 1 9 1 240 1 10 1 80 1 165 1 243 1 166 1 83 1 247 1 169 1 21 1 87 1 250 3 28 2 255 1 33 1 35 1 96 1 100 1 181 1 182 2 38 1 186 1 264 3 115 1 117 1 273 1 277 1 210 1 54 1 134 1 59 1 60 1 137 2 143 1 144 1 296 1 228 1 
147 1 229 2 153 3 155 1 3 1 234 1 5 2 6 1 237 1 164 1 9 1 240 1 10 1 80 1 165 1 243 1 166 1 83 1 247 1 169 1 21 1 87 1 250 3 28 2 255 1 33 1 35 1 96 1 100 1 181 1 182 2 38 1 186 1 264 3 115 1 117 1 273 1 277 1 210 1 54 1 134 1 59 1 60 1 137 2 143 1 144 1 296 1 228 1 
147 1 182 1 229 1 38 1 263 1 153 2 264 2 155 1 250 2 3 1 28 1 134 1 60 1 137 1 255 1 144 1 273 1 243 1 296 1 
147 1 229 2 153 4 155 1 3 1 234 1 5 3 6 2 237 1 164 1 9 1 240 1 10 1 80 1 165 1 243 1 166 1 83 1 247 1 169 1 21 1 87 1 250 3 28 2 255 1 33 1 35 1 96 1 100 1 181 1 182 2 38 1 186 1 264 3 115 2 196 1 117 1 273 1 277 2 210 1 54 1 134 1 59 1 60 1 137 2 143 1 144 1 296 1 228 1 
147 1 229 2 153 4 155 1 3 1 234 1 5 3 6 2 237 1 164 1 9 1 240 1 10 1 80 1 165 1 243 1 166 1 83 1 247 1 169 1 21 1 87 1 250 3 28 2 255 1 33 1 35 1 96 1 100 1 181 1 182 2 38 1 186 1 264 3 115 2 196 1 117 1 273 1 277 2 210 1 54 1 134 1 59 1 60 1 137 2 143 1 144 1 296 1 228 1 
147 1 229 1 153 4 155 1 234 1 3 1 4 2 5 4 6 2 237 2 164 1 240 1 243 1 168 2 247 2 169 1 87 1 250 4 28 1 255 1 35 1 96 1 178 2 181 2 182 1 38 1 264 4 115 2 117 1 273 1 277 2 280 1 134 1 60 1 222 1 137 1 144 1 296 1 228 1 
65 1 261 1 39 1 151 6 266 1 158 2 68 1 270 1 111 1 43 1 45 1 118 1 12 1 201 2 170 2 84 1 53 1 249 1 129 1 57 1 286 1 217 3 135 3 175 1 297 1 298 2 
261 2 65 4 1 1 184 1 232 1 151 14 267 1 266 11 158 1 157 1 270 1 111 2 201 4 16 1 244 1 275 3 170 2 84 1 53 11 55 2 25 1 213 2 57 2 286 2 217 8 173 3 135 6 293 1 175 2 226 1 63 1 297 2 298 1 
65 1 182 1 261 1 150 1 262 1 229 2 184 1 106 1 151 2 233 1 188 1 267 1 158 1 41 1 270 1 109 1 111 1 10 1 46 1 119 1 201 2 18 1 50 1 210 1 130 1 92 1 57 1 28 2 171 1 286 1 217 1 136 1 135 1 32 1 293 1 295 1 176 1 297 1 
65 7 229 3 150 2 231 1 151 20 232 4 154 1 233 2 158 2 68 1 10 1 76 2 77 1 241 2 12 1 18 3 244 2 84 3 170 8 249 1 92 2 28 3 171 2 32 2 256 2 34 2 175 3 176 3 261 3 182 1 262 1 184 1 106 1 267 1 266 7 270 3 41 2 109 3 111 3 45 1 193 2 118 1 119 2 201 6 126 1 53 7 210 1 129 1 55 2 130 1 213 2 57 3 286 3 217 10 135 10 136 2 293 1 297 3 298 4 
182 1 261 2 229 1 150 2 262 2 39 1 106 1 185 1 151 2 233 3 267 1 270 2 109 7 7 1 71 1 111 2 73 1 10 1 77 1 198 1 119 2 242 1 201 4 18 8 123 1 23 1 210 1 57 2 28 1 286 2 171 2 217 1 133 1 289 2 135 1 293 1 176 8 98 1 297 2 
65 1 261 1 182 1 229 1 184 1 151 3 266 1 270 1 189 1 111 1 10 1 201 2 244 1 170 1 84 1 21 1 53 1 210 1 55 1 213 1 57 1 28 1 286 1 217 1 218 1 135 2 175 1 297 1 298 1 
65 1 261 1 170 1 53 1 39 1 232 1 151 2 213 1 266 1 57 1 270 1 286 1 217 2 111 1 175 1 201 2 297 1 167 1 
65 1 261 1 170 1 84 1 53 1 39 1 151 2 266 1 57 1 270 1 286 1 111 1 135 2 31 1 201 2 297 1 244 1 298 1 
261 1 65 2 39 1 151 4 232 1 266 2 270 1 111 1 201 2 244 1 170 2 84 1 53 2 55 1 213 1 57 1 286 1 217 2 135 2 175 1 297 1 298 1 
65 1 261 1 170 1 53 1 232 1 151 2 185 1 213 1 266 1 57 1 270 1 286 1 217 2 111 1 175 1 201 2 297 1 167 1 
65 1 261 1 170 1 84 1 53 1 151 2 185 1 266 1 57 1 270 1 286 1 111 1 135 2 31 1 201 2 297 1 244 1 298 1 
261 1 65 2 185 1 151 4 232 1 266 2 270 1 111 1 201 2 244 1 170 2 84 1 53 2 55 1 213 1 57 1 286 1 217 2 135 2 175 1 297 1 298 1 
261 1 65 2 151 4 232 1 266 2 270 1 111 1 201 2 244 1 170 2 84 1 53 2 55 1 213 1 57 1 286 1 217 2 135 2 175 1 297 1 298 1 
261 1 150 1 262 1 229 1 151 2 233 1 267 1 158 1 41 1 270 1 109 1 111 1 193 1 119 1 201 2 18 1 92 1 57 1 28 1 171 1 286 1 217 1 136 1 135 1 293 1 32 1 176 1 297 1 
261 1 150 1 262 1 229 1 183 1 151 1 233 1 267 1 158 1 41 1 270 1 109 1 111 1 119 1 201 2 18 1 246 1 125 1 92 1 57 1 28 1 171 1 286 1 135 1 137 1 140 1 176 1 297 1 
261 1 65 2 184 1 151 4 232 1 266 2 270 1 111 1 201 2 244 1 170 2 84 1 53 2 55 1 213 1 57 1 286 1 217 2 135 2 175 1 297 1 298 1 
65 2 261 1 150 1 229 1 232 1 151 4 233 1 266 2 41 1 270 1 109 1 111 1 193 1 119 1 201 2 244 1 18 1 84 1 170 2 53 2 23 1 55 1 213 1 92 1 57 1 28 1 171 1 286 1 217 2 135 2 136 1 32 1 256 1 175 1 176 1 297 1 298 1 
261 1 182 1 65 1 229 1 184 1 232 1 151 3 266 1 270 1 189 1 111 1 238 1 10 1 201 2 244 1 84 1 170 1 21 1 53 1 210 1 55 1 213 1 57 1 28 1 286 1 217 2 135 1 175 1 297 1 
148 1 261 2 102 1 1 2 40 4 230 1 151 28 232 2 111 2 271 1 194 1 201 4 16 3 244 3 275 3 124 1 207 1 279 2 170 4 84 3 55 3 213 3 286 2 217 13 173 5 135 15 61 1 142 1 175 3 297 2 298 2 180 1 
148 1 261 2 102 1 1 2 40 4 230 1 151 28 232 2 111 2 271 1 194 1 201 4 16 3 244 3 275 3 124 1 207 1 279 2 170 5 84 3 55 3 213 3 286 2 217 13 173 5 135 15 61 1 142 1 175 3 297 2 298 3 180 1 
148 1 261 1 1 1 40 4 230 1 151 41 232 3 157 1 68 3 111 1 271 1 45 3 194 1 12 3 118 3 201 2 16 2 244 3 275 3 207 1 279 1 170 9 84 6 249 3 129 3 55 3 213 3 286 1 217 22 173 3 135 19 61 1 142 1 175 6 297 1 298 6 180 1 
148 1 261 2 102 1 1 2 40 4 230 1 151 30 232 3 111 2 271 1 194 1 13 1 201 4 16 2 244 4 275 2 207 1 279 1 170 7 84 4 55 4 213 4 286 2 217 14 173 4 135 16 61 1 142 2 175 4 297 2 298 4 180 1 
261 1 40 2 230 1 151 10 111 1 271 1 194 1 201 2 16 1 244 1 275 1 207 1 279 2 84 1 55 1 213 1 286 1 217 5 173 1 135 5 142 1 175 1 297 1 180 2 
182 2 261 1 150 1 229 2 184 1 151 2 233 1 267 1 268 1 270 1 109 2 111 1 73 1 48 1 119 1 198 1 201 2 18 2 91 1 57 1 215 1 28 2 171 1 286 1 217 1 252 1 289 2 135 1 293 1 176 2 297 1 
150 1 104 1 2 1 281 1 23 1 152 1 109 2 219 1 290 1 77 1 119 1 176 2 258 1 18 2 146 1 
150 1 104 1 281 1 152 1 109 1 219 1 290 1 77 1 47 1 119 1 176 1 18 1 146 1 
150 1 262 1 2 1 281 1 233 1 171 1 109 1 7 1 62 1 119 1 242 1 176 1 36 1 18 1 
150 1 104 1 2 1 281 1 152 1 109 1 219 1 290 1 77 1 119 1 176 1 258 1 18 1 146 1 
225 1 
8 1 206 1 43 1 
264 1 234 1 5 1 240 1 117 1 166 1 169 1 87 1 250 1 59 1 33 1 143 1 35 1 96 2 228 1 178 1 181 1 
169 1 150 2 262 1 128 1 233 1 234 1 171 1 41 1 109 1 159 1 240 1 272 1 117 1 119 1 49 1 176 1 18 1 
103 1 264 1 234 2 5 1 239 1 75 1 163 2 240 2 11 1 117 2 16 1 244 2 275 1 169 2 84 2 20 5 211 1 87 2 55 2 250 1 213 2 132 1 172 1 173 1 253 1 292 5 61 1 143 3 96 5 35 5 175 2 227 1 228 8 178 6 181 1 
182 1 229 1 103 1 186 1 264 1 234 1 68 1 163 2 240 1 9 1 45 1 10 1 118 1 117 1 80 1 165 1 169 1 84 1 21 1 210 1 56 1 250 1 28 1 137 1 175 2 35 2 228 2 100 1 
169 1 240 1 117 1 234 1 206 1 
84 2 20 5 103 1 55 2 213 2 163 2 292 5 241 1 175 2 35 5 143 5 96 5 228 5 244 2 178 10 
87 1 264 1 96 1 250 1 5 1 181 1 
169 1 262 1 234 1 132 1 5 1 109 1 44 1 240 1 117 1 176 1 228 1 259 1 18 1 204 1 
261 1 182 2 0 1 262 1 229 3 150 1 151 1 233 1 267 1 158 1 41 1 270 1 109 1 111 1 10 2 193 1 119 1 201 2 165 1 18 1 21 2 210 2 92 1 57 1 28 3 171 1 286 1 135 1 136 1 32 1 176 1 297 1 
169 1 20 2 87 2 234 1 132 1 239 1 240 1 292 2 12 1 117 1 143 2 35 2 96 4 228 1 178 4 
162 1 24 1 
162 1 24 1 
162 1 24 1 
162 1 24 1 
162 1 24 1 
162 1 24 1 
162 1 24 1 
162 1 24 1 
260 1 212 1 
261 1 151 8 68 1 111 1 45 1 194 1 12 1 118 1 201 2 16 1 275 1 84 1 170 2 249 1 129 1 286 1 217 4 173 1 135 4 61 1 175 1 297 1 298 2 
261 2 1 1 151 11 232 1 68 1 111 2 45 1 194 1 12 1 118 1 201 4 16 1 275 1 84 1 170 3 249 1 129 1 55 1 213 1 286 2 217 6 173 2 135 5 30 1 61 1 175 2 297 2 298 2 
261 3 232 1 151 19 68 1 111 3 45 1 194 1 12 1 118 1 201 6 16 1 244 2 275 1 51 1 84 3 170 4 211 1 249 1 129 1 55 2 213 2 286 3 217 9 172 1 173 1 253 1 30 1 135 10 61 1 175 3 227 1 297 3 298 3 
261 3 232 2 151 17 68 1 111 3 45 1 194 1 12 1 118 1 201 6 16 1 244 1 275 1 51 1 84 2 170 5 211 1 249 1 129 1 55 2 213 2 286 3 217 10 172 1 173 1 253 1 30 1 135 7 61 1 175 3 227 1 297 3 298 3 
261 1 151 8 68 1 111 1 45 1 194 1 12 1 118 1 201 2 16 1 275 1 84 1 170 2 249 1 129 1 286 1 217 4 173 1 135 4 61 1 175 1 297 1 298 2 
261 1 232 1 151 12 111 1 194 1 201 2 16 1 244 2 275 1 84 2 170 2 211 1 55 2 213 2 286 1 217 6 172 1 173 1 253 1 135 6 61 1 175 2 227 1 297 1 298 1 
261 4 232 2 151 18 68 1 111 4 45 1 194 1 12 1 118 1 201 8 16 1 244 1 275 1 51 2 84 2 170 5 211 1 249 1 129 1 55 2 213 2 286 4 217 10 172 1 173 1 253 1 135 8 30 1 61 1 175 3 227 1 297 4 298 3 
261 4 102 1 232 3 151 16 111 4 194 1 201 8 16 1 244 2 275 1 51 2 84 2 170 6 211 1 55 3 213 3 286 4 217 9 172 1 173 1 253 1 135 7 61 1 175 3 227 1 297 4 298 3 
84 1 170 6 151 7 249 1 232 3 129 2 68 3 217 3 135 4 45 1 118 3 175 1 298 3 
261 4 102 1 232 1 151 18 68 1 111 4 45 1 194 1 12 1 118 1 201 8 16 1 244 1 275 1 51 2 84 2 170 4 211 1 249 1 129 1 55 2 213 2 286 4 217 10 172 1 173 1 253 1 135 8 61 1 175 3 227 1 297 4 298 3 
261 2 51 1 84 1 170 3 151 8 232 1 249 1 129 1 286 2 68 1 217 4 111 2 135 4 45 1 12 1 118 1 175 1 201 4 297 2 298 2 
170 2 84 1 249 1 151 6 129 1 68 1 217 3 43 1 135 3 45 1 12 1 118 1 175 1 298 2 
261 1 84 1 170 2 151 4 232 1 55 1 213 1 286 1 217 2 111 1 135 2 30 1 175 1 201 2 244 1 297 1 298 1 
84 1 170 2 1 1 151 7 232 1 55 1 213 1 217 3 173 2 135 4 175 1 16 1 244 1 275 1 298 1 
261 1 1 1 151 20 232 2 157 1 68 2 111 1 45 1 12 1 118 2 201 2 244 2 275 2 51 1 84 3 170 6 249 1 129 1 55 2 213 2 286 1 217 10 173 2 135 10 175 3 226 1 297 1 298 4 
135 1 151 1 173 1 
151 1 217 1 275 1 
261 1 170 3 84 1 151 6 232 1 55 1 213 1 286 1 217 3 111 1 30 1 135 3 241 1 175 1 201 2 297 1 244 1 298 2 
261 1 232 1 151 12 111 1 194 1 201 2 16 1 244 2 275 1 84 2 170 2 211 1 55 2 213 2 286 1 217 6 172 1 173 1 253 1 135 6 61 1 175 2 227 1 297 1 298 1 
84 1 170 2 151 6 232 1 68 1 217 3 135 3 45 1 118 1 175 1 298 1 
51 1 261 1 170 2 232 1 151 3 249 1 129 1 68 1 286 1 217 1 111 1 223 1 135 2 118 1 201 2 297 1 298 1 
261 1 170 5 84 2 232 2 151 10 56 1 286 1 68 2 217 5 111 1 135 5 45 1 194 1 118 2 175 2 201 2 297 1 298 3 
261 1 170 1 151 2 232 1 213 1 286 1 217 2 111 1 194 1 175 1 201 2 297 1 
261 1 84 1 170 2 151 4 232 1 55 1 213 1 286 1 217 2 111 1 135 2 194 1 175 1 201 2 244 1 297 1 298 1 
51 1 261 3 170 2 102 1 151 3 232 1 286 3 68 1 217 1 111 3 223 1 135 2 194 1 118 1 201 6 297 3 298 1 
261 5 102 1 1 1 151 34 232 5 68 3 236 1 111 5 45 2 194 1 12 1 118 3 15 1 201 10 16 1 244 3 275 3 51 2 170 12 84 5 249 1 129 1 55 3 213 3 214 1 286 5 217 16 173 4 223 1 135 18 30 1 175 5 297 5 298 7 
182 1 229 1 22 1 255 1 89 1 158 1 28 1 
66 1 283 1 158 1 291 1 254 1 137 1 224 1 246 1 
150 1 262 1 119 1 233 1 242 1 176 1 171 1 18 1 7 1 109 1 43 1 
182 1 150 1 229 2 262 1 210 1 106 1 233 1 92 1 158 1 28 2 171 1 41 1 109 1 136 1 10 1 119 1 176 1 18 1 
147 1 182 2 229 2 150 1 106 1 233 3 158 1 269 1 41 2 109 1 10 1 119 1 82 1 18 1 210 2 92 1 28 2 171 2 221 1 136 1 137 1 176 1 144 1 
147 1 182 2 229 2 150 1 106 1 233 3 158 1 269 1 41 2 109 1 10 1 119 1 82 1 18 1 246 1 210 2 92 1 28 2 171 2 221 1 137 2 140 1 176 1 144 1 
262 1 150 1 209 1 87 1 264 2 233 4 67 1 250 2 156 1 269 1 5 1 171 1 41 1 287 1 109 3 221 1 272 1 119 1 96 1 176 3 243 1 82 1 18 3 
262 1 150 1 209 1 87 1 264 2 233 4 67 1 250 2 269 1 107 1 5 1 171 1 41 1 109 3 221 1 272 1 119 1 96 1 176 3 243 1 82 1 18 3 
150 1 119 1 176 1 98 1 18 1 109 1 
262 1 150 2 233 1 235 1 41 1 171 1 109 1 159 1 119 1 176 1 99 1 18 1 121 1 
65 1 229 2 150 1 151 6 233 1 158 2 68 1 76 1 10 1 12 1 18 1 170 2 84 1 23 1 249 1 92 1 28 2 171 1 32 1 256 1 175 1 176 1 261 2 182 1 184 1 106 1 266 1 270 2 41 1 109 1 111 2 193 1 45 1 118 1 48 1 119 1 201 4 53 1 210 1 129 1 57 2 286 2 217 3 136 1 135 3 297 2 298 2 
229 1 67 1 233 2 234 2 5 2 68 1 8 1 163 2 240 2 9 1 10 1 78 1 80 1 165 1 243 1 18 1 169 2 84 2 21 1 87 1 250 3 28 1 95 1 175 2 35 4 96 1 176 1 100 1 181 1 182 1 262 1 103 1 264 3 107 1 108 1 109 1 44 1 192 1 45 1 272 1 117 2 118 1 206 1 210 1 56 1 137 1 228 4 
52 1 150 2 67 1 233 1 41 1 171 1 109 1 159 1 119 1 49 1 176 1 98 1 18 1 
150 1 262 1 209 1 23 1 233 1 171 1 109 4 7 1 113 1 119 1 242 1 176 4 18 4 
150 2 231 1 233 1 265 1 235 1 41 1 171 1 109 1 94 1 119 1 176 1 99 1 18 1 
150 1 262 1 104 1 119 1 152 1 176 1 18 1 109 1 
150 1 23 1 233 1 171 1 109 2 252 1 77 1 198 1 119 1 176 2 18 2 
262 1 150 2 23 1 233 3 171 2 7 1 109 4 71 1 113 1 221 1 198 1 119 2 242 1 176 5 18 5 123 1 
262 1 150 3 23 1 233 2 265 1 235 1 41 1 251 1 171 2 7 1 109 2 94 1 198 1 119 2 176 2 99 1 18 2 
182 1 262 1 229 2 150 1 106 1 233 1 158 1 41 1 109 1 10 1 119 1 18 1 246 1 210 1 92 1 28 2 171 1 137 1 140 1 176 1 
150 2 233 1 235 1 41 1 171 1 109 1 159 1 221 1 119 1 176 1 99 1 18 1 121 1 
182 1 229 1 85 1 91 1 215 1 97 1 28 1 268 1 203 1 
85 1 199 1 26 1 
85 1 93 1 97 1 158 1 203 1 
147 1 85 1 87 1 264 2 250 2 26 1 93 2 158 1 69 1 288 1 137 1 95 1 199 1 96 1 144 1 273 1 243 1 97 2 203 2 

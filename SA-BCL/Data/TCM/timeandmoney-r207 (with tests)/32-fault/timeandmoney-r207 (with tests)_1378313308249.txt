#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (25,312) 22 (170,293) (170,293) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (25,312) 22 (170,293) (170,293) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (25,312) 22 (170,293) (170,293) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (25,312) 22 (170,293) (170,293) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (238,337) (238,337) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (17,126) (17,126) 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 18 98 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 18 98 113 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 326 237 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 145 311 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 158 280 296 301 250 28 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,83,153) (129,298,299) (129,298,299) (129,298,299) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,83,153) (129,298,299) (129,298,299) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (16,83,153) (129,298,299) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,83,153) (129,298,299) (129,298,299) (129,298,299) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 234 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (46,77) 80 158 280 296 315 176 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 158 280 296 301 132 118 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 158 280 296 301 132 118 61 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 158 280 296 301 132 118 61 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 158 280 296 301 132 118 61 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 252 47 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,83,153) (16,83,153) (16,83,153) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,83,153) (16,83,153) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,83,153) (16,83,153) (16,83,153) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 285 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 140 289 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (17,126) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 158 280 296 301 166 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 158 280 296 301 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 158 280 296 315 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 158 280 296 301 250 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 178 1 293 1 62 1 312 1 170 1 284 1 190 1 307 1 22 1 325 1 
54 1 178 1 293 1 62 1 312 1 170 1 284 1 190 1 307 1 22 1 325 1 
54 1 178 1 293 1 62 1 312 1 170 1 284 1 190 1 307 1 22 1 325 1 
54 1 178 1 293 1 62 1 312 1 170 1 284 1 190 1 307 1 22 1 325 1 
201 1 54 4 220 1 204 1 107 1 244 2 206 2 190 1 255 1 254 2 178 4 138 3 263 1 284 1 307 1 335 1 
238 1 54 1 178 1 62 1 284 1 6 1 190 1 307 1 325 1 337 1 
54 3 25 1 220 1 188 1 206 2 190 2 254 1 178 3 62 1 138 1 284 1 307 2 20 1 
201 1 54 9 25 1 204 1 220 3 107 1 244 2 32 1 206 4 190 2 321 1 255 1 254 4 178 9 62 1 138 7 263 1 161 1 284 1 307 2 335 1 23 1 
201 1 54 9 25 1 204 1 220 3 107 1 244 2 32 1 206 4 190 2 321 1 255 1 254 4 178 9 62 1 138 7 263 1 161 1 284 1 307 2 335 1 23 1 
285 1 323 1 147 1 
265 2 147 1 217 1 
203 1 82 2 305 1 48 2 10 2 338 2 277 2 122 2 
123 2 93 1 203 1 0 1 1 2 8 1 247 1 7 1 171 1 172 1 131 1 10 2 302 1 180 1 303 1 67 1 261 1 305 1 70 2 26 1 152 2 277 3 230 2 278 1 82 2 192 1 39 1 333 1 197 1 90 1 48 2 199 1 163 1 336 1 338 3 52 1 122 2 
82 1 169 1 305 1 48 1 10 1 338 1 277 1 122 1 
240 1 245 1 169 1 10 1 257 1 14 1 305 1 144 1 146 1 147 1 72 1 226 1 323 1 327 1 277 2 231 1 82 2 48 1 338 2 122 1 
240 2 245 1 169 1 323 1 10 2 327 2 277 2 231 1 82 2 257 1 14 1 305 1 48 2 144 1 146 1 338 2 147 1 122 2 
202 1 240 1 326 1 327 1 
202 1 240 2 30 1 323 1 11 1 327 2 147 1 81 1 
240 1 327 1 81 1 
202 1 240 1 169 1 10 1 327 1 277 1 82 1 305 1 48 1 146 1 338 1 122 1 
147 1 
202 1 240 2 30 1 323 1 51 1 327 2 147 1 81 1 
202 2 222 1 240 5 30 1 126 1 270 2 208 1 323 1 175 1 327 5 210 1 37 1 81 2 332 2 282 1 86 2 17 1 147 1 218 1 
123 1 93 1 77 1 1 1 7 1 247 1 131 1 277 2 230 1 302 1 82 1 67 1 261 1 197 1 48 1 216 1 52 1 267 1 338 2 122 1 
203 1 285 1 
269 1 203 1 245 1 109 1 10 1 277 2 82 2 69 1 48 1 338 2 122 1 
77 1 268 1 80 1 
124 1 123 1 93 1 203 1 1 1 247 1 7 1 131 1 277 1 230 1 302 1 67 1 261 1 197 1 338 1 52 1 
203 1 82 3 48 3 10 1 216 1 338 3 277 3 122 3 
82 1 41 1 245 1 48 1 338 1 277 1 122 1 
245 1 109 1 10 1 277 1 82 1 48 1 69 1 338 1 122 1 
93 1 240 1 245 2 0 1 1 1 247 1 7 1 8 1 10 2 172 1 257 1 180 1 14 1 259 1 261 1 267 1 269 1 26 1 109 1 277 4 192 1 39 1 197 1 48 3 52 1 122 3 123 1 203 1 131 1 302 1 67 1 305 1 144 1 70 2 216 1 313 1 152 1 327 1 230 1 231 1 82 3 90 1 163 1 336 1 338 4 
72 1 203 1 82 2 139 1 48 1 216 1 338 2 277 2 122 1 
240 1 245 1 109 1 10 1 327 1 277 3 231 1 82 3 257 1 14 1 259 1 48 3 68 1 144 1 216 2 267 1 338 3 147 1 122 3 
77 1 109 1 10 1 277 2 82 2 48 2 216 1 268 1 338 2 122 2 
123 1 93 1 203 1 1 1 247 1 7 1 131 1 277 1 230 1 302 1 67 1 261 1 197 1 338 1 52 1 
123 1 203 1 1 1 317 1 247 1 7 1 131 1 277 1 230 1 302 1 67 1 261 1 197 1 45 1 338 1 
239 1 0 1 8 1 180 1 181 1 142 1 70 2 102 1 308 1 268 2 26 1 187 1 77 2 152 4 316 1 154 1 80 2 158 1 46 1 90 1 199 2 163 2 336 1 49 1 
82 1 245 1 144 1 48 1 324 1 338 1 277 1 122 1 
269 1 203 1 221 1 245 1 109 1 10 1 277 4 82 4 334 1 48 4 216 2 267 1 338 4 122 4 
82 2 41 1 245 1 48 2 324 1 338 2 277 2 122 2 
304 1 44 1 
304 1 44 1 
120 1 236 1 
120 1 236 1 
120 1 236 1 
151 1 304 1 44 1 
101 1 304 1 44 1 
156 1 73 1 120 1 304 2 44 2 236 1 
151 1 304 1 44 1 
151 1 304 1 44 1 
76 1 304 1 44 1 
76 1 304 1 44 1 
76 1 304 1 44 1 
304 1 44 1 98 1 18 1 209 1 104 1 
240 1 304 1 44 1 98 1 18 1 113 1 209 1 327 1 104 1 
204 1 335 1 255 1 
6 1 
6 1 
6 1 
6 1 
202 4 240 5 95 2 175 1 60 1 63 1 262 1 142 1 145 1 102 1 265 3 217 1 218 2 147 2 222 3 30 1 270 1 316 1 323 1 327 5 81 1 280 1 281 2 157 2 40 1 158 1 332 1 87 1 86 1 91 1 291 1 339 1 
202 2 240 2 78 1 237 1 326 1 327 2 275 1 
202 1 222 1 240 2 270 1 327 2 210 1 60 1 40 1 332 1 262 1 86 1 145 1 
222 1 240 1 270 1 327 1 60 1 210 1 40 1 332 1 262 1 86 1 145 1 311 1 
302 1 285 1 36 1 
302 1 328 1 
331 1 
302 1 131 1 
302 3 261 1 300 1 131 1 253 1 36 2 
302 1 261 1 131 1 
302 1 53 1 
152 4 108 1 316 1 33 1 154 3 4 2 322 1 133 1 193 1 211 1 195 1 181 2 140 1 163 1 19 1 199 3 
152 4 108 1 316 1 33 1 154 3 4 2 322 1 133 1 193 1 211 1 195 1 181 2 140 1 163 1 19 1 199 3 
152 4 108 1 316 1 33 1 154 3 4 2 322 1 174 1 133 1 193 1 211 1 195 1 181 2 140 1 163 1 19 1 199 3 
28 1 296 1 152 5 316 1 4 1 99 1 250 1 301 1 280 1 133 1 211 2 137 1 158 1 199 4 163 1 
4 2 8 2 133 1 211 1 180 2 181 3 140 1 70 4 19 1 26 2 152 6 316 1 33 1 154 4 191 1 322 1 193 1 195 1 90 2 286 1 199 4 163 2 92 1 
54 1 123 1 241 1 128 1 153 1 1 1 6 1 298 1 299 1 190 1 247 1 129 1 173 1 230 1 178 1 62 1 67 1 141 1 284 1 307 1 143 1 71 1 
54 2 123 1 241 1 153 1 1 1 6 1 298 1 190 1 247 1 207 1 129 1 173 1 230 1 178 2 62 1 67 1 138 1 85 1 141 1 307 1 143 1 235 1 71 1 
54 1 123 1 241 1 153 1 1 1 6 1 247 1 129 1 230 1 178 1 62 1 67 1 138 1 85 1 141 1 143 1 235 1 71 1 
123 1 54 1 243 1 1 1 247 1 207 1 131 1 178 1 302 1 62 2 67 1 141 2 213 1 307 1 143 2 71 2 184 1 310 1 105 1 190 1 230 1 194 1 197 1 
54 1 123 1 241 1 153 1 1 1 6 1 298 1 299 1 190 1 247 1 129 1 173 1 230 1 178 1 62 1 67 1 85 1 141 1 284 1 307 1 143 1 71 1 
110 1 
123 2 240 2 243 1 1 2 57 1 247 3 131 2 175 1 302 2 136 1 66 1 67 2 261 1 262 1 184 1 218 1 222 1 30 1 270 1 314 1 320 1 228 1 327 2 230 2 81 2 332 1 160 1 197 2 86 1 
165 1 240 3 245 1 297 1 257 1 14 1 144 1 147 2 72 1 30 1 226 1 323 2 273 2 155 1 327 3 277 1 81 2 231 1 82 1 119 1 43 1 196 1 51 1 338 1 
165 1 72 1 240 2 297 1 245 1 226 1 249 1 323 2 273 3 327 2 155 1 277 1 231 1 82 1 257 1 14 1 43 1 196 1 144 1 338 1 147 2 
165 1 240 3 245 1 297 1 249 1 257 1 14 1 144 1 147 2 72 1 30 1 226 1 323 2 273 3 155 1 327 3 277 1 81 2 231 1 82 1 119 1 43 1 196 1 89 1 51 1 338 1 
165 1 240 5 167 2 245 1 246 1 169 1 249 2 10 1 175 1 12 1 257 1 14 1 264 1 30 3 270 1 273 4 277 2 119 4 43 1 196 1 48 1 288 2 51 1 122 1 292 1 297 1 305 1 144 1 146 1 147 3 218 1 217 2 148 2 150 1 72 1 149 2 222 1 223 1 226 1 319 1 323 3 327 5 155 1 81 7 231 1 82 2 332 1 86 1 89 4 338 2 
165 1 240 4 167 2 245 1 246 1 249 2 175 1 257 1 14 1 264 1 265 2 29 1 30 2 270 1 273 4 277 1 119 2 43 1 196 1 288 2 297 1 144 1 147 4 218 1 217 2 148 2 72 1 149 2 222 1 226 1 323 3 327 4 155 1 81 4 231 1 82 1 332 1 86 1 89 2 338 1 
165 1 240 4 167 2 245 1 246 1 169 1 249 2 10 1 175 1 12 1 257 1 14 1 264 1 30 2 270 1 273 4 277 2 119 2 43 1 196 1 48 1 288 2 122 1 292 1 297 1 305 1 144 1 146 1 147 3 218 1 217 2 148 2 72 1 149 2 222 1 223 1 226 1 323 3 327 4 155 1 81 4 231 1 82 2 332 1 86 1 89 2 338 2 
165 1 240 4 167 2 245 1 246 1 169 1 249 2 10 1 175 1 12 1 257 1 14 1 264 1 30 2 270 1 273 4 277 2 119 2 43 1 196 1 48 1 288 2 122 1 292 1 297 1 305 1 144 1 146 1 147 3 218 1 217 2 148 2 72 1 149 2 222 1 223 1 226 1 323 3 327 4 155 1 81 4 231 1 82 2 332 1 86 1 89 2 338 2 
165 1 72 1 240 2 297 1 245 1 226 1 323 2 273 2 327 2 155 1 277 1 231 1 82 1 257 1 14 1 43 1 196 1 234 1 144 1 338 1 147 2 
165 1 240 4 167 2 245 1 246 1 169 1 249 3 10 1 175 1 12 1 257 1 14 1 264 1 30 2 270 1 273 5 277 2 119 3 43 1 196 1 48 1 288 2 122 1 292 1 297 1 305 1 144 1 146 1 147 3 218 1 217 2 148 2 72 1 149 2 222 1 223 1 226 1 319 1 323 3 327 4 155 1 81 5 231 1 82 2 332 1 86 1 89 3 338 2 
165 1 240 4 167 2 245 1 246 1 169 1 249 3 10 1 175 1 12 1 257 1 14 1 264 1 30 2 270 1 273 5 277 2 119 3 43 1 196 1 48 1 288 2 122 1 292 1 297 1 305 1 144 1 146 1 147 3 218 1 217 2 148 2 72 1 149 2 222 1 223 1 226 1 319 1 323 3 327 4 155 1 81 5 231 1 82 2 332 1 86 1 89 3 338 2 
165 1 240 4 167 2 245 1 2 2 249 2 175 1 257 1 14 1 264 1 265 2 29 1 30 2 270 1 273 4 277 1 42 2 119 2 43 1 196 1 297 1 144 1 147 3 218 1 72 1 149 2 222 1 226 1 323 3 327 4 155 1 229 1 81 4 231 1 82 1 332 1 86 1 89 2 338 1 
203 1 26 1 77 1 152 3 0 1 316 1 4 1 154 2 8 1 322 1 80 1 193 1 180 1 195 1 181 2 140 1 90 1 285 1 163 1 199 2 19 1 70 2 49 1 336 1 268 1 
26 1 296 1 77 4 152 4 0 1 316 1 315 1 99 1 8 1 80 4 176 1 280 1 137 1 158 1 180 1 90 1 199 3 70 2 163 1 336 1 266 1 
93 1 123 1 124 1 203 1 0 1 1 1 7 1 247 1 8 1 131 1 172 1 302 1 256 1 180 1 67 1 303 1 261 1 70 2 216 1 266 1 268 1 267 1 24 1 26 1 152 2 111 1 230 1 277 2 82 1 197 1 90 1 48 1 163 1 199 1 336 1 52 1 338 2 122 1 
93 2 0 3 1 3 4 1 8 3 247 2 7 2 172 1 180 3 181 4 261 2 19 1 102 2 21 1 266 1 267 1 268 7 27 1 26 3 33 4 35 1 277 3 280 2 193 1 39 2 195 1 197 1 48 1 199 9 52 2 122 1 123 3 203 1 294 2 295 2 131 2 302 2 303 1 67 2 140 1 142 2 70 6 216 1 77 7 152 17 316 3 154 8 322 1 80 7 230 3 82 1 232 2 330 2 158 2 85 1 90 3 163 8 336 3 338 3 
123 8 243 1 128 1 205 1 0 2 1 7 247 2 8 2 172 1 131 2 302 3 180 2 67 2 303 1 183 1 70 4 216 1 184 1 103 1 26 2 74 1 79 1 152 2 274 1 277 1 230 8 278 2 82 1 85 1 197 2 88 1 90 2 48 1 199 1 163 1 49 1 336 2 338 1 122 1 
0 1 8 1 10 1 180 1 181 1 260 1 142 1 70 2 102 1 266 1 268 1 26 1 77 1 152 3 109 1 316 1 154 1 80 1 277 1 280 1 82 1 158 1 90 1 48 1 199 1 163 2 336 1 338 1 122 1 
26 1 239 1 77 1 152 2 0 1 33 1 316 1 154 1 8 1 80 1 180 1 158 1 90 1 70 2 199 2 49 1 336 1 268 1 
26 1 187 1 77 1 152 2 0 1 154 1 8 1 80 1 180 1 181 1 90 1 142 1 70 2 163 2 49 1 336 1 102 1 268 1 
0 1 8 1 180 1 181 1 142 1 70 2 102 1 268 2 26 1 77 2 152 4 316 1 33 1 154 2 80 2 280 1 158 1 90 1 199 2 163 2 336 1 49 1 
26 1 239 1 77 1 205 1 152 2 0 1 33 1 316 1 154 1 8 1 80 1 180 1 158 1 90 1 70 2 199 2 336 1 268 1 
26 1 187 1 77 1 205 1 152 2 0 1 154 1 8 1 80 1 180 1 181 1 90 1 142 1 70 2 163 2 336 1 102 1 268 1 
205 1 0 1 8 1 180 1 181 1 142 1 70 2 102 1 268 2 26 1 77 2 152 4 316 1 33 1 154 2 80 2 280 1 158 1 90 1 199 2 163 2 336 1 
0 1 8 1 180 1 181 1 142 1 70 2 102 1 268 2 26 1 77 2 152 4 316 1 33 1 154 2 80 2 280 1 158 1 90 1 199 2 163 2 336 1 
93 1 123 1 203 1 0 1 1 1 7 1 247 1 8 1 131 1 172 1 302 1 180 1 303 1 67 1 261 1 70 2 26 1 152 2 230 1 277 1 39 1 197 1 90 1 199 1 163 1 336 1 52 1 338 1 
123 1 203 1 0 1 56 1 1 1 7 1 247 1 8 1 131 1 172 1 302 1 180 1 303 1 67 1 261 1 70 2 26 1 152 2 317 1 230 1 277 1 45 1 197 1 90 1 199 1 163 1 336 1 338 1 
0 1 8 1 180 1 181 1 142 1 70 2 102 1 266 1 268 2 26 1 77 2 152 4 316 1 33 1 154 2 80 2 280 1 158 1 90 1 199 2 163 2 336 1 
93 1 123 1 128 1 0 1 1 1 7 1 247 1 8 1 131 1 302 1 180 1 67 1 181 1 261 1 142 1 70 2 102 1 268 2 26 1 77 2 152 4 33 1 316 1 154 2 80 2 230 1 277 1 280 1 232 1 39 1 158 1 90 1 163 2 199 2 336 1 52 1 338 1 
0 1 8 1 10 1 180 1 142 1 70 2 102 1 266 1 268 1 26 1 77 1 152 3 33 1 109 1 316 1 271 1 154 1 80 1 277 1 280 1 82 1 158 1 90 1 48 1 163 1 199 2 336 1 338 1 122 1 
125 1 26 2 106 1 296 1 152 6 316 1 99 1 191 1 8 2 301 1 132 1 280 1 61 1 118 1 137 1 158 1 180 2 283 1 90 2 199 4 163 2 70 4 
125 1 26 2 106 1 296 1 152 6 316 1 99 1 191 1 8 2 301 1 132 1 280 1 61 1 118 1 137 1 158 1 180 2 283 1 90 2 199 4 163 2 70 4 
125 1 296 1 4 1 99 1 8 1 301 1 132 1 61 1 137 1 180 1 181 1 140 1 19 1 70 2 26 1 152 8 316 2 154 1 191 1 322 1 280 1 193 1 118 1 158 1 195 1 283 1 90 1 163 2 199 6 
125 1 26 2 106 1 296 1 152 6 316 1 99 1 191 1 8 2 301 1 132 1 280 1 61 1 118 1 137 1 158 1 180 2 283 1 90 2 199 4 163 2 70 4 
125 1 166 1 97 1 55 1 99 2 8 3 9 1 252 1 301 2 132 2 61 1 137 2 180 3 181 1 142 1 70 6 102 1 26 3 152 20 33 1 316 2 227 1 189 1 154 2 191 1 280 2 118 2 158 2 283 3 47 1 286 2 90 3 163 9 199 11 
123 2 168 1 0 1 1 2 247 1 8 1 172 1 180 1 67 1 303 1 70 2 266 1 26 1 224 1 152 2 318 1 274 1 230 2 277 2 278 2 329 1 82 2 90 1 198 1 199 1 163 1 336 1 338 2 
123 2 241 1 127 1 128 1 153 1 1 2 6 1 247 1 173 1 230 2 83 1 67 1 16 1 85 1 143 1 
123 1 241 1 83 1 67 1 233 1 153 1 1 1 85 1 6 1 247 1 143 1 173 1 230 1 
123 1 127 1 243 1 1 1 58 1 247 1 131 1 230 1 302 1 67 1 197 1 143 1 184 1 310 1 
123 1 241 1 127 1 153 1 1 1 6 1 247 1 173 1 230 1 83 1 67 1 16 1 85 1 143 1 
134 1 
222 1 126 1 17 1 285 1 323 1 147 1 218 1 
240 1 246 1 175 1 265 1 217 1 218 1 147 2 148 1 222 1 30 1 270 1 323 1 327 1 81 1 332 1 86 1 288 1 
240 2 1 1 247 2 175 2 177 1 14 1 261 1 262 1 265 6 102 1 186 1 30 1 270 2 36 1 280 1 281 3 121 1 197 1 123 1 295 1 300 1 131 1 302 4 64 1 67 1 142 1 215 1 219 1 217 3 147 3 218 3 222 4 316 1 328 2 327 2 230 1 81 2 157 3 158 1 332 2 84 1 86 2 164 1 
166 1 240 1 97 1 55 1 99 1 301 1 175 2 137 1 15 1 142 2 215 1 265 6 102 2 217 3 147 4 218 4 222 7 30 1 270 2 316 2 227 1 189 1 323 1 327 1 81 1 280 2 281 5 157 5 158 2 332 2 86 2 
222 2 240 1 270 1 316 1 327 1 175 1 193 1 332 1 140 1 86 1 142 1 19 1 215 1 289 1 218 2 292 1 
222 1 126 1 270 1 332 1 86 1 323 1 175 1 147 1 218 1 
222 1 316 1 280 1 281 1 157 1 158 1 142 1 265 2 102 1 218 2 217 1 147 1 
240 1 30 1 323 1 327 1 147 1 81 1 
123 2 240 1 242 1 243 1 57 1 1 2 247 3 131 2 175 1 302 2 136 1 66 1 67 2 261 1 262 1 184 1 218 1 222 1 30 1 270 1 314 1 320 1 228 1 327 1 230 2 81 2 332 1 160 1 86 1 197 2 
123 1 93 1 203 1 0 1 1 1 8 1 247 1 7 1 172 1 10 2 131 1 302 1 180 1 67 1 261 1 305 1 70 2 26 1 152 1 230 1 277 3 82 2 192 1 39 1 197 1 90 1 48 2 163 1 336 1 338 3 52 1 122 2 
222 1 270 1 4 1 323 2 175 1 281 2 157 2 136 1 332 1 86 1 262 1 265 4 217 2 218 2 147 4 
18 1 209 1 
18 1 209 1 
18 1 209 1 
18 1 209 1 
18 1 209 1 
18 1 209 1 
18 1 209 1 
18 1 209 1 
304 1 44 1 
166 1 4 1 99 1 8 1 301 1 137 1 180 1 181 2 140 1 70 2 19 1 26 1 152 5 316 1 154 2 191 1 322 1 193 1 195 1 90 1 163 2 199 3 
26 2 166 1 296 1 152 4 316 1 99 1 5 1 8 2 191 1 301 1 280 1 137 1 158 1 180 2 90 2 199 3 70 4 163 1 
166 1 55 1 97 1 5 1 99 1 8 3 301 1 137 1 180 3 181 1 142 2 70 6 102 2 26 3 152 13 33 1 316 2 227 1 189 1 154 2 191 1 280 2 158 2 90 3 286 1 163 7 199 6 
166 1 55 1 97 1 5 1 99 1 8 3 301 1 137 1 180 3 181 1 142 1 70 6 102 1 26 3 152 11 33 1 316 2 189 1 227 1 154 2 191 1 280 2 158 2 286 1 90 3 163 4 199 7 
166 1 4 1 99 1 8 1 301 1 137 1 180 1 181 2 140 1 70 2 19 1 26 1 152 5 316 1 154 2 191 1 322 1 193 1 195 1 90 1 163 2 199 3 
166 1 55 1 97 1 99 1 8 1 301 1 137 1 180 1 181 1 142 2 70 2 102 2 26 1 152 12 33 1 316 2 189 1 227 1 154 2 191 1 280 2 158 2 90 1 163 6 199 6 
166 1 97 1 55 1 5 1 99 1 8 4 301 1 137 1 180 4 181 1 142 1 70 8 102 1 26 4 152 12 33 1 316 2 227 1 189 1 154 2 191 1 280 2 158 2 90 4 286 2 163 5 199 7 
166 1 97 1 55 1 99 1 8 4 301 1 137 1 180 4 181 2 142 1 70 8 102 1 26 4 106 1 152 12 33 2 316 2 227 1 189 1 154 4 191 1 280 2 158 2 90 4 286 2 163 5 199 7 
152 7 33 3 316 3 4 1 154 7 322 1 193 2 195 1 181 4 140 2 142 1 163 2 19 2 199 5 289 1 
166 1 97 1 55 1 99 1 8 4 301 1 137 1 180 4 181 1 142 1 70 8 102 1 26 4 106 1 152 12 33 1 316 2 227 1 189 1 154 2 191 1 280 2 158 2 90 4 286 2 163 5 199 7 
26 2 152 5 316 1 33 1 4 1 154 3 8 2 322 1 193 1 180 2 195 1 181 2 140 1 90 2 286 1 163 2 199 3 70 4 19 1 
152 3 316 1 154 2 4 1 322 1 193 1 195 1 181 2 140 1 285 1 163 1 19 1 199 2 
26 1 152 4 316 1 33 1 154 2 5 1 8 1 280 1 180 1 158 1 181 1 142 1 90 1 163 2 70 2 199 2 102 1 
280 1 137 1 158 1 296 1 152 4 316 1 99 1 199 3 163 1 301 1 
280 1 137 1 158 1 296 1 152 4 316 1 315 1 99 1 199 3 163 1 
137 1 152 1 163 1 
152 1 99 1 199 1 
26 1 295 1 152 6 316 1 33 1 5 1 154 3 8 1 280 1 180 1 158 1 181 2 90 1 142 1 70 2 163 3 199 3 102 1 
166 1 55 1 97 1 99 1 8 1 301 1 137 1 180 1 181 1 142 2 70 2 102 2 26 1 152 12 33 1 316 2 189 1 227 1 154 2 191 1 280 2 158 2 90 1 163 6 199 6 
152 1 316 1 140 1 199 1 
94 1 26 1 152 3 33 1 154 2 8 1 322 1 193 1 180 1 195 1 181 1 286 1 90 1 199 1 19 1 163 2 70 2 
152 7 33 2 316 2 154 4 193 1 181 2 140 1 142 1 19 1 199 4 163 3 289 1 
26 1 152 2 316 1 33 1 154 1 191 1 8 1 180 1 158 1 90 1 70 2 199 2 
26 1 152 4 316 1 33 1 154 2 191 1 8 1 280 1 180 1 158 1 181 1 142 1 90 1 163 2 70 2 199 2 102 1 
94 1 26 3 106 1 152 3 33 1 154 2 191 1 8 3 193 1 180 3 181 1 286 1 90 3 163 2 70 6 19 1 199 1 
296 1 4 1 5 1 99 3 8 4 250 1 251 1 301 1 137 3 180 4 181 3 140 1 142 2 19 1 70 8 102 2 26 4 106 1 152 21 316 4 33 2 154 5 191 1 322 1 280 3 193 1 158 3 195 1 286 1 90 4 287 1 163 9 199 12 
72 1 203 1 82 1 139 1 338 1 277 1 276 1 
72 1 203 1 225 1 115 1 276 1 277 1 117 1 82 1 179 1 139 1 338 1 309 1 
302 1 123 1 243 1 67 1 1 1 197 1 285 1 247 1 131 1 184 1 230 1 
123 1 203 1 1 1 7 1 247 1 131 1 277 2 230 1 302 1 82 1 67 1 261 1 197 1 48 1 216 1 338 2 52 1 122 1 
123 1 203 1 245 2 1 1 3 1 247 1 7 1 131 2 302 2 67 1 261 2 182 1 144 1 216 1 269 1 230 1 277 2 231 1 82 2 48 2 52 1 338 2 122 1 
123 1 203 1 245 2 1 1 3 1 247 1 7 1 131 2 302 2 67 1 261 2 182 1 144 1 216 1 269 1 230 1 277 2 231 1 82 2 45 1 48 2 338 2 122 1 
123 1 240 1 1 1 169 1 10 1 302 1 182 1 305 1 146 1 147 1 75 1 323 1 328 1 327 1 230 1 277 1 82 1 48 1 338 1 122 1 
123 1 240 2 1 1 169 1 3 1 247 1 10 1 131 1 302 3 67 1 14 1 261 1 182 1 305 1 146 1 147 1 323 1 328 1 327 2 277 1 36 1 81 1 230 1 82 1 121 1 48 1 338 1 122 1 
123 1 67 1 1 1 183 1 247 1 230 1 
123 7 74 1 79 1 128 1 1 6 248 1 300 1 247 3 228 1 131 2 230 7 278 1 302 3 66 1 67 2 261 1 85 1 197 2 183 1 88 1 103 1 
123 1 93 1 203 1 294 1 128 1 0 2 1 1 4 1 7 1 247 1 8 2 131 1 302 1 180 2 67 1 181 2 261 1 140 1 19 1 70 4 216 1 266 1 268 1 26 2 77 1 152 3 316 1 154 2 322 1 80 1 277 2 230 1 193 1 329 1 82 1 232 1 39 1 195 1 90 2 48 1 163 1 199 2 336 2 338 2 52 1 122 1 
240 3 242 1 1 1 169 1 10 1 175 2 177 1 14 1 17 1 19 1 30 1 270 2 36 1 277 1 193 1 121 1 197 1 48 1 289 1 122 1 202 1 123 1 126 1 130 1 302 2 64 1 140 1 142 1 305 1 215 2 146 1 218 4 147 1 222 2 316 2 323 1 328 1 327 3 81 2 230 1 82 1 332 2 86 2 338 1 164 1 
123 2 186 1 128 1 1 2 300 1 247 2 131 1 36 1 230 2 302 2 67 1 261 1 183 1 
302 1 123 4 135 1 243 1 67 1 128 1 1 4 197 1 247 1 112 1 131 1 184 1 230 4 
123 2 314 1 1 2 320 1 247 2 228 1 131 1 230 2 302 1 66 1 67 1 261 1 182 1 21 1 
123 1 241 1 67 1 1 1 197 1 6 1 247 1 230 1 
123 2 67 1 128 1 85 1 1 2 318 1 247 1 230 2 
123 5 243 1 128 1 79 1 1 4 247 2 131 2 230 5 302 3 135 1 67 2 197 1 182 1 88 1 184 1 103 1 
123 5 243 1 128 1 79 1 1 4 247 2 131 2 230 5 13 1 302 3 135 1 67 2 197 1 182 1 184 1 103 1 
123 1 203 1 1 1 7 1 247 1 131 1 277 2 230 1 302 1 82 1 67 1 261 1 197 1 45 1 48 1 216 1 338 2 122 1 
123 1 1 1 248 1 300 1 247 2 228 1 131 1 230 1 302 1 66 1 67 1 261 1 182 1 
269 1 203 1 224 1 168 1 245 1 34 1 114 1 277 1 38 2 82 1 198 1 338 1 
202 1 240 2 168 1 245 1 169 1 10 1 258 1 257 1 259 1 14 1 305 1 144 1 146 1 147 1 31 1 224 1 323 1 34 1 327 2 114 1 277 2 38 2 231 1 82 2 48 1 198 1 50 1 338 2 122 1 
34 1 114 1 
38 1 258 1 50 1 
188 1 206 1 285 1 20 1 
54 1 178 1 188 1 206 1 190 1 307 1 20 1 
54 1 62 1 141 1 
54 1 188 1 190 1 178 1 284 1 307 1 214 1 200 1 20 1 290 1 
54 2 178 2 188 1 244 1 138 1 206 1 190 1 307 1 20 1 
54 1 204 1 107 1 206 1 190 1 254 1 255 1 178 1 284 1 307 1 335 1 
54 1 178 1 206 1 284 1 190 1 307 1 20 1 
54 1 178 1 188 1 284 1 190 1 307 1 20 2 
54 2 96 1 206 1 190 2 178 2 159 1 284 1 307 2 162 1 20 1 
54 3 220 1 188 1 206 2 190 1 321 1 254 1 178 3 138 2 161 1 284 1 307 1 20 1 
54 1 178 1 284 1 190 1 307 1 6 1 100 1 
54 4 201 1 220 1 188 1 244 1 206 2 190 2 254 1 178 4 138 2 284 1 307 2 20 1 
54 1 178 1 188 1 206 1 284 1 190 1 307 1 20 1 
54 3 220 1 188 2 206 2 190 1 254 1 178 3 138 2 214 1 307 1 20 2 200 2 290 1 
54 2 178 2 188 1 212 1 138 1 206 1 284 1 272 1 190 1 307 1 20 1 23 1 
54 1 188 1 190 1 59 1 178 1 284 1 307 1 214 1 200 1 20 1 
279 1 116 1 206 1 
54 1 178 1 65 1 284 1 190 1 307 1 
54 2 178 2 188 1 138 1 206 1 284 1 190 1 307 1 321 1 20 1 
306 1 
54 1 178 1 188 1 206 1 284 1 190 1 307 1 20 1 
54 3 178 3 185 1 188 1 138 1 206 1 284 1 190 1 307 1 321 1 20 1 
220 1 206 1 200 1 254 1 
206 1 20 1 

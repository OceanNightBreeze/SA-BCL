#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (49,246) (49,246) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (49,246) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (49,246) (49,246) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) (222,288) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) 71 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (53,93,268,272) (53,93,268,272) (53,93,268,272) (222,288) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (53,93,268,272) (53,93,268,272) (222,288) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (0,80,277) (0,80,277) 112 76 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 154 129 291 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 233 66 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 92 88 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 92 88 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 154 256 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 229 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 233 66 255 33 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 235 26 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 154 256 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 154 129 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 154 189 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 154 129 291 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
246 1 277 1 118 1 49 1 163 1 
43 1 
139 1 90 1 248 1 277 2 118 1 293 1 163 2 43 1 
167 1 90 1 16 1 38 1 118 2 277 5 293 1 153 1 43 1 24 1 139 2 283 1 63 1 157 2 247 1 162 2 163 5 251 2 204 1 
56 1 
145 2 27 1 43 1 
243 2 101 2 285 2 25 1 168 1 149 2 161 2 282 2 
274 1 37 1 149 3 72 1 237 1 151 1 6 1 152 1 40 1 282 3 126 2 242 2 243 2 285 3 244 1 161 3 11 2 250 2 200 1 51 1 54 2 290 1 207 1 168 1 212 1 292 1 136 1 95 1 216 1 296 1 58 1 59 1 262 1 101 2 176 2 103 2 105 1 25 1 29 1 181 1 65 2 
49 1 
0 1 80 1 
0 1 149 1 72 1 277 2 6 1 293 1 95 1 43 1 282 1 297 1 101 1 243 1 285 1 161 1 163 2 
139 1 264 1 277 1 118 1 163 1 
139 1 90 1 209 1 277 2 118 1 293 1 163 2 43 1 
139 1 277 1 163 1 
230 1 168 1 149 1 95 1 214 1 282 2 261 1 101 1 243 1 285 2 161 2 
9 1 192 1 57 1 
54 1 290 1 168 1 149 1 212 1 72 1 151 1 6 1 95 1 216 1 282 1 59 1 242 2 176 1 285 1 244 1 299 1 161 1 11 2 65 2 250 1 200 1 
290 1 54 1 149 2 212 1 72 1 151 1 6 1 95 1 216 1 57 1 282 2 59 1 242 2 100 1 243 1 176 1 267 1 285 2 244 1 161 2 11 2 65 2 200 1 250 1 
56 1 
168 1 149 3 95 1 214 1 282 3 101 1 243 3 285 3 267 1 161 3 
35 1 243 1 285 1 149 1 161 1 95 1 282 1 
230 1 149 1 95 1 282 1 261 1 101 1 243 1 285 1 161 1 
0 1 230 1 37 1 187 1 149 4 151 1 72 2 277 1 237 1 6 2 152 1 40 1 282 4 126 2 242 2 243 3 285 4 244 1 161 4 11 2 200 1 163 1 250 1 51 1 290 1 54 1 207 1 168 1 212 1 292 1 170 1 95 2 216 1 296 1 297 1 59 1 101 2 100 1 176 1 103 1 105 1 267 1 25 1 29 1 65 2 
259 1 243 1 285 2 267 1 168 1 149 1 161 2 12 1 282 2 
0 1 230 1 149 3 187 1 277 1 72 1 6 1 95 1 43 1 297 1 282 3 101 1 100 1 243 3 141 1 267 2 285 3 161 3 163 1 
230 1 149 2 192 1 57 1 282 2 101 1 243 2 267 1 285 2 161 2 
54 1 290 1 168 1 149 1 212 1 72 1 151 1 6 1 95 1 216 1 282 1 59 1 242 2 176 1 285 1 244 1 161 1 11 2 250 1 200 1 65 2 
54 1 290 1 168 1 149 1 72 1 151 1 6 1 120 1 95 1 216 1 282 1 242 2 176 1 285 1 106 1 244 1 161 1 11 2 250 1 200 1 65 2 
67 1 233 1 37 1 152 1 188 1 40 1 192 1 126 2 156 1 158 1 9 1 48 1 207 1 55 1 213 1 292 1 296 1 57 1 58 1 140 1 103 3 105 2 143 1 183 1 
243 1 285 1 149 1 211 1 72 1 161 1 95 1 282 1 
230 1 168 1 149 2 95 1 214 1 282 2 243 2 101 1 267 1 285 2 161 2 
35 1 243 2 285 2 211 1 149 2 161 2 95 1 282 2 
4 1 39 1 130 1 
13 1 265 1 4 2 119 1 130 2 113 1 
4 1 130 1 
4 1 130 1 
265 1 119 1 
265 1 119 1 
265 1 119 1 
36 1 4 1 130 1 
36 1 4 1 130 1 
36 1 4 1 130 1 
17 1 4 1 130 1 
17 1 4 1 130 1 
17 1 4 1 130 1 
133 1 69 2 89 3 15 2 4 2 277 2 43 1 155 1 298 2 107 2 84 1 269 1 144 1 301 1 199 1 163 2 131 2 130 2 113 1 
228 1 69 1 89 1 168 1 149 2 116 1 4 1 39 1 277 1 217 1 218 1 282 2 99 1 240 1 243 2 284 1 285 2 298 1 107 1 269 1 161 2 163 1 131 1 130 1 
1 2 148 2 286 1 215 1 201 1 
148 1 286 1 169 1 
148 1 169 1 215 1 
1 1 14 1 148 3 286 2 215 1 201 1 
1 1 148 2 286 1 215 1 201 1 182 1 
145 1 228 1 233 1 275 1 277 5 118 4 74 1 121 1 43 1 240 1 7 1 81 1 284 1 157 1 158 1 48 1 162 1 251 1 163 5 202 2 204 1 205 1 90 1 167 3 16 1 20 1 293 1 258 1 140 1 139 1 179 1 66 1 
3 1 118 2 277 2 293 1 281 1 43 1 139 1 102 1 264 1 246 1 49 1 163 2 
145 2 228 1 233 1 275 1 118 2 277 3 74 1 43 2 7 1 81 1 157 1 158 1 48 1 162 1 251 1 163 3 202 1 167 3 16 1 20 1 293 1 258 1 24 1 140 1 179 1 27 1 66 1 
145 3 273 1 32 1 228 2 233 2 275 2 277 4 118 3 74 1 43 2 7 2 81 2 157 1 158 2 48 2 162 1 251 1 163 4 202 2 167 5 16 2 20 1 293 1 258 1 24 1 140 2 263 1 179 1 27 1 66 2 
210 1 
56 1 
65 1 122 1 
242 1 65 1 
242 1 266 2 236 1 11 1 65 3 86 1 
242 1 11 1 65 1 
257 1 65 1 
67 2 165 1 2 1 208 1 235 1 234 1 254 2 213 3 23 1 58 3 103 4 105 1 104 1 180 1 196 1 48 1 132 1 
67 4 185 1 231 1 2 1 232 4 233 3 235 1 190 1 40 1 42 3 126 2 45 1 196 2 158 3 48 4 132 2 203 1 165 1 208 1 207 1 254 3 213 6 292 1 22 1 296 1 23 2 58 12 140 3 103 25 105 13 220 1 180 2 104 2 66 3 
67 3 165 1 185 1 208 1 207 2 235 1 254 2 213 4 292 2 40 2 296 2 23 1 58 4 241 1 126 4 103 6 105 2 104 1 180 1 127 1 196 1 48 1 132 1 
67 2 165 1 2 1 208 1 235 1 254 2 213 3 23 1 58 3 103 4 105 1 104 1 180 1 196 1 48 1 132 1 
67 2 165 1 2 1 208 1 235 1 254 2 213 3 23 1 58 3 103 4 105 1 104 1 180 1 196 1 48 1 132 1 
268 1 93 1 288 1 53 1 
268 1 71 1 93 1 53 1 
268 1 71 1 93 1 53 1 
268 1 93 1 288 1 53 1 
68 1 222 1 272 1 53 1 
83 1 
0 1 151 1 277 2 76 1 193 1 242 1 80 1 194 1 157 1 162 1 200 1 250 2 251 1 163 2 52 1 204 1 54 2 167 1 90 1 16 1 216 2 258 1 260 1 139 2 176 2 177 1 223 1 65 1 112 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 139 1 80 1 90 1 248 1 277 2 163 2 112 1 76 1 
260 1 0 1 80 1 157 1 277 1 162 1 251 1 163 1 112 1 76 1 204 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 277 1 163 1 112 1 76 1 
260 1 0 1 80 1 157 1 277 1 162 1 251 1 163 1 112 1 76 1 204 1 
274 1 149 1 37 2 150 1 117 1 151 2 152 2 40 2 154 1 282 1 44 1 243 1 126 4 242 3 194 1 285 1 161 1 10 1 11 1 129 1 200 3 250 4 54 4 207 2 291 1 292 2 216 2 296 2 58 1 219 1 262 1 176 4 103 2 177 1 267 1 105 1 143 1 64 1 270 1 29 1 65 3 
230 1 233 1 207 1 149 1 37 1 292 1 152 1 40 1 296 1 282 1 58 2 126 2 101 1 243 1 103 2 285 1 48 1 271 1 161 1 66 1 31 1 
126 2 207 1 143 1 37 1 292 1 152 1 56 1 40 1 296 1 
67 1 232 3 233 2 37 1 152 2 190 1 40 2 192 2 42 3 126 4 158 2 9 10 48 2 253 1 207 2 168 1 213 1 135 1 292 2 171 1 22 1 296 2 57 10 58 6 60 1 140 2 262 1 103 14 105 8 271 1 29 1 66 2 
149 2 151 1 72 1 6 1 152 1 243 1 242 2 244 1 161 2 11 2 250 1 168 1 94 1 95 1 262 1 100 1 176 1 103 2 105 1 267 1 108 1 271 1 29 1 37 1 41 1 40 1 192 1 282 2 126 2 285 2 200 1 54 1 290 1 207 1 212 1 292 1 216 1 296 1 58 1 59 1 299 1 65 2 
67 3 233 1 235 1 149 3 151 2 72 2 6 2 152 3 243 1 242 4 244 2 245 1 158 1 9 3 161 3 85 2 11 4 250 1 165 1 168 1 254 1 18 1 95 2 172 1 262 1 100 1 176 1 103 10 105 5 267 1 271 1 29 1 115 1 37 3 40 3 192 3 282 3 126 6 285 3 196 1 48 2 200 2 51 2 132 1 54 1 290 2 206 2 208 1 207 3 212 2 213 3 292 3 216 1 296 3 57 3 58 5 59 2 140 1 65 4 66 1 
207 1 233 1 37 1 292 1 152 1 188 1 40 1 296 1 58 1 126 2 103 1 143 1 48 1 
67 1 207 1 37 1 213 1 292 1 152 1 40 1 192 1 57 1 296 1 140 1 126 2 103 2 105 2 143 1 158 1 9 1 183 1 
67 1 233 1 37 1 152 1 40 1 192 1 126 2 158 1 9 1 48 1 207 1 213 1 292 1 296 1 57 1 58 1 140 1 103 3 105 2 143 1 66 1 
207 1 233 1 37 1 292 1 152 1 188 1 40 1 296 1 58 1 126 2 103 1 270 1 48 1 
67 1 207 1 37 1 213 1 292 1 152 1 40 1 192 1 57 1 296 1 140 1 126 2 103 2 105 2 158 1 9 1 270 1 183 1 
67 1 233 1 37 1 152 1 40 1 192 1 126 2 158 1 9 1 48 1 207 1 213 1 292 1 296 1 57 1 58 1 140 1 103 3 105 2 270 1 66 1 
67 1 233 1 37 1 152 1 40 1 192 1 126 2 158 1 9 1 48 1 207 1 213 1 292 1 296 1 57 1 58 1 140 1 103 3 105 2 66 1 
149 1 37 1 151 1 72 1 6 1 152 1 40 1 282 1 126 2 242 2 285 1 244 1 161 1 11 2 200 1 250 1 51 1 290 1 54 1 207 1 168 1 212 1 292 1 95 1 216 1 296 1 58 1 59 1 262 1 176 1 103 2 105 1 29 1 65 2 
149 1 37 1 151 1 72 1 120 1 6 1 152 1 40 1 282 1 126 2 242 2 285 1 244 1 161 1 11 2 200 1 250 1 290 1 54 1 207 1 168 1 292 1 21 1 95 1 216 1 296 1 58 1 262 1 176 1 103 2 105 1 106 1 29 1 65 2 
67 1 233 1 37 1 152 1 40 1 192 1 126 2 158 1 9 1 48 1 207 1 213 1 292 1 296 1 57 1 58 1 140 1 103 3 105 2 271 1 66 1 
67 1 233 1 149 1 37 1 151 1 72 1 6 1 152 1 40 1 192 1 282 1 126 2 242 2 285 1 244 1 158 1 9 1 48 1 161 1 11 2 85 1 200 1 250 1 51 1 290 1 54 1 207 1 212 1 213 1 292 1 95 1 57 1 296 1 58 1 59 1 140 1 176 1 103 3 105 2 64 1 65 2 66 1 
230 1 233 1 37 1 149 1 152 1 40 1 282 1 243 1 126 2 285 1 158 1 48 1 161 1 207 1 292 1 296 1 58 1 140 1 101 1 103 2 221 1 105 1 271 1 66 1 
67 2 146 1 232 2 233 2 73 1 190 1 40 2 77 1 42 1 241 1 125 1 126 4 158 2 48 2 87 1 252 1 207 2 92 1 213 2 292 2 22 1 296 2 58 4 140 2 62 1 103 11 105 7 66 2 
67 1 33 1 185 1 146 2 232 2 233 2 73 1 239 1 40 2 77 1 42 2 79 1 241 1 125 2 126 4 158 2 48 2 88 1 207 2 92 1 255 1 213 1 292 2 294 1 22 2 296 2 58 8 140 2 62 3 103 19 178 1 105 11 66 2 
67 1 146 1 232 2 233 2 73 1 190 1 40 2 77 1 42 1 241 1 125 1 126 4 158 2 48 2 87 1 88 1 207 2 92 1 213 1 292 2 22 1 296 2 58 5 140 2 62 2 103 13 105 8 66 2 
67 1 146 1 232 2 233 2 73 1 190 1 40 2 77 1 42 1 241 1 125 1 126 4 158 2 48 2 87 1 88 1 207 2 92 1 213 1 292 2 22 1 296 2 58 5 140 2 62 2 103 13 105 8 66 2 
67 6 33 1 146 1 232 4 233 6 235 1 73 1 239 1 190 2 40 1 77 1 42 4 79 1 241 1 125 1 126 2 196 1 158 6 48 7 132 1 165 1 88 1 208 1 207 1 92 1 254 1 255 1 213 6 292 1 171 2 294 1 22 2 296 1 58 15 140 6 62 2 103 34 178 1 105 19 66 6 
69 1 107 1 298 1 4 1 301 1 199 1 130 1 131 1 113 1 138 1 
39 1 218 1 
69 1 82 1 107 1 298 1 4 1 109 1 280 1 130 1 131 1 
133 1 69 1 89 2 15 1 4 1 277 1 43 1 155 1 298 1 107 1 269 1 144 1 301 1 199 1 163 1 131 1 130 1 113 1 
133 1 69 1 89 2 15 1 4 1 277 1 43 1 155 1 298 1 107 1 269 1 144 1 301 1 199 1 163 1 131 1 130 1 113 1 
133 1 69 1 89 2 15 1 4 1 277 1 43 1 155 1 298 1 107 1 269 1 144 1 301 1 199 1 163 1 131 1 130 1 113 1 
13 1 36 1 198 1 
13 1 36 1 198 1 
17 1 300 1 
13 1 17 1 300 1 
99 1 217 1 
69 1 228 1 149 2 4 1 116 1 277 1 118 1 39 1 282 2 240 1 243 2 285 2 284 1 161 2 163 1 130 1 131 1 89 1 15 1 168 1 217 1 218 1 99 1 107 1 298 1 144 1 225 1 
36 1 198 1 
13 1 17 1 300 1 
274 2 37 1 150 1 151 1 117 1 152 1 40 1 154 1 282 2 44 1 242 2 126 2 285 2 161 2 10 1 11 1 128 1 200 2 250 2 289 1 164 1 54 2 207 1 256 1 292 1 296 1 58 1 219 1 262 1 176 2 103 2 105 1 271 1 29 1 65 2 30 1 
54 1 151 1 216 1 78 1 242 1 176 1 195 1 194 1 177 1 197 1 249 1 200 1 65 1 250 1 
54 1 184 1 14 1 148 2 169 1 151 1 96 1 215 1 279 1 97 1 175 1 176 1 195 1 286 1 249 1 200 1 250 1 226 1 
54 2 184 1 14 1 148 2 169 1 151 1 96 1 215 1 279 1 97 1 175 1 176 2 195 1 286 1 64 1 249 1 200 1 250 2 226 1 
54 1 184 1 14 1 148 2 169 1 151 1 215 1 279 1 97 1 175 1 176 1 195 1 142 1 286 1 250 1 226 1 200 1 
186 1 
167 1 16 1 293 1 153 1 43 1 157 1 63 1 162 1 251 1 204 1 
145 2 233 1 167 2 16 1 275 1 43 1 140 1 7 1 81 1 158 1 27 1 48 1 66 1 
139 1 90 1 277 1 293 1 163 1 43 1 
151 1 277 3 193 2 242 1 194 1 8 1 157 2 287 1 162 2 200 1 251 2 250 2 163 3 52 1 204 1 54 2 166 2 167 2 90 2 16 2 216 2 98 1 258 2 24 1 139 4 176 2 177 1 223 1 65 1 
56 1 
145 1 34 1 90 1 167 1 16 1 277 1 293 1 43 2 139 1 157 1 27 1 162 1 302 1 50 1 163 1 251 1 204 1 
54 1 229 1 151 1 216 1 123 1 176 1 157 1 162 1 200 1 251 1 250 1 204 1 
145 4 33 1 233 1 232 1 167 2 255 1 16 3 275 3 239 1 22 1 42 1 43 2 81 3 157 1 27 2 48 1 162 1 251 1 66 1 204 1 
167 2 16 2 235 1 277 1 140 1 7 1 157 1 26 1 196 1 48 1 28 1 162 1 163 1 251 1 132 1 204 1 
37 1 149 3 237 1 151 1 72 1 6 1 152 1 40 1 282 3 126 2 243 2 242 2 285 3 244 1 161 3 11 2 250 1 200 1 51 1 54 1 290 1 207 1 168 1 212 1 292 1 95 1 216 1 296 1 59 1 101 2 176 1 103 1 105 1 25 1 29 1 65 2 
145 4 167 1 254 1 16 2 275 2 293 2 258 1 43 4 193 1 81 2 157 1 27 2 162 1 251 1 204 1 
99 1 69 1 147 1 107 1 199 1 
69 1 107 1 110 1 
69 1 107 1 110 1 
69 1 107 1 110 1 
227 1 69 1 107 1 
227 1 69 1 107 1 
227 1 69 1 107 1 
69 1 107 1 
4 1 130 1 
67 2 235 1 213 3 23 1 58 2 140 1 103 4 105 2 26 1 196 1 48 2 132 1 
207 1 233 1 292 1 40 1 296 1 58 1 241 1 126 2 103 1 48 1 
67 1 207 1 233 1 213 1 292 1 40 1 296 1 58 1 140 1 241 1 126 2 103 3 105 2 158 1 48 1 66 1 
67 1 185 1 70 1 207 3 213 2 292 3 40 3 296 3 23 1 58 1 241 1 126 6 103 3 105 2 196 1 132 1 87 1 
67 4 185 2 231 1 70 1 232 4 233 3 235 2 190 1 191 1 40 5 42 3 241 1 126 10 45 1 196 2 158 3 48 5 132 2 203 1 87 1 165 1 208 1 207 5 254 1 213 6 292 5 22 1 296 5 23 2 58 11 140 3 103 25 105 14 66 3 
67 2 165 1 185 1 207 2 208 1 254 1 235 1 213 3 292 2 40 2 296 2 23 1 58 3 126 4 103 5 105 2 196 1 48 1 132 1 
56 1 
67 1 207 1 233 1 213 1 292 1 191 1 40 1 296 1 58 1 140 1 126 2 103 3 105 2 158 1 48 1 66 1 
67 1 232 2 233 1 213 1 190 1 22 1 42 1 58 2 140 1 103 6 105 4 158 1 48 1 66 1 
67 5 185 2 233 2 232 2 70 1 235 1 190 1 40 2 42 2 126 4 196 2 158 2 48 3 132 2 165 1 208 1 207 2 254 1 213 7 292 2 171 1 296 2 23 2 58 8 140 2 60 1 103 18 105 10 66 2 
103 1 105 1 232 1 
58 1 103 1 42 1 
67 2 207 1 233 1 18 1 213 2 292 1 40 1 191 1 296 1 58 2 140 1 126 2 103 5 105 3 158 1 48 1 66 1 
67 1 33 1 232 1 233 2 239 1 40 1 42 1 241 1 79 1 126 2 158 2 48 2 207 1 255 1 213 1 292 1 22 1 294 1 296 1 58 4 140 2 103 10 105 6 66 2 
58 1 103 1 235 1 48 1 
67 1 165 1 185 1 208 1 70 1 207 1 213 2 292 1 40 1 296 1 23 1 58 1 126 2 103 3 105 2 196 1 132 1 
67 2 33 1 232 1 235 1 40 1 42 1 241 1 126 2 196 1 48 1 132 1 165 1 207 1 208 1 254 1 213 2 292 1 22 1 296 1 58 3 103 5 105 2 
67 5 33 1 232 2 233 4 235 1 239 1 190 1 40 2 191 1 42 2 79 1 241 1 126 4 196 1 158 4 48 6 132 1 165 1 208 1 207 2 255 1 213 6 292 2 171 1 294 1 22 1 296 2 23 1 58 9 140 5 103 22 105 13 26 1 66 4 
67 1 33 1 185 1 232 1 233 2 239 1 191 1 40 3 42 1 79 1 241 1 126 6 158 2 48 2 207 3 255 1 213 1 292 3 22 1 294 1 296 3 58 4 140 2 103 11 105 7 66 2 
67 3 33 1 232 1 233 2 235 1 239 1 191 1 40 2 42 1 241 1 79 1 126 4 196 1 158 2 48 4 132 1 165 1 208 1 207 2 255 1 213 5 292 2 22 1 294 1 296 2 23 2 58 6 140 3 103 14 105 8 26 1 66 2 
67 2 33 1 232 1 235 1 40 1 42 1 241 1 126 2 196 1 48 1 132 1 165 1 207 1 208 1 254 1 213 2 292 1 22 1 296 1 58 3 103 5 105 2 
67 1 33 1 232 1 233 2 239 1 40 1 42 1 241 1 79 1 126 2 158 2 48 2 207 1 255 1 213 1 292 1 22 1 294 1 296 1 58 4 140 2 103 10 105 6 66 2 
67 5 33 1 185 1 232 1 233 2 235 2 239 1 191 1 40 3 42 1 79 1 241 1 126 6 196 2 158 2 48 5 132 2 165 1 208 1 207 3 254 1 255 1 213 7 292 3 294 1 22 1 296 3 23 2 58 8 140 3 103 18 105 10 26 1 66 2 
67 3 33 1 185 1 232 1 233 3 239 1 40 3 42 1 79 1 241 1 126 6 158 3 48 3 87 1 207 3 255 1 213 3 292 3 294 1 22 1 296 3 58 5 140 3 103 14 105 9 66 3 
67 4 165 1 208 1 254 1 235 2 213 7 23 3 58 4 140 1 103 6 105 2 26 1 196 2 48 3 132 2 
67 5 33 1 185 1 232 1 233 2 235 2 239 1 40 3 42 1 79 1 241 1 126 6 196 2 158 2 48 5 132 2 87 1 165 1 208 1 207 3 254 1 255 1 213 6 292 3 294 1 22 1 296 3 23 1 58 8 140 3 103 18 105 10 26 1 66 2 
259 1 285 1 168 1 161 1 278 1 12 1 282 1 
259 1 134 1 285 1 168 1 161 1 278 1 12 1 173 1 295 1 111 1 282 1 303 1 
54 4 276 1 151 1 216 1 137 1 242 1 176 4 194 1 177 1 64 1 200 1 250 4 65 1 
54 1 166 1 150 1 117 1 151 1 238 1 44 1 219 1 242 1 176 1 11 1 250 1 65 1 200 2 
54 1 176 1 148 1 169 1 151 1 215 1 200 1 226 1 250 1 216 1 
54 2 256 1 150 1 151 1 117 1 154 1 44 1 175 1 242 2 219 1 176 2 64 1 11 1 200 2 250 2 65 2 
54 2 150 1 151 1 117 1 216 1 154 1 44 1 242 2 219 1 176 2 64 1 11 1 200 2 250 2 129 1 65 2 
54 2 150 1 151 1 117 1 189 1 216 1 154 1 44 1 242 2 219 1 176 2 64 1 11 1 200 2 250 2 65 2 
54 1 176 1 250 1 216 1 56 1 
290 1 54 1 168 1 149 2 212 1 72 1 151 1 6 1 95 1 216 1 282 2 242 2 243 1 176 1 267 1 285 2 244 1 161 2 11 2 65 2 200 1 250 1 
243 1 166 1 285 1 267 1 149 1 161 1 282 1 
243 1 166 1 285 1 267 1 149 1 161 1 282 1 
166 1 277 1 163 1 
166 1 277 1 163 1 
54 1 176 1 5 1 151 1 200 1 250 1 
54 3 150 1 291 1 236 1 117 2 151 2 216 2 154 1 174 1 44 2 219 1 242 3 176 3 64 1 11 2 129 1 250 3 65 3 200 4 
67 2 149 2 235 1 151 1 72 1 6 1 152 2 243 1 242 2 244 1 9 1 161 2 85 1 11 2 250 1 165 1 168 1 254 1 95 1 176 1 103 3 105 1 267 1 271 1 37 2 40 2 192 1 282 2 126 4 285 2 196 1 48 1 200 1 51 1 289 1 132 1 54 1 290 1 206 1 207 2 208 1 212 1 213 2 292 2 57 1 296 2 59 1 58 2 64 1 65 2 
277 3 118 1 122 1 153 1 43 1 8 1 46 1 157 2 160 1 162 2 250 1 251 2 163 3 204 2 54 1 167 1 91 1 90 1 16 1 19 1 293 1 216 1 297 1 139 2 176 1 266 1 63 1 65 2 
54 1 176 1 5 1 151 1 200 1 250 1 123 1 
290 1 54 1 168 1 149 2 72 1 151 1 6 1 95 1 216 1 282 2 242 2 243 1 176 1 267 1 285 2 106 1 244 1 161 2 11 2 65 2 200 1 250 1 
166 1 
164 1 114 1 75 1 282 1 285 1 159 1 161 1 128 1 30 1 
124 1 47 1 75 1 
114 1 168 1 159 1 224 1 75 1 
0 1 114 2 168 1 187 1 72 1 118 1 277 2 6 1 293 1 95 1 75 1 43 1 297 1 124 1 61 1 47 1 159 2 224 2 163 2 

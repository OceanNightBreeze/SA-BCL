#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (133,211) (133,211) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (133,211) (133,211) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (133,211) (133,211) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (133,211) (133,211) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 44 23 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 44 23 240 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 44 23 240 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (8,197) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (8,197) 155 144 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (8,197) 155 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 107 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 322 (3,5) (3,5) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 322 (3,5) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (31,293) (52,221) (52,221) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 322 (3,5) (3,5) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 126 176 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 322 (77,206) (77,206) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 322 (77,206) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (31,293) (31,293) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 322 (77,206) (77,206) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 48 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 126 176 117 61 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
282 1 217 1 187 1 198 1 211 1 157 1 90 1 42 1 68 1 32 1 133 1 
282 1 217 1 187 1 198 1 211 1 157 1 90 1 42 1 68 1 32 1 133 1 
282 1 217 1 187 1 198 1 211 1 157 1 90 1 42 1 68 1 32 1 133 1 
282 1 217 1 187 1 198 1 211 1 157 1 90 1 42 1 68 1 32 1 133 1 
253 1 187 1 23 1 90 1 9 1 236 1 32 1 217 2 282 2 331 1 315 1 44 1 290 1 145 1 
187 1 106 1 90 1 95 1 214 1 32 1 217 2 282 2 220 1 313 1 315 1 331 1 42 1 204 1 68 1 44 1 
253 1 187 2 319 1 90 1 9 1 214 1 32 2 217 3 282 3 220 1 40 1 42 1 315 2 
253 5 187 2 319 2 23 1 90 1 9 3 236 1 32 2 195 1 217 7 282 7 240 1 64 1 40 1 331 1 315 3 42 1 44 1 290 1 145 1 72 1 
253 5 187 2 319 2 23 1 90 1 9 3 236 1 32 2 195 1 217 7 282 7 240 1 64 1 40 1 331 1 315 3 42 1 44 1 290 1 145 1 72 1 
310 1 
295 1 86 2 262 1 
177 1 50 2 257 2 156 2 82 2 69 2 112 2 172 1 
50 2 167 1 297 1 257 2 298 1 261 1 132 1 172 1 59 1 177 1 135 1 181 1 264 1 102 2 266 1 69 3 184 1 225 1 71 1 227 2 318 2 186 1 273 1 150 1 28 1 112 2 280 1 79 1 200 1 201 1 244 2 156 3 82 2 245 1 334 1 123 1 47 2 
271 1 50 1 166 1 257 1 156 1 82 1 30 1 69 1 112 1 172 1 
271 2 50 1 166 1 257 1 30 1 58 1 112 2 172 1 262 1 219 1 120 1 136 1 156 2 243 1 82 1 160 1 69 2 183 1 
271 2 166 1 50 2 257 2 30 1 58 1 112 2 172 1 304 1 262 1 115 1 136 1 156 2 243 1 82 2 160 1 69 2 183 1 
154 1 210 1 278 1 304 1 115 1 
154 1 241 1 210 1 259 1 183 1 304 2 262 1 115 2 
154 1 304 1 115 1 
271 1 166 1 50 1 257 1 210 1 30 1 58 1 112 1 172 1 304 1 115 1 156 1 82 1 69 1 
262 1 
154 1 320 1 241 1 210 1 183 1 304 2 262 1 115 2 
1 2 50 1 166 1 257 1 53 2 210 2 58 1 172 1 304 5 262 1 307 1 14 1 311 3 137 2 18 2 69 1 183 1 143 1 271 1 228 1 22 1 76 1 275 1 30 1 112 1 115 5 326 1 154 2 118 1 119 2 199 1 241 1 156 1 82 1 45 1 85 1 291 1 
310 1 
229 1 50 1 257 1 112 2 327 1 177 2 156 2 82 1 69 2 
38 1 121 1 151 1 
227 1 318 1 186 1 167 1 298 1 261 1 277 1 59 1 177 1 79 1 200 1 156 1 102 1 69 1 123 1 71 1 
227 1 318 1 186 1 50 1 167 1 298 1 261 1 112 1 59 1 79 1 218 1 329 1 200 1 121 1 156 2 82 1 102 1 69 2 123 1 71 1 
271 1 50 4 257 1 110 1 112 4 279 1 306 1 327 1 177 1 218 2 329 1 156 4 82 4 69 4 
271 1 50 2 233 1 156 2 82 2 30 1 69 2 112 2 
177 1 218 1 50 3 257 1 156 3 82 3 69 3 112 3 
271 1 50 1 156 1 82 1 30 1 69 1 112 1 
327 1 271 1 229 1 50 1 257 1 156 1 82 1 69 1 112 1 
271 1 50 2 257 1 27 1 112 2 327 1 218 1 329 1 136 1 243 1 156 2 82 2 160 1 69 2 226 1 
177 1 50 1 218 1 120 1 156 2 82 1 69 2 112 2 13 1 
271 1 50 1 218 1 136 1 329 1 243 1 156 1 82 1 160 1 27 1 43 1 69 1 112 1 
50 2 257 1 112 2 327 1 218 1 38 1 156 2 121 1 82 2 69 2 
227 1 318 1 186 1 167 1 298 1 261 1 59 1 177 1 79 1 200 1 156 1 102 1 69 1 123 1 71 1 
227 1 318 1 167 1 298 1 261 1 152 1 29 1 177 1 79 1 200 1 156 1 102 1 69 1 123 1 71 1 
254 1 126 1 57 1 132 1 173 1 181 1 266 2 184 1 317 1 228 1 273 1 190 1 275 1 191 1 150 1 151 1 239 1 280 1 38 1 244 2 121 1 245 1 83 1 47 3 
271 1 50 1 243 1 156 1 233 1 82 1 69 1 112 1 
8 1 215 1 
8 1 215 1 
164 1 197 1 8 1 215 1 
164 1 197 1 8 1 215 1 
164 1 197 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
8 1 215 1 
155 1 8 1 274 1 304 1 115 1 144 1 215 1 
155 1 8 1 274 1 215 1 
331 1 44 1 290 1 
313 1 331 1 44 1 
0 1 65 1 91 1 313 1 331 3 290 2 
65 1 91 1 313 1 331 2 290 1 268 1 
65 2 91 1 313 1 331 2 290 1 
1 1 126 1 53 1 210 4 55 1 171 1 96 1 304 5 174 1 262 1 176 1 62 1 311 1 137 1 18 1 66 2 222 1 183 1 317 1 185 1 270 1 228 1 275 1 149 1 237 1 115 5 154 1 119 3 241 1 246 1 85 1 86 1 
124 1 294 1 1 2 126 3 53 3 210 7 96 3 304 9 174 2 262 2 176 3 311 3 137 2 18 2 103 1 222 4 183 1 317 3 228 3 275 3 149 1 237 2 278 5 193 5 115 9 154 6 328 1 199 1 119 8 241 1 246 3 46 1 85 1 86 3 207 1 
295 1 1 1 126 1 53 1 210 2 96 1 304 3 174 1 262 2 176 1 311 1 137 1 18 1 66 1 222 1 183 1 185 1 317 1 270 1 228 1 275 1 237 1 115 3 199 1 119 3 246 1 86 2 
124 1 295 1 1 1 126 2 53 2 210 3 96 2 304 4 174 1 262 2 176 2 311 2 137 1 18 1 66 2 222 2 183 1 317 2 185 1 270 1 228 2 275 2 237 1 115 4 328 1 199 1 119 5 246 2 46 1 86 3 
310 1 
261 1 224 1 
179 1 
167 1 200 1 261 1 
163 1 261 1 
200 1 261 1 
285 1 167 1 25 2 200 1 261 3 303 1 
209 1 254 5 168 1 300 1 307 1 138 1 140 1 266 5 228 2 75 2 273 6 191 4 275 2 326 2 284 1 81 1 45 2 47 11 
209 1 254 7 168 1 300 1 307 1 140 3 138 1 266 5 228 2 75 2 273 6 191 4 275 2 326 2 284 1 81 1 45 2 47 11 
209 1 254 5 168 1 300 1 307 1 140 1 138 1 266 5 228 2 75 2 273 6 191 4 275 2 194 1 326 2 284 1 81 1 45 2 47 11 
209 2 126 3 254 10 168 2 300 1 132 1 176 3 307 1 138 1 140 4 266 18 182 1 184 1 70 1 317 3 105 1 228 5 75 3 273 16 275 5 191 6 109 4 280 1 326 3 284 1 286 1 81 1 244 2 245 1 332 1 45 3 289 1 47 34 252 1 88 3 
209 1 107 1 75 1 168 1 273 1 244 2 192 1 245 1 132 1 184 1 47 1 280 1 
227 1 292 1 318 1 187 1 296 1 322 1 3 1 5 1 90 1 302 1 32 1 217 1 282 1 102 1 42 1 248 1 
227 1 292 1 318 1 187 1 296 1 322 1 5 1 32 1 216 1 178 1 35 1 217 1 282 1 102 1 42 1 248 1 
227 1 318 1 178 1 102 1 248 1 216 1 
227 1 292 2 318 1 296 2 187 1 52 1 321 1 31 1 32 1 35 1 217 1 282 1 102 1 42 2 221 1 123 1 248 2 
227 1 292 1 318 1 187 1 296 1 322 1 3 1 5 1 90 1 32 1 216 1 217 1 282 1 102 1 42 1 248 1 
249 1 
1 1 4 1 301 1 261 1 212 1 56 1 304 2 180 1 219 1 311 1 136 1 137 1 18 1 102 2 69 1 269 1 21 1 71 1 227 2 271 1 318 2 235 1 237 1 112 1 78 1 115 2 79 1 154 2 120 1 119 1 241 1 200 1 243 1 156 1 203 1 160 1 123 2 85 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 320 1 301 1 235 1 56 1 112 1 304 2 115 2 154 1 219 1 120 1 241 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
1 1 301 1 56 1 304 1 219 1 311 1 137 1 136 1 18 1 69 1 21 1 269 1 271 1 147 1 235 1 112 1 115 1 120 1 119 1 156 1 243 1 160 1 85 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
271 1 301 1 235 1 56 1 112 1 304 1 115 1 219 1 120 1 136 1 243 1 156 1 160 1 69 1 269 1 21 1 
1 1 256 1 301 1 56 1 304 1 219 1 311 1 137 1 136 1 18 1 69 1 21 1 269 1 271 1 235 1 112 1 115 1 120 1 119 1 156 1 243 1 160 1 85 1 
310 1 181 1 244 2 190 1 245 1 150 1 132 1 184 1 280 1 
254 1 126 2 130 1 92 1 213 1 132 2 12 1 176 2 177 1 135 1 181 2 266 8 184 2 317 2 228 2 273 6 191 1 275 2 109 3 150 1 151 10 28 1 153 1 280 2 38 2 244 4 121 10 245 2 332 1 289 1 47 14 88 3 
50 1 167 1 298 1 130 1 261 1 132 1 170 1 59 1 177 1 309 1 218 1 135 1 181 1 102 1 266 1 67 1 69 2 184 1 71 1 227 1 186 1 318 1 273 1 150 1 28 1 112 1 277 1 280 1 79 1 38 1 329 1 200 1 156 2 244 2 82 1 245 1 123 1 47 2 
162 1 254 7 167 2 261 2 176 2 177 2 181 3 102 1 266 12 184 3 271 1 186 2 189 2 273 10 275 4 191 6 110 1 28 1 112 1 280 3 284 1 38 5 201 2 200 2 39 2 121 5 45 2 123 1 47 22 51 1 50 1 126 2 298 2 130 1 131 2 132 3 59 2 307 1 218 1 135 1 140 1 138 1 69 3 71 2 316 2 317 2 227 1 318 1 228 4 75 1 150 3 151 5 326 2 79 2 329 1 81 1 244 6 156 3 82 1 245 3 
49 1 50 1 297 2 261 3 212 1 302 1 132 2 60 1 216 1 218 1 135 1 181 2 102 7 266 1 69 1 184 2 71 2 227 8 318 8 273 1 190 1 150 2 28 1 112 1 238 1 325 1 280 2 79 2 36 1 200 2 202 1 156 1 244 4 82 1 203 1 245 2 205 1 123 2 47 2 
228 1 126 1 50 1 257 1 273 2 130 1 150 1 112 1 132 1 176 1 280 1 327 1 181 1 156 1 244 2 82 1 122 1 245 1 69 1 184 1 47 2 
126 1 228 1 273 1 190 1 150 1 57 1 132 1 280 1 181 1 244 2 245 1 184 1 47 1 
254 1 190 1 191 1 275 1 151 1 150 1 132 1 280 1 38 1 181 1 121 1 244 2 245 1 266 2 83 1 184 1 47 2 317 1 
126 1 254 1 132 1 176 1 181 1 266 2 184 1 317 1 228 1 273 1 190 1 275 1 191 1 150 1 151 1 280 1 38 1 244 2 121 1 245 1 47 3 
126 1 228 1 273 1 150 1 57 1 132 1 325 1 280 1 181 1 244 2 245 1 184 1 47 1 
254 1 191 1 275 1 151 1 150 1 132 1 325 1 280 1 38 1 181 1 121 1 244 2 245 1 266 2 83 1 184 1 47 2 317 1 
126 1 254 1 132 1 176 1 181 1 266 2 184 1 317 1 228 1 273 1 275 1 191 1 150 1 151 1 325 1 280 1 38 1 244 2 121 1 245 1 47 3 
126 1 254 1 132 1 176 1 181 1 266 2 184 1 317 1 228 1 273 1 275 1 191 1 150 1 151 1 280 1 38 1 244 2 121 1 245 1 47 3 
167 1 298 1 261 1 132 1 59 1 177 1 135 1 181 1 102 1 266 1 69 1 184 1 71 1 227 1 186 1 318 1 273 1 150 1 28 1 280 1 79 1 200 1 201 1 156 1 244 2 245 1 123 1 47 2 
167 1 128 1 298 1 261 1 132 1 177 1 135 1 181 1 102 1 266 1 69 1 184 1 71 1 227 1 318 1 273 1 150 1 152 1 28 1 29 1 280 1 79 1 200 1 156 1 244 2 245 1 123 1 47 2 
126 1 254 1 130 1 132 1 176 1 181 1 266 2 184 1 317 1 228 1 273 1 275 1 191 1 150 1 151 1 280 1 38 1 244 2 121 1 245 1 47 3 
254 1 126 1 167 1 298 1 261 1 302 1 132 1 59 1 176 1 181 1 102 1 266 2 69 1 184 1 317 1 71 1 227 1 186 1 318 1 228 1 273 1 189 1 191 1 275 1 151 1 150 1 280 1 79 1 38 1 201 1 200 1 121 1 156 1 244 2 245 1 47 3 
50 1 126 1 257 1 130 1 132 1 176 1 181 1 266 1 69 1 184 1 317 1 228 1 188 1 273 1 275 1 150 1 112 1 280 1 327 1 244 2 156 1 82 1 245 1 47 2 
126 2 254 2 6 1 7 1 94 1 132 2 176 2 97 1 141 1 266 7 184 2 317 2 228 2 24 1 273 4 192 1 275 2 191 2 109 2 280 2 281 1 330 1 244 4 245 2 332 1 289 1 47 11 88 1 
254 1 126 3 6 1 258 1 7 1 93 1 94 4 132 2 176 3 61 1 139 1 141 2 314 1 266 14 182 1 184 2 317 3 228 3 24 1 273 10 191 1 275 3 192 1 109 2 280 2 117 1 330 2 244 4 245 2 84 1 289 2 47 24 88 2 
126 2 254 1 6 1 7 1 94 2 132 2 176 2 97 1 139 1 141 1 266 8 184 2 317 2 228 2 24 1 273 5 192 1 275 2 191 1 109 2 280 2 330 1 244 4 245 2 332 1 289 1 47 13 88 1 
126 2 254 1 6 1 7 1 94 2 132 2 176 2 97 1 139 1 141 1 266 8 184 2 317 2 228 2 24 1 273 5 192 1 275 2 191 1 109 2 280 2 330 1 244 4 245 2 332 1 289 1 47 13 88 1 
126 7 254 6 6 1 258 1 7 1 92 2 93 1 94 3 132 1 176 7 61 1 139 1 138 1 141 1 314 1 266 24 184 1 317 7 228 8 24 1 75 1 273 18 192 1 275 8 191 6 109 4 280 1 326 1 284 1 117 1 330 1 81 1 244 2 245 1 84 1 332 2 45 1 289 2 47 42 88 4 
125 1 297 2 129 1 130 1 261 1 132 1 60 1 263 1 135 1 181 1 102 2 266 1 69 2 184 1 71 1 227 2 318 2 273 1 150 1 28 1 112 2 280 1 79 1 34 1 36 1 200 1 156 2 244 2 158 1 245 1 47 2 
227 2 318 2 296 1 127 1 322 1 77 1 102 2 302 1 206 1 216 1 
227 1 318 1 296 1 322 1 17 1 77 1 102 1 216 1 
293 1 227 1 318 1 296 1 127 1 102 1 123 1 31 1 
227 1 318 1 296 1 127 1 322 1 77 1 102 1 206 1 216 1 
230 1 
310 1 
295 1 1 1 304 1 262 2 311 1 137 1 18 1 312 1 183 1 108 1 147 1 115 1 154 1 119 1 241 1 85 1 86 1 
227 1 48 1 1 1 318 1 167 1 261 2 33 1 79 1 285 1 137 1 200 1 18 1 102 1 85 1 123 1 224 1 71 2 
295 2 1 1 228 1 126 1 109 1 96 3 262 2 176 1 61 1 117 1 119 2 311 3 137 1 18 1 314 1 246 3 85 1 289 1 86 4 88 1 
1 1 166 1 50 1 53 2 257 1 58 1 172 1 304 1 307 1 311 1 137 1 18 1 69 1 271 1 228 1 275 1 276 1 112 1 30 1 115 1 326 1 118 1 119 2 156 1 82 1 45 1 85 1 
1 1 76 1 262 1 119 1 311 1 137 1 18 1 85 1 183 1 143 1 
295 1 126 1 228 1 53 1 275 1 96 1 262 1 176 1 119 2 311 1 246 1 86 2 317 1 
154 1 241 1 183 1 304 1 262 1 115 1 
1 2 167 1 4 1 299 1 261 2 212 1 304 3 180 1 311 2 100 1 137 2 18 2 102 4 71 3 227 4 73 2 318 4 272 1 237 2 78 2 115 3 80 1 79 2 154 4 199 1 119 2 241 2 242 1 200 2 203 1 85 1 247 1 123 2 251 1 
50 2 167 1 257 2 298 1 261 1 132 1 172 1 59 1 177 1 181 1 264 1 102 1 266 1 69 3 184 1 71 1 227 1 318 1 186 1 150 1 28 1 112 2 280 1 79 1 201 1 200 1 244 2 156 3 82 2 245 1 123 1 47 1 
295 2 1 1 75 1 237 1 96 2 78 1 262 4 119 1 311 2 137 1 18 1 246 2 85 1 183 2 86 4 
165 1 37 1 148 1 
16 1 37 1 148 1 288 1 324 1 
165 1 37 1 148 1 
165 1 37 1 148 1 
15 1 37 1 148 1 
15 1 37 1 148 1 
15 1 37 1 148 1 
37 1 148 1 
8 1 215 1 
254 7 132 2 307 1 140 3 138 1 266 7 182 1 184 2 228 2 75 1 273 7 191 4 275 2 280 2 326 2 284 1 81 1 244 4 245 2 45 2 47 14 
310 1 
254 1 126 1 228 1 273 1 191 1 275 1 132 1 280 1 176 1 244 2 266 2 19 1 245 1 184 1 47 3 317 1 
254 1 126 1 228 1 273 2 191 1 275 1 109 2 176 1 266 4 332 1 289 1 47 6 88 1 317 1 
126 2 254 6 92 1 213 1 132 1 176 2 307 1 140 1 138 1 266 11 182 1 184 1 317 2 228 4 75 1 273 9 275 4 191 5 109 2 280 1 326 2 284 1 81 1 244 2 245 1 332 1 45 2 47 20 88 2 
266 1 109 1 47 1 
273 1 47 1 88 1 
126 1 228 1 254 2 273 2 275 1 191 2 131 1 132 1 280 1 176 1 244 2 245 1 19 1 266 3 184 1 47 5 317 1 
126 2 254 1 132 1 93 1 176 2 61 1 314 1 266 6 184 1 317 2 228 2 273 4 192 1 275 2 191 1 109 1 280 1 117 1 244 2 245 1 84 1 289 1 47 10 88 1 
228 1 254 2 273 3 275 1 191 1 326 1 138 1 140 1 266 3 45 1 47 6 
254 2 273 1 191 1 169 1 132 1 280 1 326 1 284 1 140 1 81 1 244 2 266 2 245 1 45 1 182 1 184 1 47 3 
254 4 228 1 273 3 192 1 191 2 275 1 132 1 280 1 326 1 307 1 140 2 244 2 245 1 266 3 45 1 184 1 47 6 
126 1 228 1 273 1 192 1 132 1 280 1 244 2 245 1 184 1 47 1 
254 1 126 1 228 1 273 1 191 1 275 1 192 1 132 1 280 1 176 1 244 2 266 2 245 1 184 1 47 3 317 1 
254 2 273 1 192 1 191 1 169 1 132 3 280 3 97 1 326 1 140 1 244 6 266 2 245 3 182 1 45 1 184 3 47 3 
254 7 126 2 132 4 176 2 97 1 307 1 138 1 140 3 266 14 19 1 182 1 184 4 70 1 317 2 105 1 228 4 75 1 273 12 191 4 192 1 275 4 109 3 280 4 326 2 284 1 81 1 244 8 245 4 45 2 289 1 47 26 252 1 88 3 
254 5 132 1 307 1 61 1 140 1 138 1 266 6 184 1 228 2 75 1 273 6 275 2 192 1 191 4 109 1 280 1 326 2 284 1 81 1 244 2 245 1 289 1 45 2 47 12 88 1 
126 4 254 3 92 1 93 1 132 2 176 4 61 1 314 1 266 11 19 1 184 2 317 4 228 4 273 7 192 1 275 4 191 3 109 2 280 2 117 1 244 4 245 2 84 1 332 1 289 1 47 18 88 2 
126 2 254 6 132 3 93 1 176 2 307 1 61 1 140 1 138 1 314 1 19 1 266 12 182 1 184 3 317 2 228 4 75 1 273 9 192 1 275 4 191 5 109 1 280 3 326 2 284 1 117 1 81 1 244 6 245 3 84 1 45 2 289 1 47 21 88 1 
126 2 254 1 132 2 93 1 176 2 61 1 314 1 19 1 266 6 184 2 317 2 228 2 273 4 192 1 275 2 191 1 109 1 280 2 117 1 244 4 245 2 84 1 289 1 47 10 88 1 
254 5 132 1 307 1 61 1 140 1 138 1 266 6 184 1 228 2 75 1 273 6 275 2 192 1 191 4 109 1 280 1 326 2 284 1 81 1 244 2 245 1 289 1 45 2 47 12 88 1 
126 2 254 1 132 1 93 1 176 2 61 1 314 1 266 6 184 1 317 2 228 2 273 4 192 1 275 2 191 1 109 1 280 1 117 1 244 2 245 1 84 1 289 1 47 10 88 1 
126 2 254 1 93 1 132 3 176 2 61 1 314 1 266 7 19 1 182 1 184 3 317 2 228 2 273 4 192 1 275 2 191 1 109 1 280 3 117 1 244 6 245 3 84 1 289 1 47 11 88 1 
126 2 254 2 93 1 132 3 176 2 97 1 61 1 314 1 266 7 182 1 184 3 317 2 228 2 273 4 192 1 275 2 191 2 109 1 280 3 117 1 244 6 245 3 84 1 289 1 47 11 88 1 
254 6 228 1 273 3 275 1 191 3 326 3 284 2 140 3 138 1 81 1 266 4 45 3 47 7 
126 2 254 1 93 1 132 3 176 2 97 1 61 1 314 1 266 7 182 1 184 3 317 2 228 2 273 4 192 1 275 2 191 1 109 1 280 3 117 1 244 6 245 3 84 1 289 1 47 11 88 1 
271 1 110 1 112 1 13 1 177 1 63 1 120 1 156 1 69 1 
271 1 232 1 54 1 110 1 112 1 11 1 13 1 177 1 305 1 283 1 63 1 120 1 156 1 69 1 
227 1 318 1 310 1 102 1 123 1 
227 1 318 1 50 1 167 1 298 1 261 1 112 1 59 1 177 1 79 1 218 1 200 1 156 2 82 1 102 1 69 2 123 1 71 1 
163 1 50 1 167 2 298 1 261 3 59 1 177 1 218 1 102 1 104 1 69 2 71 1 227 1 318 1 73 1 271 1 112 2 79 1 200 2 156 2 243 1 82 2 160 1 
163 1 208 1 50 1 167 2 298 1 261 3 177 1 218 1 102 2 104 1 69 2 71 1 227 2 318 2 73 1 271 1 152 1 112 2 79 1 200 2 156 2 243 1 82 2 160 1 
163 1 50 1 166 1 167 1 257 1 261 4 58 1 172 1 304 2 262 1 102 2 265 1 104 1 69 1 183 1 224 1 71 1 227 2 271 1 318 2 73 1 25 1 234 1 30 1 112 1 115 2 79 1 154 1 200 1 156 1 82 1 41 1 123 1 
227 3 163 1 73 1 318 3 208 1 167 1 25 1 234 1 261 4 304 2 262 1 115 2 79 1 154 1 200 1 102 3 267 1 104 1 123 1 183 1 224 1 71 1 
79 1 227 1 318 1 102 1 205 1 71 1 
227 7 49 1 318 7 167 1 297 1 299 1 261 3 302 1 238 1 60 1 216 1 80 1 79 2 134 1 285 1 200 2 202 1 102 6 205 1 123 2 71 3 
254 5 167 1 261 1 177 2 181 2 102 1 266 5 184 2 271 1 186 1 189 1 273 5 191 4 275 2 110 1 112 1 280 2 284 1 38 1 201 1 200 1 39 1 121 1 45 2 47 10 50 1 298 1 130 1 302 1 132 2 59 1 307 1 218 1 140 1 138 1 69 2 71 1 227 1 318 1 228 2 75 1 150 2 151 1 79 1 326 2 81 1 244 4 156 2 82 1 158 1 245 2 
1 2 210 1 10 1 261 2 304 3 262 1 311 1 137 2 18 2 102 1 267 1 183 1 143 1 224 1 227 1 318 1 25 1 76 1 234 1 323 1 115 3 154 2 119 1 241 1 287 1 123 1 85 2 247 1 
79 1 227 2 318 2 285 1 167 1 25 1 200 1 102 2 261 2 302 1 205 1 71 2 33 1 
79 1 227 4 318 4 208 1 200 1 203 1 102 4 261 1 212 1 302 1 123 1 114 1 71 1 
227 2 73 1 318 2 2 1 272 1 167 1 299 1 261 1 80 1 79 1 200 1 102 2 251 1 71 2 
79 1 227 1 74 1 318 1 313 1 102 1 331 1 44 1 123 1 71 1 
79 1 227 2 318 2 263 1 200 1 102 2 261 1 302 1 60 1 71 1 216 1 
227 5 73 1 318 5 49 1 212 1 261 3 302 1 238 1 114 1 60 1 79 2 200 2 203 1 102 4 123 1 71 2 
227 5 73 1 318 5 212 1 261 3 302 1 238 1 114 1 60 1 79 2 200 2 203 1 102 4 159 1 123 1 71 2 
227 1 318 1 50 1 167 1 298 1 261 1 152 1 112 1 177 1 79 1 218 1 200 1 156 2 82 1 102 1 69 2 123 1 71 1 
227 1 73 1 318 1 167 1 299 1 261 1 80 1 79 1 134 1 285 1 200 1 102 1 71 2 
177 1 98 1 146 1 26 1 101 1 
50 1 255 1 166 1 257 1 210 1 58 1 172 1 304 1 262 1 98 1 308 1 136 1 101 1 69 1 183 1 271 2 146 1 26 1 27 1 30 1 112 1 115 1 156 1 243 1 82 1 160 1 161 1 
125 1 146 1 26 1 129 1 112 1 34 1 101 1 156 1 69 1 
308 1 255 1 101 1 
310 1 
282 1 217 1 187 1 220 1 315 1 214 1 32 1 
292 1 282 1 42 1 
89 1 187 1 106 2 90 1 32 1 214 1 217 3 282 3 220 1 315 1 250 1 223 1 
253 1 282 2 217 2 187 1 220 1 315 1 236 1 214 1 32 1 
187 1 90 1 9 1 32 1 217 1 282 1 315 1 331 1 44 1 290 1 145 1 
282 1 217 1 187 1 220 1 90 1 315 1 32 1 
282 1 217 1 187 1 220 2 90 1 214 1 32 1 
187 2 90 1 32 2 175 1 217 2 282 2 220 1 315 1 336 1 87 1 
253 2 187 1 319 1 90 1 9 1 214 1 32 1 195 1 217 3 282 3 64 1 220 1 315 2 
253 1 0 1 187 1 90 1 214 1 32 1 217 2 282 2 220 1 313 1 315 1 331 2 20 1 44 1 290 1 
253 2 187 2 319 1 231 1 90 1 9 1 236 1 214 1 32 2 217 4 282 4 220 1 315 2 
282 1 217 1 187 1 220 1 90 1 315 1 214 1 32 1 
89 1 253 2 187 1 319 1 106 1 9 1 214 2 32 1 217 4 282 4 99 1 220 2 315 3 223 1 
253 1 196 1 282 2 217 2 187 1 220 1 90 1 315 1 214 1 32 1 72 1 116 1 
89 2 282 3 217 3 187 1 106 2 220 1 142 1 90 1 315 1 223 1 214 1 32 1 
315 2 111 1 333 2 335 1 
282 1 217 1 187 1 90 1 260 1 32 1 
253 1 282 2 217 2 187 1 64 1 220 1 90 1 315 1 214 1 32 1 
113 1 
282 1 217 1 187 1 220 1 90 1 315 1 214 1 32 1 
253 1 282 3 217 3 187 1 64 1 106 1 220 1 90 1 315 1 214 1 32 1 
99 1 319 1 9 1 315 1 
220 1 315 1 

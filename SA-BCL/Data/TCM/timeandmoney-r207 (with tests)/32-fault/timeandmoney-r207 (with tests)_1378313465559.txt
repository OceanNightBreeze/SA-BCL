#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (86,168) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 35 (200,306) (200,306) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 35 (200,306) (200,306) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 35 (200,306) (200,306) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 35 (200,306) (200,306) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (86,168) 129 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (86,168) 129 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 113 258 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (49,197) (49,197) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (85,236,320) (85,236,320) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (85,236,320) (85,236,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (85,236,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (85,236,320) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 292 106 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 292 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 292 111 100 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 292 111 100 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 292 111 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 292 111 100 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 292 111 100 17 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 113 (123,148) 259 140 (14,316) 112 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 326 252 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 113 (123,148) 259 140 (14,316) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 179 1 196 1 130 1 220 1 168 1 
225 1 179 1 159 1 35 1 86 1 119 1 306 1 196 1 130 1 220 1 200 1 
225 1 179 1 159 1 35 1 86 1 119 1 306 1 196 1 130 1 220 1 200 1 
225 1 179 1 159 1 35 1 86 1 119 1 306 1 196 1 130 1 220 1 200 1 
225 1 179 1 159 1 35 1 86 1 119 1 306 1 196 1 130 1 220 1 200 1 
60 1 173 1 196 4 124 3 208 1 149 3 46 1 324 2 179 1 225 1 130 1 7 1 58 1 308 1 220 4 310 2 193 1 245 1 
60 1 159 1 196 2 115 1 335 1 149 1 179 1 225 1 166 1 119 1 130 1 58 1 220 2 308 1 193 1 213 1 
225 1 179 1 196 2 124 1 129 1 130 1 220 2 168 1 330 1 
225 1 179 1 196 2 124 1 129 1 130 1 220 2 168 1 330 1 
257 1 334 1 126 1 93 1 300 1 5 1 304 1 127 1 98 1 180 1 120 1 109 1 132 1 289 1 
212 1 
98 2 127 2 212 1 74 1 267 1 163 1 126 1 214 1 
272 1 40 1 74 1 61 1 76 1 126 2 163 2 107 2 250 1 327 1 127 5 98 5 212 1 192 1 181 2 214 1 313 2 333 1 204 1 
212 1 74 1 152 1 
224 1 
78 1 304 2 5 2 257 2 109 2 120 1 132 2 300 2 
134 1 182 1 257 2 39 1 336 1 117 1 315 1 210 1 317 1 5 2 190 1 6 2 191 1 28 1 244 1 120 1 172 1 123 1 348 1 9 2 77 2 300 3 232 1 78 1 304 3 305 1 151 2 235 1 251 2 218 1 15 1 109 2 81 1 329 1 59 1 132 2 133 1 
304 1 5 1 257 1 334 1 180 1 109 1 120 1 132 1 300 1 289 1 
157 1 74 1 42 1 3 1 162 1 300 1 304 1 276 1 342 1 127 1 98 1 212 1 109 1 289 1 
157 1 257 1 74 1 162 1 300 1 5 1 304 1 276 1 98 2 342 1 127 2 212 1 109 1 132 1 289 1 
144 1 98 1 127 1 163 1 126 1 
257 1 334 1 163 1 93 1 5 1 98 2 212 1 26 1 120 1 214 1 289 1 74 1 126 1 300 1 304 1 127 2 180 1 109 1 132 1 
98 1 127 1 163 1 
257 1 123 1 348 1 336 1 117 1 4 1 185 1 77 1 300 2 315 1 56 1 5 1 304 2 251 1 190 1 6 1 15 1 109 1 329 1 133 1 
84 1 257 1 41 1 300 2 304 2 5 1 78 2 109 2 132 1 
97 1 4 1 
123 1 348 1 52 1 336 1 117 1 77 1 300 1 315 1 78 1 304 1 251 1 6 1 190 1 15 1 329 1 133 1 
78 1 152 1 
78 1 304 3 5 3 257 3 109 3 132 1 185 1 300 3 
304 1 5 1 257 1 334 1 109 1 300 1 289 1 
304 1 5 1 84 1 257 1 41 1 109 1 132 1 300 1 289 1 
134 1 157 1 182 1 257 3 41 1 336 1 162 1 117 1 185 1 315 1 317 1 5 3 342 1 98 1 190 1 6 1 191 1 28 1 244 1 120 1 289 1 30 1 123 1 348 1 9 2 77 1 300 4 232 1 56 1 78 1 304 4 276 1 151 1 127 1 234 1 235 1 251 1 218 1 15 1 109 3 81 1 329 1 133 1 132 2 
78 1 304 2 5 1 257 1 42 1 307 1 109 2 185 1 300 2 
157 1 257 3 41 1 162 1 185 2 284 1 300 3 56 1 5 3 304 3 276 1 98 1 127 1 342 1 234 1 212 1 109 3 132 1 289 1 
257 2 41 1 185 1 4 1 300 2 5 2 304 2 343 1 109 2 132 1 
123 1 348 1 336 1 117 1 77 1 300 1 315 1 78 1 304 1 251 1 6 1 190 1 15 1 329 1 133 1 
336 1 117 1 77 1 340 1 300 1 315 1 78 1 304 1 325 1 251 1 6 1 190 1 15 1 329 1 133 1 
134 1 182 1 256 1 135 1 4 2 210 2 317 1 97 2 343 2 27 1 191 1 244 1 29 1 271 1 32 1 9 2 125 1 301 1 151 4 235 1 218 2 108 1 
304 1 5 1 257 1 219 1 109 1 162 1 300 1 289 1 
257 4 41 1 241 1 185 2 300 4 56 1 5 4 304 4 78 1 226 1 353 1 109 4 132 1 289 1 
304 2 5 2 257 2 334 1 219 1 109 2 300 2 289 1 
187 1 43 1 216 1 
68 1 43 1 8 1 216 1 95 1 
43 1 216 1 
43 1 216 1 
95 1 
95 1 
95 1 
43 1 355 1 216 1 
43 1 355 1 216 1 
43 1 355 1 216 1 
43 1 53 1 216 1 
43 1 53 1 216 1 
43 1 53 1 216 1 
0 2 73 1 75 2 296 2 43 2 147 1 22 1 150 1 216 2 127 2 98 2 128 1 212 1 229 3 266 2 309 1 138 2 80 1 102 1 
257 2 0 1 88 1 43 1 184 1 209 1 5 2 47 1 98 1 187 1 229 1 138 1 75 1 296 1 349 1 147 1 216 1 300 2 78 1 304 2 127 1 221 1 109 2 154 1 
60 2 7 1 213 1 171 1 83 2 
60 1 7 1 308 1 
60 1 308 1 213 1 
60 3 161 1 7 2 213 1 83 1 171 1 
60 2 7 1 50 1 213 1 83 1 171 1 
280 2 256 1 281 1 183 1 135 1 314 1 62 1 337 1 163 1 224 2 47 1 98 5 212 1 29 1 214 1 290 2 32 1 74 1 295 1 349 1 126 4 76 3 302 1 107 1 198 1 57 1 250 2 127 5 221 1 277 2 181 1 313 1 333 1 
257 1 334 1 163 1 93 1 5 1 98 2 212 1 120 1 289 1 144 1 74 1 126 2 300 1 304 1 127 2 180 1 311 1 109 1 110 1 132 1 238 1 
38 1 280 2 257 1 281 1 256 1 334 1 135 1 62 1 314 1 93 1 224 2 5 1 47 1 98 3 212 2 120 1 29 1 289 1 290 1 74 1 32 1 295 1 126 2 76 3 300 1 107 1 302 1 304 1 250 2 327 1 127 3 180 1 109 1 277 2 181 1 132 1 313 1 
38 1 280 2 281 1 256 1 135 1 62 1 314 1 224 2 47 1 98 2 212 1 29 1 290 1 32 1 295 1 76 3 126 1 176 1 107 1 302 1 250 2 327 1 127 2 277 2 181 1 313 1 
323 1 
152 1 113 1 
336 1 63 1 
336 1 117 1 
190 1 258 1 336 1 54 1 117 1 113 1 
190 1 336 1 117 1 
336 1 16 1 
103 1 104 1 145 1 240 1 231 1 350 1 12 1 34 1 210 1 151 1 188 1 36 2 278 1 141 1 
151 3 318 1 273 1 218 1 174 1 231 2 206 1 278 1 239 1 210 2 34 1 
103 1 205 1 240 1 9 4 231 1 350 2 12 1 274 1 34 1 210 2 317 2 151 3 188 1 235 2 36 3 218 1 191 2 244 2 278 1 51 1 141 1 
103 1 104 1 240 1 231 1 350 1 12 1 34 1 210 1 151 1 188 1 36 2 278 1 141 1 
103 1 104 1 240 1 231 1 350 1 12 1 34 1 210 1 151 1 188 1 36 2 278 1 141 1 
195 2 196 1 197 1 77 1 315 1 225 1 24 1 119 2 251 1 49 1 130 1 6 1 220 1 270 1 
225 1 179 1 195 1 85 1 119 1 196 1 251 1 6 1 130 1 131 1 220 1 236 1 77 1 
225 1 179 1 195 1 85 1 119 1 196 1 251 1 6 1 130 1 220 1 236 1 55 1 77 1 
195 1 85 1 196 2 124 1 77 1 225 1 24 1 119 1 251 1 130 1 6 1 220 2 131 1 354 1 
195 1 119 1 196 1 251 1 124 1 6 1 320 1 131 1 220 1 77 1 354 1 
283 1 
260 1 89 1 90 1 42 1 3 1 315 2 98 3 6 2 268 1 321 1 146 1 107 1 106 1 276 1 109 1 329 1 333 1 157 1 336 1 116 1 162 1 21 1 117 1 163 2 118 1 25 1 342 1 214 1 289 1 292 1 295 1 76 2 298 1 297 2 177 1 77 2 300 1 250 2 304 1 79 1 127 3 251 2 181 1 133 1 313 1 
157 1 42 1 3 1 116 1 162 1 21 1 163 2 342 1 25 1 98 3 167 1 267 1 214 1 289 1 298 1 297 2 300 1 304 1 79 1 276 1 127 3 109 1 
157 1 158 1 42 1 3 1 116 1 162 1 21 1 163 1 342 1 25 1 98 3 212 1 267 1 214 1 289 1 74 1 298 1 297 3 300 1 304 1 79 1 276 1 127 3 109 1 
157 1 282 1 42 1 3 1 21 1 162 1 116 1 163 1 297 2 298 1 300 1 304 1 276 1 79 1 127 2 98 2 25 1 342 1 167 1 109 1 289 1 
157 1 257 1 282 1 334 1 42 1 3 1 116 1 162 1 21 1 163 2 93 1 5 1 25 1 98 3 342 1 212 1 167 1 120 1 267 1 214 1 289 2 74 1 298 1 297 2 175 1 300 2 304 2 79 1 276 1 127 3 180 1 109 2 132 1 
157 1 42 1 3 1 116 1 162 1 21 1 118 1 25 1 98 2 342 1 289 1 292 1 321 1 146 1 76 1 298 1 297 2 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 181 1 313 1 333 1 
157 1 42 1 3 1 116 1 162 1 21 1 164 1 118 1 342 1 25 1 98 2 100 1 289 1 292 1 321 1 146 1 76 1 298 1 297 2 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 111 1 181 1 313 1 333 1 
157 1 42 1 3 1 116 1 162 1 21 1 164 1 118 1 342 1 25 1 98 2 100 1 289 1 292 1 321 1 146 1 76 1 298 1 297 2 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 111 1 181 1 313 1 333 1 
157 1 292 1 42 1 3 1 321 1 21 1 162 1 116 1 297 2 298 1 118 1 66 1 300 1 304 1 276 1 79 1 127 2 98 2 25 1 342 1 109 1 111 1 289 1 
157 1 17 1 282 1 42 1 3 1 116 1 162 1 21 1 163 1 164 1 118 1 342 1 25 1 98 2 167 1 100 1 289 1 292 1 321 1 146 1 76 1 298 1 297 2 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 111 1 181 1 313 1 333 1 
157 1 17 1 282 1 42 1 3 1 116 1 162 1 21 1 163 1 164 1 118 1 342 1 25 1 98 2 167 1 100 1 289 1 292 1 321 1 146 1 76 1 298 1 297 2 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 111 1 181 1 313 1 333 1 
157 1 42 1 3 1 116 1 162 1 21 1 118 1 224 1 341 1 25 1 98 2 342 1 289 1 292 1 321 1 76 1 298 1 297 2 299 1 107 1 300 1 250 1 304 1 79 1 276 1 127 2 109 1 181 1 313 1 333 1 156 1 
37 1 134 2 257 1 182 2 87 1 20 1 260 1 1 1 336 4 117 3 185 1 315 2 210 1 5 1 317 2 23 1 228 1 190 1 6 6 191 2 244 2 172 2 9 4 55 1 77 7 177 1 301 1 300 1 304 1 326 1 305 1 151 2 251 7 235 2 217 1 218 1 312 1 109 1 254 1 81 1 329 4 133 3 223 1 
134 1 257 1 182 1 256 1 41 1 135 1 4 1 67 1 210 1 317 1 5 1 97 1 343 1 191 1 244 1 29 1 9 2 32 1 350 1 300 1 302 1 178 1 304 1 151 3 235 1 36 1 218 2 109 1 132 1 
134 1 103 1 182 1 9 2 240 1 350 1 301 1 317 1 188 1 235 1 36 1 152 1 191 1 244 1 141 1 
134 2 18 1 182 1 256 2 241 1 206 2 45 1 339 1 4 7 210 6 317 2 97 7 343 2 191 2 244 2 29 2 289 1 9 4 174 2 322 1 12 1 302 2 178 1 78 1 248 1 151 9 235 2 36 1 218 3 81 1 
134 1 182 1 257 1 336 1 117 1 185 1 315 1 210 1 317 1 5 1 69 1 189 1 190 1 6 1 343 1 191 1 244 1 123 1 348 1 9 2 52 1 77 1 300 2 178 1 56 1 78 1 304 2 303 1 305 1 151 2 251 1 235 1 218 1 15 1 109 1 81 1 329 1 133 1 
134 2 257 1 182 2 256 1 185 1 4 2 315 1 5 1 317 2 316 1 97 2 6 1 190 1 191 2 9 4 56 1 151 5 235 2 15 1 109 1 329 1 207 1 336 1 243 1 117 1 210 3 343 2 28 1 244 2 29 1 346 1 122 1 123 1 348 1 350 1 77 1 300 2 302 1 178 1 304 2 251 1 218 2 36 1 81 1 133 1 
134 1 271 1 182 1 256 1 9 2 4 1 301 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 182 1 9 2 135 1 32 1 350 1 4 1 301 1 317 1 151 2 97 1 235 1 36 1 343 1 218 2 191 1 244 1 108 1 
134 1 182 1 256 1 9 2 4 1 301 1 302 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 271 1 182 1 256 1 9 2 20 1 4 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 182 1 9 2 135 1 32 1 20 1 350 1 4 1 317 1 151 2 97 1 235 1 36 1 343 1 218 2 191 1 244 1 108 1 
134 1 182 1 256 1 9 2 20 1 4 1 302 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 182 1 256 1 9 2 4 1 302 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 182 1 336 1 117 1 315 1 210 1 317 1 190 1 6 1 28 1 191 1 244 1 123 1 348 1 9 2 77 1 300 1 78 1 304 1 305 1 151 2 251 1 235 1 218 1 15 1 81 1 329 1 133 1 
134 1 182 1 336 1 117 1 340 1 315 1 210 1 317 1 190 1 6 1 191 1 244 1 10 1 9 2 77 1 300 1 78 1 325 1 304 1 305 1 151 2 251 1 235 1 218 1 15 1 81 1 329 1 133 1 
134 1 182 1 256 1 9 2 4 1 302 1 178 1 210 2 317 1 151 2 97 1 235 1 343 1 191 1 244 1 29 1 
134 1 256 1 182 1 207 1 336 1 117 1 4 1 210 2 317 1 97 1 343 1 190 1 6 1 28 1 191 1 244 1 29 1 123 1 348 1 9 2 55 1 77 1 300 1 302 1 304 1 151 2 251 1 235 1 15 1 329 1 133 1 
134 1 257 1 182 1 256 1 41 1 4 1 263 1 210 2 317 1 5 1 97 1 343 1 191 1 244 1 29 1 9 2 12 1 300 1 302 1 178 1 304 1 151 2 235 1 36 1 109 1 132 1 
205 1 256 1 114 1 186 1 210 3 317 2 265 1 70 1 191 2 244 2 29 1 269 1 293 1 9 4 302 1 151 4 235 2 199 1 218 1 237 1 
256 1 205 1 9 2 114 1 242 1 186 2 302 1 210 3 317 1 151 4 199 1 235 1 265 1 70 1 218 1 191 1 244 1 29 1 237 2 
205 1 256 1 114 1 135 1 242 1 186 1 210 4 317 2 265 2 70 1 191 2 244 2 29 1 269 1 9 4 32 1 302 1 151 8 235 2 199 1 218 4 237 1 
205 1 256 1 114 1 135 1 242 1 186 1 210 4 317 2 265 2 70 1 191 2 244 2 29 1 269 1 9 4 32 1 302 1 151 8 235 2 199 1 218 4 237 1 
256 1 205 1 135 1 114 1 240 1 242 1 186 1 210 4 317 1 188 1 265 2 70 1 191 1 244 1 29 1 141 1 103 1 32 1 9 2 350 1 12 1 302 1 151 8 235 1 199 1 218 4 36 2 237 1 
134 1 182 1 91 1 336 1 117 1 210 1 317 1 6 2 191 1 244 1 169 1 172 2 9 2 11 1 77 2 300 2 178 1 304 2 326 1 305 1 151 2 251 2 235 1 217 1 218 1 109 2 81 1 329 1 133 1 331 1 203 1 
31 1 260 1 136 1 336 1 117 1 77 1 177 1 315 1 251 1 6 1 329 1 133 1 288 1 202 1 
60 2 72 1 31 1 161 1 294 1 77 1 251 1 7 1 6 1 308 1 131 1 213 1 329 1 194 1 133 1 288 1 155 1 356 1 
60 2 72 1 31 1 161 1 294 1 55 1 77 2 251 2 7 1 6 2 308 1 131 1 213 1 329 1 194 1 133 1 288 1 155 1 356 1 
60 2 72 1 31 1 161 1 294 1 77 1 99 1 251 1 7 1 6 1 308 1 131 1 213 1 194 1 329 1 133 1 356 1 
96 1 
272 1 74 1 76 1 107 1 250 1 212 1 192 1 181 1 313 1 333 1 
280 2 256 1 183 1 135 1 32 1 76 2 302 1 224 2 250 2 57 1 277 2 29 1 
98 1 127 1 212 1 74 1 163 1 214 1 
90 1 89 2 260 1 336 1 117 1 163 4 315 2 98 3 6 2 344 2 268 1 214 2 246 1 291 1 295 2 76 2 77 2 177 1 107 2 250 2 327 1 127 3 251 2 329 1 181 2 153 1 133 1 313 2 333 1 
250 1 272 1 212 1 74 1 152 1 192 1 76 1 
250 1 146 1 76 1 181 1 107 1 313 1 333 1 
259 1 2 1 336 3 63 2 163 1 117 1 315 1 6 1 190 1 140 1 295 1 148 1 54 1 76 1 77 1 107 1 251 1 14 1 329 2 181 1 112 1 133 1 313 1 113 1 333 1 
280 5 256 2 135 2 206 1 64 1 224 3 319 1 29 2 247 1 273 1 32 2 174 1 76 6 107 1 302 2 250 4 57 1 277 5 222 1 181 1 313 1 333 1 82 1 
19 1 256 2 257 1 334 1 183 1 240 1 164 1 93 1 5 1 285 1 188 1 98 1 120 1 289 1 32 1 76 2 300 1 107 1 304 1 57 2 250 2 127 1 180 1 109 1 181 1 132 1 313 1 333 1 
134 1 257 2 182 1 336 1 117 1 315 1 317 1 5 2 6 1 190 1 28 1 191 1 244 1 120 1 123 1 348 1 9 2 77 1 300 3 232 1 78 1 304 3 151 1 235 1 251 1 218 1 15 1 109 2 81 1 329 1 132 2 133 1 
280 2 74 2 295 1 89 1 76 1 224 2 107 1 34 1 250 2 212 2 277 2 181 1 313 1 333 1 
249 1 0 1 138 1 22 1 154 1 
0 1 33 1 138 1 
0 1 33 1 138 1 
0 1 33 1 138 1 
0 1 328 1 138 1 
0 1 328 1 138 1 
0 1 328 1 138 1 
0 1 138 1 
43 1 216 1 
205 1 19 1 256 2 9 2 240 2 32 2 350 3 12 2 210 5 317 1 285 1 151 10 188 2 235 1 36 5 218 5 191 1 244 1 
205 1 256 1 9 2 210 2 317 1 151 2 235 1 191 1 244 1 29 1 
205 1 256 1 9 2 302 1 210 2 317 1 151 2 235 1 191 1 244 1 29 1 
205 1 9 6 240 1 350 1 12 1 274 1 210 1 317 3 151 3 188 1 235 3 218 2 36 2 191 3 244 3 269 1 121 1 
256 2 19 1 205 1 240 1 206 1 210 6 317 3 285 1 188 1 318 1 191 3 244 3 269 1 141 1 103 1 32 2 273 1 9 6 174 1 350 2 12 2 151 12 235 3 36 4 218 6 253 1 
103 1 205 1 240 1 9 2 273 1 174 1 206 1 350 1 210 1 317 1 151 2 188 1 235 1 36 1 218 1 191 1 244 1 319 1 141 1 
103 1 205 1 240 1 9 4 273 1 174 1 206 1 350 1 210 1 317 2 151 2 188 1 235 2 36 1 218 1 253 1 191 2 244 2 319 1 141 1 
205 1 256 2 240 1 135 1 206 1 64 1 210 6 317 3 188 1 191 3 244 3 319 1 29 2 141 1 103 1 247 1 32 1 273 1 9 6 174 1 350 2 12 1 274 1 302 2 151 11 235 3 218 5 36 3 253 1 222 1 82 1 
205 1 256 2 240 1 135 1 206 1 64 1 210 6 317 3 188 1 191 3 244 3 319 1 29 2 141 1 103 1 247 1 32 1 273 1 9 6 174 1 350 2 12 1 274 1 302 2 151 11 235 3 218 5 36 3 253 1 222 1 82 1 
103 1 205 1 240 1 9 2 273 1 174 1 206 1 350 1 210 1 317 1 151 2 188 1 235 1 36 1 218 1 191 1 244 1 319 1 141 1 
205 1 256 2 135 1 206 1 64 1 210 6 317 2 191 2 244 2 319 1 29 2 247 1 32 1 273 1 9 4 174 1 350 1 12 1 274 1 302 2 151 11 235 2 218 5 36 2 222 1 82 1 
205 1 256 2 135 1 206 1 64 1 210 6 317 3 191 3 244 3 319 1 29 2 247 1 32 1 273 1 9 6 174 1 350 1 274 1 302 2 151 11 235 3 218 5 36 1 253 1 222 1 82 1 
205 1 256 3 135 1 206 1 64 1 210 9 317 4 191 4 244 4 319 1 29 3 269 1 247 1 32 1 273 1 9 8 174 1 350 2 12 3 274 2 302 3 151 14 235 4 218 5 36 5 222 1 82 1 
103 2 240 2 350 2 12 2 210 1 151 2 188 2 36 4 218 1 141 1 
205 1 256 2 135 1 206 1 64 1 210 6 317 3 191 3 244 3 319 1 29 2 269 1 247 1 32 1 273 1 9 6 174 1 350 1 274 1 302 2 151 11 235 3 218 5 36 1 222 1 82 1 
103 1 9 4 240 1 350 1 12 1 274 1 210 1 317 2 151 2 188 1 235 2 218 1 36 2 191 2 244 2 141 1 
103 1 188 1 240 1 36 1 152 1 350 1 141 1 
256 1 9 2 302 1 210 2 317 1 151 2 235 1 253 1 191 1 244 1 29 1 
151 2 273 1 218 1 174 1 206 1 210 1 
19 1 256 3 18 1 240 4 135 1 206 2 45 1 210 13 317 2 285 1 188 4 191 2 244 2 29 2 141 1 121 1 103 1 32 2 9 4 174 2 322 1 350 5 12 5 274 2 302 2 34 1 151 25 235 2 218 12 36 10 
151 1 218 1 174 1 
151 1 206 1 210 1 
122 1 256 1 135 1 32 1 12 1 302 1 210 3 151 6 218 3 36 1 29 1 
205 1 256 2 135 1 206 1 64 1 210 6 317 2 191 2 244 2 319 1 29 2 247 1 32 1 273 1 9 4 174 1 350 1 12 1 274 1 302 2 151 11 235 2 218 5 36 2 222 1 82 1 
256 1 19 1 151 6 188 1 240 1 32 1 36 2 218 3 350 1 12 1 210 3 
19 1 256 1 240 3 210 6 317 1 285 1 188 3 191 1 244 1 141 1 121 1 103 1 9 2 32 1 350 3 12 3 274 1 34 1 151 12 235 1 218 6 36 6 
78 1 304 1 42 1 307 1 109 1 255 1 300 1 
160 1 42 1 262 1 300 1 78 1 264 1 304 1 307 1 139 1 137 1 109 1 255 1 
260 1 336 1 65 1 55 1 117 1 77 4 177 1 315 1 251 4 6 4 329 1 133 1 332 1 
1 1 336 1 117 1 77 1 228 1 211 1 251 1 6 1 190 1 254 1 329 2 133 1 223 1 
60 1 251 1 6 1 308 1 213 1 329 1 133 1 77 1 315 1 356 1 
336 1 55 1 117 1 77 2 326 1 251 2 6 2 131 1 329 1 133 1 331 1 
87 1 260 1 336 3 55 1 117 2 177 1 77 4 315 1 326 1 23 1 251 4 6 3 344 1 329 2 133 2 332 1 
260 1 336 3 55 1 117 2 177 1 77 4 315 1 326 1 23 1 251 4 6 3 252 1 344 1 329 2 133 2 332 1 
251 1 260 1 152 1 6 1 336 1 329 1 117 1 133 1 177 1 77 1 315 1 
257 1 123 1 336 1 117 1 185 1 77 1 300 2 315 1 78 1 5 1 304 2 251 1 190 1 6 1 15 1 109 1 329 1 133 1 
304 1 5 1 257 1 344 1 109 1 185 1 300 1 
304 1 5 1 257 1 344 1 109 1 185 1 300 1 
98 1 127 1 344 1 
98 1 127 1 344 1 
251 1 6 1 312 1 329 1 133 1 77 1 
347 1 1 1 336 1 54 1 117 1 77 1 315 1 251 1 6 1 190 1 329 2 133 1 223 1 
134 2 182 2 257 1 240 1 207 1 336 1 117 1 185 1 317 2 5 1 316 1 188 1 190 1 6 1 191 2 28 1 244 2 141 1 103 1 123 1 348 1 9 4 11 1 350 1 55 1 77 1 300 2 178 1 304 2 235 2 251 1 36 1 15 1 109 1 329 1 133 1 
259 1 336 1 63 1 148 1 163 1 126 1 77 1 107 1 315 1 127 1 98 1 14 1 251 1 6 1 153 1 181 1 140 1 313 1 113 1 333 1 
251 1 190 1 6 1 2 1 312 1 336 1 54 1 329 2 117 1 133 1 77 1 113 1 
257 1 336 1 117 1 185 1 77 1 340 1 300 2 315 1 78 1 5 1 304 2 251 1 190 1 6 1 15 1 109 1 329 1 133 1 
344 1 
78 1 233 1 275 1 279 1 170 1 
157 1 74 1 162 1 126 1 275 2 261 1 351 1 78 1 276 1 127 2 98 2 342 1 233 1 234 1 212 1 215 1 279 2 289 1 170 2 
91 1 275 1 300 1 304 1 233 1 109 1 279 1 169 1 203 1 
233 1 215 1 351 1 
225 1 179 1 196 1 130 1 58 1 220 1 149 1 193 1 
71 1 196 4 124 2 335 1 105 1 149 3 324 1 225 1 130 1 58 2 220 4 193 2 245 1 201 1 
196 2 124 1 149 1 13 1 179 1 225 1 130 1 220 2 58 1 193 1 287 1 330 1 
196 3 335 2 149 1 105 2 179 1 225 1 227 1 130 1 220 3 58 1 193 1 201 1 
352 1 149 2 92 1 230 2 
225 1 179 1 196 1 130 1 220 1 338 1 
225 1 179 1 165 1 196 2 124 1 130 1 58 1 220 2 149 1 193 1 
94 1 
225 1 179 1 196 1 130 1 58 1 220 1 149 1 193 1 
152 1 58 1 149 1 193 1 
225 1 196 1 130 1 58 1 220 1 149 1 193 1 
119 1 220 1 345 1 
196 3 335 2 149 1 105 1 179 1 225 1 48 1 130 1 220 3 58 1 193 1 201 1 
225 1 196 2 124 1 130 1 58 1 310 1 220 2 149 1 193 1 
225 1 179 1 60 1 196 1 7 1 130 1 308 1 220 1 149 1 46 1 324 1 
225 1 179 1 196 1 130 1 220 1 149 1 193 1 
225 1 179 1 196 1 130 1 58 1 220 1 193 2 
142 1 143 1 196 2 149 1 179 1 225 2 130 2 220 2 193 1 101 1 
196 3 124 2 44 1 149 2 324 1 179 1 225 1 165 1 130 1 58 1 220 3 193 1 245 1 
60 2 196 2 161 1 124 1 149 1 179 1 225 1 130 1 7 1 58 1 220 2 308 1 193 1 213 1 286 1 
173 1 196 4 124 2 149 2 324 1 179 1 225 2 130 2 58 1 220 4 310 1 193 1 245 1 
225 1 179 1 165 1 196 3 124 1 130 1 58 1 220 3 335 1 149 1 193 1 
71 1 149 1 245 1 324 1 
149 1 193 1 

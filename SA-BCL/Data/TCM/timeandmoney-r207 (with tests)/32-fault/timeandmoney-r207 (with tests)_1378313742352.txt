#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 248 187 102 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 248 187 102 88 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 248 187 102 (132,259) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 248 187 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (179,216) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (179,216) 213 146 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (179,216) 213 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 156 74 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 190 272 112 106 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 190 272 112 106 130 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 190 272 112 106 130 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 190 272 112 106 130 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 248 187 102 88 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 248 273 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 248 273 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 248 273 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 248 187 102 (132,259) (132,259) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 248 273 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 248 273 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (25,39,51,122) (25,39,51,122) 224 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 2 122 3 44 1 82 1 199 1 25 2 165 1 51 2 182 1 236 1 76 1 152 3 39 1 
214 2 44 2 181 2 82 3 251 1 252 1 220 1 51 2 182 1 115 1 151 1 152 9 58 1 93 5 122 9 268 1 199 1 124 1 25 2 165 1 236 1 204 1 34 1 76 4 37 2 105 2 39 6 212 1 
214 2 44 2 181 2 82 3 251 1 252 1 220 1 51 2 182 1 115 1 151 1 152 9 58 1 93 5 122 9 268 1 199 1 124 1 25 2 165 1 236 1 204 1 34 1 76 4 37 2 105 2 39 6 212 1 
214 2 44 2 181 2 82 4 251 1 252 1 220 1 51 2 182 1 115 1 151 1 152 10 58 1 93 6 122 10 268 1 199 1 124 1 25 2 165 1 236 1 204 1 34 1 76 5 37 2 105 2 39 7 212 1 
214 2 44 2 181 2 82 2 251 1 252 1 220 1 51 2 182 1 115 1 151 1 152 7 58 1 93 4 122 7 199 1 124 1 25 2 165 1 236 1 204 1 34 1 76 3 37 1 105 2 39 4 212 1 
93 3 214 1 122 4 82 1 181 1 268 1 199 1 124 1 25 1 51 1 182 1 236 1 204 1 37 2 76 2 152 4 105 1 39 3 
93 1 214 1 122 2 44 1 199 1 231 1 251 1 25 1 51 1 182 1 236 1 34 1 241 1 152 2 105 1 40 1 
246 1 214 1 44 1 82 3 181 1 220 1 51 2 182 1 115 1 116 1 152 9 93 5 122 9 199 1 268 1 124 1 25 2 165 1 236 1 204 1 76 4 37 2 105 1 39 7 
246 1 214 1 44 1 82 3 181 1 220 1 51 2 182 1 115 1 116 1 152 9 93 5 122 9 199 1 268 1 124 1 25 2 165 1 236 1 204 1 76 4 37 2 105 1 39 7 
187 1 259 1 132 1 162 1 248 1 209 1 173 1 102 1 
206 1 
145 1 206 1 266 1 95 1 162 2 209 2 173 1 29 1 
221 1 53 2 256 1 145 2 258 1 91 1 95 1 21 1 162 5 23 1 166 1 29 1 68 1 168 1 206 1 171 1 35 2 72 1 209 5 173 2 243 2 245 1 
63 1 206 1 29 1 
257 1 206 1 195 2 
187 1 248 1 102 1 
187 1 88 1 248 1 102 1 
187 1 132 1 248 1 102 1 
265 1 162 1 248 1 139 1 202 1 29 1 203 1 185 1 87 1 187 1 259 1 132 1 206 1 276 1 11 1 209 1 12 1 102 1 264 1 
187 1 248 1 
145 1 162 1 209 1 173 1 263 1 
145 1 206 1 95 1 162 2 209 2 24 1 173 1 29 1 
145 1 162 1 209 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
216 1 179 1 125 1 6 1 
216 1 179 1 125 1 6 1 
179 1 125 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
216 1 6 1 
213 1 216 1 146 1 162 1 209 1 280 1 6 1 
213 1 216 1 280 1 6 1 
222 2 79 1 181 1 231 1 105 2 
214 1 181 1 105 1 
214 1 231 1 105 1 
222 1 79 1 181 2 231 1 253 1 105 3 
222 1 79 1 181 1 231 1 227 1 105 2 
95 1 162 4 249 1 29 1 52 1 144 1 145 1 206 1 209 4 225 1 173 3 244 1 
95 1 162 4 46 1 52 1 29 1 234 1 145 2 206 1 209 4 225 1 173 3 157 1 263 1 
2 1 248 1 249 1 53 1 144 1 85 3 257 2 187 1 259 1 7 2 225 1 155 1 195 4 197 2 162 3 127 1 233 1 29 1 28 1 97 1 68 1 168 2 132 1 206 3 35 1 72 1 209 3 173 2 102 1 243 1 278 1 279 1 244 1 
2 2 248 1 249 1 53 1 144 1 85 5 257 3 187 1 259 1 7 4 225 1 150 1 155 2 19 1 60 1 195 7 197 4 162 4 127 2 233 2 29 1 28 2 97 2 68 1 168 4 132 1 206 4 35 1 72 1 209 4 173 3 102 1 243 1 278 1 279 2 244 2 
186 1 90 1 228 1 
63 1 267 1 15 1 
267 1 147 1 
267 1 141 1 232 1 
205 1 267 1 
267 1 141 1 
267 3 232 1 141 1 186 1 133 1 15 2 107 1 
159 2 160 3 81 1 23 1 22 1 221 1 28 1 142 1 143 1 86 2 99 1 191 4 210 3 192 1 13 1 279 1 77 7 136 1 
2 1 81 2 140 1 108 1 221 1 86 2 54 1 260 1 190 2 191 5 13 2 14 1 155 1 57 1 18 1 92 1 159 1 161 2 160 6 23 1 271 1 128 1 233 1 272 1 28 1 99 1 210 4 279 1 77 11 136 1 
159 2 160 4 196 1 161 4 81 1 23 1 140 2 271 2 108 2 221 1 28 1 142 1 143 1 86 3 99 1 261 1 191 5 192 1 210 4 13 1 14 1 279 1 77 9 92 2 
159 2 160 3 81 1 23 1 221 1 28 1 142 1 143 1 86 2 99 1 191 4 210 3 192 1 13 1 279 1 77 7 136 1 
159 2 160 3 81 1 23 1 221 1 28 1 142 1 143 1 86 2 99 1 191 4 210 3 192 1 13 1 279 1 77 7 136 1 
215 1 176 1 43 2 44 2 247 2 178 1 217 2 141 1 109 2 51 1 111 1 148 2 152 1 229 1 121 1 122 1 267 1 25 1 274 1 235 1 98 2 69 1 237 1 240 1 
214 1 215 1 43 1 44 1 247 1 217 1 181 1 253 1 109 1 51 1 111 1 148 1 152 1 16 1 154 1 117 1 122 1 199 1 200 1 231 1 25 1 98 1 75 1 134 1 105 2 137 1 
214 1 215 1 43 1 44 1 247 1 217 1 181 1 253 1 109 1 51 1 182 1 111 1 113 1 148 1 152 2 16 1 154 1 93 1 122 2 199 1 200 1 231 1 25 1 236 1 98 1 75 1 134 1 105 2 39 1 137 1 
214 1 176 1 215 1 43 1 44 1 247 1 217 1 181 1 253 1 109 1 51 1 182 1 255 1 111 1 148 1 152 3 16 1 154 1 117 1 93 1 122 3 200 1 231 1 25 1 236 1 98 1 75 1 105 2 39 2 137 1 
215 1 214 1 44 1 43 1 247 1 217 1 181 1 253 1 109 1 182 1 255 1 111 1 148 1 152 2 154 1 117 1 93 1 122 2 200 1 231 1 236 1 98 1 105 2 39 2 137 1 
201 1 
215 1 247 2 178 1 141 1 109 2 110 1 111 1 53 1 85 1 145 2 9 1 156 1 95 1 267 1 162 2 168 1 33 1 98 2 69 1 35 1 240 2 239 1 209 2 74 1 243 1 278 1 104 1 245 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
145 1 33 1 266 1 95 1 162 2 209 2 74 1 156 1 110 1 
33 1 35 1 162 1 209 1 74 1 243 1 156 1 110 1 53 1 245 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 162 1 209 1 74 1 156 1 110 1 
33 1 35 1 162 1 209 1 74 1 243 1 156 1 110 1 53 1 245 1 
2 3 81 3 140 2 47 1 108 2 86 3 54 1 190 2 223 2 191 9 226 1 155 3 18 1 92 2 20 1 161 4 196 1 160 10 269 1 26 2 271 2 233 3 272 1 130 1 28 3 71 1 210 6 279 3 106 1 77 19 
20 2 196 1 161 2 160 3 140 1 271 1 108 1 272 2 130 1 112 1 71 1 190 2 223 1 191 2 18 1 106 2 77 5 92 1 
177 1 2 2 81 2 140 2 108 2 112 1 86 1 54 1 190 4 223 2 191 8 226 1 155 2 18 2 92 2 20 2 161 4 196 1 160 10 269 1 26 1 271 2 233 2 272 3 130 1 28 2 71 1 210 3 279 2 106 1 77 18 
177 1 2 2 81 2 140 2 108 2 112 1 86 2 54 1 190 4 223 2 191 8 226 1 155 2 18 2 92 2 20 2 161 4 196 1 160 10 269 1 26 1 271 2 233 2 272 3 130 1 28 2 71 1 210 4 279 2 106 1 77 18 
2 2 81 2 140 1 108 1 221 1 142 1 143 1 112 1 86 3 54 1 190 3 223 1 191 10 192 1 155 2 18 2 92 1 159 1 20 1 66 1 161 2 196 1 160 10 23 1 271 1 233 2 272 2 130 1 28 3 71 1 210 5 279 3 106 1 77 20 
215 1 247 2 138 1 219 1 5 1 141 1 140 1 109 2 108 1 111 1 185 2 188 1 56 1 89 1 11 2 191 1 17 1 59 1 92 1 120 1 161 2 123 1 160 1 267 1 202 2 271 1 129 1 98 2 70 1 237 2 77 2 
215 1 69 1 98 1 178 1 247 1 217 1 267 1 3 1 240 1 101 1 141 1 109 1 111 1 229 1 
214 1 215 1 230 1 247 1 217 1 181 1 231 1 253 1 109 1 111 1 98 1 114 1 101 1 16 1 105 2 154 1 117 1 137 1 
214 1 215 1 230 1 247 2 217 1 181 1 231 1 253 1 109 2 111 1 113 1 98 2 114 1 101 1 16 1 105 2 154 1 117 1 137 1 
214 1 215 1 247 1 217 1 181 1 231 1 253 1 109 1 111 1 98 1 114 1 174 1 16 1 105 2 154 1 117 1 137 1 
41 1 
29 1 53 1 168 1 85 1 258 1 206 1 35 1 243 1 91 1 245 1 
195 4 2 1 197 2 127 1 233 1 28 1 85 2 168 2 257 2 7 2 206 2 72 1 279 1 155 1 
145 1 206 1 95 1 162 1 209 1 29 1 
215 1 247 4 178 1 141 1 109 4 111 1 53 2 84 1 85 2 145 4 9 1 118 2 95 2 267 1 162 3 126 1 68 1 168 2 98 4 69 1 35 2 239 1 277 1 240 2 209 3 243 2 278 2 104 2 245 1 
63 1 258 1 206 1 29 1 91 1 85 1 168 1 
53 1 85 1 257 1 145 1 55 1 61 1 195 1 95 1 162 1 67 1 29 1 168 1 206 2 35 1 209 1 243 1 245 1 
215 1 2 1 139 1 141 1 85 4 145 2 7 3 8 1 147 2 10 1 15 1 155 1 95 1 162 2 232 1 233 1 28 1 168 3 170 1 98 1 32 1 35 2 240 1 243 2 103 1 245 2 107 1 247 1 109 1 49 1 183 1 111 2 53 2 257 3 195 6 197 3 267 4 270 1 127 1 206 3 209 2 72 1 278 1 279 1 
0 1 2 2 53 1 85 7 112 1 257 3 7 5 190 1 155 2 18 1 195 6 197 5 233 2 272 1 28 2 29 1 168 4 131 1 206 4 35 1 238 1 242 1 243 1 279 2 245 1 
162 1 218 1 23 1 221 1 53 1 171 1 35 1 209 1 72 1 243 1 245 1 
187 1 88 1 248 1 102 1 
195 2 197 1 29 1 53 1 168 1 85 1 257 1 206 2 35 1 243 1 278 1 104 1 245 1 
78 1 207 1 96 1 208 1 254 1 
96 1 208 1 193 1 
96 1 208 1 193 1 
96 1 208 1 193 1 
96 1 208 1 83 1 
96 1 208 1 83 1 
96 1 208 1 83 1 
96 1 208 1 
216 1 6 1 
86 1 171 1 23 1 210 1 221 1 
2 1 196 1 161 2 81 1 140 1 271 1 108 1 28 1 191 2 210 1 77 2 92 1 
2 1 160 2 196 1 161 2 81 1 140 1 271 1 108 1 233 1 28 1 86 1 191 2 210 2 279 1 155 1 77 4 92 1 
160 2 196 1 161 6 81 1 23 1 140 3 271 3 108 3 221 1 86 1 191 1 210 2 14 1 226 1 57 1 77 3 92 3 
81 4 140 4 108 4 221 3 142 1 143 1 86 4 260 1 190 1 191 8 192 1 14 1 226 1 57 1 18 1 92 4 62 1 160 9 161 8 196 1 23 3 271 4 28 2 272 1 171 1 210 8 279 2 77 17 
159 1 160 4 161 4 81 1 23 1 140 2 271 2 108 2 221 1 28 1 142 1 143 1 86 2 191 4 210 3 192 1 14 1 279 1 77 8 92 2 
86 2 63 1 159 1 160 3 191 3 23 1 210 2 192 1 279 1 221 1 28 1 142 1 77 6 143 1 
62 1 2 1 160 2 161 2 81 1 140 1 271 1 108 1 233 1 28 1 86 1 191 2 210 2 279 1 155 1 77 4 92 1 
2 1 160 4 81 1 233 1 272 1 28 1 86 1 54 1 190 2 191 3 210 2 279 1 155 1 18 1 77 7 
2 2 81 2 140 1 108 1 221 2 142 1 143 1 86 4 54 1 190 2 191 10 192 1 14 1 155 2 18 2 92 1 94 1 159 1 160 10 66 1 161 2 23 2 271 1 233 2 28 3 210 6 279 3 77 20 
160 1 190 1 77 1 
191 1 18 1 77 1 
62 1 2 1 161 2 160 3 81 1 140 1 108 1 271 1 233 1 28 1 86 2 8 1 191 3 210 3 279 1 155 1 77 6 92 1 
0 1 2 2 81 1 140 1 108 1 112 1 86 1 190 1 191 6 155 2 18 1 92 1 160 6 161 2 196 1 271 1 233 2 272 1 28 2 131 1 238 1 210 2 242 1 279 2 77 12 
160 3 81 1 23 1 221 1 28 1 142 1 86 1 191 3 210 2 279 1 77 6 
160 2 161 2 81 1 23 1 140 1 271 1 108 1 221 1 143 1 86 1 191 1 210 2 192 1 14 1 57 1 77 3 92 1 
140 1 108 1 221 1 142 1 112 1 143 1 86 2 190 1 191 4 192 1 18 1 92 1 159 1 160 4 161 2 196 1 23 1 271 1 28 1 272 1 210 2 279 1 77 8 
2 1 81 1 140 2 108 2 221 1 142 1 143 1 112 1 86 2 54 1 190 2 191 6 192 1 155 1 18 1 92 2 62 1 159 1 160 5 196 1 161 4 23 1 271 2 272 1 28 2 210 3 279 1 77 11 
0 1 2 2 81 1 140 2 108 2 221 1 143 1 112 1 86 1 190 1 191 6 192 1 155 2 18 1 92 2 62 1 160 7 161 4 196 1 23 1 271 2 233 2 272 1 28 2 131 1 171 1 238 1 242 1 210 2 279 2 77 13 
0 1 2 2 81 1 140 3 108 3 112 1 86 1 190 1 191 7 14 1 155 2 18 1 92 3 62 1 160 4 161 6 196 1 271 3 233 1 272 1 28 2 131 1 238 1 210 2 242 1 279 1 77 11 
140 1 108 1 221 1 142 1 112 1 143 1 86 2 190 1 191 4 192 1 18 1 92 1 159 1 160 4 161 2 196 1 23 1 271 1 28 1 272 1 210 2 279 1 77 8 
0 1 2 2 81 1 140 1 108 1 112 1 86 1 190 1 191 6 155 2 18 1 92 1 160 6 161 2 196 1 271 1 233 2 272 1 28 2 131 1 238 1 210 2 242 1 279 2 77 12 
0 1 2 2 81 1 140 3 108 3 112 1 190 1 191 7 14 1 155 2 18 1 92 3 62 1 160 5 161 6 196 1 271 3 233 1 272 1 28 2 131 1 238 1 210 1 242 1 279 1 77 12 
0 1 2 2 81 2 140 3 108 3 112 1 86 2 190 1 191 7 14 1 226 1 155 2 18 1 92 3 160 5 196 1 161 6 271 3 233 1 272 1 28 2 131 1 238 1 210 4 242 1 279 1 77 12 
160 4 81 3 23 3 221 3 28 1 142 1 143 1 86 3 191 3 192 2 210 6 279 1 77 7 
0 1 2 2 81 1 140 3 108 3 112 1 190 1 191 7 14 1 226 1 155 2 18 1 92 3 160 5 196 1 161 6 271 3 233 1 272 1 28 2 131 1 238 1 210 1 242 1 279 1 77 12 
185 1 80 1 180 1 11 1 202 1 27 1 203 1 
80 1 180 1 202 1 27 1 203 1 185 1 275 1 149 1 11 1 211 1 153 1 158 1 
64 1 215 1 247 4 178 1 267 1 141 1 109 4 111 1 113 1 98 4 69 1 240 1 282 1 
215 1 247 2 267 1 4 1 232 1 141 1 109 2 167 1 111 2 169 1 98 2 189 1 118 1 135 1 
214 1 215 1 98 1 247 1 240 1 231 1 109 1 105 1 154 1 111 1 
215 1 247 2 267 1 141 1 109 2 111 1 113 1 98 2 56 1 117 1 59 1 
215 2 178 1 247 4 267 3 141 2 109 5 111 2 113 1 69 1 98 5 56 1 100 1 240 1 118 1 281 1 282 1 
215 2 178 1 247 4 267 3 141 2 109 5 111 2 113 1 69 1 98 5 56 1 100 1 240 1 262 1 118 1 282 1 
63 1 215 1 69 1 98 1 178 1 247 1 267 1 240 1 141 1 109 1 111 1 
248 1 273 1 
248 1 273 1 
248 1 273 1 
215 1 247 1 248 1 139 1 141 1 109 1 50 1 111 1 187 1 259 1 145 1 147 1 15 1 118 1 267 4 162 2 232 1 30 1 29 1 132 1 98 1 205 1 206 1 209 2 102 1 42 1 
215 1 247 1 248 1 139 1 141 1 109 1 111 1 187 1 259 1 145 1 147 1 15 1 118 1 267 4 162 2 232 1 30 1 29 1 132 1 32 1 98 1 205 1 206 1 209 2 102 1 
184 1 215 1 98 1 247 1 109 1 111 1 
98 1 247 1 198 1 240 1 109 1 
248 1 273 1 
247 1 139 1 109 1 221 1 49 1 53 2 258 1 145 2 147 1 15 1 91 1 95 1 162 3 267 2 23 1 270 1 29 1 168 1 206 1 98 1 170 1 32 1 171 1 35 2 240 1 277 1 72 1 209 3 173 1 243 2 245 2 
215 1 247 1 267 2 232 1 141 1 109 1 183 1 111 2 184 1 186 1 98 1 15 1 107 1 
248 1 273 1 
98 1 247 1 198 1 109 1 118 1 
93 1 236 1 122 1 199 1 25 1 152 1 51 1 182 1 
93 3 122 4 82 1 250 1 25 1 51 1 182 2 236 2 34 1 73 1 36 1 76 1 152 4 39 2 
93 1 246 1 122 2 65 1 199 1 25 1 51 1 182 1 31 1 236 1 152 2 39 1 
93 1 122 3 199 1 250 1 25 1 51 1 182 1 236 1 172 1 34 2 73 2 152 3 
93 2 48 1 38 1 119 2 
175 1 122 1 199 1 25 1 152 1 51 1 
93 1 236 1 122 2 115 1 199 1 25 1 152 2 51 1 182 1 39 1 
163 1 
93 1 236 1 122 1 199 1 25 1 152 1 51 1 182 1 
93 1 63 1 236 1 182 1 
93 1 236 1 122 1 25 1 152 1 51 1 182 1 
44 1 148 1 152 1 
93 1 236 1 122 3 34 2 199 1 73 1 250 1 25 1 152 3 51 1 194 1 182 1 
93 1 236 1 122 2 37 1 25 1 152 2 51 1 182 1 39 1 
93 1 214 1 122 1 181 1 199 1 124 1 25 1 51 1 76 1 152 1 105 1 
93 1 236 1 122 1 199 1 25 1 152 1 51 1 
236 2 122 1 199 1 25 1 152 1 51 1 182 1 
93 1 236 1 122 2 45 1 1 1 199 1 164 1 25 2 152 2 51 2 
93 2 122 3 82 1 199 1 25 1 220 1 51 1 182 1 236 1 115 1 76 1 152 3 39 2 
122 2 224 1 199 1 231 1 25 1 152 1 51 1 105 1 39 1 
93 2 122 4 82 1 199 1 268 1 25 2 51 2 182 1 236 1 37 1 76 1 152 4 39 2 
93 1 122 3 199 1 25 1 51 1 182 1 236 1 34 1 115 1 152 3 39 1 
93 1 82 1 36 1 76 1 
93 1 236 1 

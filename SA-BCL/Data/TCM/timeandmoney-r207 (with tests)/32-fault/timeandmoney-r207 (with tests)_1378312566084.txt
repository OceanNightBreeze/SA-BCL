#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (155,238) (155,238) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (155,238) (155,238) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (155,238) (155,238) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (155,238) (155,238) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (23,157,183,294) (23,157,183,294) 64 219 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (137,271) (137,271) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (23,157,183,294) (23,157,183,294) 64 219 130 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (23,157,183,294) (23,157,183,294) 64 219 130 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 165 22 122 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 165 22 122 13 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 165 22 122 (29,105) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 165 22 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 220 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 296 53 143 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 296 53 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (8,27,147) (17,26,173) (17,26,173) (17,26,173) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (8,27,147) (17,26,173) (17,26,173) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (8,27,147) (17,26,173) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (8,27,147) (17,26,173) (17,26,173) (17,26,173) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 14 194 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 14 119 83 63 44 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 14 119 83 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 14 119 83 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 48 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 14 119 83 63 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 14 119 83 63 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (8,27,147) (8,27,147) (8,27,147) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (8,27,147) (8,27,147) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (8,27,147) (8,27,147) (8,27,147) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 222 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 220 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 165 22 122 13 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 165 166 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 165 166 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 165 166 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 165 22 122 (29,105) (29,105) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 165 166 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 165 166 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (23,157,183,294) (23,157,183,294) 64 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (23,157,183,294) (23,157,183,294) 64 273 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 1 238 1 199 1 157 1 81 1 20 1 183 1 148 1 23 1 
155 1 238 1 199 1 157 1 81 1 20 1 183 1 148 1 23 1 
155 1 238 1 199 1 157 1 81 1 20 1 183 1 148 1 23 1 
155 1 238 1 199 1 157 1 81 1 20 1 183 1 148 1 23 1 
157 1 81 1 219 1 183 1 294 1 64 1 148 1 23 2 
271 1 199 1 157 1 81 1 20 1 183 1 137 1 232 1 148 1 23 1 
107 1 20 1 183 2 23 3 236 1 124 1 81 1 157 2 99 1 34 1 294 1 148 3 175 2 
130 1 38 1 107 1 20 1 183 2 88 1 23 7 236 2 81 1 157 2 219 1 159 1 294 5 34 2 64 1 148 6 175 2 
130 1 38 1 107 1 20 1 183 2 88 1 23 7 236 2 81 1 157 2 219 1 159 1 294 5 34 2 64 1 148 6 175 2 
92 1 179 1 56 1 
92 1 212 2 187 1 
165 1 22 1 122 1 
165 1 22 1 122 1 13 1 
105 1 165 1 22 1 122 1 
85 1 255 1 18 1 56 1 281 1 260 1 205 1 6 1 184 1 92 1 59 1 289 1 216 1 290 1 
165 1 22 1 
59 1 255 1 136 1 284 1 42 1 
92 1 59 2 255 2 56 1 110 1 11 1 136 1 42 1 
59 1 255 1 136 1 
59 1 105 1 29 1 255 1 165 1 22 1 122 1 42 1 
92 1 
92 1 59 2 255 2 56 1 110 1 136 1 283 1 42 1 
105 1 254 1 255 5 165 1 110 1 136 2 264 2 42 2 77 1 266 1 215 1 10 1 220 1 228 2 56 2 231 1 22 1 122 1 91 2 123 1 58 2 92 2 59 5 286 2 29 1 240 1 243 1 293 1 32 1 127 3 249 4 
84 1 70 1 
84 1 70 1 
60 1 287 1 
60 1 287 1 
60 1 287 1 
84 1 202 1 70 1 
84 1 202 1 70 1 
84 1 202 1 70 1 
60 1 84 2 287 1 70 2 191 1 223 1 
103 1 84 1 70 1 
84 1 70 1 169 1 
84 1 70 1 169 1 
84 1 70 1 169 1 
59 1 84 1 53 1 143 1 182 1 70 1 255 1 100 1 296 1 
84 1 53 1 182 1 70 1 100 1 296 1 
253 1 242 1 111 1 
232 1 
232 1 
232 1 
232 1 
255 5 110 1 136 1 168 1 261 1 170 1 208 2 42 4 212 3 45 2 145 1 50 1 174 1 51 1 54 1 55 1 228 1 56 1 234 1 91 1 58 1 92 2 59 5 286 1 239 2 187 1 188 1 293 1 127 2 32 1 36 1 249 3 
162 1 255 9 256 1 4 1 110 1 136 6 261 2 42 7 212 9 45 6 174 2 51 3 16 1 55 3 228 2 229 1 86 1 56 1 279 5 284 5 234 3 91 3 123 1 92 5 58 2 59 9 286 2 239 6 187 3 188 4 293 1 127 6 32 3 36 1 249 8 
105 1 255 3 165 1 168 1 261 1 208 1 42 2 212 4 45 2 145 1 174 1 51 1 55 1 228 1 56 1 22 1 122 1 234 1 91 1 123 1 92 3 58 1 59 3 286 1 239 2 29 1 187 2 188 1 32 1 127 2 249 3 
255 2 168 1 261 1 208 1 42 1 212 4 45 2 145 1 174 1 51 1 55 1 228 1 229 1 234 1 91 1 123 1 92 2 58 1 59 2 286 1 239 2 187 2 188 1 32 1 127 2 249 3 
179 1 225 1 61 1 71 1 140 1 
80 1 225 1 
37 1 
225 1 72 1 138 1 
52 1 225 1 
225 1 72 1 
213 1 225 3 71 2 72 1 160 1 138 1 
40 1 180 1 3 1 135 1 206 7 91 1 25 1 139 1 112 3 240 1 215 1 288 2 241 2 243 1 31 3 32 1 33 4 
40 1 180 1 3 1 135 1 206 7 91 1 25 1 139 1 112 3 240 1 215 1 288 2 241 2 243 1 31 3 32 1 33 4 
40 1 180 1 3 1 135 1 206 7 282 1 91 1 25 1 139 1 112 3 240 1 215 1 288 2 241 2 243 1 31 3 32 1 33 4 
39 1 288 1 109 1 267 1 247 1 206 3 33 2 139 1 25 2 112 1 149 1 
131 1 198 1 3 1 135 1 206 9 139 1 78 1 210 2 112 4 215 1 180 1 230 4 89 2 91 1 25 1 288 2 240 1 241 3 243 1 31 4 32 1 33 5 192 2 101 2 
224 1 250 1 68 1 17 1 259 1 20 1 183 1 232 1 24 1 23 1 233 2 90 1 26 1 27 1 9 2 114 1 81 1 157 1 291 2 126 1 173 1 148 1 102 1 
224 1 68 1 164 1 259 1 20 1 183 1 21 1 232 1 23 2 233 1 24 1 90 1 26 1 265 1 27 1 9 1 114 1 157 1 291 1 126 1 294 1 173 1 148 2 
224 1 68 1 259 1 20 1 21 1 232 1 23 1 233 1 24 1 26 1 265 1 27 1 9 1 114 1 291 1 126 1 294 1 148 1 
68 2 164 1 259 1 72 1 9 1 114 2 115 1 148 1 177 1 224 1 150 1 225 1 226 1 20 2 19 1 183 1 24 2 233 1 23 1 291 1 157 1 96 1 30 1 
224 1 68 1 17 1 259 1 20 1 183 1 232 1 23 1 233 1 24 1 90 1 26 1 265 1 27 1 9 1 114 1 81 1 157 1 291 1 126 1 173 1 148 1 
195 1 
1 1 203 1 2 1 133 1 72 1 136 2 205 1 6 1 141 1 9 2 216 1 224 1 14 1 85 1 150 2 225 1 228 1 18 1 233 2 153 1 158 1 244 1 30 1 249 2 163 1 255 3 259 1 110 1 260 1 261 1 41 1 47 1 115 1 281 1 184 1 185 2 58 1 59 3 286 1 289 1 291 2 290 1 293 1 127 2 194 1 
163 1 203 1 255 3 110 1 260 1 205 1 136 2 6 1 47 1 216 1 85 1 18 1 281 1 283 1 184 1 153 1 185 2 59 3 289 1 290 1 244 1 292 1 
163 1 201 1 203 1 255 3 110 1 136 1 260 1 205 1 6 1 47 1 216 1 85 1 18 1 56 1 281 1 283 1 184 1 153 1 185 3 92 1 59 3 289 1 290 1 244 1 
163 1 85 1 255 2 203 1 18 1 136 1 205 1 281 1 260 1 6 1 153 1 184 1 185 2 59 2 289 1 216 1 47 1 244 1 290 1 292 1 268 1 
163 1 203 1 255 3 2 1 110 1 136 3 260 1 205 1 41 1 6 1 44 1 141 1 142 1 47 1 216 1 83 1 268 2 14 1 85 1 228 1 18 1 281 1 119 1 283 1 184 1 153 1 185 2 58 1 59 3 286 1 289 1 290 1 244 1 292 2 63 1 293 1 127 1 249 1 
163 1 203 1 255 2 2 1 260 1 205 1 41 1 6 1 141 1 47 1 216 1 14 1 85 1 18 1 228 1 281 1 184 1 153 1 185 2 58 1 59 2 286 1 289 1 244 1 290 1 293 1 127 1 249 1 
163 1 203 1 255 2 2 1 260 1 205 1 41 1 6 1 141 1 142 1 47 1 216 1 83 1 14 1 85 1 18 1 228 1 281 1 119 1 184 1 153 1 185 2 58 1 59 2 286 1 289 1 290 1 244 1 293 1 127 1 249 1 
163 1 203 1 255 2 2 1 260 1 205 1 41 1 6 1 141 1 142 1 47 1 216 1 83 1 14 1 85 1 18 1 228 1 281 1 119 1 184 1 153 1 185 2 58 1 59 2 286 1 289 1 290 1 244 1 293 1 127 1 249 1 
163 1 85 1 255 2 203 1 18 1 205 1 281 1 260 1 6 1 153 1 184 1 185 2 59 2 289 1 216 1 47 1 244 1 290 1 48 1 
163 1 203 1 255 2 2 1 260 1 205 1 136 1 41 1 6 1 141 1 142 1 47 1 216 1 268 1 83 1 14 1 85 1 228 1 18 1 281 1 119 1 184 1 153 1 185 2 58 1 59 2 286 1 289 1 290 1 244 1 292 1 63 1 293 1 127 1 249 1 
163 1 203 1 255 2 2 1 260 1 205 1 136 1 41 1 6 1 141 1 142 1 47 1 216 1 268 1 83 1 14 1 85 1 228 1 18 1 281 1 119 1 184 1 153 1 185 2 58 1 59 2 286 1 289 1 290 1 244 1 292 1 63 1 293 1 127 1 249 1 
201 1 203 1 2 2 205 1 136 4 74 1 6 1 212 2 216 1 14 1 85 1 228 1 18 1 22 1 153 1 92 1 29 1 244 1 249 1 163 1 105 1 255 4 165 1 110 2 260 1 41 2 47 1 46 2 268 2 269 1 56 1 281 1 122 1 184 1 185 3 58 1 59 4 286 1 289 1 125 2 290 1 292 2 293 1 127 1 
198 1 109 2 206 10 262 1 263 1 210 2 112 5 214 1 217 1 267 2 12 3 274 1 230 4 89 2 154 1 237 1 246 1 247 2 33 5 65 1 192 2 101 2 
198 1 109 2 206 10 262 1 263 1 210 2 112 5 214 1 217 1 267 2 12 3 274 1 230 4 89 2 154 1 237 1 246 1 247 2 33 5 65 1 192 2 101 2 
198 1 109 2 135 2 206 20 262 1 210 1 112 9 214 1 215 2 217 1 267 2 12 3 180 2 274 1 230 2 89 1 154 1 91 2 237 1 288 2 240 2 241 2 243 2 31 2 246 1 247 2 32 2 33 11 65 1 192 1 101 1 
198 1 109 2 206 10 262 1 263 1 210 2 112 5 214 1 217 1 267 2 12 3 274 1 230 4 89 2 154 1 237 1 246 1 247 2 33 5 192 2 193 1 101 2 
198 1 109 2 206 10 262 2 112 5 210 1 214 1 217 1 267 2 12 3 274 1 230 2 89 1 154 1 237 2 246 1 247 2 33 5 65 1 192 1 101 1 
67 1 257 1 259 1 72 1 206 2 207 1 76 1 6 2 7 1 210 1 112 1 43 1 9 2 270 1 224 1 225 1 280 1 281 2 230 2 121 1 89 1 233 2 184 2 291 2 95 1 33 1 248 1 192 1 66 1 101 1 102 2 
224 1 250 1 259 1 232 1 233 2 90 1 8 1 265 1 27 1 9 2 114 1 291 2 126 1 116 1 147 1 
224 1 259 1 232 1 233 1 90 1 265 1 27 1 9 1 114 1 291 1 126 1 147 1 295 1 
224 1 225 1 150 1 204 1 259 1 72 1 233 1 9 1 114 1 291 1 96 1 30 1 115 1 116 1 
224 1 265 1 27 1 9 1 114 1 291 1 259 1 126 1 147 1 116 1 232 1 233 1 90 1 8 1 
106 1 
92 1 179 1 56 1 127 1 231 1 249 1 77 1 
58 1 141 1 286 1 228 1 293 1 127 1 249 1 
224 1 225 2 150 1 259 2 72 1 228 1 138 1 233 1 58 1 211 1 80 1 286 1 9 1 291 1 293 1 160 1 222 1 
105 1 133 1 258 1 165 1 109 1 261 1 264 1 171 1 212 3 45 2 214 1 267 1 228 1 56 1 22 1 122 1 58 1 92 2 286 1 239 2 29 1 187 2 247 1 293 1 127 2 249 2 
105 1 255 1 165 1 228 1 22 1 122 1 91 1 264 2 58 1 59 1 142 1 286 1 29 1 240 1 215 1 243 1 220 1 293 1 127 1 32 1 249 2 
228 1 56 1 231 1 77 1 58 1 92 1 286 1 293 1 127 1 249 1 
0 1 55 2 234 2 91 2 264 2 171 1 92 5 212 10 45 5 239 5 187 5 32 2 127 5 51 2 249 5 
92 1 59 1 255 1 56 1 110 1 136 1 
1 1 255 3 133 2 259 1 72 1 110 2 136 4 261 2 75 2 9 4 115 1 224 1 225 1 150 2 151 1 228 2 120 1 233 4 123 1 58 2 59 3 286 2 62 1 158 1 291 4 30 1 293 1 127 2 249 2 
165 1 22 1 122 1 13 1 
133 1 228 1 56 2 261 1 58 1 92 4 212 4 45 2 286 1 239 2 288 1 187 2 293 1 127 2 249 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
100 1 296 1 
84 1 70 1 
131 1 198 1 3 4 109 1 108 1 135 1 206 24 112 10 210 2 214 1 215 2 220 1 267 1 51 1 178 1 180 1 55 2 277 1 230 4 89 2 234 2 91 4 288 1 240 2 241 5 243 2 31 9 245 1 247 1 33 14 32 5 192 2 101 2 
198 1 109 1 135 1 206 8 112 4 210 2 214 1 215 1 267 1 180 1 227 1 230 4 89 2 91 1 288 1 240 1 241 2 243 1 31 2 247 1 32 1 33 4 192 2 101 2 
198 1 3 1 109 1 135 1 206 15 112 7 210 2 214 1 215 2 220 1 267 1 180 1 227 1 230 4 89 2 91 3 288 1 240 2 241 3 243 2 31 4 247 1 32 3 33 8 192 2 101 2 
198 1 3 3 109 1 135 1 206 15 112 7 210 2 214 1 215 2 220 1 267 1 180 1 227 1 230 4 89 2 91 3 288 1 240 2 241 4 243 2 31 7 247 1 32 3 33 8 192 2 101 2 
131 1 198 1 3 4 109 1 108 1 135 1 206 24 112 10 210 2 214 1 215 2 220 1 267 1 51 1 178 1 180 1 55 2 277 1 230 4 89 2 234 2 91 4 288 1 240 2 241 5 243 2 31 9 245 1 247 1 33 14 32 5 192 2 101 2 
198 1 109 1 230 2 206 2 89 1 210 1 112 1 214 1 247 1 267 1 33 1 192 1 101 1 
198 1 227 1 109 1 230 4 206 2 89 2 210 2 112 1 214 1 267 1 247 1 33 1 192 2 101 2 
198 1 109 1 230 4 206 2 89 2 263 1 210 2 112 1 214 1 267 1 247 1 33 1 192 2 101 2 
180 1 3 3 135 2 206 7 91 1 112 4 215 3 240 1 241 3 243 3 31 6 32 1 33 3 
198 1 109 1 230 4 206 2 89 2 263 1 210 2 112 1 214 1 267 1 247 1 33 1 192 2 101 2 
131 1 180 1 3 1 135 1 206 8 230 4 89 2 91 1 112 4 210 2 288 1 240 1 215 1 241 2 243 1 31 3 32 1 33 4 192 2 101 2 
179 1 180 1 135 1 206 6 91 1 112 3 288 1 215 1 240 1 241 2 243 1 31 2 32 1 33 3 
55 1 227 1 3 1 230 2 206 4 89 1 234 1 91 1 112 2 210 1 241 1 31 2 32 1 33 2 192 1 51 1 101 1 
109 1 267 1 247 1 33 1 206 2 112 1 
252 1 131 2 3 4 135 1 206 23 167 1 112 12 210 2 215 2 267 2 172 1 51 2 180 1 55 2 230 4 89 2 234 2 91 3 288 1 240 1 241 5 243 2 31 9 247 2 32 3 33 11 128 1 192 2 101 2 
247 1 206 1 112 1 
267 1 206 1 33 1 
0 1 55 1 227 1 3 1 230 2 206 6 89 1 234 1 91 1 210 1 112 3 241 2 31 3 32 1 33 3 192 1 51 1 101 1 
198 1 109 1 230 2 206 2 89 1 210 1 112 1 214 1 247 1 267 1 33 1 192 1 101 1 
3 1 206 6 91 1 112 3 240 1 215 1 241 1 243 1 31 2 32 1 33 3 
131 1 180 1 3 1 135 1 167 1 206 3 230 2 89 1 112 2 210 1 215 1 241 1 243 1 31 2 33 1 192 1 101 1 
198 1 3 2 230 2 206 10 89 1 91 2 210 1 112 5 215 2 240 1 241 3 243 2 220 1 31 5 33 5 32 2 192 1 101 1 
198 1 55 1 31 1 3 1 206 2 33 2 32 1 230 2 89 1 192 1 210 1 101 1 
198 1 55 1 3 1 230 2 206 4 89 1 234 1 91 1 112 2 210 1 241 1 31 2 32 1 33 2 192 1 51 1 101 1 
131 1 198 1 3 1 167 1 206 3 230 6 89 3 263 1 112 2 210 3 215 1 241 1 243 1 31 2 33 1 192 3 101 3 
131 1 198 1 109 1 3 2 135 1 206 22 263 1 112 11 210 4 215 1 267 3 221 1 51 2 149 1 180 1 276 1 55 2 227 1 230 8 89 4 234 2 91 3 288 1 240 1 241 3 243 1 31 5 247 3 33 11 32 3 192 4 101 4 
197 1 144 1 290 1 281 1 117 1 6 1 184 1 
251 1 272 1 85 1 197 1 132 1 94 1 49 1 35 1 
224 1 179 1 225 1 150 1 9 1 291 1 259 1 72 1 30 1 115 1 233 1 
165 1 166 1 
165 1 166 1 
165 1 166 1 
105 1 255 2 71 1 165 1 259 1 72 1 136 1 75 1 138 1 80 1 9 1 224 1 52 1 15 1 225 4 181 1 56 1 22 1 122 1 233 1 92 1 59 2 29 1 289 1 291 1 190 1 
105 1 255 2 71 1 165 1 259 1 72 1 136 1 75 1 138 1 80 1 9 1 224 1 52 1 15 1 225 4 118 1 56 1 22 1 122 1 233 1 92 1 59 2 29 1 289 1 291 1 
161 1 
224 1 150 1 225 1 72 1 259 2 285 1 138 1 233 1 79 1 9 1 291 1 160 1 129 1 
165 1 166 1 
69 1 255 3 71 1 134 1 110 1 136 2 77 1 42 1 80 1 9 1 82 1 150 1 225 2 151 1 228 2 118 1 56 1 231 1 233 1 92 1 58 2 59 3 286 2 289 1 291 1 293 2 127 1 249 1 
161 1 
250 1 224 2 150 1 225 2 259 3 72 2 57 1 138 1 233 2 235 1 79 1 9 2 291 2 30 1 115 1 129 1 
224 1 225 1 72 1 259 2 87 1 57 1 138 1 233 1 235 1 79 1 9 1 291 1 129 1 
224 1 150 1 9 1 291 1 259 1 126 1 232 1 233 1 
250 1 224 1 225 1 72 1 259 1 121 1 233 2 76 1 265 1 9 2 291 2 
250 1 196 1 259 4 72 3 138 1 79 1 9 2 115 1 176 1 224 3 225 4 150 1 57 1 121 1 233 3 235 1 291 3 30 1 129 1 
250 1 196 1 259 4 72 3 138 1 79 1 9 2 115 1 224 3 225 4 150 1 275 1 57 1 121 1 233 3 235 1 291 3 30 1 129 1 
165 1 166 1 
224 1 225 1 72 1 259 2 75 1 285 1 138 1 233 1 79 1 9 1 291 1 160 1 129 1 
179 1 124 1 99 1 175 1 
124 1 157 1 99 1 183 1 148 1 175 1 23 1 
20 1 148 1 24 1 
183 1 73 1 23 3 186 1 93 2 156 1 124 1 81 1 157 1 99 1 148 3 175 1 
157 1 183 1 294 1 64 1 148 1 23 2 
253 1 242 1 218 1 157 1 81 1 183 1 34 1 111 1 148 1 175 1 23 1 
157 1 81 1 99 1 183 1 148 1 175 1 23 1 
124 1 157 1 81 1 99 2 183 1 148 1 23 1 
183 2 23 2 113 1 97 1 81 1 157 2 99 1 148 2 175 1 297 1 
183 1 88 1 23 3 236 1 124 1 81 1 157 1 99 1 159 1 294 2 34 1 148 3 175 2 
104 1 157 1 81 1 183 1 148 1 232 1 23 1 
273 1 157 1 81 1 183 1 294 1 64 1 148 1 23 2 
124 1 157 1 81 1 99 1 183 1 148 1 175 1 23 1 
183 1 73 1 23 4 236 1 186 1 93 1 124 2 157 1 99 2 146 1 294 2 34 1 148 4 175 3 
38 1 152 1 183 1 23 2 124 1 81 1 157 1 189 1 99 1 294 1 148 2 175 1 
183 1 73 1 23 3 186 2 93 2 124 1 81 1 157 1 98 1 99 1 148 3 175 1 
28 2 278 1 175 2 209 1 
157 1 81 1 183 1 5 1 148 1 23 1 
124 1 157 1 81 1 99 1 183 1 294 1 88 1 148 2 175 1 23 2 
200 1 
124 1 157 1 81 1 99 1 183 1 148 1 175 1 23 1 
183 1 88 1 23 3 93 1 124 1 81 1 157 1 99 1 294 1 148 3 175 1 
146 1 34 1 175 1 236 1 
99 1 175 1 

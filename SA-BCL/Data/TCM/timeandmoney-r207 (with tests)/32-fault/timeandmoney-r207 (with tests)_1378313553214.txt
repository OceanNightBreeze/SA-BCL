#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 208 (305,326) (305,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 208 (305,326) (305,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 208 (305,326) (305,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 208 (305,326) (305,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (45,145) (45,145) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 210 131 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 210 131 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (81,247) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (81,247) (81,247) 19 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 121 90 313 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 121 90 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 234 33 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 268 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (76,82,196,213) (76,82,196,213) (49,165,240) (49,165,240) (49,165,240) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (76,82,196,213) (76,82,196,213) (49,165,240) (49,165,240) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (76,82,196,213) (76,82,196,213) (49,165,240) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (76,82,196,213) (76,82,196,213) (49,165,240) (49,165,240) (49,165,240) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 285 288 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 175 266 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 130 36 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 220 130 36 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 220 130 133 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 130 36 58 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 130 36 58 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 172 39 11 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 172 39 11 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 172 39 11 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 172 39 11 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 172 39 11 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 234 (95,109) 115 291 (134,166) 108 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (81,247) (81,247) 19 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 285 288 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 121 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 234 (75,179) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 234 (95,109) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 234 (95,109) 115 291 (134,166) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (81,247) (81,247) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 48 (98,309) (98,309) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
15 1 312 1 318 1 42 1 227 1 26 1 326 1 208 1 213 1 305 1 196 1 82 1 277 1 306 1 
15 1 312 1 318 1 42 1 227 1 26 1 326 1 208 1 213 1 305 1 196 1 82 1 277 1 306 1 
15 1 312 1 318 1 42 1 227 1 26 1 326 1 208 1 213 1 305 1 196 1 82 1 277 1 306 1 
15 1 312 1 318 1 42 1 227 1 26 1 326 1 208 1 213 1 305 1 196 1 82 1 277 1 306 1 
15 1 21 1 156 2 318 4 204 2 227 1 48 2 26 1 149 1 208 1 76 3 210 1 237 1 213 1 196 4 82 1 
145 1 300 1 213 1 42 1 318 1 196 1 277 1 82 1 227 1 45 1 
156 1 318 3 42 1 227 1 48 1 76 1 237 1 213 2 196 3 98 1 82 2 197 1 309 1 
15 1 21 1 156 4 246 1 131 1 2 1 318 9 42 1 204 2 227 1 26 1 72 1 48 4 149 1 208 1 76 7 210 1 237 3 213 2 196 9 82 2 197 1 
15 1 21 1 156 4 246 1 131 1 2 1 318 9 42 1 204 2 227 1 26 1 72 1 48 4 149 1 208 1 76 7 210 1 237 3 213 2 196 9 82 2 197 1 
56 1 
225 1 
28 2 93 2 221 2 61 2 135 2 294 2 92 1 123 1 
154 1 286 2 128 1 203 1 3 1 205 1 294 2 248 1 92 1 93 2 95 1 212 1 135 2 53 1 256 1 217 2 55 1 263 1 106 1 60 1 221 3 61 2 63 2 70 1 111 2 186 1 112 1 271 2 321 1 28 3 327 1 30 1 153 1 276 1 34 1 199 1 123 1 
81 1 
242 1 264 1 221 1 24 1 247 1 71 1 6 1 28 1 73 1 7 1 93 1 328 1 150 1 238 1 81 1 170 1 
242 1 264 2 61 1 221 1 24 1 247 1 71 2 294 1 28 1 73 1 93 1 328 1 150 1 135 1 238 1 81 1 170 1 
296 1 264 1 151 1 142 1 71 1 
242 1 264 1 314 1 142 1 247 1 71 1 73 1 151 1 81 1 124 1 
264 1 142 1 71 1 
264 1 151 1 81 1 247 1 71 1 
242 1 
242 1 264 1 314 1 142 1 247 1 71 1 73 1 252 1 151 1 81 1 
201 2 242 2 284 1 247 1 206 4 251 1 303 2 10 2 100 1 174 1 102 3 19 1 264 4 110 1 142 2 267 2 314 1 65 1 180 1 182 2 71 4 73 2 235 1 151 2 78 1 195 1 120 1 81 1 
56 1 
221 2 61 1 185 1 294 1 189 1 92 1 28 2 93 2 150 1 135 1 198 1 
59 1 51 1 209 1 
88 1 221 1 128 1 63 1 111 1 186 1 271 1 92 1 321 1 28 1 327 1 95 1 153 1 53 1 256 1 34 1 
128 1 221 2 63 1 186 1 111 1 294 1 271 1 321 1 28 2 147 1 327 1 93 1 209 1 95 1 135 1 153 1 53 1 256 1 34 1 241 1 
221 5 61 1 269 1 185 1 294 4 92 1 232 1 207 1 28 5 147 1 7 1 93 5 135 4 241 2 
281 1 28 2 93 2 150 1 221 2 119 1 135 2 294 2 
28 3 93 3 61 1 221 3 135 3 294 3 92 1 241 1 
28 1 93 1 150 1 221 1 119 1 135 1 294 1 
61 1 221 1 185 1 294 1 189 1 28 1 93 1 150 1 135 1 
154 1 286 2 128 1 203 1 3 1 205 1 293 1 294 3 92 1 93 3 95 1 212 1 135 3 53 1 256 1 170 1 217 1 55 1 103 1 263 1 264 1 60 1 61 2 221 4 63 1 24 1 186 1 185 1 71 1 111 1 112 1 271 1 321 1 28 4 327 1 147 1 30 1 328 1 150 2 238 1 153 1 198 1 34 1 241 1 123 1 
207 1 28 2 7 1 93 2 221 2 135 1 294 1 92 1 241 1 
103 1 242 1 264 1 61 1 221 3 245 1 24 1 185 1 71 1 294 3 28 3 147 1 93 3 150 1 328 1 238 1 135 3 170 1 241 2 
59 1 61 1 221 2 185 1 294 2 28 2 93 2 209 1 135 2 241 1 
221 1 128 1 63 1 111 1 186 1 271 1 92 1 321 1 28 1 327 1 95 1 153 1 53 1 256 1 34 1 
221 1 128 1 63 1 111 1 186 1 271 1 92 1 321 1 28 1 74 1 75 1 153 1 53 1 256 1 34 1 
85 1 59 1 154 1 263 1 1 1 60 2 286 2 203 1 182 1 205 1 46 1 51 1 209 1 212 1 80 1 217 2 55 1 
281 1 28 1 93 1 150 1 328 1 221 1 135 1 294 1 
94 1 211 1 
94 1 211 1 
218 1 44 1 
218 1 44 1 
218 1 44 1 
143 1 94 1 211 1 
218 1 17 1 144 1 44 1 162 1 211 2 94 2 
94 1 211 1 320 1 
94 1 211 1 320 1 
94 1 211 1 320 1 
94 1 211 1 160 1 
94 1 211 1 160 1 
94 1 211 1 160 1 
264 1 313 1 254 1 94 1 211 1 255 1 121 1 90 1 71 1 
254 1 94 1 211 1 255 1 121 1 90 1 
15 1 208 1 26 1 
300 1 
300 1 
300 1 
300 1 
242 1 219 1 264 3 314 1 142 1 71 3 73 1 151 3 258 1 331 1 84 1 57 1 
219 1 242 1 264 3 314 1 142 2 71 3 273 1 296 1 73 1 233 1 299 1 151 3 84 1 
242 3 0 2 247 1 161 2 206 3 253 2 303 1 10 1 258 1 57 1 101 1 102 2 104 1 264 3 267 1 65 1 182 1 225 4 71 3 73 1 191 1 151 2 77 1 80 1 195 1 81 1 278 1 331 1 84 1 
242 5 0 4 247 1 161 4 206 5 167 1 253 4 303 1 10 1 54 1 258 1 57 1 101 2 102 4 104 2 264 3 267 1 65 1 182 2 225 8 71 3 323 1 73 1 191 2 151 2 77 1 80 2 195 2 81 1 278 2 331 1 84 1 
56 1 
183 1 34 1 
132 1 
128 1 256 1 34 1 
307 1 34 1 
256 1 34 1 
29 1 234 1 128 1 256 1 33 1 34 1 
174 1 16 1 86 1 106 4 60 3 223 1 182 1 163 1 187 1 113 2 235 1 304 1 195 1 120 1 136 3 139 2 217 7 
174 1 16 1 86 1 106 4 60 3 223 1 182 1 163 1 187 1 113 2 235 1 304 1 195 1 120 1 136 3 139 2 217 7 
174 1 16 1 86 1 106 4 60 3 23 1 223 1 182 1 163 1 187 1 113 2 235 1 304 1 195 1 120 1 136 3 139 2 217 7 
113 1 16 1 106 1 268 1 223 2 217 1 
86 1 286 2 203 1 205 1 163 1 298 1 304 1 136 3 139 2 217 9 55 1 174 1 16 1 263 1 19 1 106 5 60 4 223 1 182 2 113 1 324 1 235 1 195 2 120 1 
63 1 64 1 42 1 318 1 227 1 111 1 271 1 47 1 5 1 49 1 297 1 165 1 76 1 116 1 32 1 213 1 196 2 82 1 240 1 
262 1 35 1 63 1 42 1 318 2 111 1 271 1 47 1 5 1 49 1 297 1 165 1 76 2 116 1 32 1 213 1 196 3 239 1 82 1 
35 1 63 1 318 1 42 1 111 1 271 1 47 1 5 1 49 1 76 2 116 1 32 1 196 2 239 1 
89 1 202 1 42 2 47 2 5 2 213 1 53 1 137 1 256 1 262 1 63 1 67 1 318 1 111 1 186 1 271 1 230 1 32 2 153 1 196 1 82 1 34 1 279 1 
35 1 63 1 42 1 318 1 227 1 111 1 271 1 47 1 5 1 49 1 297 1 165 1 76 1 116 1 32 1 213 1 196 2 82 1 240 1 
310 1 
102 1 264 1 285 1 314 1 142 2 267 1 63 1 288 1 71 1 111 1 319 1 271 1 206 1 77 1 10 1 303 1 153 1 100 1 
242 2 158 2 6 1 93 1 7 1 252 1 170 1 257 1 215 1 264 2 175 1 221 1 314 1 142 2 315 1 24 1 71 2 28 1 190 1 73 2 328 1 150 1 238 1 333 1 
242 2 264 2 221 1 181 1 158 3 315 1 24 1 71 2 6 1 28 1 190 1 73 2 7 1 93 1 150 1 328 1 238 1 170 1 257 1 215 1 333 1 
242 2 158 3 6 1 93 1 7 1 252 1 170 1 257 1 215 1 264 2 175 1 221 1 314 1 266 1 142 2 315 1 181 1 24 1 71 2 28 1 190 1 73 2 328 1 150 1 238 1 333 1 
264 1 252 1 142 1 314 1 71 1 
242 2 158 3 161 1 91 2 206 1 6 1 7 1 93 1 303 1 10 1 170 1 257 1 215 1 100 1 260 1 102 1 18 2 175 1 264 2 220 1 221 1 62 1 266 1 142 2 314 1 267 1 181 1 315 1 24 1 225 1 71 2 228 2 28 1 190 1 148 1 73 2 328 1 150 1 238 1 333 1 
36 1 242 2 130 1 158 3 161 1 91 2 206 1 6 1 93 1 7 1 303 1 10 1 170 1 257 1 215 1 100 1 260 1 102 1 18 2 175 1 264 2 220 1 221 1 266 1 142 2 314 1 267 1 181 1 315 1 24 1 71 2 228 2 28 1 190 1 148 1 73 2 328 1 150 1 238 1 79 1 333 1 
36 1 242 2 130 1 158 2 161 1 91 1 206 1 6 1 93 1 7 1 303 1 10 1 170 1 257 1 215 1 100 1 260 1 102 1 18 1 175 1 264 2 220 1 221 1 266 1 142 2 314 1 267 1 315 1 24 1 71 2 228 1 28 1 190 1 148 1 73 2 328 1 150 1 238 1 79 1 333 1 
242 2 155 1 130 1 158 2 249 1 91 1 206 1 6 1 93 1 7 1 133 1 97 1 303 1 10 1 170 1 257 1 215 1 100 1 102 1 18 1 175 1 264 2 220 1 221 1 266 1 142 2 314 1 267 1 315 1 24 1 225 1 71 2 229 1 28 1 190 1 73 2 328 1 150 1 238 1 333 1 
36 1 242 2 130 1 158 4 161 1 91 2 206 1 6 1 93 1 7 1 303 1 10 1 170 1 257 1 100 1 215 1 260 1 58 1 102 1 18 2 264 2 175 2 220 1 221 1 314 1 267 1 266 2 142 3 181 2 315 1 24 1 71 2 228 2 28 1 190 1 148 1 73 2 328 1 150 1 79 1 238 1 333 1 
36 1 242 2 130 1 158 4 161 1 91 2 206 1 6 1 93 1 7 1 303 1 10 1 170 1 257 1 100 1 215 1 260 1 58 1 102 1 18 2 264 2 175 2 220 1 221 1 314 1 267 1 266 2 142 3 181 2 315 1 24 1 71 2 228 2 28 1 190 1 148 1 73 2 328 1 150 1 79 1 238 1 333 1 
242 2 158 3 249 1 91 2 206 1 6 1 7 1 93 1 97 1 303 1 10 1 170 1 257 1 215 1 100 1 102 1 18 2 175 1 264 2 220 1 221 1 62 1 266 1 142 2 314 1 267 1 181 1 315 1 24 1 225 1 71 2 229 2 28 1 190 1 73 2 328 1 150 1 238 1 333 1 
154 1 263 1 286 2 212 1 203 1 205 1 56 1 55 1 46 1 
154 2 286 4 287 1 203 2 205 2 4 1 92 1 163 1 51 7 209 7 212 1 169 1 136 1 217 10 173 1 55 2 101 2 59 1 263 2 104 2 106 7 60 3 231 1 272 2 150 1 30 1 31 1 195 2 276 1 198 1 125 2 
154 1 127 1 88 1 128 1 287 1 286 2 203 1 205 1 294 1 92 1 93 1 95 1 212 1 135 1 53 1 256 1 217 2 55 1 59 1 263 1 106 1 60 1 221 2 63 1 186 1 111 1 271 1 321 1 28 2 327 1 147 1 30 1 236 1 153 1 276 1 34 1 200 1 241 1 
154 2 3 1 163 2 93 1 95 1 256 1 101 1 263 2 104 1 106 3 178 1 111 1 186 1 271 1 28 2 30 1 274 1 118 1 195 1 34 1 286 4 287 1 128 1 203 2 205 2 294 1 51 2 209 2 212 2 134 1 135 1 53 1 136 2 217 5 308 1 55 2 59 2 60 2 221 2 63 1 321 1 147 1 327 1 153 1 241 1 
35 1 280 1 154 2 286 4 202 1 157 1 203 2 205 2 294 1 46 1 93 1 96 1 212 2 135 1 53 2 256 2 217 2 55 2 263 2 106 1 60 1 221 1 63 8 64 1 317 1 184 1 70 2 186 2 111 8 271 7 28 1 30 1 153 2 275 1 276 1 332 1 34 3 241 1 279 1 
154 1 286 2 287 1 203 1 205 1 294 1 51 1 93 1 209 1 212 1 135 1 217 3 55 1 101 1 59 1 263 1 104 1 106 1 60 2 61 1 221 1 182 1 185 1 28 1 194 1 195 1 80 1 
59 1 154 1 263 1 106 2 286 2 203 1 205 1 46 1 163 1 250 1 51 1 209 1 212 1 195 1 136 1 217 2 55 1 101 1 
59 1 154 1 263 1 1 1 60 2 286 2 203 1 182 1 205 1 46 1 51 1 209 1 212 1 80 1 217 2 55 1 
154 1 286 2 203 1 205 1 46 1 163 1 51 2 209 2 212 1 136 1 217 4 55 1 101 1 59 2 104 1 263 1 106 2 60 2 182 1 195 1 80 1 
59 1 154 1 263 1 106 2 286 2 203 1 317 1 205 1 163 1 250 1 51 1 209 1 212 1 195 1 136 1 217 2 55 1 101 1 
59 1 154 1 263 1 1 1 60 2 286 2 203 1 317 1 182 1 205 1 51 1 209 1 212 1 80 1 217 2 55 1 
59 1 154 1 263 1 104 1 106 2 286 2 203 1 317 1 205 1 163 1 51 1 209 1 212 1 195 1 136 1 217 2 55 1 101 1 
59 1 154 1 263 1 104 1 106 2 286 2 203 1 205 1 163 1 51 1 209 1 212 1 195 1 136 1 217 2 55 1 101 1 
154 1 128 1 286 2 203 1 3 1 205 1 92 1 95 1 212 1 53 1 256 1 217 2 55 1 263 1 106 1 60 1 221 1 63 1 186 1 111 1 271 1 321 1 28 1 327 1 30 1 153 1 276 1 34 1 
37 1 221 1 128 1 63 1 111 1 186 1 271 1 321 1 28 1 74 1 75 1 153 1 53 1 256 1 34 1 
59 1 154 1 263 1 104 1 106 2 287 1 286 2 203 1 205 1 163 1 51 1 209 1 212 1 195 1 136 1 217 2 55 1 101 1 
154 1 128 1 286 2 203 1 3 1 205 1 163 1 51 1 209 1 95 1 212 1 136 1 53 1 256 1 217 2 55 1 101 1 59 1 263 1 104 1 106 2 221 1 63 1 64 1 186 1 111 1 271 1 321 1 28 1 327 1 274 1 195 1 34 1 
154 1 286 2 287 1 203 1 205 1 294 1 163 1 93 1 51 1 209 1 212 1 135 1 136 1 217 2 55 1 101 1 59 1 263 1 104 1 106 2 61 1 221 1 185 1 28 1 195 1 329 1 
263 1 298 1 286 2 39 1 129 1 203 1 205 1 11 1 172 1 55 1 
263 1 298 1 286 2 39 1 129 1 203 1 205 1 11 1 172 1 55 1 
263 1 298 1 286 2 39 1 129 1 203 1 205 1 11 1 172 1 55 1 
263 1 298 1 286 2 39 1 129 1 203 1 205 1 11 1 172 1 55 1 
263 1 298 1 286 2 39 1 129 1 203 1 205 1 11 1 172 1 55 1 
154 1 126 1 287 1 286 2 157 1 203 1 205 1 164 1 93 2 8 1 212 1 53 1 256 1 217 2 13 1 55 1 263 1 105 1 106 1 60 1 221 2 63 2 70 2 186 1 111 2 271 2 28 2 30 1 275 1 276 1 34 1 
35 1 261 1 63 2 64 1 69 1 41 1 111 2 271 2 47 1 297 1 116 1 
35 1 63 1 41 1 111 1 271 1 47 1 297 1 302 1 116 1 
63 1 202 1 69 1 186 1 111 1 271 1 47 1 230 1 153 1 53 1 256 1 138 1 34 1 279 1 
261 1 35 1 297 1 116 1 63 1 41 1 69 1 111 1 271 1 47 1 
122 1 
56 1 
102 1 242 1 142 1 314 1 267 1 225 1 228 1 161 1 206 1 73 1 148 1 10 1 303 1 100 1 260 1 
128 1 291 1 206 1 166 1 303 1 10 1 53 2 256 1 100 1 109 1 108 1 142 1 63 1 267 1 66 1 183 2 111 1 186 1 271 1 29 1 115 1 234 1 77 1 153 1 34 3 
242 3 0 5 290 1 161 3 206 6 253 5 9 1 303 1 10 1 100 1 101 2 102 4 104 2 267 1 182 2 225 6 270 1 25 1 188 1 272 1 195 2 80 2 330 1 125 1 
102 1 174 1 201 2 19 1 264 1 267 1 182 1 247 1 71 1 206 2 235 1 10 1 303 1 195 1 120 1 79 1 81 1 100 1 
102 1 242 1 110 1 267 1 180 1 206 1 73 1 10 1 303 1 100 1 
102 2 104 1 242 2 0 2 182 1 225 4 161 2 206 2 191 1 253 2 195 1 80 1 101 1 
242 1 73 1 142 1 314 1 81 1 247 1 
102 1 285 1 314 1 142 2 63 1 267 1 288 1 111 1 319 1 271 1 295 1 206 1 77 1 10 1 303 1 153 1 100 1 
154 1 286 2 128 1 203 1 3 1 205 1 294 2 92 1 93 2 95 1 212 1 135 2 53 1 256 1 217 1 55 1 263 1 60 1 221 3 61 2 63 1 111 1 186 1 271 1 112 1 321 1 28 3 327 1 30 1 153 1 34 1 123 1 
102 1 242 2 267 1 225 2 161 1 319 1 206 1 73 1 253 1 77 1 10 1 303 1 100 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
254 1 121 1 
94 1 211 1 
174 1 263 2 86 1 106 4 60 4 286 4 203 2 182 1 205 2 163 1 113 1 325 1 235 1 304 1 195 1 120 1 136 3 139 2 217 8 55 2 
56 1 
263 1 104 1 106 2 60 2 286 2 203 1 182 1 205 1 301 1 195 1 80 1 217 4 55 1 101 1 
272 1 106 1 60 1 217 2 125 1 188 1 
86 1 286 2 203 1 205 1 4 1 163 2 304 1 169 1 136 6 139 4 217 26 55 1 101 2 174 2 19 1 104 2 263 1 106 13 60 13 182 5 113 1 272 2 325 1 235 2 31 1 120 2 80 2 195 5 125 2 
272 1 60 1 217 1 
106 1 217 1 125 1 
263 1 104 1 106 3 60 3 286 2 203 1 182 1 205 1 163 1 301 1 118 1 195 1 80 1 136 1 217 6 55 1 101 1 
286 2 203 1 290 1 205 1 163 1 298 1 9 1 136 1 217 12 55 1 101 2 263 1 104 2 106 6 60 6 182 2 25 1 270 1 188 1 272 1 195 2 80 2 330 1 125 1 
174 1 106 3 60 3 182 1 163 1 235 1 120 1 195 1 136 2 139 1 217 6 
174 1 263 1 86 1 106 1 60 2 177 1 286 2 203 1 205 1 163 1 325 1 235 1 304 1 136 2 139 1 217 3 55 1 
174 2 263 1 19 1 106 5 60 5 286 2 203 1 182 2 205 1 163 2 298 1 235 2 120 1 195 2 136 5 139 3 217 10 55 1 
263 1 106 2 286 2 203 1 205 1 163 1 298 1 195 1 136 1 217 2 55 1 101 1 
263 1 104 1 106 2 60 2 286 2 203 1 182 1 205 1 163 1 298 1 80 1 195 1 136 1 217 4 55 1 101 1 
174 1 263 3 106 1 60 2 177 1 141 1 286 6 203 3 205 3 163 1 325 1 298 1 235 1 136 2 139 1 217 3 55 3 
86 1 286 8 203 4 205 4 163 3 298 1 301 1 304 1 136 6 139 3 217 15 55 4 174 2 19 1 263 4 106 7 60 8 141 1 177 1 182 2 188 1 272 1 325 1 235 2 192 1 195 2 120 1 125 1 
86 1 286 4 203 2 290 1 205 2 163 4 298 1 9 1 304 1 136 8 139 4 217 24 55 2 101 2 174 2 19 1 263 2 104 2 106 14 60 10 182 4 25 1 270 1 188 1 113 1 272 1 325 1 235 2 120 2 195 5 80 1 330 1 125 1 
86 1 286 6 203 3 290 1 205 3 163 1 298 1 301 1 9 1 304 1 136 3 139 2 217 17 55 3 101 2 174 1 263 3 104 2 106 10 60 7 182 2 25 1 270 1 188 1 113 1 272 1 325 1 235 1 120 1 195 3 80 1 330 1 125 1 
86 1 286 6 203 3 290 1 205 3 163 1 298 1 301 1 9 1 304 1 136 4 139 3 217 19 55 3 101 2 174 1 263 3 104 2 106 9 60 10 182 3 270 1 25 1 188 1 113 1 272 1 325 1 235 1 120 1 195 3 80 2 330 1 125 1 
86 1 286 6 203 3 290 1 205 3 163 2 298 1 301 1 9 1 304 1 136 4 139 2 217 17 55 3 101 2 174 1 263 3 104 2 106 10 60 7 182 2 25 1 270 1 188 1 113 1 272 1 325 1 235 1 120 1 195 3 80 1 330 1 125 1 
86 1 286 4 203 2 290 1 205 2 163 4 298 1 9 1 304 1 136 8 139 4 217 24 55 2 101 2 174 2 19 1 263 2 104 2 106 14 60 10 182 4 25 1 270 1 188 1 113 1 272 1 325 1 235 2 120 2 195 5 80 1 330 1 125 1 
286 2 203 1 290 1 205 1 163 1 298 1 9 1 136 1 217 12 55 1 101 2 263 1 104 2 106 6 60 6 182 2 25 1 270 1 188 1 272 1 195 2 80 2 330 1 125 1 
86 1 286 8 203 4 290 1 205 4 163 2 298 1 301 1 9 1 304 1 136 5 139 3 217 18 55 4 101 2 174 1 263 4 104 2 106 10 60 8 182 2 270 1 25 1 188 1 113 1 272 1 325 2 235 1 120 1 195 3 80 1 330 1 125 1 
286 6 203 3 290 1 205 3 163 2 298 1 9 1 136 2 217 11 55 3 101 2 263 3 104 2 106 7 60 4 141 1 182 1 25 1 270 1 188 1 272 1 325 1 195 2 80 1 330 1 125 1 
174 3 86 1 106 3 60 4 182 1 163 3 235 3 304 2 120 1 195 1 136 6 139 3 217 7 
86 1 286 8 203 4 290 1 205 4 163 1 298 1 9 1 304 1 136 4 139 3 217 18 55 4 101 2 174 1 263 4 104 2 106 10 60 8 141 1 182 2 270 1 25 1 188 1 113 1 272 1 325 2 235 1 120 1 195 3 80 1 330 1 125 1 
28 1 207 1 93 1 7 1 176 1 221 1 92 1 
176 1 265 1 221 1 316 1 289 1 92 1 207 1 28 1 7 1 93 1 216 1 259 1 
63 1 153 1 111 1 271 1 56 1 
128 1 221 2 63 1 111 1 186 1 294 1 271 1 92 1 321 1 28 2 93 1 95 1 135 1 153 1 53 1 256 1 34 1 241 1 
128 2 294 1 92 1 93 2 95 1 135 2 53 1 256 2 307 1 107 1 221 2 63 1 24 1 186 1 111 1 271 1 321 1 27 1 28 2 328 1 150 1 34 3 241 1 
87 1 128 2 294 1 92 1 93 2 135 2 53 1 256 2 307 1 107 1 221 2 63 2 24 1 186 1 111 2 271 2 321 1 27 1 28 2 75 1 328 1 150 1 34 3 241 1 
27 1 264 1 234 1 142 1 179 1 63 1 183 1 111 1 71 1 271 1 34 1 
27 1 264 1 234 1 109 1 142 1 63 1 183 1 111 1 71 1 271 1 34 1 
63 1 53 1 184 1 186 1 111 1 271 1 
35 1 280 1 128 1 63 7 157 1 64 1 70 1 184 1 292 1 111 7 186 2 271 6 29 1 146 1 96 1 153 2 53 3 256 2 99 1 332 1 34 3 
154 2 86 1 3 1 163 1 92 3 93 1 8 1 95 1 256 1 174 2 19 1 263 2 106 7 182 3 111 1 186 1 271 1 113 1 28 2 274 1 120 2 195 3 198 1 34 1 286 4 287 1 128 1 203 2 205 2 294 1 51 1 209 1 212 2 134 1 304 1 135 1 53 1 136 5 139 4 217 14 55 2 59 1 60 7 221 2 63 1 64 1 321 1 327 1 150 1 235 2 241 1 
264 1 109 1 142 1 267 1 63 1 183 1 291 1 111 1 71 1 271 1 295 1 115 1 166 1 234 1 151 1 10 1 303 1 153 1 100 1 34 1 
128 1 63 1 66 1 184 1 111 1 186 1 271 1 29 1 234 1 53 2 256 1 34 1 
87 1 22 1 63 4 202 1 64 1 111 4 186 1 271 4 153 1 53 1 256 1 34 1 279 1 
20 1 128 1 63 2 224 1 111 2 226 1 186 1 271 2 27 1 146 1 53 2 256 1 99 1 34 1 
300 1 63 1 153 1 53 1 186 1 111 1 271 1 14 1 
35 1 63 2 64 1 157 1 111 2 186 1 271 2 164 1 53 1 256 1 34 1 
280 1 22 1 202 1 63 5 64 1 157 1 111 5 186 2 271 4 27 1 96 1 153 1 53 2 256 2 34 3 279 1 
280 1 22 1 202 1 63 5 64 1 157 1 111 5 186 2 271 4 27 1 168 1 153 1 53 2 256 2 34 3 279 1 
128 1 221 2 63 1 111 1 186 1 294 1 271 1 92 1 321 1 28 2 93 1 75 1 135 1 153 1 53 1 256 1 34 1 241 1 
128 1 63 1 292 1 111 1 186 1 271 1 27 1 29 1 146 1 53 2 256 1 99 1 34 1 
114 1 193 1 117 1 12 1 92 1 
103 1 242 1 243 1 264 2 24 1 247 1 71 2 114 1 73 1 150 1 328 1 151 1 152 1 193 1 117 1 238 1 81 1 214 1 170 1 12 1 
28 1 126 1 105 1 114 1 93 1 221 1 193 1 12 1 13 1 
243 1 193 1 214 1 
56 1 
213 1 318 1 196 1 98 1 82 1 309 1 
32 1 42 1 318 1 
311 1 244 1 213 1 318 3 196 3 98 1 82 1 227 1 83 2 140 1 309 1 
76 1 213 1 318 2 196 2 98 1 204 1 82 1 309 1 
15 1 208 1 21 1 156 1 213 1 318 1 196 1 82 1 227 1 26 1 48 1 
213 1 318 1 196 1 98 1 82 1 227 1 
213 1 318 1 196 1 98 1 82 1 227 1 48 1 309 1 
283 1 318 2 227 1 322 1 213 2 52 1 196 2 98 1 82 2 
156 1 246 1 318 3 227 1 72 1 48 1 76 2 237 1 213 1 196 3 98 1 82 1 309 1 
300 1 213 1 318 1 196 1 43 1 82 1 227 1 
156 1 318 4 204 1 227 1 48 1 149 1 76 2 237 1 213 2 196 4 98 1 82 2 309 1 
213 1 318 1 196 1 98 1 82 1 227 1 309 1 
244 1 156 1 68 1 318 4 48 1 76 2 237 1 213 1 196 4 98 2 82 1 83 1 140 1 309 2 
38 1 159 1 2 1 318 2 227 1 76 1 213 1 196 2 98 1 82 1 309 1 
244 2 40 1 213 1 318 3 196 3 98 1 82 1 227 1 83 2 140 1 309 1 
282 1 222 2 171 1 48 2 
213 1 318 1 196 1 82 1 227 1 334 1 
76 1 213 1 318 2 196 2 98 1 82 1 227 1 309 1 72 1 
50 1 
213 1 318 1 196 1 98 1 82 1 227 1 309 1 
76 1 213 1 318 3 196 3 98 1 82 1 227 1 83 1 72 1 309 1 
156 1 237 1 68 1 48 1 
98 1 

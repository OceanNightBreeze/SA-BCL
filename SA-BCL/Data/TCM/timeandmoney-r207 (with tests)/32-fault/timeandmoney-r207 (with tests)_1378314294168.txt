#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (86,214) (86,214) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (86,214) (86,214) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (86,214) (86,214) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (86,214) (86,214) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 74 269 235 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 74 269 235 237 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 74 269 235 (184,256) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 74 269 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 77 219 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 74 269 235 (184,256) (184,256) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 77 261 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 248 107 209 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (16,203) (155,257) (155,257) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 77 76 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 36 112 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 74 269 235 (184,256) (184,256) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 77 168 176 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 77 261 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 142 260 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (16,203) (155,257) (155,257) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (16,203) (155,257) (155,257) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (16,203) (155,257) (155,257) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 221 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 12 54 37 171 29 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 77 40 66 101 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 74 269 235 (184,256) (184,256) 158 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 77 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 77 168 176 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 74 269 235 237 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 110 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 74 148 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 74 148 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 74 148 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 229 57 198 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 229 12 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 74 148 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 12 54 37 171 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 74 148 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 1 119 1 247 1 214 1 131 1 243 1 190 1 15 1 46 1 140 1 86 1 
186 1 119 1 247 1 214 1 131 1 243 1 190 1 15 1 46 1 140 1 86 1 
186 1 119 1 247 1 214 1 131 1 243 1 190 1 15 1 46 1 140 1 86 1 
186 1 119 1 247 1 214 1 131 1 243 1 190 1 15 1 46 1 140 1 86 1 
264 2 4 1 135 1 172 2 119 1 60 1 205 1 243 1 46 1 283 3 207 3 47 1 285 1 246 1 186 4 131 4 289 1 38 1 
4 1 119 1 205 1 243 1 46 1 207 1 125 1 230 1 64 1 285 1 246 1 186 2 247 1 131 2 15 1 191 1 
264 1 4 1 119 2 243 2 46 1 283 1 207 2 246 1 186 3 89 1 131 3 15 1 289 1 
264 4 4 1 241 1 119 2 123 1 205 1 243 2 46 1 207 5 47 1 246 1 89 1 131 9 15 1 92 1 135 1 172 2 100 1 60 1 283 7 285 1 186 9 289 3 38 1 
264 4 4 1 241 1 119 2 123 1 205 1 243 2 46 1 207 5 47 1 246 1 89 1 131 9 15 1 92 1 135 1 172 2 100 1 60 1 283 7 285 1 186 9 289 3 38 1 
95 1 61 1 110 1 
95 1 18 1 33 2 
235 1 269 1 74 1 
235 1 269 1 74 1 237 1 
235 1 269 1 74 1 256 1 
95 1 134 1 120 1 204 1 61 1 103 1 45 1 245 1 126 1 287 1 53 1 165 1 71 1 151 1 
269 1 74 1 
275 1 120 1 36 1 83 1 151 1 
77 1 219 1 275 1 120 1 83 1 151 1 
120 1 83 1 151 1 
235 1 184 1 275 1 120 1 269 1 74 1 256 1 151 1 
95 1 
77 1 275 1 120 1 261 1 83 1 151 1 
209 1 275 2 120 3 248 1 7 1 107 1 26 1 83 1 197 1 109 1 151 3 
250 1 
250 1 
143 1 22 1 
143 1 22 1 
143 1 22 1 
250 1 
250 1 
143 1 22 1 250 2 
250 1 
250 1 
250 1 
250 1 
250 1 
95 1 201 2 239 2 120 2 155 1 44 2 257 1 141 2 30 1 185 1 210 1 70 2 16 1 250 2 151 2 
141 1 201 1 239 1 30 1 120 1 44 1 70 1 74 1 250 1 151 1 
285 1 205 1 38 1 
285 1 205 1 125 1 
285 3 273 1 3 1 125 1 159 1 38 2 
285 2 273 1 105 1 125 1 159 1 38 1 
285 2 273 2 125 1 38 1 159 1 
77 1 76 1 275 1 120 1 83 1 151 1 
112 1 275 2 120 2 211 1 36 1 62 1 83 1 151 2 
199 1 238 1 120 3 269 1 7 1 275 2 51 1 249 1 167 3 215 1 95 3 96 1 218 2 18 2 20 2 252 1 175 1 61 1 102 2 178 1 26 1 108 1 256 1 233 1 109 1 235 1 184 1 33 4 74 1 197 1 151 3 
199 1 238 1 120 2 7 1 275 1 51 1 249 1 167 3 215 1 95 2 96 1 218 2 18 2 20 2 252 1 175 1 102 2 178 1 26 1 108 1 109 1 233 1 113 1 33 4 197 1 151 2 
217 1 10 1 127 1 281 1 110 1 
48 1 281 1 
84 1 
281 1 196 1 
154 1 
5 1 281 1 196 1 
263 1 281 1 
1 4 199 3 2 2 202 1 158 1 271 14 162 1 128 2 11 1 164 2 51 3 55 8 19 5 58 1 223 1 236 2 35 1 288 6 
1 4 199 3 2 2 202 3 158 1 271 14 162 1 128 2 11 1 164 2 51 3 55 8 19 7 58 1 223 1 236 2 35 1 288 6 
1 4 199 3 2 2 202 1 158 1 271 14 162 1 128 2 11 1 164 2 51 3 55 8 19 5 58 1 223 1 236 2 35 1 288 6 193 1 
162 1 2 1 174 1 11 2 271 1 55 1 
199 2 1 2 153 1 2 1 202 1 117 1 158 1 8 1 271 9 162 1 128 1 51 2 11 1 164 1 277 1 55 5 19 3 58 1 21 2 179 1 180 1 236 1 35 1 288 4 
3 1 4 1 119 1 122 1 205 1 243 1 46 1 207 1 124 1 125 1 85 1 246 1 50 2 88 1 52 1 131 2 213 1 15 1 132 1 280 1 23 2 283 1 106 1 24 1 285 2 183 2 186 2 145 1 34 1 38 1 150 1 
3 1 4 1 119 1 78 1 205 1 243 1 207 1 124 1 125 1 85 1 246 1 50 1 274 1 52 1 131 3 213 1 15 1 280 1 23 1 24 1 106 1 283 2 285 2 183 1 186 3 145 1 34 1 189 1 38 1 150 1 
3 1 4 1 78 1 205 1 207 1 125 1 246 1 50 1 52 1 131 2 213 1 15 1 280 1 23 1 24 1 106 1 283 2 285 2 183 1 186 2 145 1 34 1 189 1 38 1 150 1 
265 1 240 1 119 1 243 1 156 1 161 1 50 1 274 1 131 1 15 2 17 1 59 1 281 1 23 1 106 2 24 2 181 1 183 1 145 1 186 1 34 2 150 1 196 1 
3 1 280 1 119 1 23 1 205 1 243 1 46 1 106 1 24 1 125 1 124 1 85 1 285 2 183 1 50 1 145 1 186 1 52 1 34 1 213 1 131 1 189 1 15 1 38 1 150 1 132 1 
272 1 
77 1 218 1 265 1 120 1 224 1 23 1 176 1 178 1 26 1 83 2 109 1 183 1 50 1 167 1 168 1 290 1 151 1 197 1 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
77 1 120 1 261 1 83 1 151 1 
134 1 120 2 204 1 103 1 45 1 245 1 26 1 126 1 109 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 290 1 75 1 151 2 197 1 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 126 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 75 1 151 2 
134 1 120 2 204 1 103 1 45 1 245 1 26 1 126 1 109 1 142 1 287 1 53 1 260 1 165 1 71 1 147 1 290 1 75 1 151 2 197 1 
1 3 199 4 238 3 2 1 153 4 202 3 117 4 43 2 121 1 8 1 270 1 271 33 128 1 164 1 51 4 277 4 90 1 215 3 55 17 220 1 19 6 58 1 252 3 173 1 21 8 222 1 101 1 226 1 180 4 25 1 231 1 66 1 67 2 182 3 236 1 35 1 116 2 288 16 69 2 73 1 195 1 
1 1 199 2 238 2 153 3 202 1 117 3 268 1 121 2 43 2 8 1 271 24 51 3 277 3 90 1 215 3 55 13 220 1 19 2 252 3 173 1 21 6 101 1 226 1 180 3 25 1 231 1 66 1 67 2 182 3 116 2 288 11 69 2 73 2 195 1 
1 2 199 4 238 3 2 1 153 4 202 3 117 4 268 1 43 2 121 1 8 1 271 33 128 1 164 1 51 4 277 4 90 1 215 3 55 17 220 1 19 5 58 1 252 3 173 1 21 8 222 1 101 1 226 1 180 4 25 1 231 1 66 1 67 2 182 3 236 1 35 1 116 2 288 16 69 2 73 1 195 1 
1 2 199 4 238 3 2 1 153 4 202 3 117 4 268 1 43 2 121 1 8 1 271 33 128 1 164 1 51 4 277 4 90 1 215 3 55 17 220 1 19 5 58 1 252 3 173 1 21 8 222 1 101 1 226 1 180 4 25 1 231 1 66 1 67 2 182 3 236 1 35 1 116 2 288 16 69 2 73 1 195 1 
1 2 199 3 238 3 153 3 202 2 117 3 268 1 43 2 121 1 8 1 271 26 51 3 277 3 90 1 215 3 55 13 220 1 19 4 252 3 173 1 21 6 101 1 226 1 180 3 25 1 231 1 66 1 67 2 182 3 116 2 288 13 69 2 73 1 195 1 
141 1 201 1 239 1 203 1 187 1 44 1 250 1 
27 1 
141 1 201 1 239 1 276 1 44 1 250 1 
95 1 201 1 239 1 120 1 155 1 44 1 257 1 141 1 30 1 185 1 210 1 70 2 16 1 250 1 151 1 
95 1 201 1 239 1 120 1 155 1 44 1 257 1 141 1 30 1 185 1 210 1 70 2 16 1 250 1 151 1 
95 1 201 1 239 1 120 1 155 1 44 1 257 1 141 1 30 1 185 1 210 1 70 2 16 1 250 1 151 1 
39 1 
39 1 
149 1 
149 1 
212 1 232 1 
141 1 201 1 239 1 275 1 221 1 120 1 44 1 250 1 151 1 
39 1 
149 1 
153 1 117 1 6 1 80 1 271 2 50 2 88 2 277 1 130 1 93 1 169 1 55 1 133 1 134 2 21 2 281 1 23 2 103 2 180 1 284 1 63 1 234 1 111 1 183 2 145 1 32 1 71 2 288 1 150 1 194 1 196 1 
3 1 280 1 23 2 122 1 205 1 24 1 206 1 125 1 9 1 85 1 285 2 183 2 50 2 145 1 13 1 213 1 189 1 38 1 150 1 
3 1 280 1 23 1 205 1 24 1 206 1 125 1 85 1 285 2 183 1 50 1 145 1 146 1 213 1 189 1 38 1 150 1 
265 1 59 1 281 1 23 1 156 1 24 1 9 1 183 1 50 1 145 1 188 1 150 1 17 1 196 1 
3 1 280 1 23 1 205 1 24 1 206 1 125 1 9 1 85 1 285 2 183 1 50 1 145 1 13 1 213 1 189 1 38 1 150 1 
136 1 
95 1 218 1 98 1 61 1 157 1 167 1 110 1 
77 1 218 1 251 1 18 1 254 1 82 1 26 1 83 1 109 1 33 1 167 1 290 1 197 1 
265 1 118 1 5 1 83 1 48 2 50 1 12 1 54 1 167 1 217 1 171 1 281 4 23 1 178 1 255 1 26 1 109 1 29 1 183 1 145 2 37 1 290 1 150 1 197 1 196 1 
238 1 199 1 77 1 40 1 43 1 83 1 51 1 167 5 215 1 95 4 218 2 20 4 18 3 252 1 101 1 102 4 226 1 61 1 26 1 109 1 66 1 67 1 114 1 33 6 69 1 290 1 197 1 
199 1 218 1 120 1 269 1 26 1 158 1 256 1 109 1 28 1 235 1 184 1 114 2 128 1 51 1 236 1 164 1 74 1 167 2 290 1 151 1 197 1 
95 1 218 1 98 1 61 1 157 1 26 1 109 1 167 1 290 1 197 1 
95 5 238 2 199 2 218 5 20 5 18 5 252 2 81 1 104 1 102 5 114 2 51 2 33 10 215 2 167 5 
77 1 83 1 
77 1 218 1 265 1 224 1 23 1 177 1 176 1 178 1 26 1 83 2 109 1 183 1 50 1 167 1 290 1 168 1 197 1 
235 1 269 1 74 1 237 1 
95 4 2 1 218 2 18 2 20 2 224 1 102 2 61 2 178 1 26 1 109 1 33 4 167 1 290 1 197 1 
239 1 44 1 216 1 
239 1 282 1 212 1 44 1 262 1 
239 1 44 1 216 1 
239 1 44 1 216 1 
239 1 267 1 44 1 
239 1 267 1 44 1 
239 1 267 1 44 1 
239 1 44 1 
250 1 
1 4 199 3 153 2 2 1 202 3 117 2 158 1 271 17 128 2 164 2 51 3 277 2 55 9 19 7 58 1 21 4 180 2 236 2 35 1 116 1 288 8 
1 2 199 1 2 1 19 2 58 1 271 5 110 1 128 1 164 1 236 1 51 1 35 1 288 2 55 3 
1 1 199 1 238 1 153 1 202 1 19 2 117 1 252 1 21 2 225 1 180 1 271 4 51 1 277 1 288 2 215 1 55 2 
67 1 43 1 69 1 288 1 55 1 271 2 
199 5 238 2 1 5 2 1 153 1 202 2 117 1 43 2 158 1 271 25 128 2 164 2 51 5 277 1 215 2 55 13 170 1 19 7 58 1 252 2 21 2 137 1 227 1 180 1 236 2 35 1 69 2 288 12 116 1 
43 1 288 1 271 1 
69 1 271 1 55 1 
238 1 199 1 1 2 153 1 202 1 19 3 117 1 252 1 21 2 225 1 104 1 180 1 271 6 51 1 277 1 288 3 215 1 55 3 
238 2 199 2 1 1 153 1 202 1 117 1 43 1 8 1 271 12 51 2 277 1 90 1 215 2 55 6 19 2 220 1 252 2 21 2 101 1 226 1 180 1 66 1 67 1 69 1 288 6 
199 1 1 1 202 1 19 2 271 6 128 1 236 1 51 1 164 1 288 3 55 3 
1 1 153 1 202 1 19 2 266 1 117 1 58 1 21 2 180 1 271 3 128 1 164 1 277 1 35 1 288 2 116 1 55 1 
1 3 199 2 153 1 202 2 19 5 117 1 21 2 180 1 158 1 8 1 271 10 128 2 164 2 236 1 51 2 277 1 288 5 55 5 
153 1 202 1 19 1 117 1 21 2 180 1 8 1 271 2 51 1 277 1 215 1 55 2 
1 1 199 1 238 1 153 1 202 1 19 2 117 1 252 1 21 2 180 1 8 1 271 4 51 1 277 1 288 2 215 1 55 2 
1 1 153 3 202 1 19 2 266 1 117 3 21 6 222 1 180 3 8 1 271 3 128 1 164 1 277 3 116 1 288 2 55 1 
199 2 1 3 153 4 202 3 117 4 266 1 43 1 158 1 8 1 271 15 128 2 51 2 164 2 277 4 55 7 19 6 58 1 99 1 21 8 222 1 225 1 180 4 67 1 236 1 35 1 288 8 69 1 116 1 
238 1 199 4 1 5 2 1 153 2 202 4 117 2 43 1 158 1 8 1 271 25 128 2 164 2 51 5 277 2 90 1 215 2 55 14 19 9 220 1 58 1 252 2 21 4 101 1 226 1 180 2 66 1 67 1 236 2 35 1 116 1 69 1 288 11 
238 1 199 4 1 5 2 1 153 3 202 2 117 3 43 1 158 1 8 1 271 24 128 2 164 2 51 5 277 3 90 1 215 2 55 14 220 1 19 7 58 1 252 2 21 6 101 1 225 1 226 1 180 3 66 1 67 1 236 2 35 1 116 1 288 10 69 1 
238 2 199 5 1 5 2 1 153 3 202 2 117 3 43 1 158 1 8 1 271 26 128 2 164 2 51 5 277 3 90 1 215 2 55 13 220 1 19 7 58 1 252 2 21 6 225 1 101 1 226 1 180 3 66 1 67 1 236 2 35 1 69 1 288 13 116 1 
238 1 199 4 1 5 2 1 153 3 202 4 117 3 43 1 158 1 8 1 271 24 128 2 164 2 51 5 277 3 90 1 215 2 55 14 19 9 220 1 58 1 252 2 21 6 225 1 101 1 226 1 180 3 66 1 67 1 236 2 35 1 116 1 69 1 288 10 
238 1 199 4 1 5 2 1 153 2 202 4 117 2 43 1 158 1 8 1 271 25 128 2 164 2 51 5 277 2 90 1 215 2 55 14 19 9 220 1 58 1 252 2 21 4 101 1 226 1 180 2 66 1 67 1 236 2 35 1 116 1 69 1 288 11 
238 2 199 2 1 1 153 1 202 1 117 1 43 1 8 1 271 12 51 2 277 1 90 1 215 2 55 6 19 2 220 1 252 2 21 2 101 1 226 1 180 1 66 1 67 1 69 1 288 6 
238 1 199 4 1 5 2 1 153 4 202 2 117 4 43 1 158 1 8 1 271 25 128 2 164 2 51 5 277 4 90 1 215 2 55 14 220 1 19 7 58 1 252 2 21 8 101 1 225 1 226 1 180 4 66 1 67 1 236 2 35 1 288 11 69 1 116 2 
238 2 199 2 1 3 153 4 202 3 117 4 43 1 8 1 271 16 51 3 277 4 90 1 215 3 55 9 220 1 19 6 252 3 21 8 222 1 101 1 226 1 180 4 66 1 67 1 288 7 69 1 116 2 
199 1 1 3 202 3 19 6 58 1 271 7 128 3 164 3 236 1 51 1 35 2 288 4 55 3 
238 1 199 4 1 5 2 1 153 4 202 2 117 4 43 1 158 1 8 1 271 25 128 2 164 2 51 5 277 4 90 1 215 2 55 14 220 1 19 7 58 1 252 2 21 8 222 1 101 1 226 1 180 4 66 1 67 1 236 2 35 1 288 11 69 1 116 2 
134 1 91 1 103 1 14 1 71 1 45 1 192 1 
134 1 56 1 103 1 45 1 258 1 259 1 49 1 91 1 14 1 71 1 192 1 152 1 
265 1 50 1 183 1 59 1 145 1 281 1 23 1 156 1 150 1 196 1 110 1 
148 1 74 1 
148 1 74 1 
148 1 74 1 
217 1 5 1 57 1 279 1 120 1 281 3 23 1 229 1 83 1 48 1 183 1 50 1 145 1 150 1 196 1 151 1 198 1 
217 1 5 1 279 1 120 1 281 3 23 1 229 1 83 1 48 1 183 1 50 1 145 1 12 1 150 1 196 1 151 1 
50 1 183 1 145 1 23 1 72 1 150 1 
265 1 118 1 5 1 281 1 23 1 68 1 183 1 50 1 115 1 31 1 145 2 150 1 196 1 
148 1 74 1 
217 1 171 1 265 1 120 1 281 2 23 1 177 1 26 1 83 1 109 1 48 1 50 1 275 1 183 1 12 1 54 1 37 1 290 1 151 1 197 1 
217 1 118 1 5 1 281 2 122 1 23 2 255 1 183 2 50 2 145 2 72 1 150 1 196 1 
0 1 265 1 50 4 183 4 59 1 145 1 281 1 122 1 23 4 156 1 94 1 150 1 196 1 
97 1 5 1 79 1 281 1 23 1 68 1 183 1 50 1 144 1 31 1 145 2 150 1 196 1 
285 1 265 1 50 1 183 1 145 1 23 1 205 1 213 1 125 1 150 1 
281 1 122 1 23 2 111 1 183 2 50 2 145 1 130 1 189 1 150 1 196 1 
265 1 41 1 279 1 59 1 281 3 23 4 122 1 156 1 228 1 183 5 50 5 145 2 130 1 94 1 150 2 196 2 
265 1 41 1 279 1 59 1 281 3 23 4 122 1 156 1 160 1 183 5 50 5 145 2 130 1 94 1 150 2 196 2 
148 1 74 1 
118 1 5 1 279 1 281 1 23 1 68 1 183 1 50 1 115 1 31 1 145 2 150 1 196 1 
4 1 246 1 207 1 110 1 
4 1 246 1 186 1 119 1 131 1 243 1 207 1 
186 1 34 1 15 1 
200 1 4 1 42 1 119 1 243 1 46 1 139 1 246 1 186 1 131 1 
4 1 246 1 172 1 186 2 119 1 131 2 243 1 283 1 207 1 
264 1 135 1 119 1 205 1 243 1 46 1 207 1 285 1 186 1 131 1 38 1 
4 1 186 1 119 1 131 1 243 1 46 1 207 1 
4 2 246 1 186 1 119 1 131 1 243 1 46 1 
4 1 286 1 242 1 186 2 119 2 131 2 243 2 46 1 207 1 166 1 
264 1 4 1 100 1 119 1 123 1 243 1 46 1 283 2 207 2 246 1 186 3 131 3 289 1 
3 1 4 1 119 1 205 1 243 1 46 1 283 1 207 1 125 1 285 2 246 1 186 2 131 2 278 1 38 1 
264 1 4 1 172 1 119 2 60 1 243 2 46 1 283 2 207 2 246 1 186 4 131 4 289 1 
4 1 246 1 186 1 119 1 131 1 243 1 46 1 207 1 
200 1 264 1 4 2 42 2 119 1 243 1 283 2 207 2 139 1 246 2 186 3 131 3 289 1 
4 1 241 1 119 1 243 1 244 1 46 1 283 1 207 1 138 1 246 1 186 2 131 2 
4 1 42 1 119 1 243 1 46 1 139 1 246 1 186 1 87 1 131 1 
65 2 163 1 253 1 207 2 
186 1 119 1 129 1 131 1 243 1 46 1 
4 1 246 1 100 1 186 2 119 1 131 2 243 1 283 1 46 1 207 1 
208 1 
4 1 246 1 186 1 119 1 131 1 243 1 46 1 207 1 
4 1 100 1 119 1 243 1 283 1 46 1 207 1 64 1 246 1 186 3 131 3 
264 1 42 1 289 1 207 1 
4 1 207 1 

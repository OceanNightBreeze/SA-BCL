#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (60,332) (60,332) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (161,184,267) (161,184,267) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 52 14 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 52 14 205 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,167,228) (207,280,318) (207,280,318) (207,280,318) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,167,228) (207,280,318) (207,280,318) (207,280,318) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,167,228) (207,280,318) (207,280,318) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (1,167,228) (207,280,318) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.ArithmeticException 133 0 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 108 50 294 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 248 127 108 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 248 127 108 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 248 127 108 50 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 248 127 108 50 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 154 103 118 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 154 103 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 154 103 118 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 154 103 118 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 94 6 231 154 103 118 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,167,228) (1,167,228) (1,167,228) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,167,228) (1,167,228) (1,167,228) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,167,228) (1,167,228) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 322 327 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 94 6 231 154 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 94 6 231 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 94 6 231 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 94 6 231 154 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 1 314 3 189 1 3 2 9 1 111 1 195 1 298 1 254 1 253 2 114 1 100 2 209 3 
130 4 245 1 189 1 190 1 81 1 3 5 5 1 9 1 293 2 297 1 195 3 298 6 299 1 253 2 254 1 17 1 18 2 100 2 209 9 314 9 263 1 111 2 114 1 39 1 115 2 117 1 119 1 279 2 
130 4 245 1 189 1 190 1 81 1 3 5 5 1 9 1 293 2 297 1 195 3 298 6 299 1 253 2 254 1 17 1 18 2 100 2 209 9 314 9 263 1 111 2 114 1 39 1 115 2 117 1 119 1 279 2 
130 5 245 1 189 1 190 1 81 1 3 6 5 1 9 1 293 2 297 1 195 4 298 7 299 1 253 2 254 1 17 1 18 2 100 2 209 10 314 10 263 1 111 2 114 1 39 1 115 2 117 1 119 1 279 2 
130 3 245 1 189 1 190 1 81 1 3 4 5 1 9 1 293 1 297 1 195 2 298 4 299 1 253 2 254 1 17 1 18 2 100 2 209 7 314 7 263 1 111 2 114 1 39 1 115 2 117 1 279 2 
130 2 314 4 189 1 3 3 263 1 9 1 293 2 195 1 298 3 254 1 253 1 39 1 115 1 18 1 119 1 100 1 209 4 279 1 
326 1 314 1 5 1 332 1 100 1 60 1 209 1 111 1 253 1 254 1 
130 4 245 1 314 9 189 1 3 5 263 1 9 1 293 2 111 1 298 7 195 3 39 1 254 1 253 2 114 1 115 1 17 1 18 1 119 1 100 2 209 9 121 1 279 1 336 1 
130 4 245 1 314 9 189 1 3 5 263 1 9 1 293 2 111 1 298 7 195 3 39 1 254 1 253 2 114 1 115 1 17 1 18 1 119 1 100 2 209 9 121 1 279 1 336 1 
219 1 4 1 34 1 85 1 319 1 226 1 179 1 156 1 183 1 170 1 77 1 211 1 160 1 129 1 
35 1 
85 1 4 1 290 1 16 1 170 1 211 1 219 1 34 2 319 1 226 1 35 1 179 2 41 1 156 1 183 1 278 1 77 1 160 1 129 1 
188 2 4 1 85 1 290 2 51 1 10 1 295 5 250 2 135 1 55 4 93 1 20 2 170 1 211 1 306 1 171 1 219 1 31 1 34 5 319 1 320 2 226 1 35 2 179 5 112 2 41 2 156 1 270 2 74 1 331 3 75 2 183 1 334 1 77 1 278 1 186 1 129 1 160 2 
290 1 291 1 35 1 
30 2 35 1 142 1 
156 2 219 1 85 2 226 2 77 2 211 2 113 1 129 2 
2 2 85 2 87 1 89 1 91 2 97 1 172 1 262 2 176 1 113 1 38 1 274 2 124 1 128 1 129 3 282 2 286 1 137 1 301 1 203 1 204 2 208 1 58 1 61 1 211 3 63 1 64 1 219 1 65 1 67 1 316 1 319 2 226 3 229 1 323 1 71 1 156 3 234 2 157 1 158 1 77 2 240 2 
156 1 219 1 4 1 85 1 319 1 226 1 77 1 170 1 211 1 129 1 
241 1 315 1 316 1 34 1 290 1 319 1 35 1 87 1 179 1 156 1 25 1 211 1 129 1 28 1 
241 1 316 1 85 1 34 2 290 1 319 1 226 1 35 1 179 2 87 1 156 1 77 1 211 1 129 1 28 1 
41 1 34 1 179 1 281 1 160 1 
85 1 4 1 290 1 170 1 102 1 211 1 219 1 34 2 319 1 226 1 35 1 179 2 41 1 156 1 183 1 278 1 77 1 160 1 129 1 
41 1 34 1 179 1 
246 1 47 1 85 1 226 1 113 2 156 2 77 1 211 2 129 2 
200 1 265 1 110 1 
2 2 87 1 89 1 91 1 204 1 208 1 58 1 211 1 63 1 172 1 65 1 67 1 316 1 319 2 226 1 178 1 113 1 38 1 156 1 234 2 274 1 282 2 129 1 
291 1 113 1 
2 2 85 1 87 1 89 1 91 1 200 1 168 1 204 1 208 1 58 1 211 2 63 1 67 1 65 1 316 1 319 1 226 2 38 1 156 2 234 2 274 1 129 2 282 2 239 1 
148 1 47 1 85 4 226 4 113 1 268 1 156 5 56 1 168 1 77 1 25 1 211 5 129 5 239 2 
156 2 4 1 85 2 319 1 226 2 122 1 211 2 129 2 
156 3 85 3 226 3 77 1 211 3 113 1 129 3 239 1 
156 1 4 1 85 1 319 1 226 1 211 1 129 1 
156 1 246 1 47 1 85 1 319 1 226 1 77 1 211 1 129 1 
241 1 286 1 47 1 2 2 85 3 87 2 89 1 91 1 168 1 97 1 204 1 139 1 208 1 58 1 211 4 61 1 63 1 28 1 219 1 65 1 67 1 316 2 262 2 34 1 176 1 319 2 226 4 229 1 179 1 113 1 323 1 71 1 38 1 156 4 234 2 157 1 274 1 120 1 77 2 124 1 128 1 282 2 129 4 240 1 239 1 
268 1 156 2 85 1 226 1 25 1 211 2 113 1 129 2 239 1 
241 1 47 1 316 1 34 1 85 3 319 1 226 3 35 1 179 1 87 1 156 3 168 1 120 1 77 1 211 3 62 1 129 3 239 2 28 1 
47 1 85 2 226 2 110 1 156 2 200 1 77 1 211 2 129 2 239 1 
2 2 87 1 89 1 91 1 204 1 208 1 58 1 211 1 63 1 172 1 65 1 67 1 316 1 319 2 226 1 113 1 38 1 156 1 234 2 274 1 282 2 129 1 
2 2 87 1 89 1 91 1 204 1 208 1 58 1 59 1 211 1 172 1 65 1 316 1 319 2 226 1 113 1 38 1 181 1 156 1 234 2 274 1 282 2 129 1 
286 1 86 1 13 1 200 2 97 2 94 1 203 2 147 1 215 1 149 1 262 2 176 1 225 1 320 1 229 1 265 2 110 2 112 1 71 1 157 1 124 1 240 4 
156 1 85 1 319 1 226 1 122 1 87 1 211 1 129 1 
199 1 184 1 267 1 
199 2 257 1 161 1 184 2 
199 1 184 1 
199 1 184 1 
257 1 161 1 
257 1 161 1 
257 1 161 1 
199 1 193 1 184 1 
199 1 193 1 184 1 
199 1 193 1 184 1 
199 1 101 1 184 1 
199 1 101 1 184 1 
199 1 101 1 184 1 
199 1 52 1 184 1 36 1 163 1 14 1 
199 1 205 1 34 1 52 1 184 1 36 1 163 1 179 1 14 1 
326 1 
115 1 18 1 279 1 
326 1 
326 1 
326 1 
290 1 6 1 295 2 250 1 55 1 95 1 169 1 94 1 20 1 259 1 26 1 171 1 30 1 34 5 320 1 223 1 35 1 179 5 40 1 41 1 270 1 330 2 233 1 276 1 278 1 159 1 126 1 160 4 283 1 
85 1 4 1 6 1 7 1 250 2 93 1 20 2 94 1 169 2 170 1 26 2 171 1 30 3 34 7 35 3 179 7 112 1 41 4 270 2 276 1 183 1 278 1 126 1 281 3 129 1 283 2 290 1 292 3 295 2 198 1 55 3 142 1 211 1 147 1 219 1 319 1 223 1 320 1 226 1 230 1 156 1 77 1 160 5 
4 1 85 1 290 1 6 1 295 2 250 1 55 3 93 1 20 1 94 1 169 2 170 1 142 1 211 1 26 2 147 1 30 3 219 1 34 3 319 1 223 1 320 1 226 1 35 2 179 3 112 1 40 1 156 1 270 1 330 1 183 1 77 1 159 1 126 1 129 1 160 2 283 1 
4 1 85 1 6 2 250 1 93 1 94 2 20 1 169 4 170 1 26 4 30 7 105 1 34 4 35 4 179 4 112 2 40 1 270 1 42 1 183 1 126 1 129 1 283 2 192 1 290 1 295 4 55 5 142 3 211 1 147 2 219 1 319 1 320 2 223 1 226 1 156 1 330 2 77 1 159 1 160 3 
251 1 
2 1 291 1 24 1 
2 1 322 1 
2 1 234 1 282 1 
116 1 2 1 
2 1 234 1 
29 1 2 3 82 1 234 1 24 2 282 1 
188 1 132 1 191 1 320 1 247 1 112 1 135 1 15 2 97 3 203 4 75 1 303 2 236 3 144 1 78 1 104 1 240 7 187 1 
188 1 286 1 79 2 132 3 6 2 15 1 97 8 203 8 94 2 303 1 21 1 145 1 104 1 147 2 309 1 313 2 262 2 175 1 320 2 176 1 153 1 37 1 112 2 71 1 328 1 75 1 157 1 236 4 78 2 240 16 
286 2 188 1 132 1 247 1 135 1 15 2 203 5 97 4 303 3 144 1 104 1 262 4 320 1 176 2 69 1 153 1 112 1 71 2 329 1 75 1 157 2 236 4 78 1 240 9 
188 1 132 1 320 1 247 1 112 1 135 1 15 2 97 3 203 4 75 1 303 2 236 3 144 1 78 1 104 1 240 7 187 1 
188 1 132 1 320 1 247 1 112 1 135 1 15 2 97 3 203 4 75 1 303 2 236 3 144 1 78 1 104 1 240 7 187 1 
220 1 314 1 65 1 2 1 111 2 300 1 180 1 253 1 38 1 90 1 325 1 91 1 204 1 272 2 234 1 274 1 208 1 100 1 141 1 209 1 23 2 45 1 311 2 
314 1 65 1 318 1 8 1 111 1 254 1 253 1 167 1 326 1 271 1 91 1 204 1 272 1 207 1 274 1 208 1 100 1 209 1 23 1 280 1 213 1 311 1 
314 1 65 1 318 1 111 1 254 1 253 1 167 1 326 1 271 1 91 1 204 1 272 1 207 1 274 1 208 1 333 1 100 1 209 1 23 1 280 1 213 1 311 1 
314 2 65 1 194 1 8 1 111 1 298 1 180 1 253 1 167 1 326 1 271 1 91 1 204 1 272 1 207 1 274 1 208 1 100 1 209 2 23 1 280 1 213 1 311 1 
314 1 65 1 194 1 8 1 111 1 298 1 167 1 326 1 271 1 91 1 204 1 272 1 274 1 208 1 209 1 23 1 280 1 311 1 
305 1 
2 2 295 1 250 1 165 1 196 1 252 1 91 2 55 1 204 2 20 1 208 3 304 1 141 1 171 1 310 1 65 2 107 1 34 2 179 2 38 2 41 2 270 1 234 2 274 2 278 1 123 1 45 1 126 1 282 1 
241 1 243 1 133 2 290 2 162 1 87 1 16 1 92 1 25 1 211 1 307 1 28 1 216 1 315 1 66 1 316 1 34 3 319 1 35 2 179 3 41 2 156 1 278 1 129 1 
241 1 0 1 133 3 290 3 162 1 87 1 16 1 92 1 25 1 211 1 307 1 28 1 216 1 315 1 66 1 316 1 34 3 319 1 35 3 179 3 41 1 156 1 278 1 129 1 
241 1 243 1 0 1 133 3 290 3 162 1 87 1 16 1 92 1 25 1 211 1 307 1 28 1 216 1 315 1 66 1 316 1 34 3 319 1 35 3 179 3 41 2 156 1 273 1 278 1 129 1 
241 1 243 2 133 2 50 1 290 2 162 1 294 1 87 1 16 1 92 1 25 1 211 1 307 1 28 1 216 1 315 1 66 1 316 1 34 3 319 1 108 1 35 2 179 3 41 3 156 1 273 2 278 1 129 1 
241 1 285 1 133 2 290 2 162 1 248 1 295 1 249 1 250 1 87 1 134 1 166 1 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 216 1 315 1 66 1 316 1 34 2 319 1 35 2 179 2 270 1 156 1 129 1 
241 1 285 1 133 2 290 2 162 1 248 1 295 1 249 1 250 1 87 1 134 1 166 1 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 216 1 315 1 66 1 316 1 34 2 319 1 108 1 35 2 321 1 179 2 270 1 156 1 127 1 129 1 
241 1 285 1 133 2 290 2 162 1 248 1 295 1 249 1 250 1 87 1 134 1 166 1 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 216 1 315 1 66 1 316 1 34 2 319 1 108 1 35 2 321 1 179 2 270 1 156 1 127 1 129 1 
241 1 243 2 0 2 4 1 85 1 162 1 11 1 248 1 87 1 250 1 166 2 92 1 20 1 170 1 25 1 171 1 28 1 30 2 33 2 34 4 35 5 179 4 41 4 270 1 273 2 183 1 278 2 127 1 129 2 285 2 131 1 133 4 290 5 295 1 55 1 211 2 307 1 216 1 219 1 66 1 315 1 316 1 319 2 226 1 70 2 324 1 156 2 77 1 
241 1 285 1 243 1 0 1 133 3 50 1 290 3 162 1 248 1 295 1 249 1 250 1 87 1 134 1 166 1 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 216 1 315 1 66 1 316 1 34 2 319 1 108 1 35 3 321 1 179 2 41 1 270 1 156 1 273 1 127 1 129 1 
241 1 285 1 243 1 0 1 133 3 50 1 290 3 162 1 248 1 295 1 249 1 250 1 87 1 134 1 166 1 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 216 1 315 1 66 1 316 1 34 2 319 1 108 1 35 3 321 1 179 2 41 1 270 1 156 1 273 1 127 1 129 1 
241 1 243 1 285 2 0 1 133 3 290 4 162 1 248 1 295 1 250 1 87 1 166 2 55 1 92 1 20 1 25 1 211 1 307 1 171 1 28 1 30 2 216 1 315 1 66 1 261 1 33 1 316 1 34 3 319 1 35 4 70 2 179 3 41 2 324 1 270 1 156 1 273 1 278 1 129 1 
286 1 2 2 165 1 196 1 91 2 202 1 301 1 204 2 203 1 97 1 208 3 304 1 141 1 65 2 262 2 176 1 229 1 38 1 71 1 76 1 234 2 274 2 157 1 158 1 123 1 124 1 45 1 128 1 282 1 240 2 
286 1 47 1 85 1 6 1 200 1 94 1 203 1 97 2 22 1 211 1 147 1 260 1 262 2 176 1 320 1 226 1 265 1 229 1 110 1 112 1 71 1 156 1 157 1 77 1 124 1 129 1 240 3 
188 1 286 1 262 2 320 1 176 1 291 1 247 1 265 1 229 1 110 1 112 1 13 1 113 2 135 1 15 1 71 1 200 1 97 3 203 3 75 1 303 2 157 1 236 2 124 1 144 1 240 6 
286 2 79 1 54 1 200 3 97 3 203 1 172 1 260 1 309 1 313 1 262 4 319 1 176 2 229 2 265 3 113 1 71 2 157 2 335 1 124 1 128 1 238 1 240 4 
286 1 132 1 262 2 176 1 225 1 320 1 265 1 229 1 110 1 13 1 71 1 200 1 94 1 203 2 157 1 236 1 124 1 240 2 
286 1 149 1 262 2 176 1 265 1 229 1 110 1 13 1 112 1 71 1 200 1 97 2 157 1 124 1 147 1 240 2 
286 1 132 1 6 1 13 1 200 2 203 2 94 1 97 2 147 1 262 2 320 1 176 1 229 1 265 2 110 2 112 1 71 1 157 1 124 1 236 1 240 4 
286 1 132 1 262 2 176 1 225 1 320 1 265 1 229 1 110 1 71 1 200 1 202 1 94 1 203 2 157 1 236 1 124 1 240 2 
286 1 149 1 262 2 176 1 265 1 229 1 110 1 112 1 71 1 200 1 202 1 97 2 157 1 124 1 147 1 240 2 
286 1 262 2 176 1 320 1 6 1 265 2 229 1 110 2 112 1 71 1 200 2 202 1 97 2 94 1 203 2 157 1 124 1 147 1 240 4 
286 1 132 1 262 2 176 1 320 1 6 1 265 2 229 1 110 2 112 1 71 1 200 2 97 2 94 1 203 2 157 1 236 1 124 1 147 1 240 4 
286 1 2 2 87 1 89 1 91 1 203 1 97 1 204 1 208 1 58 1 211 1 63 1 172 1 65 1 67 1 316 1 262 2 319 2 176 1 226 1 229 1 113 1 323 1 71 1 38 1 156 1 234 2 157 1 274 1 158 1 124 1 128 1 282 2 129 1 240 2 
286 1 2 2 87 1 89 1 91 1 97 1 204 1 208 1 58 1 59 1 211 1 172 1 65 1 221 1 316 1 262 2 319 2 176 1 226 1 229 1 113 1 71 1 38 1 181 1 156 1 234 2 157 1 274 1 124 1 128 1 282 2 129 1 240 1 
286 1 132 1 6 1 200 2 203 2 94 1 97 2 147 1 260 1 262 2 320 1 176 1 229 1 265 2 110 2 112 1 71 1 157 1 124 1 236 1 240 4 
286 1 2 2 6 1 87 1 53 1 89 1 200 2 91 1 97 2 203 2 94 1 204 1 208 1 58 1 211 1 147 1 63 1 65 1 67 1 316 1 262 2 320 1 176 1 319 1 226 1 265 2 229 1 110 2 112 1 323 1 71 1 156 1 234 2 157 1 274 1 333 1 124 1 282 2 129 1 240 4 
46 1 286 1 132 1 47 1 85 1 6 1 200 1 97 1 94 1 203 2 211 1 147 1 260 1 262 2 176 1 320 1 226 1 229 1 265 1 110 1 112 1 71 1 156 1 157 1 77 1 236 1 124 1 129 1 240 3 
2 2 85 1 164 1 87 1 89 1 91 1 168 1 97 1 172 1 260 1 106 1 262 2 176 1 110 1 178 1 113 1 38 1 274 1 124 1 128 1 129 2 282 2 286 1 203 1 204 1 140 1 208 1 58 1 211 2 63 1 67 1 65 1 316 1 319 2 226 2 229 1 71 1 156 2 234 2 157 1 158 1 240 2 239 1 
2 4 85 1 247 1 6 2 87 2 89 2 15 1 91 1 168 1 97 13 94 2 27 2 172 1 260 1 262 6 176 3 265 7 110 7 112 5 113 3 38 1 274 1 185 2 124 3 186 1 128 1 129 3 282 4 188 2 286 3 132 1 53 2 135 2 197 1 200 7 203 14 204 1 303 3 208 2 58 2 144 1 211 3 146 1 147 2 63 2 312 2 67 2 65 2 316 2 319 3 320 5 226 3 229 3 323 2 71 3 156 3 75 2 234 4 157 3 158 1 236 4 239 1 240 27 
286 3 79 4 132 4 288 2 49 1 6 5 296 1 138 1 97 18 203 16 94 5 303 1 99 1 145 2 103 1 147 5 313 4 262 6 175 2 176 3 69 1 320 5 153 1 227 1 154 1 37 2 112 5 71 3 118 1 157 3 236 5 240 34 
286 2 79 2 288 2 49 1 6 1 138 1 97 8 203 6 94 1 303 1 99 2 103 2 147 1 313 2 262 4 176 2 69 1 175 2 320 1 153 1 227 1 154 1 112 1 71 2 118 1 157 2 236 1 240 14 
286 3 79 4 132 4 288 2 49 1 6 5 296 1 138 1 97 18 203 16 94 5 303 1 99 1 145 2 103 1 147 5 313 4 262 6 175 2 176 3 69 1 320 5 153 1 227 1 154 1 37 2 112 5 71 3 118 1 157 3 236 5 240 34 
286 3 79 4 132 4 288 2 49 1 6 5 296 1 138 1 97 18 203 16 94 5 303 1 99 1 145 2 103 1 147 5 313 4 262 6 175 2 176 3 69 1 320 5 153 1 227 1 154 1 37 2 112 5 71 3 118 1 157 3 236 5 240 34 
188 1 286 1 79 4 132 4 288 2 49 1 247 1 6 6 135 1 15 1 138 1 19 1 97 19 203 22 94 6 303 1 99 1 144 1 145 2 103 1 147 5 313 4 262 2 175 2 176 1 69 1 320 7 227 1 154 1 37 2 112 6 71 1 231 1 75 1 118 1 157 1 236 5 240 41 
286 1 91 2 201 1 301 2 204 2 203 1 97 1 208 1 211 2 260 1 218 1 65 1 68 1 262 2 176 1 229 1 71 1 156 2 232 1 44 1 76 1 274 2 157 1 158 1 124 1 128 1 129 2 240 2 
65 1 2 1 152 1 38 1 325 1 91 1 204 1 234 1 274 1 208 1 141 1 23 1 210 1 45 1 
65 1 1 1 228 1 8 1 167 1 326 1 91 1 271 1 204 1 274 1 208 1 23 1 210 1 213 1 
65 1 1 1 228 1 8 1 167 1 326 1 91 2 271 1 204 2 274 2 208 1 333 1 23 1 210 1 213 1 
65 1 1 1 8 1 167 1 326 1 91 1 271 1 204 1 274 1 208 1 277 1 23 1 213 1 
96 1 
31 1 290 1 35 1 295 1 250 1 270 1 55 1 20 1 334 1 171 1 
30 10 320 2 6 2 35 5 295 5 112 2 55 5 94 2 169 5 142 5 306 1 26 5 27 1 147 2 
219 1 4 1 85 1 34 1 319 1 290 1 226 1 35 1 179 1 41 1 156 1 183 1 77 1 278 1 170 1 211 1 129 1 
2 2 12 1 295 1 250 1 165 1 196 1 252 1 91 2 55 1 20 1 204 2 208 3 304 1 141 1 171 1 310 1 65 2 107 1 34 1 179 1 38 2 41 2 270 1 234 2 274 2 278 1 123 1 45 1 126 1 282 1 
55 1 31 1 290 1 291 1 35 1 334 1 295 1 
286 1 2 2 85 2 87 1 89 1 91 1 97 1 204 1 208 1 58 1 211 3 61 1 63 1 219 1 67 1 65 1 316 1 262 2 176 1 319 1 226 3 229 1 113 1 323 1 71 1 38 1 156 3 234 2 157 1 274 1 77 2 124 1 128 1 129 3 282 2 240 1 
30 4 107 1 290 2 35 4 295 2 250 1 15 1 270 1 55 1 169 2 20 1 142 2 26 2 126 1 171 1 
55 1 270 1 20 1 295 1 249 1 250 1 134 1 171 1 
65 1 2 1 82 1 250 1 322 1 38 1 270 1 91 1 327 1 269 1 20 1 204 1 234 1 274 1 208 2 282 1 171 1 
79 1 84 1 290 1 6 1 295 2 250 2 55 5 138 1 169 4 20 2 94 1 142 3 26 4 171 2 147 1 30 6 313 1 34 1 175 1 320 1 227 1 35 4 179 1 154 1 112 1 41 1 270 2 331 1 278 1 
188 1 4 1 85 1 295 2 250 1 135 1 55 2 20 1 170 1 211 1 306 1 171 1 219 1 34 1 319 1 320 2 226 1 321 1 179 1 112 1 270 1 156 1 331 2 75 1 183 1 77 1 186 1 129 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
52 1 36 1 
199 1 184 1 
286 1 188 2 132 2 262 2 176 1 69 1 320 2 112 2 135 1 71 1 203 5 97 5 75 2 303 3 157 1 236 5 186 1 240 10 
286 1 132 1 262 2 69 1 176 1 320 1 71 1 94 1 203 2 157 1 236 1 240 2 
286 1 132 1 262 2 69 1 176 1 320 1 6 1 112 1 71 1 97 2 94 1 203 2 157 1 236 1 147 1 240 4 
286 3 188 1 132 1 262 6 69 1 176 3 153 1 296 1 71 3 97 2 203 1 75 1 303 1 157 3 236 2 309 1 240 3 
286 3 188 1 132 2 79 1 247 1 296 1 135 1 97 6 203 6 303 2 144 1 313 1 262 6 320 2 175 1 176 3 69 1 112 2 71 3 328 1 75 1 157 3 236 4 186 1 237 1 240 12 
286 2 188 1 132 1 262 4 320 1 176 2 153 1 247 1 112 1 135 1 15 1 71 2 97 4 203 4 75 1 303 2 157 2 236 3 144 1 240 8 
188 1 291 1 320 1 247 1 112 1 135 1 15 1 97 3 203 3 75 1 303 2 144 1 236 2 240 6 
286 1 262 2 176 1 320 1 6 1 112 1 71 1 97 2 94 1 203 2 157 1 237 1 147 1 240 4 
313 2 79 2 132 2 175 1 320 2 6 2 112 2 37 1 97 6 203 6 94 2 145 1 236 2 147 2 240 12 
286 1 188 2 79 1 132 3 247 1 135 1 54 1 203 7 97 8 303 3 144 1 309 1 313 1 262 2 320 2 176 1 153 1 112 2 71 1 75 2 157 1 236 6 186 1 240 15 
79 1 97 1 240 1 
313 1 203 1 240 1 
286 1 132 1 262 2 176 1 320 1 6 1 112 1 71 1 97 3 94 1 203 3 157 1 236 1 237 1 27 1 147 1 240 6 
313 1 286 1 79 1 262 2 320 2 69 1 176 1 175 1 6 2 227 1 154 1 112 1 71 1 231 1 138 1 19 1 94 2 203 6 97 4 157 1 147 1 240 10 
188 1 132 1 320 1 112 1 135 1 203 3 97 3 75 1 303 1 236 2 240 6 
188 1 286 1 132 1 262 2 176 1 153 1 247 1 71 1 203 1 97 2 75 1 303 1 157 1 236 2 144 1 309 1 240 3 
313 1 286 1 79 1 262 2 69 1 176 1 175 1 154 1 71 1 203 1 97 1 157 1 240 2 
313 1 286 2 132 1 79 2 262 4 320 1 176 2 69 1 175 1 6 1 154 1 37 1 71 2 94 1 203 3 97 2 157 2 236 1 237 1 240 5 
313 1 286 2 79 1 262 4 320 1 69 1 176 2 175 1 153 1 6 1 227 1 154 1 112 1 71 2 138 1 94 1 203 3 97 5 303 1 157 2 236 1 147 1 240 8 
313 1 286 1 79 1 262 2 320 2 69 1 176 1 175 1 6 2 227 1 154 1 112 1 71 1 231 1 138 1 19 1 94 2 203 6 97 4 157 1 147 1 240 10 
313 1 286 1 79 1 262 2 69 1 176 1 175 1 154 1 71 1 203 1 97 1 157 1 240 2 
313 1 286 1 79 1 262 2 320 2 69 1 176 1 175 1 6 2 227 1 154 1 112 1 71 1 231 1 138 1 19 1 94 2 203 6 97 4 157 1 147 1 240 10 
313 1 286 3 79 1 262 6 320 1 69 1 176 3 175 1 153 1 6 1 227 1 154 1 112 1 71 3 138 1 94 1 203 3 97 5 303 1 157 3 236 1 147 1 237 1 240 8 
313 1 286 2 79 1 262 4 320 2 176 2 69 1 175 1 6 2 227 1 296 1 154 1 112 1 71 2 231 1 138 1 19 1 94 2 203 6 97 4 157 2 147 1 240 10 
188 3 132 3 320 1 247 1 112 1 135 1 97 4 203 3 75 3 303 3 144 2 236 6 240 7 
313 1 286 3 79 1 262 6 320 1 176 3 69 1 175 1 153 1 6 1 227 1 296 1 154 1 112 1 71 3 138 1 94 1 203 3 97 5 303 1 157 3 236 1 147 1 240 8 
284 1 319 1 113 1 268 1 156 1 25 1 211 1 129 1 172 1 
284 1 244 1 32 1 150 1 319 1 113 1 268 1 156 1 255 1 98 1 25 1 211 1 129 1 172 1 
65 2 2 2 165 1 196 1 38 1 91 2 204 2 234 2 274 2 208 3 333 1 304 1 141 1 123 1 45 1 282 1 
65 1 2 1 165 1 266 1 196 1 91 1 204 1 234 1 274 1 208 2 304 1 123 1 282 1 
326 1 271 1 91 1 65 1 204 1 274 1 208 1 38 1 
91 2 65 1 204 2 68 1 274 2 208 1 333 1 8 1 
2 4 165 1 196 1 91 2 204 3 208 4 304 1 141 1 212 1 65 3 317 1 72 1 38 1 234 3 274 3 333 1 123 1 45 1 282 1 
2 4 165 1 196 1 91 2 204 3 208 4 304 1 141 1 212 1 65 3 72 1 38 1 73 1 234 3 274 3 333 1 123 1 45 1 282 1 
91 1 65 1 204 1 2 1 234 1 291 1 274 1 208 1 141 1 45 1 38 1 
2 2 85 1 87 1 89 1 91 1 204 1 208 1 58 1 59 1 211 2 172 1 65 1 316 1 319 2 226 2 113 1 38 1 156 2 234 2 274 1 129 2 282 2 239 1 
65 1 80 1 82 1 2 1 196 1 91 1 204 1 182 1 234 1 274 1 208 2 304 1 282 1 
2 2 85 1 87 1 89 1 91 1 204 1 208 1 58 1 211 2 63 1 172 1 65 1 316 1 319 2 226 2 113 1 38 1 156 2 234 2 274 1 129 2 282 2 239 1 
2 1 85 1 91 1 204 1 208 1 58 1 211 2 63 1 172 1 65 1 319 1 226 1 113 1 156 1 182 1 234 1 274 1 129 2 282 1 239 1 
2 1 85 1 91 1 204 1 208 1 58 1 59 1 211 2 172 1 65 1 319 1 226 1 113 1 156 1 182 1 234 1 274 1 129 2 282 1 239 1 
241 1 2 4 289 1 4 1 85 1 290 1 89 1 91 1 204 1 208 1 170 1 24 1 211 1 219 1 65 1 34 2 319 1 222 1 226 1 35 1 179 2 322 1 41 1 156 1 116 1 182 1 234 1 274 1 183 1 77 1 129 1 282 1 
241 1 2 4 4 1 85 1 290 1 89 1 91 1 204 1 208 1 170 1 24 1 211 1 219 1 65 1 151 1 34 2 319 1 226 1 35 1 179 2 322 1 41 1 156 1 116 1 182 1 234 1 274 1 183 1 77 1 129 1 282 1 
65 1 177 1 91 1 204 1 274 1 208 1 
65 1 80 1 82 1 2 1 196 1 38 1 91 1 204 1 234 1 274 1 208 2 304 1 282 1 
2 2 85 1 247 1 87 1 89 1 15 1 91 1 97 6 172 1 260 1 262 4 176 2 265 1 110 1 112 3 113 3 44 1 274 1 185 1 124 2 186 1 129 2 282 2 286 2 188 2 132 1 53 1 135 2 200 1 204 1 203 7 303 3 208 1 58 1 211 2 144 1 63 1 67 1 65 1 316 1 319 2 320 3 226 2 229 2 323 1 71 2 156 2 75 2 234 2 157 2 333 1 236 4 239 1 240 13 
241 1 2 2 4 1 85 1 12 1 250 2 91 1 256 1 20 2 170 1 24 1 171 2 31 1 34 3 35 2 179 3 112 2 38 1 41 2 270 2 274 1 183 1 278 1 186 1 129 1 188 1 290 2 295 5 135 1 136 1 55 4 204 1 302 1 211 1 306 1 219 1 151 1 319 1 320 2 226 1 322 1 156 1 75 1 331 2 334 1 77 1 160 1 
65 1 82 1 2 1 177 1 251 1 91 1 269 1 204 1 234 1 274 1 208 2 24 1 282 1 
217 1 218 1 173 2 319 1 113 1 156 1 232 1 201 1 211 1 125 1 129 1 172 1 
242 1 241 1 4 1 85 1 290 1 87 1 201 1 57 1 170 1 143 1 211 2 28 1 217 1 219 1 218 1 173 2 316 1 34 2 319 2 226 1 35 1 179 2 156 2 232 1 183 1 120 1 77 1 125 1 160 1 129 2 
217 1 125 1 
242 1 173 1 57 1 
314 1 189 1 3 1 100 1 9 1 209 1 253 1 254 1 
130 1 314 4 189 2 81 1 3 3 109 1 9 2 298 2 195 1 253 1 43 1 100 1 209 4 308 1 
314 2 189 1 3 1 100 1 9 1 258 1 209 2 121 1 298 1 88 1 253 1 254 1 
214 1 314 3 189 1 81 2 3 1 109 2 9 1 254 1 253 1 43 1 100 1 209 3 
155 1 174 1 3 2 206 2 
314 1 48 1 100 1 209 1 253 1 254 1 
245 1 314 2 189 1 3 1 100 1 9 1 209 2 298 1 253 1 254 1 
235 1 
314 1 189 1 3 1 100 1 9 1 209 1 253 1 254 1 
189 1 3 1 291 1 9 1 
314 1 189 1 3 1 100 1 9 1 209 1 253 1 
272 1 209 1 111 1 
314 3 189 1 81 2 3 1 264 1 109 1 9 1 254 1 253 1 43 1 100 1 209 3 
314 2 189 1 3 1 100 1 9 1 209 2 293 1 298 1 253 1 
130 1 115 1 314 1 18 1 3 1 263 1 100 1 209 1 279 1 253 1 254 1 
314 1 189 1 3 1 100 1 209 1 253 1 254 1 
314 1 189 2 100 1 9 1 209 1 253 1 254 1 
314 2 189 1 287 1 3 1 83 1 224 1 254 1 253 2 100 2 209 2 
130 1 314 3 245 1 189 1 3 2 9 1 298 2 195 1 254 1 253 1 17 1 100 1 209 3 
326 1 314 1 275 1 100 1 209 1 253 1 254 1 
130 1 314 4 189 1 3 2 9 1 293 1 298 2 195 1 254 1 253 2 119 1 100 2 209 4 
245 1 314 3 189 1 81 1 3 1 100 1 9 1 209 3 298 1 253 1 254 1 
130 1 3 1 195 1 308 1 
189 1 3 1 

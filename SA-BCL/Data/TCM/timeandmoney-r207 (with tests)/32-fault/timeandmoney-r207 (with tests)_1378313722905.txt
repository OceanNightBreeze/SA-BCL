#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 233 96 44 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (103,273) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 266 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) (236,251) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) 211 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (76,114,228,267) (236,251) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (76,114,228,267) (76,114,228,267) (236,251) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 1 159 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 295 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (103,273) 280 261 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 150 135 277 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 150 135 277 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 150 135 277 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 150 135 277 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 150 135 277 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (193,285) 107 120 (183,291) 171 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 258 92 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 245 (193,285) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (103,273) 280 68 (67,286) (67,286) 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (193,285) 107 120 (183,291) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
168 1 75 1 98 1 2 1 37 1 174 1 144 1 106 1 274 1 196 1 31 1 290 1 133 1 296 1 
163 1 
274 2 196 1 163 1 146 1 234 1 204 1 72 1 296 2 
44 1 35 1 96 1 78 1 274 3 58 1 196 2 233 1 115 1 296 3 
163 1 146 1 295 1 
132 1 
168 2 62 1 98 2 106 2 37 1 174 2 290 2 133 2 
74 1 2 1 37 1 190 2 223 1 191 1 224 1 6 2 193 1 89 1 275 2 12 1 133 2 93 2 95 1 168 2 16 2 98 2 243 1 57 1 174 2 208 1 143 1 62 1 104 1 177 1 106 2 30 1 32 1 214 1 290 2 260 1 294 1 
168 1 144 1 98 1 2 1 106 1 37 1 174 1 31 1 290 1 133 1 
75 1 2 2 37 1 158 1 274 1 163 1 133 1 168 2 98 1 246 1 101 1 174 2 144 1 253 1 288 1 65 1 106 2 31 1 146 1 290 1 296 1 
75 1 2 2 37 1 158 1 274 2 163 1 133 2 168 2 98 2 246 1 101 1 174 2 253 1 144 1 106 2 31 1 290 2 146 1 296 2 
186 1 274 1 196 1 234 1 296 1 
274 2 196 1 163 1 146 1 234 1 33 1 72 1 296 2 
274 1 234 1 296 1 
168 2 98 1 174 2 62 2 229 1 259 1 106 2 290 1 133 1 
289 1 273 1 280 1 
51 1 16 1 2 1 224 1 6 1 193 1 62 1 30 1 260 1 93 1 
168 1 16 1 98 1 174 1 224 1 6 1 193 1 121 1 273 1 106 1 48 1 290 1 260 1 93 1 
62 1 295 1 
168 5 98 4 174 5 226 1 62 1 288 1 121 2 229 1 106 5 145 1 212 1 290 4 48 1 133 1 
168 2 144 1 98 2 2 1 106 2 174 2 164 1 290 2 
168 3 62 1 98 3 121 1 106 3 174 3 290 3 133 1 
168 1 144 1 98 1 2 1 106 1 174 1 290 1 
168 1 98 1 229 1 2 1 259 1 106 1 174 1 290 1 133 1 
74 1 2 2 37 1 190 2 191 1 223 1 224 1 158 1 6 1 193 1 229 1 121 1 89 1 275 1 274 1 48 1 12 1 133 2 93 1 199 1 168 3 16 1 98 3 243 1 246 1 174 3 101 1 62 1 253 1 104 1 177 1 106 3 30 1 32 1 292 1 290 3 260 1 294 1 296 1 
168 2 62 1 98 1 288 1 121 1 106 2 212 1 174 2 290 1 
168 3 98 3 2 1 246 1 174 3 101 1 158 1 253 1 229 1 121 2 106 3 274 1 28 1 163 1 48 1 290 3 292 1 133 1 296 1 
168 2 98 2 174 2 121 1 289 1 229 1 273 1 106 2 290 2 133 1 
16 1 2 1 224 1 6 1 193 1 62 1 30 1 260 1 93 1 
16 1 2 1 6 1 62 1 30 1 260 1 215 1 93 1 
74 1 52 1 19 1 280 1 243 1 190 2 191 1 7 1 103 1 104 1 255 1 289 1 177 2 273 1 275 2 32 1 147 1 12 1 70 1 
168 1 98 1 2 1 106 1 246 1 174 1 290 1 164 1 
185 1 200 2 170 1 25 2 162 1 216 1 
200 1 25 1 21 1 
200 1 25 1 
200 1 25 1 
162 1 216 1 
162 1 216 1 
162 1 216 1 
200 1 252 1 25 1 
200 1 252 1 25 1 
200 1 252 1 25 1 
200 1 25 1 41 1 
200 1 25 1 41 1 
200 1 25 1 41 1 
73 1 168 2 200 1 97 1 98 2 278 1 187 1 21 1 80 1 174 2 222 1 250 1 62 1 254 1 25 1 106 2 274 1 29 1 232 1 290 2 263 1 166 1 197 1 296 1 
200 2 113 1 170 1 222 2 250 2 25 2 122 1 108 1 29 2 274 2 91 2 163 1 109 1 127 1 130 1 166 2 263 1 197 3 296 2 
34 1 189 2 4 1 116 1 206 2 
138 1 116 1 206 1 
138 1 4 1 206 1 
34 1 210 1 189 1 4 1 116 2 206 3 
34 1 189 1 4 1 116 1 49 1 206 2 
35 1 112 1 75 1 149 1 2 1 37 1 115 1 154 1 117 1 225 1 119 1 160 1 274 5 196 4 163 2 234 1 132 2 131 1 133 1 168 1 98 1 136 1 278 1 279 2 56 1 58 1 23 1 174 1 22 2 205 1 144 1 106 1 31 1 290 1 146 1 293 1 72 1 296 5 
35 1 112 1 75 1 149 1 186 2 2 1 37 1 115 1 154 1 225 1 119 1 8 2 86 1 160 1 274 5 196 4 163 2 234 3 132 2 131 1 133 1 168 1 98 1 136 1 278 1 279 2 56 1 58 1 23 1 174 1 249 1 205 1 144 1 106 1 31 1 146 1 290 1 72 1 296 5 
35 1 75 1 112 1 78 1 149 1 2 1 37 1 115 1 154 1 117 1 225 1 119 1 160 1 274 3 196 2 163 2 132 2 133 1 168 1 98 1 136 1 278 1 279 2 58 1 174 1 23 1 22 1 205 1 144 1 106 1 31 1 290 1 146 1 293 1 296 3 
35 1 112 1 266 1 78 1 149 1 115 1 154 1 117 1 225 1 119 1 160 1 274 2 196 1 163 1 132 2 136 1 278 1 279 2 58 1 23 1 22 1 205 1 293 1 296 2 
139 1 
39 1 217 1 295 1 
217 1 198 1 
287 1 124 1 217 1 
100 1 217 1 
287 1 217 1 
184 1 287 1 36 1 124 1 39 2 217 3 
19 2 77 1 149 1 219 1 283 1 81 1 7 3 286 1 208 4 177 3 209 1 27 1 179 1 275 7 147 1 67 1 68 2 71 1 
77 2 149 4 188 1 190 2 3 4 191 1 81 2 7 8 119 3 84 1 271 3 160 3 275 31 12 1 52 3 239 1 201 1 19 3 137 1 243 1 141 1 283 2 176 1 286 1 208 16 209 1 177 15 179 2 27 5 32 1 147 4 67 1 68 3 71 1 
77 1 149 1 190 4 191 2 81 1 7 4 275 9 231 1 12 2 201 1 19 3 243 2 140 1 283 1 286 1 208 5 177 4 209 1 27 1 179 1 147 1 32 2 67 1 68 2 
19 2 77 1 149 1 283 1 81 1 7 3 286 1 208 4 177 3 209 1 27 1 179 1 275 7 147 1 67 1 68 2 71 1 
19 2 77 1 149 1 283 1 81 1 7 3 286 1 208 4 177 3 209 1 27 1 179 1 275 7 147 1 67 1 68 2 71 1 
45 1 251 1 76 1 228 1 267 1 
45 1 76 1 228 1 267 1 211 1 
45 1 76 1 228 1 267 1 211 1 
45 1 251 1 76 1 228 1 267 1 
236 1 45 1 267 1 114 1 
24 1 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 158 1 159 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 35 1 1 1 2 1 241 1 246 1 58 1 101 1 174 1 115 1 158 1 159 1 270 1 253 1 288 1 65 1 106 1 274 2 11 1 163 1 47 1 146 1 131 1 296 2 
35 1 0 1 1 1 2 1 268 1 115 1 158 1 159 1 6 2 270 1 161 1 274 3 11 1 163 1 47 1 234 2 131 1 93 2 168 1 16 2 241 1 279 1 172 1 242 1 246 1 58 1 101 1 174 1 23 1 61 1 205 1 253 1 287 1 288 1 65 1 257 1 106 1 146 1 260 2 217 1 296 3 72 1 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 204 1 158 1 159 1 270 1 253 1 65 1 288 1 106 1 274 3 11 1 163 1 47 1 146 1 234 1 296 3 72 1 
168 1 35 1 1 1 2 1 241 1 246 1 58 1 101 1 174 1 115 1 158 1 159 1 270 1 253 1 288 1 65 1 106 1 274 2 11 1 163 1 47 1 146 1 131 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
168 1 1 1 2 1 241 1 246 1 101 1 174 1 159 1 158 1 270 1 253 1 65 1 288 1 106 1 274 2 11 1 163 1 47 1 146 1 296 2 
74 2 0 1 148 1 220 1 155 1 157 1 6 7 85 1 9 1 88 1 89 1 12 2 167 1 93 6 95 1 16 7 168 1 98 1 242 1 243 2 172 4 174 1 104 2 177 1 106 1 32 2 260 2 110 1 190 4 191 2 192 1 121 1 124 1 275 2 125 1 61 3 208 1 287 3 66 1 214 2 290 1 217 4 70 1 
74 1 149 1 190 2 79 1 191 1 7 1 119 1 229 1 273 1 160 1 275 3 12 1 133 1 13 1 168 1 98 1 52 1 19 1 280 1 243 1 174 1 208 1 104 1 289 1 177 2 106 1 32 1 290 1 147 1 
74 1 77 1 149 1 190 2 191 1 7 2 273 1 275 6 12 1 19 2 243 1 280 1 286 1 208 3 62 2 104 1 289 1 209 1 177 3 179 1 32 1 147 1 67 1 68 1 70 1 295 1 
74 1 149 3 188 1 38 1 3 4 190 4 79 1 191 2 7 2 119 3 83 1 271 3 84 2 273 13 89 1 160 3 275 17 12 2 95 1 52 1 20 1 53 1 243 2 280 13 208 10 62 1 104 2 177 7 289 4 27 2 147 1 32 2 
74 1 79 1 190 2 191 1 224 1 6 1 193 1 121 1 89 1 275 2 48 1 12 1 93 1 14 1 51 1 16 1 168 1 95 1 98 1 243 1 174 1 60 1 208 1 62 1 104 1 289 1 177 1 106 1 260 1 290 1 32 1 182 1 
74 2 149 1 79 1 190 4 191 2 224 1 6 1 7 1 119 1 193 1 121 1 273 2 160 1 89 1 10 1 275 5 126 1 48 1 12 2 93 1 168 1 16 1 98 1 280 2 243 2 174 1 208 3 104 2 289 2 256 1 177 2 27 1 106 1 291 1 290 1 32 2 260 1 261 1 294 1 
74 1 149 1 280 1 243 1 190 2 142 1 191 1 7 1 119 1 208 2 104 1 289 1 27 1 273 1 275 2 32 1 12 1 70 1 
74 1 52 1 19 1 280 1 243 1 190 2 191 1 7 1 104 1 255 1 289 1 177 2 273 1 275 2 32 1 147 1 12 1 70 1 
74 1 149 1 190 2 191 1 7 2 119 1 273 2 160 1 275 4 12 1 52 1 19 1 243 1 280 2 208 2 104 1 289 2 177 2 27 1 32 1 147 1 70 1 
74 1 149 1 280 1 243 1 190 2 142 1 191 1 7 1 119 1 208 2 9 1 104 1 289 1 27 1 273 1 275 2 32 1 12 1 
74 1 52 1 19 1 280 1 243 1 190 2 191 1 7 1 9 1 104 1 255 1 289 1 177 2 273 1 275 2 32 1 147 1 12 1 
74 1 149 1 280 1 243 1 190 2 191 1 7 1 119 1 208 2 9 1 104 1 289 1 27 1 273 1 160 1 275 2 32 1 12 1 
74 1 149 1 280 1 243 1 190 2 191 1 7 1 119 1 208 2 104 1 289 1 27 1 273 1 160 1 275 2 32 1 12 1 
74 1 2 1 190 2 191 1 224 1 6 1 193 1 89 1 275 2 12 1 93 1 95 1 16 1 243 1 208 1 62 1 104 1 177 1 30 1 260 1 32 1 294 1 
16 1 74 1 2 1 243 1 190 2 59 1 191 1 6 1 62 1 104 1 177 1 89 1 275 1 30 1 260 1 32 1 12 1 215 1 93 1 
74 1 149 1 280 1 243 1 79 1 190 2 191 1 7 1 119 1 208 2 104 1 289 1 27 1 273 1 160 1 275 2 32 1 12 1 
74 1 149 1 190 2 191 1 224 1 6 1 7 1 193 1 119 1 85 1 273 1 160 1 275 3 12 1 93 1 16 1 52 1 19 1 243 1 280 1 208 1 104 1 289 1 256 1 177 2 32 1 147 1 294 1 
74 1 149 1 190 2 79 1 191 1 42 1 119 1 229 1 273 1 160 1 275 3 12 1 133 1 168 1 98 1 52 1 243 1 280 1 174 1 208 2 104 1 177 1 106 1 147 1 32 1 290 1 
135 1 277 1 150 1 243 1 152 1 190 2 231 1 32 1 12 1 191 1 
135 1 277 1 150 1 243 1 152 1 190 2 231 1 32 1 12 1 191 1 
135 1 277 1 150 1 243 1 152 1 190 2 231 1 32 1 12 1 191 1 
135 1 277 1 150 1 243 1 152 1 190 2 231 1 32 1 12 1 191 1 
135 1 277 1 150 1 243 1 152 1 190 2 231 1 32 1 12 1 191 1 
74 1 148 1 79 1 190 2 191 1 6 2 89 1 275 2 12 1 167 1 93 2 235 1 16 2 168 2 95 1 240 1 172 1 243 1 174 2 61 1 175 1 284 1 208 1 287 1 104 1 177 1 106 2 32 1 214 2 69 1 217 1 
16 1 238 1 0 1 172 1 242 1 61 1 248 1 5 1 6 1 287 1 260 1 217 1 129 1 93 1 
16 1 238 1 99 1 54 1 138 1 172 1 151 1 40 1 4 1 116 1 61 1 248 1 206 2 6 1 207 1 105 1 210 1 93 1 
16 2 238 1 99 1 54 1 138 1 172 1 151 1 40 1 4 1 116 1 61 1 248 1 206 2 6 2 207 1 85 1 105 1 210 1 93 2 
16 1 237 1 238 1 54 1 138 1 151 1 172 1 40 1 4 1 116 1 61 1 206 2 6 1 207 1 105 1 210 1 93 1 
269 1 
35 1 265 1 279 1 58 1 115 1 23 1 118 1 163 1 146 1 131 1 
112 1 136 1 149 1 279 2 225 1 119 1 160 1 163 1 132 2 
274 1 163 1 146 1 234 1 296 1 72 1 
35 2 0 1 78 1 268 2 115 2 156 2 6 4 272 1 161 1 274 3 234 4 131 1 93 4 16 4 203 1 279 2 172 1 242 1 58 2 23 2 61 1 205 2 287 1 257 1 260 2 181 1 217 1 72 2 296 3 
74 1 168 2 16 1 98 2 243 1 37 1 190 2 174 2 191 1 223 1 224 1 6 1 193 1 62 1 104 1 177 1 89 1 106 2 275 1 32 1 290 2 260 1 12 1 294 1 133 2 93 1 
35 1 112 2 136 2 279 2 268 1 58 1 115 1 23 1 225 2 205 1 163 4 146 2 68 1 132 4 131 1 
265 1 118 1 279 1 23 1 163 1 146 1 295 1 
35 1 279 1 58 1 23 1 115 1 50 1 131 1 82 1 
35 1 36 1 39 1 115 1 6 1 120 1 195 1 124 1 131 1 93 1 198 2 16 1 171 1 172 2 58 1 23 1 61 1 205 1 285 1 287 1 107 1 260 1 217 4 183 1 
264 1 35 2 112 3 149 2 268 1 188 1 3 1 115 2 153 1 225 5 194 1 119 2 271 1 160 2 274 1 163 5 234 1 132 6 131 2 134 2 52 2 136 5 279 5 55 1 58 2 23 8 247 1 205 1 63 1 147 2 146 2 180 1 111 1 296 1 72 1 
35 1 75 1 77 1 149 2 2 1 37 1 115 1 230 1 123 1 274 1 131 1 133 1 134 2 168 1 98 1 279 2 58 1 174 1 23 2 63 1 144 1 209 1 179 1 106 1 31 1 147 1 290 1 296 1 
15 1 108 1 232 1 222 1 250 1 
244 1 222 1 250 1 
244 1 222 1 250 1 
244 1 222 1 250 1 
87 1 222 1 250 1 
87 1 222 1 250 1 
87 1 222 1 250 1 
222 1 250 1 
200 1 25 1 
77 2 19 3 149 2 243 1 190 2 191 1 7 5 208 5 177 5 209 1 230 1 179 2 27 2 275 10 231 1 32 1 147 2 12 1 
149 1 243 1 190 2 191 1 119 1 208 2 275 2 231 1 32 1 12 1 
149 1 243 1 190 2 191 1 119 1 208 2 160 1 275 2 231 1 32 1 12 1 
201 1 77 1 19 1 243 3 190 6 191 3 7 2 208 1 177 2 179 1 27 1 275 3 231 1 276 1 165 1 32 3 12 3 
77 3 149 5 188 1 3 4 190 10 191 5 7 9 119 3 271 3 84 1 160 3 275 34 90 1 231 1 276 1 165 1 12 5 201 2 239 1 52 3 19 4 243 5 141 1 176 1 286 1 208 16 209 2 177 18 179 3 27 5 32 5 147 5 67 1 68 1 
77 1 149 2 188 1 3 2 190 2 191 1 7 2 119 1 271 1 84 1 160 1 275 13 231 1 12 1 52 1 19 2 243 1 247 1 286 1 208 6 209 1 177 7 179 1 32 1 147 2 67 1 68 1 
77 1 149 2 188 1 3 2 190 4 191 2 7 3 119 1 271 1 84 1 160 1 275 11 231 1 90 1 12 2 19 2 243 2 247 1 286 1 208 6 209 1 177 5 179 1 27 1 147 1 32 2 67 1 68 1 
264 1 77 1 149 3 188 1 3 1 190 6 153 1 191 3 7 4 119 2 271 1 160 2 275 17 90 1 231 1 12 3 52 1 201 1 19 3 55 1 243 3 247 1 286 1 208 9 209 1 177 8 179 1 27 1 147 2 32 3 67 1 68 1 180 1 
264 1 77 2 149 5 188 1 3 1 190 6 153 1 191 3 7 7 119 2 271 1 230 1 160 2 275 24 90 1 231 1 12 3 201 1 52 1 19 4 55 1 243 3 247 1 286 1 208 13 209 2 177 11 27 3 179 2 147 4 32 3 67 1 68 1 180 1 
77 1 149 2 188 1 3 2 190 2 191 1 7 2 119 1 271 1 84 1 160 1 275 13 231 1 12 1 52 1 19 2 243 1 247 1 286 1 208 6 209 1 177 7 179 1 32 1 147 2 67 1 68 1 
264 1 149 2 188 1 3 1 190 4 153 1 191 2 7 2 119 2 271 1 160 2 275 11 231 1 12 2 52 1 201 1 19 1 55 1 243 2 247 1 208 6 177 5 27 1 147 1 32 2 180 1 
264 1 149 2 188 1 3 1 190 6 153 1 191 3 7 1 119 2 271 1 160 2 275 11 90 1 231 1 12 3 52 1 201 1 19 1 55 1 243 3 247 1 208 6 177 5 147 1 32 3 180 1 
264 1 149 3 188 1 3 1 190 8 153 1 191 4 7 5 119 3 271 1 160 3 275 14 231 1 276 1 12 4 52 1 201 2 19 2 55 1 243 4 247 1 208 9 177 5 27 3 147 1 32 4 180 1 
77 3 19 3 149 1 286 1 7 6 208 3 177 4 209 1 179 3 27 3 275 7 147 1 67 2 
264 1 149 2 188 1 3 1 190 6 153 1 191 3 7 1 119 2 271 1 160 2 275 11 231 1 276 1 12 3 52 1 201 1 19 1 55 1 243 3 247 1 208 6 177 5 147 1 32 3 180 1 
201 1 19 2 77 1 149 1 243 2 190 4 191 2 7 3 286 1 208 4 209 1 177 4 27 1 179 1 275 8 147 1 32 2 12 2 67 1 68 1 
77 1 19 2 149 1 286 1 7 2 208 3 177 3 209 1 179 1 275 6 147 1 67 1 68 1 295 1 
149 1 243 1 190 2 191 1 119 1 208 2 160 1 275 2 90 1 32 1 12 1 
52 1 149 1 188 1 3 2 7 1 208 3 119 1 271 1 84 1 177 4 27 1 160 1 275 7 147 1 
77 2 149 5 38 1 3 2 190 2 191 1 7 8 119 2 84 1 271 2 230 1 160 2 275 23 12 1 52 1 201 1 19 4 53 1 243 1 286 1 208 13 209 2 177 10 179 2 27 4 147 4 32 1 67 1 68 1 
177 1 275 1 3 1 
208 1 271 1 275 1 
52 1 149 1 7 1 119 1 208 3 177 3 27 1 160 1 275 6 147 1 261 1 
264 1 149 2 188 1 3 1 190 4 153 1 191 2 7 2 119 2 271 1 160 2 275 11 231 1 12 2 52 1 201 1 19 1 55 1 243 2 247 1 208 6 177 5 27 1 147 1 32 2 180 1 
7 2 208 3 19 1 77 1 177 3 149 1 209 1 27 1 179 1 275 6 147 1 
201 1 19 1 77 1 243 1 190 2 191 1 7 2 286 1 208 1 177 2 27 1 179 1 275 3 165 1 32 1 67 1 12 1 
168 1 62 1 288 1 106 1 258 1 174 1 212 1 
202 1 26 1 64 1 258 1 213 1 92 1 
16 4 0 1 172 1 242 1 173 1 61 1 6 4 227 1 85 1 287 1 260 1 217 1 93 4 
16 2 172 2 102 1 61 1 155 1 156 1 6 2 287 1 88 1 124 1 125 1 110 1 217 1 93 2 
16 1 138 1 172 1 4 1 260 1 61 1 93 1 206 1 207 1 6 1 
16 2 148 1 172 1 61 1 6 2 85 1 287 1 105 1 69 1 217 1 93 2 
16 5 0 1 148 1 242 1 172 2 220 1 61 2 156 1 192 1 6 5 227 1 85 1 287 2 260 1 217 3 93 4 
16 5 0 1 148 1 242 1 172 2 282 1 61 2 156 1 192 1 6 5 227 1 85 1 287 2 260 1 217 3 93 4 
16 1 287 1 0 1 172 1 242 1 260 1 61 1 217 1 93 1 295 1 6 1 
168 1 16 1 98 1 2 1 174 1 6 1 193 1 62 1 121 1 106 1 30 1 290 1 260 1 93 1 
168 1 16 1 98 1 2 1 174 1 156 1 6 1 193 1 62 1 121 1 106 1 30 1 290 1 93 1 
2 1 156 1 6 2 43 1 121 1 124 2 93 2 16 2 168 2 98 1 172 1 246 1 245 1 100 1 173 1 174 2 101 1 61 1 62 1 287 2 178 1 106 2 290 2 217 3 
75 1 2 1 37 1 39 1 156 1 6 1 124 1 274 2 163 1 234 1 133 1 93 1 198 1 168 1 16 1 98 1 18 1 172 1 245 1 100 1 174 1 281 1 61 1 144 1 287 1 253 1 106 1 31 1 290 1 146 1 217 4 296 2 
16 1 172 1 100 1 245 1 39 1 61 1 156 1 6 1 285 1 287 1 124 1 274 1 217 4 93 1 296 1 198 1 
16 1 172 1 66 1 61 1 93 1 6 1 
148 1 36 1 218 1 220 1 155 1 157 1 192 1 6 6 85 1 124 1 93 5 16 6 172 3 61 2 287 2 214 1 260 2 66 1 110 1 217 3 
74 2 77 1 149 1 79 1 190 4 191 2 224 1 6 1 7 1 193 1 85 1 121 1 273 1 275 5 12 2 93 1 168 1 16 1 98 1 19 1 280 1 243 2 174 1 284 1 286 1 208 3 62 2 104 2 177 2 209 1 256 1 179 1 106 1 147 1 290 1 32 2 291 1 67 1 68 1 294 1 
168 1 16 1 98 1 172 1 174 2 61 1 6 1 43 1 62 1 287 1 178 1 121 1 124 1 106 2 290 1 260 1 217 1 93 1 
16 1 36 1 172 2 218 1 61 1 155 1 156 1 6 1 287 1 124 1 110 1 217 1 93 1 
16 1 35 1 39 1 58 1 115 1 285 1 6 1 272 1 120 1 107 1 274 1 196 1 260 1 217 2 131 1 93 1 198 1 183 1 296 1 
16 2 36 1 172 2 39 1 61 1 6 2 85 1 287 1 195 1 124 1 66 1 217 2 93 2 
17 1 62 1 46 1 128 1 94 1 
75 1 2 2 37 1 221 1 158 1 46 1 274 2 196 1 163 1 128 1 133 1 94 1 168 1 17 1 169 1 98 1 246 1 174 1 101 1 144 1 253 1 106 1 31 1 290 1 292 1 146 1 262 1 296 2 
17 1 168 1 240 1 174 1 175 1 46 1 106 1 235 1 94 1 
169 1 262 1 94 1 

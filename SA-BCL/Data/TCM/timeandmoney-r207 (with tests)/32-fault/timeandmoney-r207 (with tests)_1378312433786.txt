#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) (148,264) (148,264) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) (148,264) (148,264) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) (148,264) (148,264) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) (148,264) (148,264) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 117 (143,259,294,310) 274 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) 276 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 117 296 (115,132) 276 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 316 (58,133) 166 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (33,225,278) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 316 158 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 316 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (33,225,278) 205 289 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (33,225,278) 205 65 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 316 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (75,162,197,242) (75,162,197,242) (27,248,255) (27,248,255) (27,248,255) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (75,162,197,242) (75,162,197,242) (27,248,255) (27,248,255) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (75,162,197,242) (75,162,197,242) (27,248,255) (27,248,255) (27,248,255) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (33,225,278) (33,225,278) 266 149 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 316 158 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 257 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 316 (58,133) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 229 61 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 316 (58,133) (58,133) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 216 265 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 216 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 216 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 216 265 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 216 265 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 85 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 272 261 83 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 316 (58,133) 166 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 200 151 261 83 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 60 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (33,225,278) 205 21 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 117 (143,259,294,310) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 117 296 233 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 117 296 293 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 117 296 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
264 1 279 1 162 2 214 3 167 1 68 1 308 1 13 1 15 1 148 1 192 2 314 1 115 1 117 1 132 1 134 1 296 1 224 1 242 2 197 3 
264 1 279 1 162 2 214 3 167 1 68 1 308 1 13 1 15 1 148 1 192 2 314 1 115 1 117 1 132 1 134 1 296 1 224 1 242 2 197 3 
264 1 279 1 162 2 214 3 167 1 68 1 308 1 13 1 15 1 148 1 192 2 314 1 115 1 117 1 132 1 134 1 296 1 224 1 242 2 197 3 
264 1 279 1 162 2 214 3 167 1 68 1 308 1 13 1 15 1 148 1 192 2 314 1 115 1 117 1 132 1 134 1 296 1 224 1 242 2 197 3 
214 2 167 1 68 1 279 1 160 1 274 1 162 1 117 1 259 1 75 1 197 2 242 1 
279 1 162 1 235 1 214 2 167 1 68 1 308 1 13 1 173 1 192 1 73 1 134 1 155 1 242 1 197 2 180 1 224 1 
214 2 167 1 68 1 279 1 192 1 162 2 115 1 117 1 296 1 197 2 242 2 
279 1 162 2 214 3 167 1 68 1 143 1 192 1 276 1 115 1 117 1 75 1 242 2 197 3 296 1 
279 1 162 2 214 3 167 1 68 1 143 1 192 1 276 1 115 1 117 1 75 1 242 2 197 3 296 1 
185 1 60 1 37 1 
106 1 114 2 37 1 
144 2 41 2 284 2 91 1 201 2 30 2 16 1 139 2 
41 1 91 1 58 1 94 2 201 1 139 1 186 1 141 1 166 1 144 1 284 1 31 1 30 1 316 1 275 1 
144 1 41 1 284 1 91 1 238 1 201 1 30 1 219 1 313 1 139 1 
225 1 144 1 41 1 278 1 96 1 139 1 
225 1 144 1 41 1 284 1 201 1 30 1 139 1 
22 1 24 1 33 1 10 1 179 1 
22 1 24 1 33 2 79 1 18 1 185 1 179 2 37 1 
22 1 33 1 179 1 
41 1 91 1 4 1 201 1 24 1 139 1 144 1 284 1 238 1 30 1 219 1 313 1 33 1 179 1 
37 1 
22 1 93 1 24 1 33 2 79 1 185 1 179 2 37 1 
22 2 24 2 230 2 204 1 120 1 79 1 185 1 210 1 188 2 102 1 190 1 237 1 191 1 33 5 53 1 179 5 19 1 223 2 37 1 
16 1 60 1 
41 2 201 1 139 2 144 2 284 1 104 1 286 1 30 1 16 2 
270 1 193 1 302 1 
158 1 94 1 316 1 141 1 
144 1 41 1 284 1 94 1 201 1 26 1 316 1 177 1 139 1 141 1 
144 3 41 3 284 3 201 3 30 1 16 1 177 1 139 3 
144 1 41 1 284 1 201 1 219 1 313 1 139 1 
144 1 41 1 284 1 104 1 201 1 286 1 30 1 313 1 139 1 
225 1 144 2 41 2 284 2 286 1 201 2 30 1 289 1 26 1 205 1 177 1 139 2 
144 2 41 2 284 1 201 1 16 1 96 1 290 1 177 1 139 2 
225 1 144 1 41 1 284 1 201 1 26 1 205 1 177 1 139 1 65 1 
41 2 201 2 270 1 139 2 144 2 284 2 286 1 30 1 177 1 193 1 
94 1 316 1 141 1 
94 1 229 1 141 1 
200 1 2 1 8 1 281 2 78 1 163 1 208 1 211 1 84 1 252 1 17 1 292 1 131 1 222 2 56 1 182 4 270 2 302 2 315 1 152 2 193 2 317 1 319 1 156 1 
144 1 41 1 284 1 201 1 313 1 70 1 139 1 249 1 
41 5 23 1 201 4 96 1 26 1 139 5 144 5 284 4 286 1 30 1 290 1 16 1 177 2 196 1 
144 2 41 2 284 2 201 2 219 1 313 1 70 1 139 2 
95 1 202 1 
95 1 202 1 
299 1 32 1 
299 1 32 1 
299 1 32 1 
43 1 95 1 202 1 
95 1 202 1 90 1 
299 1 32 1 95 2 202 2 150 1 260 1 
43 1 95 1 202 1 
43 1 95 1 202 1 
49 1 95 1 202 1 
49 1 95 1 202 1 
49 1 95 1 202 1 
198 2 226 1 183 1 245 1 269 1 138 1 202 2 95 2 48 2 145 3 86 2 288 1 33 2 150 1 34 2 55 1 179 2 258 2 37 1 
198 1 41 2 201 2 202 1 47 1 284 2 86 1 288 1 16 1 220 1 174 1 179 1 54 1 90 1 258 1 57 1 95 1 139 2 144 2 145 1 110 1 33 1 34 1 74 1 
15 1 134 1 224 1 
173 1 134 1 224 1 
5 1 14 1 15 2 173 1 81 1 224 3 
189 1 5 1 14 1 15 1 173 1 224 2 
5 1 14 2 15 1 173 1 224 2 
200 1 77 1 6 1 203 2 79 1 208 1 123 2 210 3 252 1 220 1 128 1 291 1 179 5 19 1 223 1 22 1 57 1 300 1 184 1 230 1 24 4 185 1 188 1 106 1 191 2 315 1 33 5 114 3 74 1 151 1 194 2 277 1 37 2 
79 1 10 5 250 1 252 3 175 1 179 9 19 1 22 6 184 1 97 1 24 7 185 1 188 2 191 6 106 3 33 9 114 9 194 6 277 3 37 5 38 5 200 3 203 6 120 1 207 1 210 8 208 3 50 1 128 2 291 2 223 2 57 4 230 2 63 1 146 1 315 3 151 3 
41 1 200 1 4 1 77 1 201 1 6 1 203 2 120 1 208 1 210 3 123 1 284 1 252 1 219 1 128 1 291 1 179 3 223 1 91 1 57 1 24 2 230 1 139 1 185 1 188 1 144 1 238 1 106 2 191 2 30 1 313 1 33 3 315 1 114 4 151 1 194 2 277 1 37 3 
200 1 77 1 6 1 203 2 120 1 208 1 210 3 123 1 250 1 252 1 128 1 291 1 179 2 223 1 57 1 230 1 24 1 188 1 106 2 191 2 33 2 315 1 114 4 151 1 194 2 37 2 
298 1 44 1 60 1 
217 1 44 1 
140 1 
218 1 44 1 
298 2 218 1 44 3 121 1 64 1 154 1 
218 1 44 1 154 1 
311 1 44 1 
182 7 157 1 281 4 161 1 282 2 99 1 208 1 170 1 239 1 312 1 315 1 292 3 152 3 176 1 35 1 195 1 156 2 
182 7 157 1 281 4 161 1 282 2 99 1 208 1 170 1 239 1 312 1 315 1 292 3 152 3 176 1 35 1 195 1 156 2 
182 7 157 1 281 4 161 1 282 2 99 1 208 1 100 1 170 1 239 1 312 1 315 1 292 3 152 3 176 1 195 1 35 1 156 2 
157 1 182 1 281 1 312 1 282 1 99 2 11 1 
2 1 281 5 282 1 161 1 208 2 84 1 170 1 17 1 292 4 176 2 222 2 56 1 182 9 137 1 98 1 99 1 109 1 239 1 312 1 315 2 152 4 35 1 195 1 156 2 
267 1 94 1 27 1 9 1 248 1 162 1 206 1 303 1 214 1 68 1 283 1 285 1 192 1 255 1 75 1 242 1 197 2 
267 1 94 1 27 1 9 1 248 1 162 1 80 1 303 1 214 1 283 1 285 1 105 1 192 1 88 1 75 1 242 1 197 2 
285 1 105 1 94 1 88 1 
1 1 267 2 94 1 159 1 162 1 80 1 141 1 142 1 214 1 306 1 283 2 285 2 192 2 242 1 197 1 
267 1 94 1 27 1 9 1 248 1 162 1 303 1 214 1 68 1 283 1 285 1 105 1 192 1 255 1 75 1 242 1 197 2 
304 1 
41 1 278 1 79 1 210 1 128 1 179 2 19 1 135 1 223 1 263 1 225 1 22 2 266 1 94 2 96 1 230 1 139 1 141 2 188 1 144 1 273 1 191 1 107 1 33 2 149 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 22 1 41 1 266 1 278 1 93 1 96 1 79 1 139 1 144 1 33 2 149 1 179 2 
263 1 225 1 41 1 266 1 278 1 230 1 96 1 139 1 188 1 144 1 33 1 149 1 179 1 19 1 223 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 144 1 41 1 278 1 266 1 96 1 149 1 33 1 139 1 179 1 
263 1 225 1 41 1 266 1 278 1 230 1 96 1 139 1 188 1 144 1 33 1 149 1 179 1 19 1 223 1 
2 1 281 3 161 1 282 1 163 1 211 1 208 1 84 1 170 1 16 2 17 1 292 3 176 1 131 1 222 2 56 1 182 6 270 1 302 1 60 1 239 1 315 1 193 1 152 3 195 1 35 1 156 2 
199 1 76 1 200 2 2 2 281 8 163 1 211 2 208 1 213 1 84 2 168 1 126 1 251 3 252 1 16 1 292 2 17 2 176 1 178 1 222 4 56 2 297 1 182 14 270 11 28 3 302 11 307 1 29 1 315 2 152 6 151 2 193 4 156 1 
158 1 41 1 2 1 201 1 281 1 163 1 211 1 84 1 125 1 284 1 126 1 17 1 177 1 178 1 222 2 56 1 297 1 182 2 136 1 94 1 26 1 139 1 141 1 144 1 316 1 193 1 152 1 318 1 
182 1 41 1 297 1 56 1 2 1 94 1 201 1 26 1 163 1 139 1 141 1 211 1 84 1 144 1 284 1 17 1 152 1 177 1 178 1 257 1 222 2 
41 1 2 2 201 1 281 1 46 1 163 2 211 2 84 2 126 1 284 1 17 2 177 1 131 1 178 1 222 4 181 1 56 2 182 2 94 4 139 1 186 1 141 2 144 1 105 1 152 1 116 1 
41 1 200 1 2 1 201 1 281 1 163 1 211 1 208 1 84 1 284 1 286 1 252 1 292 1 17 1 222 2 56 1 297 1 182 3 270 1 302 1 139 1 67 1 144 1 30 1 315 1 193 1 151 1 152 2 156 1 
182 2 56 1 200 1 2 1 270 1 281 2 78 1 163 1 302 1 211 1 84 1 315 1 292 1 17 1 176 1 193 1 131 1 222 2 
182 2 56 1 2 1 270 1 163 1 302 1 211 1 208 1 84 1 252 1 292 1 17 1 193 1 152 2 131 1 222 2 319 1 156 1 
182 4 56 1 200 1 2 1 270 2 281 2 163 1 302 2 208 1 211 1 84 1 252 1 315 1 292 1 17 1 152 2 193 2 151 1 131 1 222 2 156 1 
182 2 56 1 200 1 2 1 270 1 281 2 78 1 163 1 302 1 211 1 84 1 315 1 292 1 17 1 176 1 193 1 116 1 222 2 
182 2 56 1 2 1 270 1 163 1 302 1 211 1 208 1 84 1 252 1 292 1 17 1 193 1 152 2 116 1 222 2 319 1 156 1 
182 4 56 1 200 1 2 1 270 2 281 2 163 1 302 2 208 1 211 1 84 1 252 1 315 1 292 2 17 1 152 2 176 1 193 2 151 1 116 1 222 2 156 1 
56 1 200 1 182 4 2 1 270 2 281 2 163 1 302 2 208 1 211 1 84 1 252 1 315 1 292 1 17 1 152 2 193 2 151 1 222 2 156 1 
58 1 94 1 316 1 141 1 
94 1 229 1 61 1 141 1 
182 4 297 1 56 1 200 1 2 1 270 2 281 2 163 1 302 2 208 1 211 1 84 1 252 1 315 1 292 1 17 1 152 2 193 2 151 1 222 2 156 1 
58 1 94 1 206 1 316 1 133 1 
41 1 200 1 2 1 118 1 201 1 281 2 163 1 208 1 211 1 84 1 284 1 252 1 286 1 292 1 17 1 176 1 222 2 56 1 297 1 182 3 270 1 302 1 139 1 144 1 30 1 315 1 152 1 151 1 193 1 
84 1 56 1 265 1 2 1 216 1 111 1 240 1 17 1 98 1 222 2 
84 1 56 1 265 1 2 1 216 1 111 1 240 1 17 1 98 1 222 2 
84 1 56 1 265 1 2 1 216 1 111 1 240 1 17 1 98 1 222 2 
84 1 56 1 265 1 2 1 216 1 111 1 240 1 17 1 98 1 222 2 
84 1 56 1 265 1 2 1 216 1 111 1 240 1 17 1 98 1 222 2 
198 1 226 1 183 1 86 1 95 1 202 1 150 1 34 1 258 1 295 1 
90 1 54 1 
198 1 101 1 86 1 172 1 95 1 202 1 129 1 34 1 258 1 
198 1 226 1 183 1 245 1 269 1 202 1 95 1 48 1 145 2 86 1 288 1 33 1 150 1 34 1 55 1 179 1 258 1 37 1 
198 1 226 1 183 1 245 1 269 1 202 1 95 1 48 1 145 2 86 1 288 1 33 1 150 1 34 1 55 1 179 1 258 1 37 1 
198 1 226 1 183 1 245 1 269 1 202 1 95 1 48 1 145 2 86 1 288 1 33 1 150 1 34 1 55 1 179 1 258 1 37 1 
215 1 43 1 260 1 
215 1 43 1 260 1 
12 1 49 1 
12 1 49 1 260 1 
174 1 47 1 
198 1 41 2 201 2 202 1 47 1 48 1 284 2 86 1 16 1 220 1 174 1 179 1 54 1 90 1 258 1 57 1 269 1 24 1 95 1 139 2 144 2 145 1 69 1 110 1 33 1 34 1 74 1 
215 1 43 1 
12 1 49 1 260 1 
182 2 56 1 41 2 297 1 2 1 268 1 94 2 59 1 25 1 281 1 46 1 163 1 139 2 186 2 211 1 84 1 144 2 126 1 309 1 17 1 152 1 178 1 222 2 
94 2 9 1 206 1 303 1 62 1 283 1 105 1 147 1 51 1 
94 1 9 1 303 1 283 1 105 1 51 1 254 1 
283 1 94 1 159 1 301 1 147 1 141 1 
283 1 105 1 94 1 51 1 147 1 9 1 303 1 62 1 
256 1 
190 1 191 1 53 1 185 1 60 1 210 1 37 1 
243 1 79 1 124 1 210 1 127 1 179 1 19 1 223 1 22 1 230 1 185 1 188 1 106 1 191 1 33 1 114 1 37 2 
85 1 188 1 94 1 230 1 19 1 141 1 223 1 
200 1 246 1 203 4 79 1 83 1 210 5 208 1 168 1 169 1 251 1 252 1 179 1 19 2 261 1 223 2 22 1 231 1 230 2 28 1 185 1 272 1 188 2 106 3 191 3 33 1 315 1 114 6 151 1 194 4 277 1 37 4 
41 1 4 1 201 1 119 1 161 1 208 1 210 2 284 1 170 1 50 1 219 1 179 1 19 1 223 1 91 1 230 1 139 1 188 1 144 1 238 1 191 2 30 1 109 1 313 1 239 1 33 1 315 2 277 2 
230 1 185 1 210 1 188 1 190 1 191 1 53 1 19 1 223 1 37 1 
200 1 203 2 210 2 208 1 191 2 106 2 252 1 50 1 315 1 114 4 151 1 194 2 277 1 37 2 
22 1 33 1 79 1 185 1 179 1 37 1 
22 4 94 2 230 2 120 1 79 2 232 1 141 2 210 2 188 2 273 2 191 2 107 1 128 2 33 3 221 1 179 3 153 2 19 1 223 2 135 1 262 1 
166 1 144 1 41 1 284 1 91 1 58 1 94 1 201 1 30 1 316 1 139 1 141 1 
230 1 203 2 282 1 185 2 210 1 188 1 273 1 106 2 191 2 128 1 114 4 194 2 19 1 223 1 37 4 
86 1 34 1 164 1 
226 1 0 1 86 1 174 1 34 1 
86 1 34 1 164 1 
86 1 34 1 164 1 
305 1 86 1 34 1 
305 1 86 1 34 1 
305 1 86 1 34 1 
86 1 34 1 
95 1 202 1 
182 6 56 2 2 2 281 3 282 1 161 1 208 1 84 2 170 1 239 1 315 1 292 3 17 2 152 3 176 1 130 1 35 1 195 1 222 4 156 2 
182 6 281 3 282 1 161 1 60 1 208 1 170 1 239 1 315 1 292 3 176 1 152 3 35 1 195 1 156 2 
56 1 200 1 182 4 2 1 281 2 45 1 208 1 84 1 252 1 315 1 292 2 17 1 152 2 151 1 176 1 222 2 156 1 
182 2 168 1 251 1 281 1 28 1 152 1 
76 1 200 2 2 2 281 10 282 1 161 2 82 1 208 3 213 1 84 2 170 2 251 2 252 2 292 9 17 2 176 4 130 2 222 4 182 21 56 2 28 2 29 1 239 1 315 3 151 2 152 11 195 1 35 1 156 5 
182 1 251 1 152 1 
182 1 281 1 28 1 
56 1 182 6 200 1 2 1 281 3 45 1 208 1 84 1 252 1 253 1 315 1 17 1 292 4 152 3 151 1 176 2 222 2 156 2 
200 2 56 1 182 11 2 1 246 1 281 6 28 1 98 1 83 1 272 1 208 1 84 1 168 1 169 1 252 1 251 1 315 2 292 2 17 1 151 2 152 5 261 1 222 2 156 2 
182 2 281 1 239 1 315 1 152 1 208 1 
182 3 56 1 2 1 281 1 161 1 82 1 84 1 170 1 292 2 17 1 176 1 152 2 130 1 195 1 35 1 222 2 156 1 
182 8 281 4 161 1 208 2 170 1 109 1 239 1 315 2 292 4 176 2 152 4 156 2 
56 1 200 1 182 2 2 1 281 2 98 1 84 1 315 1 17 1 292 1 176 1 222 2 
56 1 200 1 182 4 2 1 281 2 98 1 208 1 84 1 252 1 315 1 292 1 17 1 152 2 151 1 222 2 156 1 
182 2 56 1 2 1 281 1 98 1 161 1 84 1 170 1 17 1 292 2 152 1 176 1 222 2 156 1 
200 2 2 5 281 12 282 1 161 2 45 1 82 1 208 4 84 5 168 1 170 2 251 3 252 2 17 5 292 7 176 3 130 2 222 10 56 5 182 25 227 1 28 3 98 1 236 1 239 2 315 4 71 1 113 1 152 13 151 2 195 1 35 1 156 4 
2 1 281 4 282 1 161 1 83 1 208 1 84 1 168 1 170 1 251 1 17 1 292 3 176 1 222 2 182 8 56 1 28 1 98 1 239 1 315 1 152 4 35 1 195 1 156 2 
200 2 2 3 246 1 281 6 45 1 83 1 208 1 84 3 168 1 169 1 251 1 252 1 17 3 292 2 130 1 261 1 222 6 182 11 56 3 28 1 98 1 272 1 315 2 152 5 151 2 156 2 
200 2 2 2 246 1 281 6 83 1 208 1 84 2 168 1 169 1 251 1 252 1 17 2 292 1 130 1 222 4 261 1 182 11 56 2 28 1 98 1 272 1 315 2 152 5 151 2 156 1 
200 2 2 2 246 1 281 6 83 1 208 1 84 2 168 1 169 1 251 1 252 1 17 2 292 2 130 1 222 4 261 1 182 11 56 2 28 1 98 1 272 1 315 2 152 5 151 2 156 2 
2 1 281 4 282 1 161 1 83 1 208 1 84 1 168 1 170 1 251 1 17 1 292 3 176 1 222 2 182 8 56 1 28 1 98 1 239 1 315 1 152 4 35 1 195 1 156 2 
200 2 2 2 246 1 281 6 83 1 208 1 84 2 168 1 169 1 251 1 252 1 17 2 292 2 130 1 222 4 261 1 182 11 56 2 28 1 98 1 272 1 315 2 152 5 151 2 156 2 
200 2 2 3 246 1 281 6 45 1 83 1 208 1 84 3 168 1 169 1 251 1 252 1 17 3 292 1 130 1 261 1 222 6 182 11 56 3 28 1 98 1 272 1 315 2 152 5 151 2 156 1 
200 2 2 2 246 1 281 6 83 1 208 1 84 2 168 1 169 1 251 1 252 1 17 2 292 2 222 4 261 1 182 11 56 2 28 1 98 1 272 1 315 2 71 1 152 5 151 2 156 2 
182 4 281 2 161 2 170 2 292 4 176 2 152 2 35 1 195 2 156 2 
200 2 2 3 246 1 281 6 83 1 208 1 84 3 168 1 169 1 251 1 252 1 17 3 292 1 130 1 261 1 222 6 182 11 56 3 28 1 98 1 272 1 315 2 71 1 152 5 151 2 156 1 
144 1 41 1 16 1 96 1 290 1 139 1 165 1 
41 1 92 1 96 1 139 1 271 1 165 1 144 1 171 1 16 1 290 1 112 1 89 1 
94 1 60 1 141 1 
144 1 41 1 284 1 94 1 201 1 177 1 139 1 141 1 
144 1 41 1 284 1 201 1 177 1 139 1 153 1 
144 1 41 1 284 1 201 1 177 1 139 1 153 1 
33 1 179 1 153 1 
33 1 179 1 153 1 
94 1 212 1 
94 1 141 1 
41 1 297 1 56 1 2 1 94 1 201 1 206 1 163 1 139 1 211 1 84 1 144 1 284 1 309 1 17 1 177 1 222 2 
188 1 94 1 230 1 24 1 33 1 221 1 179 1 19 1 141 1 223 1 
94 1 212 1 
94 4 52 1 206 1 141 1 241 1 
94 1 234 1 
94 1 141 1 
105 1 94 2 206 1 
94 2 206 1 141 1 
94 2 206 1 141 1 
144 1 41 1 284 1 94 1 201 1 177 1 139 1 141 1 
153 1 
41 1 268 1 59 1 25 1 139 1 66 1 144 1 287 1 108 1 
287 1 122 1 21 1 
287 1 16 1 42 1 108 1 66 1 
225 1 287 1 42 1 108 1 24 1 205 1 33 1 87 1 122 1 179 1 21 1 66 1 
167 1 60 1 155 1 235 1 
214 1 167 1 162 1 155 1 235 1 197 1 242 1 
214 1 267 1 192 1 
279 1 280 1 162 1 235 1 214 2 167 1 68 1 103 1 308 1 36 1 242 1 197 2 155 1 
214 2 167 1 160 1 162 1 75 1 155 1 235 1 197 2 242 1 
214 1 167 1 68 1 279 1 162 1 117 1 259 1 197 1 242 1 
214 1 167 1 68 1 162 1 155 1 197 1 242 1 
214 1 68 1 162 1 155 2 235 1 197 1 242 1 
40 1 244 1 162 2 214 2 167 1 68 1 20 1 155 1 242 2 197 2 
214 2 167 1 68 1 279 1 228 1 162 1 233 1 117 1 75 1 296 1 197 2 242 1 
162 1 81 1 235 1 214 2 167 1 68 1 15 1 173 1 72 1 134 1 75 1 155 1 224 2 242 1 197 2 
214 2 167 1 68 1 279 1 160 1 162 1 293 1 117 1 75 1 296 1 197 2 242 1 
214 1 167 1 68 1 162 1 155 1 235 1 197 1 242 1 
214 2 167 1 279 2 162 1 117 1 75 1 296 1 242 1 197 2 
162 1 235 1 214 2 167 1 68 1 143 1 310 1 294 1 75 1 155 1 242 1 197 2 
247 1 162 1 235 1 214 3 167 1 68 1 103 2 308 2 36 1 242 1 197 3 155 1 
167 2 3 1 7 1 209 2 
214 1 68 1 162 1 39 1 197 1 242 1 
214 2 167 1 68 1 228 1 162 1 75 1 155 1 235 1 197 2 242 1 
187 1 
214 1 167 1 68 1 162 1 155 1 235 1 197 1 242 1 
214 3 167 1 68 1 308 1 228 1 162 1 75 1 155 1 235 1 197 3 242 1 
214 1 167 1 117 1 75 1 197 1 296 1 
167 1 155 1 

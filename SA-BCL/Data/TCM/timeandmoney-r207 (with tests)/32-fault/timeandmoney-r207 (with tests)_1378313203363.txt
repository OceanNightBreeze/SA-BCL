#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 134 (105,263) (105,263) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 134 (105,263) (105,263) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 134 (105,263) (105,263) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 134 (105,263) (105,263) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 134 (126,212) (126,212) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 157 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (55,177,274) 135 251 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (55,177,274) 135 251 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 29 257 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 29 257 302 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (55,177,274) 135 (14,40,315) 272 115 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (133,298) 310 66 266 137 243 299 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 283 303 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 216 106 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 29 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 66 266 137 243 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (55,177,274) 135 251 22 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (55,177,274) 135 251 22 51 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 38 209 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
263 1 105 1 250 1 134 1 
263 1 105 1 250 1 134 1 
263 1 105 1 250 1 134 1 
263 1 105 1 250 1 134 1 
208 1 250 1 
126 1 166 1 212 1 130 1 250 1 134 1 
157 1 250 1 
260 1 250 1 
260 1 250 1 
201 1 
221 1 186 1 28 2 
314 2 63 2 55 2 177 2 83 2 172 1 41 1 274 2 
287 1 128 1 247 1 246 1 95 2 10 1 172 1 97 2 174 1 294 1 55 2 177 3 261 2 301 1 181 1 262 1 217 1 304 1 222 1 63 2 265 1 225 1 150 1 26 1 27 1 274 2 191 1 314 2 77 1 193 1 317 1 319 1 33 2 121 1 278 2 83 3 41 1 
314 1 63 1 55 1 159 1 177 1 237 1 83 1 172 1 274 1 200 1 
135 1 14 1 274 1 
43 1 63 1 48 1 186 1 153 2 274 1 74 1 314 1 315 1 55 1 177 1 159 1 239 1 83 1 40 2 
64 1 297 1 73 1 40 1 153 1 
136 1 297 1 186 1 239 1 73 1 187 1 40 2 153 2 
73 1 40 1 153 1 
63 1 172 1 153 1 274 1 314 1 55 1 297 1 159 1 177 1 237 1 178 1 83 1 40 1 200 1 
186 1 
136 1 297 1 186 1 239 1 73 1 173 1 40 2 153 2 
42 1 220 1 267 1 186 1 248 1 73 2 270 2 53 1 153 5 190 2 136 1 102 2 316 1 297 2 176 1 259 1 239 1 179 1 40 5 
247 1 246 1 95 1 26 1 9 1 27 1 274 1 191 1 314 1 174 1 231 1 77 1 55 1 177 2 33 1 121 1 83 2 261 1 199 1 304 1 
201 1 
63 1 274 2 314 1 210 1 55 1 177 2 83 2 320 1 41 2 
298 1 310 1 
246 1 247 1 95 1 26 1 27 1 191 1 174 1 77 1 177 1 33 1 121 1 83 1 261 1 59 1 41 1 304 1 
314 3 231 1 63 1 55 3 177 3 83 3 41 1 274 3 
314 1 55 1 159 1 177 1 237 1 83 1 274 1 
314 1 63 1 55 1 210 1 159 1 177 1 83 1 320 1 274 1 
125 1 43 1 128 1 247 1 246 1 48 1 95 1 10 1 172 1 97 1 174 1 294 1 210 1 55 3 177 4 261 1 21 1 181 1 304 1 222 1 63 2 265 1 225 1 26 1 150 1 27 1 274 3 74 1 153 1 191 1 315 1 314 3 231 1 77 1 193 1 159 1 319 1 33 1 121 1 278 2 83 4 41 1 199 1 40 1 
135 1 314 1 231 1 55 1 177 1 83 1 251 1 274 2 
43 1 63 1 48 1 186 1 153 1 274 3 74 1 314 3 315 1 231 2 210 1 55 3 159 1 177 3 57 1 83 3 21 1 40 1 199 1 
63 1 9 1 274 2 314 2 231 1 210 1 55 2 298 1 177 2 83 2 
246 1 247 1 95 1 26 1 27 1 191 1 174 1 77 1 177 1 33 1 121 1 83 1 261 1 41 1 304 1 
4 1 95 1 27 1 31 1 159 1 33 1 261 1 41 1 
10 1 97 4 133 1 254 1 294 2 15 1 16 1 298 2 301 2 181 1 222 1 66 1 265 1 70 1 224 1 185 1 310 2 154 1 193 1 319 1 35 1 278 2 279 1 
314 1 55 1 112 1 159 1 177 1 48 1 83 1 274 1 
63 1 146 1 251 1 274 5 135 1 314 4 231 2 255 1 55 4 210 1 177 4 83 4 41 1 199 1 
314 2 55 2 112 1 159 1 177 2 237 1 83 2 274 2 
119 1 99 1 
119 1 99 1 
124 1 284 1 
124 1 284 1 
124 1 284 1 
119 1 103 1 99 1 
119 1 213 1 99 1 
219 1 119 2 86 1 124 1 284 1 99 2 
119 1 103 1 99 1 
119 1 103 1 99 1 
119 1 197 1 99 1 
119 1 197 1 99 1 
119 1 197 1 99 1 
29 1 119 1 257 1 196 1 11 1 99 1 
29 1 119 1 257 1 196 1 11 1 40 1 302 1 99 1 153 1 
139 1 130 1 289 1 
166 1 139 1 130 1 
166 1 276 1 289 2 130 3 85 1 98 1 
166 1 276 1 168 1 289 1 130 2 85 1 
166 1 276 2 289 1 130 2 85 1 
5 1 203 1 248 2 53 1 136 1 102 1 16 1 297 4 140 1 20 1 215 2 23 1 221 1 66 1 266 1 267 3 311 1 186 2 73 1 270 1 114 2 28 3 189 2 188 1 117 1 154 1 190 1 153 5 35 1 239 1 40 5 282 1 
0 1 49 5 248 6 96 1 132 1 53 1 136 1 102 2 16 3 297 7 140 2 183 1 220 1 221 3 64 5 66 3 266 3 267 8 186 5 73 6 270 2 114 6 28 9 189 6 188 2 117 4 154 3 153 9 190 2 160 1 35 3 239 1 242 1 40 9 282 1 
5 1 248 2 102 1 16 1 297 2 140 1 215 1 220 1 221 2 66 1 266 1 267 3 186 3 311 1 270 1 114 2 188 1 189 2 28 4 117 1 190 1 153 3 154 1 239 1 35 1 40 3 
5 1 248 4 96 1 102 1 16 2 297 3 140 1 215 2 220 1 221 3 66 2 266 2 267 5 186 4 311 1 270 1 114 4 28 7 189 4 188 1 117 2 190 1 153 4 154 2 160 1 239 1 35 2 242 1 40 4 
201 1 
77 1 283 1 
175 1 
191 1 77 1 
191 1 88 1 77 3 264 1 195 2 247 1 
191 1 77 1 247 1 
77 1 288 1 
65 1 67 1 91 2 223 1 308 1 72 1 97 7 254 3 154 1 294 3 32 1 15 2 258 1 35 1 301 4 84 1 123 1 
65 1 67 1 91 2 223 1 308 1 72 1 97 7 254 3 154 1 294 3 32 1 15 2 258 1 35 1 301 4 84 1 123 1 
65 1 67 1 91 2 223 1 46 1 308 1 72 1 97 7 254 3 154 1 294 3 32 1 15 2 258 1 35 1 301 4 84 1 123 1 
91 3 50 1 10 1 97 26 254 8 294 12 15 4 16 2 258 2 19 1 301 14 181 1 65 2 66 2 67 2 24 1 223 2 265 1 266 2 306 1 308 1 72 1 116 3 154 3 32 4 78 3 193 1 236 1 35 3 278 2 84 1 198 1 123 1 
91 2 94 1 10 2 131 1 97 9 254 4 294 4 15 3 258 1 301 5 181 2 65 1 67 1 223 1 265 2 306 1 308 1 154 1 32 1 193 2 35 1 278 4 84 1 123 1 
120 1 95 1 33 1 261 1 250 1 291 1 
166 1 95 1 289 1 249 1 130 2 98 1 252 1 139 1 261 1 60 1 142 1 304 1 109 1 111 1 268 1 229 3 30 3 120 1 158 2 81 1 33 1 318 1 161 1 121 1 241 1 240 1 322 1 39 1 280 1 87 1 
166 1 95 1 130 2 289 1 98 1 139 1 261 1 60 1 142 1 304 1 109 1 111 1 229 2 30 2 120 1 158 2 81 1 33 1 161 1 121 1 241 1 240 1 322 1 280 1 87 1 
145 1 164 1 111 2 268 1 309 1 95 1 249 1 229 1 27 1 273 1 191 1 30 1 120 2 77 1 33 1 121 1 261 1 300 1 37 1 60 2 39 1 280 2 304 1 
120 1 95 1 33 1 261 1 250 1 322 1 
228 1 
247 1 95 2 248 1 204 1 53 1 136 1 102 1 58 1 261 2 304 3 218 1 184 1 267 1 73 2 270 1 27 2 188 1 152 1 273 1 190 1 153 2 118 1 191 2 156 1 77 2 33 2 121 2 37 1 40 2 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 136 1 17 1 73 1 272 1 115 1 313 1 173 1 40 2 274 1 153 2 
270 1 115 1 272 1 313 1 274 1 153 1 53 1 190 1 135 1 14 1 102 1 17 1 40 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
135 1 14 1 17 1 272 1 115 1 313 1 40 1 274 1 153 1 
270 1 115 1 272 1 313 1 274 1 153 1 53 1 190 1 135 1 14 1 102 1 17 1 40 1 
201 1 222 1 265 1 193 1 224 1 319 1 278 2 10 1 181 1 
222 1 66 1 266 1 265 1 310 4 10 1 312 1 116 1 97 4 154 1 294 1 137 1 78 1 298 4 193 1 319 1 278 2 299 1 301 3 243 1 181 1 
127 1 90 1 170 1 247 1 246 1 95 1 10 1 97 2 174 1 294 1 55 1 298 1 177 2 261 1 301 1 59 1 181 1 304 1 217 1 222 1 265 1 225 1 26 1 312 1 27 1 274 1 191 1 314 1 231 1 77 1 193 1 33 1 319 1 121 1 83 2 278 2 41 1 199 1 
165 1 91 1 2 1 93 1 246 2 247 2 95 1 10 3 97 14 254 5 174 2 15 3 16 1 177 3 261 1 181 3 108 1 265 3 266 1 26 2 27 1 274 1 191 2 32 2 193 3 33 1 121 2 35 2 278 6 41 2 123 1 199 1 294 7 55 1 296 2 298 4 301 7 217 1 304 2 222 3 66 1 67 1 223 1 225 1 308 1 150 2 310 4 312 1 154 2 314 1 231 1 77 2 319 3 83 3 84 1 244 2 
95 8 7 1 10 2 291 1 97 2 207 1 294 1 295 1 55 1 177 1 138 1 261 8 301 1 181 2 304 2 217 1 222 2 265 2 113 1 224 1 225 1 27 2 273 1 274 1 314 1 191 2 231 1 233 1 77 3 194 1 193 2 317 2 33 7 319 2 121 2 83 1 278 4 37 1 322 1 
10 1 290 1 97 3 254 1 294 2 15 1 210 1 55 1 16 1 298 1 177 1 301 1 181 1 63 1 222 1 66 1 265 1 266 1 310 1 312 1 274 1 154 1 314 1 193 1 319 1 35 1 278 2 83 1 
222 1 66 1 265 1 70 1 224 1 310 1 10 1 97 2 254 1 154 1 32 1 298 1 193 1 319 1 278 2 301 2 181 1 
222 1 265 1 224 1 185 1 310 1 10 1 97 2 254 1 294 2 15 1 16 1 298 1 193 1 319 1 35 1 278 2 181 1 
10 1 97 4 254 2 294 2 15 1 16 1 298 2 301 2 181 1 222 1 66 1 266 1 265 1 224 1 310 2 154 1 32 1 193 1 319 1 35 1 278 2 
222 1 66 1 265 1 70 1 310 1 10 1 97 2 254 1 154 1 32 1 295 1 298 1 193 1 319 1 278 2 301 2 181 1 
222 1 265 1 185 1 310 1 10 1 97 2 254 1 294 2 295 1 15 1 16 1 298 1 193 1 319 1 35 1 278 2 181 1 
10 1 97 4 254 1 294 2 295 1 15 1 16 1 298 2 301 2 181 1 222 1 66 1 266 1 265 1 310 2 154 1 193 1 319 1 35 1 278 2 
222 1 66 1 265 1 266 1 310 2 10 1 97 4 254 2 154 1 294 2 32 1 15 1 16 1 298 2 193 1 319 1 35 1 278 2 301 2 181 1 
247 1 246 1 95 1 10 1 97 2 174 1 294 1 177 1 261 1 301 1 181 1 217 1 304 1 222 1 265 1 225 1 26 1 150 1 27 1 191 1 77 1 193 1 33 1 319 1 121 1 83 1 278 2 41 1 
222 1 265 1 225 1 4 1 95 1 149 1 10 1 97 1 27 1 31 1 294 1 159 1 193 1 33 1 319 1 261 1 278 2 181 1 41 1 
10 1 97 4 254 2 294 2 15 1 16 1 298 2 301 2 181 1 222 1 66 1 266 1 265 1 310 2 312 1 154 1 32 1 193 1 319 1 35 1 278 2 
247 1 246 1 95 1 10 1 97 4 291 1 254 2 174 1 294 2 15 1 296 1 16 1 298 2 177 1 261 1 301 2 181 1 304 1 222 1 66 1 265 1 266 1 310 2 26 1 150 1 154 1 191 1 32 1 77 1 193 1 33 1 319 1 35 1 121 1 83 1 278 2 
10 1 97 3 254 1 294 1 210 1 55 1 16 1 177 1 298 1 301 2 181 1 107 1 63 1 222 1 66 1 265 1 266 1 310 1 312 1 274 1 154 1 314 1 32 1 193 1 319 1 35 1 278 2 83 1 
285 2 202 1 8 1 10 2 131 1 97 14 254 4 294 7 15 2 16 2 301 7 181 2 180 1 144 1 110 1 66 2 24 1 265 2 266 2 269 1 116 1 75 1 154 2 32 2 78 1 193 2 34 2 35 2 278 4 
285 4 167 1 202 1 8 1 10 2 131 1 97 25 254 2 294 12 15 1 16 2 216 1 301 13 181 2 106 1 144 1 110 2 66 3 24 2 265 2 266 3 306 1 71 1 116 2 75 2 154 3 32 1 234 1 78 2 193 2 34 1 162 1 35 2 278 4 
285 4 167 1 202 1 91 1 169 1 8 1 10 4 131 1 97 37 254 7 294 18 15 3 16 3 216 1 301 19 180 1 181 4 106 1 144 1 110 2 66 3 67 1 24 3 223 1 265 4 266 3 306 2 308 1 71 1 116 3 75 1 154 4 32 4 234 1 78 3 193 4 34 1 162 1 35 4 278 8 84 1 123 1 
167 1 91 1 169 1 8 1 10 3 97 32 254 4 15 3 16 2 106 1 181 3 180 1 110 2 24 3 266 3 265 3 116 3 32 1 193 3 34 1 35 3 278 6 123 1 285 4 202 1 131 1 294 15 301 17 216 1 144 1 66 3 67 1 223 1 306 1 71 1 308 1 154 4 75 1 234 1 78 3 162 1 84 1 
285 4 167 1 202 1 91 1 8 1 10 2 131 1 97 32 254 6 294 15 15 3 16 3 216 1 301 17 181 2 106 1 144 1 110 1 66 3 67 1 24 2 223 1 265 2 266 3 306 1 308 1 71 1 116 2 75 1 154 4 32 3 234 1 78 2 193 2 34 1 162 1 35 4 278 4 84 1 123 1 
95 2 10 1 97 2 207 1 54 1 294 1 177 2 18 1 261 2 301 1 181 1 304 1 217 1 222 1 265 1 147 1 225 1 312 1 230 1 274 2 191 1 275 1 233 1 77 1 193 1 317 2 319 1 33 2 121 1 83 2 278 2 
62 1 166 1 25 1 95 2 289 1 130 2 98 1 291 1 252 1 211 1 33 2 161 1 139 1 121 1 261 2 322 1 60 1 304 1 142 1 
62 1 166 1 95 1 289 1 130 2 98 1 252 1 206 1 33 1 161 1 139 1 121 1 261 1 322 1 60 1 142 1 304 1 
25 1 307 1 95 1 309 1 27 1 273 1 191 1 77 1 33 1 121 1 261 1 37 1 60 1 304 1 
62 1 166 1 25 1 95 1 289 1 130 2 98 1 252 1 211 1 33 1 161 1 139 1 121 1 261 1 322 1 60 1 304 1 142 1 
141 1 
201 1 
248 1 253 1 53 1 101 1 136 1 102 1 221 1 267 1 186 2 73 1 270 1 28 1 190 1 153 1 238 1 239 1 40 1 
88 1 247 1 95 1 270 1 27 1 53 1 190 1 191 1 77 1 102 1 192 1 33 1 121 1 261 1 283 1 303 1 304 2 
248 5 53 2 136 1 102 2 16 2 216 1 106 1 221 3 305 1 66 2 24 1 266 2 267 7 71 1 226 1 186 4 73 1 270 2 114 5 116 1 28 6 189 5 153 1 190 2 154 2 234 1 78 1 162 1 35 2 239 1 40 1 
6 1 248 2 172 1 53 1 102 1 55 1 177 1 178 1 63 1 67 1 223 1 267 2 226 2 270 1 190 1 153 1 154 2 274 1 314 1 155 1 159 1 237 1 35 1 83 1 36 1 40 1 123 1 200 1 
42 1 267 1 248 1 186 1 270 1 53 1 190 1 102 1 259 1 239 1 
221 5 66 2 93 1 266 2 267 5 226 2 248 5 186 5 114 5 189 5 28 10 154 2 155 1 16 2 35 2 
136 1 186 1 239 1 73 1 40 1 153 1 
1 1 247 1 95 2 248 1 204 1 53 1 136 1 102 1 58 1 261 2 304 3 218 1 184 1 267 1 73 2 270 1 27 2 188 1 152 1 273 1 190 1 153 1 118 1 191 2 156 1 77 2 33 2 121 2 37 1 40 1 
128 1 246 1 247 1 95 1 10 1 172 1 97 1 174 1 294 1 55 2 177 3 261 1 181 1 304 1 63 2 222 1 265 1 225 1 150 1 26 1 27 1 274 2 314 2 191 1 77 1 193 1 33 1 319 1 121 1 278 2 83 3 41 1 
218 1 221 2 91 1 267 1 248 2 186 4 270 1 114 2 28 4 189 2 188 1 53 1 190 1 102 1 239 2 
29 1 11 1 
29 1 11 1 
29 1 11 1 
29 1 11 1 
29 1 11 1 
29 1 11 1 
29 1 11 1 
29 1 11 1 
119 1 99 1 
91 1 67 1 223 1 265 2 306 1 308 1 10 2 97 8 254 3 154 1 294 4 32 1 15 2 193 2 35 1 278 4 301 4 84 1 181 2 123 1 
201 1 
66 1 265 1 266 1 10 1 97 4 254 2 154 1 294 2 32 1 15 1 16 1 193 1 35 1 278 2 301 2 181 1 281 1 
294 1 24 1 78 1 301 1 116 1 97 2 
294 1 66 1 137 1 78 1 266 1 301 3 116 1 97 4 243 1 154 1 
294 1 78 1 97 1 
301 1 97 1 116 1 
66 1 93 1 265 1 266 1 10 1 97 6 254 3 154 1 294 3 32 1 15 2 16 1 193 1 35 1 278 2 301 3 181 1 281 1 
10 2 131 1 97 13 254 3 294 6 15 1 16 2 301 7 216 1 106 1 181 2 66 2 24 1 265 2 266 2 306 1 71 1 116 1 154 2 32 2 234 1 78 1 193 2 162 1 35 2 278 4 
67 1 223 1 97 6 254 2 154 1 294 3 32 1 15 1 35 1 301 3 123 1 
67 1 223 1 265 1 306 1 308 1 10 1 97 3 52 1 254 2 32 1 294 2 15 1 193 1 278 2 301 1 84 1 181 1 
67 2 223 2 265 1 6 1 10 1 131 1 97 10 254 5 154 2 32 2 294 5 15 3 193 1 35 2 278 2 301 5 181 1 123 1 
66 1 265 1 10 1 131 1 97 2 254 1 154 1 32 1 193 1 278 2 301 2 181 1 
66 1 265 1 266 1 10 1 131 1 97 4 254 2 154 1 294 2 32 1 15 1 16 1 193 1 35 1 278 2 301 2 181 1 
67 1 223 1 265 3 306 1 10 3 131 1 97 3 52 1 254 2 294 2 32 1 15 1 193 3 278 6 301 1 180 1 181 3 
91 1 50 1 10 5 131 1 97 29 52 1 254 10 294 15 15 6 16 2 19 1 301 14 180 1 181 5 66 2 67 3 24 1 223 3 265 5 266 2 306 2 308 1 116 3 154 4 32 4 78 3 193 5 236 1 35 4 278 10 84 1 123 2 281 1 
91 1 10 1 131 1 97 8 254 2 294 4 15 2 301 4 106 1 181 1 24 1 67 1 223 1 265 1 308 1 116 1 154 1 78 1 193 1 35 1 278 2 84 1 123 1 
91 1 10 2 131 1 97 8 254 2 294 4 15 2 301 4 106 1 181 2 24 1 67 1 223 1 265 2 308 1 116 1 154 1 78 1 193 2 35 1 278 4 84 1 123 1 281 1 
10 4 131 1 97 14 254 3 294 7 15 1 16 2 301 7 216 1 106 1 181 4 66 2 24 1 265 4 266 2 306 2 71 1 116 1 154 2 32 2 234 1 78 1 193 4 162 1 35 2 278 8 281 1 
10 2 131 1 97 10 254 1 294 4 15 1 16 1 301 6 216 1 106 1 181 2 66 2 24 1 265 2 266 2 71 1 116 1 154 2 234 1 78 1 193 2 162 1 35 1 278 4 281 1 
91 1 10 1 131 1 97 8 254 2 294 4 15 2 301 4 106 1 181 1 24 1 67 1 223 1 265 1 308 1 116 1 154 1 78 1 193 1 35 1 278 2 84 1 123 1 
10 2 131 1 97 13 254 3 294 6 15 1 16 2 301 7 216 1 106 1 181 2 66 2 24 1 265 2 266 2 306 1 71 1 116 1 154 2 32 2 234 1 78 1 193 2 162 1 35 2 278 4 
10 3 131 1 97 11 254 1 294 5 15 1 16 1 216 1 301 6 106 1 181 3 66 2 24 1 265 3 266 2 306 1 71 1 116 1 154 2 234 1 78 1 193 3 162 1 35 1 278 6 281 1 
10 3 131 1 97 11 254 3 294 5 15 2 16 1 216 1 301 6 106 1 181 3 180 1 66 2 24 1 265 3 266 2 306 1 71 1 116 1 154 2 32 1 234 1 78 1 193 3 162 1 35 1 278 6 
67 3 223 3 308 1 97 7 254 6 154 1 294 4 32 3 15 3 35 1 301 3 84 2 123 1 
10 3 131 1 97 11 254 1 294 5 15 1 16 1 216 1 301 6 106 1 181 3 180 1 66 2 24 1 265 3 266 2 306 1 71 1 116 1 154 2 234 1 78 1 193 3 162 1 35 1 278 6 
135 1 251 1 22 1 274 1 
135 1 129 1 277 1 251 1 51 1 321 1 12 1 22 1 274 1 
201 1 95 1 33 1 261 1 27 1 
247 1 246 1 95 1 27 1 274 1 191 1 314 1 231 1 174 1 77 1 55 1 177 2 33 1 121 1 83 2 261 1 41 1 304 1 
288 1 69 1 48 1 247 2 246 1 95 1 171 1 74 1 274 2 191 2 314 1 231 1 174 1 77 3 55 2 159 1 177 2 33 1 121 1 83 2 261 1 41 1 304 1 
45 1 288 1 69 1 48 1 247 2 246 1 95 2 171 1 271 1 74 1 274 2 191 2 314 1 231 1 77 3 55 2 159 1 177 2 33 2 121 1 83 2 261 2 41 1 304 1 
43 1 95 1 172 1 55 1 177 1 261 1 178 1 63 1 69 1 186 1 73 1 274 1 153 2 314 1 77 2 159 1 195 1 237 1 33 1 239 1 83 1 122 1 283 1 40 2 200 1 
43 1 45 1 288 1 69 1 247 1 95 3 186 1 171 1 73 1 27 1 153 2 191 1 77 4 195 1 33 3 239 1 82 1 121 1 261 3 40 2 283 1 304 1 
95 1 33 1 138 1 121 1 261 1 304 1 
88 1 247 1 95 7 7 1 204 1 291 1 138 1 261 7 304 3 113 1 27 2 191 2 76 1 118 1 233 1 77 3 317 1 194 1 33 6 121 2 322 1 
91 1 247 1 246 1 95 1 10 2 97 6 291 1 254 2 174 1 294 3 54 1 15 2 55 1 296 1 298 1 177 2 261 1 301 3 181 2 304 1 222 2 67 1 223 1 265 2 308 1 310 1 150 1 26 1 312 1 154 1 274 1 191 1 314 1 231 1 77 1 193 2 319 2 33 1 35 1 121 1 83 2 278 4 84 1 41 2 123 1 244 1 
42 1 43 1 1 1 95 1 248 1 13 1 53 2 136 1 102 2 297 1 259 1 261 1 267 1 186 1 73 2 270 2 27 1 190 2 153 3 232 1 77 2 80 1 195 1 33 1 239 1 82 1 40 3 283 1 
88 1 247 1 95 1 191 1 175 1 192 1 77 1 195 1 138 1 33 1 121 1 261 1 304 2 
45 1 95 4 27 1 291 1 273 1 191 1 77 1 56 1 33 4 121 1 261 4 37 1 304 1 
69 1 247 1 95 2 204 1 152 1 118 1 191 1 156 1 77 1 79 1 33 2 121 1 261 2 304 2 
166 1 161 1 95 1 33 1 139 1 121 1 130 1 261 1 27 1 304 1 
95 2 291 1 191 1 233 1 77 1 18 1 33 2 121 1 261 2 322 1 304 1 
69 1 95 5 7 1 27 1 291 1 273 1 191 2 233 1 77 3 56 1 194 1 33 4 121 2 261 5 37 1 304 2 
69 1 95 5 27 1 291 1 273 1 191 2 233 1 77 3 56 1 194 1 33 4 121 2 261 5 37 1 323 1 304 2 
247 1 246 1 95 1 27 1 271 1 274 1 191 1 314 1 231 1 77 1 55 1 177 2 33 1 121 1 83 2 261 1 41 1 304 1 
88 1 69 1 247 1 95 1 204 1 118 1 76 1 191 1 77 1 33 1 121 1 261 1 304 2 
44 1 275 1 292 1 38 1 
275 1 44 2 209 1 214 1 292 1 38 1 
275 1 44 2 292 1 38 1 
275 1 256 1 44 2 209 1 297 1 214 1 292 1 38 1 40 1 153 1 
201 1 
30 1 81 1 268 1 241 1 240 1 229 1 39 1 
30 1 111 1 280 1 
245 1 30 1 68 1 235 1 163 1 250 1 229 1 
30 2 158 1 81 1 268 1 241 1 240 1 229 2 39 1 293 1 
250 1 
250 1 
250 1 
286 1 250 1 
143 1 89 1 47 1 250 1 229 2 227 1 30 2 235 1 158 2 241 1 
166 1 130 1 250 1 
89 1 250 1 229 2 227 1 205 1 293 1 30 2 235 1 158 2 241 1 
235 1 250 1 
245 1 68 1 89 1 268 1 229 4 227 1 30 4 235 1 158 2 81 2 240 2 241 3 163 1 39 1 
30 1 235 1 158 1 3 1 151 1 250 1 229 1 182 1 
245 1 30 1 68 1 235 1 148 1 250 1 229 1 
61 2 92 1 104 1 241 2 
250 1 
143 1 30 1 235 1 158 1 250 1 229 1 
100 1 
250 1 
245 1 30 1 235 1 250 1 229 1 
89 1 235 1 241 1 227 1 
241 1 240 1 

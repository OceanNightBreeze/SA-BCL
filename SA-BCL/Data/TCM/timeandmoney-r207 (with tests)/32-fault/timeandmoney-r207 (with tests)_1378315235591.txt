#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (174,191) 170 (16,274) (16,274) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (174,191) 170 (16,274) (16,274) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (174,191) 170 (16,274) (16,274) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (174,191) 170 (16,274) (16,274) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 306 38 257 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 306 38 257 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 55 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 258 247 15 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 258 247 47 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 200 287 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 84 175 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 84 175 220 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 258 247 51 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 55 159 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 302 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 302 118 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 111 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 258 93 31 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 258 225 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 258 247 47 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 258 225 311 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 258 247 47 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 258 247 21 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 258 247 21 110 216 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 258 247 21 110 216 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 21 110 138 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 258 225 311 102 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 258 225 311 102 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 258 247 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 258 (25,277) 29 46 (18,276) 128 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (197,263) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 258 247 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 258 93 31 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 84 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 258 (182,199) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 258 (25,277) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 258 (25,277) 29 46 (18,276) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
170 1 274 1 273 1 320 1 275 1 58 1 333 1 16 1 326 1 191 1 235 1 
170 1 274 1 273 1 320 1 275 1 58 1 333 1 16 1 326 1 191 1 235 1 
170 1 274 1 273 1 320 1 275 1 58 1 333 1 16 1 326 1 191 1 235 1 
170 1 274 1 273 1 320 1 275 1 58 1 333 1 16 1 326 1 191 1 235 1 
237 3 85 1 306 1 176 1 58 1 141 1 318 1 273 4 320 1 180 1 149 2 280 2 326 1 66 1 70 3 186 1 228 1 38 1 235 4 
320 1 273 2 85 1 275 1 326 1 66 1 27 1 96 1 70 1 304 1 306 1 233 1 141 1 58 1 333 1 235 2 
237 1 320 2 273 3 85 1 275 1 149 1 326 2 70 2 174 1 176 1 141 1 58 1 235 3 
123 1 237 5 318 1 320 2 273 7 275 1 149 3 280 1 66 1 326 2 97 1 70 3 257 1 174 1 306 1 228 1 38 1 176 2 58 1 267 1 235 7 
123 1 237 5 318 1 320 2 273 7 275 1 149 3 280 1 66 1 326 2 97 1 70 3 257 1 174 1 306 1 228 1 38 1 176 2 58 1 267 1 235 7 
315 1 256 1 121 1 
195 1 
99 2 130 2 160 1 24 2 94 2 249 2 10 2 327 1 
291 1 82 1 83 2 129 1 240 1 86 1 88 1 242 1 245 1 130 3 42 1 94 2 249 2 10 2 251 2 172 1 204 2 206 2 99 2 207 1 314 1 271 1 104 1 272 1 105 2 277 1 323 1 218 1 24 3 327 1 282 1 328 1 67 1 229 1 160 1 334 1 122 1 
99 1 130 1 109 1 266 1 76 1 24 1 94 1 249 1 10 1 327 1 
315 1 239 1 130 1 92 1 109 1 94 1 24 1 221 1 49 1 222 1 202 1 154 1 121 1 189 1 
315 1 130 1 92 1 109 1 249 1 94 1 24 1 221 1 10 1 202 2 222 1 154 2 99 1 121 1 189 1 
202 1 154 1 55 1 156 1 
202 1 154 1 258 1 156 1 247 1 15 1 
202 1 154 1 258 1 
130 1 109 1 249 1 94 1 24 1 327 1 10 1 202 1 154 1 99 1 156 1 266 1 76 1 192 1 
315 1 
202 1 154 1 258 1 156 1 247 1 47 1 
202 2 154 2 155 1 287 1 227 1 156 1 200 1 48 1 152 1 
99 3 130 3 160 1 24 3 94 3 249 3 10 1 95 1 
99 1 130 1 109 1 266 1 24 1 94 1 249 1 
2 1 194 1 99 1 130 1 109 1 24 1 94 1 249 1 10 1 
291 1 79 1 82 1 83 2 129 1 194 1 240 1 86 1 242 1 130 4 92 1 42 1 94 3 249 3 10 2 251 1 95 1 202 1 172 1 204 1 206 1 99 3 207 1 314 1 271 1 105 1 277 1 323 1 109 1 221 1 24 4 327 1 282 1 328 1 67 1 153 1 222 1 154 1 229 1 332 1 160 1 189 1 334 1 122 1 
99 1 40 1 130 2 160 1 24 2 94 2 249 1 49 1 95 1 
315 1 194 1 130 3 92 1 109 1 249 3 94 3 24 3 221 1 10 1 250 1 95 2 202 1 153 1 222 1 154 1 99 3 332 1 189 1 
194 1 22 1 130 2 249 2 94 2 24 2 10 1 95 1 99 2 305 1 
240 1 86 1 242 1 277 1 130 1 42 1 24 1 251 1 282 1 67 1 328 1 204 1 206 1 160 1 122 1 
240 1 86 1 242 1 182 1 130 1 131 1 24 1 251 1 282 1 67 1 328 1 204 1 206 1 160 1 122 1 
314 1 271 1 105 2 129 1 83 2 295 1 244 1 323 1 133 1 169 1 224 1 172 1 305 1 207 2 34 1 334 1 
222 1 99 1 64 1 130 1 109 1 24 1 94 1 249 1 
256 1 160 1 
2 1 194 1 130 2 94 2 24 2 249 1 10 1 99 1 160 2 
224 1 22 1 305 1 
240 1 86 1 242 1 277 1 130 1 42 1 24 1 251 1 282 1 67 1 328 1 204 1 255 1 206 1 160 1 122 1 
194 1 40 1 130 5 249 4 94 5 24 5 10 1 49 1 185 1 95 2 153 1 171 1 99 4 160 1 
64 1 99 2 130 2 109 1 266 1 24 2 94 2 249 2 
240 1 86 1 242 1 277 1 130 2 42 1 249 1 94 1 24 2 251 1 282 1 95 1 328 1 67 1 153 1 204 1 206 1 99 1 305 1 122 1 
309 1 59 1 179 1 
309 1 59 1 179 1 
59 1 179 1 
59 1 179 1 
28 1 296 1 
28 1 296 1 
28 1 296 1 59 1 179 1 
329 1 59 1 179 1 
329 1 59 1 179 1 
329 1 59 1 179 1 
309 1 59 1 179 1 
196 1 59 1 179 1 
28 1 4 1 296 1 75 1 59 2 179 2 
84 1 243 1 116 1 175 1 59 1 179 1 
202 1 84 1 154 1 243 1 116 1 175 1 220 1 59 1 179 1 
318 1 306 1 66 1 
27 1 306 1 66 1 
27 1 318 2 294 1 234 1 66 3 268 1 
27 1 318 1 147 1 294 1 66 2 268 1 
27 1 318 1 294 1 66 2 268 2 
202 1 51 1 154 1 258 1 156 1 247 1 
202 2 269 1 154 2 55 1 156 2 35 1 159 1 
214 1 48 1 152 1 202 2 300 1 154 2 302 1 155 1 114 1 227 1 156 1 178 1 
214 1 48 1 152 1 300 1 202 1 154 1 302 1 155 1 114 1 227 1 118 1 178 1 
86 1 122 1 
328 1 86 1 148 1 132 1 111 2 122 1 
256 1 111 1 
254 1 86 1 
236 1 
328 1 86 1 122 1 
86 1 146 1 
0 1 272 4 105 7 244 1 65 1 322 1 6 1 297 2 201 3 151 1 50 1 71 1 207 3 289 2 33 1 264 1 100 1 
0 1 272 4 105 7 244 1 65 1 322 1 6 1 297 2 201 3 151 1 50 1 71 1 207 3 289 2 33 1 264 1 100 1 
0 1 272 4 105 7 244 1 65 1 322 1 6 1 297 2 201 3 151 1 50 1 71 1 30 1 207 3 289 2 33 1 264 1 100 1 
125 1 0 1 129 1 83 2 246 1 6 2 297 1 201 2 252 1 172 1 207 3 14 1 100 1 271 1 272 3 105 6 65 1 323 1 151 1 330 1 71 1 289 1 119 1 163 1 
0 1 83 4 129 2 244 1 6 1 297 2 201 4 50 1 172 2 260 1 207 4 264 1 271 2 272 5 105 9 65 1 323 2 322 1 219 1 151 1 71 1 289 3 33 1 163 1 
39 1 237 1 85 1 241 1 89 1 41 1 9 1 251 1 204 1 54 1 206 1 306 1 265 1 141 1 58 1 211 1 60 1 318 1 273 2 320 1 275 1 326 1 66 2 282 1 67 1 27 1 70 1 231 1 234 1 235 2 
39 1 237 2 85 1 241 1 89 1 251 1 204 1 135 1 54 1 206 1 259 1 306 1 265 1 141 1 211 1 60 1 318 1 273 3 320 1 275 1 326 1 66 2 282 1 67 1 27 1 70 1 231 1 232 1 234 1 235 3 
39 1 237 2 85 1 89 1 251 1 204 1 135 1 54 1 206 1 259 1 306 1 141 1 211 1 60 1 318 1 273 2 275 1 66 2 282 1 67 1 27 1 70 1 231 1 234 1 235 2 
39 2 81 1 61 1 127 1 320 1 273 1 240 1 86 1 275 2 217 1 325 1 326 1 251 1 282 1 67 1 204 1 54 2 206 1 72 1 232 1 231 2 122 1 235 1 
39 1 318 1 320 1 273 1 241 1 275 1 89 1 9 1 66 2 326 1 251 1 282 1 27 1 67 1 135 1 204 1 206 1 54 1 306 1 265 1 231 1 234 1 211 1 58 1 60 1 235 1 
136 1 
240 1 214 1 63 1 93 1 251 1 152 1 202 1 204 1 154 1 206 1 258 1 155 1 114 1 227 1 31 1 
239 1 293 1 92 1 130 1 109 1 221 1 94 1 24 1 49 1 222 1 202 2 225 1 301 1 154 2 258 1 308 1 117 1 36 2 310 1 189 1 
315 1 239 1 293 1 247 1 92 1 130 1 109 1 94 1 24 1 221 1 47 1 49 1 222 1 202 2 301 1 154 2 258 1 308 1 117 1 36 3 310 1 121 1 189 1 143 1 
239 1 293 1 92 1 130 1 109 1 94 1 24 1 221 1 49 1 222 1 202 2 225 1 301 1 154 2 258 1 308 1 117 1 36 2 310 1 311 1 189 1 
202 1 154 1 258 1 247 1 47 1 
239 1 195 1 293 1 247 1 130 1 92 1 94 1 45 1 167 1 134 1 299 1 49 1 202 2 301 1 258 1 98 1 308 1 310 1 21 1 214 1 63 1 23 1 324 1 109 1 24 1 221 1 152 1 222 1 154 2 155 1 227 1 117 1 36 2 189 1 
239 1 293 1 247 1 130 1 92 1 94 1 45 1 167 1 134 1 299 1 49 1 202 2 301 1 258 1 98 1 308 1 310 1 21 1 214 1 63 1 216 1 23 1 324 1 110 1 109 1 221 1 24 1 152 1 222 1 154 2 155 1 227 1 117 1 36 2 189 1 77 1 
239 1 293 1 247 1 130 1 92 1 94 1 45 1 167 1 134 1 299 1 49 1 202 2 301 1 258 1 98 1 308 1 310 1 21 1 214 1 63 1 216 1 23 1 324 1 110 1 109 1 221 1 24 1 152 1 222 1 154 2 155 1 227 1 117 1 36 2 189 1 77 1 
239 1 293 1 130 1 92 1 94 1 167 1 134 1 299 1 49 1 202 2 301 1 308 1 138 1 310 1 21 1 214 1 63 1 110 1 109 1 221 1 24 1 152 1 222 1 154 2 155 1 227 1 117 1 188 1 36 2 189 1 190 1 
102 1 239 1 293 1 92 1 130 1 109 1 94 1 24 1 221 1 49 1 222 1 202 2 225 1 301 1 154 2 258 1 308 1 117 1 36 2 310 1 311 1 189 1 
102 1 239 1 293 1 92 1 130 1 109 1 94 1 24 1 221 1 49 1 222 1 202 2 225 1 301 1 154 2 258 1 308 1 117 1 36 2 310 1 311 1 189 1 
239 1 293 1 130 1 92 1 94 1 167 1 134 1 299 1 49 1 202 2 301 1 308 1 310 1 21 1 214 1 63 1 109 1 24 1 221 1 152 1 222 1 154 2 155 1 227 1 117 1 188 1 36 2 189 1 
314 1 271 1 0 1 272 2 105 2 129 1 83 2 3 1 22 1 323 1 201 1 168 1 169 1 224 1 172 1 305 1 264 1 334 1 
314 1 271 1 105 2 129 1 83 2 295 1 244 1 323 1 169 1 224 1 172 1 305 1 207 2 34 1 334 1 
314 1 271 1 272 2 105 4 129 1 83 2 3 1 244 1 323 1 7 1 169 1 224 2 172 1 207 2 305 2 34 1 264 1 334 1 
314 1 271 1 272 2 105 2 129 1 83 2 3 1 323 1 168 1 224 1 172 1 305 1 262 1 264 1 334 1 
314 1 271 1 105 2 129 1 83 2 295 1 244 1 323 1 224 1 172 1 305 1 207 2 262 1 34 1 334 1 
314 1 271 1 272 2 105 4 129 1 83 2 3 1 244 1 323 1 7 1 224 2 172 1 207 2 305 2 262 1 34 1 264 1 334 1 
314 1 271 1 272 2 129 1 83 2 3 1 105 4 244 1 323 1 7 1 224 2 172 1 207 2 305 2 34 1 264 1 334 1 
291 1 240 1 129 1 83 2 86 1 242 1 245 1 130 1 42 1 251 1 172 1 204 1 206 1 207 1 314 1 271 1 272 1 105 2 277 1 323 1 24 1 282 1 328 1 67 1 229 1 160 1 122 1 334 1 
240 1 129 1 83 2 86 1 242 1 245 1 131 1 130 1 251 1 172 1 204 1 206 1 207 1 314 1 271 1 272 1 105 2 182 1 323 1 24 1 282 1 328 1 67 1 229 1 290 1 160 1 122 1 334 1 
314 1 271 1 272 2 105 4 129 1 83 2 3 1 244 1 323 1 7 1 224 2 11 1 172 1 207 2 305 2 34 1 264 1 334 1 
291 1 3 1 129 1 83 2 86 1 242 1 244 1 7 1 130 1 42 1 41 1 251 1 172 1 204 1 206 1 207 2 305 2 264 1 314 1 271 1 272 2 105 4 145 1 277 1 323 1 24 1 282 1 328 1 67 1 224 2 34 1 122 1 334 1 
0 1 194 1 83 2 129 1 3 1 244 1 7 1 130 1 201 1 249 1 94 1 10 1 172 1 11 1 99 1 207 1 305 1 264 1 314 1 103 1 271 1 272 2 105 3 22 1 323 1 24 1 224 1 34 1 334 1 
83 2 129 1 244 1 297 1 201 2 50 1 169 1 172 1 256 1 305 1 207 3 264 1 314 1 271 1 272 3 105 6 65 1 323 1 322 1 224 1 71 1 289 2 33 1 160 2 334 1 
80 1 0 1 83 4 129 2 3 2 244 1 245 1 7 2 201 2 172 2 11 1 207 5 305 6 261 1 14 2 264 2 314 2 271 2 272 7 105 12 22 5 183 1 323 2 109 1 68 1 224 6 229 1 289 1 34 1 119 2 37 1 160 1 334 1 335 1 
240 1 129 1 83 2 86 1 242 1 245 1 130 2 42 1 94 1 249 1 251 1 95 1 11 1 172 1 204 1 206 1 255 1 99 1 207 1 139 1 142 1 314 1 271 1 144 1 272 1 105 2 22 1 277 1 323 1 24 2 282 1 328 1 67 1 153 1 229 1 160 1 122 1 334 1 
0 1 240 1 83 6 3 2 86 2 242 2 244 5 245 1 7 2 249 1 94 1 251 1 95 1 172 3 11 1 253 2 99 1 264 5 270 1 271 3 18 2 272 14 105 28 22 2 277 2 183 1 109 1 24 3 282 2 112 2 289 6 33 1 34 2 122 2 291 2 129 3 130 3 297 1 42 2 43 1 201 7 50 1 204 1 206 1 207 14 305 7 314 3 145 2 65 2 322 2 323 3 153 1 67 2 328 2 224 7 71 2 229 1 157 1 160 3 334 3 
81 1 1 1 83 4 240 2 86 4 5 1 88 2 245 1 8 1 249 1 94 1 251 7 95 1 169 1 172 2 99 1 262 1 271 2 272 1 105 2 278 1 184 1 24 1 282 3 113 1 122 3 124 1 129 2 198 1 130 1 41 1 204 6 206 7 207 1 137 1 56 1 314 2 323 2 67 4 328 1 72 1 229 1 334 2 
194 1 83 2 129 1 3 1 244 1 7 1 130 1 201 1 249 1 94 1 10 1 172 1 11 1 99 1 305 1 207 2 264 1 314 1 271 1 272 1 105 3 22 1 323 1 107 1 24 1 224 1 289 1 34 1 334 1 
0 1 193 1 126 1 164 1 83 6 129 3 3 3 87 1 244 1 246 2 7 3 201 2 298 1 172 3 207 9 14 2 264 3 57 3 17 1 213 1 313 1 271 3 272 13 105 22 323 3 219 1 73 1 289 1 34 1 119 2 158 1 187 1 331 1 120 1 163 1 
193 2 126 2 164 1 83 4 129 2 3 3 244 1 246 2 7 3 201 1 298 1 172 2 207 9 14 2 264 3 57 3 17 1 213 1 313 1 271 2 272 12 105 21 323 2 219 1 115 1 289 1 34 1 158 1 119 2 187 1 331 1 120 1 163 1 
0 1 193 1 126 1 164 1 83 6 129 3 3 3 87 1 244 2 246 2 7 3 201 2 298 1 172 3 207 12 14 2 264 3 57 4 17 1 213 1 313 1 271 3 272 14 105 26 323 3 219 1 115 1 289 1 34 2 119 2 158 1 187 1 331 1 120 1 163 1 
0 1 193 1 126 1 164 1 83 6 129 3 3 3 87 1 244 1 246 2 7 3 201 2 298 1 172 3 207 9 14 2 264 3 57 3 17 1 213 1 313 1 271 3 272 13 105 22 323 3 219 1 115 1 289 1 34 1 119 2 158 1 187 1 331 1 120 1 163 1 
0 1 193 1 126 1 164 1 83 4 129 2 3 3 244 4 246 2 7 3 297 3 201 5 298 1 50 3 172 2 207 15 14 2 264 6 57 3 17 1 213 1 313 1 271 2 272 21 105 36 65 3 322 3 323 2 219 1 71 3 115 1 289 4 33 3 34 1 119 2 158 1 187 1 331 1 120 1 163 1 
124 1 129 1 83 2 86 1 88 2 245 1 130 2 94 2 251 2 11 1 172 1 204 2 206 2 207 1 177 1 314 1 271 1 272 1 105 2 181 1 323 1 150 1 184 1 24 2 282 1 67 1 284 1 229 1 230 1 122 1 334 1 
318 1 106 1 89 1 41 1 66 2 251 2 282 1 27 1 67 1 53 1 135 1 204 2 206 2 54 1 306 1 288 1 265 1 234 1 60 1 
318 1 89 1 66 2 251 1 282 1 27 1 67 1 53 1 135 1 204 1 206 1 54 1 306 1 265 1 234 1 312 1 60 1 
81 1 240 1 86 1 106 1 217 1 248 1 251 1 282 1 67 1 204 1 206 1 54 1 72 1 122 1 
318 1 106 1 89 1 66 2 251 1 282 1 27 1 67 1 53 1 135 1 204 1 206 1 54 1 306 1 288 1 265 1 234 1 60 1 
13 1 
315 1 256 1 214 1 197 1 263 1 121 1 167 1 
195 1 63 1 214 1 23 1 324 1 247 1 167 1 45 1 152 1 258 1 155 1 98 1 227 1 
128 1 240 1 86 3 251 1 46 1 254 2 204 1 206 1 258 1 63 1 214 1 276 1 321 1 148 1 25 1 152 1 282 1 328 1 67 2 29 1 155 1 114 1 227 1 122 1 
195 2 3 2 244 2 246 1 7 2 91 4 167 4 298 1 14 1 264 2 213 1 313 1 214 6 63 1 152 1 155 1 227 1 34 2 119 1 187 1 331 1 162 4 
244 1 130 1 249 1 94 1 167 2 10 1 202 1 52 2 99 1 264 2 266 1 317 1 63 1 214 2 65 1 322 1 109 1 24 1 327 1 152 1 154 1 71 1 155 1 227 1 157 1 76 1 77 1 192 1 
315 1 155 1 214 1 197 1 63 1 227 1 121 1 167 1 152 1 
3 1 195 1 214 1 244 1 7 1 91 1 167 2 34 1 264 1 162 1 
258 1 247 1 
319 1 240 1 214 1 63 1 93 1 251 1 152 1 204 1 206 1 258 1 155 1 114 1 227 1 31 1 
291 1 82 1 83 2 129 1 240 1 86 1 242 1 130 3 42 1 94 2 249 2 251 1 10 2 172 1 204 1 206 1 99 2 207 1 314 1 271 1 105 1 277 1 323 1 24 3 327 1 282 1 67 1 328 1 229 1 160 1 122 1 334 1 
315 1 195 1 63 1 214 1 165 1 167 1 152 1 155 1 114 1 227 1 121 1 162 1 
84 1 243 1 
84 1 243 1 
84 1 243 1 
59 1 179 1 
84 1 243 1 
84 1 243 1 
84 1 243 1 
84 1 243 1 
84 1 243 1 
271 2 0 1 272 4 105 8 129 2 83 4 244 1 65 1 322 1 323 2 297 1 201 3 50 1 172 2 71 1 207 4 289 2 33 1 264 1 163 1 
272 3 105 6 256 1 71 1 207 3 244 1 289 2 65 1 322 1 33 1 264 1 297 1 201 2 50 1 
271 1 272 2 129 1 83 2 3 1 105 2 323 1 7 1 172 1 264 1 101 1 
272 1 105 2 207 1 14 1 246 1 119 1 
80 1 0 4 3 2 129 1 83 2 244 4 7 2 297 1 201 8 50 1 172 1 261 1 207 10 14 2 264 5 271 1 272 13 105 23 65 2 322 2 323 1 68 1 71 2 289 4 34 1 33 1 157 1 119 2 163 1 
105 1 207 1 119 1 
272 1 105 1 14 1 
0 1 272 3 105 6 3 1 244 1 7 1 201 1 253 1 207 3 34 1 264 1 
0 1 83 4 129 2 3 2 244 1 246 1 7 2 201 2 298 1 172 2 207 5 14 1 264 2 213 1 313 1 271 2 272 6 105 11 323 2 219 1 289 1 34 1 119 1 187 1 331 1 163 1 
0 1 272 3 105 6 244 1 65 1 322 1 201 2 71 1 207 3 289 1 264 1 
271 1 0 1 272 1 105 3 129 1 83 2 65 1 323 1 201 2 50 1 252 1 172 1 71 1 207 2 289 1 33 1 163 1 
271 1 0 2 272 5 83 2 129 1 105 10 65 2 244 2 323 1 322 1 219 1 201 5 172 1 71 2 207 5 289 3 157 1 264 2 
271 1 272 2 129 1 83 2 3 1 105 2 323 1 219 1 172 1 264 1 
271 1 272 2 129 1 83 2 3 1 105 2 323 1 7 1 219 1 172 1 264 1 
271 3 0 1 272 1 105 3 129 3 83 6 87 1 65 1 323 3 219 1 201 2 252 1 172 3 71 1 207 2 289 1 163 1 
0 3 83 8 129 4 87 1 244 2 246 1 201 6 50 1 252 1 172 4 207 8 14 1 264 2 101 1 271 4 272 7 105 15 65 2 322 1 323 4 219 1 330 1 71 2 289 3 33 1 157 1 119 1 163 1 
0 1 83 4 129 2 3 2 244 4 246 1 7 2 297 1 201 5 298 1 50 1 172 2 207 11 14 1 264 5 213 1 313 1 271 2 272 13 105 24 65 2 322 2 323 2 219 1 71 2 289 4 33 1 34 1 157 1 119 1 187 1 331 1 163 1 
0 1 83 6 129 3 3 2 244 4 246 1 7 2 297 1 201 5 298 1 50 1 172 3 207 11 14 1 264 5 101 1 213 1 313 1 271 3 272 13 105 24 65 2 322 2 323 3 219 1 71 2 289 4 33 1 34 1 157 1 119 1 187 1 331 1 163 1 
0 1 83 6 129 3 3 2 244 2 246 1 7 2 297 1 201 4 298 1 50 1 172 3 207 8 14 1 264 3 101 1 213 1 313 1 271 3 272 9 105 17 65 1 322 1 323 3 219 1 71 1 289 3 33 1 34 1 119 1 187 1 331 1 163 1 
0 3 83 6 129 3 3 2 244 4 246 1 7 2 297 1 201 7 298 1 50 1 172 3 207 11 14 1 264 5 101 1 213 1 313 1 271 3 272 13 105 24 65 2 322 2 323 3 219 1 71 2 289 4 33 1 34 1 157 1 119 1 187 1 331 1 163 1 
0 1 83 4 129 2 3 2 244 4 246 1 7 2 297 1 201 5 298 1 50 1 172 2 207 11 14 1 264 5 213 1 313 1 271 2 272 13 105 24 65 2 322 2 323 2 219 1 71 2 289 4 33 1 34 1 157 1 119 1 187 1 331 1 163 1 
0 1 83 4 129 2 3 2 244 1 246 1 7 2 201 2 298 1 172 2 207 5 14 1 264 2 213 1 313 1 271 2 272 6 105 11 323 2 219 1 289 1 34 1 119 1 187 1 331 1 163 1 
83 6 129 3 3 2 244 1 246 1 7 2 201 1 298 1 172 3 207 5 14 1 264 2 101 1 213 1 313 1 271 3 272 6 105 11 323 3 219 1 289 1 34 1 119 1 187 1 331 1 163 1 
0 2 83 6 129 3 3 2 87 1 246 1 7 2 201 3 298 1 172 3 207 3 14 1 264 2 213 1 313 1 271 3 272 7 105 10 323 3 219 1 289 1 119 1 187 1 331 1 163 1 
0 3 272 3 105 7 244 1 65 3 322 1 201 6 50 2 71 3 207 4 289 3 33 1 264 1 
83 6 129 3 3 2 87 1 244 1 246 1 7 2 201 1 298 1 172 3 207 5 14 1 264 2 213 1 313 1 271 3 272 6 105 11 323 3 219 1 289 1 34 1 119 1 187 1 331 1 163 1 
226 1 40 1 130 1 160 1 24 1 94 1 49 1 
40 1 130 1 279 1 94 1 24 1 49 1 285 1 203 1 286 1 173 1 226 1 160 1 
67 1 81 1 204 1 256 1 206 1 240 1 86 1 72 1 122 1 251 1 282 1 
240 1 86 1 242 1 277 1 130 2 249 1 94 1 24 2 251 1 95 1 282 1 328 1 67 1 204 1 206 1 99 1 160 1 122 1 
146 1 86 3 242 1 277 1 92 1 130 2 109 1 281 1 249 2 94 2 24 2 251 1 95 1 282 1 222 1 328 2 67 1 204 1 205 1 206 1 99 1 160 1 122 2 
86 3 242 1 130 2 92 1 94 2 249 2 251 2 95 1 204 2 206 2 205 1 99 1 146 1 182 1 281 1 109 1 24 2 26 1 282 1 67 1 328 2 222 1 160 1 122 2 
202 1 254 1 204 1 206 1 154 1 258 1 86 1 199 1 281 1 251 1 
202 1 254 1 204 1 206 1 154 1 258 1 86 1 281 1 25 1 251 1 
67 1 204 1 206 1 278 1 251 1 282 1 
124 1 240 2 5 1 86 3 88 1 198 1 41 1 44 1 251 6 204 5 206 6 137 1 56 1 278 1 148 1 282 2 67 3 328 1 113 1 122 2 
0 1 83 4 86 1 242 1 244 3 249 1 94 1 251 1 95 1 172 2 11 1 99 1 264 3 271 2 18 1 272 7 105 14 181 1 277 1 183 1 109 1 24 2 282 1 289 4 33 1 122 1 291 1 129 2 130 2 42 1 41 1 297 1 201 5 50 1 204 1 206 1 207 7 305 1 314 2 145 1 65 2 323 2 322 2 67 1 328 1 224 1 71 2 157 1 160 3 334 2 
319 1 240 1 86 1 63 1 276 1 25 1 46 1 251 1 152 1 202 1 254 1 29 1 204 1 154 1 206 1 258 1 155 1 156 1 227 1 
236 1 86 1 278 1 321 1 148 1 111 1 251 1 282 1 328 1 67 2 204 1 206 1 122 1 
81 1 240 1 86 1 166 1 41 1 251 4 26 1 282 1 67 1 204 4 206 4 72 1 122 1 
1 1 86 1 5 1 8 1 281 1 251 2 282 1 328 1 67 2 204 2 206 2 303 1 56 1 122 1 
27 1 67 1 204 1 206 1 240 1 306 1 89 1 66 1 251 1 282 1 
124 1 86 1 41 1 251 2 282 1 284 1 67 1 204 2 135 1 206 2 122 1 
81 1 124 1 240 1 86 3 198 1 166 1 281 1 41 1 251 5 282 2 67 2 204 4 206 5 72 1 137 1 122 2 
81 1 124 1 240 1 86 3 166 1 281 1 41 1 251 5 282 2 67 2 204 4 206 5 72 1 137 1 161 1 122 2 
240 1 86 1 242 1 182 1 130 2 249 1 94 1 24 2 251 1 95 1 282 1 328 1 67 1 204 1 206 1 99 1 160 1 122 1 
86 1 5 1 148 1 281 1 251 1 44 1 282 1 328 1 67 2 204 1 206 1 56 1 122 1 
215 1 90 1 130 1 150 1 94 1 24 1 208 1 230 1 177 1 
316 1 20 1 215 1 
62 1 208 1 215 1 90 1 160 1 
315 1 316 1 62 2 20 1 215 1 90 2 92 1 109 1 221 1 222 1 202 2 154 2 156 1 208 2 74 1 332 1 160 1 121 1 189 1 
70 1 256 1 85 1 141 1 
70 1 273 1 320 1 85 1 141 1 326 1 235 1 
275 1 231 1 235 1 
320 1 273 3 85 1 326 1 283 1 223 1 70 1 12 1 233 2 58 1 141 1 235 3 
237 1 320 1 273 2 180 1 85 1 280 1 326 1 70 1 141 1 235 2 
318 1 320 1 273 1 149 1 326 1 66 1 70 1 306 1 228 1 58 1 235 1 
70 1 273 1 320 1 85 1 58 1 326 1 235 1 
273 1 320 1 85 2 141 1 58 1 326 1 235 1 
320 2 273 2 85 1 292 1 326 2 70 1 307 1 140 1 58 1 235 2 
123 1 237 2 320 1 273 3 85 1 149 1 326 1 97 1 70 2 176 1 141 1 58 1 235 3 
237 1 238 1 318 1 320 1 273 2 85 1 66 2 326 1 27 1 70 1 306 1 234 1 141 1 58 1 235 2 
237 2 320 1 273 3 180 1 85 1 149 1 280 1 326 1 186 1 70 2 176 1 141 1 58 1 235 3 
70 1 273 1 320 1 85 1 141 1 58 1 326 1 235 1 
237 2 273 4 320 1 85 2 180 1 149 1 326 1 283 1 70 3 12 1 233 1 176 1 141 2 235 4 
237 1 320 1 273 2 85 1 326 1 70 1 210 1 58 1 267 1 141 1 235 2 212 1 
320 1 273 3 85 1 108 1 326 1 283 1 70 1 12 2 233 2 58 1 141 1 235 3 
19 1 70 2 209 1 78 2 
69 1 273 1 320 1 58 1 326 1 235 1 
237 1 97 1 70 1 273 2 320 1 85 1 141 1 58 1 326 1 235 2 
32 1 
70 1 273 1 320 1 85 1 141 1 58 1 326 1 235 1 
237 1 320 1 273 3 85 1 326 1 97 1 70 1 233 1 58 1 141 1 235 3 
237 1 273 1 70 1 149 1 176 1 235 1 
70 1 85 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (80,295) (80,295) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (80,295) (80,295) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (80,295) (80,295) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (80,295) (80,295) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 3 198 111 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 3 198 111 253 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 3 198 111 (251,276) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 3 198 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 204 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 44 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (13,45,194,231) (13,45,194,231) (98,275,283) (98,275,283) (98,275,283) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (13,45,194,231) (13,45,194,231) (98,275,283) (98,275,283) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (13,45,194,231) (13,45,194,231) (98,275,283) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (13,45,194,231) (13,45,194,231) (98,275,283) (98,275,283) (98,275,283) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 52 256 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 207 31 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 21 225 116 268 66 170 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 21 225 116 268 66 170 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 21 225 116 268 66 170 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 21 225 116 268 66 170 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 21 225 116 268 66 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 3 156 213 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 204 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 204 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 52 256 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 3 198 111 253 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 21 225 116 268 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 21 225 116 268 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 40 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 3 131 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 3 131 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 3 131 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 3 131 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 3 198 111 (251,276) (251,276) 204 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 3 131 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 135 1 45 1 231 1 15 1 124 1 86 1 80 1 194 1 187 1 179 1 
295 1 135 1 45 1 231 1 15 1 124 1 86 1 80 1 194 1 187 1 179 1 
295 1 135 1 45 1 231 1 15 1 124 1 86 1 80 1 194 1 187 1 179 1 
295 1 135 1 45 1 231 1 15 1 124 1 86 1 80 1 194 1 187 1 179 1 
161 1 224 1 45 4 123 2 46 2 124 4 71 1 72 1 87 1 278 1 29 1 231 1 13 3 36 1 37 1 194 1 179 1 120 3 
223 1 224 1 45 2 124 2 72 1 165 1 278 1 187 1 76 1 231 1 16 1 15 1 37 1 194 1 179 1 120 1 234 1 
161 1 224 1 45 3 46 1 124 3 72 1 231 2 13 1 15 1 194 2 271 1 179 1 120 2 
161 3 224 1 45 9 123 2 46 4 71 1 184 1 124 9 72 1 87 1 278 1 29 1 6 1 189 1 231 2 13 7 15 1 36 1 37 1 270 1 194 2 271 1 179 1 120 5 
161 3 224 1 45 9 123 2 46 4 71 1 184 1 124 9 72 1 87 1 278 1 29 1 6 1 189 1 231 2 13 7 15 1 36 1 37 1 270 1 194 2 271 1 179 1 120 5 
40 1 178 1 145 1 
92 2 200 1 145 1 
198 1 111 1 3 1 
198 1 111 1 3 1 253 1 
198 1 111 1 3 1 251 1 
222 1 83 1 258 1 27 1 145 1 28 1 228 1 75 1 173 1 58 1 113 1 250 1 178 1 255 1 
198 1 3 1 
8 1 250 1 216 1 228 1 262 1 
250 2 178 1 216 1 145 1 119 1 129 1 228 2 262 1 
250 1 216 1 228 1 
198 1 111 1 3 1 250 1 251 1 276 1 228 1 262 1 
145 1 
250 2 178 1 216 1 145 1 64 1 129 1 228 2 262 1 
0 1 198 1 163 2 3 1 84 1 203 1 202 1 205 2 204 1 276 1 244 2 129 1 212 4 281 2 250 5 251 1 178 1 216 2 218 1 139 1 104 1 288 1 145 1 228 5 30 1 262 2 190 1 230 1 111 1 114 2 300 1 
246 1 96 1 
246 1 96 1 
209 1 105 1 
209 1 105 1 
209 1 105 1 
246 1 32 1 96 1 
208 1 246 1 96 1 
246 2 209 1 101 1 105 1 96 2 227 1 
246 1 32 1 96 1 
246 1 32 1 96 1 
246 1 96 1 254 1 
246 1 96 1 254 1 
246 1 96 1 254 1 
39 1 121 2 69 2 287 1 227 1 145 1 228 2 246 2 147 2 229 1 57 1 174 1 134 2 299 1 280 3 250 2 96 2 221 2 99 1 
147 1 246 1 39 1 134 1 121 1 3 1 280 1 250 1 96 1 221 1 228 1 
36 1 37 1 278 1 
165 1 37 1 278 1 
110 1 259 1 36 2 165 1 278 3 294 1 
110 1 259 1 17 1 36 1 165 1 278 2 
110 1 259 2 36 1 165 1 278 2 
235 1 0 1 198 1 274 1 3 1 202 1 205 1 5 2 276 1 244 2 129 1 92 1 212 1 281 1 250 5 251 1 216 1 178 1 21 1 285 1 257 1 225 1 25 1 145 1 228 5 262 4 111 1 232 1 35 1 114 1 38 1 
235 1 0 1 198 1 274 1 3 1 240 2 202 1 205 1 276 1 244 2 129 1 8 2 92 1 212 1 281 1 250 5 251 1 216 3 178 1 21 1 285 1 225 1 103 1 25 1 145 1 228 5 262 4 265 1 111 1 232 1 35 1 114 1 
235 1 0 1 198 1 274 1 200 1 3 1 205 1 5 1 276 1 244 2 9 1 92 3 281 1 250 3 212 2 251 1 178 1 218 1 21 1 257 1 225 1 25 2 145 2 228 3 262 2 111 1 232 1 114 1 35 2 38 1 
235 2 0 2 199 1 274 1 200 2 205 1 5 2 244 4 9 2 92 6 212 3 281 1 250 4 178 1 218 1 21 2 257 1 225 2 25 4 142 1 290 1 145 3 228 4 262 3 232 1 114 1 35 4 38 1 
245 1 40 1 297 1 150 1 
23 1 107 1 
12 1 
238 1 107 1 
44 1 
238 1 107 1 272 1 
164 1 107 1 
0 3 163 3 84 2 204 1 49 1 88 14 89 1 90 1 91 1 61 1 67 4 68 1 182 6 70 3 190 2 153 8 154 2 300 2 
0 3 163 3 84 2 204 1 49 1 88 14 89 1 90 1 91 1 61 1 67 6 68 3 182 6 70 3 190 2 153 8 154 2 300 2 
0 3 163 3 84 2 204 1 49 1 88 14 89 1 90 1 91 1 61 1 67 4 68 1 182 6 70 3 190 2 264 1 153 8 154 2 300 2 
41 1 2 1 125 1 48 1 88 6 90 1 91 2 61 1 67 2 68 1 182 3 70 1 226 1 146 1 188 1 190 1 298 1 153 3 154 1 112 2 233 1 300 1 196 1 81 1 
0 3 163 3 2 1 84 2 204 1 48 1 49 1 88 14 89 1 90 1 91 1 67 3 68 1 182 6 70 2 144 1 188 1 190 2 112 2 153 8 154 2 157 1 300 2 81 1 
180 2 1 1 102 1 275 1 45 2 124 1 260 2 128 1 74 1 133 1 249 1 33 1 13 1 231 1 15 1 194 1 219 2 98 1 179 1 283 1 
180 1 1 1 273 1 102 1 275 1 45 3 124 2 260 1 128 1 133 1 249 1 13 2 231 1 282 1 15 1 138 1 194 1 219 1 98 1 
180 1 1 1 273 1 102 1 275 1 45 2 124 1 260 1 128 1 133 1 13 2 282 1 15 1 219 1 
238 1 42 1 45 1 85 1 124 1 277 1 128 2 133 2 211 1 95 1 15 2 177 1 138 1 219 1 180 1 102 2 286 1 260 1 107 1 292 1 149 1 231 1 194 1 
180 1 1 1 273 1 102 1 275 1 45 2 124 1 260 1 128 1 133 1 249 1 13 1 231 1 15 1 194 1 219 1 98 1 179 1 283 1 
301 1 
180 1 202 1 205 1 260 1 292 1 228 1 52 1 212 1 232 1 250 1 281 1 114 1 216 1 219 1 256 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 2 216 1 19 1 207 1 64 1 129 1 228 2 
31 1 14 1 114 1 281 1 202 1 250 1 205 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 250 1 19 1 207 1 228 1 
31 1 14 1 114 1 281 1 202 1 250 1 205 1 19 1 207 1 228 1 
0 1 21 1 66 1 225 1 2 1 182 5 26 1 48 1 88 11 144 1 168 2 188 1 146 2 169 1 170 1 298 2 153 6 112 2 116 1 233 2 268 1 81 1 100 1 
0 1 21 1 66 1 225 1 2 1 182 5 26 1 48 1 88 11 144 1 168 2 188 1 146 2 169 1 170 1 298 2 153 6 112 2 116 1 233 2 268 1 81 1 100 1 
0 1 21 1 66 1 225 1 2 1 182 5 26 1 48 1 88 11 144 1 168 2 188 1 146 2 169 1 170 1 298 2 153 6 112 2 116 1 233 2 268 1 81 1 100 1 
0 1 21 1 66 1 225 1 2 1 182 5 26 1 48 1 88 11 144 1 168 2 188 1 146 2 169 1 170 1 298 2 153 6 112 2 116 1 233 2 268 1 81 1 100 1 
0 5 2 1 48 1 88 27 168 2 169 1 170 1 9 4 100 2 21 5 66 2 67 4 225 5 68 2 182 11 26 1 70 2 144 1 188 1 146 2 148 2 298 4 112 2 153 16 152 2 116 1 233 4 268 1 81 1 
197 1 147 1 246 1 56 1 134 1 121 1 267 1 96 1 221 1 
208 1 296 1 
147 1 246 1 134 1 121 1 59 1 96 1 287 1 227 1 221 1 99 1 
39 1 121 1 69 1 287 1 227 1 145 1 228 1 246 1 147 1 229 1 174 1 134 1 299 1 280 2 250 1 96 1 221 1 99 1 
39 1 121 1 69 1 287 1 227 1 145 1 228 1 246 1 147 1 229 1 174 1 134 1 299 1 280 2 250 1 96 1 221 1 99 1 
39 1 121 1 69 1 287 1 227 1 145 1 228 1 246 1 147 1 229 1 174 1 134 1 299 1 280 2 250 1 96 1 221 1 99 1 
32 1 101 1 248 1 
32 1 101 1 248 1 
18 1 254 1 
101 1 18 1 254 1 
261 1 195 1 
235 1 121 1 3 1 69 1 122 1 166 1 261 1 228 1 262 1 208 1 246 1 147 1 296 1 134 1 299 1 280 1 250 1 156 1 96 1 213 1 195 1 221 1 
32 1 248 1 
101 1 18 1 254 1 
236 1 238 1 2 1 47 1 206 1 48 1 277 1 88 2 51 1 53 1 55 1 94 1 95 1 215 1 219 2 180 2 182 1 185 1 27 2 186 1 260 2 107 1 28 2 188 1 75 2 192 1 112 2 153 1 33 2 158 1 81 1 
180 2 1 1 24 1 273 1 260 2 74 1 130 1 133 1 249 1 137 1 219 2 
180 1 1 1 273 1 260 1 108 1 130 1 133 1 249 1 219 1 
180 1 238 1 286 1 260 1 126 1 277 1 107 1 292 1 149 1 133 1 95 1 137 1 177 1 219 1 
180 1 1 1 130 1 24 1 273 1 133 1 249 1 137 1 260 1 219 1 
63 1 
40 1 230 1 288 1 
200 1 239 1 202 1 205 1 244 1 129 1 92 1 212 1 281 1 250 1 216 1 178 1 145 2 228 1 114 1 115 1 302 1 
0 3 82 2 238 3 163 2 164 2 3 1 84 1 243 1 167 1 244 9 247 1 9 2 92 12 250 5 251 1 95 4 178 2 252 2 255 2 180 1 21 2 23 3 25 6 106 2 260 1 107 8 190 1 191 2 111 1 114 4 35 6 117 2 272 3 198 1 200 6 202 4 204 1 205 4 276 1 277 3 129 3 54 1 210 2 212 10 281 4 60 1 216 5 219 1 139 3 225 2 141 2 288 1 292 1 73 1 145 8 228 5 297 2 230 1 77 2 232 2 300 1 
0 4 200 4 202 1 205 1 244 7 169 1 9 4 92 8 212 7 281 1 21 4 139 1 225 4 25 8 183 1 145 4 146 1 298 2 148 1 109 1 152 1 35 8 114 1 233 2 116 1 268 1 
0 1 139 1 198 1 163 1 3 1 84 1 202 1 205 1 204 1 276 1 244 1 228 1 190 1 132 1 111 1 212 2 250 1 281 1 114 1 251 1 300 1 
114 1 281 1 202 1 205 1 288 1 
21 2 0 2 139 2 225 2 25 5 200 5 244 5 145 5 191 1 210 1 9 2 92 10 35 5 212 3 
250 1 178 1 216 1 145 1 228 1 129 1 
180 1 202 1 205 1 260 1 292 1 52 1 247 1 212 1 232 1 281 1 114 1 216 1 219 1 256 1 
198 1 111 1 3 1 253 1 
200 2 25 2 202 1 205 1 243 1 244 2 145 4 92 4 154 1 35 2 281 1 114 1 232 1 212 1 178 2 
147 1 121 1 7 1 
147 1 121 1 266 1 261 1 99 1 
147 1 121 1 7 1 
147 1 121 1 7 1 
147 1 121 1 11 1 
147 1 121 1 11 1 
147 1 121 1 11 1 
147 1 121 1 
246 1 96 1 
0 5 163 3 2 2 84 2 204 1 49 1 48 2 88 23 169 1 89 1 9 1 21 2 67 8 225 2 68 4 182 9 183 1 70 4 144 1 146 1 188 2 190 2 298 1 109 1 154 1 112 4 153 14 233 1 116 1 268 1 300 2 196 1 81 2 
0 5 163 3 2 3 84 2 204 1 49 1 48 3 88 23 169 1 89 1 9 1 21 2 67 6 225 2 68 2 182 9 183 1 70 4 144 1 146 1 188 3 293 1 190 2 298 1 109 1 154 1 112 6 153 14 233 1 116 1 268 1 300 2 196 1 81 3 
0 3 21 3 67 2 225 3 68 1 2 1 182 5 70 1 48 1 144 1 88 13 188 1 146 1 169 1 148 1 298 2 9 2 152 1 153 8 112 2 116 1 233 2 268 1 81 1 
0 7 163 3 2 3 84 2 204 1 49 1 48 3 88 31 169 1 89 1 9 3 21 4 67 10 225 4 68 5 182 12 183 1 70 5 144 1 146 1 188 3 293 1 190 2 298 2 148 1 109 1 154 1 112 6 153 19 152 1 233 2 116 1 268 1 300 2 196 1 81 3 
0 5 163 3 2 2 84 2 204 1 49 1 48 2 88 23 169 1 89 1 9 1 21 2 67 8 225 2 68 4 182 9 183 1 70 4 144 1 146 1 188 2 190 2 298 1 109 1 154 1 112 4 153 14 233 1 116 1 268 1 300 2 196 1 81 2 
0 4 2 1 48 1 88 18 169 1 9 4 21 4 67 4 225 4 68 2 182 7 183 1 70 2 144 1 146 1 188 1 298 2 148 1 109 1 112 2 153 11 152 1 233 2 116 1 268 1 81 1 
0 3 2 2 48 2 88 13 169 1 9 2 21 3 67 2 225 3 68 1 182 5 70 1 144 1 146 1 188 2 293 1 298 2 148 1 112 4 153 8 152 1 233 2 116 1 268 1 81 2 
0 1 2 2 48 2 88 6 9 1 176 1 21 1 67 1 225 1 182 3 70 1 144 1 146 1 188 2 298 2 112 4 153 3 152 1 233 1 268 1 81 2 
0 1 67 6 163 1 68 3 182 4 84 1 70 3 49 2 88 7 190 3 89 1 153 3 300 3 
0 1 2 2 48 2 88 6 9 1 176 1 21 1 67 1 225 1 182 3 70 1 144 1 146 1 188 2 298 2 112 4 153 3 152 1 233 1 268 1 81 2 
0 3 163 3 2 2 84 2 204 1 49 1 48 2 88 17 89 1 67 6 68 3 182 8 70 3 188 2 190 2 112 4 153 9 154 1 300 2 196 1 81 2 
40 1 0 1 67 2 163 1 182 2 84 1 70 2 49 1 88 5 190 1 89 1 154 1 153 3 300 1 
21 1 0 1 67 2 225 1 2 1 68 1 182 1 70 1 48 1 88 3 188 1 293 1 9 1 112 2 153 2 81 1 
21 2 0 2 67 2 225 2 68 1 182 4 70 1 88 10 146 1 148 1 298 2 9 2 153 6 152 1 233 2 
0 5 163 3 2 1 84 2 204 1 49 1 48 1 88 23 89 1 9 2 21 2 67 6 225 2 68 2 182 10 70 4 188 1 190 2 298 2 148 1 154 1 152 1 153 13 112 2 233 2 300 2 193 1 196 1 81 1 
298 1 182 1 88 1 
153 1 233 1 88 1 
21 1 0 1 67 3 225 1 2 1 68 1 182 2 70 2 48 1 88 5 188 1 293 1 191 1 9 1 112 2 153 3 81 1 
0 4 2 1 48 1 88 18 169 1 9 4 21 4 67 4 225 4 68 2 182 7 183 1 70 2 144 1 146 1 188 1 298 2 148 1 109 1 112 2 153 11 152 1 233 2 116 1 268 1 81 1 
0 1 67 2 163 1 68 1 182 3 84 1 70 1 88 6 190 1 153 3 300 1 
67 2 41 1 68 1 2 1 182 2 70 1 49 1 48 1 88 3 188 1 190 1 89 1 153 1 112 2 300 1 196 1 81 1 
0 2 67 2 163 2 68 1 182 4 84 1 204 1 70 1 88 8 190 1 153 4 300 1 
21 1 0 1 67 1 2 1 68 1 48 1 144 1 88 2 188 1 112 2 153 2 81 1 
21 1 0 1 67 2 225 1 2 1 68 1 182 1 70 1 48 1 144 1 88 3 188 1 9 1 112 2 153 2 81 1 
67 2 41 1 2 3 68 1 182 2 70 1 48 3 88 3 144 1 188 3 190 1 112 6 153 1 176 1 300 1 196 1 81 3 
0 2 41 1 163 2 2 4 84 1 204 1 125 1 48 4 49 1 88 15 89 1 176 1 67 5 68 3 182 8 70 2 144 1 146 1 188 4 293 1 190 2 298 1 112 8 153 7 233 1 300 2 81 4 196 1 
75 1 181 1 151 1 83 1 175 1 27 1 28 1 
65 1 22 1 181 1 83 1 27 1 28 1 279 1 171 1 75 1 151 1 175 1 220 1 
180 1 40 1 238 1 149 1 286 1 95 1 260 1 277 1 107 1 219 1 292 1 
131 1 3 1 
131 1 3 1 
131 1 3 1 
198 1 238 1 3 1 276 1 277 1 93 1 250 2 251 1 95 1 216 1 178 1 62 1 219 1 255 1 180 1 23 1 260 1 107 2 145 1 228 2 297 1 111 1 77 1 155 1 272 1 
198 1 82 1 238 1 3 1 276 1 277 1 250 2 251 1 95 1 216 1 178 1 219 1 255 1 180 1 23 1 260 1 107 2 145 1 228 2 297 1 111 1 77 1 155 1 272 1 
180 1 95 1 260 1 277 1 242 1 219 1 
180 7 273 1 238 2 43 1 140 1 260 6 242 1 107 3 143 1 277 2 291 1 292 2 73 1 74 1 33 1 192 1 34 1 95 3 20 1 219 7 272 1 
131 1 3 1 
0 1 82 1 238 1 163 2 164 1 3 1 84 1 244 2 247 1 250 3 95 1 251 1 178 1 255 1 180 1 23 1 106 1 260 1 107 3 262 1 190 1 111 1 114 2 117 1 272 1 198 1 202 2 205 2 204 1 276 1 277 1 129 1 281 2 212 4 216 2 219 1 139 1 141 1 288 1 292 1 145 1 228 3 297 1 230 1 77 1 300 1 
180 1 238 1 260 1 242 1 107 1 277 1 167 1 73 1 297 1 12 1 95 2 219 1 272 1 
180 4 238 1 162 1 286 1 260 4 107 1 277 1 127 1 292 1 74 1 149 1 95 1 219 4 
180 2 238 1 260 2 107 1 143 1 277 1 291 1 155 1 95 2 78 1 219 2 97 1 284 1 272 1 
180 1 95 1 165 1 214 1 37 1 260 1 277 1 278 1 219 1 292 1 
180 2 273 1 238 1 260 2 107 1 277 1 74 1 192 1 95 1 219 2 158 1 
180 5 238 2 286 1 260 4 107 3 277 2 127 1 292 1 74 1 149 1 192 1 34 1 155 1 95 2 20 1 219 5 
180 5 238 2 286 1 260 4 107 3 277 2 127 1 292 1 74 1 149 1 192 1 155 1 95 2 118 1 20 1 219 5 
131 1 3 1 
180 1 238 1 140 1 260 1 107 1 143 1 277 1 291 1 73 1 155 1 95 2 219 1 272 1 
40 1 224 1 72 1 120 1 
224 1 45 1 231 1 124 1 72 1 194 1 120 1 
102 1 15 1 124 1 
237 1 160 1 172 1 224 1 45 3 231 1 16 2 124 3 72 1 194 1 179 1 120 1 
224 1 13 1 45 2 231 1 123 1 124 2 72 1 194 1 120 1 
45 1 231 1 46 1 124 1 36 1 37 1 278 1 194 1 29 1 179 1 120 1 
45 1 231 1 124 1 72 1 194 1 179 1 120 1 
224 1 45 1 231 1 124 1 72 2 194 1 179 1 
263 1 45 2 231 2 136 1 124 2 72 1 289 1 194 2 179 1 120 1 
161 1 224 1 45 3 46 1 124 3 184 1 72 1 6 1 231 1 13 2 194 1 179 1 120 2 
224 1 45 2 124 2 72 1 165 1 278 2 294 1 231 1 13 1 36 1 37 1 217 1 194 1 179 1 120 1 
161 1 224 1 45 4 123 1 46 1 124 4 72 1 87 1 231 2 13 2 194 2 179 1 120 2 
224 1 45 1 231 1 124 1 72 1 194 1 179 1 120 1 
160 1 161 1 224 2 45 4 46 1 124 4 72 2 172 1 76 1 13 2 231 1 16 1 194 1 120 3 
224 1 45 2 124 2 4 1 72 1 189 1 231 1 13 1 269 1 194 1 179 1 120 1 
160 1 172 2 224 1 45 3 231 1 16 2 124 3 72 1 79 1 194 1 179 1 120 1 
10 2 201 1 50 1 120 2 
45 1 231 1 124 1 241 1 194 1 179 1 
224 1 13 1 45 2 231 1 124 2 72 1 194 1 6 1 179 1 120 1 
159 1 
224 1 45 1 231 1 124 1 72 1 194 1 179 1 120 1 
224 1 45 3 124 3 72 1 6 1 13 1 231 1 16 1 194 1 179 1 120 1 
161 1 76 1 46 1 120 1 
72 1 120 1 

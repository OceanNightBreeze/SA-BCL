#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (95,285) 122 (152,312) (152,312) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (95,285) 122 (152,312) (152,312) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (95,285) 122 (152,312) (152,312) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (95,285) 122 (152,312) (152,312) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 134 57 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 134 57 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (8,160) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (8,160) 59 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (8,160) 59 197 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 51 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (36,69,189) (38,61,132) (38,61,132) (38,61,132) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (36,69,189) (38,61,132) (38,61,132) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (36,69,189) (38,61,132) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (36,69,189) (38,61,132) (38,61,132) (38,61,132) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 223 4 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (36,69,189) (36,69,189) (36,69,189) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (36,69,189) (36,69,189) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (36,69,189) (36,69,189) (36,69,189) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 19 118 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 288 191 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 267 144 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 308 180 (67,269) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 308 180 (250,251) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 306 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 1 122 1 46 1 248 1 312 1 149 1 300 1 152 1 18 1 164 1 95 1 
234 1 122 1 46 1 248 1 312 1 149 1 300 1 152 1 18 1 164 1 95 1 
234 1 122 1 46 1 248 1 312 1 149 1 300 1 152 1 18 1 164 1 95 1 
234 1 122 1 46 1 248 1 312 1 149 1 300 1 152 1 18 1 164 1 95 1 
134 1 234 2 113 1 46 1 248 1 3 1 213 1 88 1 300 1 42 1 18 2 283 1 
145 1 44 1 248 1 46 1 62 1 149 1 290 1 295 1 234 2 135 1 175 1 40 1 300 1 42 1 18 2 164 1 94 1 
145 1 285 1 248 1 46 2 3 1 149 1 29 1 234 3 135 1 300 2 18 3 42 2 283 1 
285 1 248 1 46 2 213 1 3 3 149 1 29 2 257 1 134 1 112 1 234 7 113 1 296 1 88 1 57 1 300 2 42 3 18 7 283 5 
285 1 248 1 46 2 213 1 3 3 149 1 29 2 257 1 134 1 112 1 234 7 113 1 296 1 88 1 57 1 300 2 42 3 18 7 283 5 
0 1 136 1 202 1 
119 2 0 1 206 1 
225 2 137 2 167 2 155 2 157 2 230 1 28 1 207 2 
1 1 124 1 286 1 125 1 167 3 81 2 54 1 259 1 83 1 222 1 137 2 180 1 89 2 139 1 140 1 96 1 225 2 21 1 309 1 230 1 193 2 231 1 28 1 27 1 232 1 153 1 67 1 37 1 200 1 155 3 203 2 73 1 157 2 314 1 74 1 315 2 207 2 
225 1 100 1 23 1 137 1 167 1 155 1 157 1 230 1 303 1 207 1 
225 1 242 1 0 1 98 1 167 1 310 1 66 1 215 1 154 1 298 1 56 1 202 1 155 1 303 1 
242 2 225 1 0 1 98 1 167 1 310 1 66 1 215 2 154 1 137 1 202 1 155 1 157 1 303 1 207 1 
101 1 
101 1 
242 1 148 1 215 1 
101 1 
0 1 
101 1 
242 1 123 1 70 1 101 1 190 1 26 1 215 1 
136 1 28 1 
225 2 167 2 28 2 110 1 137 1 155 2 157 1 60 1 207 1 
246 1 237 1 162 1 
21 1 125 1 286 1 167 1 231 1 28 1 232 1 81 1 67 1 200 1 155 1 180 1 89 1 315 1 317 1 140 1 
225 1 184 1 21 1 246 1 286 1 125 1 25 1 167 2 231 1 232 1 81 1 67 1 137 1 200 1 180 1 155 2 157 1 89 1 315 1 140 1 
225 3 137 3 25 1 167 3 155 3 157 3 28 1 207 1 
225 1 23 1 137 1 167 1 155 1 157 1 303 1 
225 1 137 1 167 1 155 1 157 1 303 1 110 1 60 1 207 1 
242 1 210 1 124 1 286 1 125 1 167 4 215 1 81 1 259 1 258 1 83 1 222 1 137 3 180 1 89 1 139 1 303 1 140 1 96 1 225 3 184 1 98 1 21 1 309 1 310 1 25 1 230 1 193 2 231 1 66 1 28 1 27 1 232 1 110 1 153 1 67 1 154 1 200 1 155 4 203 1 314 1 157 3 315 1 207 2 
225 2 176 1 56 1 137 1 167 2 155 2 25 1 157 1 28 1 
242 1 225 3 184 1 0 1 98 1 210 1 25 2 167 3 310 1 215 1 66 1 110 1 154 1 137 3 155 3 157 3 303 1 183 1 207 1 
225 1 246 1 137 1 167 1 155 1 157 1 110 1 207 1 
21 1 125 1 286 1 167 1 231 1 28 1 232 1 81 1 67 1 200 1 155 1 180 1 89 1 315 1 140 1 
21 1 125 1 286 1 250 1 167 1 231 1 28 1 232 1 81 1 200 1 155 1 180 1 89 1 90 1 315 1 
96 1 226 1 246 1 187 1 124 1 212 1 309 1 107 1 109 1 193 2 27 1 153 1 83 2 203 2 162 1 139 1 
225 1 167 1 216 1 66 1 137 1 155 1 157 1 303 1 
225 5 184 1 121 1 25 2 167 5 28 1 110 1 176 1 56 1 137 4 155 5 157 4 279 1 207 1 
225 2 23 1 137 2 167 2 155 2 157 2 216 1 303 1 
227 1 160 1 
227 1 160 1 
227 1 47 1 160 1 8 1 
227 1 47 1 160 1 8 1 
47 1 8 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 160 1 
227 1 63 1 160 1 59 1 
242 1 227 1 197 1 63 1 160 1 215 1 59 1 
113 1 
295 1 290 1 94 1 
295 1 113 2 290 1 15 1 
97 1 245 1 105 1 290 1 295 1 113 1 236 1 
97 2 245 1 290 1 295 1 113 1 236 1 
101 1 51 1 
101 2 41 1 192 1 208 1 
242 1 123 1 78 1 45 2 291 1 215 1 80 2 84 1 261 1 305 3 226 1 141 1 101 2 102 2 190 1 268 1 107 1 26 1 31 1 70 1 205 1 240 1 281 1 
242 1 123 1 78 1 45 2 291 1 80 2 215 1 84 1 261 1 305 3 226 1 141 1 101 1 102 2 190 1 268 1 107 1 26 1 31 1 70 1 239 1 205 1 240 1 281 1 
220 1 21 1 136 1 
21 1 209 1 
85 1 
21 1 286 1 
21 2 286 1 231 1 220 2 85 1 277 1 161 1 
21 1 286 1 231 1 
21 1 282 1 
288 1 48 3 128 1 6 1 150 1 65 2 133 1 31 1 54 3 83 1 196 1 86 1 262 2 179 1 114 1 203 4 
288 1 48 3 128 1 6 1 150 1 65 2 133 1 31 1 54 3 83 1 196 1 86 1 262 2 179 1 114 1 203 4 
288 1 48 3 128 1 6 1 150 1 65 2 133 1 31 1 54 3 83 1 196 1 86 1 262 2 179 1 114 1 203 4 91 1 
78 4 288 2 124 1 127 1 48 9 128 6 6 2 133 1 54 20 83 14 261 4 86 3 262 3 178 1 179 2 19 1 96 1 226 3 309 1 107 3 191 1 150 1 311 4 193 2 65 3 27 1 111 1 31 6 196 3 35 1 71 1 114 1 203 34 316 4 159 1 319 1 
124 2 288 1 48 4 128 1 6 1 9 1 133 1 54 4 83 2 86 1 262 3 179 1 93 1 96 2 309 2 193 4 65 2 27 2 31 1 196 1 114 1 203 6 319 1 
185 1 248 1 46 1 125 1 126 1 61 1 79 1 149 1 290 1 292 1 81 1 132 1 295 1 234 1 113 1 36 1 14 1 200 1 38 1 300 1 89 1 182 1 315 1 15 1 18 1 
264 1 185 1 46 1 125 1 126 1 61 1 79 1 149 1 290 1 292 1 81 1 132 1 295 1 234 2 113 1 36 1 276 1 200 1 300 1 89 1 182 1 315 1 15 1 18 2 283 1 224 1 
185 1 125 1 79 1 149 1 290 1 292 1 81 1 132 1 295 1 234 1 113 1 36 1 276 1 200 1 89 1 182 1 315 1 15 1 18 1 283 1 224 1 
46 1 125 1 286 1 79 2 170 1 81 1 55 1 297 1 12 1 182 2 89 1 300 1 18 1 185 2 264 1 143 1 21 1 149 2 232 1 271 1 234 1 200 1 315 1 
185 1 248 1 46 1 125 1 126 1 61 1 79 1 149 1 290 1 292 1 81 1 132 1 295 1 234 1 113 1 36 1 276 1 200 1 38 1 300 1 89 1 182 1 315 1 15 1 18 1 
302 1 
242 3 123 1 45 1 165 1 125 1 286 1 167 1 4 1 170 1 215 3 81 2 11 1 12 1 223 1 56 1 298 1 89 2 303 1 225 1 305 1 98 1 21 1 146 1 310 1 190 1 268 1 148 2 66 1 194 1 232 2 154 1 70 1 274 1 200 1 72 1 155 1 278 1 313 1 156 1 315 2 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 3 225 1 98 1 146 1 310 1 167 1 148 1 4 1 169 1 66 1 215 3 194 1 154 1 223 1 298 1 56 1 155 1 278 1 156 1 313 1 303 1 
225 1 242 2 98 1 123 1 146 1 310 1 167 1 190 1 4 1 66 1 215 2 194 1 154 1 274 1 70 1 223 1 56 1 298 1 155 1 278 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
242 2 225 1 98 1 146 1 167 1 310 1 4 1 66 1 215 2 194 1 154 1 223 1 298 1 56 1 278 1 155 1 313 1 303 1 
225 1 242 2 98 1 123 1 146 1 310 1 167 1 190 1 4 1 66 1 215 2 194 1 154 1 274 1 70 1 223 1 56 1 298 1 155 1 278 1 313 1 303 1 
246 1 124 1 288 1 48 2 133 1 54 2 83 1 86 1 136 1 262 2 139 1 96 1 187 1 309 1 193 2 65 1 27 1 28 1 153 1 31 1 196 1 237 1 114 1 203 3 162 1 
246 7 78 2 124 2 2 1 127 1 48 1 128 1 217 1 255 1 259 1 54 6 83 3 261 2 303 1 139 2 96 2 309 2 108 1 311 2 193 4 28 1 27 2 153 1 31 2 35 1 237 6 203 9 316 2 162 7 77 1 
286 1 125 1 2 1 124 1 167 2 130 1 81 1 259 1 54 1 83 1 137 1 180 1 89 1 138 1 139 1 140 1 96 1 225 1 184 1 21 1 25 1 309 1 231 1 193 2 28 1 232 1 27 1 67 1 153 1 237 1 200 1 155 2 157 1 203 2 315 1 74 1 317 1 115 1 
78 1 246 2 286 1 125 1 2 1 124 2 287 1 289 1 48 1 167 2 252 1 81 1 54 3 259 1 261 1 83 2 262 1 137 1 180 1 89 1 16 1 139 2 140 1 304 1 96 2 225 1 184 1 21 1 25 1 309 2 231 1 193 4 27 2 232 1 67 1 153 2 31 1 237 1 200 1 155 2 314 1 203 5 157 1 315 1 162 2 
167 1 5 1 170 1 81 7 259 1 83 1 12 1 263 1 89 6 92 1 96 2 21 4 20 1 187 1 24 1 25 1 193 4 27 2 30 1 276 1 200 3 201 1 203 2 43 1 286 3 124 2 125 4 54 1 221 1 137 1 139 2 225 1 309 2 231 1 232 2 153 2 238 1 155 1 73 2 157 1 74 1 315 7 76 1 
246 1 78 1 124 1 2 1 167 1 54 1 261 1 83 2 137 1 139 1 96 1 225 1 226 1 309 1 107 1 193 2 27 1 110 1 153 1 31 1 235 1 237 1 155 1 157 1 203 3 162 1 207 1 
96 1 243 1 246 1 187 1 124 1 309 1 193 2 27 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
96 1 226 1 246 1 187 1 124 1 212 1 309 1 107 1 193 2 27 1 153 1 83 2 203 2 162 1 139 1 
96 1 246 1 78 1 187 1 124 1 309 1 193 2 27 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
96 1 243 1 246 1 124 1 309 1 193 2 27 1 30 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
96 1 226 1 246 1 124 1 212 1 309 1 107 1 193 2 27 1 30 1 153 1 83 2 203 2 162 1 139 1 
96 1 246 1 78 1 124 1 309 1 193 2 27 1 30 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
96 1 246 1 78 1 124 1 309 1 193 2 27 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
286 1 125 1 124 1 167 1 81 1 54 1 259 1 83 1 180 1 89 1 139 1 140 1 96 1 21 1 309 1 231 1 193 2 28 1 232 1 27 1 67 1 153 1 200 1 155 1 203 2 314 1 74 1 315 1 
286 1 125 1 124 1 250 1 167 1 81 1 54 1 259 1 83 1 180 1 90 1 89 1 139 1 96 1 21 1 309 1 231 1 193 2 28 1 232 1 27 1 153 1 200 1 155 1 203 2 39 1 74 1 315 1 
96 1 246 1 78 1 2 1 124 1 309 1 193 2 27 1 153 1 31 1 54 2 261 1 203 2 162 1 139 1 
246 1 78 1 125 1 286 1 124 1 167 1 252 1 81 1 54 2 261 1 14 1 180 1 89 1 139 1 140 1 96 1 21 1 309 1 231 1 193 2 27 1 67 1 153 1 31 1 200 1 155 1 203 2 314 1 315 1 162 1 
78 1 246 1 124 1 2 1 48 1 167 1 128 1 254 1 54 2 261 1 137 1 139 1 96 1 225 1 309 1 193 2 27 1 110 1 153 1 31 1 237 1 155 1 157 1 203 2 162 1 207 1 
78 4 124 2 127 1 48 3 128 3 172 2 294 1 53 1 54 12 83 10 261 4 173 1 177 1 299 1 93 1 19 1 96 2 226 3 228 1 103 1 309 2 107 3 311 2 193 4 27 2 31 4 35 1 203 22 316 2 75 2 
78 3 124 1 127 1 48 1 128 1 172 1 294 2 54 10 83 10 261 3 173 1 299 1 93 1 19 1 96 1 226 3 228 1 103 2 309 1 107 3 311 2 193 2 27 1 31 3 35 1 203 20 316 2 75 2 
78 5 124 2 127 2 48 2 128 2 172 1 294 1 131 1 53 1 54 16 83 12 261 5 173 1 299 1 93 1 19 2 96 2 226 3 228 1 103 2 309 2 107 3 311 4 193 4 27 2 31 5 35 2 203 28 316 4 75 2 
78 3 124 2 127 1 48 1 128 1 172 1 294 1 53 1 54 10 83 8 261 3 173 1 299 1 93 1 19 1 96 2 226 2 228 1 103 1 309 2 107 2 311 2 193 4 27 2 31 3 35 1 203 18 316 2 75 2 
78 3 288 2 124 1 127 1 48 5 128 3 172 1 294 1 133 2 54 14 83 10 261 3 173 1 86 2 262 2 299 1 93 1 19 1 96 1 226 3 228 1 103 1 309 1 107 3 311 2 65 2 193 2 27 1 31 5 196 2 35 1 114 2 203 24 316 2 75 2 
125 1 286 1 2 1 124 1 167 2 129 1 81 2 54 1 259 1 83 1 89 2 58 1 139 1 96 1 225 2 21 1 20 1 22 1 309 1 64 1 193 2 27 1 153 1 238 1 200 1 155 2 203 2 73 2 315 2 74 1 163 1 
125 1 188 1 79 1 189 1 126 1 290 1 292 1 81 2 295 1 69 1 113 1 36 1 276 1 14 1 200 1 89 2 315 2 15 1 
125 1 79 1 189 1 126 1 290 1 292 1 81 1 68 1 295 1 113 1 36 1 276 1 200 1 89 1 315 1 15 1 
21 1 125 1 286 1 188 1 79 1 170 1 171 1 232 1 81 1 55 1 12 1 200 1 89 1 315 1 
125 1 188 1 79 1 189 1 126 1 290 1 292 1 81 1 295 1 69 1 113 1 36 1 276 1 200 1 89 1 315 1 15 1 
49 1 
305 1 0 1 99 1 45 1 136 1 202 1 166 1 
305 1 45 1 123 1 70 1 274 1 190 1 280 1 318 1 
142 1 209 1 21 2 123 1 125 2 286 1 190 1 229 1 231 1 232 1 81 1 274 1 70 1 200 1 89 1 315 1 161 1 
305 1 45 1 123 1 70 1 274 1 190 1 311 1 316 1 19 1 118 1 
305 2 242 1 284 1 45 2 123 1 288 1 190 1 107 1 191 1 215 1 31 1 34 1 196 1 86 1 274 1 70 1 
0 1 99 1 45 1 123 1 70 1 274 1 202 1 190 1 
305 2 226 1 78 1 45 2 102 2 107 1 291 1 80 2 31 1 261 1 
89 1 315 1 81 1 232 1 
305 1 45 1 123 1 70 1 274 1 165 1 268 1 190 1 
273 1 168 1 233 1 
273 1 204 1 82 1 241 1 233 1 
273 1 168 1 233 1 
273 1 168 1 233 1 
273 1 116 1 233 1 
273 1 116 1 233 1 
273 1 116 1 233 1 
273 1 233 1 
227 1 160 1 
96 2 288 1 124 2 48 3 309 2 128 1 65 1 193 4 27 2 133 1 31 1 54 3 83 2 196 1 86 1 262 2 114 1 203 5 319 1 
288 1 48 2 65 1 133 1 31 1 54 2 83 1 196 1 86 1 136 1 262 2 114 1 203 3 
96 1 226 1 265 1 78 1 124 1 309 1 107 1 193 2 27 1 31 1 54 2 83 2 261 1 203 4 
226 2 78 2 127 1 48 1 128 1 107 2 311 2 54 6 31 2 83 6 261 2 35 1 203 12 316 2 19 1 
78 2 288 2 124 1 127 1 48 4 128 1 217 1 133 1 54 9 261 2 83 8 86 2 262 3 96 1 226 2 309 1 107 2 191 1 311 2 65 1 193 2 27 1 31 4 196 2 35 1 114 1 203 17 316 2 319 1 
83 1 203 1 316 1 
54 1 203 1 311 1 
96 1 226 1 265 1 78 1 124 1 309 1 48 1 128 1 107 1 193 2 27 1 31 1 54 3 83 3 261 1 203 6 16 1 
120 1 78 4 124 2 127 1 48 3 128 2 54 11 83 12 261 4 262 1 181 1 93 1 19 1 96 2 226 4 104 1 309 2 107 4 311 2 193 4 27 2 31 4 195 1 35 1 203 23 316 2 319 1 118 1 
54 1 31 1 288 1 203 1 
96 1 124 1 48 2 309 1 128 1 193 2 27 1 133 1 54 1 32 1 196 1 83 2 86 1 262 1 114 1 203 3 319 1 
288 1 48 1 191 1 31 1 54 1 196 1 83 1 86 1 262 1 203 2 
96 1 124 1 309 1 48 1 128 1 193 2 27 1 31 1 54 2 261 1 203 2 93 1 
96 1 226 1 78 1 124 1 48 1 309 1 107 1 128 1 193 2 27 1 31 1 54 2 83 2 261 1 203 4 93 1 
96 3 124 3 309 3 48 2 128 1 193 6 27 3 53 1 32 1 54 1 83 2 196 1 86 1 262 1 203 3 319 1 93 1 
78 3 288 2 124 4 127 1 48 6 128 3 133 1 53 1 54 14 83 12 261 3 86 2 262 3 93 1 19 1 96 4 226 2 265 1 309 4 107 2 191 1 311 3 65 1 193 8 27 4 111 1 31 5 196 2 71 1 114 1 203 26 316 4 159 1 319 1 
78 1 288 1 124 1 127 1 48 2 133 1 54 5 83 3 261 1 86 1 262 2 93 1 19 1 96 1 309 1 311 1 65 1 193 2 27 1 31 2 196 1 114 1 203 8 316 2 118 1 
78 1 288 1 124 2 127 1 48 3 128 1 133 1 54 5 83 3 261 1 86 1 262 2 93 1 19 1 96 2 265 1 309 2 311 1 65 1 193 4 27 2 31 2 196 1 114 1 203 8 316 2 118 1 
78 2 288 2 124 2 127 1 48 3 128 1 133 1 54 9 83 7 261 2 86 2 262 2 93 1 19 1 96 2 226 2 265 1 309 2 107 2 191 1 311 2 65 1 193 4 27 2 31 4 196 2 35 1 114 1 203 16 316 2 118 1 
78 2 288 2 124 2 127 1 48 5 128 2 133 1 54 9 83 5 261 2 86 2 262 3 93 1 19 1 96 2 226 1 265 1 309 2 107 1 191 1 311 2 65 1 193 4 27 2 31 4 196 2 35 1 114 1 203 14 316 2 118 1 
78 1 288 1 124 1 127 1 48 2 133 1 54 5 83 3 261 1 86 1 262 2 93 1 19 1 96 1 309 1 311 1 65 1 193 2 27 1 31 2 196 1 114 1 203 8 316 2 118 1 
78 2 124 1 127 1 48 1 128 1 54 6 83 6 261 2 93 1 19 1 96 1 226 2 309 1 107 2 311 2 193 2 27 1 31 2 35 1 203 12 316 2 118 1 
78 2 124 2 127 1 54 6 83 4 261 2 93 1 19 1 96 2 226 1 265 1 309 2 107 1 311 2 193 4 27 2 31 2 35 1 203 10 316 2 118 1 
78 2 124 2 127 1 48 1 128 1 53 1 54 6 83 4 261 2 93 1 19 1 96 2 226 1 309 2 107 1 311 2 193 4 27 2 31 2 35 1 203 10 316 2 118 1 
288 2 48 5 128 2 191 1 65 1 133 1 31 2 54 3 83 1 196 2 86 2 262 3 114 1 203 4 
78 2 124 2 127 1 53 1 54 6 83 4 261 2 93 1 19 1 96 2 226 1 309 2 107 1 311 2 193 4 27 2 31 2 35 1 203 10 316 2 118 1 
225 1 176 1 56 1 267 1 167 1 155 1 28 1 
144 1 247 1 267 1 249 1 52 1 270 1 
21 1 12 1 136 1 125 1 286 1 200 1 89 1 170 1 315 1 81 1 232 1 
225 1 21 1 286 1 125 1 25 1 167 2 231 1 28 1 232 1 81 1 67 1 137 1 200 1 180 1 155 2 157 1 89 1 315 1 
225 1 21 3 286 2 125 1 308 1 25 1 167 1 253 1 231 2 81 1 67 1 137 1 200 1 180 1 155 1 157 1 89 1 315 1 282 1 
225 1 21 3 286 2 125 1 308 1 250 1 25 1 167 1 253 1 231 2 81 1 137 1 200 1 180 1 155 1 157 1 89 1 315 1 282 1 
242 2 0 1 209 1 125 1 286 1 251 1 253 1 215 2 81 3 220 1 89 3 98 1 21 4 308 1 148 1 151 1 231 1 232 1 200 1 202 1 315 3 117 1 282 1 
242 2 0 1 98 1 209 1 21 4 286 1 125 1 308 1 148 1 253 1 231 1 215 2 269 1 232 1 81 3 220 1 200 1 202 1 89 3 315 3 117 1 282 1 
125 1 200 1 89 1 315 1 81 1 76 1 
43 1 20 1 21 3 286 2 125 3 24 1 231 1 232 2 81 6 10 1 263 1 276 1 201 1 200 2 73 1 89 5 315 6 92 1 161 1 76 1 
246 1 288 1 286 1 125 1 2 1 124 2 48 2 167 2 252 1 81 1 133 1 54 2 83 1 86 1 262 2 137 1 14 1 180 1 89 1 139 2 304 1 140 1 96 2 225 1 21 1 25 1 309 2 65 1 231 1 193 4 28 1 27 2 153 2 67 1 31 1 196 1 237 1 200 1 114 1 155 2 203 3 157 1 314 1 315 1 162 1 163 1 
101 1 
142 1 21 2 286 1 125 2 231 1 81 1 220 1 85 1 200 1 89 1 315 1 161 1 76 1 
21 1 125 1 286 1 170 1 232 1 81 4 12 1 275 1 14 1 200 1 89 4 315 4 117 1 
43 1 21 1 286 1 125 2 253 1 5 1 231 1 81 2 221 1 201 1 200 1 89 2 315 2 301 1 
295 1 125 1 200 1 290 1 89 1 315 1 292 1 81 1 232 1 94 1 
20 1 21 1 286 1 125 1 64 1 81 2 14 1 276 1 200 1 89 2 315 2 
20 1 21 3 286 2 125 2 24 1 253 1 170 1 232 1 81 5 12 1 275 1 14 1 200 2 89 4 315 5 92 1 
20 1 21 3 286 2 125 2 24 1 253 1 50 1 170 1 232 1 81 5 12 1 275 1 14 1 200 2 89 4 315 5 
225 1 21 1 286 1 125 1 250 1 25 1 167 2 231 1 28 1 232 1 81 1 137 1 200 1 180 1 155 2 157 1 89 1 315 1 
43 1 21 1 286 1 125 2 253 1 231 1 81 1 10 1 201 1 200 1 89 1 315 1 161 1 
225 1 22 1 106 1 167 1 129 1 256 1 174 1 155 1 58 1 
186 1 174 1 87 1 
13 1 174 1 106 1 28 1 256 1 
242 1 210 1 167 1 215 1 256 1 13 1 174 1 137 1 87 1 303 2 225 1 98 1 186 1 100 1 101 1 23 1 310 1 106 1 230 1 66 1 272 1 154 1 33 1 155 1 157 1 207 1 
145 1 135 1 136 1 42 1 
234 1 145 1 135 1 46 1 300 1 42 1 18 1 
234 1 149 1 182 1 
145 1 248 1 46 1 62 2 218 1 234 3 135 1 199 1 300 1 158 1 42 1 18 3 
234 2 145 1 135 1 46 1 88 1 300 1 42 1 18 2 283 1 
234 1 113 1 46 1 248 1 3 1 213 1 300 1 42 1 18 1 
234 1 145 1 46 1 248 1 300 1 42 1 18 1 
234 1 145 2 135 1 46 1 248 1 300 1 18 1 
145 1 211 1 248 1 46 2 219 1 234 2 198 1 300 2 42 1 18 2 
145 1 248 1 46 1 3 1 29 1 257 1 112 1 234 3 135 1 300 1 18 3 42 2 283 2 
295 1 234 1 113 1 306 1 46 1 248 1 300 1 290 1 15 1 18 1 
145 1 248 1 46 2 3 1 307 1 29 1 234 4 135 1 88 1 300 2 18 4 42 2 283 2 
234 1 145 1 135 1 46 1 248 1 300 1 42 1 18 1 
145 2 46 1 3 1 62 1 29 1 234 4 135 2 199 1 40 1 300 1 158 1 18 4 42 3 283 2 
145 1 248 1 46 1 293 1 234 2 296 1 135 1 300 1 42 1 18 2 17 1 283 1 
145 1 248 1 46 1 266 1 62 2 234 3 135 1 199 1 300 1 158 2 42 1 18 3 
260 1 147 2 7 1 42 2 
234 1 46 1 248 1 214 1 300 1 18 1 
112 1 234 2 145 1 135 1 46 1 248 1 300 1 42 1 18 2 283 1 
244 1 
234 1 145 1 135 1 46 1 248 1 300 1 42 1 18 1 
112 1 234 3 145 1 135 1 46 1 248 1 62 1 300 1 42 1 18 3 283 1 
3 1 40 1 42 1 29 1 
145 1 42 1 

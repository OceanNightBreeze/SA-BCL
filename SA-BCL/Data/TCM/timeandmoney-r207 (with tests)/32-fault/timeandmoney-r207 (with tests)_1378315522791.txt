#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (33,114) 293 (3,271) (3,271) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (33,114) 293 (3,271) (3,271) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (33,114) 293 (3,271) (3,271) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (33,114) 293 (3,271) (3,271) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (92,113,189,193,255) (13,276) (13,276) 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (35,315,323) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (35,315,323) 197 153 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (35,315,323) 197 207 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (107,184) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (107,184) 85 139 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (107,184) 85 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (35,315,323) (35,315,323) 141 36 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 43 198 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 43 198 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 43 198 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 43 198 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 43 198 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 183 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 142 204 (123,131) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 142 204 (72,241) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 267 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 101 (30,238) (30,238) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
30 1 269 3 294 1 182 1 238 1 33 1 230 1 250 1 112 2 280 3 145 2 101 1 119 1 
181 1 3 1 250 1 293 1 294 1 269 1 271 1 280 1 112 1 114 1 145 1 
181 1 3 1 250 1 293 1 294 1 269 1 271 1 280 1 112 1 114 1 145 1 
181 1 3 1 250 1 293 1 294 1 269 1 271 1 280 1 112 1 114 1 145 1 
181 1 3 1 250 1 293 1 294 1 269 1 271 1 280 1 112 1 114 1 145 1 
311 1 263 1 30 1 182 1 213 1 269 4 238 1 159 2 216 1 230 2 250 1 279 1 112 1 280 4 145 1 147 1 101 2 119 3 
294 1 5 1 213 1 238 1 159 2 216 1 250 1 170 1 101 4 24 1 311 1 263 1 30 1 182 3 269 9 33 1 230 4 280 9 112 2 279 1 145 2 283 1 147 1 119 7 
294 1 5 1 213 1 238 1 159 2 216 1 250 1 170 1 101 4 24 1 311 1 263 1 30 1 182 3 269 9 33 1 230 4 280 9 112 2 279 1 145 2 283 1 147 1 119 7 
13 1 276 1 263 1 181 1 250 1 294 1 269 1 280 1 112 1 255 1 145 1 88 1 
27 1 266 1 69 1 34 1 315 1 70 1 90 1 284 1 201 1 306 1 121 1 173 1 44 1 286 1 
176 1 
143 1 305 1 69 2 284 1 315 2 316 1 176 1 152 1 
290 1 48 2 292 2 126 1 90 1 51 2 11 2 251 1 305 2 58 1 17 1 19 2 306 1 257 3 173 1 176 2 62 1 105 3 27 1 266 1 34 1 69 5 315 5 70 1 318 1 319 1 110 1 144 1 143 1 282 1 201 1 284 2 80 2 121 1 286 1 44 1 152 2 
183 1 176 1 152 1 
39 1 196 2 176 1 
100 1 34 2 201 2 306 1 70 2 286 2 44 2 90 2 
45 2 210 1 2 1 124 1 211 1 49 1 7 2 125 1 87 1 298 2 302 1 91 1 90 2 100 1 169 1 306 1 21 2 261 1 131 1 132 1 178 2 265 1 223 1 264 1 225 1 272 1 187 1 34 3 70 2 321 1 281 1 79 1 148 1 201 3 204 1 286 2 44 2 
27 1 34 1 201 1 306 1 70 1 121 1 286 1 44 1 173 1 90 1 
323 1 35 1 
323 1 214 1 34 1 201 1 70 1 121 1 174 1 286 1 44 1 90 1 
305 1 69 1 284 1 137 1 315 1 
313 1 143 1 305 1 69 2 284 1 315 2 176 1 152 1 
305 1 69 1 315 1 
154 1 4 1 34 2 70 1 90 2 100 1 201 2 121 1 44 1 286 1 288 1 
64 1 6 1 25 1 
178 1 2 1 124 1 125 1 34 1 187 1 298 1 87 1 217 1 100 1 169 1 201 1 21 1 204 1 261 1 131 1 
27 1 34 1 201 1 121 1 286 1 44 1 90 1 
154 1 34 1 70 1 90 1 201 1 44 1 286 1 121 1 288 1 
154 1 134 1 214 1 34 2 70 1 90 2 197 1 199 1 323 1 201 2 121 1 174 1 44 2 286 2 153 1 
4 1 134 1 34 2 90 2 93 1 248 1 100 1 201 2 121 1 44 1 286 1 
134 1 214 1 34 1 90 1 197 1 199 1 323 1 201 1 121 1 44 1 286 1 174 1 207 1 
154 1 64 1 134 1 34 2 201 2 70 1 25 1 286 2 44 2 90 2 
178 1 2 1 124 1 125 1 34 1 187 1 298 1 87 1 100 1 169 1 201 1 21 1 204 1 261 1 131 1 
178 1 81 1 124 1 4 1 125 1 34 1 187 1 298 1 87 1 72 1 100 1 169 1 201 1 21 1 204 1 121 1 261 1 
45 4 290 1 210 1 49 1 6 2 7 2 158 1 160 1 243 1 91 1 302 2 251 1 25 2 64 2 265 1 223 1 29 1 65 1 195 1 148 1 79 2 200 1 
320 1 34 1 201 1 121 1 174 1 286 1 44 1 90 1 
100 1 183 1 
178 1 2 1 124 1 134 1 125 1 187 1 34 2 87 1 298 1 90 1 199 1 169 1 201 2 21 1 204 1 25 1 44 1 286 1 131 1 261 1 
154 1 46 1 4 1 134 2 34 5 70 1 245 1 90 5 93 1 248 1 199 1 100 1 201 5 121 1 44 4 286 4 
27 1 320 1 34 2 201 2 121 1 286 2 44 2 90 2 
134 1 100 1 34 3 201 3 70 1 286 3 44 3 90 3 
59 1 107 1 
59 1 107 1 
59 1 107 1 
59 1 107 1 
184 1 203 1 
184 1 203 1 
184 1 203 1 
59 1 107 1 
59 1 107 1 
59 1 107 1 
59 1 107 1 
59 1 107 1 
59 1 107 1 
59 1 69 1 85 1 315 1 107 1 190 1 139 1 
59 1 85 1 107 1 190 1 
263 1 213 1 216 1 
263 1 213 1 88 1 
263 3 254 1 18 1 60 1 88 1 216 2 
263 2 254 1 60 1 88 1 216 1 274 1 
263 2 254 2 60 1 88 1 216 1 
290 1 292 1 158 1 126 1 86 1 301 1 51 1 11 1 53 1 251 1 305 1 168 1 257 3 176 2 219 1 105 2 26 1 310 2 270 1 69 5 315 5 275 2 38 1 39 1 111 1 196 3 143 1 200 1 284 4 206 1 326 2 152 1 
242 1 90 1 252 1 305 1 306 1 176 1 173 1 27 1 266 1 186 1 34 1 69 2 137 1 315 2 70 1 284 2 201 1 121 1 152 1 44 1 286 1 
290 1 292 1 158 1 301 1 90 1 51 1 11 1 53 1 251 1 306 1 257 3 173 1 176 3 219 1 26 1 105 2 27 1 310 2 266 1 270 1 34 1 69 3 315 3 70 1 275 2 39 2 110 1 196 4 200 1 201 1 284 2 121 1 286 1 44 1 152 1 206 1 326 1 
290 1 292 1 158 1 301 1 51 1 11 1 53 1 251 1 257 3 176 2 219 1 26 1 105 2 310 2 270 1 68 1 69 2 315 2 275 2 39 2 110 1 196 4 200 1 284 1 206 1 326 1 
71 1 
169 1 87 1 
16 1 240 2 169 3 83 1 187 1 87 1 
169 1 240 1 183 1 
169 1 187 1 87 1 
169 1 220 1 
15 1 169 1 
45 6 290 1 48 2 296 2 297 1 302 3 304 1 14 2 251 1 17 1 19 2 218 1 194 1 144 1 235 1 236 1 79 3 150 1 
45 37 155 1 290 5 210 2 48 3 291 1 157 1 7 4 158 4 9 1 296 9 297 1 301 4 91 2 302 18 162 1 304 1 14 3 251 5 99 1 17 1 19 3 218 1 222 1 265 2 66 2 227 1 194 2 144 1 278 6 235 1 115 4 78 4 236 2 79 19 200 4 148 2 
289 1 45 8 290 1 210 2 48 2 7 4 296 4 297 1 91 2 302 4 304 1 14 3 251 1 17 1 19 2 265 2 66 1 194 1 144 1 278 1 235 1 236 1 148 2 79 4 287 1 
45 6 290 1 48 2 296 2 297 1 302 3 304 1 14 2 251 1 17 1 19 2 218 1 194 1 144 1 235 1 236 1 79 3 
45 6 290 1 48 2 296 4 297 1 302 3 304 1 14 2 251 1 17 1 19 2 218 1 194 1 144 1 278 2 235 1 236 1 79 3 
0 2 237 1 124 1 294 2 125 1 298 1 87 1 166 1 169 1 21 1 171 1 104 1 261 1 178 1 312 1 269 1 135 1 228 1 109 2 280 1 112 1 145 1 149 2 
0 1 124 1 213 1 294 1 8 1 125 1 298 1 88 1 216 1 94 1 250 1 18 1 21 1 307 1 309 1 178 1 263 2 269 1 109 1 234 1 280 1 112 1 322 1 145 1 146 1 149 1 
0 1 124 1 213 1 294 1 238 1 8 1 125 1 298 1 88 1 216 1 52 1 94 1 250 1 18 1 21 1 307 1 178 1 263 2 30 1 269 2 109 1 234 1 280 2 112 1 322 1 145 1 146 1 149 1 119 1 
0 1 124 1 213 1 294 1 238 1 125 1 298 1 88 1 216 1 246 1 94 1 18 1 21 1 307 1 309 1 178 1 263 2 30 1 269 3 228 1 109 1 234 1 280 3 112 1 322 1 145 1 146 1 149 1 119 2 
0 1 124 1 294 1 213 1 238 1 125 1 298 1 88 1 216 1 246 1 18 1 21 1 307 1 309 1 178 1 263 2 30 1 269 2 109 1 234 1 280 2 322 1 149 1 119 2 
82 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
28 1 292 1 126 1 69 1 35 1 315 1 36 1 11 1 51 1 141 1 161 1 323 1 
237 1 124 1 292 1 125 1 126 1 298 2 87 1 51 1 11 1 161 1 127 1 305 2 169 1 21 2 257 1 171 1 219 1 261 2 105 1 178 2 28 1 69 2 226 1 35 1 315 2 36 1 141 1 143 1 323 1 205 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 143 1 305 1 323 1 69 2 35 1 315 2 36 1 316 1 141 1 
28 1 292 1 126 1 69 1 35 1 315 1 36 1 11 1 51 1 141 1 161 1 323 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
161 1 28 1 323 1 69 1 35 1 315 1 36 1 141 1 
45 2 210 2 156 1 237 1 124 2 211 2 49 2 7 4 125 2 298 8 87 2 52 1 90 1 91 2 302 1 55 1 95 1 165 1 169 3 21 8 171 1 309 1 261 2 178 7 29 1 265 2 223 2 134 1 225 1 272 1 273 1 34 1 233 1 77 1 148 2 79 1 201 1 286 1 44 1 
154 1 45 3 290 1 210 1 6 1 49 1 7 2 239 1 158 1 301 1 91 1 90 1 302 1 253 1 251 1 25 1 64 1 265 1 223 1 34 1 70 1 148 1 200 1 79 2 201 1 44 1 286 1 
210 1 265 1 223 1 29 1 49 1 7 2 235 1 183 1 148 1 297 1 91 1 
45 14 290 2 210 2 157 1 49 1 6 11 7 4 158 1 9 1 296 1 301 2 91 2 302 8 253 1 251 1 100 1 25 11 260 1 64 4 265 2 223 2 225 1 272 1 227 1 192 1 278 1 78 3 115 3 79 6 148 2 200 2 40 1 
45 2 2 1 210 1 124 1 49 1 7 2 125 1 87 1 298 1 89 1 217 1 90 1 91 1 302 1 164 1 253 1 100 1 169 1 21 1 131 1 261 1 178 1 64 1 265 1 223 1 134 1 225 1 272 1 187 1 34 2 73 1 199 1 148 1 79 1 201 2 204 1 286 1 44 1 
2 2 4 1 6 6 7 6 158 2 87 2 91 3 90 1 14 2 253 1 251 3 100 1 169 2 17 1 19 2 21 1 25 6 261 1 178 1 265 3 264 2 272 1 185 1 34 3 187 2 277 1 199 1 200 2 201 3 118 2 204 2 121 1 44 1 286 1 45 19 290 3 210 3 48 2 124 2 49 3 296 2 125 2 297 1 298 1 301 2 302 9 128 2 131 2 64 6 223 3 225 1 134 1 136 2 74 2 144 1 235 1 79 10 148 3 
45 2 64 1 290 1 29 1 223 1 265 1 210 1 6 1 49 1 65 1 7 2 296 1 91 1 302 2 278 1 148 1 200 1 25 1 
45 2 64 1 29 1 223 1 265 1 210 1 6 1 49 1 7 2 158 1 160 1 91 1 251 1 148 1 79 2 25 1 
45 4 64 2 290 1 29 1 223 1 265 1 210 1 6 2 49 1 7 2 158 1 296 1 301 1 91 1 302 2 251 1 278 1 79 2 148 1 200 1 25 2 
45 2 64 1 290 1 223 1 265 1 210 1 6 1 49 1 65 1 7 2 296 1 91 1 302 2 278 1 77 1 148 1 200 1 25 1 
45 2 64 1 223 1 265 1 210 1 6 1 49 1 7 2 158 1 160 1 91 1 251 1 77 1 148 1 79 2 25 1 
45 4 64 2 290 1 223 1 265 1 210 1 6 2 49 1 7 2 158 1 301 1 91 1 302 2 251 1 77 1 79 2 148 1 200 1 25 2 
45 4 64 2 290 1 223 1 265 1 210 1 6 2 49 1 7 2 158 1 296 1 301 1 91 1 302 2 251 1 278 1 79 2 148 1 200 1 25 2 
45 2 2 1 210 1 124 1 49 1 7 2 125 1 87 1 298 1 302 1 91 1 100 1 169 1 21 1 131 1 261 1 178 1 264 1 223 1 265 1 225 1 272 1 187 1 34 1 148 1 79 1 201 1 204 1 
45 1 81 1 210 1 124 1 4 1 49 1 7 2 125 1 87 1 298 1 91 1 100 1 169 1 21 1 261 1 178 1 223 1 265 1 272 1 187 1 34 1 72 1 148 1 79 1 201 1 204 1 121 1 122 1 
45 4 64 2 290 1 223 1 265 1 210 1 6 2 49 1 7 2 158 1 296 1 301 1 91 1 302 2 251 1 253 1 278 1 79 2 148 1 200 1 25 2 
45 4 290 1 2 1 210 1 124 1 6 2 49 1 7 2 158 1 296 1 125 1 298 1 87 1 301 1 302 2 52 1 91 1 251 1 169 1 21 1 25 2 131 1 178 1 64 2 264 1 223 1 265 1 187 1 136 1 34 1 278 1 79 2 200 1 148 1 201 1 204 1 
154 1 45 3 290 1 210 1 49 1 6 1 7 2 158 1 296 1 301 1 91 1 90 1 302 2 251 1 253 1 25 1 64 1 265 1 223 1 34 1 70 1 232 1 278 1 79 1 148 1 200 1 201 1 44 1 286 1 
210 1 265 1 198 1 7 2 130 1 148 1 259 1 43 1 287 1 91 1 
210 1 265 1 198 1 7 2 130 1 148 1 259 1 43 1 287 1 91 1 
210 1 265 1 198 1 7 2 130 1 148 1 259 1 43 1 287 1 91 1 
210 1 265 1 198 1 7 2 130 1 148 1 259 1 43 1 287 1 91 1 
210 1 265 1 198 1 7 2 130 1 148 1 259 1 43 1 287 1 91 1 
1 1 45 2 210 1 156 1 124 1 211 2 49 1 7 2 125 1 87 1 298 2 90 2 91 1 302 1 56 1 253 1 167 1 169 1 21 2 258 1 178 2 265 1 223 1 225 1 32 1 272 1 34 2 233 1 148 1 79 1 201 2 
178 1 237 1 124 1 125 1 135 1 87 1 298 1 138 1 75 1 169 1 149 1 21 1 171 1 261 1 
178 1 263 2 124 1 213 1 125 1 88 1 298 1 216 1 247 1 75 1 234 1 18 1 146 1 149 1 21 1 307 1 22 1 309 1 
178 2 263 2 124 1 213 1 125 1 88 1 298 2 216 1 52 1 247 1 75 1 234 1 18 1 146 1 149 1 21 2 307 1 22 1 309 1 
178 1 263 2 124 1 213 1 125 1 88 1 298 1 216 1 247 1 76 1 234 1 18 1 146 1 149 1 21 1 307 1 309 1 
191 1 
292 1 126 1 11 1 51 1 58 1 257 1 152 1 176 1 62 1 105 1 
310 5 290 2 50 1 158 2 301 2 275 5 39 5 196 10 251 2 128 1 200 2 257 5 176 5 105 5 
143 1 305 1 69 1 315 1 176 1 152 1 
237 1 124 1 292 2 295 1 125 1 126 1 244 1 87 1 298 4 51 2 11 2 127 1 305 4 169 1 102 2 21 4 257 2 171 1 219 2 261 2 105 2 178 4 226 2 69 3 315 3 108 1 110 1 143 2 205 1 
183 1 58 1 257 1 176 1 152 1 105 1 62 1 
45 1 210 1 2 1 124 1 49 1 7 2 125 1 298 1 87 1 91 1 90 2 100 1 169 1 21 1 306 1 261 1 131 1 178 1 132 1 264 1 223 1 265 1 272 1 34 3 187 1 70 2 79 1 148 1 201 3 204 1 286 2 44 2 
310 2 292 1 126 1 226 1 275 2 11 1 51 1 304 1 39 2 196 4 257 1 219 1 152 2 176 4 105 2 
292 1 126 1 51 1 11 1 249 1 305 1 257 1 176 2 221 1 105 1 69 1 315 1 39 1 196 1 143 1 151 1 152 1 
178 1 124 1 292 1 268 1 125 2 126 1 83 1 187 1 87 1 298 1 11 1 51 1 15 1 169 2 21 1 172 1 261 1 
290 2 292 1 212 1 158 2 9 1 126 1 301 2 51 1 11 1 251 2 257 6 176 3 105 4 310 5 180 1 224 1 314 1 275 5 39 3 196 6 78 1 115 1 200 2 202 1 
290 2 48 1 292 1 50 1 126 1 51 1 11 1 90 1 163 1 251 1 17 1 19 1 306 1 257 2 173 1 105 2 27 1 266 1 34 1 69 1 315 1 70 1 144 1 201 1 80 2 121 1 44 1 286 1 
324 1 215 1 117 1 106 1 42 1 
47 1 324 1 215 1 
47 1 324 1 215 1 
47 1 324 1 215 1 
324 1 215 1 41 1 
324 1 215 1 41 1 
324 1 215 1 41 1 
324 1 215 1 
59 1 107 1 
45 5 290 1 48 2 296 2 302 2 14 2 144 1 251 1 17 1 79 3 19 2 
45 2 290 1 265 1 210 1 7 2 296 1 91 1 302 2 278 1 148 1 200 1 287 1 
45 4 290 1 265 1 210 1 7 2 158 1 296 1 301 1 91 1 302 2 251 1 278 1 79 2 148 1 200 1 287 1 
45 3 265 3 210 3 48 1 7 6 296 2 66 1 91 3 302 1 162 1 231 1 14 1 278 1 79 2 148 3 19 1 287 1 
45 23 290 3 155 1 210 4 48 2 291 1 7 8 158 2 9 1 296 5 297 1 301 2 91 4 302 11 14 2 251 3 98 1 99 1 17 1 19 2 265 4 66 1 231 1 144 1 278 3 235 1 78 3 115 3 79 12 148 4 200 2 287 1 
45 9 290 1 210 2 48 2 7 4 296 4 297 1 91 2 302 4 14 2 251 1 17 1 19 2 265 2 66 1 144 1 278 2 235 1 148 2 79 5 
235 1 183 1 297 1 
45 4 290 1 265 1 210 1 7 2 158 1 301 1 91 1 302 2 251 1 98 1 79 2 148 1 200 1 
45 12 290 2 157 1 158 2 9 1 296 2 301 2 302 6 227 1 251 2 278 2 78 2 115 2 79 6 200 2 
45 17 290 3 210 1 48 2 157 1 7 2 158 2 296 3 297 1 301 2 302 8 91 1 14 2 251 3 17 1 19 2 265 1 66 1 227 1 192 1 144 1 278 1 235 1 115 2 78 2 200 2 79 9 148 1 
45 1 78 1 79 1 
45 1 115 1 302 1 
45 6 290 1 210 1 265 1 7 2 158 1 296 1 301 1 91 1 302 3 251 1 98 1 128 1 278 1 148 1 79 3 200 1 
45 13 290 2 210 2 212 1 7 4 158 2 9 1 296 2 301 2 91 2 302 6 14 1 251 2 180 1 265 2 224 1 66 1 314 1 278 1 115 1 78 1 79 7 148 2 200 2 202 1 287 1 
45 4 290 1 48 1 296 1 302 2 14 1 144 1 251 1 79 2 19 1 
45 3 265 1 210 1 48 1 7 2 296 2 66 1 297 1 302 1 91 1 162 1 14 1 278 1 235 1 17 1 79 2 148 1 19 1 
45 7 290 1 210 1 48 2 7 2 296 2 9 1 297 1 91 1 302 3 14 2 251 1 17 1 19 2 265 1 314 1 144 1 235 1 115 1 78 1 79 4 148 1 287 1 
45 10 290 2 210 2 48 2 7 4 9 1 296 3 297 1 301 1 91 2 302 5 14 2 251 1 98 1 17 1 19 2 265 2 314 1 227 1 144 1 278 1 235 1 78 2 115 1 79 5 148 2 200 1 287 1 
45 12 290 2 210 2 212 1 7 4 158 2 9 1 296 1 301 2 91 2 302 6 251 2 98 1 265 2 180 1 224 1 314 1 278 1 115 1 78 1 79 6 148 2 200 2 202 1 287 1 
45 12 290 2 210 4 212 1 7 8 158 1 9 1 296 2 301 2 91 4 302 7 14 1 251 1 98 1 180 1 265 4 224 1 66 2 314 1 278 1 115 1 78 1 79 5 148 4 200 2 202 1 287 1 
45 7 290 1 210 1 48 2 7 2 296 2 9 1 297 1 91 1 302 3 14 2 251 1 17 1 19 2 265 1 314 1 144 1 235 1 115 1 78 1 79 4 148 1 287 1 
45 13 290 2 210 2 212 1 7 4 158 2 9 1 296 2 301 2 91 2 302 6 14 1 251 2 180 1 265 2 224 1 66 1 314 1 278 1 115 1 78 1 79 7 148 2 200 2 202 1 287 1 
45 11 290 2 210 3 212 1 7 6 158 1 296 1 9 1 301 2 91 3 302 7 251 1 98 1 265 3 180 1 224 1 66 1 314 1 278 1 78 1 115 1 79 4 148 3 200 2 202 1 287 1 
45 16 290 3 210 4 212 1 7 8 158 2 9 1 296 4 301 3 91 4 302 9 14 1 251 2 180 1 265 4 224 1 66 2 314 1 231 1 278 3 78 1 115 1 79 7 148 4 200 3 202 1 287 1 
45 5 290 1 48 1 296 2 297 1 302 2 14 1 251 1 144 1 278 1 235 1 79 3 17 1 19 1 
45 11 290 2 210 3 212 1 7 6 158 1 296 1 9 1 301 2 91 3 302 7 251 1 265 3 180 1 224 1 66 1 314 1 231 1 278 1 78 1 115 1 79 4 148 3 200 2 202 1 287 1 
208 1 4 1 67 1 34 1 299 1 90 1 303 1 93 1 248 1 129 1 100 1 201 1 308 1 121 1 
4 1 34 1 90 1 93 1 248 1 100 1 201 1 308 1 121 1 
178 4 237 1 133 1 124 1 125 1 188 1 298 4 87 1 52 1 169 1 21 4 171 1 261 1 
178 2 63 1 124 1 125 2 187 1 298 2 87 1 10 1 12 1 229 1 169 1 325 1 102 1 21 2 
178 1 263 1 124 1 213 1 125 1 307 1 21 1 88 1 298 1 261 1 
178 2 124 1 32 1 125 1 298 2 87 1 52 1 233 1 169 1 21 2 309 1 
178 4 237 1 124 2 273 1 125 2 188 1 298 5 87 2 52 1 233 1 165 1 169 3 102 1 21 5 171 1 261 1 
178 4 262 1 237 1 124 2 125 2 188 1 298 5 87 2 52 1 233 1 165 1 169 3 102 1 21 5 171 1 261 1 
178 1 237 1 124 1 125 1 169 1 183 1 21 1 171 1 87 1 298 1 261 1 
124 1 4 1 125 1 298 1 87 1 90 1 100 1 169 1 21 1 261 1 178 1 134 1 34 2 187 1 72 1 201 2 204 1 286 1 44 1 121 1 
178 1 63 1 124 1 125 2 83 1 187 1 298 1 87 1 10 1 300 1 169 1 102 1 21 1 
178 1 124 1 134 1 125 1 187 1 34 2 87 1 298 1 90 1 100 1 169 1 201 2 21 1 204 1 44 1 286 1 261 1 131 1 
178 1 124 1 134 1 125 1 214 1 187 2 34 1 87 2 298 1 90 1 142 1 169 3 201 1 102 1 21 1 204 1 220 1 121 1 174 1 44 1 286 1 131 1 
178 1 124 1 134 1 125 1 214 1 187 2 34 1 87 2 298 1 90 1 72 1 142 1 169 3 201 1 102 1 21 1 204 1 220 1 121 1 174 1 44 1 286 1 
240 1 241 1 298 1 90 1 15 1 305 1 169 2 102 1 21 1 306 1 175 1 176 1 173 1 27 1 178 1 266 1 34 1 69 2 315 2 70 1 201 1 121 1 152 1 44 1 286 1 
123 1 298 1 90 1 15 1 169 1 102 1 21 1 306 1 176 1 173 1 27 1 178 1 266 1 69 1 34 1 315 1 70 1 201 1 121 1 152 1 44 1 286 1 
178 1 55 1 124 1 125 1 21 1 298 1 
178 6 63 1 124 2 211 1 273 1 125 3 83 1 187 1 298 7 87 2 10 1 300 1 52 1 55 1 95 1 233 1 165 1 169 3 21 7 309 1 261 2 
2 1 4 1 7 4 87 1 91 2 90 1 14 2 253 1 251 1 100 1 169 1 17 1 19 2 21 1 178 1 264 1 265 2 34 2 187 1 201 2 204 1 121 1 44 1 286 1 45 5 290 1 210 2 124 1 48 2 49 2 125 1 296 2 297 1 298 1 52 1 302 2 56 1 131 1 223 2 134 1 136 1 74 1 144 1 235 1 148 2 79 3 
11 2 90 1 96 1 15 1 251 1 169 1 17 1 19 2 21 1 257 3 23 1 176 2 173 1 261 1 105 3 178 1 27 1 266 1 34 1 284 1 201 1 121 1 44 1 286 1 123 1 290 1 48 2 292 2 295 1 126 2 298 1 51 2 305 1 58 1 306 1 61 1 62 1 69 2 315 2 70 1 143 1 144 1 80 2 152 2 
178 2 124 1 240 1 125 2 83 1 187 1 298 2 87 1 52 1 55 1 169 2 21 2 172 1 
1 1 34 1 90 1 97 1 167 1 201 1 285 1 258 1 177 1 
267 1 97 1 57 1 197 1 323 1 214 1 116 1 285 1 121 1 174 1 177 1 
97 1 100 1 116 1 285 1 177 1 
267 1 97 1 57 1 69 1 284 1 315 1 317 1 
30 1 250 1 269 1 280 1 112 1 238 1 145 1 
209 1 30 2 269 4 182 1 238 2 189 1 230 1 280 4 112 1 255 1 113 1 145 1 101 1 119 2 
30 1 250 1 269 2 280 2 112 1 238 1 145 1 20 1 119 1 24 1 140 1 
30 1 269 3 238 1 189 2 92 1 250 1 112 1 280 3 113 1 255 2 145 1 
37 1 31 2 101 2 103 1 
250 1 269 1 280 1 112 1 145 1 84 1 
30 1 250 1 269 2 280 2 112 1 238 1 145 1 283 1 119 1 
120 1 
30 1 250 1 269 1 280 1 112 1 238 1 145 1 
30 1 238 1 183 1 
30 1 269 1 280 1 112 1 238 1 145 1 
109 1 294 1 269 1 
193 1 30 1 250 1 269 3 280 3 112 1 238 1 255 2 113 1 145 1 189 1 
30 1 269 2 280 2 112 1 238 1 159 1 145 1 119 1 
263 1 269 1 213 1 216 1 230 1 250 1 112 1 280 1 145 1 147 1 101 1 
250 1 269 1 280 1 112 1 238 1 145 1 
30 1 250 1 269 1 280 1 112 1 238 1 145 1 101 1 
54 1 179 1 250 1 269 1 280 1 112 1 145 1 
30 1 269 3 182 1 238 1 230 1 250 1 112 1 280 3 145 1 170 1 283 1 101 1 119 2 
263 2 30 1 269 2 213 1 238 1 88 1 216 1 250 1 112 1 280 2 256 1 145 1 18 1 119 1 
30 1 269 4 182 1 238 1 159 1 230 1 250 1 112 2 280 4 279 1 145 2 101 1 119 2 
30 1 250 1 269 3 280 3 112 1 238 1 255 1 145 1 283 1 119 1 
209 1 230 1 182 1 101 1 
238 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (111,165) (111,165) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (111,165) (111,165) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (111,165) (111,165) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (111,165) (111,165) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 191 (24,163,295,302) 347 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 191 240 (105,250) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 191 240 (105,250) 140 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 191 240 (105,250) 140 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 331 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 76 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 34 248 367 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 331 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (8,235) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 7 340 113 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 7 340 113 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 7 340 113 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 7 340 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 196 172 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 6 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 6 91 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 191 (24,163,295,302) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 191 240 299 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 191 240 222 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 191 240 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 1 105 1 127 1 264 1 116 1 36 1 71 1 231 1 165 1 5 1 103 1 
111 1 105 1 127 1 264 1 116 1 36 1 71 1 231 1 165 1 5 1 103 1 
111 1 105 1 127 1 264 1 116 1 36 1 71 1 231 1 165 1 5 1 103 1 
111 1 105 1 127 1 264 1 116 1 36 1 71 1 231 1 165 1 5 1 103 1 
16 1 347 1 258 1 191 1 116 1 146 1 36 1 219 1 231 1 24 1 5 2 103 2 
127 1 186 1 338 1 264 1 244 1 36 1 61 1 219 1 231 1 5 2 282 1 116 1 152 1 100 1 344 1 103 2 
127 1 250 1 191 1 116 2 146 1 36 1 219 1 231 2 240 1 5 2 103 2 
140 1 127 1 258 1 250 1 295 1 191 1 116 2 146 1 36 1 219 1 231 2 240 1 5 3 103 3 
140 1 127 1 258 1 250 1 295 1 191 1 116 2 146 1 36 1 219 1 231 2 240 1 5 3 103 3 
335 1 83 1 331 1 
83 1 173 2 359 1 
346 2 308 2 153 1 273 1 217 2 35 2 314 2 22 2 
67 1 339 1 217 3 121 1 269 1 4 1 314 2 220 1 341 2 342 1 296 1 153 1 273 1 175 1 346 3 11 1 55 1 81 1 162 1 33 2 107 2 35 2 60 2 200 1 230 1 281 2 203 1 234 1 65 1 308 2 42 1 261 1 167 1 23 1 22 2 368 1 138 1 
346 1 337 1 308 1 237 1 153 1 217 1 35 1 314 1 22 1 27 1 
118 1 335 1 337 1 217 2 245 1 314 2 27 1 153 1 346 2 164 1 83 1 82 1 197 1 35 1 324 1 305 1 204 1 308 1 237 2 333 1 22 1 
118 1 335 1 337 1 217 2 314 2 27 1 153 1 346 2 164 2 83 1 82 1 197 1 35 2 324 1 305 1 204 2 308 2 237 2 22 2 
204 1 164 1 19 1 210 1 193 1 
204 2 335 1 83 1 164 2 206 1 210 1 85 1 193 1 
204 1 164 1 210 1 
346 1 337 1 164 1 82 1 35 1 217 1 314 1 27 1 204 1 308 1 237 1 153 1 193 1 22 1 
83 1 
335 1 337 1 217 1 314 1 27 1 153 1 193 1 346 1 83 1 164 2 82 1 35 1 85 1 180 1 204 2 308 1 237 1 210 1 22 1 
335 2 262 1 337 1 145 1 217 1 218 4 268 1 3 1 314 1 292 1 27 1 72 1 150 1 153 1 317 1 318 2 77 2 102 2 193 2 346 1 159 5 82 1 164 5 83 2 13 1 35 1 84 1 327 2 85 1 204 5 64 2 63 2 308 1 310 1 237 1 209 1 210 2 22 1 
331 1 273 1 
346 2 55 1 339 1 107 1 200 1 121 1 35 1 217 2 60 1 326 1 314 1 203 1 73 1 341 1 65 1 42 1 261 1 135 1 22 1 175 1 
346 5 35 4 217 5 245 1 201 1 326 2 314 5 148 1 73 1 361 1 308 1 97 1 357 1 237 1 273 1 22 4 
346 1 237 1 279 1 217 1 35 1 314 1 22 1 27 1 
346 2 217 2 35 1 201 1 314 2 15 1 308 1 273 2 22 1 
8 1 93 1 135 1 
237 1 273 1 14 1 148 1 
346 3 308 1 273 1 217 3 35 3 326 1 314 3 22 3 
346 1 237 1 217 1 35 1 314 1 22 1 27 1 
15 1 346 1 308 1 237 1 217 1 35 1 201 1 314 1 22 1 
339 1 4 1 148 1 341 1 342 1 153 1 346 4 55 1 164 1 197 1 107 1 60 1 200 1 201 1 305 1 203 1 204 1 65 1 308 2 261 1 167 1 22 3 23 1 67 1 118 1 217 4 121 1 269 1 314 3 73 1 273 1 175 1 358 1 81 1 33 2 35 3 324 1 326 1 281 1 234 1 42 1 237 2 364 1 138 1 368 1 
346 2 35 1 217 2 245 1 326 1 314 2 148 1 361 1 237 1 273 1 22 1 
346 3 118 1 358 1 83 1 164 1 197 1 35 3 217 3 324 1 201 1 326 2 314 3 305 1 204 1 73 1 308 1 237 1 154 1 22 3 
346 2 35 2 217 2 201 1 326 1 314 2 8 1 308 1 135 1 22 2 
346 1 55 1 339 1 107 1 217 1 60 1 121 1 200 1 203 1 341 1 65 1 42 1 273 1 261 1 175 1 
346 1 55 1 312 1 339 1 107 1 217 1 60 1 121 1 200 1 341 1 65 1 42 1 66 1 273 1 261 1 
67 1 288 1 290 1 269 1 4 1 8 2 93 2 345 1 276 1 11 2 160 1 81 1 33 2 327 1 281 4 87 1 179 1 234 1 64 1 235 1 167 1 135 2 23 2 136 1 
279 1 
354 1 134 1 
354 1 134 1 
68 1 56 1 
68 1 56 1 
68 1 56 1 
104 1 354 1 134 1 
354 1 132 1 134 1 
68 1 30 1 56 1 37 1 202 1 354 2 134 2 
104 1 354 1 134 1 
104 1 354 1 134 1 
354 1 329 1 134 1 
354 1 329 1 134 1 
354 1 329 1 134 1 
215 1 313 1 217 2 314 2 354 1 94 1 273 1 274 1 346 2 31 1 227 1 164 1 12 1 58 1 35 2 204 1 132 1 40 1 134 1 41 1 20 1 207 1 311 1 22 2 
213 1 337 1 217 1 170 1 314 1 27 1 354 2 94 1 51 1 153 1 346 1 31 2 164 2 82 1 12 2 58 2 35 1 202 1 204 2 131 1 134 2 41 2 308 1 260 1 237 1 207 2 351 1 22 1 
282 1 307 1 61 1 
282 1 61 1 344 1 
282 3 307 2 171 1 59 1 238 1 344 1 
282 2 307 1 171 1 59 1 182 1 344 1 
282 2 307 1 171 1 59 2 344 1 
335 1 313 1 290 1 147 1 218 3 48 1 292 1 293 2 190 1 173 3 355 1 318 1 102 1 193 4 274 1 159 2 227 1 164 5 83 2 177 1 359 1 128 1 327 1 85 1 204 5 64 1 63 1 328 1 89 2 365 2 210 1 136 1 
139 5 335 1 43 1 44 1 262 1 263 1 120 1 313 4 169 1 290 3 147 2 218 8 292 1 293 6 190 2 173 9 318 2 102 2 251 1 193 7 159 6 164 9 83 5 359 3 128 3 327 3 85 1 204 9 64 3 328 1 63 2 19 5 365 6 210 6 136 3 
335 1 262 1 313 1 290 1 147 1 218 3 293 2 190 1 355 1 173 4 318 1 102 1 193 2 159 2 83 3 164 3 177 1 359 2 128 1 327 1 204 3 63 1 89 1 64 1 365 2 136 1 
335 1 262 1 120 1 313 2 169 1 290 2 147 1 218 5 293 4 190 1 173 7 355 1 318 1 102 1 251 1 193 3 159 4 83 4 164 4 177 1 359 3 128 2 327 2 204 4 63 1 89 2 64 2 365 4 136 2 
331 1 270 1 
339 1 108 1 
339 1 42 1 261 1 
50 1 339 1 
17 1 
339 1 42 1 
76 1 
11 2 252 2 160 4 142 1 145 1 268 1 228 1 327 1 281 5 87 1 64 1 18 1 285 1 209 1 319 1 23 3 211 3 
11 2 252 2 160 4 142 1 145 1 268 1 228 1 327 1 281 6 87 1 64 1 18 1 285 1 209 1 319 1 23 4 211 3 
11 2 252 2 160 4 142 1 145 1 268 1 228 1 327 1 281 5 86 1 87 1 64 1 18 1 285 1 209 1 319 1 23 3 211 3 
67 1 142 2 290 2 145 2 265 1 268 3 3 1 269 1 149 1 224 1 319 1 158 3 252 3 11 15 160 12 81 1 32 1 33 2 228 1 128 2 304 1 281 33 327 5 87 5 64 5 18 1 309 1 285 2 209 3 167 1 366 3 23 18 136 2 211 7 
67 2 352 1 119 1 142 1 265 1 145 1 268 1 269 2 252 2 11 3 160 5 81 2 33 4 228 1 327 1 281 8 87 1 64 1 18 1 285 1 167 2 209 1 23 5 211 4 
141 1 46 1 121 1 244 1 219 1 5 2 341 1 123 1 316 1 100 1 344 1 103 2 298 1 127 1 55 1 80 1 107 1 60 1 61 1 36 1 231 1 232 1 233 1 181 1 282 2 258 1 307 1 116 1 238 1 25 1 
141 1 143 1 46 1 121 1 244 1 267 1 219 1 246 1 5 3 341 1 316 1 100 1 344 1 103 3 127 1 55 1 80 1 107 1 60 1 61 1 231 1 232 1 233 1 181 1 282 2 258 2 307 1 116 1 238 1 25 1 
141 1 143 1 46 1 121 1 244 1 219 1 246 1 5 2 341 1 316 1 100 1 344 1 103 2 127 1 55 1 80 1 107 1 60 1 61 1 232 1 233 1 282 2 258 2 307 1 238 1 
141 2 339 1 121 1 267 1 5 1 341 1 271 1 343 1 78 1 126 1 103 1 55 1 127 2 80 2 106 1 253 1 107 1 60 1 231 1 233 2 65 1 116 1 42 1 
141 1 143 1 46 1 121 1 5 1 341 1 123 1 316 1 344 1 103 1 127 1 55 1 80 1 107 1 60 1 61 1 36 1 231 1 232 1 233 1 181 1 282 2 307 1 116 1 238 1 25 1 
322 1 
335 2 187 2 45 2 339 1 2 1 245 1 247 2 292 1 341 2 92 1 190 1 96 2 99 1 102 1 155 1 346 1 159 2 55 1 161 4 164 5 253 1 197 1 107 2 199 1 60 2 305 1 349 1 204 5 63 1 65 2 210 6 26 1 118 1 216 1 121 1 217 1 218 2 314 1 173 2 318 1 126 1 277 2 83 3 359 2 34 1 324 1 39 1 85 3 88 2 133 1 42 1 283 2 237 1 332 1 333 1 
118 1 335 2 216 1 217 1 2 1 245 1 314 1 155 1 346 1 161 2 164 3 83 2 197 1 324 1 39 1 85 1 305 1 180 1 204 3 88 1 133 1 237 1 210 2 333 1 
346 1 335 2 118 1 187 1 161 3 83 2 164 2 216 1 197 1 2 1 217 1 324 1 245 1 39 1 314 1 305 1 204 2 133 1 237 1 333 1 155 1 
118 1 335 2 187 1 216 1 217 1 2 1 245 1 314 1 96 1 155 1 346 1 161 3 164 3 83 2 197 1 324 1 39 1 85 1 305 1 180 1 204 3 88 1 133 1 237 1 210 2 333 1 
335 3 45 2 187 2 337 1 144 1 2 1 245 1 292 1 247 2 248 1 96 4 151 1 153 1 102 1 155 1 346 2 159 1 161 4 164 5 197 1 305 1 204 5 306 1 63 1 308 1 210 7 22 1 26 1 118 1 216 1 217 2 218 1 314 2 27 1 318 1 277 2 82 1 83 3 34 1 359 2 35 1 324 1 39 1 85 3 360 1 180 1 88 4 133 1 237 2 283 2 333 1 
335 3 45 2 187 2 2 1 245 1 292 1 247 2 96 2 102 1 155 1 346 1 159 1 161 4 164 4 197 1 305 1 204 4 349 1 63 1 210 4 26 1 118 1 216 1 217 1 218 1 314 1 173 2 318 1 277 2 83 4 34 1 359 2 324 1 39 1 85 2 88 2 133 1 237 1 283 2 333 1 
118 1 335 3 187 2 45 2 144 1 216 1 217 1 2 1 218 1 245 1 247 2 314 1 292 1 248 1 96 2 318 1 102 1 155 1 346 1 159 1 161 4 277 2 164 4 83 3 197 1 359 2 34 1 324 1 39 1 85 2 305 1 88 2 204 4 306 1 63 1 133 1 283 2 237 1 210 4 333 1 26 1 
118 1 335 3 187 2 45 2 144 1 216 1 217 1 2 1 218 1 245 1 247 2 314 1 292 1 248 1 96 2 318 1 102 1 155 1 346 1 159 1 161 4 277 2 164 4 83 3 197 1 359 2 34 1 324 1 39 1 85 2 305 1 88 2 204 4 306 1 63 1 133 1 283 2 237 1 210 4 333 1 26 1 
287 1 118 1 335 2 45 1 216 1 217 1 2 1 218 1 245 1 314 1 292 1 248 1 318 1 102 1 155 1 346 1 159 1 161 2 277 1 164 2 83 2 301 1 197 1 34 1 324 1 39 1 305 1 204 2 166 1 63 1 133 1 237 1 333 1 367 1 
118 1 335 3 45 2 187 3 144 1 216 1 217 1 2 1 218 1 245 1 247 2 292 1 314 1 248 1 96 3 318 1 102 1 155 1 346 1 159 1 161 5 277 2 164 4 83 3 197 1 359 2 34 1 324 1 39 1 85 2 305 1 360 1 306 1 204 4 88 3 63 1 133 1 283 2 237 1 210 5 333 1 26 1 
118 1 335 3 45 2 187 3 144 1 216 1 217 1 2 1 218 1 245 1 247 2 292 1 314 1 248 1 96 3 318 1 102 1 155 1 346 1 159 1 161 5 277 2 164 4 83 3 197 1 359 2 34 1 324 1 39 1 85 2 305 1 360 1 306 1 204 4 88 3 63 1 133 1 283 2 237 1 210 5 333 1 26 1 
287 1 118 1 335 2 45 1 216 1 2 1 217 1 218 1 245 1 292 1 314 1 318 1 102 1 155 1 346 1 159 1 161 2 277 1 164 2 83 2 301 1 197 1 34 1 324 1 39 1 305 1 204 2 63 1 133 1 237 1 333 1 
67 1 252 1 11 2 160 2 81 1 33 2 145 1 228 1 268 1 269 1 4 1 327 1 281 5 179 1 8 1 93 1 64 1 234 1 331 1 18 1 273 1 209 1 167 1 135 1 23 3 211 2 
67 2 11 1 158 1 81 2 300 1 33 4 269 2 4 1 281 4 148 1 122 1 93 3 234 2 75 1 237 1 273 1 21 1 167 2 366 1 135 3 23 3 368 1 241 1 
67 1 217 1 269 1 4 1 314 1 8 1 73 1 296 1 273 1 225 1 346 1 11 1 81 1 33 2 35 1 280 1 14 1 326 1 281 2 234 1 362 1 167 1 21 1 22 1 23 1 368 1 
67 2 339 1 121 1 47 1 217 2 269 2 4 2 314 1 8 2 73 1 341 1 93 2 342 1 101 1 175 1 53 1 346 2 11 3 55 1 160 2 81 2 33 4 107 1 200 1 35 1 60 1 128 1 109 1 281 5 326 1 87 2 203 1 257 1 64 1 234 2 65 1 42 1 261 1 167 2 21 1 135 2 136 1 22 1 23 2 368 1 
67 2 336 1 185 1 143 1 339 3 291 1 217 1 121 2 269 2 4 2 314 1 341 8 294 1 124 1 296 1 126 1 346 1 298 1 55 2 11 1 81 2 162 2 33 4 253 1 107 8 35 1 60 7 326 1 281 2 179 1 65 2 234 2 42 2 167 2 168 1 22 1 23 1 137 1 368 1 
67 1 290 1 266 1 217 1 269 1 4 1 314 1 8 1 93 1 346 1 11 1 81 1 33 2 35 1 128 1 201 1 281 3 327 1 234 1 64 1 308 1 167 1 21 1 135 1 22 1 136 1 23 2 
67 1 345 1 11 2 160 1 81 1 33 2 269 1 4 1 281 2 87 1 179 1 8 1 93 1 234 1 64 1 167 1 135 1 136 1 
67 1 288 1 81 1 33 2 290 1 269 1 4 1 281 2 327 1 179 1 8 1 93 1 234 1 167 1 135 1 23 2 
67 1 290 1 269 1 4 1 8 2 93 2 11 2 160 1 81 1 33 2 128 1 281 4 327 1 179 1 87 1 64 1 234 1 167 1 135 2 136 1 23 2 
67 1 345 1 185 1 11 2 160 1 81 1 33 2 269 1 4 1 281 2 87 1 8 1 93 1 234 1 64 1 167 1 135 1 136 1 
67 1 185 1 288 1 81 1 33 2 290 1 269 1 4 1 281 2 327 1 8 1 93 1 234 1 167 1 135 1 23 2 
67 1 185 1 11 2 160 1 81 1 33 2 128 1 269 1 4 1 281 2 87 1 8 1 93 1 234 1 64 1 167 1 135 1 136 1 
67 1 11 2 160 1 81 1 33 2 128 1 269 1 4 1 281 2 87 1 8 1 93 1 234 1 64 1 167 1 135 1 136 1 
67 1 339 1 121 1 217 1 269 1 4 1 341 1 342 1 296 1 273 1 175 1 346 1 11 1 55 1 81 1 33 2 107 1 200 1 60 1 281 2 203 1 65 1 234 1 42 1 261 1 167 1 23 1 368 1 
67 1 312 1 339 1 121 1 217 1 269 1 4 1 341 1 296 1 273 1 346 1 11 1 55 1 81 1 33 2 107 1 200 1 60 1 178 1 281 2 65 1 234 1 42 1 66 1 261 1 167 1 23 1 368 1 
67 1 11 2 160 1 81 1 33 2 128 1 269 1 4 1 281 2 87 1 8 1 93 1 234 1 64 1 21 1 167 1 135 1 136 1 
67 1 339 1 121 1 47 1 217 1 269 1 4 1 8 1 341 1 93 1 342 1 175 1 346 1 298 1 11 2 55 1 160 1 81 1 33 2 107 1 200 1 60 1 128 1 281 2 87 1 203 1 64 1 234 1 42 1 261 1 167 1 135 1 136 1 
67 1 217 1 269 1 4 1 314 1 8 1 93 1 346 1 11 2 160 1 81 1 33 2 35 1 128 1 201 1 281 2 87 1 234 1 64 1 114 1 308 1 167 1 21 1 135 1 22 1 136 1 
67 3 352 1 0 1 290 4 265 1 70 1 340 1 269 3 7 1 221 2 95 1 125 1 98 1 158 4 11 15 160 4 81 3 32 3 33 6 128 4 38 1 325 1 281 32 327 4 87 3 350 3 64 4 205 1 113 1 90 1 208 1 167 3 183 1 366 3 23 17 136 4 211 1 
67 4 352 1 0 1 290 3 265 2 70 1 340 1 269 4 7 1 221 2 95 1 125 1 98 1 158 4 11 16 160 4 81 4 32 3 33 8 128 4 38 1 325 1 281 31 327 3 87 3 350 3 64 4 205 1 113 1 90 1 208 1 167 4 183 1 366 3 23 15 136 4 211 1 
67 2 352 1 0 1 290 3 145 1 265 1 70 1 268 1 340 1 269 2 7 1 221 1 125 1 98 1 252 1 158 3 11 13 160 4 81 2 32 2 33 4 228 1 128 3 38 1 281 29 327 4 87 1 350 2 64 4 205 1 113 1 18 1 90 1 209 1 167 2 366 2 23 16 136 3 211 3 
67 2 352 1 290 2 340 1 269 2 221 1 28 1 95 1 125 1 98 1 158 2 11 6 160 1 81 2 32 1 33 4 128 2 281 13 327 2 87 1 350 1 64 2 113 1 208 1 167 2 366 1 23 7 136 2 
67 3 352 1 0 1 290 1 265 2 70 1 340 2 269 3 7 1 221 2 98 1 11 10 158 2 160 2 81 3 32 2 33 6 128 2 38 1 327 1 281 18 87 1 350 2 64 2 205 1 113 1 90 1 167 3 366 2 23 8 136 2 211 1 
67 1 339 1 121 1 217 2 269 1 4 1 314 2 341 2 294 1 296 1 54 1 346 2 55 1 11 1 81 1 162 2 33 2 107 2 303 1 60 2 281 2 110 1 112 1 234 1 259 1 42 1 167 1 21 1 23 1 137 1 368 1 
298 1 55 1 80 1 143 1 107 2 243 1 46 1 121 1 60 2 353 1 61 1 232 1 282 2 341 2 181 1 256 1 307 1 238 1 344 1 
55 1 80 1 143 1 107 1 243 1 46 1 60 1 121 1 61 1 232 1 282 2 341 1 181 1 307 1 238 1 184 1 344 1 
55 1 80 1 212 1 339 1 253 1 107 1 121 1 60 1 341 1 256 1 65 1 42 1 78 1 126 1 
55 1 80 1 143 1 107 1 243 1 46 1 60 1 353 1 121 1 61 1 232 1 282 2 341 1 181 1 256 1 307 1 238 1 344 1 
10 1 
335 1 159 1 83 1 331 1 310 1 218 1 72 1 
335 1 218 1 292 1 247 1 173 1 318 1 102 1 159 1 83 2 164 1 359 1 85 1 204 1 63 1 283 1 210 1 26 1 
341 1 55 1 65 1 63 1 196 1 172 1 107 1 121 1 60 1 318 1 102 1 292 1 
335 2 0 1 290 2 70 1 218 8 292 2 293 5 190 1 173 6 99 1 317 1 318 2 77 2 102 2 158 1 159 5 164 1 32 1 83 5 278 1 359 3 128 2 38 1 85 1 327 2 204 1 63 2 64 2 205 1 365 5 90 1 239 1 210 1 366 1 136 2 
144 1 337 1 145 1 217 1 268 1 218 2 3 1 292 1 314 1 27 1 153 1 317 1 318 1 77 2 102 1 346 1 159 2 164 1 82 1 35 1 327 1 204 1 63 1 64 2 308 1 237 1 209 1 22 1 
335 1 159 1 83 1 218 1 292 1 72 1 63 1 310 1 318 1 102 1 
159 2 83 2 290 1 359 2 128 1 218 2 327 1 293 2 64 1 173 4 365 2 136 1 
204 1 335 1 83 1 164 1 210 1 85 1 
334 1 262 1 289 1 339 2 121 2 218 2 292 1 341 4 92 1 190 2 49 2 99 2 318 2 102 2 126 1 194 1 55 3 159 2 195 1 164 3 253 1 107 4 254 1 199 1 60 4 85 2 204 3 63 2 65 2 330 1 42 2 261 1 117 1 210 4 
67 1 339 1 217 3 121 1 269 1 4 1 314 2 341 1 342 1 153 1 273 1 175 1 346 3 55 1 81 1 33 2 107 1 60 1 35 2 200 1 281 1 203 1 65 1 234 1 308 2 42 1 261 1 167 1 23 1 22 2 368 1 138 1 
335 1 218 2 292 1 293 2 190 1 173 4 99 1 318 1 77 1 102 1 159 1 252 1 83 3 359 2 63 1 365 2 
41 1 58 1 315 1 
130 1 40 1 41 1 52 1 58 1 
41 1 58 1 315 1 
41 1 58 1 315 1 
157 1 41 1 58 1 
157 1 41 1 58 1 
157 1 41 1 58 1 
41 1 58 1 
354 1 134 1 
67 2 252 1 11 3 160 3 81 2 33 4 145 1 265 1 228 1 268 1 269 2 327 1 281 7 87 1 64 1 18 1 167 2 209 1 23 4 211 2 
252 1 11 2 160 2 145 1 228 1 268 1 281 5 327 1 64 1 331 1 18 1 209 1 23 3 211 2 
67 1 11 2 160 1 81 1 33 2 290 1 128 1 269 1 327 1 281 4 87 1 64 1 167 1 286 1 23 2 136 1 
158 2 11 3 160 1 32 1 290 1 128 1 327 1 281 7 87 1 64 1 125 1 366 1 23 4 136 1 
67 1 145 1 265 1 268 3 3 1 269 1 75 1 11 8 158 1 160 8 81 1 33 2 300 1 228 1 327 2 281 17 87 4 64 2 18 1 167 1 209 3 366 1 23 9 211 4 
158 1 281 1 23 1 
11 1 366 1 281 1 
11 3 160 2 290 1 128 1 281 6 327 1 87 1 257 1 64 1 23 3 136 1 211 1 
67 2 352 1 0 1 290 2 265 1 70 1 269 2 158 1 11 6 160 2 81 2 32 1 33 4 128 2 38 1 281 13 327 2 87 1 64 2 205 1 90 1 167 2 366 1 23 7 136 2 211 1 
11 3 160 2 145 1 268 1 281 6 327 1 87 1 64 1 209 1 23 3 211 1 
67 1 11 1 160 2 81 1 300 1 33 2 265 1 268 1 228 1 269 1 281 3 87 1 18 1 209 1 167 1 23 2 211 1 
67 1 352 1 145 1 70 1 268 1 269 1 252 1 158 1 11 3 160 2 81 1 32 1 33 2 228 1 327 1 281 7 64 1 18 1 167 1 209 1 366 1 23 4 211 2 
67 2 352 1 145 1 70 1 268 1 269 2 125 1 252 1 158 2 11 5 160 3 81 2 32 1 33 4 228 1 128 1 327 1 281 10 87 1 64 2 18 1 209 1 167 2 286 1 366 1 23 5 136 1 211 2 
67 3 352 1 0 1 290 2 145 1 265 1 70 1 268 1 269 3 252 1 158 1 11 8 160 4 81 3 32 1 33 6 228 1 128 2 38 1 281 18 327 3 87 1 64 3 205 1 18 1 90 1 209 1 167 3 286 1 366 1 23 10 136 2 211 3 
67 4 352 1 0 1 290 1 265 2 70 1 269 4 158 1 11 7 160 2 81 4 32 1 33 8 128 2 38 1 281 12 327 1 87 1 64 2 205 1 90 1 167 4 286 1 366 1 23 5 136 2 211 1 
67 1 352 1 145 1 70 1 268 1 269 1 252 1 158 1 11 3 160 2 81 1 32 1 33 2 228 1 327 1 281 7 64 1 18 1 167 1 209 1 366 1 23 4 211 2 
67 2 352 1 0 1 290 2 265 1 70 1 269 2 158 1 11 6 160 2 81 2 32 1 33 4 128 2 38 1 281 13 327 2 87 1 64 2 205 1 90 1 167 2 366 1 23 7 136 2 211 1 
67 4 352 1 0 1 290 1 145 1 265 2 70 1 268 1 269 4 252 1 158 1 11 9 160 5 81 4 32 1 33 8 228 1 128 2 38 1 281 17 327 2 87 2 64 3 205 1 18 1 90 1 209 1 167 4 286 1 366 1 23 8 136 2 211 3 
67 4 352 1 0 1 290 2 265 2 70 1 269 4 95 1 158 1 11 9 160 4 81 4 32 1 33 8 128 3 38 1 281 16 327 2 87 3 64 3 205 1 90 1 167 4 366 1 23 7 136 3 211 1 
11 3 160 6 145 1 228 1 268 3 327 1 281 7 87 3 64 1 18 2 209 3 23 4 211 3 
67 4 352 1 0 1 290 1 145 1 265 2 70 1 268 1 269 4 95 1 252 1 158 1 11 9 160 4 81 4 32 1 33 8 228 1 128 2 38 1 281 17 327 2 87 1 64 3 205 1 18 1 90 1 209 1 167 4 366 1 23 8 136 2 211 3 
11 6 160 6 145 1 268 2 3 1 281 12 327 2 87 3 64 2 209 2 23 6 211 3 
67 1 352 1 11 2 160 1 81 1 33 2 269 1 281 2 87 1 64 1 167 1 136 1 
67 1 352 1 11 2 81 1 33 2 290 1 128 1 269 1 327 1 281 4 64 1 167 1 23 2 136 1 
67 3 352 1 11 1 160 2 81 3 300 1 33 6 265 1 268 1 269 3 281 3 87 1 95 1 167 3 209 1 23 2 211 1 
67 5 352 1 290 3 145 2 265 2 268 3 269 5 149 1 95 1 125 1 224 1 252 1 158 4 11 15 160 9 81 5 32 1 300 1 33 10 228 1 128 3 281 33 327 5 87 5 64 5 18 1 309 1 209 3 167 5 286 1 366 3 23 18 136 3 211 4 
6 1 
189 1 79 1 214 1 348 1 91 1 6 1 
341 1 55 1 65 1 331 1 339 1 42 1 253 1 107 1 121 1 60 1 126 1 
346 2 55 1 339 1 107 1 200 1 35 1 217 2 60 1 121 1 326 1 314 1 203 1 341 1 65 1 42 1 273 1 261 1 22 1 
339 3 121 1 217 2 314 2 341 1 49 1 50 1 273 1 346 2 55 1 156 1 197 1 107 1 60 1 35 2 200 1 324 1 326 1 203 1 42 2 237 1 261 2 22 1 
312 1 339 3 121 1 217 2 314 2 341 2 49 1 50 1 273 1 346 2 55 1 156 1 197 1 107 2 60 2 35 2 200 1 324 1 326 1 236 1 42 2 237 1 261 2 22 1 
335 1 337 1 339 1 217 1 314 1 27 1 341 1 49 1 153 1 346 1 164 1 83 1 82 1 198 1 107 1 108 1 60 1 35 1 204 1 308 1 237 1 22 1 
335 1 337 1 339 1 217 1 314 1 27 1 341 1 49 1 153 1 346 1 164 1 83 1 82 1 107 1 108 1 60 1 35 1 229 1 204 1 308 1 237 1 22 1 
341 1 55 1 124 1 107 1 121 1 60 1 
334 1 298 1 336 1 55 3 143 1 162 1 323 1 339 3 291 1 107 7 60 6 121 2 341 7 74 1 124 1 65 2 42 2 261 1 168 1 137 1 194 1 
339 1 145 2 47 1 3 1 4 2 148 1 8 1 341 1 93 1 342 1 346 2 298 1 55 1 11 6 252 1 160 5 107 1 60 1 200 1 109 1 203 1 110 1 64 3 18 1 261 1 21 1 167 2 209 2 22 1 23 7 211 4 67 2 217 2 121 1 268 2 269 2 314 1 273 2 175 1 81 2 33 4 35 1 228 1 326 1 281 13 327 3 87 1 234 2 42 1 237 1 135 1 
335 1 337 1 145 1 217 1 218 4 268 1 3 1 314 1 292 1 27 1 72 1 341 1 249 1 153 1 317 1 318 1 77 2 102 1 193 1 346 1 159 4 82 1 83 1 164 1 107 1 35 1 60 1 327 2 204 1 64 2 65 1 63 1 330 1 308 1 310 1 237 1 209 1 22 1 
341 1 55 1 124 1 196 1 107 1 121 1 60 1 
346 2 55 1 312 1 339 1 107 1 200 1 35 1 217 2 60 1 121 1 326 1 314 1 341 1 65 1 42 1 273 1 261 1 22 1 
334 1 55 2 323 1 339 1 107 1 60 1 121 1 341 1 74 1 49 1 42 1 261 1 194 1 
298 1 341 4 55 1 65 1 363 1 236 1 339 1 42 1 253 1 107 4 121 1 60 4 126 1 
334 1 55 2 289 1 339 1 107 2 60 2 121 1 341 2 49 1 115 1 42 1 117 1 261 1 194 1 
282 1 341 1 55 1 65 1 46 1 107 1 121 1 60 1 61 1 344 1 
298 1 55 1 143 1 339 1 107 2 60 2 121 1 341 2 259 1 42 1 137 1 
298 1 336 1 55 2 253 1 339 3 107 5 291 1 60 4 121 2 341 5 65 1 363 1 49 1 42 2 126 1 137 1 
298 1 55 2 253 1 339 3 107 5 291 1 60 4 121 2 341 5 65 1 363 1 49 1 42 2 174 1 126 1 137 1 
346 1 54 1 275 1 112 1 69 1 321 1 303 1 217 1 314 1 
69 1 176 1 192 1 
275 1 69 1 321 1 9 1 273 1 
118 1 335 1 69 1 337 1 217 1 314 1 27 1 223 1 9 1 153 1 192 1 193 1 346 1 275 1 358 1 321 1 176 1 164 2 83 1 82 1 197 1 35 1 324 1 305 1 204 2 308 1 237 2 22 1 
331 1 100 1 244 1 219 1 
116 1 100 1 244 1 219 1 231 1 5 1 103 1 
127 1 141 1 103 1 
186 2 36 1 244 1 219 1 129 1 231 1 5 3 62 1 297 1 116 1 100 1 103 3 
16 1 258 1 116 1 100 1 244 1 219 1 231 1 5 2 103 2 
191 1 116 1 146 1 36 1 219 1 231 1 24 1 5 1 103 1 
116 1 100 1 36 1 219 1 231 1 5 1 103 1 
116 1 100 2 244 1 36 1 231 1 5 1 103 1 
1 1 36 1 219 1 231 2 188 1 5 2 116 2 100 1 320 1 103 2 
258 1 226 1 299 1 191 1 116 1 146 1 36 1 219 1 231 1 240 1 5 2 103 2 
244 1 36 1 61 1 219 1 231 1 5 2 255 1 282 2 258 1 307 1 116 1 238 1 100 1 344 1 103 2 
16 1 258 1 222 1 191 1 116 1 146 1 36 1 219 1 231 1 240 1 5 2 103 2 
116 1 100 1 244 1 36 1 219 1 231 1 5 1 103 1 
258 1 191 1 116 1 146 2 219 1 231 1 240 1 5 2 103 2 
163 1 302 1 36 1 244 1 219 1 231 1 5 2 258 1 295 1 116 1 100 1 103 2 
186 2 297 1 116 1 29 1 100 1 244 1 36 1 219 1 231 1 62 2 5 3 103 3 
356 2 284 1 272 1 219 2 
57 1 116 1 36 1 231 1 5 1 103 1 
258 1 226 1 116 1 100 1 244 1 36 1 219 1 231 1 5 2 103 2 
242 1 
116 1 100 1 244 1 36 1 219 1 231 1 5 1 103 1 
186 1 226 1 36 1 244 1 219 1 231 1 5 3 258 1 116 1 100 1 103 3 
258 1 191 1 219 1 5 1 240 1 103 1 
100 1 219 1 

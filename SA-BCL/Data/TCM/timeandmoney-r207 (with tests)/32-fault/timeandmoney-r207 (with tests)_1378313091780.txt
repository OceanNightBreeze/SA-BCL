#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 287 263 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 287 263 68 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 287 263 68 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 122 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 191 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 112 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (29,200) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (29,200) 219 192 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (29,200) 219 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 282 108 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 185 187 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 256 14 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 212 28 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 212 28 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 212 28 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 212 28 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 212 28 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 122 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 267 (62,224) 85 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 179 232 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (60,220) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 232 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 122 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (103,289) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (34,235) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 71 1 206 1 64 1 125 1 119 1 
109 1 71 1 206 1 64 1 125 1 119 1 
109 1 71 1 206 1 64 1 125 1 119 1 
109 1 71 1 206 1 64 1 125 1 119 1 
109 1 71 2 287 1 206 2 78 1 263 1 143 1 64 1 125 1 227 1 228 1 86 1 47 1 69 1 
109 1 71 2 287 1 206 2 258 1 78 1 210 1 10 1 174 1 38 1 143 1 64 1 12 1 125 1 66 1 104 1 
203 1 109 2 38 1 71 3 143 2 206 3 64 2 258 1 228 1 125 1 69 1 238 1 210 1 
109 2 203 1 71 7 287 1 206 7 189 1 138 1 78 1 263 1 210 1 238 2 175 1 143 3 64 2 86 1 227 1 125 1 228 3 47 1 68 1 69 5 
109 2 203 1 71 7 287 1 206 7 189 1 138 1 78 1 263 1 210 1 238 2 175 1 143 3 64 2 86 1 227 1 125 1 228 3 47 1 68 1 69 5 
122 1 
152 1 52 1 5 1 75 1 290 1 120 1 37 1 97 1 100 1 45 1 105 1 49 1 
130 1 152 1 52 1 5 2 75 1 77 1 275 1 120 1 37 1 97 1 100 2 45 1 49 1 
5 1 100 1 268 1 
5 1 100 1 268 1 
5 1 100 1 
5 1 100 1 268 1 
5 1 100 1 268 1 
279 1 5 2 40 1 100 2 268 1 278 1 165 1 
0 2 152 1 111 1 30 1 231 1 32 1 77 1 34 1 8 1 195 1 87 1 130 1 52 2 204 1 288 1 56 1 18 1 96 1 97 2 99 1 223 1 107 2 295 2 
122 1 115 1 
152 2 130 1 52 2 114 1 115 2 77 1 275 1 97 2 270 1 
96 1 131 1 136 1 
0 1 52 1 204 1 115 1 231 1 32 1 56 1 34 1 8 1 97 1 99 1 223 1 250 1 107 1 295 1 87 1 
130 4 152 5 52 5 114 1 111 1 115 1 77 4 18 2 19 1 275 1 97 5 246 1 225 1 105 1 
15 1 152 2 130 2 52 2 97 2 4 1 75 1 77 2 
152 3 130 3 52 3 97 3 115 1 77 3 18 1 275 1 
15 1 152 1 130 1 52 1 97 1 75 1 77 1 
152 1 130 1 52 1 114 1 97 1 75 1 77 1 270 1 275 1 
130 2 152 2 52 2 111 1 114 1 16 1 5 1 75 1 77 2 18 1 275 1 120 1 191 1 37 1 97 2 100 1 45 1 49 1 
152 2 130 1 52 2 97 2 115 1 77 1 18 1 19 1 105 1 
152 1 130 1 37 1 52 1 16 1 112 1 111 1 97 1 5 1 75 1 100 1 77 1 18 1 45 1 120 1 49 1 
130 2 152 2 52 2 114 1 131 1 77 2 18 1 275 1 96 1 97 2 
0 1 52 1 204 1 115 1 231 1 32 1 56 1 34 1 8 1 97 1 99 1 223 1 107 1 295 1 87 1 
0 1 52 1 115 1 72 1 231 1 32 1 56 1 8 1 97 1 99 1 223 1 103 1 107 1 295 1 87 1 
184 1 2 1 236 1 36 1 81 1 243 4 245 1 161 1 194 2 42 1 127 2 199 1 254 1 89 1 17 1 131 2 55 1 136 2 169 2 95 1 96 2 215 1 23 1 150 1 
152 1 130 1 37 1 52 1 97 1 4 1 75 1 77 1 
6 1 200 1 
6 1 200 1 
29 1 166 1 
29 1 166 1 
29 1 166 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
6 1 200 1 
213 1 192 1 219 1 5 1 100 1 6 1 200 1 
213 1 219 1 6 1 200 1 
287 1 86 1 78 1 
174 1 287 1 78 1 
174 1 53 1 233 1 74 1 86 2 78 3 
80 1 230 1 174 1 53 1 233 1 78 1 
174 1 53 2 233 1 86 1 78 2 
5 1 100 1 268 1 196 1 
5 2 100 2 268 2 102 1 33 1 46 1 
5 2 134 1 278 1 279 1 282 1 244 1 40 1 65 1 100 2 268 1 48 1 165 1 
108 1 5 1 134 1 278 1 279 1 282 1 244 1 40 1 65 1 100 1 48 1 165 1 
122 1 231 1 209 1 
123 1 231 1 
221 1 
8 1 99 1 231 1 
255 1 231 1 
99 1 231 1 
8 1 51 1 99 1 11 1 231 3 209 2 
286 2 89 3 90 1 153 1 167 1 262 1 169 3 277 1 36 1 9 1 266 1 81 2 39 1 243 7 24 1 194 4 150 1 
286 2 89 3 90 1 153 1 167 1 262 1 169 3 277 1 36 1 9 1 266 1 81 2 39 1 243 7 24 1 194 4 150 1 
286 2 89 3 90 1 153 1 167 1 262 1 169 3 277 1 36 1 9 1 266 1 81 2 39 1 243 7 24 1 194 4 181 1 150 1 
27 1 183 1 153 1 236 1 276 1 237 4 277 2 36 5 9 2 81 6 39 7 243 34 245 1 161 3 194 17 42 3 127 2 13 1 198 1 199 1 286 1 89 13 90 3 17 1 167 3 262 1 20 3 169 17 173 1 266 1 222 1 24 1 179 1 294 3 150 5 
286 2 89 4 90 1 153 1 17 2 54 1 167 1 236 2 169 4 277 1 36 1 9 1 266 1 81 3 82 1 39 1 243 9 24 1 245 2 194 5 127 4 198 1 199 2 150 1 
0 1 1 1 109 1 71 2 74 1 186 1 274 1 78 2 158 1 38 1 280 1 242 1 86 1 125 1 251 1 87 1 287 1 206 2 258 1 210 1 174 1 143 1 64 1 223 1 146 1 180 1 106 1 69 1 107 1 295 1 
0 1 1 1 109 1 71 3 74 1 274 1 78 2 158 1 38 1 280 1 242 1 86 1 251 1 87 1 287 1 206 3 258 1 210 1 265 1 58 1 174 1 216 1 143 1 64 1 223 1 180 1 106 1 107 1 69 2 295 1 
0 1 71 2 287 1 74 1 206 2 258 1 274 1 78 2 210 1 265 1 174 1 158 1 38 1 216 1 143 1 242 1 223 1 86 1 180 1 251 1 106 1 69 2 107 1 87 1 295 1 
0 1 109 1 110 1 3 1 71 1 231 2 116 1 8 1 158 2 87 2 206 1 56 1 93 1 57 1 137 1 261 1 210 2 140 1 58 1 291 1 21 1 99 2 144 1 223 1 64 1 269 1 180 2 106 2 107 1 295 1 
0 1 1 1 109 1 71 1 74 1 274 1 78 2 158 1 280 1 242 1 86 1 125 1 251 1 87 1 287 1 206 1 210 1 265 1 174 1 64 1 223 1 146 1 180 1 106 1 107 1 295 1 
281 1 
0 1 5 1 185 1 56 1 187 1 79 1 278 1 279 1 244 1 40 1 65 1 100 1 107 1 295 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 120 1 290 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
5 1 100 1 
14 1 152 1 52 1 256 1 5 2 91 1 75 1 120 1 290 1 79 1 278 1 279 1 37 1 97 1 40 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 256 1 52 1 5 2 91 1 75 1 290 1 120 1 37 1 97 1 100 2 163 1 45 1 105 1 49 1 
14 1 152 1 52 1 256 1 5 2 91 1 75 1 120 1 290 1 79 1 278 1 279 1 37 1 97 1 40 1 100 2 163 1 45 1 105 1 49 1 
184 1 153 1 115 2 236 1 36 1 81 2 122 1 243 6 245 1 194 3 127 2 199 1 254 1 286 1 89 2 17 1 90 1 131 1 167 1 136 1 169 3 96 1 215 1 266 1 24 1 150 1 
70 1 184 2 115 1 31 1 236 2 237 3 276 1 36 1 81 1 39 1 243 14 245 2 161 2 41 1 194 8 42 1 127 4 252 1 199 2 89 2 17 2 131 4 207 1 136 11 169 6 170 1 20 3 96 11 215 1 217 1 179 1 294 2 150 2 
0 1 184 1 152 1 111 1 271 1 115 1 231 1 31 1 32 1 272 1 77 1 236 1 34 1 8 1 243 2 245 1 41 1 194 1 127 2 250 1 199 1 87 1 130 1 52 2 204 1 17 1 131 1 56 1 92 1 18 1 170 1 169 1 215 1 99 1 97 2 223 1 107 1 295 1 
0 1 184 1 130 1 152 1 52 1 111 1 17 1 56 1 77 1 18 1 236 1 169 1 170 1 215 1 97 1 243 1 245 1 41 1 127 2 197 1 107 1 199 1 295 1 
0 2 184 1 3 1 231 2 31 1 116 1 236 1 35 1 8 1 243 2 245 1 194 1 41 1 127 2 195 1 199 1 87 2 17 1 135 1 56 1 137 1 261 1 169 1 140 1 215 1 99 2 144 1 223 1 107 2 295 2 
152 1 130 1 52 1 114 1 97 1 77 1 275 1 201 1 
184 1 254 1 89 1 17 1 131 1 136 1 236 1 95 1 96 1 215 1 39 1 243 2 245 1 161 1 194 2 127 2 199 1 150 1 
184 1 254 1 89 1 17 1 131 1 136 1 236 1 169 2 96 1 36 1 81 1 215 1 243 2 23 1 245 1 42 1 127 2 199 1 
184 1 236 1 36 1 81 1 39 1 243 4 161 1 245 1 194 2 42 1 127 2 199 1 254 1 89 2 17 1 131 2 136 2 169 2 96 2 215 1 294 1 150 1 
184 1 89 1 17 1 131 1 135 1 136 1 236 1 95 1 96 1 215 1 39 1 243 2 245 1 161 1 194 2 127 2 199 1 150 1 
184 1 89 1 17 1 131 1 135 1 136 1 236 1 169 2 96 1 36 1 81 1 215 1 243 2 23 1 245 1 42 1 127 2 199 1 
184 1 236 1 36 1 81 1 39 1 243 4 161 1 245 1 194 2 42 1 127 2 199 1 89 2 17 1 131 2 135 1 136 2 169 2 96 2 215 1 294 1 150 1 
184 1 236 1 36 1 81 1 39 1 243 4 161 1 245 1 194 2 42 1 127 2 199 1 89 2 17 1 131 2 136 2 169 2 96 2 215 1 294 1 150 1 
0 1 184 1 115 1 231 1 31 1 32 1 236 1 34 1 8 1 243 2 245 1 194 1 41 1 127 2 199 1 87 1 52 1 204 1 17 1 56 1 211 1 169 1 215 1 99 1 97 1 223 1 107 1 295 1 
0 1 184 1 115 1 72 1 231 1 31 1 32 1 236 1 8 1 243 2 245 1 194 1 41 1 127 2 199 1 87 1 52 1 17 1 56 1 169 1 214 1 215 1 99 1 97 1 223 1 103 1 107 1 295 1 
184 1 236 1 36 1 81 1 39 1 243 4 161 1 245 1 194 2 42 1 127 2 199 1 89 2 17 1 131 2 136 2 170 1 169 2 96 2 215 1 294 1 150 1 
0 1 184 1 231 1 32 1 186 1 236 1 34 1 36 1 8 1 81 1 39 1 243 4 161 1 245 1 194 2 42 1 249 1 127 2 199 1 87 1 89 2 52 1 204 1 17 1 131 2 136 2 169 2 211 1 96 2 215 1 99 1 97 1 223 1 294 1 107 1 150 1 295 1 
184 1 152 1 114 1 77 1 236 1 275 1 36 1 39 1 243 3 245 1 161 1 194 2 42 1 127 2 199 1 130 1 89 1 52 1 17 1 131 1 257 1 136 1 169 1 170 1 96 1 215 1 97 1 294 1 150 1 
28 1 17 1 54 1 176 1 245 1 127 2 236 1 149 1 199 1 212 1 
28 1 17 1 54 1 176 1 245 1 127 2 236 1 149 1 199 1 212 1 
28 1 17 1 54 1 176 1 245 1 127 2 236 1 149 1 199 1 212 1 
28 1 17 1 54 1 176 1 245 1 127 2 236 1 149 1 199 1 212 1 
28 1 17 1 54 1 176 1 245 1 127 2 236 1 149 1 199 1 212 1 
0 2 184 1 152 2 231 1 31 1 236 1 7 1 239 1 35 1 243 2 245 1 194 1 41 1 127 2 195 2 199 1 87 1 52 2 17 1 94 1 170 1 169 1 139 1 215 1 99 1 97 2 223 1 25 1 107 2 229 1 295 2 
0 2 287 1 74 1 186 1 274 1 78 2 265 1 174 1 158 1 142 1 59 1 98 1 280 1 242 1 223 1 86 1 107 2 87 1 295 2 
0 1 287 1 74 1 274 1 78 2 265 1 174 1 158 1 142 1 280 1 242 1 193 1 223 1 86 1 107 1 295 1 87 1 
0 1 3 1 231 2 116 1 158 1 8 1 87 2 88 1 56 1 137 1 261 1 140 1 21 1 98 1 99 2 144 1 223 1 269 1 107 1 295 1 
0 1 287 1 74 1 274 1 78 2 265 1 174 1 158 1 142 1 59 1 98 1 280 1 242 1 223 1 86 1 107 1 87 1 295 1 
50 1 
60 1 122 1 220 1 168 1 
279 1 177 1 244 1 40 1 168 1 278 1 79 1 
0 1 51 1 231 2 56 1 79 1 278 1 172 1 279 1 8 1 267 1 99 1 123 1 62 1 244 1 223 1 40 1 65 1 85 1 107 1 87 2 295 1 
279 1 232 1 244 1 40 1 179 1 168 1 20 1 237 1 278 1 79 1 
27 1 90 1 5 1 133 2 167 1 168 2 79 1 278 1 36 1 279 1 266 1 244 1 40 1 100 1 126 1 253 1 150 2 
279 1 220 1 40 1 168 1 278 1 79 1 
36 1 244 1 161 1 42 1 294 1 168 1 150 1 
0 1 56 1 107 1 295 1 
279 1 205 1 244 1 40 1 65 1 168 1 278 1 79 1 
61 1 128 1 182 1 
61 1 63 1 67 1 128 1 171 1 
61 1 128 1 182 1 
61 1 128 1 182 1 
61 1 155 1 128 1 
61 1 155 1 128 1 
61 1 155 1 128 1 
61 1 128 1 
6 1 200 1 
286 1 89 3 17 2 153 1 90 1 167 1 236 2 169 4 36 1 266 1 81 2 39 1 243 8 24 1 245 2 194 4 127 4 198 1 199 2 150 1 
36 1 286 1 266 1 89 2 81 2 90 1 153 1 122 1 243 6 24 1 194 3 167 1 169 3 150 1 
89 2 17 1 117 1 236 1 169 2 36 1 81 1 39 1 243 4 245 1 161 1 194 2 42 1 127 2 294 1 199 1 150 1 
89 2 237 2 169 4 20 1 276 1 36 1 81 1 39 1 243 7 161 1 194 3 42 1 179 1 294 1 150 1 
70 1 153 1 236 2 276 1 237 2 36 3 81 5 39 4 243 23 161 2 245 2 194 11 42 2 43 1 127 4 198 2 199 2 286 1 89 9 90 2 17 2 167 2 20 2 169 12 266 1 217 1 24 1 294 2 150 3 
243 1 169 1 237 1 
243 1 194 1 20 1 
89 3 17 1 117 1 236 1 169 3 36 1 81 2 39 1 243 6 292 1 245 1 161 1 194 3 42 1 127 2 294 1 199 1 150 1 
89 2 17 1 54 1 232 1 188 1 236 1 156 1 237 1 169 6 20 1 264 1 36 2 81 1 39 1 243 12 161 2 162 1 245 1 194 6 42 2 127 2 179 1 294 2 199 1 150 2 
89 2 90 1 167 1 169 3 36 1 266 1 81 1 39 1 243 6 194 3 150 1 
89 2 90 1 153 1 17 1 167 1 236 1 169 2 81 1 39 1 243 3 24 1 245 1 194 1 43 1 127 2 198 1 199 1 
27 1 89 5 17 1 90 2 54 1 167 2 236 1 169 5 36 2 81 3 266 1 39 2 243 10 245 1 194 5 127 2 199 1 150 2 
89 1 17 1 54 1 236 1 39 1 243 2 245 1 161 1 194 2 127 2 199 1 150 1 
89 2 17 1 54 1 236 1 169 2 36 1 81 1 39 1 243 4 245 1 161 1 194 2 42 1 127 2 294 1 199 1 150 1 
89 2 17 3 90 1 54 1 167 1 236 3 169 2 81 1 39 1 83 1 243 3 245 3 194 1 43 1 127 6 198 1 199 3 
153 1 117 1 236 5 237 4 276 1 36 5 81 7 39 5 83 1 243 34 245 5 161 3 194 16 43 1 42 3 127 10 13 1 198 2 199 5 286 1 89 12 90 3 17 5 54 1 167 3 169 18 20 3 173 1 266 2 222 1 24 1 179 1 294 3 150 5 
17 1 54 1 243 2 232 1 245 1 194 1 179 1 127 2 236 1 20 1 169 1 237 1 199 1 
89 1 17 2 54 1 232 1 117 1 236 2 276 1 20 1 237 2 169 2 39 1 243 5 161 1 245 2 194 3 127 4 179 1 294 1 199 2 150 1 
89 1 17 2 54 1 232 1 236 2 237 1 169 5 20 1 264 1 36 1 81 1 243 8 161 1 162 1 245 2 194 3 42 1 127 4 179 1 294 1 198 1 199 2 150 1 
89 2 17 2 54 1 232 1 188 1 236 2 156 1 237 1 169 4 20 1 264 1 36 1 81 1 39 1 243 11 161 2 162 1 245 2 194 7 42 1 127 4 179 1 294 2 198 1 199 2 150 2 
17 1 54 1 243 2 232 1 245 1 194 1 179 1 127 2 236 1 20 1 169 1 237 1 199 1 
89 2 17 1 54 1 232 1 188 1 236 1 156 1 237 1 169 6 20 1 264 1 36 2 81 1 39 1 243 12 161 2 162 1 245 1 194 6 42 2 127 2 179 1 294 2 199 1 150 2 
89 1 17 3 54 1 232 1 117 1 236 3 20 1 237 1 169 5 264 1 36 1 81 1 243 8 161 1 162 1 245 3 194 3 42 1 127 6 179 1 294 1 198 1 199 3 150 1 
89 2 17 3 54 1 232 1 236 3 20 1 237 1 169 5 264 1 36 1 81 2 83 1 243 8 161 1 162 1 245 3 194 3 42 1 127 6 179 1 294 1 198 1 199 3 150 1 
89 6 153 2 90 3 167 3 169 4 36 1 81 3 266 1 39 3 243 7 24 1 194 3 150 1 
89 1 17 3 54 1 232 1 236 3 20 1 237 1 169 5 264 1 36 1 81 1 83 1 243 8 161 1 162 1 245 3 194 3 42 1 127 6 179 1 294 1 198 1 199 3 150 1 
152 1 52 1 115 1 75 1 19 1 97 1 44 1 105 1 151 1 
152 1 52 1 113 1 115 1 75 1 19 1 157 1 97 1 293 1 148 1 44 1 26 1 105 1 151 1 
0 1 99 1 122 1 231 1 116 1 56 1 137 1 107 1 295 1 
0 1 130 1 152 1 52 2 115 1 231 1 32 1 77 1 56 1 18 1 34 1 8 1 99 1 97 2 223 1 107 1 87 1 295 1 
0 1 255 1 130 2 152 2 52 2 115 1 231 3 75 1 32 1 77 1 18 1 34 1 121 1 8 2 37 1 99 2 97 2 84 1 223 1 107 1 49 1 87 1 295 1 
0 2 255 1 130 2 152 2 52 2 115 1 231 3 75 1 32 1 77 1 18 1 190 1 121 1 8 2 37 1 99 2 97 2 84 1 223 1 103 1 107 2 49 1 87 1 295 2 
0 1 121 1 123 1 5 1 231 1 100 1 289 1 107 1 295 1 
0 1 121 1 123 1 5 1 231 1 235 1 100 1 107 1 295 1 
0 1 240 1 223 1 107 1 87 1 295 1 
0 6 51 1 3 1 154 1 231 3 76 1 186 1 56 2 265 1 140 1 8 1 159 1 99 2 223 2 164 1 195 1 107 6 229 1 295 5 87 3 
184 2 0 1 152 1 153 1 115 2 231 1 32 1 186 1 77 1 236 2 239 1 34 1 36 1 8 1 81 2 243 6 245 2 194 3 127 4 249 1 199 2 87 1 286 1 130 1 89 2 52 2 90 1 17 2 204 1 131 1 167 1 18 1 136 1 169 3 170 1 211 1 96 1 266 1 215 2 99 1 97 2 24 1 223 1 224 1 107 1 150 1 295 1 
5 1 100 1 268 1 
0 2 51 1 231 2 186 1 209 1 172 1 240 1 8 1 99 1 223 1 107 2 295 2 87 2 
0 2 3 1 231 2 116 1 186 1 56 1 137 1 261 1 140 1 8 1 99 2 144 1 223 1 107 2 87 2 295 2 
0 2 3 1 231 1 261 1 121 1 140 1 8 1 99 1 144 1 223 1 247 1 107 2 295 2 87 2 
0 1 174 1 287 1 242 1 223 1 56 1 78 1 107 1 87 1 295 1 
0 2 231 1 186 1 265 1 99 1 223 1 25 1 107 2 295 2 229 1 87 1 
0 3 3 1 154 1 231 4 116 1 186 1 8 1 164 1 87 3 56 1 137 1 261 1 140 1 99 3 144 1 223 2 107 3 229 1 295 2 
0 3 3 1 154 1 231 4 116 1 186 1 8 1 87 3 202 1 56 1 137 1 261 1 140 1 99 3 144 1 223 2 107 3 229 1 295 2 
0 1 130 1 152 1 52 2 115 1 231 1 32 1 77 1 56 1 18 1 8 1 99 1 97 2 223 1 103 1 107 1 87 1 295 1 
0 1 51 1 3 1 231 1 140 1 121 1 8 1 159 1 99 1 223 1 107 1 295 1 87 2 
241 1 115 1 273 1 248 1 284 1 
16 1 115 1 5 2 73 1 75 1 273 1 120 1 37 1 241 2 268 1 100 2 248 2 226 1 147 1 45 1 284 2 49 1 
152 1 52 1 273 1 94 1 7 1 139 1 97 1 248 1 284 1 
73 1 273 1 147 1 
38 1 143 1 122 1 258 1 
109 1 38 1 71 1 143 1 206 1 64 1 258 1 
206 1 106 1 210 1 
109 1 71 3 206 3 258 1 259 1 10 2 38 1 143 1 64 1 101 1 145 1 125 1 
109 1 38 1 71 2 143 1 206 2 64 1 258 1 227 1 69 1 
109 1 71 1 287 1 143 1 206 1 64 1 86 1 228 1 125 1 78 1 47 1 
109 1 38 1 71 1 143 1 206 1 64 1 125 1 
109 1 38 2 71 1 206 1 64 1 258 1 125 1 
109 2 71 2 132 1 206 2 208 1 38 1 143 1 124 1 64 2 125 1 
109 1 38 1 71 3 143 2 206 3 64 1 258 1 228 1 189 1 125 1 138 1 238 1 69 2 
109 1 71 2 287 1 206 2 74 1 258 1 78 2 174 1 38 1 143 1 22 1 64 1 125 1 86 1 69 1 
109 2 38 1 71 4 143 2 206 4 64 2 258 1 228 1 227 1 118 1 125 1 238 1 69 2 
109 1 38 1 71 1 143 1 206 1 64 1 258 1 125 1 
109 1 71 4 234 1 206 4 258 2 259 1 238 1 10 1 38 2 143 3 64 1 145 1 228 1 69 2 
175 1 109 1 38 1 71 2 143 1 206 2 64 1 258 1 283 1 178 1 125 1 69 1 
10 2 109 1 38 1 71 3 143 1 206 3 64 1 258 1 259 2 145 1 125 1 285 1 
141 1 218 1 143 2 129 2 
109 1 71 1 206 1 64 1 260 1 125 1 
109 1 38 1 71 2 143 1 206 2 64 1 258 1 189 1 125 1 69 1 
160 1 
109 1 38 1 71 1 143 1 206 1 64 1 258 1 125 1 
10 1 109 1 38 1 71 3 143 1 206 3 64 1 258 1 189 1 125 1 69 1 
143 1 234 1 228 1 238 1 
38 1 143 1 

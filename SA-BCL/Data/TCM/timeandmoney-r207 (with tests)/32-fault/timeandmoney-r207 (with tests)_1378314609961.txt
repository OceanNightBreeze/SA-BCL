#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (126,170,253,267) (126,170,253,267) (191,234,243,278) 296 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (126,170,253,267) (126,170,253,267) (191,234,243,278) 296 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 93 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 93 84 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 38 199 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 72 68 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 329 298 101 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 329 298 101 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 329 298 12 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 72 68 136 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 72 68 136 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 54 264 3 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 1 224 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 54 143 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 45 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 99 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 248 196 187 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (166,203) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 71 76 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (153,217) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (73,103) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 54 143 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 54 264 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 54 67 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (126,170,253,267) (126,170,253,267) (191,234,243,278) (191,234,243,278) (191,234,243,278) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 1 82 5 126 6 127 2 220 1 35 1 129 2 130 1 267 9 6 1 135 1 190 1 144 2 44 1 46 1 310 4 278 1 280 2 156 1 322 1 208 1 164 2 116 1 291 1 170 2 250 3 253 2 332 9 
80 1 82 5 126 6 127 2 220 1 35 1 129 2 130 1 267 9 6 1 135 1 190 1 144 2 44 1 46 1 310 4 278 1 280 2 156 1 322 1 208 1 164 2 116 1 291 1 170 2 250 3 253 2 332 9 
80 1 82 6 126 7 127 2 220 1 35 1 129 2 130 1 267 10 6 1 135 1 190 1 144 2 44 1 46 1 310 5 278 1 280 2 156 1 322 1 208 1 164 2 116 1 291 1 170 2 250 4 253 2 332 10 
80 1 82 4 126 4 127 2 220 1 35 1 129 2 130 1 267 7 6 1 135 1 190 1 144 1 46 1 310 3 278 1 280 2 156 1 322 1 208 1 164 2 116 1 291 1 170 2 250 2 253 2 332 7 
278 1 126 3 82 3 127 1 129 1 35 1 267 4 208 1 164 1 116 1 291 1 170 1 144 2 44 1 310 2 250 1 253 1 332 4 
82 1 280 1 220 1 262 1 35 1 129 1 267 2 208 1 164 1 116 1 292 1 170 1 46 1 253 1 332 2 258 1 
280 1 82 2 126 1 35 1 267 3 208 1 6 1 116 1 170 2 310 1 250 1 253 2 332 3 
126 1 170 1 191 1 35 1 296 1 253 1 332 1 267 2 
126 1 170 1 191 1 35 1 296 1 253 1 332 1 267 2 
45 1 
279 1 150 1 236 1 232 1 304 1 240 1 37 1 233 1 205 1 251 1 19 1 106 1 
150 1 279 1 218 1 236 1 304 1 159 1 37 1 240 1 205 2 209 1 232 1 251 1 106 2 
205 1 39 1 106 1 
205 1 39 1 106 1 
205 1 106 1 
205 1 39 1 106 1 
205 1 39 1 106 1 
50 1 55 1 205 2 215 1 90 1 39 1 106 2 
122 1 45 1 
150 2 218 1 157 1 304 2 37 2 159 1 20 1 209 1 122 2 
324 1 239 1 
178 2 183 1 304 1 185 1 37 1 321 1 61 1 114 1 269 1 9 1 74 1 100 1 73 1 122 1 173 1 145 1 47 2 104 2 257 1 
150 1 218 1 178 1 183 1 225 1 239 1 185 1 304 2 37 2 321 1 61 1 114 1 134 1 209 1 9 1 74 1 100 1 73 1 47 1 104 1 
150 5 218 4 222 1 225 2 304 5 37 5 159 1 20 1 163 1 209 4 134 1 122 1 233 1 249 1 
150 2 209 2 218 2 282 1 58 1 304 2 240 1 37 2 
150 3 209 3 218 3 225 1 122 1 304 3 159 1 37 3 
150 1 209 1 218 1 58 1 304 1 240 1 37 1 
150 1 209 1 218 1 157 1 304 1 240 1 37 1 159 1 20 1 
279 1 150 2 218 2 236 1 225 1 238 1 304 2 240 1 37 2 159 1 205 1 20 1 134 1 209 2 232 1 251 1 299 1 106 1 
150 2 209 1 218 1 222 1 225 1 122 1 304 2 233 1 37 2 
150 1 279 1 218 1 236 1 225 1 304 1 240 1 37 1 205 1 64 1 134 1 209 1 232 1 251 1 299 1 106 1 
150 2 218 2 225 1 304 2 239 1 159 1 37 2 20 1 209 2 194 1 
178 1 183 1 304 1 185 1 37 1 321 1 61 1 114 1 9 1 73 1 100 1 74 1 122 1 47 1 104 1 
217 1 178 1 304 1 185 1 37 1 321 1 61 1 114 1 309 1 9 1 100 1 74 1 122 1 47 1 104 1 
302 1 36 1 305 1 133 1 189 2 194 2 11 1 195 1 311 4 14 1 239 2 286 1 206 2 242 1 324 2 70 1 27 1 326 1 295 1 255 2 124 1 125 1 
279 1 150 1 209 1 218 1 282 1 304 1 240 1 37 1 
121 1 287 1 
121 1 287 1 
219 1 213 1 
219 1 213 1 
219 1 213 1 
141 1 121 1 287 1 
141 1 121 1 287 1 
118 1 121 1 287 1 
315 1 219 1 181 1 121 2 213 1 287 2 
141 1 121 1 287 1 
121 1 287 1 256 1 
121 1 287 1 256 1 
121 1 287 1 256 1 
150 1 209 1 216 1 218 1 304 1 37 1 
48 1 216 1 151 1 283 1 57 1 59 1 226 1 287 1 205 1 69 1 121 1 79 1 106 1 
127 1 129 1 164 1 
262 1 129 1 164 1 
289 1 127 2 168 1 262 1 307 1 164 3 
260 1 127 1 168 1 262 1 307 1 164 2 
127 1 168 1 262 1 307 2 164 2 
42 1 205 1 39 1 106 1 
2 1 205 1 39 1 106 1 
50 1 55 1 205 2 93 1 90 1 162 1 39 1 227 1 25 1 276 1 215 1 106 2 
50 1 55 1 84 1 205 1 93 1 162 1 90 1 227 1 25 1 276 1 215 1 106 1 
74 1 45 1 207 1 
74 1 158 1 
77 1 
74 1 185 1 61 1 
284 1 74 1 
74 1 61 1 
303 1 185 1 61 1 207 2 244 1 74 3 77 1 
15 1 0 1 16 2 281 1 34 2 53 4 302 1 36 1 5 1 206 3 91 1 189 3 138 1 247 1 311 6 78 2 300 2 
15 1 0 1 16 2 281 1 34 2 53 4 302 1 36 1 5 1 206 3 91 1 189 3 138 1 247 1 311 6 78 2 300 2 
15 1 0 1 16 2 281 1 34 2 53 4 302 1 36 1 5 1 206 3 91 1 189 3 138 1 247 1 311 6 275 1 78 2 300 2 
31 1 0 1 83 1 34 1 302 1 305 1 5 1 138 1 189 4 270 1 10 1 311 9 196 1 14 1 15 2 16 1 53 2 60 1 206 5 242 1 119 1 326 1 28 1 248 2 255 2 78 1 124 1 300 1 
15 1 0 1 281 1 16 1 223 1 34 3 53 4 302 1 36 1 5 1 206 4 91 1 189 4 270 1 271 1 242 2 326 2 247 1 311 8 255 4 78 2 300 2 14 2 124 2 
82 1 126 1 127 1 178 1 262 1 129 1 35 1 266 1 267 2 137 1 229 1 9 1 100 1 47 1 104 1 280 1 109 1 316 1 161 1 208 1 164 2 289 1 116 1 170 1 171 1 26 1 253 1 254 1 214 1 332 2 
82 1 126 2 127 1 178 1 262 1 182 1 129 1 266 1 267 3 137 1 9 1 100 1 47 1 104 1 280 1 109 1 108 1 316 1 161 1 208 1 164 2 289 1 116 1 170 1 171 1 26 1 253 1 214 1 332 3 330 1 
82 1 126 2 127 1 178 1 262 1 182 1 129 1 266 1 267 2 9 1 100 1 47 1 104 1 280 1 109 1 108 1 316 1 161 1 208 1 164 2 289 1 116 1 171 1 26 1 332 2 
32 1 178 1 301 1 265 1 266 2 132 1 267 1 9 1 100 1 47 1 104 1 280 2 109 2 321 1 61 1 241 1 212 1 170 1 26 2 74 1 253 1 332 1 330 1 
127 1 178 1 262 1 129 1 35 1 266 1 267 1 137 1 9 1 100 1 47 1 104 1 280 1 109 1 108 1 316 1 161 1 164 2 289 1 170 1 171 1 26 1 253 1 254 1 214 1 332 1 
43 1 
199 1 50 1 178 1 52 1 55 1 321 1 38 1 205 1 227 1 47 1 104 1 276 1 215 1 106 1 
279 1 150 1 236 1 304 1 240 1 37 1 205 2 19 1 167 1 24 1 72 1 120 1 232 1 233 1 251 1 314 1 252 1 106 2 
279 1 150 1 236 1 304 1 240 1 37 1 205 2 19 1 268 1 167 1 24 1 120 1 232 1 233 1 251 1 314 1 252 1 106 2 
279 1 150 1 236 1 304 1 240 1 37 1 205 2 19 1 68 1 167 1 24 1 72 1 120 1 232 1 233 1 251 1 314 1 252 1 106 2 
205 1 106 1 
304 1 37 1 227 1 232 1 233 1 314 1 106 2 150 1 279 1 236 1 50 1 52 1 317 1 55 1 204 1 240 1 19 1 205 2 62 1 165 1 167 1 24 1 211 1 120 1 329 1 251 1 252 1 215 1 
304 1 37 1 227 1 139 1 232 1 101 1 233 1 314 1 106 2 150 1 279 1 236 1 50 1 52 1 317 1 55 1 204 1 240 1 62 1 19 1 205 2 165 1 167 1 24 1 211 1 120 1 329 1 251 1 252 1 298 1 215 1 
304 1 37 1 227 1 139 1 232 1 101 1 233 1 314 1 106 2 150 1 279 1 236 1 50 1 52 1 317 1 55 1 204 1 240 1 62 1 19 1 205 2 165 1 167 1 24 1 211 1 120 1 329 1 251 1 252 1 298 1 215 1 
85 1 304 1 37 1 186 1 227 1 232 1 233 1 12 1 314 1 106 2 150 1 279 1 236 1 50 1 52 1 317 1 55 1 204 1 160 1 240 1 19 1 205 2 167 1 24 1 211 1 120 1 329 1 251 1 252 1 298 1 215 1 
279 1 150 1 236 1 304 1 240 1 37 1 205 2 19 1 136 1 68 1 167 1 24 1 72 1 120 1 232 1 233 1 251 1 314 1 252 1 106 2 
279 1 150 1 236 1 304 1 240 1 37 1 205 2 19 1 136 1 68 1 167 1 24 1 72 1 120 1 232 1 233 1 251 1 314 1 252 1 106 2 
85 1 304 1 37 1 227 1 232 1 233 1 314 1 106 2 150 1 279 1 236 1 50 1 52 1 317 1 55 1 204 1 240 1 160 1 19 1 205 2 167 1 24 1 211 1 120 1 329 1 251 1 252 1 215 1 
281 1 34 2 53 2 302 1 36 1 286 1 206 2 91 1 189 3 242 1 326 1 122 2 247 1 311 5 195 1 45 1 255 2 78 2 300 2 125 1 14 1 124 1 
31 3 302 2 36 1 305 2 306 1 133 1 189 6 40 1 194 3 195 2 311 14 196 1 313 1 148 1 14 2 49 1 16 1 53 1 319 1 239 8 286 1 60 2 288 1 206 8 242 2 324 8 119 1 326 2 122 1 248 3 255 4 124 2 
218 1 178 1 183 1 225 1 185 1 304 2 37 2 306 1 134 1 189 1 269 1 9 1 95 1 194 1 100 1 47 1 195 1 311 2 104 1 14 1 150 1 49 1 319 1 321 1 286 1 61 1 113 1 206 1 114 1 209 1 242 1 74 1 73 1 326 1 246 1 122 1 255 2 124 1 
178 1 183 2 185 2 91 1 94 1 189 10 97 1 9 2 194 6 100 2 195 3 104 1 14 3 281 1 201 1 286 3 206 9 209 1 114 2 210 2 293 2 122 1 29 2 300 2 124 3 218 1 34 2 302 3 225 1 304 3 36 3 37 3 305 2 306 1 133 2 134 1 47 1 311 19 150 1 49 1 152 1 53 2 56 2 319 1 239 6 240 1 321 1 60 2 61 2 242 3 324 6 73 2 74 2 326 3 327 2 247 1 255 6 78 2 
259 1 218 1 32 1 178 4 3 1 264 1 225 1 185 1 304 1 37 1 132 1 306 1 229 1 189 1 9 2 193 1 100 3 47 4 195 2 311 2 104 4 14 2 150 1 197 1 110 1 54 1 319 1 321 2 286 2 61 3 65 1 206 1 209 1 242 2 74 3 326 2 75 1 255 4 125 1 124 2 257 1 
218 1 302 1 304 1 36 1 37 1 305 1 133 1 189 2 194 1 195 1 272 1 311 3 14 1 150 1 49 1 239 1 159 1 286 1 60 1 20 1 206 1 209 1 242 1 324 1 326 1 255 2 124 1 
16 1 53 1 302 1 239 1 286 1 305 1 206 2 242 1 324 1 194 1 326 1 295 1 311 2 195 1 255 2 125 1 14 1 124 1 
239 1 36 1 286 1 133 1 189 2 242 1 324 1 194 1 11 1 326 1 311 2 195 1 255 2 125 1 14 1 124 1 
302 1 36 1 305 1 133 1 189 2 194 2 195 1 311 4 14 1 16 1 53 1 239 2 60 1 286 1 206 2 242 1 324 2 326 1 255 2 124 1 125 1 
197 1 16 1 53 1 302 1 239 1 286 1 305 1 206 2 242 1 324 1 194 1 326 1 295 1 311 2 195 1 255 2 14 1 124 1 
197 1 239 1 36 1 286 1 133 1 189 2 242 1 324 1 194 1 11 1 326 1 311 2 195 1 255 2 14 1 124 1 
197 1 302 1 36 1 239 2 286 1 60 1 305 1 206 2 133 1 189 2 242 1 324 2 194 2 326 1 311 4 195 1 255 2 14 1 124 1 
16 1 53 1 302 1 36 1 239 2 286 1 60 1 305 1 206 2 133 1 189 2 242 1 324 2 194 2 326 1 195 1 311 4 255 2 14 1 124 1 
178 1 183 1 185 1 304 1 37 1 306 1 189 1 9 1 100 1 311 2 47 1 195 1 104 1 14 1 319 1 321 1 286 1 61 1 206 1 114 1 242 1 73 1 74 1 327 1 326 1 122 1 255 2 124 1 
217 1 178 1 128 1 185 1 304 1 37 1 306 1 189 1 9 1 309 1 100 1 311 2 47 1 195 1 104 1 14 1 319 1 321 1 286 1 61 1 206 1 114 1 242 1 74 1 326 1 122 1 255 2 124 1 
302 1 36 1 305 1 133 1 189 2 194 2 195 1 311 4 14 1 49 1 16 1 53 1 239 2 60 1 286 1 206 2 242 1 324 2 326 1 255 2 124 1 
178 1 302 1 183 1 36 1 185 1 304 1 305 1 37 1 133 1 189 2 229 1 9 1 194 2 100 1 311 4 47 1 195 1 104 1 14 1 16 1 53 1 239 2 286 1 60 1 61 1 206 2 114 1 210 1 242 1 324 2 73 1 74 1 327 1 326 1 255 2 124 1 
218 1 261 1 302 1 36 1 304 1 37 1 305 1 133 1 189 1 194 1 195 1 311 3 14 1 150 1 49 1 16 1 53 1 239 1 159 1 286 1 60 1 20 1 206 2 209 1 242 1 324 1 326 1 255 2 124 1 
31 1 221 1 302 3 36 2 4 1 305 3 88 1 133 2 189 8 271 1 311 17 196 1 147 1 14 2 200 1 16 2 53 2 318 2 60 3 206 9 242 2 169 1 294 1 119 1 326 2 248 2 255 4 174 2 124 2 
31 2 302 3 36 2 305 3 88 1 133 2 187 1 189 10 270 1 271 1 311 23 196 2 147 2 14 2 200 1 16 1 285 1 53 1 237 1 318 1 60 3 63 1 206 13 242 2 169 1 294 2 326 2 248 2 123 1 174 3 255 4 331 1 124 2 
31 3 302 5 4 1 36 3 305 5 88 1 133 3 187 1 189 15 271 1 311 32 196 3 147 2 14 2 200 1 16 2 155 1 285 1 53 2 237 1 318 1 60 5 63 1 206 17 242 2 169 1 294 1 119 2 326 2 248 5 123 1 255 4 174 3 331 1 124 2 
31 1 302 2 36 1 4 1 305 2 88 1 133 1 189 6 271 1 311 13 196 1 147 1 14 2 200 1 318 1 60 2 206 7 242 2 294 1 169 1 119 1 326 2 248 2 255 4 174 2 124 2 
31 2 34 2 302 5 36 4 305 4 88 1 91 1 133 3 187 1 189 17 271 1 311 34 196 2 147 1 14 1 200 1 281 1 16 2 285 1 53 4 237 1 318 1 60 4 63 1 206 17 242 1 169 1 294 1 119 1 326 1 247 1 248 3 123 1 255 2 174 4 78 2 331 1 300 2 124 1 
48 1 176 1 177 1 283 1 121 1 59 1 226 1 105 1 287 1 
118 1 202 1 
48 1 235 1 283 1 59 1 226 1 287 1 18 1 92 1 323 1 121 1 
51 1 141 1 
181 1 131 1 256 1 
216 1 151 1 69 1 57 1 79 1 
216 1 151 1 69 1 57 1 79 1 
216 1 151 1 69 1 57 1 79 1 
51 1 181 1 141 1 
51 1 181 1 141 1 
131 1 256 1 
181 1 131 1 256 1 
230 1 98 1 
48 1 1 1 151 1 283 1 224 1 57 1 59 1 226 1 287 1 205 1 39 1 69 1 121 1 106 1 
259 1 178 2 185 1 304 2 37 2 306 1 189 1 9 1 193 1 100 2 143 1 47 2 195 1 311 2 104 2 146 1 14 1 150 2 49 1 110 1 54 1 319 1 286 1 61 2 65 1 206 1 115 1 242 1 117 1 74 2 245 1 326 1 75 1 255 2 124 1 257 2 
127 1 108 1 178 2 262 1 316 1 129 1 164 2 289 1 66 1 7 1 137 1 229 1 9 1 96 1 171 1 100 1 26 1 47 2 104 2 
127 1 108 1 178 1 262 1 316 1 129 1 164 2 289 1 66 1 137 1 9 1 171 1 26 1 100 1 47 1 273 1 104 1 
32 1 178 1 301 1 321 1 61 1 132 1 290 1 9 1 96 1 100 1 74 1 26 1 47 1 104 1 
127 1 108 1 178 1 262 1 316 1 129 1 164 2 289 1 66 1 7 1 137 1 96 1 9 1 171 1 100 1 26 1 47 1 104 1 
22 1 
166 1 203 1 204 1 45 1 
165 1 227 1 50 1 52 1 55 1 204 1 62 1 215 1 
50 1 178 1 52 1 55 1 158 1 185 1 321 1 61 1 9 1 41 1 99 1 244 1 100 2 74 2 47 1 104 1 215 1 
227 1 187 1 50 1 52 1 55 1 248 1 196 1 215 1 
50 1 33 1 52 1 302 2 55 1 36 1 204 2 205 1 227 1 139 1 97 1 328 2 247 1 215 1 78 1 106 1 300 1 
166 1 50 1 52 1 55 1 204 1 215 1 
227 1 302 1 36 1 204 1 305 1 60 1 133 1 
178 1 47 1 321 1 104 1 
227 1 50 1 52 1 55 1 204 1 172 1 276 1 215 1 
48 1 111 1 59 1 
48 1 111 1 59 1 
48 1 98 1 59 1 
48 1 111 1 59 1 
48 1 320 1 59 1 
48 1 320 1 59 1 
48 1 320 1 59 1 
48 1 59 1 
121 1 287 1 
16 2 281 1 34 2 53 4 302 1 36 1 206 4 91 1 189 5 242 2 270 1 326 2 247 1 311 9 255 4 78 2 14 2 124 2 300 2 
189 3 281 1 34 2 53 2 302 1 36 1 247 1 311 5 45 1 206 2 78 2 91 1 300 2 
17 1 302 1 36 1 60 1 305 1 206 2 133 1 189 2 242 1 326 1 311 4 255 2 14 1 124 1 
31 1 302 1 60 1 305 1 206 3 189 2 119 1 248 2 311 5 196 1 
31 2 34 4 302 4 36 4 305 2 91 1 133 2 189 12 270 1 97 1 40 1 311 22 14 1 16 5 281 1 53 9 60 2 206 10 288 1 242 1 119 1 326 1 247 2 248 2 255 2 78 4 300 4 124 1 
189 1 311 1 248 1 
31 1 311 1 206 1 
17 1 16 1 53 1 302 1 36 1 60 1 305 1 206 3 133 1 189 3 242 1 293 1 326 1 311 6 255 2 124 1 14 1 
31 1 302 2 36 2 305 2 133 2 187 1 189 6 271 1 311 12 196 1 14 1 16 1 285 1 237 1 53 1 60 2 206 6 242 1 326 1 248 1 255 2 123 1 331 1 124 1 
34 1 53 1 302 1 36 1 206 2 189 2 247 1 311 4 78 1 300 1 
83 1 16 1 281 1 34 1 53 2 206 1 91 1 189 2 270 1 242 1 326 1 311 3 255 2 78 1 300 1 14 1 124 1 
189 3 97 1 34 2 53 2 302 1 36 1 247 1 311 5 206 2 78 2 300 2 
16 1 53 1 302 1 305 1 206 2 271 1 242 1 326 1 311 2 255 2 14 1 124 1 
16 1 53 1 302 1 36 1 60 1 305 1 206 2 133 1 189 2 271 1 242 1 326 1 311 4 255 2 14 1 124 1 
83 1 16 1 34 1 53 2 4 1 206 1 189 2 270 1 271 1 242 3 326 3 311 3 255 6 78 1 14 3 124 3 300 1 
31 1 83 1 34 3 302 2 36 1 4 1 305 1 91 1 189 9 271 1 270 1 97 1 311 17 196 1 14 4 16 3 17 1 281 1 53 6 60 1 206 8 242 4 119 1 326 4 247 1 28 1 248 2 255 8 78 3 300 3 124 4 
31 1 34 2 302 2 36 1 305 1 91 1 187 1 189 5 271 1 311 10 196 1 14 1 281 1 53 2 60 1 206 5 242 1 119 1 326 1 247 1 248 2 255 2 78 2 300 2 124 1 
31 1 34 2 302 1 36 1 91 1 187 1 189 4 271 1 311 7 196 1 14 2 17 1 281 1 53 2 206 3 242 2 326 2 247 1 248 1 255 4 78 2 124 2 300 2 
31 1 302 2 36 2 305 2 133 2 187 1 189 6 271 1 311 12 196 1 14 2 17 1 16 1 285 1 237 1 53 1 60 2 206 6 242 2 326 2 248 1 255 4 123 1 331 1 124 2 
31 1 34 2 302 3 36 2 305 2 91 1 133 1 187 1 189 7 270 1 271 1 311 16 196 1 14 3 281 1 17 1 16 3 285 1 237 1 53 5 60 2 206 9 242 3 326 3 247 1 248 1 255 6 123 1 78 2 331 1 300 2 124 3 
31 1 34 2 302 2 36 1 305 1 91 1 187 1 189 5 271 1 311 10 196 1 14 1 281 1 53 2 60 1 206 5 242 1 119 1 326 1 247 1 248 2 255 2 78 2 300 2 124 1 
31 1 302 2 36 2 305 2 133 2 187 1 189 6 271 1 311 12 196 1 14 1 16 1 285 1 237 1 53 1 60 2 206 6 242 1 326 1 248 1 255 2 123 1 331 1 124 1 
31 1 302 2 36 1 305 2 133 1 187 1 189 4 270 1 271 1 311 11 196 1 14 3 17 1 16 1 285 1 53 1 237 1 60 2 206 7 242 3 326 3 248 1 255 6 123 1 331 1 124 3 
31 1 302 2 4 1 36 1 305 2 133 1 187 1 189 4 270 1 271 1 311 11 196 1 14 3 16 2 285 1 53 2 237 1 60 2 206 7 242 3 326 3 248 1 255 6 123 1 331 1 124 3 
281 1 16 2 34 2 53 4 302 1 36 1 206 3 91 2 189 4 247 1 311 7 78 2 300 2 
31 1 302 2 4 1 36 1 305 2 133 1 187 1 189 4 270 1 271 1 311 11 196 1 14 3 16 1 285 1 53 1 237 1 60 2 206 7 242 3 326 3 248 1 255 6 123 1 331 1 124 3 
150 1 222 1 71 1 122 1 304 1 37 1 233 1 
188 1 107 1 71 1 140 1 76 1 149 1 
32 1 178 1 9 1 100 1 74 1 45 1 47 1 321 1 61 1 104 1 132 1 
150 1 218 1 178 1 225 1 185 1 304 2 37 2 321 1 61 1 114 1 209 1 9 1 74 1 100 1 73 1 122 1 47 1 104 1 
279 1 150 2 218 1 178 1 154 1 284 1 225 1 185 2 304 2 240 1 37 2 61 2 114 1 209 2 308 1 9 1 232 1 74 3 100 1 73 1 122 1 47 1 104 1 
217 1 218 1 178 2 225 1 304 2 185 2 37 2 308 1 9 1 100 1 232 1 47 2 104 2 150 2 279 1 198 1 154 1 284 1 240 1 61 2 209 2 114 1 74 3 122 1 
178 1 153 1 154 1 74 1 158 1 47 1 104 1 205 1 106 1 
178 1 154 1 74 1 158 1 103 1 47 1 104 1 205 1 106 1 
178 1 9 1 100 1 47 1 104 1 13 1 
178 1 47 1 321 1 104 1 274 1 
218 1 178 1 34 2 302 1 183 1 225 1 36 1 185 1 304 2 37 2 91 1 189 3 229 1 9 1 100 1 311 5 195 2 47 1 146 1 104 1 14 2 150 1 49 1 281 1 53 2 286 2 61 1 206 2 114 1 209 1 242 2 210 1 74 1 73 1 326 2 327 1 122 2 247 1 255 4 29 1 78 2 300 2 124 2 
205 1 39 1 106 1 
178 2 185 1 61 1 207 1 229 1 9 1 41 1 244 1 74 2 100 2 47 2 104 2 13 1 
198 1 32 1 178 4 321 1 61 1 132 1 229 1 9 1 100 1 74 1 47 4 104 4 297 1 
259 1 178 2 110 1 154 1 185 1 61 1 9 1 193 1 74 1 100 2 325 1 75 1 47 2 104 2 
178 1 262 1 9 1 316 1 129 1 100 1 47 1 321 1 104 1 164 1 
259 1 108 1 110 1 178 2 54 1 185 1 61 2 229 1 9 1 193 1 100 2 74 2 143 1 75 1 47 2 104 2 
259 1 110 1 178 2 264 1 54 1 185 1 321 1 61 2 229 1 9 1 193 1 100 2 74 2 75 1 47 2 104 2 
259 1 110 1 178 2 54 1 185 1 321 1 61 2 67 1 229 1 9 1 193 1 100 2 74 2 75 1 47 2 104 2 
150 1 218 1 217 1 178 1 225 1 185 1 304 2 37 2 321 1 61 1 114 1 209 1 9 1 74 1 100 1 122 1 47 1 104 1 
178 1 154 1 47 1 104 1 274 1 
228 1 179 1 122 1 86 1 30 1 
279 1 236 1 179 2 86 2 240 1 87 1 205 2 39 1 228 2 192 1 232 1 122 1 102 1 251 1 30 1 299 1 106 2 
150 1 228 1 115 1 179 1 117 1 245 1 304 1 37 1 30 1 
279 1 236 1 179 1 86 1 87 1 240 1 228 1 192 1 232 1 251 1 30 1 299 1 
82 1 116 1 45 1 208 1 
82 1 116 1 170 1 253 1 332 1 267 1 208 1 
280 1 109 1 332 1 
175 1 82 1 220 2 35 1 184 1 112 1 267 3 208 1 116 1 170 1 253 1 332 3 
82 1 116 1 126 1 170 1 144 1 253 1 332 2 267 2 208 1 
278 1 82 1 127 1 35 1 129 1 267 1 164 1 170 1 310 1 253 1 332 1 
82 1 116 1 170 1 35 1 253 1 332 1 267 1 
116 2 170 1 35 1 253 1 332 1 267 1 208 1 
82 1 180 1 35 1 21 1 267 2 116 1 170 2 253 2 332 2 277 1 
80 1 126 2 82 2 35 1 130 1 267 3 208 1 116 1 170 1 310 1 250 1 253 1 332 3 
82 1 81 1 126 1 127 1 262 1 35 1 129 1 267 2 208 1 164 2 289 1 116 1 170 1 253 1 332 2 
126 2 82 2 35 1 267 4 208 1 116 1 170 2 144 1 44 1 310 1 250 1 253 2 332 4 
82 1 116 1 170 1 35 1 253 1 332 1 267 1 208 1 
175 1 126 2 82 3 220 1 112 1 267 4 208 2 116 2 23 1 170 1 310 1 250 1 253 1 332 4 
234 1 126 1 243 1 170 1 191 1 35 1 253 1 332 1 267 2 
175 1 82 1 220 2 35 1 112 2 89 1 267 3 208 1 116 1 170 1 253 1 332 3 
82 2 263 1 142 1 312 2 
231 1 170 1 35 1 253 1 332 1 267 1 
80 1 82 1 116 1 126 1 170 1 35 1 253 1 332 2 267 2 208 1 
8 1 
82 1 116 1 170 1 35 1 253 1 332 1 267 1 208 1 
80 1 126 1 82 1 220 1 35 1 267 3 208 1 116 1 170 1 253 1 332 3 
23 1 82 1 310 1 250 1 
82 1 116 1 

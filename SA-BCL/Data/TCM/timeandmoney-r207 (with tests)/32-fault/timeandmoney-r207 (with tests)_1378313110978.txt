#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (88,282) (88,282) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (88,282) (88,282) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (88,282) (88,282) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (88,282) (88,282) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 170 235 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 170 235 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 256 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 262 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 64 7 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 64 7 53 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 93 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 93 212 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (29,142,292) (16,109,303) (16,109,303) (16,109,303) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (29,142,292) (16,109,303) (16,109,303) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (29,142,292) (16,109,303) (16,109,303) (16,109,303) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 273 108 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 225 285 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 18 131 100 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 18 131 100 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 18 131 294 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 225 285 75 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 225 285 75 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 183 179 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 183 179 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 176 178 49 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 183 115 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 176 178 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (29,142,292) (29,142,292) (29,142,292) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (29,142,292) (29,142,292) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (29,142,292) (29,142,292) (29,142,292) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 181 (111,209) 120 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 254 264 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 64 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 44 73 287 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 44 73 287 66 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (62,151) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (160,290) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 11 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 143 1 13 1 88 1 282 1 106 1 243 1 80 1 95 1 237 1 159 1 27 1 
122 1 143 1 13 1 88 1 282 1 106 1 243 1 80 1 95 1 237 1 159 1 27 1 
122 1 143 1 13 1 88 1 282 1 106 1 243 1 80 1 95 1 237 1 159 1 27 1 
122 1 143 1 13 1 88 1 282 1 106 1 243 1 80 1 95 1 237 1 159 1 27 1 
122 1 145 1 103 1 164 1 106 2 243 1 95 1 237 2 159 1 170 1 154 1 214 1 
102 1 217 1 147 1 106 2 167 1 237 2 189 1 27 1 154 1 259 1 13 1 243 1 95 1 159 1 271 1 139 1 
145 1 147 1 106 3 167 1 237 3 82 1 27 1 154 2 265 1 243 2 95 1 159 2 214 1 
122 1 103 1 145 3 164 1 106 7 235 1 127 1 237 7 188 1 170 1 82 1 27 1 154 3 265 2 243 2 95 1 159 2 162 1 214 5 
122 1 103 1 145 3 164 1 106 7 235 1 127 1 237 7 188 1 170 1 82 1 27 1 154 3 265 2 243 2 95 1 159 2 162 1 214 5 
11 1 
247 1 163 1 279 1 186 1 129 1 41 1 300 1 44 1 242 1 96 1 98 1 33 1 
247 1 234 1 279 1 186 1 187 1 129 1 41 2 300 1 242 1 195 1 96 2 98 1 33 1 
90 1 96 1 41 1 
90 1 96 1 41 1 
96 1 41 1 
90 1 96 1 41 1 
90 1 96 1 41 1 
0 1 87 1 90 1 134 1 38 1 96 2 41 2 
1 1 278 1 78 1 165 1 129 2 85 1 177 1 19 1 247 1 290 1 148 1 187 1 252 2 255 1 300 2 63 1 28 1 30 2 195 1 65 1 157 1 118 2 199 1 
11 1 
247 2 234 1 153 2 187 1 129 2 260 1 300 2 195 1 269 1 
157 1 37 1 171 1 
1 1 278 1 290 1 78 1 148 1 153 1 152 1 252 1 129 1 300 1 85 1 28 1 30 1 65 1 118 1 177 1 
300 3 247 3 63 1 234 1 195 3 153 1 187 3 129 3 
300 1 247 1 248 1 279 1 195 1 187 1 129 1 
260 1 300 1 247 1 279 1 195 1 234 1 187 1 269 1 129 1 
247 2 279 1 234 1 165 1 186 1 187 2 129 2 256 1 41 1 300 2 63 1 242 1 195 2 96 1 269 1 137 1 98 1 33 1 
300 2 247 2 44 1 63 1 195 1 153 1 187 1 129 2 73 1 
247 1 279 1 165 1 186 1 187 1 129 1 41 1 300 1 262 1 63 1 242 1 195 1 96 1 137 1 98 1 33 1 
300 2 247 2 63 1 195 2 234 1 157 1 187 2 269 1 129 2 171 1 
1 1 278 1 290 1 78 1 148 1 153 1 252 1 129 1 300 1 85 1 28 1 30 1 65 1 118 1 177 1 
1 1 78 1 148 1 153 1 252 1 129 1 300 1 85 1 62 1 28 1 30 1 65 1 118 1 228 1 177 1 
2 1 4 1 10 1 37 2 169 4 171 2 172 1 43 1 207 1 281 1 283 1 211 1 135 2 136 1 55 1 293 2 150 1 297 1 221 2 193 1 31 1 267 1 157 2 308 1 
300 1 247 1 279 1 195 1 187 1 33 1 129 1 50 1 
200 1 247 3 279 1 234 1 165 1 153 1 187 3 129 3 300 3 63 2 195 3 269 1 
300 2 247 2 248 1 279 1 195 2 187 2 50 1 129 2 
132 1 
132 1 
201 1 245 1 
201 1 245 1 
201 1 245 1 
132 1 
201 1 132 2 245 1 
132 1 
132 1 
132 1 
132 1 
132 1 
132 1 
64 1 7 1 132 1 295 1 257 1 
64 1 7 1 132 1 295 1 96 1 257 1 41 1 53 1 
122 1 
259 1 102 1 139 1 
122 2 102 1 35 1 139 1 
102 1 122 1 166 1 84 1 302 1 139 1 274 1 
122 1 102 1 166 2 302 1 139 1 274 1 
90 1 96 1 67 1 41 1 
173 1 202 1 90 2 81 1 96 2 41 2 
0 1 21 1 38 1 41 2 239 1 223 1 87 1 90 1 133 1 93 1 134 1 96 2 
0 1 21 1 38 1 41 1 239 1 223 1 87 1 133 1 93 1 134 1 96 1 212 1 
11 1 
144 1 148 1 
204 1 
148 1 65 1 
78 1 8 1 148 2 204 1 236 2 45 1 65 1 
78 1 148 1 65 1 
148 1 117 1 
231 1 216 2 2 1 289 1 180 1 276 1 6 1 293 4 150 3 169 7 43 1 221 3 155 1 308 2 34 1 246 1 215 1 
231 1 216 2 2 1 289 1 180 1 276 1 6 1 293 4 150 3 169 7 43 1 221 3 155 1 308 2 34 1 246 1 215 1 
231 1 216 2 2 1 289 1 180 1 276 1 6 1 293 4 150 3 169 7 43 1 221 3 155 1 308 2 34 1 215 1 74 1 246 1 
231 5 233 1 276 1 2 4 6 2 123 1 10 1 169 31 207 1 240 1 43 4 174 4 48 1 135 2 54 1 55 1 215 1 246 1 216 3 289 2 180 2 218 1 182 3 293 16 150 10 254 1 297 3 220 3 221 15 193 3 155 2 267 1 308 5 34 1 
231 1 2 2 276 1 6 1 10 1 169 9 43 2 207 1 135 2 244 1 55 1 215 1 216 1 180 1 289 1 184 1 293 5 150 3 221 4 263 1 155 1 267 1 308 2 34 1 
122 1 35 1 237 1 42 1 243 1 16 1 47 1 95 1 177 1 139 1 142 1 101 1 102 1 288 1 22 1 106 1 109 1 252 1 27 1 28 1 30 1 303 1 304 1 118 1 159 1 
122 1 35 1 237 1 42 1 243 1 47 1 177 1 139 1 142 1 101 1 102 1 22 1 106 1 109 1 252 1 27 1 258 1 114 1 28 1 30 1 303 1 304 1 118 1 158 1 159 1 
114 1 30 1 47 1 118 1 158 1 252 1 
22 2 106 1 185 1 237 1 252 1 27 2 112 1 258 1 85 1 30 1 243 1 304 2 47 2 307 1 118 1 159 1 121 1 
122 1 35 1 237 1 42 1 243 1 16 1 47 1 95 1 177 1 139 1 142 1 101 1 102 1 22 1 106 1 109 1 252 1 27 1 28 1 30 1 303 1 304 1 118 1 158 1 159 1 
26 1 
0 1 277 1 108 1 252 1 41 1 85 1 223 1 87 1 30 1 133 1 134 1 96 1 118 1 273 1 
247 1 77 1 5 1 163 1 279 1 125 1 186 1 129 1 41 2 300 1 86 1 225 1 44 1 242 1 196 1 96 2 98 1 33 1 
57 1 247 1 77 1 5 1 163 1 279 1 125 1 186 1 129 1 41 2 300 1 86 1 44 1 242 1 196 1 96 2 98 1 33 1 
247 1 77 1 5 1 163 1 279 1 125 1 186 1 129 1 41 2 300 1 86 1 225 1 44 1 242 1 196 1 96 2 98 1 285 1 33 1 
96 1 41 1 
0 1 163 1 5 1 77 1 277 1 279 1 125 1 129 1 41 2 86 1 87 1 44 1 242 1 133 1 134 1 96 2 18 1 98 1 20 1 247 1 24 1 186 1 300 1 268 1 196 1 119 1 229 1 33 1 
0 1 163 1 5 1 77 1 277 1 279 1 125 1 129 1 131 1 41 2 86 1 87 1 44 1 242 1 133 1 134 1 96 2 97 1 18 1 98 1 100 1 20 1 247 1 24 1 186 1 300 1 268 1 196 1 119 1 229 1 33 1 
0 1 163 1 5 1 77 1 277 1 279 1 125 1 129 1 131 1 41 2 86 1 87 1 44 1 242 1 133 1 134 1 96 2 97 1 18 1 98 1 100 1 20 1 247 1 24 1 186 1 300 1 268 1 196 1 119 1 229 1 33 1 
0 1 163 1 5 1 77 1 277 1 279 1 125 1 129 1 131 1 41 2 86 1 87 1 44 1 242 1 133 1 134 1 96 2 18 1 98 1 247 1 249 1 294 1 24 1 186 1 300 1 268 1 196 1 306 1 229 1 33 1 
247 1 75 1 77 1 5 1 163 1 279 1 125 1 186 1 129 1 41 2 300 1 86 1 225 1 44 1 242 1 196 1 96 2 98 1 285 1 33 1 
247 1 75 1 77 1 5 1 163 1 279 1 125 1 186 1 129 1 41 2 300 1 86 1 225 1 44 1 242 1 196 1 96 2 98 1 285 1 33 1 
0 1 163 1 5 1 77 1 277 1 279 1 125 1 129 1 41 2 86 1 87 1 44 1 242 1 133 1 134 1 96 2 18 1 98 1 247 1 249 1 24 1 186 1 300 1 268 1 196 1 229 1 33 1 
207 1 281 1 267 1 10 1 11 1 283 1 135 2 136 1 55 1 
231 1 233 1 2 1 3 1 10 2 37 11 169 14 130 1 171 4 207 2 43 2 281 1 174 3 283 2 135 4 55 2 23 1 182 2 59 1 293 8 150 2 149 1 153 1 254 1 297 1 220 3 299 1 221 6 193 2 267 2 157 11 308 1 71 1 
1 1 203 1 78 1 278 1 36 1 10 1 165 1 169 2 129 2 130 1 171 1 85 1 207 1 281 1 283 1 135 2 177 1 55 1 247 1 290 1 148 1 293 1 149 1 153 1 152 1 252 1 187 1 300 2 221 1 28 1 63 1 30 1 226 1 267 1 65 1 195 1 118 1 71 1 
231 1 1 2 2 3 6 1 78 2 10 3 165 1 169 20 238 2 171 7 85 1 91 2 177 2 247 1 105 1 182 2 252 1 187 1 193 2 28 2 30 1 267 3 195 1 197 2 118 1 34 1 276 1 278 2 37 7 130 1 129 3 207 3 43 3 281 3 209 2 283 3 135 6 55 3 215 1 216 1 289 1 290 2 148 2 60 2 293 10 150 5 149 1 153 2 297 2 298 1 300 3 221 10 63 1 65 2 157 7 308 4 71 1 
85 1 30 1 219 1 118 1 252 1 
2 1 234 1 10 1 37 1 169 3 129 1 171 1 207 1 43 1 281 1 283 1 135 2 55 1 247 1 182 1 293 1 150 1 149 1 187 1 297 1 300 1 193 1 221 2 267 1 195 1 157 1 308 1 269 1 270 1 
231 1 10 1 293 2 150 1 37 1 169 2 171 1 207 1 43 1 281 1 193 1 267 1 157 1 283 1 211 1 135 2 136 1 55 1 
2 1 4 1 10 1 150 1 37 1 169 2 297 1 171 1 207 1 281 1 221 2 267 1 157 1 283 1 135 2 136 1 308 1 55 1 
231 1 2 1 10 1 37 2 169 4 171 2 43 1 207 1 281 1 283 1 135 2 136 1 55 1 182 1 293 2 150 2 297 1 193 1 221 2 267 1 157 2 308 1 
219 1 
219 1 
219 1 
231 1 2 1 10 1 37 2 169 4 171 2 43 1 207 1 281 1 283 1 135 2 55 1 182 1 293 2 150 2 297 1 193 1 221 2 267 1 157 2 308 1 
1 1 78 1 278 1 10 1 169 2 130 1 129 1 85 1 207 1 281 1 283 1 135 2 177 1 55 1 290 1 148 1 293 1 153 1 252 1 300 1 221 1 28 1 30 1 267 1 65 1 197 1 118 1 71 1 
1 1 78 1 10 1 169 2 130 1 129 1 85 1 207 1 281 1 89 1 283 1 135 2 177 1 55 1 148 1 293 1 153 1 252 1 300 1 221 1 28 1 62 1 30 1 267 1 65 1 118 1 228 1 71 1 
231 1 2 1 10 1 37 2 169 4 171 2 43 1 207 1 281 1 283 1 135 2 55 1 182 1 293 2 149 1 150 2 297 1 193 1 221 2 267 1 157 2 308 1 
231 1 1 1 2 1 78 1 278 1 10 1 37 2 169 4 238 1 129 1 171 2 43 1 207 1 281 1 283 1 135 2 177 1 55 1 288 1 290 1 182 1 148 1 293 2 150 2 252 1 297 1 300 1 221 2 193 1 28 1 30 1 267 1 65 1 157 2 197 1 118 1 308 1 
231 1 2 1 234 1 10 1 37 1 169 3 129 1 171 1 207 1 43 1 281 1 283 1 135 2 55 1 247 1 182 1 293 2 150 1 149 1 187 1 297 1 300 1 221 1 193 1 267 1 195 1 157 1 198 1 269 1 
231 1 233 1 275 1 2 1 10 2 169 9 207 2 43 1 210 1 174 2 135 4 178 1 49 1 51 1 179 1 55 2 182 1 183 1 293 4 150 2 25 1 254 1 297 1 220 1 221 5 193 1 263 1 267 2 308 1 
231 1 233 1 275 1 2 1 10 2 169 9 207 2 43 1 210 1 174 2 135 4 178 1 49 1 51 1 179 1 55 2 182 1 183 1 293 4 150 2 25 1 254 1 297 1 220 1 221 5 193 1 263 1 267 2 308 1 
2 1 275 2 276 1 6 1 10 1 169 11 43 1 207 1 174 1 135 2 176 1 178 1 49 1 51 1 55 1 215 1 216 1 289 1 293 6 150 1 25 1 254 1 220 1 221 5 263 1 267 1 308 1 34 1 
231 1 233 1 275 1 2 1 10 2 169 9 207 2 43 1 210 1 174 2 135 4 178 1 49 1 51 1 55 2 182 1 183 1 293 4 150 2 25 1 254 1 297 1 220 1 115 1 221 5 193 1 263 1 267 2 308 1 
275 2 293 3 10 1 25 2 169 6 254 1 220 1 207 1 221 3 263 1 174 1 267 1 135 2 176 1 51 1 49 1 178 2 55 1 
10 1 169 2 129 2 130 1 207 1 281 1 283 1 135 2 177 1 55 1 213 1 247 2 250 1 293 1 149 1 252 2 253 1 300 2 222 1 221 1 28 1 224 1 30 2 267 1 118 2 69 1 71 1 199 2 
122 1 102 1 288 1 35 1 22 1 292 1 252 2 296 1 42 1 28 1 29 1 30 2 118 2 158 1 177 1 139 1 142 1 101 1 
122 1 102 1 35 1 22 1 292 1 252 1 42 1 28 1 30 1 118 1 158 1 177 1 139 1 141 1 142 1 101 1 
85 1 30 1 22 1 175 1 307 1 118 1 252 1 296 1 
122 1 102 1 35 1 22 1 292 1 252 1 296 1 42 1 29 1 28 1 30 1 118 1 158 1 177 1 139 1 142 1 101 1 
72 1 
11 1 
0 1 87 1 277 1 133 1 134 1 24 1 119 1 20 1 
0 1 144 1 277 1 181 1 78 1 148 2 8 1 111 1 252 1 85 1 223 1 87 1 61 1 28 1 30 1 65 1 133 1 134 1 118 1 177 2 120 1 
0 1 87 1 264 1 277 1 174 1 133 1 134 1 24 1 254 1 220 1 
0 1 2 1 289 1 277 1 6 1 168 1 24 2 41 1 43 2 87 1 133 1 134 1 96 1 97 1 244 1 140 2 34 1 
0 1 87 1 277 1 107 1 134 1 24 1 
43 1 193 1 2 1 182 1 133 1 24 1 297 1 
85 1 30 1 118 1 252 1 
0 1 223 1 87 1 277 1 133 1 134 1 24 1 83 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
64 1 257 1 
132 1 
2 1 276 1 6 1 10 1 169 8 43 1 207 1 174 1 135 2 55 1 215 1 216 1 289 1 293 4 150 2 254 1 220 1 221 4 263 1 264 1 267 1 308 2 34 1 
231 1 233 1 2 1 276 1 6 1 10 2 169 11 207 2 43 2 174 2 135 4 55 2 215 1 216 1 289 1 182 1 293 6 150 3 110 1 254 1 220 1 221 5 193 1 263 1 264 1 267 2 308 2 34 1 
231 1 276 1 2 3 6 1 10 3 169 19 12 1 208 1 207 3 43 3 174 1 92 1 48 1 135 6 55 3 215 1 216 1 289 1 182 2 293 9 150 4 110 1 254 1 297 2 220 1 221 10 193 2 263 1 264 1 267 3 68 1 308 3 34 1 
231 2 276 1 2 2 6 1 10 3 169 17 12 1 207 3 43 3 208 1 174 1 92 1 48 1 135 6 55 3 215 1 216 1 289 1 182 2 293 10 150 5 110 1 254 1 297 1 220 1 221 7 193 2 263 1 264 1 267 3 68 1 308 3 34 1 
2 1 276 1 6 1 10 1 169 8 43 1 207 1 174 1 135 2 55 1 215 1 216 1 289 1 293 4 150 2 254 1 220 1 221 4 263 1 264 1 267 1 308 2 34 1 
231 1 2 2 182 2 293 6 10 1 150 2 169 12 297 2 254 1 12 1 220 1 208 1 43 2 207 1 193 2 221 6 263 1 264 1 267 1 174 1 92 1 135 2 68 1 308 1 55 1 
231 2 276 1 2 2 6 1 10 4 169 18 12 1 208 1 207 4 43 3 174 1 92 1 48 2 135 8 55 4 215 1 216 1 289 1 182 2 293 10 150 5 110 1 254 1 297 1 220 1 221 8 193 2 263 1 264 1 267 4 68 1 308 3 34 1 
231 3 2 2 10 4 169 16 12 1 208 1 207 4 43 3 174 1 210 1 92 1 48 2 135 8 55 4 182 3 293 9 150 6 254 1 297 2 220 1 221 7 193 3 263 1 264 1 267 4 68 1 308 3 
231 3 2 1 276 1 289 3 6 3 293 3 150 6 169 7 43 1 221 4 308 3 215 2 34 1 
231 1 276 1 2 2 6 1 10 4 169 18 12 1 208 1 207 4 43 3 174 1 210 1 92 1 48 2 135 8 55 4 215 1 216 1 289 1 182 2 293 10 150 4 254 1 297 1 220 1 221 8 193 2 263 1 264 1 267 4 68 1 308 3 34 1 
231 1 216 1 2 1 276 1 289 1 6 1 293 4 10 2 150 3 169 8 43 1 207 2 221 4 267 2 48 1 135 4 308 2 55 2 34 1 215 1 
11 1 
231 1 2 1 182 1 10 1 293 2 150 2 110 1 169 4 297 1 207 1 43 1 221 2 193 1 267 1 135 2 308 1 55 1 
221 1 174 1 293 1 169 2 254 1 220 1 
231 4 233 1 2 5 276 1 6 2 10 1 169 25 43 5 207 1 174 2 48 1 135 2 244 1 55 1 215 1 216 1 289 2 182 2 59 1 293 13 150 8 297 2 220 2 299 1 193 2 221 12 267 1 308 4 34 2 
221 1 174 1 169 1 
293 1 169 1 220 1 
231 2 2 1 182 1 10 1 293 3 150 4 110 1 169 6 297 1 207 1 43 1 221 3 193 1 267 1 91 1 135 2 308 2 55 1 
231 1 2 2 182 2 293 6 10 1 150 2 169 12 297 2 254 1 12 1 220 1 208 1 43 2 207 1 193 2 221 6 263 1 264 1 267 1 174 1 92 1 135 2 68 1 308 1 55 1 
231 1 2 1 289 1 6 1 293 3 150 2 169 6 43 1 221 3 308 1 34 1 
231 1 289 1 276 1 6 1 293 1 10 1 150 2 169 3 207 1 221 2 267 1 48 1 135 2 308 1 161 1 55 1 215 1 
231 3 289 2 2 2 6 2 293 6 150 6 169 12 43 2 221 6 244 1 308 3 34 1 
231 1 10 1 293 2 150 1 169 2 207 1 43 1 193 1 263 1 267 1 135 2 55 1 
231 1 2 1 182 1 10 1 293 2 150 2 169 4 297 1 207 1 43 1 221 2 193 1 263 1 267 1 135 2 308 1 55 1 
231 1 289 1 6 1 10 3 293 1 150 2 169 3 207 3 221 2 263 1 210 1 267 3 48 1 135 6 308 1 161 1 55 3 
231 5 233 1 276 1 2 5 6 3 123 1 10 5 169 34 207 5 43 5 174 4 210 1 48 2 135 10 54 1 55 5 215 1 216 1 289 3 218 1 182 3 293 16 150 12 110 1 254 1 297 3 220 3 221 18 193 3 263 1 267 5 308 7 161 1 34 2 
287 1 44 1 73 1 
287 1 44 1 194 1 66 1 46 1 251 1 73 1 52 1 
85 1 30 1 11 1 118 1 252 1 
1 1 247 1 78 1 290 1 148 1 153 1 187 1 252 1 129 2 300 2 85 1 63 1 28 1 30 1 65 1 195 1 118 1 177 1 
1 1 247 2 78 2 290 1 279 1 148 3 153 1 187 1 252 1 129 2 40 1 300 2 63 1 28 1 242 1 30 1 65 2 195 2 117 1 118 1 284 1 177 1 33 1 
232 1 1 1 78 2 279 1 129 2 40 1 242 1 177 1 284 1 247 2 148 3 153 1 252 2 187 1 300 2 28 1 62 1 63 1 30 2 195 2 65 2 117 1 118 2 33 1 
85 1 144 1 30 2 148 1 151 1 118 2 96 1 252 2 40 1 41 1 
85 1 144 1 30 2 148 1 118 2 96 1 160 1 252 2 40 1 41 1 
28 1 30 1 118 1 252 1 272 1 177 1 
288 1 124 1 78 1 8 1 148 3 79 1 252 7 190 1 85 2 113 1 241 1 261 1 28 2 30 6 15 1 65 2 118 7 158 1 272 1 177 3 199 1 
1 1 2 1 276 1 6 1 78 1 278 1 10 2 37 1 169 6 129 2 238 1 171 1 43 1 207 2 281 2 209 1 283 2 135 4 177 1 55 2 215 1 213 1 216 1 247 1 288 1 289 1 290 1 148 1 293 3 150 2 149 1 153 2 187 1 252 1 300 2 221 3 28 1 63 1 30 1 267 2 65 1 195 1 157 1 197 1 118 1 308 2 34 1 
90 1 96 1 41 1 
288 1 78 1 8 1 148 2 236 1 252 2 61 1 28 1 30 2 65 1 118 2 272 1 177 2 
232 1 288 1 148 1 128 1 252 4 192 1 85 1 28 1 30 4 65 1 118 4 138 1 177 1 
124 1 78 1 148 1 9 1 252 2 40 1 113 1 301 1 28 1 30 2 65 1 118 2 177 2 309 1 
259 1 102 1 85 1 28 1 30 1 118 1 252 1 177 1 139 1 101 1 
288 1 28 1 30 2 250 1 118 2 158 1 252 2 177 1 
288 1 148 3 79 1 128 1 252 5 190 1 40 1 192 1 85 1 241 1 28 2 30 4 65 2 118 5 138 1 177 2 
288 1 148 3 79 1 206 1 128 1 252 5 40 1 192 1 85 1 241 1 28 2 30 4 65 2 118 5 138 1 177 2 
1 1 247 1 78 1 148 1 153 1 187 1 252 1 129 2 300 2 85 1 63 1 62 1 28 1 30 1 65 1 195 1 118 1 177 1 
124 1 78 1 8 1 148 1 252 1 40 1 113 1 261 1 28 1 30 1 65 1 118 1 177 2 
247 1 39 1 129 1 300 1 222 1 224 1 69 1 99 1 230 1 
58 1 146 1 279 1 205 1 39 1 186 1 242 1 137 1 98 1 230 1 99 1 33 1 
146 1 153 1 39 1 99 1 230 1 
58 1 146 2 279 1 205 1 153 1 39 2 186 1 41 2 242 1 90 1 17 1 96 2 137 1 98 1 33 1 230 1 99 2 
11 1 
147 1 106 1 243 1 167 1 237 1 159 1 154 1 
304 1 237 1 27 1 
217 2 147 1 291 1 106 3 167 1 237 3 154 1 243 1 95 1 227 1 159 1 286 1 
103 1 147 1 106 2 243 1 167 1 237 2 159 1 154 1 214 1 
122 1 145 1 164 1 106 1 243 1 95 1 237 1 159 1 154 1 
147 1 106 1 243 1 95 1 237 1 159 1 154 1 
147 2 106 1 243 1 167 1 95 1 237 1 159 1 
147 1 106 2 126 1 237 2 154 1 156 1 243 2 95 1 159 2 70 1 
145 1 147 1 106 3 167 1 237 3 188 1 154 2 265 1 243 1 95 1 159 1 162 1 214 2 
122 1 102 1 35 1 32 1 106 1 243 1 95 1 237 1 159 1 139 1 
103 1 145 1 147 1 106 4 167 1 237 4 154 2 265 1 14 1 243 2 95 1 159 2 214 2 
147 1 106 1 243 1 167 1 95 1 237 1 159 1 154 1 
217 1 145 1 147 2 106 4 167 2 237 4 154 3 265 1 94 1 243 1 227 1 159 1 286 1 214 2 
76 1 147 1 106 2 167 1 127 1 237 2 154 1 116 1 243 1 95 1 159 1 214 1 
217 2 147 1 106 3 167 1 237 3 154 1 266 1 243 1 95 1 227 1 159 1 286 2 
56 1 104 1 191 2 154 2 
106 1 305 1 243 1 95 1 237 1 159 1 
147 1 106 2 243 1 167 1 95 1 237 2 159 1 188 1 154 1 214 1 
280 1 
147 1 106 1 243 1 167 1 95 1 237 1 159 1 154 1 
217 1 147 1 106 3 167 1 237 3 188 1 154 1 243 1 95 1 159 1 214 1 
145 1 265 1 94 1 154 1 
147 1 154 1 

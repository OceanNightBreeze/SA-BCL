#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 247 (30,257) (30,257) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 247 (30,257) (30,257) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 247 (30,257) (30,257) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 247 (30,257) (30,257) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 279 98 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 279 98 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 204 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 183 199 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 10 40 197 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 10 321 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 10 40 197 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 10 321 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 10 40 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 10 167 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 1 77 1 209 1 305 1 257 1 43 1 180 1 96 1 142 1 67 1 285 1 247 1 30 1 
55 1 77 1 209 1 305 1 257 1 43 1 180 1 96 1 142 1 67 1 285 1 247 1 30 1 
55 1 77 1 209 1 305 1 257 1 43 1 180 1 96 1 142 1 67 1 285 1 247 1 30 1 
55 1 77 1 209 1 305 1 257 1 43 1 180 1 96 1 142 1 67 1 285 1 247 1 30 1 
55 4 78 1 209 1 231 1 274 2 304 2 305 1 119 1 43 1 279 1 180 4 142 1 285 1 265 3 315 2 247 1 
75 1 297 1 55 2 77 1 209 1 304 1 305 1 43 1 180 2 67 1 285 1 71 1 291 1 171 1 247 1 268 1 
55 3 209 2 231 1 304 2 136 1 43 1 180 3 67 1 285 2 265 1 291 1 315 1 268 1 
55 4 209 2 231 1 304 1 136 1 279 1 43 1 179 1 180 4 67 1 285 2 98 1 265 2 315 1 295 1 
55 4 209 2 231 1 304 1 136 1 279 1 43 1 179 1 180 4 67 1 285 2 98 1 265 2 315 1 295 1 
289 1 57 1 114 1 
65 1 
93 2 47 1 70 2 303 1 59 2 148 2 333 2 64 2 
298 2 83 1 82 1 303 1 255 1 178 1 214 1 7 1 93 2 140 1 312 1 95 1 47 1 97 1 50 1 148 3 184 1 16 1 54 1 102 1 109 2 232 1 110 2 159 1 117 1 160 1 59 2 164 2 280 1 23 1 64 3 123 1 70 2 246 1 333 2 205 2 31 1 
93 1 122 1 241 1 70 1 303 1 113 1 59 1 148 1 333 1 64 1 
299 1 0 1 35 1 210 1 303 1 8 1 93 1 49 1 148 2 101 1 156 1 113 2 114 1 59 2 237 1 64 2 122 1 241 1 70 1 289 1 333 1 
0 1 299 1 35 2 210 2 303 1 114 1 113 2 59 2 64 2 237 1 93 2 122 1 241 1 49 1 70 2 289 1 148 2 333 2 101 1 
56 1 48 1 35 1 210 1 115 1 
238 1 56 1 35 2 210 2 289 1 114 1 115 1 294 1 
56 1 35 1 210 1 
35 1 210 1 303 1 113 1 115 1 59 1 64 1 93 1 122 1 241 1 49 1 70 1 148 1 333 1 
289 1 
56 1 35 2 210 2 287 1 289 1 114 1 115 1 294 1 
207 1 79 1 208 1 35 5 210 5 303 1 86 1 6 1 93 1 262 2 11 2 49 1 148 1 151 1 228 4 271 1 56 2 272 1 189 1 58 1 113 1 114 1 115 2 59 1 62 1 64 1 63 1 196 2 122 1 27 1 241 1 70 1 289 1 290 1 29 4 293 1 333 1 294 1 
128 1 102 1 109 1 82 1 59 1 178 1 214 1 164 1 280 1 64 2 66 1 97 1 123 1 70 1 146 1 148 2 333 1 31 1 205 1 54 1 
47 1 57 1 
1 1 59 2 64 2 93 1 47 2 145 1 70 1 148 2 333 1 
128 1 132 1 309 1 
102 1 109 1 82 1 116 1 178 1 214 1 164 1 280 1 64 1 47 1 97 1 123 1 148 1 31 1 205 1 54 1 
1 1 59 5 213 1 8 1 64 5 93 1 283 1 66 1 47 1 70 4 146 2 99 1 148 5 333 4 
241 1 85 1 70 1 113 1 59 1 148 1 333 1 64 1 
93 1 47 1 70 3 146 1 59 3 148 3 333 3 64 3 
241 1 70 1 113 1 59 1 148 1 333 1 64 1 
93 1 1 1 145 1 70 1 113 1 59 1 148 1 333 1 64 1 
0 1 1 1 82 1 252 1 255 1 178 1 93 2 97 1 12 1 184 1 16 1 101 1 102 1 109 1 110 1 113 2 280 1 123 1 198 1 205 1 31 1 299 1 298 2 35 1 210 1 303 1 214 1 140 1 312 1 47 1 146 1 50 1 148 4 54 1 232 1 159 1 59 3 160 1 164 1 64 4 237 1 66 1 70 3 246 1 333 3 
283 1 47 1 70 1 146 1 59 2 148 2 333 1 8 1 64 2 
1 1 299 1 0 1 35 1 210 1 113 1 59 3 42 1 64 3 237 1 93 1 66 1 70 3 289 1 146 2 12 1 148 3 333 3 101 1 
128 1 93 1 1 1 132 1 70 2 146 1 59 2 148 2 333 2 64 2 
102 1 109 1 82 1 178 1 164 1 214 1 280 1 64 1 47 1 97 1 123 1 148 1 31 1 205 1 54 1 
109 1 82 1 113 1 41 1 178 1 60 1 164 1 214 1 280 1 64 1 47 1 97 1 123 1 198 1 148 1 31 1 205 1 
128 2 153 1 298 2 132 2 232 1 110 4 88 1 159 2 117 2 160 1 260 1 309 2 194 1 215 1 217 1 196 1 312 1 11 1 50 1 245 1 246 1 184 1 
85 1 
126 1 61 1 
126 1 61 1 
138 1 185 1 
138 1 185 1 
138 1 185 1 
323 1 126 1 61 1 
138 1 322 1 324 1 126 2 61 2 185 1 
202 1 126 1 61 1 
323 1 126 1 61 1 
323 1 126 1 61 1 
301 1 126 1 61 1 
301 1 126 1 61 1 
301 1 126 1 61 1 
32 1 174 1 175 1 35 1 210 1 2 1 45 1 310 1 47 1 144 1 148 2 18 1 152 1 59 2 61 1 118 1 193 1 64 2 239 1 169 1 70 2 202 1 126 1 333 2 
296 1 76 2 174 2 106 1 35 2 210 2 322 1 19 1 90 1 2 2 61 2 310 1 239 2 168 1 144 2 169 3 289 1 201 1 126 2 
142 1 305 1 247 1 
305 1 171 1 247 1 
142 2 28 1 172 1 316 1 305 3 171 1 
142 1 28 1 39 1 172 1 305 2 171 1 
142 1 28 2 172 1 305 2 171 1 
35 3 210 3 114 1 115 3 135 1 177 1 326 1 218 1 289 1 74 1 151 1 
56 1 35 3 210 3 114 1 115 3 256 1 326 1 92 1 48 1 68 1 289 1 74 1 151 1 
206 1 79 1 35 3 210 3 303 1 89 1 88 1 135 1 177 1 6 1 218 1 93 1 11 1 49 1 148 1 18 1 228 2 272 1 189 1 113 1 114 1 115 2 59 1 278 1 326 1 64 1 65 2 122 1 241 1 69 1 170 1 70 1 289 2 29 1 333 1 
206 1 79 1 35 2 210 2 89 1 88 1 135 1 177 1 6 1 218 1 11 1 18 1 228 2 272 1 189 1 115 1 278 1 326 1 65 2 69 1 170 1 289 1 204 1 29 1 
249 1 57 1 214 1 
276 1 214 1 
120 1 
178 1 214 1 280 1 
111 1 214 1 
214 1 280 1 
249 2 178 1 214 3 280 1 195 1 120 1 226 1 
251 3 110 7 159 3 117 4 192 1 62 1 22 1 63 1 196 1 328 1 27 1 240 1 11 1 288 1 14 1 150 2 15 2 
251 3 110 7 159 3 117 4 192 1 62 1 22 1 63 1 196 1 328 1 27 1 240 1 11 1 288 1 14 1 150 2 15 2 
251 3 110 7 159 3 117 4 192 1 62 1 22 1 63 1 196 1 328 1 143 1 27 1 240 1 11 1 288 1 14 1 150 2 15 2 
173 1 298 2 251 11 88 3 220 1 181 1 11 5 50 1 14 2 150 4 15 1 184 1 104 4 232 1 110 34 159 17 158 1 117 17 192 1 235 1 62 1 22 2 194 3 63 3 196 5 329 1 328 7 240 1 27 3 284 3 170 3 288 1 290 1 246 1 248 1 
173 1 298 4 251 4 308 1 137 1 11 1 50 2 14 1 184 2 15 2 150 3 232 2 110 9 159 4 117 5 192 1 62 1 22 1 63 1 196 1 328 1 240 1 27 1 246 2 
80 1 209 1 254 1 304 1 305 2 212 1 43 1 180 2 141 1 142 1 97 1 265 1 316 1 268 1 53 1 55 2 188 1 109 1 112 1 164 1 166 1 330 1 67 1 285 1 123 1 291 1 171 1 247 1 127 1 205 1 
80 1 209 1 254 1 304 1 305 2 212 1 91 1 180 3 141 1 142 1 97 1 265 2 316 1 268 1 53 1 319 1 55 3 109 1 112 1 164 1 236 1 330 1 67 1 285 1 123 1 291 1 171 1 247 1 127 1 205 1 
80 1 254 1 304 1 305 2 180 2 142 1 97 1 265 2 316 1 268 1 53 1 319 1 55 2 109 1 112 1 164 1 236 1 330 1 67 1 123 1 291 1 171 1 127 1 247 1 205 1 
80 2 209 1 87 1 214 1 91 1 180 1 97 1 53 2 55 1 105 1 109 1 20 1 164 1 280 1 330 2 67 2 242 1 123 1 285 1 331 1 203 1 205 1 31 1 
80 1 209 1 254 1 305 2 212 1 43 1 180 1 141 1 142 1 97 1 316 1 53 1 55 1 109 1 112 1 164 1 236 1 166 1 330 1 67 1 285 1 123 1 171 1 247 1 127 1 205 1 
154 1 
109 1 35 1 210 1 164 1 205 1 31 1 151 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
56 1 131 1 35 2 210 2 287 1 125 1 199 1 183 1 294 1 
131 1 35 1 210 1 125 1 199 1 183 1 151 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 
131 1 35 1 210 1 125 1 199 1 183 1 151 1 
128 1 298 2 132 1 251 2 309 1 217 1 312 1 47 2 11 1 50 1 184 1 150 2 15 1 232 1 110 6 57 1 159 3 160 1 117 3 192 1 62 1 63 1 196 1 240 1 27 1 246 1 
128 10 298 4 83 1 251 1 302 1 132 3 88 2 309 10 312 2 47 1 222 1 224 1 11 2 50 2 227 1 13 1 184 2 16 1 104 3 232 2 110 12 159 4 160 1 117 8 329 1 328 1 284 3 170 2 246 2 248 1 
298 2 82 1 132 1 83 1 178 1 214 1 259 1 312 1 47 1 97 1 146 1 50 1 227 1 148 2 184 1 16 1 54 1 102 1 109 1 107 1 232 1 110 2 159 1 116 1 160 1 59 1 117 1 164 1 280 1 64 2 66 1 123 1 70 1 292 1 246 1 333 1 205 1 31 1 
82 1 251 1 88 1 178 1 97 1 11 1 184 2 16 1 102 1 109 1 110 5 117 3 280 1 123 1 205 1 31 1 128 2 298 4 132 2 36 1 214 1 309 2 139 1 140 1 312 2 313 1 225 1 50 2 146 1 227 1 148 2 150 1 54 1 155 1 232 2 159 2 59 1 160 2 164 1 64 2 66 1 170 1 70 1 246 2 333 1 
298 4 83 1 253 1 37 1 40 1 178 1 214 3 217 1 10 1 312 2 95 1 97 2 146 1 50 2 148 1 184 2 16 1 188 1 230 1 109 4 232 2 110 2 20 1 234 1 159 1 59 1 160 2 117 1 325 1 164 4 280 3 64 1 197 1 242 1 123 3 70 1 244 1 246 2 333 1 205 4 31 2 
128 1 1 1 298 2 251 1 132 1 88 1 4 1 309 1 93 1 312 1 11 1 50 1 227 1 148 1 150 1 184 1 232 1 110 3 159 2 160 1 59 1 117 1 194 1 64 1 196 1 170 1 70 1 246 1 333 1 
128 1 298 2 132 1 232 1 110 2 88 1 160 1 117 2 309 1 260 1 217 1 312 1 11 1 50 1 246 1 184 1 
128 1 298 2 251 1 132 1 232 1 110 2 159 2 160 1 309 1 194 1 217 1 196 1 312 1 50 1 245 1 246 1 150 1 184 1 
128 1 298 2 132 1 232 1 110 2 88 1 160 1 117 2 309 1 217 1 312 1 170 1 11 1 50 1 246 1 184 1 
128 1 298 2 132 1 232 1 110 2 253 1 88 1 160 1 117 2 309 1 260 1 312 1 11 1 50 1 246 1 184 1 
128 1 298 2 251 1 132 1 232 1 110 2 253 1 159 2 160 1 309 1 194 1 196 1 312 1 50 1 245 1 246 1 150 1 184 1 
128 1 298 2 132 1 232 1 110 2 253 1 88 1 160 1 117 2 309 1 312 1 170 1 11 1 50 1 246 1 184 1 
128 1 298 2 132 1 232 1 110 2 88 1 160 1 117 2 309 1 312 1 170 1 11 1 50 1 246 1 184 1 
298 2 83 1 82 1 178 1 214 1 140 1 312 1 47 1 97 1 50 1 148 1 184 1 16 1 54 1 102 1 109 1 232 1 110 2 159 1 117 1 160 1 164 1 280 1 64 1 123 1 246 1 205 1 31 1 
298 2 82 1 211 1 41 1 178 1 214 1 312 1 47 1 97 1 50 1 148 1 184 1 16 1 109 1 232 1 110 1 159 1 113 1 160 1 60 1 164 1 280 1 64 1 123 1 198 1 246 1 205 1 31 1 
128 1 298 2 132 1 232 1 110 2 88 1 160 1 117 2 309 1 312 1 170 1 11 1 50 1 227 1 246 1 184 1 
128 1 298 2 132 1 82 1 88 1 178 1 214 1 309 1 140 1 312 1 97 1 11 1 50 1 148 1 184 1 54 1 102 1 155 1 188 1 109 1 232 1 110 2 117 2 160 1 164 1 280 1 64 1 123 1 170 1 246 1 205 1 
128 1 1 1 298 2 88 1 309 1 93 1 312 1 11 1 50 1 227 1 148 1 184 1 187 1 232 1 110 3 159 1 160 1 59 1 117 2 194 1 64 1 196 1 170 1 70 1 246 1 333 1 
298 4 130 1 251 1 88 2 137 1 11 2 264 1 50 2 267 1 149 1 184 2 104 2 232 2 110 15 159 8 117 7 191 1 194 2 196 2 25 2 329 1 328 1 243 1 284 1 170 2 72 1 246 2 248 1 
298 4 130 1 251 1 88 2 137 1 11 2 264 1 50 2 267 1 149 1 184 2 104 2 232 2 110 15 159 8 117 7 191 1 194 2 196 2 25 2 329 1 328 1 243 1 284 1 170 2 72 1 246 2 248 1 
298 2 130 1 251 3 84 1 88 4 137 1 11 5 264 1 50 1 51 1 267 1 149 1 15 1 150 1 184 1 318 1 104 3 232 1 110 30 159 13 161 1 117 17 191 1 192 1 62 1 194 2 63 1 196 3 282 1 328 2 329 1 25 3 27 1 240 1 243 1 284 2 170 4 246 1 73 1 248 2 
298 4 130 1 133 1 251 1 88 2 137 1 11 2 264 1 50 2 267 1 149 1 184 2 104 2 232 2 110 11 159 5 117 6 191 1 194 1 196 1 25 1 329 1 328 1 284 1 170 2 72 1 246 2 248 1 
298 2 130 1 84 1 88 2 137 1 11 2 264 2 50 1 51 1 267 2 149 1 184 1 318 1 104 2 232 1 110 16 159 7 117 9 161 1 191 1 194 1 196 1 282 1 25 2 243 1 284 2 170 2 246 1 73 1 248 2 
298 2 83 1 37 1 178 1 214 2 9 1 10 1 312 1 95 2 97 1 50 1 227 1 148 2 184 1 16 1 230 1 321 1 109 2 232 1 110 2 190 1 234 1 159 1 275 1 160 1 59 2 117 1 325 1 164 2 280 2 281 1 64 2 123 2 244 1 246 1 205 2 
188 1 109 2 157 1 134 1 254 1 305 2 212 1 236 1 164 2 142 1 221 1 330 1 97 1 123 1 316 1 171 1 247 1 127 1 205 2 
109 1 134 1 254 1 305 2 212 1 236 1 164 1 142 1 330 1 263 1 97 1 123 1 316 1 171 1 247 1 127 1 205 1 
109 1 20 1 87 1 5 1 214 1 164 1 280 1 221 1 330 1 97 1 242 1 123 1 31 1 205 1 
109 1 157 1 134 1 254 1 305 2 212 1 236 1 164 1 142 1 221 1 330 1 97 1 123 1 316 1 171 1 247 1 127 1 205 1 
162 1 
228 1 208 1 289 1 86 1 57 1 29 1 114 1 
151 1 
109 1 164 1 205 1 31 1 151 1 
151 1 
35 1 210 1 163 1 151 1 
208 1 151 1 
228 2 88 1 89 1 278 1 65 2 69 1 170 1 11 1 289 1 
56 1 35 1 210 1 289 1 114 1 294 1 
108 1 109 1 164 1 151 1 205 1 31 1 
298 2 82 1 303 1 255 1 178 1 214 1 93 2 140 1 312 1 47 1 97 1 50 1 148 3 184 1 16 1 54 1 102 1 109 1 232 1 110 1 159 1 59 2 160 1 164 1 280 1 64 3 123 1 70 2 246 1 333 2 205 1 31 1 
151 1 
239 1 144 1 182 1 
32 1 239 1 168 1 144 1 3 1 
239 1 144 1 182 1 
239 1 144 1 182 1 
239 1 144 1 258 1 
239 1 144 1 258 1 
239 1 144 1 258 1 
239 1 144 1 
126 1 61 1 
298 2 251 2 137 1 11 1 50 1 15 1 184 1 150 2 104 1 232 1 110 8 159 4 117 4 192 1 62 1 63 1 196 1 282 1 240 1 27 1 284 1 246 1 248 1 
298 4 251 3 88 1 137 1 44 1 11 2 50 2 15 1 150 2 184 2 104 2 232 2 110 11 159 5 117 6 192 1 62 1 63 1 196 1 282 1 329 1 328 1 27 1 240 1 284 1 170 1 246 2 248 1 
298 4 84 1 251 1 88 2 44 1 137 1 11 2 50 2 51 1 184 2 318 1 104 1 232 2 110 10 159 4 117 6 161 1 194 1 282 1 196 1 328 1 284 1 170 2 246 2 248 1 
298 4 84 1 88 2 137 1 44 1 11 2 50 2 51 1 184 2 318 1 104 1 232 2 110 10 159 4 117 6 161 1 194 1 282 1 196 1 284 1 170 2 246 2 248 1 
298 2 251 2 137 1 11 1 50 1 15 1 184 1 150 2 104 1 232 1 110 8 159 4 117 4 192 1 62 1 63 1 196 1 282 1 240 1 27 1 284 1 246 1 248 1 
298 2 84 1 251 1 88 2 137 1 11 2 50 1 51 1 184 1 318 1 104 1 232 1 110 10 159 4 117 6 161 1 194 1 282 1 196 1 328 1 284 1 170 2 246 1 248 1 
298 4 84 1 88 2 44 1 137 1 11 2 50 2 51 1 184 2 318 1 104 1 232 2 110 10 159 4 117 6 161 1 194 1 282 1 196 1 284 1 170 2 246 2 248 1 
173 1 298 6 84 1 251 2 88 2 137 1 11 2 50 3 51 1 184 3 318 1 104 1 232 3 110 9 159 2 117 7 161 1 282 1 328 2 284 1 170 2 72 1 246 3 248 1 
251 6 110 7 159 4 117 3 192 1 62 1 63 3 196 1 328 3 240 2 27 3 11 1 150 3 
298 4 84 1 88 2 137 1 11 2 50 2 51 1 184 2 318 1 104 1 232 2 110 10 159 4 117 6 161 1 194 1 282 1 196 1 284 1 170 2 72 1 246 2 248 1 
173 1 298 4 251 3 232 2 110 8 159 4 117 4 192 1 62 1 63 1 196 1 328 1 240 1 27 1 11 1 50 2 246 2 15 1 150 2 184 2 
251 2 110 6 57 1 159 3 117 3 192 1 62 1 63 1 196 1 240 1 27 1 11 1 15 1 150 2 
298 2 232 1 110 2 88 1 117 2 44 1 170 1 11 1 50 1 246 1 184 1 
196 1 328 1 329 1 104 2 251 1 11 1 170 1 284 1 110 7 88 1 159 4 117 3 194 1 248 1 
173 1 298 2 251 8 88 2 222 1 11 5 50 1 13 1 15 1 150 4 184 1 104 2 232 1 110 23 159 10 117 13 192 1 62 2 194 1 63 2 196 4 328 4 329 1 27 2 240 1 170 2 284 2 290 1 246 1 
104 1 110 1 159 1 
284 1 110 1 117 1 
251 1 110 6 159 3 88 1 117 3 194 1 196 1 328 1 170 1 11 1 225 1 
298 2 84 1 251 1 88 2 137 1 11 2 50 1 51 1 184 1 318 1 104 1 232 1 110 10 159 4 117 6 161 1 194 1 282 1 196 1 328 1 284 1 170 2 246 1 248 1 
251 2 110 6 159 3 117 3 62 1 63 1 196 1 328 1 27 1 11 1 150 1 
173 1 298 2 251 2 232 1 110 3 159 2 117 1 192 1 63 1 328 1 27 1 240 1 314 1 50 1 246 1 150 1 184 1 
298 2 232 1 251 5 110 10 159 5 117 5 62 1 137 1 63 2 196 2 328 2 27 2 11 2 50 1 290 1 246 1 184 1 150 3 
298 2 232 1 110 2 88 1 117 2 137 1 11 1 50 1 246 1 184 1 
298 2 232 1 110 2 88 1 117 2 137 1 170 1 11 1 50 1 246 1 184 1 
173 1 298 6 232 3 251 2 110 3 159 2 117 1 137 1 63 1 328 1 27 1 314 1 50 3 72 1 246 3 184 3 150 1 
173 2 298 10 251 9 88 3 44 1 137 1 220 1 11 5 314 1 50 5 15 1 150 4 184 5 104 4 232 5 110 34 159 18 158 1 117 16 192 1 235 1 62 2 194 3 63 3 196 5 329 1 328 5 27 3 240 1 284 3 170 3 72 1 246 5 248 1 
283 1 47 1 81 1 59 1 148 1 64 1 8 1 
81 1 59 1 46 1 8 1 64 1 24 1 283 1 47 1 317 1 148 1 17 1 186 1 
97 1 242 1 109 1 123 1 20 1 57 1 214 1 164 1 280 1 205 1 31 1 
102 1 109 1 82 1 59 1 178 1 214 1 164 1 280 1 64 2 47 1 97 1 123 1 70 1 146 1 148 2 333 1 31 1 205 1 
0 1 33 1 82 1 178 2 214 3 47 1 97 1 146 1 148 1 52 1 101 1 102 1 109 1 111 1 113 2 59 1 164 1 280 2 64 1 123 1 198 1 70 1 333 1 205 1 
0 1 33 1 82 1 41 1 178 2 214 3 47 1 97 1 146 1 148 1 52 1 101 1 109 1 111 1 113 2 59 1 164 1 280 2 64 1 123 1 198 1 70 1 333 1 205 1 
249 1 299 1 33 1 35 2 210 2 303 1 178 1 214 4 93 1 97 1 49 1 148 1 269 1 52 1 56 1 109 1 273 1 111 1 113 1 114 1 59 1 276 1 164 1 280 1 64 1 122 1 241 1 123 1 70 1 289 1 333 1 205 1 
249 1 299 1 33 1 35 2 210 2 303 1 178 1 214 4 93 1 97 1 49 1 148 1 52 1 56 1 109 1 111 1 113 1 114 1 59 1 276 1 164 1 280 1 64 1 122 1 241 1 123 1 70 1 289 1 332 1 333 1 205 1 
97 1 109 1 123 1 307 1 164 1 205 1 
188 1 109 3 230 2 37 1 40 1 178 2 325 1 164 3 214 3 280 3 195 1 10 1 197 1 97 2 123 4 244 2 266 1 31 2 205 3 
82 1 251 2 178 1 97 1 11 1 184 2 15 1 102 1 188 1 109 1 110 6 117 3 192 1 281 1 280 1 196 1 27 1 123 1 205 1 128 1 298 4 132 1 36 1 214 1 309 1 140 1 312 2 47 2 50 2 146 1 227 1 148 2 150 2 54 1 155 1 232 2 159 3 59 1 160 2 164 1 62 1 64 2 63 1 240 1 70 1 246 2 333 1 
34 1 109 1 108 1 35 1 210 1 115 1 164 1 205 1 31 1 151 1 
249 1 188 1 320 1 109 2 178 1 307 1 164 2 214 2 280 1 195 1 97 1 123 2 205 2 
270 1 188 1 109 4 20 1 164 4 214 1 280 1 216 1 242 1 97 1 123 1 31 1 205 4 
33 1 109 2 230 1 37 1 21 1 178 1 164 2 325 1 214 1 280 1 97 1 123 2 244 1 205 2 
97 1 109 1 123 1 254 1 305 1 171 1 247 1 164 1 205 1 31 1 
188 1 230 1 109 2 321 1 37 1 178 1 164 2 236 1 214 2 325 1 280 2 10 1 97 1 123 2 244 1 205 2 
188 1 230 1 109 2 37 1 40 1 178 1 164 2 214 2 325 1 280 2 10 1 97 1 123 2 244 1 31 1 205 2 
188 1 230 1 109 2 37 1 178 1 164 2 214 2 325 1 280 2 10 1 167 1 97 1 123 2 244 1 31 1 205 2 
82 1 41 1 178 1 214 1 47 1 97 1 146 1 148 2 109 1 113 1 59 1 164 1 280 1 64 2 123 1 70 1 198 1 333 1 205 1 31 1 
33 1 109 1 230 1 178 1 164 1 214 1 280 1 195 1 97 1 123 2 244 1 266 1 205 1 
190 1 233 1 275 1 59 1 9 1 64 1 219 1 26 1 148 1 
233 1 200 1 147 1 
219 1 47 1 26 1 233 1 277 1 
0 1 299 1 35 2 210 2 303 1 219 1 93 1 223 1 49 1 147 1 12 1 148 1 101 1 233 1 115 1 113 2 114 1 59 1 277 1 64 1 237 1 122 1 26 1 241 1 70 1 289 1 200 1 333 1 
57 1 304 1 291 1 268 1 
55 1 180 1 209 1 285 1 304 1 291 1 268 1 
55 1 67 1 53 1 
55 3 103 1 297 2 129 1 209 1 304 1 43 1 180 3 285 1 124 1 291 1 268 1 
55 2 180 2 209 1 285 1 265 1 274 1 304 1 291 1 268 1 
55 1 78 1 209 1 304 1 305 1 43 1 180 1 142 1 285 1 315 1 247 1 
55 1 180 1 209 1 285 1 304 1 268 1 43 1 
55 1 180 1 209 1 285 1 291 1 268 2 43 1 
55 2 300 1 209 2 304 1 43 1 165 1 311 1 180 2 285 2 268 1 
55 1 209 1 43 1 179 1 180 1 285 1 286 1 291 1 268 1 
55 2 209 1 304 1 305 2 43 1 261 1 180 2 142 1 285 1 265 1 291 1 171 1 316 1 247 1 268 1 
55 4 209 2 231 1 274 1 304 2 119 1 43 1 180 4 285 2 265 2 291 1 315 1 268 1 
55 1 180 1 209 1 285 1 304 1 291 1 268 1 43 1 
297 1 103 1 55 4 209 1 231 1 304 3 180 4 285 1 124 1 286 1 265 2 291 2 315 1 268 2 
55 2 250 1 209 1 229 1 304 1 43 1 180 2 285 1 265 1 291 1 268 1 295 1 
103 1 55 3 297 2 209 1 304 1 43 1 180 3 285 1 124 2 100 1 291 1 268 1 
176 1 304 2 38 1 327 2 
94 1 55 1 180 1 209 1 285 1 43 1 
55 1 209 1 306 1 43 1 180 1 285 1 286 1 291 1 268 1 
121 1 
55 1 180 1 209 1 285 1 304 1 291 1 268 1 43 1 
297 1 55 2 180 2 209 1 285 1 304 1 291 1 306 1 268 1 43 1 
231 1 286 1 304 1 315 1 
304 1 268 1 

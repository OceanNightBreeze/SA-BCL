#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) (9,122,200,251) 191 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) (9,122,200,251) 191 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (278,315) (278,315) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (278,315) (278,315) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (278,315) (278,315) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (278,315) (278,315) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) 267 94 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) 155 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (33,275) (188,231) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 1 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (33,275) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) 155 220 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 310 3 142 (184,292) 150 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (33,275) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 136 46 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 136 46 128 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 310 3 37 247 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 310 3 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 310 39 30 (145,294) (201,205) (201,205) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 310 39 30 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (33,275) (188,231) (188,231) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 49 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 1 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) (59,132) (14,177) 116 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 310 3 142 (184,292) 150 131 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) (59,132) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 245 73 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 245 73 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 245 73 43 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 245 73 43 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 310 39 30 (145,294) (145,294) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) 155 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 310 3 37 296 280 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 233 4 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 310 39 30 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 136 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 31 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 310 3 142 (184,292) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 308 (184,292) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 308 (250,304) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 310 3 37 17 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 310 3 142 (250,304) 281 (59,132) (59,132) (14,177) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 308 (250,304) 22 123 (14,177) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 310 3 37 296 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 310 39 30 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 310 3 98 134 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 310 279 82 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 310 279 76 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 310 279 84 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 310 3 142 (184,292) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 310 3 37 17 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) 267 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) 267 268 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (5,95,185,316) (5,95,185,316) (9,122,200,251) (9,122,200,251) (9,122,200,251) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 86 1 5 1 316 2 9 1 191 1 185 1 44 1 
95 1 86 1 5 1 316 2 9 1 191 1 185 1 44 1 
111 1 86 1 5 1 315 1 316 1 260 1 278 1 185 1 44 1 
111 1 86 1 5 1 315 1 316 1 260 1 278 1 185 1 44 1 
111 1 86 1 5 1 315 1 316 1 260 1 278 1 185 1 44 1 
111 1 86 1 5 1 315 1 316 1 260 1 278 1 185 1 44 1 
94 1 95 1 86 1 5 1 267 1 316 2 185 1 44 1 
2 1 166 1 5 1 77 1 111 1 260 1 44 1 175 1 86 2 141 1 16 1 316 2 20 1 320 1 299 1 185 1 
86 1 5 1 316 1 117 1 185 1 44 1 
239 1 
276 1 
207 2 313 2 210 2 25 2 163 2 221 1 283 2 243 1 
3 1 281 1 283 1 243 1 155 1 119 2 12 2 51 1 250 1 163 1 207 1 132 1 210 1 257 1 25 1 60 1 261 1 262 1 32 2 66 1 310 1 313 1 142 1 
207 1 313 1 210 1 231 1 25 1 163 1 283 1 33 1 243 1 
210 1 135 1 283 1 213 1 214 1 85 1 313 1 140 1 176 1 179 1 162 1 105 1 182 1 93 1 
207 1 210 1 25 1 135 1 283 1 213 1 214 1 85 1 313 1 179 2 163 1 162 1 105 1 182 2 93 1 
179 1 258 1 182 1 144 1 171 1 
85 1 228 1 277 1 179 2 258 1 182 2 144 1 93 1 
179 1 182 1 144 1 
207 1 210 1 231 1 258 1 25 1 188 1 283 1 33 1 243 1 313 1 179 1 182 1 163 1 
85 1 
85 1 228 1 179 2 258 1 182 2 144 1 93 1 225 1 
0 1 228 1 167 1 258 2 62 2 63 1 192 2 100 2 85 1 248 1 34 1 179 5 103 1 182 5 164 1 297 1 144 2 165 1 93 1 
239 1 
207 1 210 2 25 1 283 2 313 2 104 1 163 1 221 2 72 1 
194 1 159 1 153 1 
310 1 119 1 12 1 1 1 3 1 142 1 51 1 60 1 250 1 281 1 32 1 66 1 
210 1 3 1 25 1 60 1 281 1 283 1 286 1 242 1 66 1 32 1 310 1 119 1 313 1 12 1 142 1 51 1 250 1 163 1 
207 1 313 3 210 3 25 3 163 3 221 1 283 3 242 1 
313 1 210 1 25 1 163 1 283 1 33 1 
207 1 313 1 210 1 25 1 104 1 162 1 163 1 283 1 72 1 
3 1 281 1 283 3 242 1 286 1 243 1 155 1 119 1 12 1 51 1 250 1 163 3 162 1 132 1 207 2 210 3 25 3 60 1 135 1 66 1 32 1 213 1 310 1 214 1 313 3 179 1 142 1 220 1 105 1 182 1 321 1 72 1 
313 2 176 1 210 2 24 1 25 1 163 1 221 1 283 2 242 1 
207 1 109 1 210 3 25 3 135 1 283 3 286 1 242 2 213 1 214 1 85 1 313 3 179 1 182 1 105 1 162 1 163 3 321 1 72 1 
207 1 210 2 25 2 153 1 283 2 242 1 313 2 159 1 163 2 72 1 
310 1 119 1 12 1 3 1 142 1 51 1 60 1 250 1 281 1 32 1 66 1 
310 1 119 1 12 1 3 1 150 1 142 1 51 1 60 1 184 1 32 1 66 1 
186 1 40 1 27 1 285 1 194 1 287 2 311 1 290 1 121 1 69 1 159 1 89 2 272 1 71 1 106 1 224 2 
313 1 210 1 25 1 135 1 162 1 163 1 283 1 64 1 
207 1 210 5 24 1 25 4 283 5 242 2 286 1 313 5 176 1 143 1 163 4 221 1 72 1 91 1 
313 1 210 1 25 1 163 1 283 1 33 1 
198 1 206 1 
198 1 206 1 
36 1 154 1 
36 1 154 1 
36 1 154 1 
48 1 198 1 206 1 
48 1 198 1 206 1 
48 1 198 1 206 1 
198 1 253 1 206 1 
198 1 253 1 206 1 
198 1 253 1 206 1 
198 1 309 1 206 1 
13 1 198 2 36 1 173 1 154 1 206 2 
195 1 46 1 58 1 198 1 136 1 206 1 
195 1 46 1 58 1 179 1 198 1 128 1 182 1 136 1 206 1 
149 1 16 1 299 1 
77 1 16 1 299 1 
149 2 77 1 16 3 41 1 151 1 26 1 
149 1 77 1 16 2 151 1 26 1 193 1 
149 1 77 1 16 2 151 2 26 1 
187 1 228 1 107 1 231 1 188 1 238 1 190 1 283 1 241 1 243 1 192 1 85 1 88 1 126 2 161 1 163 1 164 1 93 1 207 1 57 1 210 1 167 2 258 4 25 1 61 1 306 1 62 1 33 1 100 1 313 1 314 1 179 5 103 1 182 5 144 1 276 1 
179 1 258 1 197 1 182 1 
186 1 107 1 187 1 231 1 188 1 238 1 190 2 283 1 243 1 192 1 83 1 85 2 248 1 88 1 126 1 161 2 163 1 164 3 93 1 207 1 210 1 57 1 167 2 258 2 25 1 306 1 61 1 62 1 33 1 100 1 313 1 314 1 179 3 182 3 106 1 276 3 
231 1 238 1 243 1 83 2 85 3 248 1 88 2 161 4 163 1 164 5 93 1 167 4 258 3 25 1 33 1 100 1 179 4 182 4 106 2 276 6 186 2 187 2 107 1 113 1 188 1 190 4 283 1 192 1 126 2 207 1 301 1 57 2 210 1 211 1 61 2 306 1 62 1 313 1 314 1 
239 1 
308 1 
28 1 
310 1 
310 1 247 1 3 1 37 1 
310 1 3 1 
68 1 
233 1 240 4 137 3 138 1 67 1 287 7 88 1 89 3 219 1 52 1 53 1 106 1 183 2 54 1 202 1 204 2 55 1 
233 1 240 4 137 3 138 1 67 1 287 7 88 1 89 3 219 1 52 1 53 1 106 1 183 2 54 1 202 1 204 2 55 1 
233 1 240 4 137 3 138 1 67 1 174 1 287 7 88 1 89 3 219 1 52 1 53 1 106 1 183 2 54 1 202 1 204 2 55 1 
287 1 67 2 317 1 52 1 240 1 204 1 138 1 
38 1 40 2 232 1 233 1 240 5 285 2 287 9 88 1 89 4 53 1 54 1 202 1 204 2 55 1 27 2 138 1 137 4 67 1 219 1 318 1 71 2 106 1 183 3 224 4 
2 1 149 1 5 1 111 1 77 1 78 1 41 1 44 1 119 1 244 1 12 1 288 1 289 1 291 1 86 2 158 1 16 2 51 1 20 1 252 1 299 1 95 1 212 1 60 1 32 1 217 1 218 1 316 2 320 1 185 1 
2 1 75 1 149 1 5 1 111 1 77 1 41 1 119 1 244 1 12 1 288 1 289 1 291 1 86 3 158 1 16 2 51 1 20 1 252 1 299 1 23 1 95 2 212 1 60 1 32 1 217 1 316 3 70 1 320 1 185 1 
2 1 75 1 149 1 111 1 77 1 41 1 119 1 244 1 12 1 289 1 291 1 86 2 158 1 16 2 51 1 20 1 252 1 299 1 95 2 23 1 60 1 32 1 217 1 316 2 320 1 
39 1 111 2 5 1 96 1 30 1 66 1 32 1 310 1 119 1 12 1 244 2 86 1 217 2 158 2 294 1 316 1 70 1 201 1 205 1 185 1 
75 1 149 1 77 1 212 1 111 1 5 1 41 1 60 1 32 1 44 1 119 1 289 1 288 1 12 1 244 1 291 1 86 1 16 2 158 1 217 1 218 1 51 1 316 1 252 1 299 1 185 1 
115 1 
231 1 243 1 11 1 85 1 15 1 18 1 163 1 162 1 164 1 93 1 255 3 167 1 25 1 33 1 100 1 176 1 179 2 103 1 105 1 182 2 108 1 188 1 189 1 283 2 192 1 120 1 199 1 295 1 125 2 203 1 207 1 209 2 210 2 303 1 305 1 135 1 62 1 139 1 213 1 214 1 313 2 140 1 144 1 146 1 222 1 
231 1 243 1 11 1 85 1 15 1 18 1 163 1 162 1 164 1 93 1 255 3 167 1 25 1 33 1 100 1 176 1 179 2 103 1 105 1 182 2 108 1 188 1 189 1 283 2 192 1 120 1 295 1 199 1 125 2 203 1 207 1 209 2 210 2 303 1 305 1 135 1 62 1 139 1 213 1 214 1 313 2 140 1 144 1 146 1 222 1 
108 1 112 1 236 1 189 1 283 1 192 1 125 1 199 1 162 1 164 1 209 1 210 1 255 2 303 1 167 1 305 1 135 1 62 1 100 1 213 1 214 1 313 1 140 1 176 1 179 2 103 1 182 2 105 1 146 1 
39 1 228 1 167 1 79 1 62 1 238 1 30 1 192 1 100 1 66 2 32 2 310 1 119 2 12 2 179 2 271 1 103 1 182 2 164 1 298 1 144 2 
108 1 228 1 189 1 283 1 199 1 162 1 210 1 255 2 305 1 135 1 213 1 139 1 214 1 313 1 176 1 140 1 179 3 182 3 105 1 144 2 146 1 225 1 
108 1 228 1 189 1 283 1 120 1 85 1 199 1 162 1 93 1 210 1 255 3 305 1 135 1 213 1 214 1 313 1 176 1 140 1 179 3 182 3 105 1 144 1 146 1 225 1 
228 1 108 1 189 1 283 1 11 1 120 1 85 1 199 1 162 1 93 1 210 1 255 3 305 1 135 1 213 1 139 1 214 1 313 1 176 1 140 1 179 3 182 3 105 1 144 2 146 1 225 1 
228 1 231 1 243 1 11 2 85 1 15 1 18 1 163 1 162 1 164 1 93 1 255 2 167 1 25 1 33 1 100 1 176 1 266 1 179 3 103 1 105 1 182 3 108 1 188 1 189 1 283 2 192 1 199 1 295 1 125 2 203 1 207 1 209 2 210 2 303 1 305 1 135 1 62 1 139 2 213 1 214 1 313 2 140 1 144 3 146 1 222 1 225 1 
108 1 236 1 189 1 283 1 192 1 125 1 199 1 18 1 162 1 164 1 209 1 210 1 255 2 303 1 167 1 305 1 135 1 62 1 100 1 213 1 214 1 313 1 140 1 176 1 179 2 103 1 182 2 105 1 146 1 
108 1 231 1 188 1 189 1 283 2 243 1 192 1 85 1 125 2 18 1 199 1 295 1 163 1 162 1 164 1 203 1 93 1 207 1 209 2 210 2 255 2 303 1 167 1 305 1 25 1 135 1 62 1 33 1 100 1 213 1 214 1 313 2 176 1 140 1 179 2 103 1 182 2 105 1 222 1 146 1 
108 1 231 1 188 1 189 1 283 2 243 1 192 1 85 1 125 2 18 1 199 1 295 1 163 1 162 1 164 1 203 1 93 1 207 1 209 2 210 2 255 2 303 1 167 1 305 1 25 1 135 1 62 1 33 1 100 1 213 1 214 1 313 2 176 1 140 1 179 2 103 1 182 2 105 1 222 1 146 1 
108 1 255 2 210 1 305 1 135 1 189 1 283 1 213 1 214 1 313 1 140 1 176 1 179 2 49 1 199 1 105 1 162 1 182 2 146 1 
311 1 40 1 290 1 69 1 27 1 71 1 239 1 285 1 224 2 
40 2 153 5 237 1 80 1 240 6 285 2 118 2 287 9 194 7 290 1 293 1 159 7 88 2 89 3 127 1 162 1 254 1 57 2 61 2 307 1 27 2 311 2 216 2 180 1 71 2 221 1 275 1 224 4 
1 1 40 1 3 1 153 1 281 1 80 1 283 1 240 1 81 1 285 1 242 1 286 1 119 1 287 2 12 1 290 1 293 1 51 1 89 1 250 1 163 1 21 1 56 1 210 1 25 1 60 1 27 1 170 1 32 1 66 1 310 1 311 1 313 1 142 1 71 1 224 2 
40 1 3 1 281 1 80 1 116 1 283 1 285 1 242 1 286 1 287 1 119 1 290 1 12 1 293 1 51 1 89 1 250 1 163 1 132 1 210 1 59 1 25 1 60 1 27 1 66 1 32 1 310 1 311 1 313 1 177 1 142 1 71 1 224 2 
119 1 12 1 129 1 32 1 66 1 
186 1 40 1 153 1 80 1 283 1 240 1 285 1 194 1 287 3 290 1 159 1 88 1 89 2 163 1 207 1 210 1 57 1 25 1 61 1 27 1 137 1 311 1 313 1 215 1 71 1 183 1 106 1 72 1 224 2 
40 1 57 1 235 1 27 1 240 2 285 1 194 1 287 2 311 1 290 1 69 1 159 1 88 1 71 1 224 2 
186 1 40 1 27 1 285 1 194 1 287 2 311 1 290 1 121 1 69 1 159 1 89 2 71 1 106 1 224 2 
40 1 57 1 61 1 27 1 240 2 285 1 194 1 287 2 311 1 290 1 69 1 159 1 88 1 71 1 224 2 
129 1 
129 1 
129 1 
40 1 57 1 61 1 27 1 240 2 285 1 194 1 311 1 287 2 290 1 159 1 88 1 71 1 224 2 
310 1 132 1 119 1 12 1 3 1 142 1 51 1 60 1 250 1 281 1 32 1 66 1 
310 1 119 1 12 1 3 1 150 1 142 1 51 1 60 1 131 1 184 1 32 1 66 1 
40 1 57 1 61 1 27 1 80 1 240 2 285 1 194 1 287 2 311 1 290 1 159 1 88 1 71 1 224 2 
132 1 3 1 78 1 59 1 60 1 281 1 32 1 310 1 119 1 12 1 142 1 51 1 250 1 
40 1 110 1 153 1 80 1 283 1 240 2 285 1 287 2 194 1 290 1 88 1 159 1 163 1 202 1 207 1 210 1 57 1 25 1 61 1 27 1 137 1 311 1 313 1 71 1 72 1 224 2 
226 1 38 1 186 2 40 3 74 1 232 1 114 1 240 10 42 1 285 3 43 1 118 2 287 21 245 1 47 1 88 2 89 11 202 1 90 1 57 2 256 1 97 1 259 2 168 3 61 2 27 3 137 2 216 2 71 3 183 1 106 2 224 6 73 1 
226 1 38 1 186 2 40 3 74 1 232 1 114 1 240 10 42 1 285 3 43 1 118 2 287 21 245 1 47 1 88 2 89 11 202 1 90 1 57 2 256 1 97 1 259 2 168 3 61 2 27 3 137 2 216 2 71 3 183 1 106 2 224 6 73 1 
226 1 38 1 186 2 40 2 74 1 232 1 114 1 240 10 42 1 285 2 43 1 118 2 287 21 245 1 47 1 88 2 89 11 202 1 90 1 57 2 256 1 259 2 168 3 61 2 27 2 137 2 216 2 71 2 183 1 106 2 224 4 73 1 
226 1 38 1 186 2 40 3 74 1 232 1 114 1 240 10 42 1 285 3 43 1 118 2 287 21 245 1 47 1 88 2 89 11 202 1 90 1 57 2 256 1 97 1 259 2 168 3 61 2 27 3 137 2 216 2 71 3 183 1 106 2 224 6 73 1 
226 1 38 2 186 6 74 1 40 3 232 1 114 1 237 2 240 24 42 1 285 3 43 1 287 46 118 4 245 2 47 1 196 1 88 7 89 22 90 1 202 4 254 2 57 7 256 1 259 2 168 4 61 7 27 3 137 7 216 4 181 1 71 3 106 6 183 3 224 6 73 2 
313 1 210 1 157 1 283 1 
227 1 75 1 149 1 77 1 212 1 41 1 78 1 60 1 32 2 119 2 12 2 289 1 16 2 217 1 51 1 124 1 252 1 299 1 35 1 
75 1 149 1 77 1 212 1 41 1 60 1 32 1 119 1 12 1 289 1 16 2 217 1 51 1 252 1 299 1 35 1 92 1 
39 1 30 1 66 1 32 1 310 1 119 1 12 1 217 1 294 1 124 1 145 1 
227 1 75 1 149 1 77 1 212 1 41 1 60 1 32 1 119 1 12 1 289 1 16 2 217 1 124 1 51 1 252 1 299 1 35 1 
270 1 
132 1 207 1 210 1 3 1 25 1 60 1 281 1 283 1 243 1 66 1 32 1 155 1 310 1 119 1 313 1 12 1 142 1 51 1 250 1 163 1 
167 1 62 1 79 1 238 1 192 1 100 1 85 1 103 1 161 1 164 1 276 1 93 1 
239 1 
228 1 229 1 192 1 83 1 85 1 18 1 164 1 93 1 167 1 62 1 169 1 100 1 179 1 103 1 182 1 144 1 276 1 
3 1 62 1 280 1 192 1 100 1 66 1 32 1 310 1 119 1 12 1 103 1 296 1 37 1 
226 1 186 4 74 1 237 1 190 8 42 1 192 1 118 2 88 4 161 8 164 11 90 1 254 1 57 4 167 7 256 1 259 1 61 4 62 1 100 1 216 2 103 1 106 4 276 5 
167 2 4 1 233 1 62 1 192 1 100 1 179 1 88 1 103 1 219 1 273 1 182 1 164 2 106 1 54 1 203 1 
0 1 167 1 62 1 192 1 100 1 85 1 34 1 103 1 164 1 93 1 
57 1 167 2 88 1 61 1 161 1 190 1 276 1 
85 1 228 1 179 1 182 1 144 1 93 1 
39 1 228 1 79 1 238 1 192 1 119 2 12 2 19 1 298 1 164 1 167 1 62 1 30 1 100 1 32 2 66 2 310 1 179 1 271 1 103 1 182 1 144 2 
195 1 136 1 
195 1 136 1 
195 1 136 1 
195 1 136 1 
195 1 136 1 
195 1 136 1 
195 1 136 1 
195 1 136 1 
198 1 206 1 
38 1 40 2 233 1 27 2 240 4 285 2 137 3 287 8 88 1 89 4 219 1 71 2 53 1 106 1 183 2 54 1 202 1 204 1 224 4 55 1 
239 1 
186 1 40 1 57 1 61 1 27 1 240 2 285 1 137 2 287 4 101 1 88 1 89 2 71 1 183 1 106 1 202 1 224 2 
186 2 57 2 259 1 61 2 237 1 240 6 137 2 118 2 287 12 216 2 88 2 89 6 183 1 106 2 202 1 254 1 
186 2 38 2 40 2 233 1 237 1 240 11 285 2 287 23 118 2 88 3 89 12 53 1 54 2 202 4 204 1 55 1 254 1 57 2 61 2 307 1 27 2 137 9 216 2 219 2 71 2 106 3 183 5 224 4 223 1 
287 1 118 1 89 1 
287 1 216 1 240 1 
186 1 40 1 57 1 7 1 61 1 27 1 240 3 285 1 137 3 287 6 101 1 88 1 89 3 71 1 106 1 183 2 202 1 224 2 
226 1 186 4 40 1 74 1 232 1 237 1 240 11 42 1 285 1 287 22 118 2 88 4 89 11 90 1 202 2 254 1 57 4 256 1 259 1 61 4 27 1 137 4 216 2 71 1 106 4 183 2 224 2 
287 6 233 1 88 1 89 3 219 1 183 1 54 1 106 1 202 1 240 3 137 2 
38 1 40 1 27 1 240 1 285 1 137 2 287 3 89 2 219 1 71 1 53 1 183 1 54 1 202 1 55 1 223 1 224 2 
38 1 186 1 226 1 40 2 74 1 232 1 240 7 285 2 42 1 287 11 118 1 88 2 89 4 202 1 90 1 57 2 256 1 259 1 61 2 27 2 137 2 216 1 71 2 106 1 183 1 224 4 
40 2 233 1 232 1 240 6 285 2 287 11 118 2 88 2 89 5 53 1 54 1 90 1 202 1 204 1 55 1 254 1 57 1 259 1 61 1 27 2 137 3 101 1 216 1 219 1 71 2 106 1 183 2 224 4 
226 1 38 1 186 4 40 3 74 1 232 1 237 1 240 11 42 1 285 3 287 23 118 2 88 4 89 12 90 1 202 2 254 1 57 4 256 1 259 1 61 4 27 3 137 4 101 1 216 2 71 3 106 4 183 2 224 6 
38 1 226 1 186 3 40 3 74 1 232 1 237 1 240 12 42 1 285 3 287 21 118 2 88 4 89 9 90 1 202 2 254 1 57 4 256 1 259 1 61 4 27 3 137 4 101 1 216 2 71 3 106 3 183 2 224 6 
38 1 186 1 226 1 40 2 74 1 232 1 240 7 285 2 42 1 287 11 118 1 88 2 89 4 202 1 90 1 57 2 256 1 259 1 61 2 27 2 137 2 216 1 71 2 106 1 183 1 224 4 
226 1 186 4 40 1 74 1 232 1 237 1 240 11 42 1 285 1 287 22 118 2 88 4 89 11 90 1 202 2 254 1 57 4 256 1 259 1 61 4 27 1 137 4 216 2 71 1 106 4 183 2 224 2 
226 1 38 2 186 3 74 1 40 4 232 1 237 1 240 12 42 1 285 4 287 22 118 2 88 4 89 10 90 1 202 2 254 1 57 4 256 1 259 1 61 4 27 4 137 4 101 1 216 2 71 4 106 3 183 2 224 8 
186 1 40 2 232 1 240 3 285 2 287 7 118 2 88 1 89 4 90 1 254 1 57 1 97 1 259 1 61 1 27 2 137 1 216 1 71 2 106 1 183 1 224 4 
233 1 240 3 137 6 287 7 88 1 89 4 219 3 53 1 106 1 54 3 183 3 202 3 55 2 
186 1 40 2 232 1 240 3 285 2 287 7 118 2 88 1 89 4 90 1 254 1 57 1 97 1 259 1 61 1 27 2 137 1 216 1 71 2 106 1 183 1 224 4 
40 1 4 1 232 1 233 1 27 1 240 5 285 1 137 5 287 10 88 2 89 5 219 2 71 1 54 2 183 3 106 2 202 2 224 2 
40 1 57 1 232 1 27 1 240 2 285 1 137 1 287 2 88 1 71 1 202 1 224 2 
186 1 40 1 57 1 232 1 61 1 27 1 240 2 285 1 137 2 287 4 88 1 89 2 71 1 183 1 106 1 202 1 224 2 
38 1 40 3 97 1 232 1 27 3 240 1 285 3 137 2 287 3 89 2 219 1 71 3 54 1 183 1 202 1 223 1 224 6 
38 1 40 4 4 1 233 1 232 1 152 1 240 7 285 4 118 1 287 15 88 2 89 8 53 1 54 2 202 3 55 1 97 1 259 1 27 4 137 6 101 1 216 1 219 2 71 4 106 2 183 3 224 8 223 1 
31 1 
264 1 156 1 8 1 282 1 10 1 
119 1 12 1 239 1 32 1 66 1 
210 1 3 1 25 1 60 1 283 1 242 1 66 1 32 1 310 1 119 1 313 1 12 1 142 1 51 1 250 1 163 1 
210 1 3 1 25 1 60 1 283 1 172 1 242 1 32 1 310 1 119 1 313 1 12 1 142 1 51 1 250 1 163 1 
210 1 3 1 25 1 60 1 283 1 172 1 242 1 32 1 310 1 119 1 313 1 12 1 142 1 51 1 163 1 184 1 
119 1 12 1 292 1 179 1 182 1 308 1 172 1 32 1 
119 1 12 1 304 1 179 1 182 1 308 1 172 1 32 1 
119 1 12 1 312 1 51 1 60 1 32 1 
310 1 119 1 12 1 3 1 17 1 37 1 32 1 66 1 
40 1 3 1 78 1 80 1 281 1 283 1 285 1 242 1 119 1 290 1 12 1 51 1 250 1 163 1 132 1 210 1 25 1 59 1 60 1 27 1 32 1 310 1 311 1 313 1 265 1 177 1 142 1 71 1 224 2 
304 1 258 1 62 1 308 1 192 1 100 1 66 1 32 1 119 1 12 1 14 1 123 1 179 1 103 1 19 1 182 1 22 1 
310 1 119 1 12 1 312 1 3 1 296 1 37 1 32 1 
310 1 39 1 119 2 12 2 78 1 30 1 32 2 66 1 
310 1 119 1 45 1 12 1 3 1 98 1 134 1 32 1 
119 1 12 1 77 1 16 1 51 1 60 1 252 1 299 1 32 1 66 1 
310 1 119 2 12 2 75 1 78 1 279 1 82 1 32 2 
310 1 119 2 12 2 76 1 78 1 279 1 32 2 66 1 
310 1 84 1 119 2 12 2 78 1 279 1 32 2 66 1 
210 1 3 1 25 1 60 1 283 1 242 1 66 1 32 1 310 1 119 1 313 1 12 1 142 1 51 1 163 1 184 1 
310 1 119 1 12 1 3 1 17 1 37 1 172 1 32 1 
133 1 148 1 230 1 221 1 319 1 
208 1 302 1 133 2 230 2 148 2 258 1 135 1 213 1 214 1 85 1 178 1 179 2 105 1 162 1 182 2 221 1 319 1 321 1 93 1 
133 1 230 1 157 1 319 1 
208 1 302 1 319 1 
95 1 2 1 5 1 6 1 44 1 175 1 86 3 316 3 20 1 320 1 185 1 
246 1 2 1 87 1 249 1 
2 1 20 1 
239 1 
2 1 86 1 5 1 316 1 20 1 320 1 185 1 
244 1 111 1 86 1 
2 1 5 1 44 1 175 2 86 3 316 3 50 1 20 1 130 1 320 1 300 1 185 1 
95 1 86 1 5 1 267 1 316 2 185 1 
2 1 149 1 86 1 5 1 16 1 87 1 316 1 251 1 299 1 185 1 44 1 
2 1 86 1 5 1 316 1 20 1 185 1 44 1 
86 1 5 1 316 1 20 2 320 1 185 1 44 1 
2 1 5 2 44 1 86 2 269 1 316 2 102 1 160 1 20 1 185 2 
2 2 95 2 6 1 86 3 5 1 87 1 249 1 316 3 20 1 320 1 284 1 185 1 44 1 
2 1 95 1 149 1 77 1 5 1 41 1 44 1 86 2 16 2 316 2 20 1 274 1 320 1 299 1 185 1 
95 1 86 1 5 1 267 1 268 1 316 2 185 1 44 1 
2 1 86 1 5 1 316 1 20 1 320 1 185 1 44 1 
95 2 2 3 5 1 175 1 246 1 86 4 87 1 249 1 50 1 316 4 20 2 130 1 320 2 185 1 
95 1 122 1 86 1 5 1 316 2 9 1 200 1 185 1 44 1 
2 1 5 1 234 1 44 1 175 2 86 3 316 3 50 2 20 1 130 1 320 1 185 1 
2 2 29 1 263 2 65 1 
86 1 5 1 316 1 99 1 185 1 44 1 
2 1 95 1 6 1 86 2 5 1 316 2 20 1 320 1 185 1 44 1 
147 1 
2 1 86 1 5 1 316 1 20 1 320 1 185 1 44 1 

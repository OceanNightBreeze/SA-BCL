#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (238,252) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (238,252) 204 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (238,252) 204 275 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) (133,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (133,157) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) (133,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (68,103,144,199) (68,103,144,199) (68,103,144,199) 49 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 105 295 34 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 105 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (71,121) (71,121) (35,131) 179 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 177 15 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 49 1 199 1 
228 1 45 1 257 1 
215 1 0 2 257 1 
272 2 83 1 190 2 246 2 292 2 221 1 54 2 125 2 
272 2 83 1 121 1 50 1 122 1 54 2 125 3 278 1 61 1 245 1 246 2 64 1 248 1 17 1 164 1 19 1 134 1 166 1 169 2 213 1 139 2 292 2 28 1 219 1 106 1 294 1 221 1 107 2 188 1 190 3 114 1 153 2 152 1 234 1 266 2 302 1 117 1 
226 1 272 1 83 1 44 1 190 1 246 1 148 1 292 1 54 1 125 1 
82 1 272 1 83 1 137 1 176 1 44 2 45 1 290 1 292 1 257 1 54 2 125 2 12 1 226 1 190 2 246 1 148 1 96 1 115 1 66 1 156 1 
83 1 137 1 272 2 44 2 45 1 290 2 257 1 292 2 54 2 125 2 12 1 226 1 190 2 148 1 246 2 96 1 115 1 66 2 156 1 
290 1 47 1 91 1 66 1 58 1 
202 1 45 1 290 2 257 1 91 1 66 2 20 1 58 1 
290 1 66 1 58 1 
137 1 83 1 272 1 44 1 290 1 292 1 91 1 54 1 125 1 226 1 190 1 148 1 246 1 66 1 
257 1 
45 1 290 2 257 1 91 1 66 2 20 1 58 1 186 1 
236 1 272 1 83 1 196 2 44 1 118 1 45 2 2 5 91 2 54 1 200 2 125 1 58 2 127 1 14 2 246 1 97 1 18 1 249 2 66 5 20 1 165 1 214 4 137 1 171 1 290 5 292 1 257 2 142 1 220 2 226 1 190 1 36 1 148 1 301 1 300 1 154 2 155 1 
122 1 107 1 182 1 266 1 169 1 
228 1 221 1 
272 1 44 1 292 1 54 2 221 1 124 1 125 2 55 1 110 1 190 2 246 1 
180 1 53 1 183 1 
84 1 28 1 122 1 221 1 107 1 125 1 245 1 190 1 114 1 248 1 17 1 234 1 164 1 266 1 169 1 117 1 
272 3 190 3 246 3 292 1 88 1 221 1 54 3 125 3 
226 1 272 1 44 1 190 1 246 1 54 1 125 1 
272 1 44 1 292 1 54 1 55 1 125 1 110 1 190 1 246 1 
272 1 190 1 246 1 292 1 54 1 182 1 125 1 55 1 
82 1 272 1 190 2 246 1 88 1 221 1 54 2 21 1 125 2 
182 1 
272 2 88 1 292 1 53 1 54 2 55 1 125 2 183 1 190 2 246 2 
28 1 122 1 221 1 107 1 125 1 245 1 190 1 114 1 248 1 17 1 234 1 164 1 266 1 169 1 117 1 
194 1 28 1 122 1 221 1 107 1 125 1 260 1 245 1 190 1 114 1 17 1 164 1 266 1 169 1 117 1 
46 1 53 2 200 1 11 1 14 1 61 1 283 1 64 1 134 1 101 1 166 2 139 2 219 2 106 1 180 2 181 1 183 2 33 1 113 1 233 1 152 1 153 4 235 1 302 1 
225 1 
272 2 44 1 88 1 292 1 54 2 221 1 182 1 124 1 125 2 55 1 190 2 246 2 
226 1 272 1 44 1 190 1 246 1 54 1 225 1 125 1 
252 1 86 1 
252 1 86 1 
261 1 238 1 
261 1 238 1 
261 1 238 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
252 1 86 1 
227 1 252 1 86 1 204 1 
227 1 252 1 290 1 86 1 204 1 66 1 275 1 
299 1 123 1 32 1 
299 1 217 1 32 1 
161 1 149 1 217 1 3 1 123 2 32 3 
161 1 149 1 217 1 258 1 32 1 211 1 
161 2 149 1 217 1 123 1 32 2 
0 3 236 1 196 1 45 1 2 2 46 1 51 1 91 4 52 1 200 1 58 1 14 1 94 1 206 2 130 2 249 1 66 5 20 1 22 2 101 1 215 1 214 3 69 1 290 5 257 2 220 1 29 1 31 1 145 1 150 1 151 1 116 1 
0 9 236 1 196 2 85 1 45 1 2 6 46 3 47 5 91 7 52 3 200 3 58 6 14 3 206 6 130 6 97 1 163 1 66 9 99 1 249 2 20 1 101 3 212 5 215 3 214 8 69 4 290 9 257 5 220 2 29 2 185 1 231 1 150 1 116 2 80 1 
0 4 196 1 45 1 46 1 2 2 91 2 51 1 52 1 200 1 14 1 206 2 130 2 97 1 249 1 66 3 22 1 101 1 215 2 214 3 69 1 290 3 257 3 220 1 29 1 31 1 116 1 
0 7 196 1 45 1 85 1 46 2 2 4 51 1 91 3 52 2 200 2 14 2 206 4 130 4 97 1 249 1 66 4 22 2 101 2 215 3 214 5 69 2 290 4 257 4 220 1 29 1 31 1 231 1 116 1 80 1 
228 1 189 1 
75 1 28 1 
112 1 
245 1 28 1 
26 1 28 1 245 1 189 2 112 1 114 1 38 1 
245 1 28 1 114 1 
104 1 28 1 
200 2 277 1 14 2 18 1 67 1 165 1 166 4 219 5 141 1 223 1 181 3 74 1 146 1 78 1 300 1 113 2 153 9 155 1 
200 2 277 1 14 2 18 1 67 2 165 1 166 4 219 5 141 1 223 1 181 4 74 1 146 1 78 1 300 1 113 2 153 9 155 1 
200 2 277 1 14 2 18 1 67 1 165 1 166 4 140 1 219 5 141 1 223 1 181 3 74 1 146 1 78 1 300 1 113 2 153 9 155 1 
46 3 52 3 200 5 277 1 126 1 14 5 61 1 280 1 64 1 18 1 65 1 67 6 165 2 135 3 101 3 166 16 24 1 175 1 139 2 219 17 106 1 141 2 223 1 181 11 187 1 74 2 146 2 230 4 77 1 300 1 78 1 113 5 153 33 155 2 302 1 
200 2 277 1 126 1 14 2 160 1 61 2 203 1 64 2 18 1 67 2 165 1 166 5 139 4 106 2 219 6 141 1 181 5 223 1 74 1 146 1 113 3 300 1 153 11 155 1 302 2 
68 1 103 1 282 1 49 1 199 1 
68 1 103 1 282 1 199 1 157 1 
103 1 282 1 133 1 144 1 
68 1 103 1 282 1 199 1 157 1 
68 1 103 1 282 1 49 1 199 1 
224 1 
0 1 236 1 82 1 239 1 240 1 2 2 6 1 8 1 12 1 245 1 162 1 96 1 249 1 164 1 100 1 20 2 169 2 176 1 105 1 257 2 28 1 107 2 111 1 190 1 264 1 115 1 116 1 192 1 266 2 117 1 42 1 196 1 41 1 44 1 45 2 273 1 122 2 54 1 125 1 201 1 58 4 59 1 60 1 281 1 207 3 66 4 210 1 215 1 214 2 290 4 220 1 222 1 143 1 76 1 156 1 
82 1 41 1 44 1 45 2 273 1 54 1 125 1 58 2 12 1 60 1 59 1 96 1 207 2 66 3 20 1 100 1 176 1 290 3 257 2 186 1 190 1 115 1 192 1 156 1 
82 1 41 1 44 1 176 1 45 2 290 2 257 2 273 1 54 1 125 1 12 1 59 1 60 1 76 1 190 1 96 1 207 3 115 1 66 2 192 1 156 1 
82 1 41 1 44 1 45 3 273 1 54 1 125 1 58 2 12 1 60 1 59 1 96 1 207 3 66 3 20 1 100 1 176 1 290 3 257 3 143 1 186 1 190 1 76 1 115 1 192 1 156 1 
82 1 81 1 236 1 83 1 239 1 2 1 8 2 12 1 246 1 96 1 249 1 20 3 100 4 176 1 105 1 257 4 186 1 111 2 190 2 115 1 192 1 272 1 41 1 196 1 42 2 44 2 45 4 198 1 273 1 274 1 54 2 125 2 58 7 201 2 59 1 60 1 207 5 66 5 214 1 215 2 137 1 290 5 292 1 220 1 143 4 295 1 226 1 76 3 148 1 147 1 156 1 
82 1 236 1 0 2 239 1 2 1 6 1 8 2 12 1 96 1 249 1 20 2 100 2 176 1 105 1 257 4 111 2 190 1 115 1 192 1 196 1 41 1 42 2 44 1 45 3 273 1 54 1 125 1 201 2 58 4 59 1 60 1 207 4 66 4 214 1 215 2 290 4 220 1 143 2 76 2 156 1 
82 1 81 1 236 1 42 2 239 1 41 1 196 1 44 1 45 3 2 1 273 1 8 2 54 1 125 1 58 4 201 2 12 1 60 1 59 1 96 1 207 4 249 1 66 4 100 2 20 2 215 2 214 1 176 1 105 1 290 4 257 3 220 1 143 2 295 1 111 2 76 2 190 1 147 1 115 1 192 1 156 1 
82 1 81 1 236 1 42 2 239 1 41 1 196 1 44 1 45 3 2 1 273 1 8 2 54 1 125 1 58 4 201 2 12 1 60 1 59 1 96 1 207 4 249 1 66 4 100 2 20 2 215 2 214 1 176 1 105 1 290 4 257 3 220 1 143 2 295 1 111 2 76 2 190 1 147 1 115 1 192 1 156 1 
82 1 236 1 41 1 196 1 44 1 45 2 2 1 273 1 8 1 54 1 125 1 12 1 60 1 59 1 96 1 207 2 249 1 66 2 168 1 214 1 176 1 105 1 290 2 257 2 220 1 72 1 295 1 34 1 111 1 190 1 115 1 192 1 156 1 39 1 
236 1 81 1 82 1 42 2 239 1 196 1 41 1 44 1 45 3 2 1 198 1 273 1 8 2 54 1 125 1 201 2 58 5 12 1 60 1 59 1 96 1 207 5 249 1 66 4 20 2 100 3 215 2 214 1 176 1 105 1 290 4 257 3 220 1 295 1 143 3 111 2 76 3 190 1 147 1 115 1 192 1 156 1 
236 1 81 1 82 1 42 2 239 1 196 1 41 1 44 1 45 3 2 1 198 1 273 1 8 2 54 1 125 1 201 2 58 5 12 1 60 1 59 1 96 1 207 5 249 1 66 4 20 2 100 3 215 2 214 1 176 1 105 1 290 4 257 3 220 1 295 1 143 3 111 2 76 3 190 1 147 1 115 1 192 1 156 1 
236 1 82 1 41 1 196 1 44 1 45 2 2 1 273 1 8 1 54 1 125 1 12 1 60 1 59 1 96 1 207 2 249 1 66 2 168 1 214 1 176 1 105 1 290 2 257 2 220 1 72 1 111 1 190 1 115 1 192 1 156 1 
61 1 228 1 139 2 106 1 64 1 223 1 152 1 277 1 134 1 235 1 302 1 
46 2 52 2 53 4 200 1 279 1 14 2 61 2 64 2 65 1 19 1 67 1 134 1 135 3 101 1 166 6 23 1 173 1 289 1 139 4 106 2 219 8 180 11 221 1 181 2 183 11 73 1 188 1 230 3 77 1 113 1 152 2 153 14 302 2 
139 2 219 1 106 1 90 1 182 1 296 1 73 1 188 1 61 1 64 1 153 2 152 1 19 1 134 1 302 1 166 1 
71 1 139 2 121 1 106 1 179 1 122 1 182 1 107 1 73 1 35 1 188 1 61 1 64 1 153 1 152 1 134 1 266 1 302 1 166 1 169 1 
272 1 240 1 88 1 5 1 122 2 9 1 54 1 125 1 13 1 278 2 61 2 245 2 129 1 246 1 247 1 64 2 164 2 134 2 19 1 169 8 166 1 210 1 174 1 139 4 28 3 106 2 219 1 30 1 107 7 108 1 188 1 190 1 232 1 152 2 153 2 235 1 266 8 302 2 117 2 
272 1 46 1 53 1 54 1 52 1 200 1 55 1 125 1 14 1 61 1 246 1 64 1 134 1 101 1 286 1 166 2 292 1 139 2 106 1 219 1 180 1 181 1 183 1 73 1 190 1 113 1 152 1 153 3 302 1 
46 1 139 2 106 1 219 2 180 1 181 1 53 1 183 1 33 1 14 1 61 1 64 1 153 2 152 1 67 1 235 1 134 1 302 1 
139 2 106 1 180 1 181 1 53 1 200 1 183 1 61 1 113 1 283 1 64 1 153 2 152 1 235 1 134 1 302 1 101 1 166 2 
46 1 139 2 106 1 219 2 180 2 181 2 53 2 52 1 200 1 183 2 14 1 61 1 113 1 64 1 153 4 152 1 67 1 235 1 134 1 101 1 302 1 166 2 
46 1 139 2 106 1 219 2 180 1 181 1 53 1 183 1 33 1 14 1 61 1 247 1 64 1 153 2 152 1 67 1 134 1 302 1 
139 2 106 1 180 1 181 1 53 1 200 1 183 1 61 1 113 1 247 1 283 1 64 1 153 2 152 1 134 1 302 1 101 1 166 2 
46 1 139 2 106 1 219 2 180 2 181 2 53 2 52 1 200 1 183 2 14 1 61 1 113 1 247 1 64 1 153 4 152 1 67 1 134 1 101 1 302 1 166 2 
46 1 139 2 106 1 219 2 180 2 181 2 53 2 52 1 200 1 183 2 14 1 61 1 113 1 64 1 152 1 153 4 67 1 134 1 101 1 302 1 166 2 
121 1 122 1 125 1 245 1 61 1 64 1 17 1 248 1 164 1 19 1 134 1 169 1 166 1 139 2 28 1 219 1 106 1 221 1 107 1 188 1 190 1 114 1 153 2 234 1 152 1 266 1 302 1 117 1 
194 1 122 1 125 1 245 1 61 1 64 1 17 1 164 1 19 1 134 1 169 1 166 1 139 2 28 1 219 1 106 1 221 1 107 1 260 1 188 1 229 1 190 1 114 1 153 2 152 1 266 1 302 1 117 1 
46 1 52 1 53 2 200 1 14 1 61 1 64 1 134 1 67 1 101 1 166 2 139 2 219 2 106 1 180 2 181 2 183 2 73 1 113 1 152 1 153 4 302 1 
46 1 121 1 53 2 52 1 200 1 125 1 14 1 245 1 61 1 129 1 64 1 17 1 248 1 164 1 67 1 134 1 101 1 166 2 169 1 71 1 139 2 28 1 219 2 106 1 180 2 181 2 107 1 183 2 190 1 113 1 114 1 153 4 234 1 152 1 266 1 302 1 117 1 
272 1 46 1 54 1 52 1 53 1 200 1 55 1 276 1 125 1 14 1 61 1 246 1 64 1 67 1 134 1 101 1 166 1 292 1 139 2 106 1 219 2 180 1 181 1 183 1 73 1 190 1 152 1 153 3 302 1 
271 1 197 1 46 2 4 2 241 1 52 2 200 2 14 2 61 2 62 1 203 1 64 2 67 2 101 2 166 6 216 1 139 4 106 2 219 6 218 1 181 4 113 2 263 2 153 12 302 2 269 1 
271 2 197 2 216 1 46 1 139 2 4 1 219 4 106 1 52 1 200 1 14 1 61 1 62 1 203 1 64 1 263 2 153 8 101 1 302 1 269 1 166 4 
271 2 197 1 46 1 4 1 241 1 52 1 200 1 14 1 61 2 62 1 203 1 64 2 67 1 101 1 166 4 172 1 216 1 139 4 106 2 219 4 181 1 263 2 153 8 302 2 269 1 
271 2 197 1 46 1 4 1 241 1 52 1 200 1 14 1 61 2 62 1 203 1 64 2 67 1 101 1 166 4 172 1 216 1 139 4 106 2 219 4 181 2 113 1 263 2 153 8 302 2 269 1 
271 1 197 1 46 1 4 1 52 1 200 1 277 2 14 1 61 1 62 1 203 1 64 1 67 1 101 1 166 4 216 1 139 2 106 1 219 4 223 2 181 2 113 1 263 2 153 8 302 1 269 1 
237 1 54 2 125 2 278 2 61 1 205 1 64 1 164 1 134 1 19 1 169 2 166 1 291 1 139 2 178 1 106 1 219 1 30 1 107 2 73 1 188 1 298 1 190 2 152 1 153 2 266 2 302 1 117 1 
288 1 1 1 255 1 217 1 3 1 123 1 107 2 57 1 184 1 32 2 13 1 299 1 129 1 265 1 164 1 266 2 79 1 117 1 169 2 
255 1 217 1 3 1 123 1 107 1 57 1 184 1 32 2 13 1 299 1 265 1 284 1 164 1 266 1 79 1 169 1 117 1 
288 1 70 1 240 1 28 1 89 1 122 1 107 1 245 1 265 1 164 1 266 1 117 1 169 1 210 1 
288 1 1 1 255 1 217 1 3 1 123 1 107 1 57 1 184 1 32 2 13 1 299 1 265 1 164 1 266 1 79 1 169 1 117 1 
259 1 
214 1 171 1 228 1 45 1 2 1 257 1 127 1 
236 1 0 1 239 1 196 1 42 1 45 1 2 1 201 1 58 1 249 1 66 1 20 1 215 1 214 1 290 1 257 2 220 1 
236 2 0 6 2 3 87 1 243 1 14 1 245 2 159 1 164 3 249 2 20 1 101 1 169 1 256 1 257 3 28 4 107 1 189 1 114 2 116 1 266 1 268 1 38 1 117 2 196 2 119 1 46 1 122 1 52 1 200 1 56 1 58 2 206 3 131 1 130 3 66 2 214 4 215 3 290 2 138 1 220 2 75 2 154 1 156 1 
270 1 0 6 236 2 40 1 196 2 45 2 2 5 46 2 52 2 200 2 58 1 14 2 281 1 206 5 130 5 208 1 66 1 65 1 249 2 285 1 20 1 135 1 101 2 170 1 214 8 215 3 290 1 293 1 257 5 220 2 297 1 230 1 301 1 116 1 154 2 
236 1 81 1 196 1 83 1 272 1 44 1 2 2 54 1 200 1 125 1 14 2 246 1 18 1 249 1 66 1 165 1 214 2 137 1 290 1 292 1 220 1 226 1 190 1 148 1 301 1 300 1 154 2 155 1 
236 1 214 1 196 1 171 1 45 1 2 1 257 1 220 1 127 1 249 1 
0 10 215 5 214 5 46 2 2 5 256 1 257 5 52 2 200 2 14 2 206 5 301 1 130 5 154 2 101 2 
45 1 290 1 257 1 66 1 20 1 58 1 
236 1 196 2 2 2 240 1 48 1 122 2 58 4 93 2 245 2 281 2 63 1 95 1 162 1 97 1 164 3 249 2 66 3 20 2 169 4 210 1 136 1 287 1 214 2 102 1 254 1 290 3 28 2 220 2 107 4 114 1 264 1 116 2 266 4 117 2 
272 2 83 1 121 1 122 1 54 2 125 3 61 1 245 1 246 2 64 1 248 1 17 1 164 1 134 1 166 1 169 1 139 2 292 2 28 1 106 1 294 1 221 1 107 1 188 1 190 3 114 1 153 1 234 1 152 1 266 1 302 1 117 1 
215 2 0 4 236 1 214 1 196 1 45 2 2 2 257 4 220 1 146 1 281 1 206 2 130 2 249 1 116 1 
253 1 92 1 251 1 
253 1 92 1 251 1 
43 1 262 1 253 1 10 1 92 1 
253 1 92 1 251 1 
253 1 16 1 92 1 
253 1 16 1 92 1 
253 1 16 1 92 1 
253 1 92 1 
252 1 86 1 
200 2 277 1 126 1 14 2 61 2 64 2 18 1 67 2 165 1 166 5 139 4 106 2 219 5 223 1 181 4 300 1 113 2 153 10 155 1 302 2 
228 1 223 1 277 1 
120 1 46 1 139 2 106 1 219 2 181 2 52 1 200 1 14 1 61 1 113 1 64 1 153 4 67 1 101 1 302 1 166 2 
46 1 219 3 52 1 181 2 200 1 14 1 230 2 77 1 113 1 65 1 153 7 67 1 101 1 135 1 166 4 
46 2 52 2 200 4 277 1 126 1 14 4 61 1 64 1 18 1 67 2 165 1 101 2 135 2 166 10 173 1 289 1 139 2 219 10 106 1 223 1 181 5 230 2 77 1 300 1 113 3 153 20 155 1 302 1 
230 1 153 1 166 1 
219 1 153 1 135 1 
120 1 46 1 139 2 256 1 106 1 219 3 52 1 181 3 200 1 14 1 61 1 113 2 64 1 153 6 67 1 302 1 101 1 166 3 
270 1 40 1 46 2 52 2 200 2 14 2 61 1 203 1 64 1 208 1 65 1 67 1 135 1 101 2 166 6 170 1 139 2 106 1 219 6 181 2 297 1 230 1 113 1 153 12 302 1 
219 3 181 2 200 1 14 1 113 1 18 1 153 6 67 1 155 1 165 1 166 3 
139 2 219 1 106 1 181 2 223 1 277 1 126 1 61 1 113 1 300 1 64 1 153 3 67 1 155 1 165 1 302 1 209 1 166 2 
139 2 106 1 219 5 181 5 200 2 14 2 61 1 203 1 300 1 113 3 64 1 18 1 153 10 67 2 155 2 302 1 165 2 166 5 
46 1 139 2 106 1 219 2 181 1 14 1 61 1 203 1 64 1 153 2 67 1 302 1 
46 1 139 2 106 1 219 2 181 2 52 1 200 1 14 1 61 1 203 1 113 1 64 1 153 4 67 1 101 1 302 1 166 2 
139 6 106 3 219 1 241 1 181 2 126 1 61 3 203 1 113 1 64 3 153 3 67 1 155 1 302 3 165 1 209 1 166 2 
120 1 46 2 241 1 52 2 200 4 277 1 126 1 14 4 61 4 280 1 203 1 64 4 18 1 65 1 67 3 165 1 135 3 101 2 166 12 24 1 175 1 139 8 106 4 219 12 223 1 181 6 230 3 300 1 113 3 153 24 155 1 302 4 
200 2 277 1 14 2 61 1 203 1 64 1 18 1 65 1 67 1 135 1 165 1 166 5 139 2 106 1 219 5 181 3 223 1 297 1 230 1 113 2 300 1 153 10 155 1 302 1 
120 1 46 1 52 1 200 2 277 1 14 3 61 2 203 1 64 2 18 1 65 1 67 2 165 1 135 1 166 6 139 4 106 2 219 7 223 1 181 4 297 1 230 2 77 1 113 2 300 1 153 13 155 1 302 2 
270 1 40 1 120 1 46 2 52 2 200 4 277 1 126 1 14 4 61 3 203 1 64 3 18 1 208 1 65 1 67 2 165 1 135 1 101 2 166 11 170 1 139 6 106 3 219 10 223 1 181 5 297 1 230 1 300 1 113 3 153 21 155 1 302 3 
270 1 40 1 120 1 46 2 52 2 200 3 277 1 126 1 14 4 61 3 203 1 64 3 18 1 208 1 65 1 67 3 165 1 135 1 101 1 166 8 170 1 139 6 106 3 219 11 223 1 181 6 297 1 230 1 300 1 113 3 153 19 155 1 302 3 
200 2 277 1 14 2 61 1 203 1 64 1 18 1 65 1 67 1 135 1 165 1 166 5 139 2 106 1 219 5 181 3 223 1 297 1 230 1 113 2 300 1 153 10 155 1 302 1 
270 1 40 1 46 2 52 2 200 2 14 2 61 1 203 1 64 1 208 1 65 1 67 1 135 1 101 2 166 6 170 1 139 2 106 1 219 6 181 2 297 1 230 1 113 1 153 12 302 1 
270 1 40 1 120 1 46 2 52 2 200 3 277 1 126 2 14 4 61 4 203 1 64 4 18 1 208 1 65 1 67 2 165 1 135 1 101 1 166 9 170 1 139 8 106 4 219 11 223 1 181 5 297 1 230 1 300 1 113 3 153 20 155 1 302 4 
270 1 40 1 46 3 241 1 52 3 200 2 126 2 14 3 61 4 203 1 64 4 208 1 65 1 67 3 135 1 101 2 166 7 170 1 139 8 106 4 219 9 181 6 297 1 230 1 113 3 153 16 302 4 
219 2 223 1 181 4 200 1 277 1 14 1 300 1 113 2 18 1 153 5 67 2 155 2 165 2 166 3 
270 1 40 1 46 2 241 1 52 2 200 3 277 1 126 2 14 4 61 4 203 1 64 4 18 1 208 1 65 1 67 2 165 1 135 1 101 1 166 9 170 1 139 8 106 4 219 11 223 1 181 5 297 1 230 1 300 1 113 3 153 20 155 1 302 4 
82 1 195 1 190 1 221 1 54 1 125 1 21 1 
195 1 82 1 7 1 221 1 54 1 125 1 244 1 158 1 190 1 37 1 21 1 193 1 
245 1 228 1 240 1 28 1 122 1 164 1 107 1 266 1 117 1 210 1 169 1 
272 1 88 1 28 1 122 1 221 1 54 1 107 1 125 2 245 1 190 2 246 1 114 1 17 1 164 1 234 1 266 1 169 1 117 1 
272 2 44 1 119 1 88 1 54 2 125 2 93 1 245 2 246 1 96 1 17 1 164 1 169 1 104 1 28 3 221 1 107 1 190 2 114 2 115 1 234 1 266 1 117 1 
194 1 272 2 44 1 119 1 88 1 54 2 125 2 93 1 245 2 246 1 96 1 17 1 164 1 250 1 169 2 104 1 28 3 221 1 107 2 190 2 114 2 115 1 266 2 117 1 
272 1 83 1 44 1 119 1 45 1 54 1 125 1 58 1 93 1 128 1 245 1 246 1 66 2 164 1 169 1 137 1 25 1 290 2 104 1 292 1 257 1 28 3 107 1 226 1 75 1 190 1 189 1 148 1 114 1 266 1 156 1 117 1 
272 1 83 1 44 1 119 1 45 1 54 1 243 1 125 1 58 1 93 1 245 1 246 1 66 2 164 1 169 1 137 1 290 2 104 1 292 1 257 1 28 3 107 1 226 1 75 1 190 1 189 1 148 1 114 1 266 1 156 1 117 1 
164 1 107 1 266 1 108 1 117 1 169 1 
136 1 174 1 254 1 28 3 5 1 122 2 9 1 107 6 278 1 108 1 13 1 245 2 129 1 232 1 114 1 164 3 266 7 267 1 38 1 169 7 117 2 
88 1 14 2 245 1 246 1 248 1 17 1 18 1 164 1 165 1 169 1 166 4 28 1 106 2 181 3 107 1 35 1 190 2 113 2 114 1 266 1 117 1 272 1 44 1 121 1 54 1 124 1 200 2 125 2 277 1 61 2 129 1 205 1 64 2 67 1 134 2 71 1 139 4 219 4 223 1 221 1 73 1 300 1 234 1 152 2 153 8 155 1 302 2 
236 2 83 1 2 5 87 1 91 1 243 1 14 2 245 1 246 1 18 1 164 1 249 2 20 1 165 1 169 1 171 1 257 2 28 2 107 1 190 1 189 1 114 1 266 1 268 1 117 1 272 1 196 2 44 1 119 1 45 2 122 1 54 1 200 2 125 1 58 2 127 1 131 1 66 3 287 1 214 4 137 1 290 3 292 1 220 2 226 1 75 1 148 1 301 1 300 1 154 2 155 1 156 1 
28 1 107 1 108 1 159 1 245 1 189 1 112 1 114 1 164 2 266 1 38 1 169 1 117 1 
240 1 27 1 28 1 122 1 107 4 245 1 129 1 164 1 250 1 266 4 169 4 210 1 117 1 
136 1 102 1 254 1 28 1 107 2 93 1 245 1 63 1 191 1 114 1 164 2 266 2 169 2 117 1 
299 1 255 1 217 1 122 1 164 1 107 1 266 1 32 1 117 1 169 1 
129 1 178 1 164 1 107 2 266 2 13 1 117 1 169 2 
240 1 27 1 28 3 5 1 122 1 9 1 107 4 93 1 245 2 129 1 232 1 164 2 266 5 210 1 169 5 117 2 
240 1 27 1 28 3 5 1 122 1 9 1 107 4 93 1 245 2 129 1 132 1 164 2 266 5 210 1 169 5 117 2 
194 1 272 1 88 1 28 1 122 1 221 1 54 1 107 1 125 2 245 1 190 2 246 1 114 1 17 1 164 1 266 1 169 1 117 1 
136 1 254 1 28 1 107 1 93 1 245 1 114 1 164 2 266 1 267 1 38 1 169 1 117 1 
237 1 177 1 242 1 98 2 
237 1 15 1 290 1 177 1 91 1 242 1 66 1 98 2 109 1 167 1 
237 1 177 1 242 1 98 1 
237 1 15 1 177 1 242 1 98 2 109 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (9,171) 175 (39,352) (39,352) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (9,171) 175 (39,352) (39,352) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (9,171) 175 (39,352) (39,352) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (9,171) 175 (39,352) (39,352) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (63,164,213) 124 78 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (63,164,213) 124 (132,226,349) 291 262 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 221 182 154 207 126 122 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 221 182 154 207 126 122 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 221 182 154 207 126 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 30 163 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 45 266 120 38 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 221 182 154 207 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 221 182 154 207 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 221 182 154 207 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (63,164,213) 124 78 203 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (63,164,213) 124 78 203 94 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 156 (268,271) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (268,271) 129 183 (51,64) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
104 1 348 1 263 1 175 1 220 1 332 1 170 1 352 1 39 1 212 1 9 1 
104 1 348 1 263 1 175 1 220 1 332 1 170 1 352 1 39 1 212 1 9 1 
104 1 348 1 263 1 175 1 220 1 332 1 170 1 352 1 39 1 212 1 9 1 
104 1 348 1 263 1 175 1 220 1 332 1 170 1 352 1 39 1 212 1 9 1 
32 3 71 1 249 2 314 1 288 1 193 1 170 1 212 4 353 3 104 1 61 1 320 1 263 1 217 1 135 2 332 4 285 1 144 1 
347 1 110 1 348 1 170 1 212 2 326 1 353 1 104 1 61 1 280 1 320 1 263 1 217 1 332 2 220 1 144 1 
32 1 104 1 61 1 249 1 314 1 263 2 220 1 332 3 170 2 144 1 212 3 171 1 353 2 
32 7 312 1 249 4 314 3 212 9 61 1 320 1 263 2 135 2 217 1 220 1 285 1 300 1 71 1 193 1 288 1 240 1 170 2 171 1 353 5 104 1 77 1 332 9 144 1 
32 7 312 1 249 4 314 3 212 9 61 1 320 1 263 2 135 2 217 1 220 1 285 1 300 1 71 1 193 1 288 1 240 1 170 2 171 1 353 5 104 1 77 1 332 9 144 1 
128 1 
131 1 252 1 293 2 
243 2 304 1 213 2 147 2 279 2 164 2 63 2 130 1 
227 1 205 1 147 3 230 1 36 1 6 2 8 1 149 1 11 2 213 3 279 2 164 2 120 1 282 1 136 1 321 1 63 2 186 1 346 1 322 1 266 2 45 2 47 1 138 2 350 1 168 1 239 1 243 2 304 1 271 1 28 1 355 1 173 1 309 1 106 1 161 1 130 1 
147 1 180 1 318 1 304 1 243 1 213 1 279 1 164 1 63 1 287 1 
164 1 124 1 226 1 
147 1 349 1 252 1 209 1 318 1 132 2 40 1 243 1 213 1 279 1 164 1 330 1 201 1 63 1 43 2 
250 1 303 1 132 1 59 1 43 1 
69 1 108 1 147 1 180 1 250 1 252 1 318 1 59 1 132 2 243 1 304 1 40 1 213 1 279 1 164 1 127 1 63 1 287 1 43 2 
250 1 132 1 43 1 
69 1 147 1 180 1 318 1 59 1 132 1 304 1 243 1 213 1 279 1 164 1 63 1 287 1 43 1 
252 1 
69 1 228 1 147 1 180 1 250 1 252 1 318 1 59 1 132 2 243 1 304 1 40 1 213 1 279 1 164 1 127 1 63 1 287 1 43 2 
147 1 206 1 162 1 180 1 250 2 252 2 318 1 338 1 132 5 59 2 296 1 40 2 213 1 279 1 164 1 216 1 88 1 89 2 151 2 92 2 283 1 63 1 287 1 43 5 66 2 166 2 69 1 137 2 46 1 267 1 72 1 99 5 100 1 351 1 243 1 304 1 200 4 127 1 
205 1 266 1 45 1 147 2 138 1 167 1 57 1 149 1 8 1 271 1 243 1 213 2 164 1 120 1 173 1 282 1 19 1 321 1 106 1 63 1 
128 1 
147 2 114 1 318 1 10 1 243 1 213 2 279 1 164 2 298 1 63 1 130 1 
91 1 19 1 196 1 
266 1 45 1 205 1 147 1 138 1 8 1 149 1 271 1 213 1 120 1 173 1 282 1 321 1 106 1 345 1 130 1 
147 2 167 1 114 1 318 1 10 1 243 2 213 2 279 1 164 2 63 2 130 1 
243 2 305 1 213 2 147 2 164 2 180 1 63 2 318 1 
147 3 167 1 318 1 10 1 243 3 213 3 279 1 164 3 63 3 130 1 
243 1 213 1 147 1 164 1 180 1 63 1 318 1 
147 1 114 1 318 1 243 1 213 1 279 1 164 1 298 1 63 1 
205 1 147 4 230 1 36 1 57 1 209 1 6 1 149 1 8 1 114 1 318 1 132 1 11 2 213 4 279 2 164 3 120 1 282 1 136 1 321 1 63 3 43 1 346 1 322 1 266 1 45 1 47 1 138 1 349 1 167 1 350 1 239 1 271 1 243 3 304 1 330 1 173 1 309 1 201 1 356 1 358 1 106 1 161 1 130 1 
243 1 78 1 213 1 147 1 124 1 164 2 167 1 63 1 
147 3 167 2 349 1 252 1 57 1 209 1 114 1 132 1 318 1 243 3 213 3 279 1 330 1 164 3 158 1 201 1 356 1 63 3 43 1 
243 2 213 2 147 2 279 1 164 2 167 1 91 1 19 1 63 2 114 1 
266 1 45 1 205 1 147 1 138 1 8 1 149 1 271 1 213 1 120 1 173 1 282 1 106 1 321 1 130 1 
266 1 45 1 205 1 147 1 138 1 24 1 8 1 149 1 76 1 213 1 120 1 282 1 106 1 321 1 130 1 
82 1 230 1 36 1 6 4 211 1 11 2 150 1 134 1 90 1 91 2 342 1 19 2 66 1 346 1 166 1 97 1 322 1 221 1 47 1 350 1 196 2 28 2 157 1 309 2 
243 1 213 1 305 1 147 1 164 1 201 1 63 1 318 1 
62 1 84 1 
62 1 84 1 
202 1 257 1 
202 1 257 1 
202 1 257 1 
62 1 84 1 176 1 
62 1 84 1 176 1 
62 1 84 1 185 1 
62 2 133 1 84 2 56 1 202 1 257 1 
62 1 84 1 176 1 
62 1 84 1 42 1 
62 1 84 1 42 1 
62 1 84 1 42 1 
23 1 147 2 84 1 181 1 25 1 132 1 102 1 115 1 243 2 223 1 213 2 164 2 62 1 185 1 15 1 153 1 299 1 159 1 274 1 284 1 63 2 294 1 43 1 130 1 
147 1 84 2 180 1 318 1 132 2 12 1 213 1 279 1 164 1 62 2 297 1 299 2 284 2 63 1 287 1 65 1 43 2 69 1 25 2 101 1 102 2 304 1 243 1 52 1 174 1 159 1 274 2 246 1 160 1 
320 1 217 1 193 1 
320 1 217 1 326 1 
313 1 320 3 193 2 219 1 326 1 95 1 
313 1 320 2 193 1 326 1 79 1 95 1 
313 1 320 2 193 1 326 1 95 2 
250 1 252 1 210 1 254 1 59 3 132 4 142 1 40 1 306 1 17 1 127 1 43 4 
81 1 147 1 180 1 250 1 252 1 318 1 132 2 59 2 40 1 213 1 279 1 164 1 63 1 344 1 287 1 43 2 70 1 69 1 303 1 304 1 243 1 
131 2 252 3 182 1 210 1 211 1 59 2 132 3 40 1 89 1 151 1 15 1 17 1 92 1 43 3 66 1 166 1 301 1 221 1 46 1 324 2 99 2 142 1 49 2 306 1 200 3 293 4 
131 3 252 4 182 2 210 1 211 2 132 4 59 3 40 1 89 1 151 1 15 2 17 1 92 1 43 4 188 1 66 2 166 2 301 1 191 1 221 2 46 1 324 4 99 4 195 1 142 2 49 4 306 1 200 5 293 7 
128 1 
321 1 30 1 
96 1 
282 1 321 1 106 1 
321 1 165 1 
282 1 321 1 
260 1 253 2 282 1 321 3 106 1 286 1 
82 4 206 1 162 2 208 1 6 13 231 1 338 2 277 1 18 1 66 3 166 3 267 2 169 1 28 7 354 1 157 3 309 6 224 1 
82 6 206 1 162 2 208 3 6 13 231 1 338 2 277 1 18 1 66 3 166 3 267 2 169 1 28 7 354 1 157 3 309 6 224 1 
82 4 206 1 208 1 162 2 6 13 231 1 338 2 277 1 18 1 66 3 166 3 67 1 267 2 169 1 28 7 354 1 157 3 309 6 224 1 
327 1 277 1 28 1 354 1 6 1 231 2 
82 4 206 1 208 1 162 2 230 1 36 1 6 13 231 1 338 2 11 2 277 1 121 1 346 1 66 3 166 3 47 1 267 2 169 1 28 7 354 1 157 3 309 6 224 1 247 1 
32 1 54 1 8 1 149 1 212 2 233 1 61 1 14 1 320 2 263 1 217 1 219 1 220 1 21 1 155 1 45 1 266 1 98 1 138 1 139 1 193 1 170 1 326 1 353 1 104 1 27 1 125 1 29 1 332 2 144 1 
32 1 54 1 3 1 8 1 149 1 212 2 233 1 14 1 320 2 263 1 217 1 219 1 220 1 21 1 155 1 45 1 266 1 138 1 139 1 193 1 140 1 170 1 326 1 125 1 272 1 29 1 332 2 204 1 
155 1 45 1 266 1 138 1 3 1 140 1 
149 1 8 1 212 1 261 1 120 1 16 1 263 1 282 1 220 2 321 1 155 2 45 1 266 1 44 1 302 1 138 1 170 1 199 1 125 2 272 1 29 2 332 1 225 1 
54 1 8 1 149 1 212 1 233 1 14 1 320 2 263 1 217 1 219 1 220 1 21 1 155 1 45 1 266 1 98 1 138 1 139 1 193 1 140 1 170 1 326 1 104 1 125 1 29 1 332 1 
339 1 
250 2 35 1 149 3 8 2 38 1 132 2 118 1 261 1 215 1 120 2 88 1 89 1 151 1 92 1 282 2 321 2 43 2 301 1 45 2 266 2 302 1 222 1 138 2 192 1 99 1 200 1 127 1 333 1 106 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 228 1 278 1 164 1 124 1 262 1 250 1 127 1 132 2 43 2 226 1 
132 1 291 1 116 1 278 1 164 1 124 1 88 1 151 1 89 1 262 1 92 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
291 1 116 1 278 1 164 1 124 1 262 1 132 1 43 1 226 1 
132 1 291 1 116 1 278 1 164 1 124 1 88 1 151 1 89 1 262 1 92 1 43 1 226 1 
322 1 47 1 230 1 90 1 128 1 36 1 350 1 346 1 11 2 
82 2 33 3 229 1 34 1 112 1 208 1 230 2 36 2 182 2 6 14 211 1 11 4 119 1 91 4 235 1 19 8 346 2 66 2 166 1 322 1 221 2 47 2 350 2 325 1 141 3 196 8 28 8 157 1 355 1 309 6 311 1 161 1 130 1 
205 1 147 2 230 1 36 1 57 1 6 2 149 1 8 1 11 2 213 2 319 1 164 1 120 1 91 1 282 1 264 1 235 1 321 1 63 1 345 1 346 1 68 1 322 1 45 1 266 1 47 1 138 1 167 1 350 1 271 1 243 1 28 1 355 1 173 1 309 1 106 1 161 1 130 1 
147 3 230 3 4 1 182 2 57 1 6 26 8 2 149 2 318 1 10 1 11 6 60 2 120 1 282 2 235 1 63 1 321 2 19 6 64 2 66 5 322 3 239 2 242 2 196 6 243 1 28 13 157 5 161 1 130 2 82 6 205 2 206 1 208 1 162 2 36 3 211 2 338 2 213 3 164 1 340 2 91 6 265 1 346 3 166 5 45 1 266 1 221 2 47 3 267 2 138 1 167 1 350 3 169 1 271 2 355 1 173 2 309 13 224 1 106 2 
227 2 147 1 113 1 230 2 36 2 5 1 6 2 149 2 8 2 11 4 258 1 213 1 164 1 261 1 120 2 90 1 282 2 63 1 321 3 346 2 322 2 22 1 45 8 266 7 302 1 47 2 138 8 167 1 238 1 350 2 140 1 243 1 245 1 27 1 28 1 355 1 309 1 310 1 161 1 
82 1 147 1 230 1 36 1 182 1 6 3 211 1 114 1 11 2 213 1 279 1 164 1 91 1 235 1 19 1 63 1 346 1 66 1 166 1 322 1 190 1 221 1 47 1 350 1 196 1 243 1 28 1 157 1 309 2 
82 1 322 1 221 1 47 1 208 1 230 1 350 1 36 1 6 2 196 1 11 2 28 2 91 1 90 1 342 1 19 1 346 1 66 1 
166 1 82 1 322 1 97 1 47 1 230 1 350 1 36 1 6 2 211 1 196 1 11 2 157 1 91 1 90 1 309 2 19 1 346 1 
82 2 208 1 230 1 182 1 36 1 6 4 211 1 11 2 90 1 91 2 19 2 66 1 346 1 166 1 322 1 221 1 47 1 350 1 196 2 28 2 157 1 309 2 
82 1 322 1 221 1 47 1 208 1 230 1 350 1 36 1 6 2 196 1 11 2 28 2 91 1 342 1 310 1 19 1 346 1 66 1 
166 1 82 1 322 1 97 1 47 1 230 1 350 1 36 1 6 2 211 1 196 1 11 2 157 1 91 1 309 2 310 1 19 1 346 1 
82 2 208 1 230 1 182 1 36 1 6 4 211 1 11 2 91 2 19 2 66 1 346 1 166 1 322 1 221 1 47 1 350 1 196 2 28 2 157 1 309 2 310 1 
82 2 208 1 230 1 182 1 36 1 6 4 211 1 11 2 91 2 19 2 66 1 346 1 166 1 322 1 221 1 47 1 350 1 196 2 28 2 157 1 309 2 
205 1 147 1 230 1 36 1 6 2 149 1 8 1 11 2 213 1 120 1 282 1 321 1 346 1 322 1 45 1 266 1 47 1 138 1 239 1 350 1 271 1 28 1 355 1 173 1 309 1 106 1 161 1 130 1 
205 1 147 1 230 1 36 1 6 2 149 1 8 1 11 2 213 1 120 1 282 1 321 1 346 1 322 1 45 1 266 1 47 1 24 1 138 1 350 1 76 1 50 1 28 1 355 1 309 1 106 1 161 1 130 1 
82 2 208 1 230 1 182 1 36 1 6 4 211 1 11 2 91 2 235 1 19 2 66 1 346 1 166 1 322 1 221 1 47 1 350 1 196 2 28 2 157 1 309 2 
82 2 205 1 147 1 208 1 230 1 36 1 182 1 6 4 211 1 149 1 8 1 11 2 213 1 340 1 91 2 282 1 19 2 321 1 66 1 346 1 166 1 322 1 221 1 45 1 266 1 47 1 138 1 239 1 350 1 196 2 271 1 27 1 28 2 157 1 173 1 309 2 106 1 
82 1 147 1 208 1 230 1 36 1 182 1 6 3 211 1 114 1 11 2 213 1 279 1 164 1 91 1 235 1 63 1 19 1 346 1 66 1 166 1 322 1 221 1 47 1 350 1 196 1 243 1 28 2 309 1 146 1 
177 4 33 4 82 8 229 1 179 1 162 1 148 1 207 1 208 4 251 1 230 3 36 3 182 4 336 1 6 40 7 1 211 4 338 1 11 6 41 1 86 1 122 1 121 1 346 3 66 5 154 1 166 5 221 4 47 3 267 1 325 3 169 1 141 3 26 1 198 2 28 19 157 4 126 1 309 21 357 1 224 1 80 1 
177 4 33 4 82 5 229 1 179 1 148 1 207 1 208 2 251 1 230 3 36 3 182 4 336 1 6 32 7 1 211 3 11 6 41 1 86 1 122 1 121 1 346 3 66 4 154 1 166 3 221 4 47 3 325 3 141 3 26 1 198 2 28 16 157 3 126 1 309 16 357 1 80 1 
33 3 177 2 82 7 229 1 179 1 34 1 162 1 148 1 207 1 208 2 230 2 36 2 182 4 6 31 211 3 338 1 11 4 41 1 122 1 121 1 346 2 66 5 154 1 166 4 221 4 47 2 267 1 325 2 169 1 141 3 26 1 198 1 28 16 157 5 126 1 309 15 357 1 224 1 
177 2 33 2 82 6 229 1 208 3 251 2 230 2 36 2 182 3 336 1 6 19 7 1 211 3 11 4 122 1 121 1 346 2 66 3 166 3 221 3 47 2 325 1 75 1 141 1 198 1 28 9 157 3 126 1 309 10 357 1 
82 1 177 2 33 2 179 1 148 1 207 1 230 2 36 2 182 2 6 17 211 1 11 4 41 1 122 1 121 1 346 2 66 2 154 1 166 1 221 2 47 2 325 2 141 2 26 1 198 2 28 9 157 1 126 2 309 8 357 1 
117 1 62 1 84 1 56 1 299 1 289 1 274 1 284 1 194 1 102 1 
185 1 181 1 
275 1 62 1 84 1 299 1 274 1 284 1 31 1 187 1 102 1 
176 1 93 1 
232 1 133 1 42 1 
147 1 84 1 180 1 318 1 132 1 12 1 213 1 279 1 164 1 62 1 297 1 299 1 284 1 63 1 287 1 65 1 43 1 69 1 25 2 101 1 102 1 304 1 243 1 52 1 174 1 274 1 159 1 246 1 160 1 
147 1 84 1 180 1 318 1 132 1 12 1 213 1 279 1 164 1 62 1 297 1 299 1 284 1 63 1 287 1 65 1 43 1 69 1 25 2 101 1 102 1 304 1 243 1 52 1 174 1 274 1 159 1 246 1 160 1 
147 1 84 1 180 1 318 1 132 1 12 1 213 1 279 1 164 1 62 1 297 1 299 1 284 1 63 1 287 1 65 1 43 1 69 1 25 2 101 1 102 1 304 1 243 1 52 1 174 1 274 1 159 1 246 1 160 1 
133 1 176 1 93 1 
133 1 176 1 93 1 
232 1 42 1 
232 1 133 1 42 1 
153 1 294 1 
147 2 84 1 181 1 132 1 59 1 115 1 213 2 62 1 164 2 15 1 185 1 299 1 153 1 284 1 63 2 43 1 23 1 25 1 102 1 243 2 103 1 223 1 174 1 274 1 160 1 294 1 130 1 
227 2 1 1 147 2 334 1 230 1 36 1 6 2 149 1 8 1 337 1 11 2 213 2 164 2 282 1 235 1 321 1 20 1 346 1 322 1 22 1 45 2 266 2 47 1 138 2 238 1 350 1 28 1 355 1 172 1 309 1 161 1 
0 1 21 1 266 2 45 2 54 1 138 2 193 1 140 1 149 1 8 1 326 1 27 1 331 1 14 1 320 2 217 1 29 1 219 1 308 1 
0 1 21 1 266 1 45 1 54 1 138 1 193 1 140 1 8 1 149 1 326 1 143 1 14 1 320 2 217 1 29 1 219 1 
266 1 45 1 302 1 138 1 149 1 8 1 261 1 120 1 16 1 29 1 152 1 282 1 308 1 321 1 
0 1 21 1 266 1 45 1 54 1 138 1 193 1 140 1 149 1 8 1 326 1 331 1 14 1 320 2 217 1 29 1 219 1 308 1 
329 1 
128 1 
131 1 109 1 147 1 180 1 250 1 252 1 318 1 255 1 132 1 40 1 213 1 279 1 164 1 88 1 89 1 151 1 92 1 63 1 287 1 43 1 69 1 99 1 270 1 243 1 304 1 200 1 127 1 293 1 
266 1 45 1 138 1 149 2 8 1 163 1 292 1 260 1 88 1 120 1 151 1 89 1 282 1 92 1 30 1 321 1 106 1 
147 1 179 1 148 1 180 1 182 2 315 1 318 1 279 1 151 2 63 1 287 1 66 2 154 1 69 1 324 4 237 1 325 1 243 1 200 8 127 1 293 4 131 2 33 1 207 1 35 1 250 1 252 4 211 2 132 1 40 2 41 1 213 1 164 1 88 2 216 1 89 2 92 2 43 1 166 2 301 1 221 2 137 2 99 5 141 1 304 1 49 4 
53 1 147 1 206 1 162 1 180 1 318 1 132 1 338 1 213 1 279 1 164 1 216 1 88 1 89 1 151 1 92 1 63 1 287 1 43 1 66 2 166 1 137 2 69 1 267 1 99 2 304 1 243 1 200 2 
72 1 252 1 99 1 40 1 88 1 200 1 151 1 89 1 92 1 283 1 
166 2 131 5 137 2 221 2 324 5 252 5 182 2 99 5 211 2 242 1 49 5 216 1 200 5 293 10 66 2 
69 1 147 1 180 1 250 1 252 1 318 1 132 1 243 1 304 1 40 1 213 1 279 1 164 1 127 1 63 1 287 1 43 1 
301 1 266 2 45 2 222 1 138 2 35 1 250 2 99 1 38 1 132 1 13 1 200 1 120 2 88 1 151 1 89 1 127 1 92 1 43 1 
205 1 147 3 230 1 36 1 6 1 8 1 149 1 11 2 213 3 279 2 164 2 120 1 136 1 282 1 63 2 321 1 346 1 322 1 45 1 266 1 47 1 138 1 239 1 350 1 243 2 304 1 271 1 173 1 309 1 106 1 161 1 130 1 
301 1 131 2 324 2 35 1 252 4 99 2 277 1 40 2 49 2 88 1 200 1 151 1 89 1 293 4 92 1 
178 1 299 1 284 1 
178 1 299 1 284 1 
295 1 299 1 284 1 194 1 294 1 
178 1 299 1 284 1 
328 1 299 1 284 1 
328 1 299 1 284 1 
328 1 299 1 284 1 
299 1 284 1 
62 1 84 1 
33 1 82 4 206 1 208 1 207 1 162 2 230 1 36 1 6 14 338 2 11 2 121 1 66 3 346 1 166 3 47 1 267 2 325 1 169 1 141 1 28 7 157 3 309 7 224 1 
33 2 82 5 229 1 206 1 162 2 207 1 208 2 230 2 36 2 182 1 37 1 6 17 338 2 11 4 121 1 346 2 66 4 166 3 221 1 47 2 267 2 325 1 169 1 141 1 28 9 157 3 309 8 224 1 
33 1 82 6 206 1 179 1 162 2 208 2 148 1 207 1 230 3 36 3 182 2 37 1 6 25 211 2 338 2 11 6 41 1 121 1 346 3 66 5 166 5 154 1 221 2 47 3 267 2 325 1 169 1 141 1 26 1 28 12 157 4 309 13 224 1 
33 1 82 2 179 1 148 1 207 1 230 2 36 2 182 2 6 11 211 1 11 4 41 1 121 1 346 2 66 2 166 1 154 1 221 2 47 2 325 1 141 1 26 1 28 6 157 2 309 5 
33 1 82 4 206 1 208 1 207 1 162 2 230 1 36 1 6 14 338 2 11 2 121 1 66 3 346 1 166 3 47 1 267 2 325 1 169 1 141 1 28 7 157 3 309 7 224 1 
33 1 82 3 179 1 208 1 148 1 207 1 230 2 36 2 182 2 6 13 211 2 11 4 41 1 121 1 346 2 66 2 166 2 154 1 221 2 47 2 325 1 141 1 26 1 28 6 157 2 309 7 
33 1 82 1 179 1 148 1 207 1 230 3 36 3 182 2 37 1 6 11 211 1 11 6 41 1 121 1 346 3 66 2 154 1 166 1 221 2 47 3 325 1 141 1 26 1 28 6 157 1 309 5 
33 1 82 4 179 1 208 2 148 1 207 1 230 3 36 3 182 2 336 1 6 12 211 1 11 6 41 1 121 1 346 3 66 2 154 1 166 1 221 2 47 3 325 1 141 1 26 1 28 7 157 2 309 5 
166 1 82 6 267 3 162 3 208 3 6 7 169 1 338 1 28 3 157 3 309 4 224 2 66 1 
33 1 82 1 179 1 148 1 207 1 230 3 36 3 182 2 336 1 6 11 211 1 11 6 41 1 121 1 346 3 66 2 154 1 166 1 221 2 47 3 325 1 141 1 26 1 28 6 157 1 309 5 
82 6 206 1 162 2 208 3 230 2 36 2 6 16 338 2 11 4 346 2 66 3 166 3 47 2 267 2 169 1 26 1 28 8 157 3 309 8 224 1 
128 1 
166 1 82 2 221 1 47 1 208 1 230 1 36 1 182 1 37 1 6 4 211 1 11 2 28 2 157 1 309 2 346 1 66 1 
33 1 28 1 325 1 6 2 309 1 141 1 
33 2 82 7 229 1 206 1 34 1 162 2 208 4 230 1 182 2 36 1 6 24 211 2 338 2 11 2 66 5 346 1 166 5 221 2 47 1 267 2 169 1 141 2 26 1 28 12 157 3 309 12 224 1 311 1 
33 1 6 1 309 1 
28 1 6 1 141 1 
166 1 82 3 221 1 47 1 208 1 230 1 36 1 182 1 37 1 6 6 211 1 242 1 11 2 28 3 157 2 309 3 346 1 66 1 
33 1 82 3 179 1 208 1 148 1 207 1 230 2 36 2 182 2 6 13 211 2 11 4 41 1 121 1 346 2 66 2 166 2 154 1 221 2 47 2 325 1 141 1 26 1 28 6 157 2 309 7 
166 1 82 2 267 1 162 1 208 1 6 6 338 1 28 3 157 1 309 3 66 1 
82 2 47 1 267 1 208 1 162 1 230 1 36 1 6 3 169 1 26 1 11 2 28 1 234 1 157 1 309 2 224 1 346 1 
166 2 82 6 206 1 267 2 162 2 208 3 6 12 338 1 28 6 157 3 309 6 66 2 
82 1 221 1 47 1 208 1 230 1 36 1 6 2 11 2 28 2 121 1 346 1 66 1 
166 1 82 2 221 1 47 1 208 1 230 1 36 1 182 1 6 4 211 1 11 2 28 2 157 1 121 1 309 2 346 1 66 1 
82 2 47 3 267 1 162 1 208 1 230 3 36 3 336 1 6 3 26 1 11 6 234 1 28 1 157 1 121 1 309 2 346 3 
33 3 82 8 206 1 162 2 208 4 230 4 36 4 182 2 37 1 336 1 6 30 211 2 338 2 11 8 184 1 121 1 346 4 66 5 166 5 221 2 47 4 267 2 325 1 169 1 141 3 26 1 28 15 157 4 307 1 309 15 224 1 145 1 
78 1 164 1 124 1 203 1 
323 1 107 1 78 1 164 1 124 1 335 1 218 1 94 1 203 1 
45 1 266 1 138 1 120 1 128 1 
205 1 266 1 45 1 147 2 138 1 167 1 149 1 8 1 243 1 271 1 213 2 164 1 120 1 282 1 321 1 106 1 63 1 130 1 
205 1 147 2 209 1 8 1 149 1 318 1 213 2 164 2 282 2 63 2 321 3 165 1 189 1 45 1 266 1 138 1 167 1 271 1 243 1 156 1 201 1 106 2 130 1 
205 1 147 2 209 1 8 1 149 1 318 1 213 2 164 2 282 2 63 2 321 3 165 1 189 1 45 2 266 2 24 1 138 2 167 1 243 1 156 1 273 1 201 1 106 2 130 1 
189 1 266 3 45 3 138 3 250 1 252 1 253 1 149 1 317 1 8 1 132 2 40 1 244 1 156 1 330 1 120 1 273 1 282 1 106 1 30 1 321 4 43 2 165 1 
189 1 266 1 45 1 138 1 268 1 253 1 8 1 149 1 132 1 156 1 282 1 106 1 30 1 321 4 43 1 165 1 
45 1 266 1 138 1 5 1 149 1 8 1 
227 1 22 1 266 6 45 7 138 7 113 1 5 1 140 1 8 2 149 3 258 1 245 1 27 1 118 1 260 1 120 2 282 2 106 1 321 3 333 1 343 1 
147 2 230 2 6 12 8 1 149 1 318 1 10 1 11 4 282 1 235 1 63 1 321 1 64 1 66 3 322 2 239 1 243 1 27 1 28 6 157 3 130 2 82 4 205 1 334 1 206 1 208 1 162 2 36 2 338 2 213 2 164 1 340 1 346 2 166 3 45 1 266 1 47 2 138 1 267 2 167 1 350 2 169 1 271 1 173 1 309 6 106 1 224 1 
45 1 266 1 138 1 268 1 253 1 59 1 132 1 183 1 13 1 51 1 88 1 120 1 151 1 89 1 129 1 92 1 321 2 30 1 43 1 
96 1 266 1 45 1 138 1 253 1 5 1 8 1 149 2 292 1 260 1 282 1 106 1 321 1 
266 4 45 4 302 1 111 1 138 4 149 1 8 1 27 1 261 1 120 1 273 1 282 1 321 1 
189 1 266 2 45 2 138 2 192 1 8 1 149 2 118 1 215 1 282 1 106 1 321 1 333 1 236 1 
54 1 45 1 266 1 138 1 120 1 320 1 217 1 149 1 8 1 326 1 
266 2 45 2 1 1 22 1 138 2 140 1 8 1 149 1 27 1 282 1 321 1 
189 1 302 1 266 4 45 5 22 1 111 1 138 5 8 2 149 2 258 1 27 1 245 1 261 1 120 1 282 2 321 3 
189 1 302 1 266 4 45 5 22 1 111 1 138 5 73 1 8 2 149 2 258 1 27 1 261 1 120 1 282 2 321 3 
205 1 266 1 45 1 147 2 138 1 24 1 167 1 149 1 8 1 243 1 213 2 164 1 120 1 282 1 321 1 106 1 63 1 130 1 
189 1 266 1 45 1 138 1 8 1 149 2 118 1 260 1 282 1 106 1 321 1 333 1 343 1 
259 1 276 1 58 1 105 1 130 1 
248 1 349 1 252 1 209 1 58 1 276 2 318 1 59 1 132 2 40 1 259 2 330 1 87 1 197 1 201 1 356 1 105 2 43 2 130 1 
147 1 58 1 337 1 259 1 213 1 164 1 172 1 105 1 20 1 
248 1 197 1 58 1 
128 1 
61 1 263 1 332 1 170 1 144 1 212 1 353 1 
125 1 220 1 332 1 
241 1 316 1 170 1 212 3 353 1 104 1 61 1 280 2 341 1 263 1 332 3 144 1 
32 1 61 1 263 1 135 1 332 2 170 1 144 1 212 2 353 1 
104 1 71 1 249 1 320 1 263 1 217 1 193 1 332 1 170 1 212 1 353 1 
104 1 61 1 263 1 332 1 170 1 212 1 353 1 
104 1 61 2 263 1 332 1 170 1 144 1 212 1 
55 1 74 1 170 2 212 2 353 1 290 1 104 1 61 1 263 2 332 2 
32 2 249 1 314 1 170 1 212 3 353 2 104 1 77 1 61 1 263 1 332 3 144 1 300 1 
32 1 193 1 170 1 326 1 212 2 353 1 104 1 61 1 320 2 263 1 217 1 281 1 219 1 332 2 144 1 
32 2 104 1 61 1 249 1 314 1 263 2 135 1 288 1 332 4 170 2 144 1 212 4 353 2 
104 1 61 1 263 1 332 1 170 1 144 1 212 1 353 1 
32 2 249 1 314 1 316 1 170 1 212 4 353 3 61 2 280 1 341 1 263 1 332 4 144 2 204 1 
32 1 104 1 61 1 2 1 263 1 123 1 240 1 332 2 170 1 144 1 212 2 353 1 
104 1 61 1 280 2 341 1 263 1 316 2 332 3 170 1 144 1 212 3 256 1 353 1 
83 1 214 1 85 2 353 2 
104 1 269 1 263 1 332 1 170 1 212 1 
32 1 77 1 104 1 61 1 263 1 332 2 170 1 144 1 212 2 353 1 
48 1 
104 1 61 1 263 1 332 1 170 1 144 1 212 1 353 1 
32 1 170 1 212 3 353 1 104 1 77 1 61 1 280 1 263 1 332 3 144 1 
249 1 314 1 204 1 353 1 
61 1 353 1 

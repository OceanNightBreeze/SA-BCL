#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 164 (190,230) (190,230) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 (22,133) 256 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (59,251,324) (59,251,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (59,251,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 206 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (59,251,324) 179 273 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (59,251,324) 179 266 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 43 248 (18,143) 79 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 74 299 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 74 299 63 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 118 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 254 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 98 225 245 97 167 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 29 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 169 123 46 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 169 123 46 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 323 191 120 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 169 123 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 323 246 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 216 201 204 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 216 201 204 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 216 201 288 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 206 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 (22,133) (22,133) (217,306) 80 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 (22,133) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 43 248 (18,143) 79 241 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 (22,133) (22,133) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 108 (217,306) 231 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 200 129 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 71 328 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 74 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 98 225 245 97 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 43 248 (28,234) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 43 183 (18,143) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 43 (28,234) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 43 248 (28,234) 194 (22,133) (22,133) (217,306) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 43 248 (18,143) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (59,251,324) 179 126 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 164 (190,230) (190,230) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
230 1 195 1 235 1 209 3 290 7 94 1 140 1 300 1 100 1 62 9 150 1 25 1 310 9 64 1 260 4 259 1 262 2 226 1 189 1 314 2 190 1 161 2 163 1 164 4 
230 1 195 1 235 1 209 3 290 7 94 1 140 1 300 1 100 1 62 9 150 1 25 1 310 9 64 1 260 4 259 1 262 2 226 1 189 1 314 2 190 1 161 2 163 1 164 4 
230 1 195 2 209 3 290 6 293 1 94 1 17 1 140 1 300 2 100 2 60 1 62 9 150 2 25 1 310 9 64 1 259 1 260 4 262 2 189 1 314 2 114 1 190 1 161 2 163 1 72 1 164 4 274 1 
230 1 195 2 209 3 290 6 293 1 94 1 17 1 140 1 300 2 100 2 60 1 62 9 150 2 25 1 310 9 64 1 259 1 260 4 262 2 189 1 314 2 114 1 190 1 161 2 163 1 72 1 164 4 274 1 
230 1 195 2 209 4 290 7 293 1 94 1 17 1 140 1 300 2 100 2 60 1 62 10 150 2 25 1 310 10 64 1 259 1 260 5 262 2 189 1 314 2 114 1 190 1 161 2 163 1 72 1 164 5 274 1 
230 1 195 2 209 2 290 4 293 1 94 1 17 1 140 1 300 2 100 2 60 1 62 7 150 2 25 1 310 7 64 1 260 3 262 2 189 1 314 1 114 1 190 1 161 2 163 1 72 1 164 3 274 1 
230 1 195 1 100 1 300 1 62 4 25 1 310 4 64 1 259 1 260 2 262 1 209 1 314 2 290 3 190 1 161 1 164 2 94 1 
81 1 230 1 195 1 100 1 62 1 150 1 310 1 262 1 134 1 190 1 161 1 164 1 94 1 322 1 17 1 
230 1 62 3 150 1 310 3 260 1 262 2 209 1 290 1 190 1 161 2 163 1 164 1 94 1 
214 1 73 1 252 1 
227 1 
313 2 102 2 276 2 180 2 75 2 40 1 166 2 221 1 
0 2 124 1 84 1 4 1 276 1 234 1 43 1 88 2 297 2 248 1 102 1 180 1 22 1 149 2 27 2 256 1 112 1 185 1 155 2 312 1 313 1 69 1 228 1 192 1 75 1 40 1 166 1 194 1 
313 1 102 1 276 1 211 1 85 1 180 1 75 1 40 1 166 1 112 1 
102 1 192 1 251 1 75 1 321 1 324 1 166 1 112 1 185 1 
313 1 102 1 276 1 192 1 251 1 180 1 75 1 166 1 112 1 185 1 
107 1 
107 1 
59 1 279 1 119 1 
107 1 
214 1 
107 1 
59 1 279 1 107 1 270 1 52 1 91 1 186 1 
73 1 221 1 
313 1 276 1 102 2 180 1 75 2 203 1 166 2 221 2 284 1 
210 1 105 1 95 1 
0 1 124 1 248 1 4 1 234 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 206 1 69 1 192 1 297 1 194 1 
0 1 248 1 124 1 125 1 4 1 249 1 234 1 102 1 180 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 313 1 69 1 192 1 75 1 297 1 166 1 194 1 
313 3 249 1 276 1 102 3 180 3 75 3 166 3 221 1 
313 1 102 1 85 1 180 1 75 1 166 1 112 1 
313 1 102 1 276 1 180 1 75 1 203 1 166 1 112 1 284 1 
125 1 249 1 179 1 102 2 276 1 180 2 251 1 112 1 185 1 284 1 313 2 192 1 75 2 166 2 273 1 
313 1 249 1 102 2 238 1 180 1 75 2 321 1 166 2 221 1 
313 1 125 1 179 1 249 1 102 1 192 1 251 1 180 1 266 1 75 1 166 1 112 1 185 1 
249 1 276 1 102 2 180 2 284 1 313 2 210 1 75 2 95 1 166 2 
0 1 124 1 248 1 4 1 234 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 69 1 192 1 297 1 194 1 
0 1 124 1 248 1 4 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 69 1 192 1 297 1 79 1 18 1 
82 1 197 1 196 1 127 1 171 1 87 1 131 4 210 2 12 1 95 2 247 1 98 1 250 2 304 1 105 2 182 1 156 1 224 1 68 2 315 2 267 1 39 1 193 1 76 1 
313 1 102 1 180 1 75 1 296 1 166 1 112 1 185 1 
125 1 249 2 102 5 276 1 238 1 23 1 180 4 148 1 284 1 313 4 75 5 321 1 166 5 221 1 
313 2 102 2 85 1 180 2 75 2 296 1 166 2 112 1 
291 1 165 1 
291 1 165 1 
48 1 106 1 
48 1 106 1 
48 1 106 1 
48 1 291 2 106 1 165 2 26 1 272 1 
291 1 165 1 53 1 
291 1 165 1 110 1 
291 1 165 1 110 1 
291 1 165 1 110 1 
291 1 165 1 255 1 
291 1 165 1 255 1 
291 1 165 1 255 1 
299 1 158 1 291 1 74 1 165 1 295 1 
299 1 158 1 59 1 291 1 279 1 74 1 165 1 295 1 63 1 
195 1 100 1 300 1 
195 1 100 1 134 1 
300 2 100 3 134 1 278 1 151 1 177 1 
300 1 2 1 100 2 134 1 278 1 151 1 
300 1 100 2 134 1 278 2 151 1 
61 1 6 1 253 1 107 3 91 1 187 1 240 1 286 1 47 1 118 1 270 1 52 1 
104 1 170 1 107 2 121 1 
198 2 279 1 6 1 91 1 286 1 207 1 47 1 52 1 98 1 59 1 253 1 107 2 186 1 187 1 225 1 34 1 116 1 118 1 267 1 270 1 
198 2 279 1 6 1 91 1 207 1 286 1 47 1 52 1 98 1 59 1 253 1 107 1 254 1 186 1 187 1 225 1 34 1 116 1 118 1 267 1 270 1 
73 1 15 1 27 1 
27 1 9 1 
130 1 
149 1 27 1 
199 1 149 1 15 2 16 1 27 3 155 1 
149 1 27 1 155 1 
292 1 27 1 
145 1 250 3 237 1 171 2 128 1 42 2 173 1 131 3 224 3 162 1 71 1 267 1 268 1 139 1 298 1 
145 1 250 3 237 1 171 2 128 1 42 2 173 1 131 4 224 3 315 1 162 1 71 1 267 1 268 1 139 1 298 1 
145 1 250 3 237 1 171 2 128 1 42 2 173 1 131 3 224 3 162 1 71 1 267 1 138 1 268 1 139 1 298 1 
98 2 197 1 21 1 250 8 171 1 200 1 42 1 281 2 131 13 224 2 225 2 315 5 12 1 267 2 268 1 245 1 139 2 167 1 298 1 97 1 327 3 
196 1 232 1 250 1 171 1 127 1 87 1 42 1 131 2 29 1 224 1 68 2 315 1 39 1 139 1 298 1 
0 1 230 1 195 1 124 1 4 1 239 1 5 1 88 1 202 1 8 1 290 1 134 1 49 1 94 1 297 1 96 1 177 1 300 1 100 2 62 2 150 1 310 2 65 1 262 1 30 1 188 1 190 1 161 1 325 1 
0 1 230 1 195 1 124 1 4 1 239 1 88 1 202 1 8 1 283 1 205 1 290 2 134 1 49 1 297 1 96 1 177 1 300 1 100 2 62 3 150 1 310 3 65 1 262 1 30 1 188 1 159 1 190 1 161 1 
0 1 230 1 195 1 124 1 4 1 88 1 202 1 8 1 205 1 290 2 134 1 49 1 297 1 96 1 177 1 100 2 300 1 62 2 150 1 310 2 65 1 30 1 159 1 190 1 
0 1 124 1 4 1 88 1 283 1 93 1 135 1 297 1 96 2 302 1 62 1 150 2 149 1 27 1 310 1 258 1 65 2 262 1 66 1 30 2 69 1 161 1 269 1 
0 1 195 1 124 1 4 1 239 1 5 1 88 1 202 1 8 1 205 1 134 1 49 1 94 1 297 1 96 1 177 1 300 1 100 2 62 1 150 1 310 1 65 1 262 1 30 1 188 1 161 1 
154 1 
46 1 55 1 45 1 123 1 169 1 59 1 35 1 50 1 279 1 119 1 109 1 
46 1 55 1 45 1 123 1 169 1 59 1 35 1 50 1 279 1 119 1 109 1 
55 1 1 1 178 1 198 1 59 1 86 1 61 1 279 1 109 1 91 1 45 1 47 1 35 1 216 1 50 1 319 1 270 1 52 1 
0 1 198 1 59 1 61 1 279 1 88 1 89 1 91 1 187 1 47 1 69 1 191 1 119 2 323 1 270 1 297 1 120 1 52 1 
55 1 45 1 169 1 59 1 35 1 50 1 279 1 119 1 109 1 
55 1 45 1 59 1 136 1 35 1 50 1 279 1 109 1 122 1 
55 1 45 1 123 1 169 1 59 1 35 1 50 1 279 1 119 1 109 1 
59 1 279 1 119 1 323 1 246 1 
141 1 55 1 1 1 198 1 59 1 236 1 61 1 279 1 109 1 91 1 45 1 47 1 35 1 216 1 50 1 319 1 270 1 52 1 
141 1 55 1 1 1 198 1 59 1 236 1 61 1 279 1 201 1 109 1 204 1 261 1 91 1 45 1 47 1 35 1 216 1 50 1 319 1 270 1 52 1 
141 1 55 1 1 1 198 1 59 1 236 1 61 1 279 1 201 1 109 1 204 1 261 1 91 1 45 1 47 1 35 1 216 1 50 1 319 1 270 1 52 1 
1 1 198 1 86 1 279 1 201 1 91 1 45 1 288 1 47 1 11 1 50 1 216 1 52 1 55 1 178 1 59 1 61 1 109 1 35 1 319 1 270 1 
145 1 196 1 250 2 304 1 171 1 127 1 105 1 87 1 128 1 42 1 131 2 173 1 156 1 224 1 68 2 210 1 162 1 71 1 73 1 267 1 39 1 95 1 221 1 247 1 
196 2 197 1 200 1 171 1 127 2 87 2 281 3 282 1 44 1 132 1 131 14 210 4 289 1 12 1 95 11 221 1 247 1 98 2 304 2 250 8 58 1 105 11 224 2 68 4 225 2 315 6 117 1 39 2 37 1 267 2 268 1 326 1 327 3 
0 1 124 1 125 1 196 1 4 1 233 1 234 1 127 1 87 1 43 1 88 1 44 1 131 2 206 1 210 1 289 1 13 1 243 1 297 1 247 1 248 1 249 1 304 1 102 1 250 1 180 1 149 2 27 2 112 1 185 1 155 2 69 1 313 1 68 2 315 1 192 1 37 1 75 1 39 1 194 1 166 1 
0 1 124 1 125 1 196 1 4 1 234 1 127 1 87 1 43 1 88 1 131 1 44 1 133 1 297 1 247 1 248 1 249 1 304 1 102 1 306 1 22 1 180 1 149 2 27 2 112 1 185 1 155 2 313 1 68 2 69 1 315 1 192 1 37 1 75 1 39 1 194 1 166 1 80 1 
0 1 69 1 88 1 297 1 244 1 
196 1 197 1 276 1 171 1 127 1 87 1 131 3 284 1 210 1 212 1 12 1 95 1 247 1 98 1 304 1 102 1 250 1 105 1 180 1 224 1 313 1 68 2 225 1 315 2 39 1 37 1 75 1 267 1 166 1 
98 1 196 1 304 1 250 2 127 1 105 1 87 1 182 1 131 2 156 1 224 1 68 2 210 1 39 1 267 1 95 1 268 1 247 1 
82 1 196 1 197 1 304 1 171 1 127 1 105 1 87 1 131 2 156 1 224 1 68 2 210 1 315 2 12 1 39 1 95 1 247 1 
196 1 197 1 127 1 171 1 87 1 131 4 210 2 12 1 95 2 247 1 98 1 250 2 304 1 105 2 156 1 224 2 225 1 68 2 315 2 267 1 39 1 268 1 
244 1 
244 1 
244 1 
98 1 197 1 196 1 304 1 250 2 171 1 127 1 105 2 87 1 131 4 224 2 68 2 225 1 315 2 210 2 12 1 39 1 267 1 95 2 268 1 247 1 
0 1 124 1 248 1 4 1 234 1 22 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 69 1 192 1 297 1 194 1 
0 1 124 1 248 1 4 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 69 1 241 1 192 1 297 1 79 1 18 1 
196 1 197 1 127 1 171 1 87 1 131 4 210 2 12 1 95 2 247 1 98 1 250 2 304 1 105 2 224 2 225 1 68 2 315 2 267 1 39 1 37 1 268 1 
0 1 124 1 248 1 4 1 234 1 22 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 133 1 192 1 297 1 325 1 194 1 
275 1 197 1 196 1 276 1 127 1 87 1 131 3 284 1 210 1 12 1 95 1 247 1 98 1 304 1 102 1 250 2 180 1 105 1 224 1 313 1 68 2 225 1 315 1 39 1 37 1 75 1 267 1 268 1 166 1 
196 2 197 1 232 1 127 2 87 2 131 6 208 1 242 1 12 1 98 1 250 3 307 1 184 1 264 1 68 4 225 1 315 3 160 1 39 2 320 1 267 1 271 1 
196 2 197 1 232 1 127 2 87 2 131 6 208 1 242 1 12 1 98 1 250 3 307 1 184 1 264 1 68 4 225 1 315 3 160 1 39 2 320 1 267 1 271 1 
197 1 196 1 232 1 127 1 171 2 87 1 128 1 42 1 131 9 173 1 12 1 242 1 98 1 145 1 250 5 307 1 184 1 224 3 264 1 225 1 68 2 315 4 160 1 162 1 71 1 39 1 320 1 267 2 268 1 271 1 
196 2 197 1 232 1 127 2 171 1 87 2 131 6 208 1 242 1 12 1 98 1 250 3 307 1 184 1 224 1 68 4 225 1 315 3 160 1 115 1 39 2 320 1 267 1 271 1 
196 1 197 1 232 1 127 1 87 1 131 6 242 1 12 1 98 1 250 3 307 1 184 1 264 1 68 2 225 1 315 3 160 2 39 1 320 1 267 1 271 2 
0 2 124 1 196 1 4 1 127 1 87 1 88 2 131 2 44 1 287 1 289 1 213 1 297 2 247 1 222 1 301 1 304 1 146 1 102 2 250 1 149 1 27 1 153 1 157 1 68 2 312 2 315 1 37 1 75 2 39 1 166 2 
0 2 195 1 300 1 100 2 124 1 4 1 239 1 147 1 88 2 202 1 8 1 205 1 30 1 134 1 38 1 14 1 297 2 325 1 177 1 
0 1 195 1 300 1 100 2 124 1 4 1 239 1 88 1 202 1 8 1 205 1 10 1 30 1 134 1 14 1 297 1 177 1 
0 1 124 1 4 1 149 1 88 1 27 1 258 1 66 1 30 1 69 1 93 1 38 1 176 1 297 1 
0 1 195 1 300 1 100 2 124 1 4 1 239 1 147 1 88 1 202 1 8 1 205 1 30 1 134 1 38 1 14 1 297 1 177 1 
41 1 
187 1 198 1 47 1 61 1 270 1 89 1 52 1 91 1 
47 1 198 1 316 1 214 1 317 1 73 1 252 1 
141 1 198 1 47 1 236 1 61 1 270 1 52 1 91 1 
0 1 19 1 124 1 231 1 4 2 61 1 149 1 88 1 108 1 27 2 9 1 155 1 91 1 187 1 47 1 69 1 217 1 270 1 297 1 16 1 52 1 
198 1 47 1 61 1 200 1 129 1 281 1 270 1 327 1 52 1 91 1 
145 1 198 2 59 1 61 1 279 1 261 1 91 1 47 2 12 1 162 1 71 1 267 1 270 1 78 1 52 1 328 1 
198 1 61 1 252 1 91 1 316 1 214 1 270 1 52 1 
207 1 98 1 198 2 225 1 116 1 267 1 
0 1 69 1 88 1 297 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
74 1 295 1 
291 1 165 1 
196 1 232 1 200 1 127 1 171 1 129 1 87 1 128 1 42 1 281 1 131 4 173 1 145 1 250 3 224 1 68 2 315 1 162 1 71 1 267 1 39 1 327 1 
196 2 232 1 171 1 200 1 127 2 128 1 129 1 87 2 42 1 281 2 173 1 131 7 92 1 98 1 145 1 250 5 58 1 224 2 68 4 225 1 315 2 162 1 71 1 39 2 267 2 268 1 327 1 
196 3 197 2 232 1 200 1 127 3 171 2 128 1 129 1 87 3 280 1 42 1 281 1 173 1 131 15 92 1 12 2 98 2 145 1 57 1 99 1 250 8 181 1 224 3 31 1 68 6 225 2 315 7 162 1 71 1 39 3 267 3 268 1 327 1 
196 3 197 1 232 1 200 1 127 3 171 2 128 1 129 1 87 3 280 1 42 1 281 1 173 1 131 13 92 1 12 1 98 2 145 1 57 1 99 1 250 9 181 1 224 4 31 1 68 6 225 2 315 4 162 1 71 1 39 3 267 3 268 2 327 1 
196 1 232 1 200 1 127 1 171 1 129 1 87 1 128 1 42 1 281 1 131 4 173 1 145 1 250 3 224 1 68 2 315 1 162 1 71 1 267 1 39 1 327 1 
196 1 197 2 232 1 200 1 127 1 171 1 129 1 87 1 280 1 281 1 131 12 12 2 98 2 57 1 99 1 250 6 224 2 31 1 68 2 225 2 315 6 39 1 267 2 268 1 327 1 
196 4 197 1 232 1 200 1 127 4 171 2 128 1 129 1 87 4 280 1 42 1 281 1 173 1 131 14 92 1 12 1 98 2 145 1 57 1 99 1 250 9 181 2 224 4 31 1 68 8 225 2 315 5 162 1 71 1 39 4 267 3 268 2 327 1 
196 4 197 2 232 1 200 1 127 4 171 3 129 1 87 4 280 1 281 1 131 16 208 1 12 2 98 3 57 1 99 1 250 9 181 2 224 6 31 1 68 8 225 3 315 7 39 4 267 3 268 3 327 1 
145 2 250 3 171 2 128 2 42 1 131 4 173 1 224 4 315 1 162 2 71 1 267 1 268 2 
196 4 197 1 232 1 200 1 127 4 171 2 128 1 129 1 87 4 280 1 42 1 281 1 173 1 131 14 208 1 12 1 98 2 145 1 57 1 99 1 250 9 181 2 224 3 31 1 68 8 225 2 315 5 162 1 71 1 39 4 267 3 268 1 327 1 
145 1 196 2 250 3 171 1 127 2 87 2 128 1 181 1 42 1 131 4 173 1 224 2 68 4 315 1 162 1 71 1 267 1 39 2 268 1 
224 1 145 1 250 2 162 1 71 1 171 1 128 1 73 1 267 1 42 1 131 2 173 1 
98 1 197 1 196 1 250 2 171 1 127 1 87 1 131 4 224 2 92 1 68 2 225 1 315 2 12 1 39 1 267 1 268 1 
98 1 197 1 250 3 58 1 171 1 200 1 281 2 131 7 224 2 225 1 315 4 12 1 267 1 268 1 327 1 
197 2 196 2 171 4 127 2 128 1 87 2 42 1 281 2 282 1 173 1 131 19 175 1 12 2 98 2 145 2 58 1 250 10 181 2 224 8 225 2 68 4 315 9 162 2 71 1 267 3 39 2 268 4 326 1 327 2 
315 1 281 1 131 1 
250 1 131 1 327 1 
98 1 196 1 197 1 250 3 127 1 171 2 87 1 172 1 131 6 224 3 68 2 92 1 225 1 315 3 12 1 39 1 267 1 268 1 
196 1 197 2 232 1 200 1 127 1 171 1 129 1 87 1 280 1 281 1 131 12 12 2 98 2 57 1 99 1 250 6 224 2 31 1 68 2 225 2 315 6 39 1 267 2 268 1 327 1 
250 1 71 1 267 1 131 1 
145 1 196 1 250 1 171 1 127 1 128 1 87 1 181 1 131 3 173 1 224 2 175 1 68 2 315 2 162 1 39 1 268 1 
145 1 196 1 232 1 250 4 127 1 171 2 87 1 131 7 224 4 68 2 315 3 162 1 12 1 71 1 39 1 267 2 268 2 328 1 
98 1 196 1 232 1 250 2 127 1 87 1 131 2 224 1 68 2 39 1 267 1 268 1 
98 1 197 1 196 1 232 1 250 2 171 1 127 1 87 1 131 4 224 2 68 2 225 1 315 2 12 1 39 1 267 1 268 1 
145 1 196 3 232 1 250 1 127 3 171 1 87 3 181 1 131 3 224 2 175 1 208 1 68 6 315 2 162 1 39 3 268 1 
98 2 197 1 196 3 232 1 21 1 250 7 127 3 200 1 87 3 281 2 131 11 224 1 225 2 68 6 208 1 92 1 315 4 12 1 267 2 39 3 268 1 245 1 97 1 327 3 
102 1 238 1 75 1 321 1 166 1 220 1 221 1 
144 1 102 1 305 1 238 1 309 1 33 1 75 1 218 1 321 1 220 1 166 1 221 1 
0 1 124 1 69 1 4 1 93 1 73 1 149 1 88 1 297 1 27 1 258 1 
0 1 248 1 124 1 4 1 249 1 102 1 234 1 180 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 313 1 69 1 192 1 75 1 297 1 166 1 
0 1 124 1 4 1 234 1 88 1 297 1 221 1 248 1 249 1 102 1 180 1 149 1 27 1 112 1 155 1 67 1 313 1 75 2 166 2 77 1 
0 1 124 1 4 1 88 1 297 1 221 1 18 1 248 1 249 1 102 1 180 1 149 1 27 1 112 1 155 1 67 1 313 1 75 2 166 2 77 1 
0 1 143 1 124 1 4 1 59 1 279 1 149 1 183 1 43 1 88 1 27 4 155 1 9 1 67 1 292 1 119 1 297 1 15 1 
0 1 124 1 4 1 59 1 279 1 149 1 43 1 88 1 27 4 28 1 155 1 9 1 67 1 292 1 119 1 297 1 15 1 
0 1 124 1 4 1 20 1 88 1 297 1 
0 6 124 2 4 3 88 5 7 1 205 1 287 1 294 1 16 1 297 6 20 1 149 2 27 3 155 1 113 1 263 1 312 1 69 2 36 1 318 1 
0 1 124 1 196 1 4 1 234 1 127 1 87 1 43 1 88 1 133 1 297 1 247 1 248 1 249 1 304 1 146 1 102 1 306 1 180 1 22 1 149 2 27 2 112 1 185 1 155 2 313 1 68 2 192 1 37 1 75 1 39 1 166 1 325 1 194 1 
107 1 
0 2 19 1 124 1 20 1 4 2 149 1 88 2 27 2 155 1 15 1 297 2 16 1 325 1 
0 4 124 1 4 1 277 1 149 1 88 4 27 1 258 1 69 1 93 1 229 1 297 4 325 1 
0 2 124 1 3 1 101 1 4 2 149 1 152 1 88 2 27 1 155 1 67 1 36 1 318 1 297 2 
0 1 195 1 100 1 124 1 69 1 4 1 134 1 88 1 297 1 8 1 
0 2 124 1 4 1 149 1 88 2 153 1 27 1 205 1 287 1 297 2 325 1 
0 5 124 2 4 2 149 2 88 4 7 1 27 3 258 1 113 1 287 1 67 1 69 1 93 1 229 1 297 5 325 1 
0 5 124 2 4 2 149 2 88 4 27 3 258 1 113 1 287 1 67 1 69 1 32 1 93 1 229 1 297 5 325 1 
0 1 248 1 124 1 4 1 249 1 102 1 180 1 149 2 43 1 88 1 27 2 112 1 185 1 155 2 313 1 69 1 192 1 75 1 297 1 166 1 18 1 
0 1 124 1 4 2 149 1 88 1 27 1 155 1 263 1 67 1 36 1 318 1 297 1 16 1 
102 1 103 1 308 1 311 1 157 1 213 1 75 1 166 1 222 1 
126 1 308 1 219 1 
311 1 223 1 103 1 308 1 221 1 
311 1 223 1 179 1 103 1 126 1 308 1 192 1 251 1 24 1 219 1 107 1 112 1 185 1 
262 1 230 1 189 1 290 1 190 1 60 1 161 1 62 3 94 1 310 3 
209 1 303 1 164 1 260 1 
190 1 
230 1 190 1 73 1 
262 1 230 1 190 1 161 1 62 1 310 1 
150 1 310 1 65 1 
142 1 56 1 230 1 60 2 62 3 310 3 262 1 190 1 161 1 265 1 94 1 
262 1 230 1 314 1 290 1 190 1 161 1 62 2 310 2 
195 1 300 1 100 1 62 1 25 1 310 1 260 1 262 1 161 1 164 1 94 1 
262 1 190 1 161 1 62 1 94 1 310 1 
262 1 230 1 190 1 161 1 62 1 164 1 94 1 310 1 
83 1 62 2 310 2 174 1 262 2 190 1 161 2 137 1 94 1 
230 1 62 3 310 3 260 1 262 1 209 1 189 1 290 2 190 1 161 1 164 1 94 1 140 1 
230 1 195 1 100 2 300 1 62 2 310 2 257 1 262 1 134 1 290 1 190 1 161 1 94 1 177 1 
230 1 62 4 310 4 259 1 260 1 262 2 209 1 314 1 290 2 190 1 161 2 164 1 94 1 
262 1 230 1 190 1 161 1 62 1 94 1 310 1 
56 1 230 2 303 1 60 1 62 4 310 4 260 1 262 1 209 1 290 2 190 2 161 1 265 1 164 1 
285 1 262 1 230 1 226 1 290 1 190 1 161 1 62 2 51 1 94 1 310 2 
56 2 230 1 60 2 62 3 310 3 90 1 262 1 190 1 161 1 265 1 94 1 
54 1 168 2 164 2 111 1 
262 1 161 1 215 1 62 1 94 1 310 1 
262 1 230 1 189 1 290 1 190 1 161 1 62 2 94 1 310 2 
70 1 
262 1 230 1 190 1 161 1 62 1 94 1 310 1 

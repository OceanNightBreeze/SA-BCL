#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (15,251) 129 (11,125) (11,125) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (15,251) 129 (11,125) (11,125) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (15,251) 129 (11,125) (11,125) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (15,251) 129 (11,125) (11,125) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (9,127,219,238,301) (53,285) (53,285) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 126 (143,148,155) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 186 52 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 186 52 70 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (108,151,175,271) (108,151,175,271) (21,56,168) (21,56,168) (21,56,168) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (108,151,175,271) (108,151,175,271) (21,56,168) (21,56,168) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (108,151,175,271) (108,151,175,271) (21,56,168) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (108,151,175,271) (108,151,175,271) (21,56,168) (21,56,168) (21,56,168) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 234 49 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 42 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 41 86 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 41 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 41 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 41 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 41 90 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 114 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 78 134 324 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 111 204 134 324 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 111 204 134 324 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 111 204 134 324 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
125 1 105 1 11 1 108 1 151 1 128 1 15 1 129 1 100 1 167 1 271 1 
125 1 105 1 11 1 108 1 151 1 128 1 15 1 129 1 100 1 167 1 271 1 
125 1 105 1 11 1 108 1 151 1 128 1 15 1 129 1 100 1 167 1 271 1 
125 1 105 1 11 1 108 1 151 1 128 1 15 1 129 1 100 1 167 1 271 1 
279 1 97 1 47 1 2 1 74 3 271 4 167 4 312 2 175 3 108 1 151 1 295 2 192 1 128 1 228 1 213 1 130 1 131 1 
105 1 53 1 108 1 151 1 128 1 97 1 308 1 285 1 100 1 167 1 271 1 238 1 
279 1 175 1 251 1 108 2 151 2 295 1 128 1 2 1 74 2 131 1 100 1 167 3 271 3 
279 1 218 1 280 1 251 1 97 1 47 1 2 1 74 5 271 9 167 9 100 1 312 2 175 7 108 2 241 1 151 2 13 1 295 4 192 1 228 1 128 1 213 1 130 1 131 3 
279 1 218 1 280 1 251 1 97 1 47 1 2 1 74 5 271 9 167 9 100 1 312 2 175 7 108 2 241 1 151 2 13 1 295 4 192 1 228 1 128 1 213 1 130 1 131 3 
257 1 42 1 256 1 
321 2 244 1 256 1 
8 2 273 1 179 2 245 1 113 2 72 2 262 2 297 2 
94 1 1 2 281 2 179 2 96 1 284 1 99 1 7 1 147 1 104 1 8 2 291 1 12 1 113 3 262 2 297 3 59 1 19 1 197 1 60 1 232 1 157 1 233 1 66 1 165 1 69 1 72 2 205 1 270 2 121 1 311 2 122 2 172 1 314 1 273 1 81 1 85 1 245 1 87 1 
8 1 273 1 40 1 179 1 85 1 46 1 113 1 72 1 262 1 297 1 
249 1 235 1 137 1 180 1 282 1 71 1 256 1 183 1 257 1 85 1 113 1 262 1 297 1 231 1 
235 2 137 1 179 1 180 1 282 1 71 1 72 1 256 1 257 1 8 1 85 1 113 1 262 1 297 1 231 2 
235 1 246 1 51 1 231 1 89 1 
257 1 235 2 73 1 51 1 231 2 256 1 264 1 89 1 
235 1 51 1 231 1 
278 1 235 1 40 1 179 1 46 1 72 1 8 1 273 1 85 1 113 1 262 1 231 1 297 1 89 1 
256 1 
278 1 235 2 40 1 179 1 253 1 46 1 72 1 51 1 256 1 8 1 257 1 273 1 85 1 113 1 262 1 297 1 231 2 89 1 264 1 
160 1 248 1 235 5 118 2 236 1 140 1 77 2 141 1 51 2 182 2 256 1 257 1 150 1 109 1 231 5 88 1 216 1 264 1 89 2 
66 1 1 1 165 1 69 1 72 1 206 1 121 1 270 1 122 1 147 1 8 1 173 1 314 1 113 2 262 1 87 1 297 2 59 1 60 1 65 1 
42 1 245 1 
117 1 179 1 72 1 208 1 8 1 113 2 245 2 262 2 297 2 
110 1 294 1 206 1 
66 1 1 1 165 1 69 1 96 1 121 1 270 1 255 1 122 1 147 1 314 1 85 1 245 1 113 1 297 1 87 1 59 1 60 1 
8 3 179 1 245 1 113 3 72 3 262 3 297 3 65 1 
8 1 85 1 46 1 113 1 72 1 262 1 297 1 
8 1 208 1 117 1 179 1 85 1 113 1 72 1 262 1 297 1 
137 1 1 1 281 1 180 1 179 2 282 1 284 1 99 1 7 1 147 1 104 1 8 3 291 1 224 1 113 4 262 3 297 4 231 1 59 1 19 1 197 1 60 1 157 1 65 1 66 1 235 1 165 1 69 1 71 1 72 3 205 1 121 1 270 1 311 2 122 1 239 1 208 1 173 1 314 1 273 1 81 1 85 1 245 1 87 1 
8 1 249 1 245 1 113 2 72 1 269 1 262 2 297 2 65 1 
235 1 300 1 137 1 179 1 180 1 282 1 71 1 72 3 256 1 208 1 8 3 173 1 224 1 85 1 113 3 262 3 231 1 297 3 65 2 
179 1 72 2 206 1 208 1 8 2 110 1 113 2 262 2 297 2 65 1 
66 1 1 1 165 1 69 1 96 1 121 1 270 1 122 1 147 1 314 1 85 1 245 1 113 1 297 1 87 1 59 1 60 1 
66 1 93 1 1 1 69 1 96 1 121 1 270 1 122 1 147 1 314 1 85 1 245 1 113 1 297 1 87 1 60 1 115 1 
133 1 0 1 281 2 284 1 206 1 99 2 311 2 104 1 291 1 110 1 294 1 81 1 229 1 154 1 230 1 296 1 197 1 19 1 323 1 
8 1 137 1 85 1 113 1 72 1 262 1 297 1 200 1 
249 1 179 1 25 1 72 4 269 1 8 4 208 1 173 1 113 5 245 1 262 5 297 5 158 1 65 2 
8 2 85 1 46 1 113 2 72 2 262 2 297 2 200 1 
164 1 143 1 
164 1 143 1 
126 1 164 1 143 1 148 1 
126 1 164 1 143 1 148 1 
126 1 148 1 
92 1 164 1 143 1 
126 1 164 1 143 1 148 1 
164 1 155 1 143 1 
92 1 164 1 143 1 
92 1 164 1 143 1 
31 1 164 1 143 1 
31 1 164 1 143 1 
31 1 164 1 143 1 
186 1 252 1 191 1 164 1 143 1 52 1 
186 1 235 1 252 1 191 1 164 1 70 1 231 1 143 1 52 1 
192 1 97 1 47 1 
192 1 97 1 308 1 
189 1 47 2 97 3 308 1 287 1 170 1 
106 1 189 1 47 1 97 2 308 1 287 1 
189 1 47 1 97 2 308 1 287 2 
39 1 50 1 51 1 182 1 256 2 257 1 292 2 293 1 109 2 190 1 111 1 16 1 230 1 296 1 231 5 264 1 159 1 160 1 23 1 118 1 235 5 236 3 163 1 303 1 204 1 77 1 321 3 176 2 32 1 244 1 275 2 89 4 
278 1 235 2 40 1 178 1 179 1 46 1 72 1 51 1 256 1 8 1 257 1 273 1 210 1 85 1 193 1 113 1 262 1 246 1 297 1 231 2 89 2 
278 1 40 1 39 1 179 1 46 1 182 1 256 3 8 1 257 1 292 2 293 1 109 2 190 1 111 1 113 1 230 1 262 1 296 1 297 1 231 3 159 1 118 1 235 3 236 3 163 1 303 1 204 1 72 1 77 1 273 1 85 1 321 4 176 2 244 2 275 1 88 1 89 2 
39 1 182 1 256 2 292 2 293 1 109 2 190 1 111 1 230 1 296 1 231 2 159 1 118 1 235 2 236 3 163 1 303 1 204 1 77 1 83 1 321 4 176 2 244 2 275 1 88 1 89 1 
29 1 42 1 
66 1 3 1 
112 1 
66 1 60 1 
66 1 68 1 69 1 29 2 79 1 112 1 60 1 
66 1 69 1 60 1 
66 1 149 1 
159 1 37 2 0 3 281 7 268 1 99 3 27 1 145 1 172 4 290 1 10 1 226 1 229 2 296 1 132 1 199 1 277 1 
159 1 37 2 0 3 281 7 268 1 99 3 27 1 145 1 172 4 290 1 10 1 226 1 229 2 296 1 132 1 199 1 277 1 
159 1 37 2 0 3 281 7 283 1 268 1 99 3 27 1 145 1 172 4 290 1 10 1 226 1 229 2 296 1 132 1 199 1 277 1 
37 1 0 11 281 29 284 1 99 14 4 1 145 2 104 1 290 3 223 3 10 6 291 1 226 1 153 1 229 5 111 2 230 2 296 4 199 3 159 4 267 1 204 2 268 1 311 2 27 1 172 15 30 3 240 1 81 1 211 1 132 2 214 1 35 1 277 1 
37 2 0 4 281 9 284 2 99 4 145 1 104 2 290 1 291 2 10 1 226 1 229 3 296 1 263 1 199 1 159 1 302 1 268 1 311 4 27 1 172 5 81 2 211 1 132 1 
22 1 217 1 1 1 270 1 168 1 100 1 271 2 167 1 122 1 175 1 108 1 56 1 151 1 128 1 243 1 247 1 21 1 298 1 325 1 
22 1 217 1 299 1 1 1 270 1 168 1 100 1 271 3 167 2 122 1 174 1 175 2 107 1 108 1 151 1 243 1 247 1 21 1 325 1 
22 1 217 1 299 1 1 1 270 1 271 2 167 1 100 1 122 1 174 1 175 2 243 1 21 1 325 1 
250 1 217 2 266 1 1 1 166 1 121 1 270 1 100 2 271 1 167 1 122 1 107 1 108 1 151 1 243 2 17 1 325 2 
22 1 217 1 1 1 270 1 168 1 100 1 271 2 167 1 122 1 174 1 175 1 108 1 56 1 151 1 128 1 243 1 247 1 21 1 325 1 
64 1 
249 1 39 1 137 1 1 2 180 1 282 1 49 1 51 2 182 1 183 1 103 1 225 1 109 1 113 1 262 1 156 1 297 1 194 1 231 3 60 1 20 1 234 1 264 1 66 1 160 1 118 1 235 3 120 1 236 1 71 1 270 2 121 2 77 1 122 2 123 1 314 1 85 1 84 1 87 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 3 249 1 120 1 137 1 180 1 253 1 282 1 71 1 49 1 51 1 103 1 183 1 225 1 85 1 113 1 262 1 231 3 297 1 234 1 264 1 
160 1 235 2 118 1 249 1 120 1 137 1 180 1 282 1 71 1 49 1 77 1 182 1 103 1 183 1 225 1 85 1 113 1 262 1 297 1 231 2 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
235 2 249 1 120 1 137 1 180 1 282 1 71 1 49 1 103 1 183 1 225 1 85 1 113 1 262 1 231 2 297 1 234 1 
160 1 235 2 118 1 249 1 120 1 137 1 180 1 282 1 71 1 49 1 77 1 182 1 103 1 183 1 225 1 85 1 113 1 262 1 297 1 231 2 234 1 
133 1 37 1 0 2 42 1 281 6 284 1 99 3 104 1 290 1 291 1 226 1 110 1 294 1 229 2 296 1 19 1 197 1 199 1 159 1 268 1 206 1 311 2 27 1 172 3 81 1 245 2 
0 2 136 1 281 14 284 2 286 1 99 6 4 1 7 1 146 1 104 2 223 3 291 2 10 2 12 1 294 11 110 3 261 1 111 2 58 1 230 1 296 1 19 2 197 1 159 2 204 2 206 11 311 4 313 1 172 8 30 3 81 2 245 1 
1 1 96 1 99 1 255 1 7 1 8 1 104 1 12 1 110 1 113 2 262 1 197 1 19 1 201 1 207 1 121 1 270 1 122 1 281 2 138 1 284 1 286 1 147 1 291 1 297 2 59 1 60 1 65 1 66 1 165 1 69 1 72 1 311 2 172 1 173 1 314 1 81 1 85 1 245 1 87 1 
0 2 1 1 99 2 7 1 8 1 104 2 10 2 110 2 111 1 113 2 262 1 197 2 19 2 204 1 270 1 121 1 206 2 122 1 38 1 281 5 284 2 286 1 147 1 291 2 294 2 152 1 297 2 59 1 157 1 60 1 65 1 66 1 159 1 165 1 69 1 72 1 75 1 169 1 311 4 172 3 173 1 314 1 315 1 81 2 87 1 
1 2 281 2 284 1 99 1 6 1 7 1 185 1 104 1 291 1 12 1 156 1 61 1 19 1 197 1 232 1 60 2 66 2 69 1 270 2 121 1 122 2 311 2 172 1 314 3 209 1 318 1 81 1 82 1 84 1 87 2 
0 1 179 1 281 3 284 1 286 1 99 2 104 1 8 1 291 1 110 1 294 1 229 1 111 1 113 1 230 1 262 1 296 1 297 1 19 1 197 1 159 1 204 1 72 1 206 1 311 2 208 1 172 1 81 1 320 1 
133 1 159 1 0 1 281 2 48 1 284 1 206 1 311 2 104 1 172 2 10 1 291 1 110 1 294 1 81 1 111 1 197 1 19 1 
133 1 0 1 281 2 284 1 206 1 99 2 311 2 104 1 291 1 110 1 294 1 81 1 229 1 230 1 296 1 197 1 19 1 323 1 
133 1 0 2 281 4 284 1 99 2 104 1 291 1 10 1 294 2 110 2 229 1 111 1 230 1 296 1 19 1 197 1 159 1 204 1 206 2 311 2 172 2 81 1 
159 1 0 1 281 2 48 1 284 1 206 1 311 2 104 1 172 2 10 1 291 1 110 1 294 1 82 1 81 1 111 1 197 1 19 1 
0 1 281 2 284 1 206 1 99 2 311 2 104 1 291 1 110 1 294 1 82 1 81 1 229 1 230 1 296 1 197 1 19 1 323 1 
159 1 0 1 281 2 204 1 284 1 206 1 311 2 104 1 172 2 10 1 291 1 110 1 294 1 82 1 81 1 111 1 197 1 19 1 
159 1 0 1 281 2 204 1 284 1 206 1 311 2 104 1 172 2 10 1 291 1 110 1 294 1 81 1 111 1 197 1 19 1 
1 1 281 2 96 1 284 1 99 1 147 1 7 1 104 1 291 1 12 1 113 1 297 1 59 1 60 1 157 1 197 1 19 1 66 1 165 1 69 1 270 1 121 1 122 1 311 2 172 1 314 1 81 1 85 1 245 1 87 1 
93 1 1 1 281 1 96 1 284 1 99 1 147 1 7 1 104 1 291 1 113 1 297 1 60 1 197 1 19 1 115 1 66 1 69 1 270 1 121 1 122 1 311 2 314 1 317 1 81 1 85 1 245 1 87 1 
159 1 0 1 281 2 204 1 286 1 284 1 206 1 311 2 104 1 172 2 10 1 291 1 110 1 294 1 81 1 111 1 197 1 19 1 
0 1 1 1 281 2 284 1 147 1 104 1 10 1 291 1 110 1 294 1 111 1 113 1 297 1 59 1 157 1 60 1 197 1 19 1 298 1 159 1 66 1 165 1 69 1 204 1 206 1 75 1 270 1 122 1 311 2 172 2 314 1 81 1 87 1 
0 1 179 1 281 2 284 1 286 1 181 1 104 1 8 1 10 1 291 1 294 1 110 1 111 1 113 1 262 1 297 1 19 1 197 1 159 1 204 1 72 1 206 1 311 2 208 1 172 2 81 1 
41 1 281 4 203 1 306 1 305 1 284 2 99 2 139 1 237 1 4 1 311 4 5 1 172 2 104 2 30 1 291 2 223 1 81 2 86 1 263 1 
90 1 41 1 281 10 203 1 305 2 284 1 139 2 99 5 4 2 237 3 311 2 5 1 172 5 104 1 272 1 30 2 223 2 291 1 81 1 263 1 324 1 
90 1 41 1 281 4 203 1 306 1 305 1 284 2 99 2 139 1 237 1 4 1 311 4 5 1 172 2 104 2 30 1 291 2 223 1 81 2 263 1 
90 1 41 1 281 4 203 1 306 1 305 1 284 2 99 2 139 1 237 1 4 1 311 4 5 1 172 2 104 2 30 1 291 2 223 1 81 2 263 1 
90 1 37 2 0 2 41 1 281 20 284 1 139 1 99 9 4 2 5 1 104 1 290 2 223 2 291 1 226 2 229 2 296 2 263 1 199 2 159 2 203 1 305 1 268 2 237 3 311 2 27 2 172 11 30 2 272 1 81 1 324 1 
1 2 281 2 286 1 284 1 99 1 7 1 104 1 291 1 12 1 14 1 113 2 262 2 297 2 60 1 19 1 197 1 232 2 66 1 307 1 26 1 270 2 122 2 311 2 124 1 172 1 314 1 318 1 81 1 33 1 87 1 34 1 
22 1 1 2 270 2 122 2 174 1 188 1 227 1 247 1 177 1 325 1 298 1 
22 1 1 1 270 1 122 1 174 1 227 1 242 1 247 1 325 1 
266 1 188 1 1 1 288 1 270 1 121 1 122 1 325 1 
22 1 174 1 188 1 227 1 1 1 270 1 247 1 122 1 177 1 325 1 
221 1 
257 1 236 1 42 1 109 1 140 1 256 1 216 1 
98 1 51 1 182 1 256 2 257 1 109 1 18 1 231 1 63 1 264 1 160 1 118 1 235 1 236 1 77 1 321 1 244 1 
66 2 160 1 118 1 1 1 69 1 77 1 121 1 270 1 3 1 182 1 122 1 314 2 79 1 87 1 114 1 215 1 60 1 
91 1 134 1 51 1 4 1 182 2 256 4 257 1 292 4 223 1 55 1 109 3 111 1 230 1 296 1 231 1 264 1 160 2 159 1 235 1 118 2 236 5 67 1 204 1 77 2 310 1 78 1 30 1 321 7 176 4 244 4 324 1 
278 1 40 1 179 1 46 1 182 1 8 1 290 1 109 2 153 1 113 1 296 1 262 1 297 1 231 1 199 1 160 1 159 2 118 1 235 1 236 2 67 2 72 1 309 1 77 1 76 1 27 1 273 1 85 1 
160 1 118 1 236 1 77 1 140 1 182 1 256 1 257 1 109 1 216 1 
159 2 236 5 67 2 204 2 309 1 256 5 292 5 109 5 152 1 321 10 111 2 176 5 244 5 230 2 296 2 
257 1 235 1 231 1 51 1 256 1 264 1 
39 2 1 4 51 4 182 2 144 1 109 2 156 1 194 1 231 3 60 1 20 1 264 2 66 1 160 1 24 2 118 2 235 3 236 2 304 1 77 2 270 4 121 2 122 4 123 2 314 1 84 1 274 1 87 1 88 1 
1 1 281 1 179 2 284 1 99 1 7 1 147 1 8 2 104 1 291 1 113 3 262 2 297 3 59 1 157 1 60 1 197 1 19 1 66 1 165 1 69 1 72 2 205 1 270 1 121 1 311 2 122 1 314 1 273 1 81 1 245 1 87 1 
37 1 160 1 118 1 39 1 236 1 77 1 182 1 256 4 123 1 257 2 292 2 109 2 321 4 176 2 244 2 
186 1 191 1 
186 1 191 1 
186 1 191 1 
186 1 191 1 
186 1 191 1 
186 1 191 1 
186 1 191 1 
186 1 191 1 
164 1 143 1 
37 1 159 1 0 3 281 8 268 1 284 2 99 4 311 4 27 1 172 4 104 2 290 1 10 1 291 2 226 1 81 2 211 1 229 2 296 1 199 1 
37 1 159 1 0 2 42 1 281 6 268 1 99 3 27 1 172 3 290 1 226 1 229 2 296 1 199 1 
159 1 0 2 281 4 204 1 284 1 99 2 311 2 104 1 172 2 291 1 10 1 81 1 229 1 111 1 230 1 296 1 322 1 
172 1 30 1 223 1 281 2 99 1 4 1 
37 1 0 9 136 1 281 23 284 2 99 12 146 1 104 2 290 2 10 4 223 2 291 2 226 1 229 5 111 2 57 1 230 2 296 3 199 2 159 3 204 2 268 1 311 4 27 1 172 11 313 1 30 2 211 2 81 2 
223 1 281 1 99 1 
172 1 30 1 281 1 
159 1 0 3 281 6 204 1 284 1 99 3 311 2 104 1 172 3 291 1 10 1 81 1 152 1 229 2 111 1 230 1 322 1 296 1 
281 2 284 1 99 1 4 1 311 2 172 1 104 1 291 1 223 1 30 1 81 1 263 1 324 1 
159 1 0 2 281 6 99 3 27 1 172 3 290 1 10 1 229 1 296 1 199 1 
0 2 281 3 268 1 284 1 99 2 311 2 172 1 104 1 290 1 10 1 291 1 226 1 211 1 81 1 229 1 57 1 199 1 
159 2 0 5 281 10 284 1 99 5 311 2 27 1 104 1 172 5 290 2 291 1 10 2 81 1 153 1 229 3 296 2 263 1 199 2 
159 1 0 1 281 2 284 1 311 2 104 1 172 2 291 1 10 1 81 1 111 1 263 1 
159 1 0 2 281 4 204 1 284 1 99 2 311 2 104 1 172 2 291 1 10 1 81 1 229 1 111 1 230 1 296 1 263 1 
0 2 281 3 306 1 284 3 99 2 311 6 104 3 172 1 290 1 291 3 10 1 211 1 81 3 229 1 57 1 263 1 199 1 
37 1 0 10 281 29 284 5 99 15 4 1 104 5 290 3 223 3 291 5 10 4 226 1 229 6 57 1 111 2 230 2 296 4 263 1 199 3 159 4 267 1 306 1 204 2 268 1 311 10 27 2 172 14 30 3 211 2 81 5 322 1 214 1 35 1 
159 2 91 1 134 1 0 1 281 10 204 2 284 1 310 1 99 4 4 1 78 1 311 2 172 6 104 1 291 1 223 1 30 1 81 1 229 1 111 2 230 1 296 1 263 1 324 1 
91 1 0 1 134 1 281 10 284 2 99 4 4 1 104 2 223 1 291 2 229 1 111 2 230 1 296 1 263 1 159 2 204 2 310 1 78 1 311 4 172 6 30 1 81 2 322 1 324 1 
37 1 0 4 281 15 284 2 99 7 4 1 104 2 290 2 10 1 223 1 291 2 226 1 153 1 229 3 296 3 263 1 199 2 159 3 268 1 311 4 27 2 172 8 30 1 81 2 322 1 324 1 
37 1 0 7 281 15 284 2 99 7 4 1 104 2 290 2 10 3 223 1 291 2 226 1 153 1 229 4 296 3 263 1 199 2 159 3 268 1 311 4 27 2 172 8 30 1 81 2 322 1 324 1 
159 2 91 1 134 1 0 1 281 10 204 2 284 1 310 1 99 4 4 1 78 1 311 2 172 6 104 1 291 1 223 1 30 1 81 1 229 1 111 2 230 1 296 1 263 1 324 1 
281 2 284 1 99 1 4 1 311 2 172 1 104 1 291 1 223 1 30 1 81 1 263 1 324 1 
281 2 284 2 99 1 4 1 311 4 172 1 104 2 30 1 291 2 223 1 81 2 322 1 263 1 324 1 
281 2 306 1 284 2 99 1 4 1 311 4 172 1 104 2 30 1 291 2 223 1 81 2 263 1 324 1 
159 1 0 6 281 7 268 1 99 4 27 1 172 3 290 3 10 3 226 2 229 3 296 1 199 3 
281 2 306 1 284 2 99 1 4 1 311 4 172 1 104 2 30 1 291 2 223 1 81 2 263 1 324 1 
249 1 161 1 245 1 113 1 262 1 269 1 297 1 
249 1 161 1 269 1 289 1 171 1 222 1 245 1 113 1 262 1 276 1 297 1 198 1 
66 1 314 1 42 1 1 1 84 1 156 1 87 1 270 1 121 1 60 1 122 1 
1 1 96 1 147 1 8 1 113 2 262 1 297 2 60 1 65 1 66 1 165 1 69 1 72 1 270 1 121 1 122 1 314 1 85 1 245 1 87 1 
137 1 1 1 282 1 96 1 147 1 8 2 149 1 113 2 262 2 297 2 60 2 65 1 66 3 24 1 165 1 69 2 72 1 270 1 122 1 314 1 80 1 85 2 245 1 87 1 
93 1 137 1 1 1 282 1 96 1 147 1 8 2 149 1 113 2 262 2 297 2 60 2 65 1 66 3 24 1 69 2 72 1 270 1 122 1 314 1 80 1 85 2 245 1 87 1 
278 1 66 1 235 1 24 1 40 1 1 1 179 1 46 1 72 1 270 1 3 1 256 1 122 1 28 1 8 1 257 1 273 1 85 1 113 1 262 1 297 1 231 1 
278 1 66 1 235 1 24 1 40 1 1 1 179 1 46 1 72 1 270 1 3 1 256 1 122 1 102 1 8 1 257 1 273 1 85 1 113 1 262 1 297 1 231 1 
1 1 270 1 122 1 187 1 314 1 87 1 
66 1 1 1 69 1 121 1 270 1 122 1 6 1 314 2 79 1 209 1 54 1 87 1 60 1 
0 1 1 1 99 2 8 1 104 2 110 1 14 1 113 2 262 1 197 2 19 2 199 1 268 1 270 1 206 1 122 1 27 1 37 1 38 1 281 5 284 2 286 1 147 1 290 1 291 2 226 1 294 1 229 1 296 1 297 2 59 1 157 1 60 1 298 1 65 1 66 1 159 1 165 1 69 1 72 1 75 1 311 4 172 3 314 1 81 2 245 2 87 1 
278 1 40 1 1 1 179 1 46 1 220 1 140 1 182 1 256 1 8 1 257 1 290 1 109 4 153 1 113 1 262 1 296 2 297 1 231 1 199 1 159 2 160 1 118 1 235 1 236 4 162 1 67 2 72 1 309 1 121 1 77 1 270 1 122 1 27 1 273 1 85 1 274 1 89 1 216 1 
66 1 1 1 69 1 270 1 122 1 29 1 187 1 314 2 79 1 112 1 87 1 215 1 60 1 
66 2 1 2 69 1 121 1 270 2 122 2 6 1 185 1 314 3 209 1 84 1 156 1 87 2 61 1 60 2 298 1 
66 1 1 1 69 1 270 1 122 1 6 1 185 1 314 2 209 1 319 1 87 1 61 1 60 1 
1 1 97 1 308 1 121 1 270 1 122 1 101 1 314 1 192 1 87 1 
66 1 1 2 307 1 270 2 122 2 124 1 174 1 314 1 87 1 60 1 298 1 
1 2 44 1 6 1 185 1 156 1 60 3 61 1 298 1 66 4 202 1 69 1 307 1 270 3 121 1 122 3 314 4 209 1 84 1 87 3 
43 1 1 2 44 1 6 1 185 1 156 1 60 3 61 1 298 1 66 4 69 1 307 1 270 3 121 1 122 3 314 4 209 1 84 1 87 3 
93 1 1 1 96 1 147 1 8 1 113 2 262 1 297 2 60 1 65 1 66 1 69 1 72 1 270 1 121 1 122 1 314 1 85 1 245 1 87 1 
66 1 24 1 1 1 69 1 270 1 122 1 6 1 314 2 79 1 209 1 54 1 87 1 60 1 
45 1 26 1 142 1 33 1 113 1 262 1 34 1 297 1 36 1 
95 1 265 1 36 1 
45 1 245 1 142 1 184 1 36 1 
235 2 137 1 180 1 282 1 95 1 45 2 71 1 142 2 256 1 184 2 257 1 224 1 85 1 245 1 231 2 195 1 36 1 89 1 265 1 
279 1 42 1 2 1 74 1 
279 1 108 1 151 1 2 1 74 1 167 1 271 1 
243 1 100 1 167 1 
279 1 219 1 2 1 74 1 271 3 167 3 238 2 9 1 127 1 108 1 151 1 128 1 
279 1 175 1 108 1 151 1 2 1 74 1 167 2 271 2 312 1 
108 1 151 1 295 1 192 1 228 1 128 1 97 1 47 1 74 1 167 1 271 1 
279 1 108 1 151 1 128 1 74 1 167 1 271 1 
279 2 108 1 151 1 128 1 2 1 167 1 271 1 
108 1 151 1 260 1 128 1 167 1 271 1 62 1 
279 1 175 2 218 1 280 1 108 1 151 1 295 1 128 1 2 1 74 2 131 1 167 3 271 3 
279 1 97 2 47 1 2 1 308 1 74 1 254 1 271 2 167 2 170 1 175 1 108 1 151 1 128 1 192 1 
279 1 2 1 74 2 271 4 167 4 312 1 175 2 108 2 151 2 295 1 128 1 213 1 131 1 
279 1 108 1 151 1 128 1 2 1 74 1 167 1 271 1 
279 2 135 1 219 1 2 2 74 3 271 4 167 4 238 1 127 1 175 2 108 1 151 1 295 1 131 1 
279 1 175 1 259 1 108 1 241 1 151 1 128 1 2 1 74 1 167 2 271 2 116 1 
279 1 301 1 219 1 2 1 74 1 271 3 167 3 238 2 127 2 108 1 151 1 128 1 
119 2 258 1 316 1 74 2 
108 1 151 1 212 1 128 1 167 1 271 1 
279 1 175 1 280 1 108 1 151 1 128 1 2 1 74 1 167 2 271 2 
196 1 
279 1 108 1 151 1 128 1 2 1 74 1 167 1 271 1 
279 1 175 1 280 1 108 1 151 1 128 1 2 1 74 1 167 3 271 3 238 1 
135 1 295 1 74 1 131 1 
279 1 74 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (119,124,198,276) (119,124,198,276) (119,124,198,276) 207 81 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (119,124,198,276) (119,124,198,276) (119,124,198,276) 207 81 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 165 (53,234) (53,234) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 165 (53,234) (53,234) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 165 (53,234) (53,234) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 165 (53,234) (53,234) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 165 (128,312) (128,312) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (119,124,198,276) (119,124,198,276) (119,124,198,276) 207 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) 195 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 182 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) 195 328 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 28 184 8 (114,231) 169 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (103,212) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (103,212) 64 41 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (103,212) 64 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 28 184 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 226 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 28 184 170 39 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 201 (49,98) (49,98) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 201 (49,98) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (219,299) (23,304) (23,304) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 201 (49,98) (49,98) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 28 47 84 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 182 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) (267,333) (239,244) 100 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 28 47 84 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 28 184 8 (114,231) 169 203 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) (267,333) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 28 216 189 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 201 (78,215) (78,215) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 201 (78,215) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (219,299) (219,299) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 201 (78,215) (78,215) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) 195 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 226 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 303 4 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 28 47 84 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 28 184 8 (114,231) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 28 184 170 282 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 226 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 28 184 8 (114,231) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 224 (114,231) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 224 (7,132) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 28 184 170 282 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 28 184 8 (7,132) 329 (267,333) (267,333) (239,244) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (3,107) (3,107) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 28 47 84 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 28 184 138 266 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 28 216 189 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 28 216 319 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 28 216 144 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 3 327 1 207 1 276 2 198 2 199 1 148 1 81 1 124 1 56 2 
119 3 327 1 207 1 276 2 198 2 199 1 148 1 81 1 124 1 56 2 
165 1 119 1 327 1 276 1 198 1 199 1 53 1 56 1 234 1 
165 1 119 1 327 1 276 1 198 1 199 1 53 1 56 1 234 1 
165 1 119 1 327 1 276 1 198 1 199 1 53 1 56 1 234 1 
165 1 119 1 327 1 276 1 198 1 199 1 53 1 56 1 234 1 
30 1 210 1 10 3 158 1 56 4 194 1 97 1 35 1 119 4 275 2 197 1 327 1 276 1 198 1 280 1 124 3 181 2 164 1 
315 1 165 1 35 1 119 1 327 1 276 1 198 1 199 1 312 1 56 1 128 1 
119 2 327 1 207 1 276 2 198 2 199 1 56 1 
309 1 226 1 220 1 
253 1 206 2 220 1 
196 2 264 2 284 2 134 2 180 1 11 2 140 2 85 1 
264 1 132 1 134 1 8 1 11 1 140 1 174 2 184 1 153 1 284 1 28 1 71 1 112 2 32 2 195 1 196 1 325 1 36 1 329 1 163 1 162 1 85 1 333 1 
196 1 264 1 284 1 134 1 135 1 11 1 140 1 85 1 117 1 251 1 
67 1 301 1 284 1 131 1 318 1 93 1 245 1 95 1 140 1 220 1 251 1 101 1 196 1 309 1 
67 2 264 1 284 1 131 1 134 1 93 1 245 1 95 2 11 1 140 1 220 1 251 1 101 1 196 1 309 1 
67 1 156 1 150 1 95 1 323 1 
67 2 242 1 156 1 309 1 72 1 95 2 220 1 323 1 
67 1 95 1 323 1 
67 1 264 1 284 1 156 1 135 1 134 1 213 1 95 1 11 1 140 1 117 1 251 1 196 1 85 1 
220 1 
67 2 242 1 156 1 309 1 95 2 22 1 220 1 323 1 
264 1 46 2 167 1 3 1 134 1 135 1 270 2 213 1 11 1 55 2 95 5 140 1 14 1 58 1 220 1 19 1 309 1 308 1 107 1 67 5 155 4 186 2 284 1 241 1 242 1 156 2 246 1 248 2 117 1 251 1 323 2 196 1 254 4 160 1 38 1 42 2 332 1 85 1 
264 1 284 5 134 4 318 1 51 2 11 4 140 5 196 5 176 1 149 1 258 1 180 1 126 1 86 1 
196 2 284 2 134 2 228 1 11 2 140 2 117 1 251 1 
180 1 226 1 
264 1 284 2 317 1 134 1 11 1 140 2 196 2 149 1 180 2 
274 1 331 1 218 1 
36 1 132 1 28 1 329 1 8 1 162 1 112 1 32 1 182 1 184 1 153 1 174 1 
196 3 264 1 284 3 134 3 51 1 180 1 11 3 140 3 
196 1 284 1 134 1 11 1 140 1 117 1 251 1 
196 1 264 1 284 1 317 1 134 1 149 1 11 1 140 1 251 1 
264 2 132 1 131 1 134 3 8 1 51 1 93 1 11 3 95 1 140 3 142 1 174 1 101 1 149 1 184 1 153 1 67 1 284 3 28 1 245 1 112 1 32 1 195 1 251 1 196 3 36 1 329 1 328 1 162 1 333 1 85 1 86 1 
196 2 284 2 134 1 318 1 51 1 180 1 258 1 11 1 140 2 
67 1 264 1 284 3 131 1 134 3 51 2 93 1 245 1 95 1 11 3 140 3 220 1 142 1 251 1 101 1 196 3 149 1 261 1 86 1 
264 1 284 2 134 2 51 1 11 2 140 2 218 1 274 1 196 2 149 1 
36 1 132 1 28 1 329 1 8 1 162 1 112 1 32 1 184 1 153 1 174 1 
36 1 28 1 8 1 162 1 169 1 112 1 231 1 32 1 184 1 153 1 174 1 
0 1 166 1 92 4 137 1 55 1 15 1 218 2 274 2 230 1 185 2 236 1 186 1 25 1 287 1 73 1 193 1 249 1 118 1 34 2 33 1 120 1 161 2 331 2 122 1 
196 1 284 1 134 1 11 1 228 1 140 1 251 1 101 1 
284 1 132 1 28 1 134 1 8 1 51 1 112 1 11 1 140 1 32 1 174 1 196 1 36 1 329 1 162 1 86 1 184 1 153 1 
255 1 212 1 
255 1 212 1 
283 1 103 1 
283 1 103 1 
283 1 103 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
255 1 212 1 
67 1 255 1 68 1 64 1 212 1 41 1 95 1 
255 1 68 1 64 1 212 1 
35 1 197 1 97 1 
315 1 35 1 97 1 
315 1 204 1 197 2 35 3 59 1 183 1 
315 1 204 1 197 1 35 2 59 1 13 1 
315 1 197 1 204 2 35 2 59 1 
91 1 46 1 206 3 133 1 50 1 211 1 94 1 271 1 55 1 95 5 220 2 223 2 278 1 309 1 67 5 186 1 154 2 155 3 27 2 242 1 156 4 73 1 248 1 323 1 33 1 253 1 254 2 160 1 79 1 42 1 44 1 262 1 
264 1 135 1 134 1 209 1 213 1 95 2 11 1 272 1 140 1 220 1 61 1 309 1 150 1 67 2 284 1 156 2 117 1 251 1 323 1 196 1 85 1 
46 1 167 1 206 4 50 1 211 1 271 1 95 3 55 1 220 3 223 2 309 1 278 1 67 3 186 1 155 3 154 1 27 2 156 2 73 1 248 1 33 1 253 2 254 2 79 1 42 1 262 1 
46 1 167 1 206 7 50 1 211 1 271 1 95 4 55 2 220 4 16 1 221 1 223 4 309 1 311 1 278 2 67 4 186 2 155 5 154 2 27 4 156 3 73 2 248 1 33 2 253 3 254 4 79 1 42 1 262 2 
28 1 184 1 
172 1 
324 1 226 1 
224 1 
320 1 
28 1 
28 1 170 1 39 1 184 1 
0 4 186 1 240 2 1 1 92 5 55 1 58 1 159 1 322 1 34 3 292 1 273 1 17 1 38 1 122 3 332 1 185 2 
0 4 186 1 1 1 240 2 92 6 55 1 58 1 159 1 322 1 292 1 34 4 273 1 17 1 38 1 122 3 332 1 185 2 
0 4 186 1 1 1 240 2 92 5 55 1 58 1 159 1 322 1 34 3 292 1 273 1 17 1 38 1 122 3 332 1 185 2 89 1 
0 5 92 17 55 2 58 1 15 1 273 2 147 3 146 1 60 1 278 2 152 1 185 8 236 1 186 2 240 1 70 3 73 2 159 1 247 1 249 1 322 1 34 9 33 2 294 1 120 1 161 2 297 1 122 3 332 1 
236 2 0 5 186 1 1 1 240 2 92 8 55 1 58 1 159 1 217 1 249 2 15 2 322 1 292 1 34 5 273 1 161 4 120 2 38 1 122 4 82 1 332 1 152 1 185 3 
136 1 49 1 112 1 56 1 31 1 32 1 98 1 174 1 119 1 327 1 104 1 276 1 198 1 199 1 200 1 201 1 
136 1 49 1 112 1 56 1 31 1 32 1 75 1 250 1 174 1 119 1 276 1 198 1 199 1 229 1 200 1 201 1 
112 1 31 1 229 1 32 1 250 1 174 1 
23 1 136 2 286 1 112 1 304 1 56 1 31 2 32 1 75 1 174 1 119 1 36 1 276 1 198 1 199 2 299 1 200 2 
136 1 49 1 112 1 56 1 31 1 32 1 98 1 174 1 119 1 327 1 276 1 198 1 199 1 229 1 200 1 201 1 
177 1 
46 1 301 1 302 3 5 2 131 1 269 3 93 1 214 1 95 4 140 1 220 1 173 1 101 1 145 3 18 2 105 2 63 1 309 1 21 1 67 4 155 1 26 1 284 1 242 2 285 1 191 1 69 2 29 1 318 1 245 1 248 1 251 1 323 5 252 1 253 2 254 1 196 1 160 1 121 1 42 1 127 5 334 1 
46 1 301 1 302 3 5 2 131 1 269 3 93 1 214 1 95 4 140 1 220 1 173 1 101 1 145 3 18 2 105 2 63 1 309 1 21 1 67 4 155 1 26 1 284 1 242 2 191 1 285 1 69 2 29 1 318 1 245 1 248 1 251 1 323 5 252 1 253 2 254 1 196 1 160 1 121 1 42 1 127 5 334 1 
5 2 269 2 93 1 95 4 173 1 101 1 105 2 284 1 191 1 29 1 116 1 196 1 42 1 127 4 46 1 301 1 206 2 302 2 131 1 214 1 140 1 141 2 306 2 220 1 145 2 309 1 67 4 155 1 242 2 318 1 245 1 248 1 251 1 323 4 252 1 254 1 160 1 257 1 334 1 
67 2 155 1 46 1 265 1 242 1 47 1 28 1 211 1 112 2 95 2 32 2 248 1 323 2 99 1 174 2 254 1 160 1 36 2 178 1 42 1 84 1 
301 1 131 1 93 1 214 1 95 3 140 1 101 1 145 1 22 1 67 3 284 1 242 1 191 1 29 1 318 1 245 1 251 1 323 2 252 1 196 1 127 2 334 1 
301 1 131 1 269 1 93 1 214 1 95 3 140 1 220 1 101 1 309 1 22 1 67 3 284 1 242 1 191 1 29 1 318 1 245 1 323 1 251 1 252 1 196 1 127 3 334 1 
301 1 302 1 131 1 269 1 93 1 214 1 95 3 140 1 220 1 101 1 145 1 309 1 22 1 67 3 284 1 242 1 191 1 29 1 318 1 245 1 251 1 323 2 252 1 196 1 127 3 334 1 
6 1 269 4 5 2 93 1 95 5 173 1 101 1 18 2 105 2 21 1 22 1 284 1 26 1 191 1 285 1 29 1 196 1 121 1 42 1 127 6 301 1 46 1 302 4 131 1 214 1 140 1 220 5 145 4 63 1 309 5 67 5 155 1 242 3 69 2 318 1 245 1 248 1 251 1 323 7 252 1 254 1 253 2 160 1 334 1 
5 2 269 2 93 1 95 4 173 1 101 1 18 2 105 2 26 1 284 1 191 1 29 1 116 1 196 1 42 1 127 4 46 1 301 1 206 2 302 2 131 1 214 1 140 1 220 2 145 2 309 1 67 4 155 1 242 2 69 2 318 1 245 1 248 1 251 1 323 4 252 1 254 1 253 2 160 1 334 1 
301 1 46 1 302 2 269 2 5 2 131 1 93 1 214 1 95 4 140 1 220 1 173 1 101 1 145 2 18 2 105 2 309 1 21 1 67 4 155 1 26 1 284 1 242 2 191 1 285 1 69 2 29 1 318 1 245 1 248 1 323 4 251 1 252 1 253 2 254 1 196 1 160 1 121 1 42 1 127 4 334 1 
301 1 46 1 302 2 269 2 5 2 131 1 93 1 214 1 95 4 140 1 220 1 173 1 101 1 145 2 18 2 105 2 309 1 21 1 67 4 155 1 26 1 284 1 242 2 191 1 285 1 69 2 29 1 318 1 245 1 248 1 323 4 251 1 252 1 253 2 254 1 196 1 160 1 121 1 42 1 127 4 334 1 
301 1 46 1 302 2 206 2 269 2 5 2 131 1 93 1 9 1 214 1 95 4 140 1 141 2 57 1 220 1 306 2 173 1 101 1 145 2 105 2 309 1 67 4 155 1 284 1 242 2 191 1 29 1 318 1 245 1 248 1 323 4 251 1 252 1 254 1 196 1 160 1 121 1 257 1 42 1 127 4 334 1 
0 2 166 1 1 1 92 5 55 1 58 1 218 1 15 1 274 1 180 1 226 1 230 1 185 2 236 1 186 1 240 1 193 1 249 1 292 1 34 3 120 1 161 2 38 1 122 2 331 1 332 1 
0 2 92 14 55 2 15 2 218 11 273 1 274 4 147 3 106 1 278 2 180 1 109 1 230 1 151 1 235 1 185 8 236 2 186 1 70 3 288 1 73 1 193 2 247 1 291 1 249 2 113 1 76 1 34 6 33 2 120 2 161 4 122 1 331 11 
92 2 132 1 134 1 8 1 51 1 11 1 140 1 15 1 174 1 274 1 175 1 230 1 182 1 151 1 184 1 153 1 185 1 236 1 284 1 28 1 112 1 288 1 32 1 193 1 249 1 76 1 34 1 196 1 36 1 161 2 120 1 329 1 330 1 162 1 86 1 88 1 
92 1 132 1 267 1 134 1 8 1 51 1 11 1 140 1 15 1 174 1 100 1 230 1 151 1 184 1 153 1 236 1 239 1 284 1 28 1 112 1 288 1 193 1 32 1 249 1 34 1 196 1 36 1 161 2 120 1 329 1 162 1 333 1 86 1 
236 1 92 2 47 1 28 1 190 1 71 1 112 2 288 1 74 1 193 1 32 2 249 1 15 1 76 1 174 2 34 1 36 1 161 2 120 1 84 1 230 1 185 1 
0 1 264 1 92 3 134 1 11 1 55 1 96 1 140 1 218 1 15 1 274 1 278 1 149 1 230 1 151 1 185 1 236 1 186 1 284 1 73 1 193 1 249 1 33 1 34 2 196 1 120 1 161 2 122 1 331 1 
0 1 236 1 166 1 92 2 287 1 55 1 193 1 218 1 249 1 15 1 33 1 273 1 274 1 161 2 120 1 331 1 230 1 185 2 
0 1 236 1 166 1 25 1 186 1 92 2 73 1 193 1 218 1 249 1 15 1 34 2 274 1 161 2 120 1 122 1 331 1 230 1 
0 2 166 1 92 4 55 1 15 1 218 2 274 2 273 1 278 1 230 1 185 2 236 1 186 1 73 1 193 1 249 1 33 1 34 2 120 1 161 2 331 2 122 1 
0 1 236 1 92 2 287 1 55 1 74 1 193 1 218 1 249 1 15 1 33 1 273 1 274 1 161 2 120 1 331 1 230 1 185 2 
0 1 236 1 25 1 186 1 92 2 73 1 74 1 193 1 218 1 249 1 15 1 34 2 274 1 161 2 120 1 122 1 331 1 230 1 
0 2 92 4 55 1 15 1 218 2 274 2 273 1 278 1 230 1 185 2 236 1 186 1 73 1 193 1 74 1 249 1 33 1 34 2 120 1 161 2 331 2 122 1 
0 2 92 4 55 1 15 1 218 2 274 2 273 1 278 1 230 1 185 2 236 1 186 1 73 1 193 1 249 1 33 1 34 2 120 1 161 2 331 2 122 1 
36 1 132 1 28 1 329 1 8 1 162 1 112 1 333 1 32 1 184 1 153 1 174 1 
36 1 28 1 8 1 162 1 169 1 112 1 231 1 32 1 184 1 153 1 203 1 174 1 
0 2 92 4 55 1 15 1 218 2 274 2 273 1 278 1 230 1 151 1 185 2 236 1 186 1 73 1 193 1 249 1 33 1 34 2 120 1 161 2 331 2 122 1 
267 1 132 1 28 1 8 1 112 1 32 1 174 1 104 1 329 1 162 1 333 1 153 1 184 1 
0 1 264 1 92 3 134 1 11 1 55 1 140 1 15 1 218 1 273 1 274 1 62 1 278 1 149 1 230 1 151 1 185 2 236 1 186 1 284 1 73 1 193 1 249 1 34 1 33 1 196 1 120 1 161 2 331 1 
0 3 92 13 208 1 139 1 55 2 15 2 273 1 147 2 65 1 278 2 185 6 236 2 186 2 111 1 70 1 73 2 247 1 249 2 113 1 34 7 33 2 295 1 120 2 161 4 122 2 123 1 82 1 259 1 263 1 
0 2 92 24 208 1 139 2 55 3 15 3 273 1 307 1 147 2 65 2 278 3 179 1 152 2 185 13 236 3 238 1 186 2 243 1 70 2 73 2 249 3 247 2 115 1 34 11 33 3 295 1 120 3 161 6 296 1 122 1 123 1 82 1 83 1 263 3 
0 2 92 13 208 1 139 1 55 2 15 2 273 1 147 2 65 1 278 2 185 6 236 2 238 1 186 2 111 1 70 1 73 2 247 1 249 2 113 1 34 7 33 2 295 1 120 2 161 4 122 1 123 1 82 1 263 1 
0 2 92 13 208 1 139 1 55 2 15 2 273 1 147 2 65 1 278 2 185 6 236 2 238 1 186 2 111 1 70 1 73 2 247 1 249 2 113 1 34 7 33 2 295 1 120 2 161 4 122 1 123 1 82 1 263 1 
0 14 1 1 92 50 208 1 139 1 55 8 58 1 15 2 273 7 307 1 147 4 65 1 278 7 179 1 152 1 235 2 185 25 236 2 238 1 186 8 240 1 243 1 70 4 73 7 115 1 247 2 249 2 113 2 292 1 34 25 33 7 295 1 120 2 161 4 38 1 296 1 122 7 123 1 82 1 332 1 83 1 263 3 
90 1 92 2 140 2 216 1 15 1 174 2 143 1 277 1 66 1 230 1 151 1 185 1 236 1 284 2 189 1 28 1 190 1 71 2 112 2 288 1 32 2 193 1 249 1 76 1 34 1 196 2 161 2 120 1 
205 1 104 1 78 1 112 2 215 1 200 1 229 1 32 2 201 1 174 2 
222 1 112 1 215 1 200 1 229 1 32 1 201 1 174 1 
205 1 36 1 112 1 299 1 200 1 32 1 219 1 174 1 
205 1 78 1 112 1 215 1 200 1 229 1 32 1 201 1 174 1 
260 1 
264 1 284 1 132 1 28 1 134 1 8 1 112 1 11 1 140 1 32 1 195 1 174 1 196 1 36 1 329 1 162 1 333 1 85 1 184 1 153 1 
46 1 155 1 206 2 211 1 248 1 220 2 253 1 254 1 160 1 223 1 309 1 178 1 42 1 
3 1 107 1 226 1 
46 1 206 1 95 1 220 2 18 1 309 1 67 1 155 1 26 1 242 1 69 1 248 1 323 1 253 1 254 1 160 1 42 1 
46 1 4 1 303 1 112 1 32 1 248 1 174 1 160 1 36 1 162 1 42 1 153 1 
46 2 168 1 206 6 270 2 211 1 95 1 55 2 220 5 307 1 147 1 223 5 278 2 309 2 178 1 179 1 67 1 237 1 155 8 186 2 241 1 242 1 27 5 70 1 73 2 247 1 248 2 115 1 323 1 33 2 253 3 254 5 160 2 296 1 42 2 83 1 
46 1 264 1 270 2 135 1 134 1 213 1 95 1 55 2 11 1 140 1 58 1 308 1 21 1 67 1 186 1 155 2 284 1 241 1 248 1 117 1 251 1 196 1 254 2 160 1 38 1 42 1 332 1 85 1 
46 1 3 1 160 1 42 1 248 1 
186 2 155 5 27 5 206 10 55 2 73 2 220 5 33 2 254 5 253 5 223 5 278 2 43 1 
67 1 242 1 309 1 95 1 220 1 323 1 
67 1 155 1 46 1 265 1 242 1 47 1 28 1 211 1 112 2 95 1 289 1 32 2 248 1 323 2 174 2 99 1 254 1 36 2 160 1 178 1 42 1 84 1 
256 1 52 1 227 1 
256 1 52 1 227 1 
77 1 256 1 52 1 
256 1 52 1 227 1 
326 1 256 1 52 1 
326 1 256 1 52 1 
326 1 256 1 52 1 
256 1 52 1 
255 1 212 1 
0 3 236 2 186 1 240 1 1 1 92 7 55 1 58 1 249 2 15 2 34 4 292 1 273 1 161 4 120 2 38 1 122 2 332 1 152 1 185 3 
0 2 186 1 240 1 1 1 92 5 55 1 58 1 34 3 292 1 38 1 122 2 226 1 332 1 185 2 
0 2 129 1 236 1 186 1 92 4 55 1 73 1 249 1 15 1 34 2 33 1 273 1 161 2 120 1 278 1 122 1 185 2 
0 2 186 1 92 7 70 1 55 1 73 1 247 1 113 1 34 4 33 1 273 1 147 2 278 1 122 1 185 3 
0 9 1 1 92 22 55 3 58 2 15 2 273 4 147 2 278 2 109 1 152 2 235 1 185 10 236 2 186 3 240 1 70 2 73 2 113 1 249 2 292 1 33 2 34 12 161 4 120 2 38 1 122 5 298 1 332 2 
92 1 147 1 34 1 
92 1 70 1 185 1 
236 1 129 1 0 3 186 1 92 6 55 1 73 1 15 1 249 1 34 3 33 1 273 1 120 1 161 2 278 1 122 2 43 1 185 3 
0 2 92 12 55 2 15 1 273 1 307 1 147 1 278 2 179 1 185 6 236 1 186 2 70 1 73 2 247 1 249 1 115 1 34 6 33 2 120 1 161 2 296 1 122 1 82 1 83 1 
0 2 186 1 92 6 55 1 58 1 34 3 273 1 38 1 122 1 332 1 185 3 
0 2 236 1 1 1 92 3 58 1 249 1 15 1 34 2 292 1 273 1 161 2 120 1 122 1 298 1 332 1 152 1 185 1 
236 1 0 5 186 2 92 10 55 2 58 2 15 1 249 1 34 5 273 2 120 1 161 2 308 1 38 1 122 3 82 1 332 2 185 5 
236 1 0 1 92 2 55 1 249 1 15 1 33 1 273 1 161 2 120 1 82 1 185 2 
0 2 236 1 186 1 92 4 55 1 73 1 249 1 15 1 34 2 33 1 273 1 161 2 120 1 278 1 122 1 82 1 185 2 
236 3 0 2 92 3 111 1 58 1 249 3 15 3 34 2 273 1 161 6 120 3 122 1 298 1 82 1 332 1 152 1 185 1 
129 1 0 12 1 1 92 33 55 5 58 3 15 5 273 5 146 1 147 4 60 1 278 3 152 2 185 15 236 5 186 5 240 1 111 1 70 3 73 3 247 1 249 5 113 1 292 1 34 18 33 3 294 1 120 5 161 10 38 2 122 7 298 1 82 1 332 3 
0 2 92 11 55 2 15 2 273 1 307 1 147 1 278 2 179 1 152 1 185 7 236 2 186 1 70 1 73 1 247 1 249 2 115 1 34 4 33 2 120 2 161 4 296 1 122 1 82 1 83 1 
129 1 0 3 92 14 55 3 15 3 273 2 307 1 147 2 278 3 179 1 152 1 185 9 236 3 186 1 70 1 73 1 247 1 249 3 113 1 115 1 34 5 33 3 120 3 161 6 296 1 122 1 82 1 83 1 
129 1 0 4 1 1 92 18 55 3 58 1 15 3 273 1 307 1 147 1 278 2 179 1 152 1 185 8 236 3 186 3 240 1 70 1 73 2 247 1 249 3 115 1 292 1 34 10 33 2 120 3 161 6 38 1 296 1 122 3 82 1 332 1 83 1 
129 1 0 5 1 1 92 16 55 3 58 1 15 3 273 2 307 1 147 1 278 2 179 1 152 1 185 9 236 3 186 2 240 1 70 1 73 1 247 1 249 3 115 1 292 1 34 7 33 2 120 3 161 6 38 1 296 1 122 3 82 1 332 1 83 1 
0 2 92 11 55 2 15 2 273 1 307 1 147 1 278 2 179 1 152 1 185 7 236 2 186 1 70 1 73 1 247 1 249 2 115 1 34 4 33 2 120 2 161 4 296 1 122 1 82 1 83 1 
0 2 92 12 55 2 15 1 273 1 307 1 147 1 278 2 179 1 185 6 236 1 186 2 70 1 73 2 247 1 249 1 115 1 34 6 33 2 120 1 161 2 296 1 122 1 82 1 83 1 
129 1 0 5 1 1 92 17 55 3 58 1 15 4 273 2 307 1 147 1 278 2 179 1 152 2 185 9 236 4 186 2 240 1 70 1 73 1 247 1 249 4 115 1 292 1 34 8 33 2 120 4 161 8 38 1 296 1 122 3 82 1 332 1 83 1 
0 6 92 16 55 3 15 4 273 3 307 1 147 1 278 3 179 1 152 2 185 9 236 4 186 2 111 1 70 1 73 2 247 1 249 4 115 1 34 7 33 3 120 4 161 8 296 1 122 3 82 1 83 1 
0 6 186 1 1 2 92 7 55 1 58 3 34 4 292 1 273 3 38 1 122 3 332 3 185 3 
0 4 1 1 92 17 55 3 58 1 15 4 273 1 307 1 147 1 278 2 179 1 152 2 185 9 236 4 186 2 240 1 111 1 70 1 73 1 247 1 249 4 115 1 292 1 34 8 33 2 120 4 161 8 38 1 296 1 122 3 82 1 332 1 83 1 
196 1 284 1 318 1 180 1 258 1 140 1 281 1 
314 1 130 1 284 1 316 1 318 1 140 1 196 1 180 1 258 1 232 1 281 1 45 1 
284 1 28 1 134 1 8 1 51 1 112 1 11 1 140 1 32 1 174 1 196 1 36 1 162 1 231 1 184 1 153 1 
282 1 188 1 28 1 170 1 112 1 32 1 184 1 174 1 
36 1 47 1 28 1 112 1 226 1 84 1 32 1 174 1 
284 1 132 1 28 1 134 1 8 1 51 1 112 1 11 1 140 1 32 1 174 1 196 1 36 1 162 1 184 1 153 1 
284 1 188 1 132 1 28 1 134 1 8 1 51 1 112 1 11 1 140 1 32 1 174 1 196 1 162 1 184 1 153 1 
284 1 188 1 28 1 134 1 8 1 51 1 112 1 11 1 140 1 32 1 174 1 196 1 162 1 231 1 184 1 153 1 
67 1 188 1 224 1 112 1 95 1 32 1 114 1 174 1 
67 1 188 1 7 1 224 1 112 1 95 1 32 1 174 1 
310 1 162 1 112 1 32 1 153 1 174 1 
282 1 36 1 28 1 170 1 112 1 32 1 184 1 174 1 
267 1 132 1 134 1 8 1 51 1 11 1 140 1 15 1 174 1 104 1 277 1 230 1 151 1 184 1 153 1 236 1 239 1 284 1 28 1 112 1 193 1 32 1 249 1 196 1 161 2 120 1 329 1 162 1 333 1 
67 1 46 1 3 1 156 1 244 1 112 1 95 1 289 1 32 1 248 1 174 1 254 1 160 1 36 1 107 1 40 1 42 1 
303 1 310 1 162 1 112 1 32 1 153 1 174 1 
104 1 36 1 47 1 28 1 112 2 84 1 32 2 174 2 
266 1 28 1 138 1 112 1 32 1 305 1 184 1 174 1 
315 1 35 1 36 1 162 1 112 1 321 1 32 1 97 1 153 1 174 1 
189 1 104 1 28 1 112 2 229 1 32 2 216 1 174 2 
104 1 36 1 28 1 319 1 112 2 32 2 216 1 174 2 
144 1 104 1 36 1 28 1 112 2 32 2 216 1 174 2 
196 1 90 1 284 1 225 1 66 1 140 1 87 1 143 1 110 1 
293 1 2 1 131 1 93 1 225 1 245 1 142 1 87 1 251 1 101 1 110 1 313 1 
293 1 225 1 180 1 87 1 110 1 
67 2 2 1 131 1 156 1 93 1 245 1 95 2 220 1 142 1 251 1 101 1 293 2 309 1 80 1 225 2 180 1 87 1 313 1 110 2 
119 3 327 1 268 1 276 1 198 1 30 1 10 1 124 1 158 1 56 3 102 1 
119 1 275 1 210 1 10 1 124 1 56 1 
30 1 10 1 
30 1 10 1 226 1 158 1 
119 1 276 1 198 1 30 1 10 1 158 1 56 1 
136 1 199 1 56 1 
187 1 268 2 171 1 30 1 10 1 54 1 56 3 158 1 119 3 327 1 276 1 198 1 
119 2 276 1 198 1 30 1 10 1 124 1 158 1 181 1 56 2 
35 1 197 1 275 1 119 1 327 1 276 1 198 1 10 1 56 1 97 1 164 1 
119 1 327 1 276 1 198 1 30 1 10 1 56 1 
119 1 327 1 276 1 198 1 30 2 158 1 56 1 
119 2 327 1 276 2 48 1 198 2 30 1 10 1 125 1 108 1 56 2 
300 1 30 1 210 1 10 2 158 1 56 3 102 1 119 3 275 1 327 1 276 1 198 1 124 2 
315 1 30 1 10 1 158 1 56 2 97 1 35 2 119 2 197 1 327 1 276 1 198 1 124 1 233 1 183 1 
30 1 210 1 10 2 158 1 56 4 194 1 119 4 275 1 327 1 276 2 198 2 124 2 181 1 
119 1 327 1 276 1 198 1 30 1 10 1 158 1 56 1 
187 1 268 1 30 2 210 1 54 1 10 3 158 2 56 4 192 1 119 4 275 1 276 1 198 1 124 2 
30 1 10 1 12 1 56 2 158 1 119 2 327 1 20 1 276 1 198 1 148 1 124 1 
24 1 187 2 268 2 30 1 54 1 10 1 56 3 158 1 119 3 327 1 276 1 198 1 
37 1 10 2 157 1 290 2 
119 1 327 1 276 1 198 1 56 1 202 1 
119 2 327 1 276 1 198 1 30 1 10 1 124 1 158 1 56 2 102 1 
279 1 
119 1 327 1 276 1 198 1 30 1 10 1 158 1 56 1 

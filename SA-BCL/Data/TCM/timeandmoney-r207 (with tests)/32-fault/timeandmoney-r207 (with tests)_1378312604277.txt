#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (26,38,128,266,282) (202,233) (202,233) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException 124 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 124 165 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 124 165 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (188,201) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (188,201) 107 145 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (188,201) 107 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 130 259 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 139 (48,220,237) (83,287,304) (83,287,304) (83,287,304) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 162 177 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 170 301 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 22 222 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 222 40 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 222 43 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 170 301 32 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 170 301 32 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 163 138 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 139 (48,220,237) (48,220,237) (48,220,237) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 213 94 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 104 161 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (121,285) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (98,300) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 143 146 293 56 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 1 158 1 190 1 60 1 117 1 224 1 
203 1 158 1 190 1 60 1 117 1 224 1 
203 1 158 1 190 1 60 1 117 1 224 1 
203 1 158 1 190 1 60 1 117 1 224 1 
203 4 59 3 60 1 190 4 35 2 117 1 224 1 1 1 135 1 248 1 293 1 139 1 103 1 160 1 143 3 146 2 16 1 17 1 
203 1 78 1 190 1 60 1 117 1 224 1 233 1 53 1 282 1 202 1 55 1 16 1 
203 1 190 1 60 1 124 1 117 1 224 1 
203 2 153 1 59 1 190 2 60 1 124 1 117 1 224 1 165 1 
203 2 153 1 59 1 190 2 60 1 124 1 117 1 224 1 165 1 
283 1 
221 1 228 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 73 1 268 1 7 1 
221 2 113 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 73 1 256 1 7 2 133 1 
221 1 49 1 7 1 
221 1 49 1 7 1 
221 1 7 1 
221 1 49 1 7 1 
221 1 49 1 7 1 
221 2 49 1 119 1 7 2 
206 1 283 1 
113 1 79 2 243 2 19 1 206 1 197 1 296 1 27 1 73 2 256 1 133 1 
297 1 290 1 
79 1 3 1 267 2 195 1 197 1 86 2 227 1 157 1 125 1 19 1 206 1 21 1 63 1 208 1 136 1 98 1 65 1 211 2 102 1 216 1 73 1 
79 2 243 1 92 1 21 1 63 1 208 1 3 1 98 1 267 1 102 1 86 1 211 1 157 1 216 1 142 1 73 2 125 1 127 1 256 1 133 1 
113 1 79 5 243 5 92 2 206 1 228 1 180 1 296 1 73 5 74 1 51 1 256 4 127 1 133 4 
79 2 243 2 19 1 95 1 73 2 256 2 303 1 133 2 
113 1 79 3 243 3 92 1 206 1 73 3 256 3 133 3 
79 1 243 1 19 1 73 1 256 1 303 1 133 1 
113 1 79 1 243 1 19 1 296 1 73 1 27 1 256 1 133 1 
221 1 241 1 113 1 79 2 242 1 243 2 19 1 116 1 261 1 92 1 96 1 7 1 296 1 73 2 127 1 256 2 133 2 258 1 
228 1 180 1 79 2 243 2 92 1 206 1 73 2 256 1 133 1 
221 1 79 1 242 1 243 1 19 1 92 1 223 1 261 1 116 1 96 1 7 1 73 1 127 1 256 1 133 1 258 1 
113 1 79 2 243 2 92 1 297 1 296 1 142 1 73 2 256 2 133 2 
79 1 19 1 206 1 21 1 63 1 208 1 3 1 267 1 98 1 197 1 86 1 211 1 102 1 157 1 216 1 73 1 125 1 
79 1 19 1 206 1 21 1 63 1 208 1 2 1 3 1 267 1 121 1 197 1 86 1 211 1 102 1 157 1 216 1 73 1 
77 1 36 1 225 1 265 1 270 1 122 1 226 1 196 1 46 2 200 1 280 3 163 1 236 1 91 1 290 2 61 1 207 1 250 2 297 2 255 1 110 1 151 1 
79 1 243 1 19 1 116 1 95 1 73 1 256 1 133 1 
188 1 23 1 
188 1 23 1 
85 1 201 1 
85 1 201 1 
85 1 201 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
188 1 23 1 
221 1 188 1 107 1 145 1 23 1 155 1 7 1 
188 1 107 1 23 1 155 1 
139 1 16 1 17 1 
78 1 139 1 16 1 
295 1 78 1 71 1 183 1 16 3 17 2 
199 1 78 1 71 1 183 1 16 2 17 1 
78 1 71 1 183 2 16 2 17 1 
221 1 49 1 28 1 7 1 
221 2 49 2 70 1 238 1 7 2 167 1 
84 1 221 2 49 1 119 1 176 1 130 1 7 2 
221 1 84 1 119 1 176 1 130 1 7 1 259 1 
157 1 52 1 283 1 
213 1 157 1 
13 1 
157 1 63 1 3 1 
157 1 253 1 
157 1 3 1 
63 1 5 1 3 1 157 2 144 1 52 2 13 1 
152 1 91 2 34 1 174 1 97 1 64 1 122 3 269 2 46 3 200 1 105 1 231 1 215 1 280 5 147 1 151 2 306 1 
152 1 91 2 34 1 174 1 97 1 64 1 122 3 269 2 46 3 200 1 105 1 231 1 215 1 280 5 147 1 151 2 306 1 
152 1 91 2 34 1 174 1 245 1 97 1 64 1 122 3 269 2 46 3 200 1 105 1 231 1 215 1 280 5 147 1 151 2 306 1 
46 1 179 1 34 1 215 2 280 1 269 1 
152 1 34 1 265 2 270 2 269 2 122 4 196 2 46 4 200 1 231 1 280 7 91 3 244 1 174 1 134 1 64 1 250 4 105 1 215 1 255 2 147 1 148 1 151 3 306 1 
220 1 78 1 190 1 117 1 224 1 267 1 83 1 123 1 86 1 55 1 16 2 17 1 203 1 60 1 287 1 21 1 137 1 139 1 211 1 102 1 295 1 214 1 69 1 186 1 304 1 149 1 
220 1 78 1 190 3 117 1 224 1 267 1 83 1 123 1 86 1 230 1 55 1 16 2 17 1 168 1 203 3 59 2 93 1 21 1 248 1 137 1 139 1 211 1 102 1 295 1 103 1 214 1 143 1 186 1 304 1 149 1 150 1 
220 1 78 1 190 2 267 1 123 1 86 1 230 1 55 1 16 2 17 1 203 2 59 2 93 1 21 1 248 1 139 1 211 1 102 1 295 1 103 1 214 1 143 1 186 1 304 1 149 1 150 1 
190 1 117 1 224 1 39 1 3 1 267 1 123 2 86 1 157 1 229 1 55 2 168 1 203 1 90 1 204 1 205 1 21 1 208 1 294 1 102 1 211 1 186 2 149 2 
220 1 78 1 190 1 117 1 224 1 267 1 83 1 123 1 86 1 55 1 16 2 17 1 203 1 60 1 287 1 21 1 137 1 139 1 211 1 102 1 295 1 214 1 186 1 304 1 149 1 150 1 
0 1 
221 1 288 1 20 1 208 1 267 1 7 1 177 1 86 1 211 1 298 1 162 1 218 1 284 1 169 1 
221 2 170 1 171 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 268 1 7 2 228 1 72 1 73 1 235 1 108 1 239 1 
221 2 171 1 79 1 242 1 243 1 19 1 116 1 261 1 154 1 96 1 268 1 7 2 228 1 72 1 73 1 235 1 108 1 239 1 
221 2 170 1 171 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 268 1 7 2 228 1 72 1 301 1 73 1 235 1 108 1 239 1 
221 1 7 1 
76 1 221 2 79 1 261 1 116 1 268 1 7 2 272 1 198 1 228 1 235 1 239 1 284 1 171 1 288 1 243 1 242 1 19 1 20 1 96 1 22 1 25 1 298 1 72 1 73 1 109 1 108 1 218 1 
76 1 221 2 222 1 79 1 261 1 116 1 40 1 268 1 7 2 272 1 198 1 228 1 235 1 281 1 239 1 284 1 171 1 243 1 242 1 288 1 19 1 20 1 96 1 22 1 25 1 298 1 72 1 73 1 109 1 108 1 218 1 
76 1 221 2 222 1 79 1 261 1 116 1 40 1 268 1 7 2 272 1 198 1 228 1 235 1 281 1 239 1 284 1 171 1 243 1 242 1 288 1 19 1 20 1 96 1 22 1 25 1 298 1 72 1 73 1 109 1 108 1 218 1 
76 1 221 2 222 1 171 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 22 1 43 1 268 1 7 2 272 1 228 1 72 1 73 1 235 1 108 1 239 1 
32 1 221 2 170 1 171 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 268 1 7 2 228 1 72 1 301 1 73 1 235 1 108 1 239 1 
32 1 221 2 170 1 171 1 79 1 242 1 243 1 19 1 116 1 261 1 96 1 268 1 7 2 228 1 72 1 301 1 73 1 235 1 108 1 239 1 
76 1 221 2 79 1 261 1 116 1 120 1 268 1 7 2 272 1 228 1 235 1 239 1 284 1 171 1 288 1 243 1 242 1 19 1 96 1 22 1 25 1 298 1 299 1 72 1 73 1 108 1 218 1 
77 1 152 1 36 1 265 1 270 1 122 2 269 1 196 1 46 2 200 1 231 1 280 4 283 1 91 2 290 1 61 1 206 1 174 1 64 1 250 2 297 1 105 1 255 1 306 1 151 2 
77 2 115 2 36 1 263 1 41 1 265 2 194 1 270 2 226 2 122 2 196 2 197 1 46 6 200 2 159 1 280 10 234 1 163 1 91 4 19 1 173 1 290 8 172 2 206 1 138 2 250 4 297 8 255 2 147 1 302 1 151 1 
77 1 79 2 3 1 227 1 86 1 157 1 91 1 243 1 92 1 173 1 19 1 21 1 98 1 250 2 102 1 255 1 256 1 191 1 36 1 263 1 265 1 267 1 270 1 271 1 196 1 46 1 197 1 280 2 125 1 127 1 133 1 57 1 206 1 63 1 208 1 209 1 211 1 297 1 216 1 73 2 
77 1 79 1 36 1 263 1 193 1 42 1 265 1 267 1 270 1 196 1 86 1 276 1 280 2 127 1 54 1 133 1 243 1 91 2 173 1 92 1 208 1 250 2 211 1 255 1 73 1 256 1 
211 1 86 1 101 1 208 1 267 1 
77 1 113 1 79 1 36 1 265 1 122 1 270 1 226 1 196 1 46 1 200 1 280 2 163 1 133 1 243 1 91 1 173 1 290 1 138 1 250 2 297 1 296 1 106 1 255 1 73 1 256 1 151 1 
77 1 290 1 36 1 61 1 225 1 265 1 122 1 250 2 270 1 226 1 196 1 46 2 297 1 200 1 280 2 255 1 147 1 
77 1 91 1 290 1 36 1 61 1 207 1 265 1 122 1 250 2 270 1 196 1 297 1 280 1 255 1 163 1 151 1 
77 1 36 1 265 1 226 1 270 1 122 2 196 1 46 2 200 1 280 3 163 1 91 1 290 2 61 1 138 1 250 2 297 2 255 1 147 1 151 1 
101 1 
101 1 
101 1 
77 1 91 1 290 2 36 1 265 1 138 1 122 2 250 2 270 1 226 1 196 1 46 2 297 2 200 1 280 3 255 1 163 1 147 1 151 1 
77 1 79 1 36 1 264 1 263 1 3 1 265 1 267 1 270 1 271 1 196 1 46 1 197 1 86 1 157 1 280 2 125 1 91 1 19 1 206 1 21 1 63 1 208 1 98 1 250 2 102 1 211 1 216 1 73 1 255 1 
77 1 79 1 36 1 263 1 3 1 2 1 265 1 267 1 121 1 270 1 196 1 197 1 86 1 157 1 280 1 91 1 19 1 206 1 21 1 63 1 208 1 250 2 102 1 211 1 216 1 73 1 255 1 185 1 
77 1 91 1 290 2 173 1 36 1 265 1 138 1 122 2 250 2 270 1 226 1 196 1 46 2 297 2 200 1 280 3 255 1 163 1 147 1 151 1 
77 1 79 1 36 1 264 1 3 1 265 1 267 1 122 2 226 1 270 1 196 1 46 2 86 1 157 1 200 1 280 3 125 1 126 1 163 1 91 1 290 2 21 1 63 1 98 1 138 1 250 2 102 1 211 1 297 2 216 1 69 1 73 1 255 1 147 1 151 1 
77 1 113 1 79 1 36 1 265 1 122 1 270 1 226 1 196 1 46 2 200 1 280 3 163 1 133 1 91 1 243 1 173 1 290 1 138 1 250 2 296 1 297 1 252 1 255 1 73 1 256 1 147 1 
80 2 115 2 265 2 270 2 226 3 122 6 196 2 46 9 47 1 200 3 159 1 88 1 280 16 163 3 91 7 244 1 172 1 246 1 99 1 138 3 250 4 140 1 104 1 254 1 255 2 147 3 111 1 219 2 151 3 
80 4 115 2 262 1 265 3 82 1 122 4 270 3 226 3 156 1 196 3 46 14 47 1 200 3 88 1 280 24 161 1 163 2 18 1 91 10 244 1 172 2 134 2 246 1 24 1 138 3 250 6 104 2 254 2 255 3 147 2 111 2 219 1 151 2 
152 1 80 4 82 1 226 4 156 1 159 1 231 1 88 1 161 1 163 4 18 1 91 16 172 3 244 1 174 1 246 1 24 1 250 6 104 3 105 1 254 2 255 3 111 1 115 4 262 1 37 1 265 3 122 8 270 3 269 1 196 3 46 19 47 1 200 5 280 35 134 1 138 4 64 1 140 1 147 4 151 4 306 1 219 1 
152 1 80 4 115 4 37 1 262 1 265 4 82 1 269 1 270 4 226 4 122 7 156 1 196 4 46 19 47 1 200 5 159 1 231 1 88 1 280 33 161 1 163 3 18 1 91 14 244 1 172 3 174 1 134 2 246 1 64 1 24 1 138 4 250 8 140 1 105 1 104 3 254 2 255 4 147 3 111 1 219 1 306 1 151 4 
152 1 80 4 115 4 262 1 41 2 265 2 82 1 269 1 270 2 226 7 122 14 156 1 196 2 46 26 47 1 200 8 159 2 231 1 88 1 280 43 161 1 163 7 18 1 91 17 244 1 172 4 174 1 134 1 246 1 64 1 24 1 138 7 250 4 105 1 104 2 254 1 255 2 147 7 111 1 219 1 306 1 151 7 
77 1 187 1 260 1 79 2 36 1 263 1 3 1 265 1 267 2 6 1 8 1 270 1 195 2 271 1 196 1 46 1 86 2 157 1 278 1 50 1 280 2 243 2 91 1 173 1 21 1 250 2 102 1 211 2 255 1 73 2 257 1 
220 1 78 1 21 1 267 2 137 1 139 1 274 1 102 1 86 2 211 2 295 1 48 1 214 1 69 1 237 1 16 2 150 1 149 1 17 1 
220 1 78 1 21 1 267 1 137 1 139 1 86 1 211 1 102 1 295 1 214 1 10 1 237 1 16 2 150 1 149 1 17 1 
205 1 21 1 39 1 208 1 3 1 267 1 274 1 294 1 102 1 86 1 211 1 157 1 68 1 149 1 
220 1 78 1 21 1 267 1 137 1 139 1 274 1 102 1 86 1 211 1 295 1 48 1 214 1 237 1 16 2 150 1 149 1 17 1 
12 1 
283 1 
198 1 25 1 288 1 298 1 20 1 109 1 218 1 284 1 
288 1 21 1 94 1 63 1 208 1 3 1 5 1 247 1 267 1 213 1 102 2 86 1 211 1 157 1 298 1 218 1 284 1 
25 1 115 1 104 1 288 1 298 1 172 1 20 1 161 1 218 1 284 1 
221 1 112 2 288 1 20 1 174 1 64 1 7 1 273 1 277 1 25 2 200 2 298 1 105 1 231 1 281 1 218 1 284 1 
288 1 298 1 218 1 284 1 
211 1 86 1 208 1 267 1 
25 1 288 1 298 1 20 1 218 1 240 1 284 1 169 1 
141 1 184 1 44 1 
141 1 184 1 44 1 
212 1 141 1 44 1 45 1 9 1 
141 1 184 1 44 1 
189 1 141 1 44 1 
189 1 141 1 44 1 
189 1 141 1 44 1 
141 1 44 1 
188 1 23 1 
152 1 91 3 174 1 134 1 265 2 64 1 269 1 122 3 250 4 270 2 196 2 46 3 200 1 105 1 231 1 280 6 255 2 147 1 151 2 306 1 
152 1 91 2 174 1 64 1 269 1 122 2 46 2 200 1 105 1 231 1 280 4 283 1 306 1 151 2 
91 1 289 1 265 1 138 1 122 2 250 2 270 1 226 1 196 1 46 2 200 1 280 3 255 1 163 1 147 1 151 1 
115 2 91 3 172 1 138 1 226 1 122 2 46 3 200 1 104 1 159 1 280 6 163 1 147 1 151 1 
152 1 115 2 41 1 265 2 194 1 269 1 122 9 226 2 270 2 196 2 46 10 200 3 159 1 231 2 280 19 163 2 166 1 91 9 172 2 174 1 134 2 64 1 138 2 250 4 105 2 255 2 147 4 306 1 151 5 
91 1 115 1 280 1 
46 1 172 1 280 1 
91 2 289 1 265 1 138 1 270 1 250 2 226 1 122 3 196 1 46 3 276 1 200 1 280 5 255 1 147 1 163 1 151 2 
115 1 265 1 82 1 270 1 226 2 122 2 156 1 196 1 46 6 200 2 280 10 161 1 163 2 18 1 91 4 172 1 244 1 24 1 138 2 250 2 104 1 255 1 147 1 151 1 
46 1 200 1 91 1 174 1 280 2 64 1 
152 1 91 2 134 1 265 1 122 2 250 2 270 1 196 1 46 1 105 1 231 1 280 3 255 1 147 1 151 1 166 1 306 1 
91 4 244 1 174 2 265 1 64 1 270 1 250 2 122 4 196 1 273 1 46 4 200 2 105 1 231 1 280 8 255 1 147 2 151 2 
244 1 265 1 250 2 270 1 226 1 122 1 196 1 46 2 200 1 280 2 255 1 147 1 
91 1 244 1 265 1 138 1 122 2 250 2 270 1 226 1 196 1 46 2 200 1 280 3 255 1 163 1 147 1 151 1 
91 2 244 1 134 1 265 3 250 6 270 3 122 2 196 3 140 1 46 1 105 1 231 1 280 3 255 3 147 1 166 1 151 1 
152 1 115 4 265 5 269 1 270 5 226 3 122 11 196 5 46 14 200 5 159 1 231 2 11 1 280 27 163 3 166 1 286 1 91 13 289 1 244 1 172 3 174 2 134 2 64 2 138 3 250 10 140 1 105 2 104 1 255 5 147 5 30 1 306 1 151 6 
152 1 115 1 265 1 269 1 270 1 122 2 196 1 46 3 200 1 231 1 280 6 161 1 91 3 172 1 244 1 174 1 64 1 250 2 104 1 105 1 255 1 306 1 151 2 
152 1 115 2 265 2 269 1 270 2 226 1 122 3 196 2 46 5 200 2 159 1 231 1 280 9 161 1 91 4 244 1 289 1 172 1 174 1 64 1 138 1 250 4 105 1 104 1 255 2 147 1 151 2 306 1 
152 1 115 1 265 3 82 1 269 1 270 3 226 2 122 4 156 1 196 3 46 8 200 3 231 1 280 15 161 1 163 2 18 1 91 7 289 1 172 1 244 1 174 1 134 1 64 1 24 1 138 2 250 6 105 1 104 1 255 3 147 1 306 1 151 3 
152 1 115 1 265 3 82 1 269 1 270 3 226 2 122 5 156 1 196 3 46 9 200 3 231 1 280 14 161 1 163 1 18 1 91 5 289 1 172 1 244 1 174 1 134 1 64 1 24 1 138 2 250 6 105 1 104 1 255 3 147 2 306 1 151 3 
152 1 115 1 265 1 269 1 270 1 122 2 196 1 46 3 200 1 231 1 280 6 161 1 91 3 172 1 244 1 174 1 64 1 250 2 104 1 105 1 255 1 306 1 151 2 
115 1 265 1 82 1 270 1 226 2 122 2 156 1 196 1 46 6 200 2 280 10 161 1 163 2 18 1 91 4 172 1 244 1 24 1 138 2 250 2 104 1 255 1 147 1 151 1 
152 1 115 1 265 4 82 1 269 1 270 4 226 2 122 5 156 1 196 4 46 9 200 3 231 1 280 15 161 1 163 1 18 1 91 6 289 1 244 1 172 1 174 1 134 2 64 1 24 1 138 2 250 8 105 1 104 1 255 4 147 2 306 1 151 3 
115 1 265 4 82 1 270 4 226 3 122 6 156 1 196 4 46 9 200 3 280 14 161 1 163 2 18 1 91 5 244 1 172 1 134 2 24 1 138 3 250 8 140 1 104 1 255 4 147 3 151 3 
152 2 91 3 174 1 64 1 269 1 122 5 46 3 200 1 105 2 231 2 280 6 147 2 306 1 151 3 
152 1 115 1 265 4 82 1 269 1 270 4 226 2 122 4 156 1 196 4 46 9 200 3 231 1 280 15 161 1 163 1 18 1 91 6 244 1 172 1 174 1 134 2 64 1 24 1 138 2 250 8 140 1 105 1 104 1 255 4 147 1 306 1 151 3 
228 1 79 1 180 1 243 1 206 1 73 1 129 1 
79 1 33 1 243 1 206 1 4 1 228 1 180 1 73 1 14 1 129 1 217 1 31 1 
294 1 102 1 211 1 86 1 157 1 21 1 39 1 208 1 3 1 267 1 283 1 
79 2 3 1 267 1 86 1 197 1 157 1 133 1 243 1 92 1 19 1 206 1 21 1 63 1 208 1 98 1 211 1 102 1 216 1 73 2 256 1 
79 2 261 1 116 1 3 2 267 1 197 1 86 1 87 1 157 3 133 1 243 2 92 1 19 2 206 1 21 1 63 2 98 1 211 1 102 1 216 1 253 1 73 2 256 2 305 1 
79 2 261 1 116 1 3 2 267 1 121 1 197 1 86 1 87 1 157 3 133 1 243 2 92 1 19 2 206 1 21 1 63 2 211 1 102 1 216 1 253 1 73 2 256 2 305 1 
221 1 213 1 285 1 211 1 86 1 87 1 157 1 267 1 7 1 
221 1 213 1 211 1 86 1 87 1 157 1 300 1 267 1 7 1 
21 1 267 1 210 1 86 1 211 1 102 1 
21 1 63 1 208 1 5 1 3 1 175 1 267 1 86 1 211 1 102 2 157 1 182 1 279 1 
77 1 152 1 79 1 36 1 265 1 267 1 122 3 270 1 273 1 196 1 197 1 46 3 86 1 200 2 231 1 280 6 50 1 54 1 133 1 91 3 243 1 19 1 173 1 92 1 174 2 64 1 250 2 211 1 105 1 69 1 255 1 73 1 256 1 147 1 151 2 306 1 
221 1 49 1 7 1 
21 1 63 1 5 1 3 1 247 1 267 1 210 1 86 1 211 1 102 2 157 1 13 1 52 1 
118 1 21 2 63 1 39 1 208 1 3 2 175 1 267 2 294 1 102 3 86 2 211 2 67 1 157 2 182 1 69 1 
118 1 21 1 63 1 3 1 175 1 267 1 86 1 211 1 102 2 275 1 67 1 157 1 182 1 
78 1 21 1 208 1 267 1 139 1 86 1 211 1 102 1 214 1 16 1 
21 1 3 1 267 2 8 1 86 2 211 2 102 1 157 1 278 1 69 1 150 1 
118 1 39 1 3 3 267 3 86 2 157 4 278 1 164 1 15 1 21 3 63 1 208 1 175 1 294 1 102 4 211 3 67 1 182 1 69 1 
118 1 39 1 3 3 267 3 86 2 157 4 278 1 164 1 132 1 21 3 63 1 208 1 175 1 294 1 102 4 211 3 67 1 182 1 69 1 
79 2 3 1 267 1 121 1 86 1 197 1 157 1 133 1 243 1 92 1 19 1 206 1 21 1 63 1 208 1 211 1 102 1 216 1 73 2 256 1 
21 1 63 1 5 1 3 1 175 1 267 1 87 1 86 1 211 1 102 2 157 1 182 1 279 1 
187 1 260 1 79 1 243 1 19 1 206 1 291 2 292 1 197 1 232 1 73 1 257 1 
221 2 187 2 260 2 79 2 261 1 116 1 192 1 7 2 197 1 49 1 232 2 243 2 242 1 19 2 206 1 96 1 291 3 292 2 249 1 73 2 29 1 257 2 258 1 
232 1 292 1 
192 1 291 1 249 1 
103 1 143 1 248 1 283 1 
203 1 103 1 190 1 117 1 224 1 143 1 248 1 
190 1 186 1 55 1 
203 3 60 1 190 3 117 1 224 1 266 1 248 1 26 1 103 1 143 1 128 1 282 2 
203 2 103 1 59 1 35 1 190 2 117 1 224 1 143 1 248 1 
203 1 60 1 190 1 117 1 224 1 1 1 139 1 143 1 146 1 16 1 17 1 
203 1 103 1 190 1 60 1 117 1 224 1 143 1 
203 1 103 2 190 1 60 1 117 1 224 1 248 1 
203 2 60 1 190 2 117 2 224 2 81 1 100 1 103 1 181 1 143 1 
203 1 56 1 190 1 60 1 117 1 224 1 143 1 146 1 89 1 293 1 
203 2 78 1 59 1 60 1 190 2 117 1 224 1 248 1 139 1 295 1 103 1 143 1 75 1 16 2 17 1 
203 4 59 2 60 1 190 4 35 1 117 2 224 2 135 1 248 1 293 1 103 1 143 2 146 1 
203 1 103 1 190 1 60 1 117 1 224 1 143 1 248 1 
203 4 59 2 190 4 117 1 224 1 248 2 293 1 26 1 103 2 230 1 143 3 128 1 146 1 282 1 
203 2 153 1 58 1 59 1 60 1 190 2 117 1 224 1 248 1 251 1 103 1 143 1 
203 3 103 1 26 2 190 3 60 1 117 1 38 1 224 1 143 1 128 1 248 1 282 2 
143 2 62 1 131 1 178 2 
203 1 190 1 60 1 117 1 224 1 66 1 
203 1 60 1 190 1 117 1 224 1 248 1 103 1 230 1 89 1 
114 1 
203 1 103 1 190 1 60 1 117 1 224 1 143 1 248 1 
203 2 103 1 190 2 60 1 117 1 224 1 143 1 248 1 89 1 282 1 
230 1 143 1 146 1 293 1 
103 1 143 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 (72,256) (72,256) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 (72,256) (72,256) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 (72,256) (72,256) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 (72,256) (72,256) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 248 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 53 248 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 339 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 296 203 182 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 296 203 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 180 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 244 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 62 166 19 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 62 166 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 62 166 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 62 166 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 62 166 19 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 202 17 150 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 16 199 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 296 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 214 200 316 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 214 200 17 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 214 200 17 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 214 200 316 150 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 214 200 17 150 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 214 200 316 150 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 214 200 17 150 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 99 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
294 2 303 1 33 1 34 3 83 3 241 1 198 2 169 2 220 1 67 1 128 1 68 1 130 1 
294 2 53 1 104 1 256 1 8 1 57 2 212 1 59 2 185 1 216 2 186 1 220 6 67 4 68 2 72 1 115 1 162 2 33 3 34 9 83 9 325 1 198 2 169 4 128 1 130 1 288 1 
294 2 53 1 104 1 256 1 8 1 57 2 212 1 59 2 185 1 216 2 186 1 220 6 67 4 68 2 72 1 115 1 162 2 33 3 34 9 83 9 325 1 198 2 169 4 128 1 130 1 288 1 
294 2 53 1 104 1 256 1 8 1 57 2 212 1 59 2 185 1 216 2 186 1 220 6 67 4 68 2 72 1 115 1 162 2 33 3 34 9 83 9 325 1 198 2 169 4 128 1 130 1 288 1 
294 2 53 1 104 1 256 1 8 1 57 2 59 2 185 1 216 2 186 1 220 4 67 3 68 2 72 1 115 1 162 1 33 2 34 7 83 7 325 1 198 2 169 3 128 1 130 1 288 1 
294 1 53 1 104 1 162 2 33 1 34 4 83 4 57 1 212 1 59 1 216 1 198 1 169 2 220 3 67 2 130 1 
294 1 115 1 303 1 34 2 83 2 57 1 241 1 169 1 198 1 216 1 122 1 96 1 20 1 68 1 288 1 130 1 
294 2 53 1 104 1 162 2 33 3 34 9 83 9 57 1 212 1 59 1 185 1 216 1 169 4 198 2 186 1 220 7 112 1 67 4 128 1 68 1 130 1 248 1 
294 2 53 1 104 1 162 2 33 3 34 9 83 9 57 1 212 1 59 1 185 1 216 1 169 4 198 2 186 1 220 7 112 1 67 4 128 1 68 1 130 1 248 1 
292 1 24 1 103 1 76 1 298 1 28 1 271 1 281 1 118 1 217 1 285 1 127 1 132 1 49 1 
81 1 
24 2 102 1 252 1 76 1 81 1 289 1 132 2 87 1 
24 5 178 1 252 1 102 2 76 2 54 1 272 1 81 1 56 1 209 2 238 1 108 1 197 2 89 2 43 1 243 1 340 1 289 1 132 5 
283 1 81 1 289 1 
254 1 81 1 275 2 
281 2 118 2 103 2 217 2 285 2 127 1 21 1 49 2 
103 2 181 1 206 1 109 1 304 1 58 1 211 1 145 1 260 2 217 2 261 1 14 1 310 1 18 1 223 2 21 1 73 1 269 2 322 1 29 1 270 2 323 1 237 1 163 1 164 1 281 3 118 2 330 1 94 1 285 3 336 1 337 1 338 1 46 2 45 1 127 1 49 2 
292 1 281 1 118 1 103 1 217 1 285 1 28 1 271 1 127 1 49 1 
230 1 24 1 271 1 81 1 139 1 281 1 285 1 148 1 289 1 49 1 155 1 132 1 314 1 228 1 
24 2 103 1 271 1 81 1 139 1 281 1 118 1 217 1 285 1 289 1 49 1 155 1 132 2 314 1 228 1 
24 1 76 1 339 1 132 1 
24 2 102 1 252 1 76 1 263 1 81 1 289 1 132 2 
24 1 102 1 132 1 
253 1 103 1 281 2 118 1 217 1 285 2 262 1 49 2 21 2 
105 1 147 1 311 1 
269 1 181 1 270 1 163 1 206 1 304 1 281 1 145 1 330 1 94 1 14 1 285 1 338 1 223 1 131 1 21 1 
283 1 21 1 
315 1 103 1 105 1 269 1 181 1 270 1 163 1 206 1 304 1 281 2 145 1 330 1 217 1 94 1 14 1 285 2 338 1 223 1 49 1 266 1 
230 1 315 2 103 4 236 1 281 5 118 1 217 4 285 5 262 1 125 1 225 1 49 5 21 1 266 1 
292 1 281 2 52 1 103 2 217 2 285 2 271 1 49 2 
315 1 281 3 118 1 103 3 217 3 285 3 21 1 49 3 
292 1 281 1 103 1 217 1 285 1 271 1 49 1 
281 1 118 1 253 1 103 1 217 1 285 1 271 1 262 1 49 1 
103 3 181 1 206 1 139 1 304 1 109 1 211 1 145 1 260 2 217 3 14 1 261 1 262 1 223 1 21 1 155 1 227 1 266 1 314 1 228 1 73 1 315 1 24 1 269 1 322 1 29 1 271 1 270 1 323 1 237 1 163 1 164 1 281 4 118 2 330 1 94 1 285 4 336 1 338 1 46 1 171 1 127 1 49 3 132 1 
230 1 281 2 315 1 103 1 217 1 285 2 236 1 21 1 49 2 
315 2 24 1 103 3 271 1 81 1 139 1 281 3 118 1 217 3 285 3 262 1 171 1 98 1 132 1 49 3 155 1 228 1 266 1 314 1 
315 1 103 2 105 1 281 2 118 1 217 2 285 2 311 1 262 1 49 2 
269 1 181 1 270 1 163 1 206 1 304 1 281 1 145 1 330 1 14 1 94 1 285 1 338 1 223 1 21 1 
158 1 269 1 181 1 270 1 163 1 206 1 304 1 281 1 330 1 94 1 285 1 338 1 264 1 223 1 21 1 
293 1 295 1 105 2 211 1 110 1 214 1 260 2 310 2 147 2 311 2 222 1 73 1 318 1 29 1 323 1 237 1 79 1 164 1 88 1 331 1 42 1 333 1 336 2 46 4 
281 1 52 1 103 1 217 1 285 1 271 1 139 1 49 1 
234 1 141 1 129 1 
176 1 4 1 152 1 141 2 129 2 100 1 
141 1 129 1 
141 1 129 1 
176 1 152 1 
176 1 152 1 
176 1 152 1 
274 1 141 1 129 1 
274 1 141 1 129 1 
274 1 141 1 129 1 
232 1 141 1 129 1 
232 1 141 1 129 1 
232 1 141 1 129 1 
2 1 24 1 296 1 203 1 182 1 313 1 141 1 129 1 132 1 
2 1 296 1 203 1 313 1 141 1 129 1 
59 1 179 2 216 2 20 1 37 1 
59 1 216 1 57 1 
216 1 20 1 57 1 
59 2 117 1 179 1 216 3 20 1 37 1 
59 1 179 1 216 2 136 1 20 1 37 1 
102 1 252 1 254 1 5 2 54 2 209 1 56 1 183 1 257 2 108 3 110 1 214 1 149 1 156 1 24 5 317 1 318 1 76 4 320 1 191 1 81 2 275 3 89 1 197 1 90 1 331 1 121 1 200 1 289 1 174 1 132 5 250 2 
280 1 24 1 76 1 40 1 180 1 132 1 
254 2 5 2 54 2 209 1 257 1 108 3 110 1 214 1 156 1 24 3 317 1 318 1 76 2 320 1 272 1 81 3 275 4 89 1 197 1 90 1 121 1 331 1 200 1 289 1 132 3 250 2 
254 3 5 4 54 4 209 1 257 2 108 5 110 2 214 2 156 1 24 4 317 1 318 2 76 3 235 1 320 2 272 1 81 4 275 7 89 1 197 1 90 1 121 1 331 2 200 2 289 1 48 1 132 4 250 4 133 1 
194 1 
283 1 224 1 
94 1 334 1 
94 1 181 1 206 1 
231 1 94 1 
94 1 181 1 
181 1 206 1 194 1 94 1 287 1 47 1 224 2 
1 2 204 1 210 2 310 8 16 2 219 1 66 1 222 5 318 3 319 2 321 1 192 1 193 1 119 1 331 3 333 4 336 6 199 1 46 14 
319 1 204 2 192 1 307 1 333 1 310 1 336 1 46 2 219 1 222 1 
1 1 51 1 204 1 210 1 211 1 260 2 310 6 63 1 16 1 66 1 222 6 73 1 318 2 319 1 190 1 192 1 29 1 323 1 193 1 119 2 331 2 333 4 336 6 199 1 46 12 
1 2 204 1 210 2 310 8 16 2 219 1 66 1 222 5 318 3 319 2 192 1 193 1 119 1 331 3 333 4 336 6 199 1 46 14 
1 2 204 1 210 2 310 8 16 2 219 1 66 1 222 7 318 3 319 2 192 1 193 1 119 3 331 3 333 4 336 7 199 1 46 15 
294 1 181 1 55 1 138 1 304 1 65 1 114 2 265 2 223 1 68 2 74 1 269 1 270 1 163 1 273 1 34 1 195 1 83 1 198 1 94 1 338 1 126 1 249 2 
294 1 304 1 57 1 306 1 59 1 216 2 114 1 265 1 113 1 20 1 223 1 68 1 71 1 269 1 270 1 163 1 34 1 83 1 277 1 85 1 117 1 329 1 198 1 246 1 130 1 249 1 
294 1 303 1 304 1 57 1 306 1 59 1 216 2 220 1 114 1 265 1 20 1 223 1 68 1 71 1 269 1 270 1 163 1 34 2 83 2 277 1 241 1 85 1 117 1 329 1 169 1 198 1 246 1 130 1 249 1 101 1 
294 1 55 1 303 1 304 1 57 1 306 1 59 1 308 1 216 2 220 2 114 1 265 1 113 1 20 1 223 1 68 1 71 1 269 1 270 1 163 1 34 3 83 3 277 1 241 1 117 1 329 1 169 1 198 1 246 1 249 1 
303 1 304 1 306 1 57 1 59 1 308 1 216 2 220 2 114 1 265 1 113 1 20 1 68 1 223 1 71 1 269 1 270 1 163 1 34 2 83 2 277 1 241 1 117 1 169 1 249 1 
111 1 
102 2 252 1 297 1 181 2 54 1 206 1 209 1 56 1 304 2 140 1 108 1 142 1 10 1 60 1 65 1 223 2 156 1 24 2 269 2 270 2 163 3 273 1 36 1 167 1 89 1 197 1 94 2 338 2 132 2 
24 2 252 1 102 2 205 1 80 1 7 1 35 1 87 1 13 1 93 1 132 2 
196 1 24 1 93 1 13 1 64 1 7 1 80 1 35 1 132 1 
24 2 252 1 102 2 205 1 80 1 7 1 35 1 87 1 144 1 196 1 13 1 93 1 64 1 132 2 
252 1 102 3 103 1 7 1 108 1 9 2 13 1 188 1 24 2 28 1 271 1 32 2 35 1 278 1 281 1 197 1 118 1 285 1 44 1 127 1 289 1 132 2 49 1 292 1 298 1 299 1 54 1 205 2 209 1 56 1 144 2 217 1 80 1 81 1 84 1 87 1 89 1 93 1 335 1 97 1 
24 1 299 1 54 1 80 1 7 1 32 1 56 1 209 1 108 1 35 1 9 1 197 1 89 1 13 1 93 1 312 1 97 1 132 1 
292 1 103 1 298 1 299 1 54 1 7 1 56 1 209 1 108 1 9 2 217 1 13 1 188 1 24 1 28 1 271 1 81 1 80 1 32 2 35 1 278 1 84 1 281 1 118 1 89 1 197 1 93 1 285 1 127 1 97 1 289 1 49 1 132 1 
292 1 103 1 298 1 299 1 54 1 7 1 56 1 209 1 108 1 9 2 217 1 13 1 188 1 24 1 28 1 271 1 81 1 80 1 32 2 35 1 278 1 84 1 281 1 118 1 89 1 197 1 93 1 285 1 127 1 97 1 289 1 49 1 132 1 
24 1 93 1 13 1 244 1 7 1 80 1 35 1 132 1 
102 1 103 1 7 1 108 1 9 2 13 1 188 1 24 1 28 1 271 1 32 2 35 1 278 1 281 1 197 1 196 1 118 1 285 1 44 1 127 1 289 1 132 1 49 1 292 1 298 1 299 1 54 1 205 1 209 1 56 1 144 1 217 1 64 1 80 1 81 1 84 1 89 1 93 1 97 1 
102 1 103 1 7 1 108 1 9 2 13 1 188 1 24 1 28 1 271 1 32 2 35 1 278 1 281 1 197 1 196 1 118 1 285 1 44 1 127 1 289 1 132 1 49 1 292 1 298 1 299 1 54 1 205 1 209 1 56 1 144 1 217 1 64 1 80 1 81 1 84 1 89 1 93 1 97 1 
24 1 299 1 54 1 80 1 7 1 32 1 56 1 209 1 108 1 35 1 9 1 197 1 89 1 13 1 93 1 312 1 132 1 50 1 
251 1 0 1 103 1 181 3 260 4 18 2 113 1 268 1 267 1 27 1 269 7 29 2 270 7 273 1 36 1 281 1 285 1 46 2 49 1 297 1 206 1 304 3 58 1 211 2 60 1 217 1 310 1 65 1 154 1 223 6 73 2 315 1 322 1 77 1 237 2 323 2 163 4 79 1 164 2 167 1 94 4 336 1 338 2 
103 1 105 1 6 1 211 1 214 1 110 1 260 2 217 1 147 1 310 1 311 1 262 1 222 1 73 1 318 1 29 1 323 1 237 1 164 1 281 1 118 1 38 1 331 1 333 1 285 1 336 2 46 3 200 1 49 1 
1 1 105 1 211 1 210 1 260 2 310 3 147 1 311 1 16 1 66 1 222 1 21 2 73 1 318 1 319 1 29 1 193 1 323 1 237 1 79 1 164 1 331 1 333 1 283 1 336 2 46 5 
73 1 260 2 137 1 6 1 29 1 323 1 237 1 164 1 211 1 
103 1 181 1 6 1 206 1 304 1 58 1 211 1 145 1 217 1 260 2 14 1 310 1 311 1 223 1 69 1 21 1 266 1 73 1 315 1 269 1 322 1 270 1 29 1 163 1 323 1 237 1 164 1 281 2 168 1 330 1 94 1 285 2 338 1 336 1 46 2 131 1 49 1 175 1 
1 1 103 1 105 6 181 2 6 1 110 2 260 6 261 2 14 2 16 1 21 1 266 1 26 1 269 1 271 1 270 1 29 3 30 2 193 1 281 3 119 1 285 3 199 1 46 22 200 2 49 1 206 2 304 2 305 2 58 1 210 1 211 3 214 2 145 2 217 1 309 2 147 6 310 11 311 6 151 2 66 1 222 5 223 1 315 1 73 3 318 4 322 1 237 3 323 3 163 2 164 3 239 1 92 1 330 2 331 4 94 2 333 4 336 11 338 1 
73 1 293 1 105 1 29 1 237 1 323 1 79 1 164 1 211 1 214 1 119 1 260 2 331 1 147 1 310 2 311 1 46 2 222 1 
73 1 295 1 318 1 105 1 29 1 237 1 323 1 79 1 164 1 211 1 110 1 260 2 333 1 147 1 311 1 336 2 46 2 222 1 
73 1 318 1 105 2 29 1 237 1 323 1 79 1 164 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 147 2 310 2 311 2 336 2 46 4 200 1 222 2 
73 1 293 1 105 1 29 1 237 1 323 1 164 1 211 1 214 1 119 1 260 2 331 1 147 1 310 2 311 1 46 2 222 1 154 1 
73 1 295 1 318 1 105 1 29 1 237 1 323 1 164 1 211 1 110 1 260 2 333 1 147 1 311 1 336 2 46 2 222 1 154 1 
73 1 318 1 105 2 29 1 237 1 323 1 164 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 147 2 310 2 311 2 336 2 46 4 200 1 222 2 154 1 
73 1 318 1 105 2 29 1 237 1 323 1 164 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 147 2 310 2 311 2 336 2 46 4 200 1 222 2 
181 1 206 1 304 1 58 1 211 1 145 1 260 2 14 1 261 1 310 1 223 1 21 1 73 1 269 1 322 1 270 1 29 1 163 1 237 1 323 1 164 1 281 1 330 1 94 1 285 1 338 1 336 1 46 2 
181 1 107 1 206 1 304 1 58 1 211 1 260 2 310 1 264 1 223 1 21 1 73 1 158 1 269 1 322 1 270 1 29 1 163 1 237 1 323 1 164 1 281 1 330 1 94 1 285 1 338 1 336 1 46 2 
73 1 318 1 105 2 6 1 29 1 237 1 323 1 164 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 147 2 310 2 311 2 336 2 46 4 200 1 222 2 
105 2 181 1 206 1 304 1 211 1 110 1 214 1 145 1 260 2 14 1 261 1 147 2 310 2 311 2 151 1 222 2 223 1 73 1 318 1 269 1 270 1 29 1 163 1 237 1 323 1 164 1 281 1 119 1 331 1 330 1 333 1 94 1 285 1 336 2 46 4 200 1 101 1 
103 1 105 1 6 1 211 1 110 1 214 1 260 2 217 1 310 2 147 1 311 1 262 1 222 1 73 1 318 1 29 1 323 1 237 1 164 1 324 1 281 1 119 1 118 1 331 1 285 1 336 1 46 3 200 1 49 1 
73 1 51 1 62 1 260 2 332 1 29 1 19 1 323 1 166 1 211 1 
73 1 51 1 62 1 260 2 332 1 29 1 19 1 323 1 166 1 211 1 
73 1 51 1 62 1 260 2 332 1 29 1 19 1 323 1 166 1 211 1 
73 1 51 1 62 1 260 2 332 1 29 1 19 1 323 1 166 1 211 1 
73 1 51 1 62 1 260 2 332 1 29 1 19 1 323 1 166 1 211 1 
181 1 6 1 304 1 58 1 211 1 260 2 310 1 18 2 223 2 70 1 229 1 73 1 267 1 269 2 77 1 322 1 270 2 29 1 163 1 237 1 323 1 164 1 281 2 91 1 94 1 123 1 285 2 286 1 336 1 46 2 49 2 
269 1 181 1 270 1 163 1 138 1 273 1 304 1 327 1 39 1 94 1 338 1 65 1 223 1 249 1 
157 1 269 1 270 1 163 1 304 1 57 1 277 1 59 1 117 1 327 1 120 1 216 2 20 1 113 1 223 1 246 1 71 1 249 1 
157 1 269 2 270 2 163 1 304 1 57 1 277 1 59 1 117 1 327 1 120 1 216 2 20 1 113 1 223 2 246 1 71 1 249 1 101 1 
157 1 269 1 270 1 163 1 304 1 57 1 277 1 59 1 117 1 328 1 216 2 20 1 113 1 223 1 246 1 71 1 249 1 
86 1 
54 1 81 1 56 1 209 1 238 1 108 1 197 1 89 1 43 1 289 1 
254 2 318 1 5 2 54 2 81 2 275 4 108 2 214 1 110 1 331 1 200 1 250 2 
24 1 102 1 252 1 81 1 289 1 132 1 
102 2 252 1 297 1 181 2 302 1 54 1 206 1 209 1 56 1 304 2 140 1 108 1 142 1 10 1 60 1 65 1 223 2 156 1 24 1 269 2 270 2 163 3 273 1 36 1 167 1 89 1 197 1 94 2 338 2 132 1 
283 1 43 1 54 1 81 1 238 1 108 1 289 1 
252 1 102 1 254 1 54 1 209 1 56 1 108 1 24 1 233 1 81 2 275 1 89 1 197 1 97 1 172 1 289 1 132 1 
252 1 102 2 134 1 254 3 5 3 135 1 255 1 181 2 54 3 206 2 209 2 56 2 304 2 108 4 110 1 214 1 11 1 223 1 224 1 228 1 156 1 24 2 318 1 269 1 160 1 30 1 270 1 31 1 163 3 81 3 275 6 89 2 197 2 331 1 282 1 94 4 334 2 287 1 338 1 200 1 132 2 291 1 250 3 
3 1 202 1 102 1 252 1 254 2 5 4 54 3 209 2 56 2 108 5 143 1 213 1 214 1 110 1 17 1 150 1 316 1 24 1 25 1 75 1 318 1 81 3 275 4 240 1 89 2 197 2 331 1 200 1 289 1 132 1 250 4 
1 1 24 1 318 1 54 2 56 1 209 1 108 2 84 1 210 1 143 1 197 1 89 1 331 1 16 1 199 1 132 1 
103 2 181 1 206 1 109 1 304 1 211 1 145 1 260 2 217 2 261 1 14 1 223 1 21 1 73 1 269 1 322 1 29 1 270 1 323 1 163 1 237 1 164 1 281 3 118 2 330 1 94 1 285 3 336 1 338 1 46 1 127 1 49 2 
254 1 54 1 81 2 56 1 209 1 275 2 108 1 10 1 197 1 89 1 289 1 250 1 156 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
296 1 313 1 
141 1 129 1 
73 1 1 2 51 1 318 2 29 1 323 1 211 1 210 2 119 2 260 2 331 2 333 3 310 5 199 1 336 5 16 1 46 10 222 5 
73 1 51 1 29 1 323 1 211 1 214 1 119 1 260 2 331 1 310 2 46 2 222 1 
73 1 51 1 318 1 29 1 323 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 310 2 336 2 46 4 200 1 222 2 
73 2 1 1 51 1 190 1 29 2 78 1 323 2 165 1 211 2 210 1 119 1 260 4 333 1 310 1 336 2 46 3 222 2 
1 1 51 1 3 3 184 1 258 1 210 1 211 3 214 2 110 2 260 6 310 12 16 1 66 1 222 6 73 3 75 1 318 4 159 1 190 1 29 3 193 1 323 3 165 1 240 3 119 3 331 4 333 3 199 1 336 12 245 1 46 24 200 2 
1 2 3 1 51 1 211 1 210 2 260 2 310 8 16 2 150 1 66 1 222 4 73 1 75 1 318 3 319 1 29 1 323 1 193 1 240 1 119 1 331 3 333 3 199 1 336 7 46 15 
1 2 51 1 3 1 207 1 210 2 211 2 214 1 260 4 310 10 16 2 150 1 66 1 222 5 73 2 75 1 318 3 319 1 159 1 29 2 193 1 323 2 240 2 119 2 331 4 333 3 199 1 336 8 46 18 200 1 
316 1 73 1 51 1 3 1 75 1 29 1 323 1 240 1 211 1 214 1 213 1 331 1 260 2 310 3 336 2 46 5 150 1 200 1 
3 1 51 1 202 1 211 1 213 1 214 2 110 1 260 2 310 6 17 1 150 1 222 2 73 1 316 1 75 1 318 1 190 1 29 1 323 1 240 1 331 2 333 2 336 5 46 11 200 2 
1 2 3 1 51 1 211 1 210 2 260 2 310 8 16 2 150 1 66 1 222 4 73 1 75 1 318 3 319 1 29 1 323 1 193 1 240 1 119 1 331 3 333 3 199 1 336 7 46 15 
3 1 51 1 202 1 211 1 213 1 214 2 110 1 260 2 310 6 17 1 150 1 222 2 73 1 316 1 75 1 318 1 190 1 29 1 323 1 240 1 331 2 333 2 336 5 46 11 200 2 
316 1 73 2 3 1 51 1 75 1 159 1 29 2 323 2 240 1 211 2 214 1 213 1 331 1 260 4 310 3 336 2 46 5 150 1 200 1 
51 1 3 1 202 1 211 2 213 1 214 2 110 1 260 4 310 6 17 1 150 1 222 2 73 2 316 1 75 1 318 1 190 1 29 2 323 2 165 1 240 1 331 2 333 2 336 5 46 11 200 2 
1 3 318 1 193 2 210 3 119 3 331 1 333 3 310 3 336 4 16 1 46 7 66 1 222 6 
316 1 73 2 3 1 51 1 75 1 29 2 323 2 165 1 240 1 211 2 214 1 213 1 331 1 260 4 310 3 336 2 46 5 150 1 200 1 
1 1 211 1 210 1 260 2 310 5 16 1 66 1 222 4 73 1 318 2 190 1 29 1 193 1 323 1 119 2 331 2 333 2 199 1 336 5 46 10 
1 1 318 1 319 1 193 1 210 1 331 1 333 1 283 1 310 3 336 2 16 1 46 5 66 1 222 1 
73 1 318 1 159 1 29 1 323 1 211 1 110 1 214 1 119 1 260 2 331 1 333 1 310 2 336 2 46 4 200 1 222 2 
3 1 75 1 318 1 207 1 240 2 110 1 214 1 119 1 331 1 333 1 310 3 336 4 46 7 200 1 222 2 
1 1 3 2 207 1 210 1 110 2 214 2 310 10 16 1 66 1 222 5 318 4 190 1 193 1 276 1 240 2 119 2 331 4 333 3 336 10 199 1 46 20 200 2 247 1 
336 1 46 1 240 1 
3 1 310 1 46 1 
73 1 318 1 159 1 29 1 30 1 323 1 211 1 214 1 110 1 119 2 260 2 331 1 333 2 310 3 336 3 46 6 200 1 222 4 
3 1 51 1 202 1 211 1 213 1 214 2 110 1 260 2 310 6 17 1 150 1 222 2 73 1 316 1 75 1 318 1 190 1 29 1 323 1 240 1 331 2 333 2 336 5 46 11 200 2 
1 1 318 1 210 1 119 1 331 1 333 1 310 3 16 1 336 3 46 6 222 2 
190 1 336 1 46 1 78 1 
281 1 230 1 285 1 218 1 236 1 21 1 49 1 
230 1 236 1 281 1 326 1 12 1 170 1 218 1 285 1 124 1 21 1 290 1 49 1 
269 4 181 1 270 4 163 1 273 1 304 1 215 1 94 1 338 1 65 1 223 4 341 1 101 1 
297 1 269 2 181 1 270 2 163 2 206 1 82 1 36 1 304 1 167 1 60 1 41 1 94 1 223 2 
216 1 269 1 338 1 270 1 163 1 20 1 223 1 304 1 71 1 57 1 
94 1 269 2 181 1 77 1 270 2 163 1 113 1 223 2 304 1 229 1 101 1 
0 1 268 1 269 5 181 2 77 1 270 5 273 1 163 2 304 2 215 1 41 1 94 3 65 1 338 1 223 4 101 1 
268 1 269 5 181 2 77 1 270 5 273 1 163 2 304 2 215 1 41 1 15 1 94 3 65 1 338 1 223 4 101 1 
94 1 269 1 283 1 181 1 65 1 338 1 270 1 163 1 273 1 223 1 304 1 
315 1 103 1 269 1 181 1 270 1 163 1 206 1 304 1 281 2 330 1 217 1 94 1 14 1 285 2 338 1 223 1 21 1 49 1 
103 1 181 2 206 2 139 1 304 1 217 2 14 1 223 1 21 1 314 1 315 1 231 1 269 1 270 1 271 1 163 1 31 1 281 2 330 1 41 1 94 3 285 2 49 2 
103 1 181 2 206 2 139 1 304 1 217 2 264 1 223 2 21 1 314 1 315 1 231 1 269 2 270 2 271 1 163 1 31 1 281 2 330 1 41 1 94 3 285 2 341 1 49 2 
292 1 102 1 103 1 298 1 217 1 223 1 224 1 228 1 24 2 189 1 269 1 28 1 271 1 270 1 81 1 281 1 118 1 94 1 41 1 285 1 334 1 127 1 289 1 49 1 132 2 
231 1 24 2 102 1 269 3 181 1 255 1 270 3 31 1 163 1 81 1 206 1 304 1 41 1 94 3 334 1 338 1 223 3 341 1 289 1 224 1 132 2 228 1 
269 1 27 1 270 1 163 1 223 1 304 1 
0 1 251 1 268 1 27 1 297 1 269 6 181 2 77 1 270 6 163 3 206 1 304 2 60 1 94 3 338 2 287 1 18 1 187 1 113 1 223 5 
1 2 103 1 105 1 181 1 6 1 260 4 14 1 261 1 16 2 21 3 269 1 271 1 270 1 29 2 193 1 281 2 119 1 285 2 199 1 46 13 49 1 206 1 304 1 211 2 210 2 145 1 309 1 217 1 310 7 147 1 311 1 151 1 66 1 223 1 222 4 315 1 73 2 318 3 319 1 237 2 323 2 163 1 164 2 239 1 91 1 330 1 331 3 94 1 333 3 336 6 101 1 
252 1 134 1 102 2 135 1 181 1 255 1 54 1 302 1 206 1 209 2 56 2 108 1 304 1 223 1 224 1 228 1 24 3 76 1 269 1 270 1 163 1 31 1 81 1 238 1 89 2 197 2 94 2 334 1 43 1 338 1 289 1 132 3 291 1 
27 1 269 1 160 1 181 1 270 1 163 2 194 1 206 1 304 1 94 1 287 1 223 1 224 1 
315 1 103 1 269 1 181 1 270 1 163 1 206 1 304 1 281 2 330 1 217 1 94 1 285 2 338 1 264 1 223 1 21 1 49 1 
297 1 269 1 181 1 270 1 163 2 206 1 304 1 60 1 41 1 94 1 287 1 187 1 223 1 
22 1 153 2 208 1 70 1 
23 1 24 1 76 1 116 1 153 1 99 1 132 1 
22 1 153 1 208 1 70 1 
22 1 23 1 153 2 208 1 70 1 99 1 
294 1 169 1 198 1 303 1 34 1 83 1 130 1 241 1 
294 1 300 1 303 2 33 1 34 4 83 4 241 2 279 1 198 1 169 3 146 1 220 2 67 1 288 1 
294 1 301 1 303 1 34 2 83 2 241 1 169 1 198 1 220 1 112 1 130 1 226 1 
294 1 201 1 303 1 34 3 83 3 241 1 279 2 169 1 198 1 146 1 130 1 288 2 
242 1 169 2 106 2 161 1 
294 1 198 1 284 1 34 1 83 1 130 1 
294 1 169 1 198 1 186 1 220 1 303 1 34 2 83 2 130 1 241 1 
177 1 
294 1 169 1 198 1 303 1 34 1 83 1 130 1 241 1 
169 1 283 1 303 1 241 1 
294 1 169 1 198 1 303 1 34 1 83 1 241 1 
114 1 68 1 34 1 
294 1 303 1 34 3 83 3 241 1 279 1 169 1 198 1 146 1 130 1 288 2 173 1 
294 1 169 1 198 1 220 1 162 1 303 1 34 2 83 2 241 1 
59 1 294 1 216 1 169 1 198 1 104 1 67 1 34 1 83 1 130 1 57 1 
294 1 169 1 198 1 34 1 83 1 130 1 241 1 
294 1 198 1 303 1 34 1 83 1 130 1 241 2 
294 2 34 2 83 2 241 1 61 1 169 1 198 2 95 1 221 1 130 1 
294 1 303 1 33 1 34 3 83 3 241 1 185 1 198 1 169 2 186 1 220 2 67 1 130 1 
294 1 303 1 34 2 83 2 57 1 241 1 117 1 59 1 169 1 216 2 198 1 259 1 220 1 20 1 130 1 
294 2 162 1 303 1 33 1 34 4 83 4 241 1 212 1 198 2 169 2 220 2 67 1 130 1 
294 1 169 1 198 1 186 1 220 1 303 1 34 3 288 1 83 3 130 1 241 1 
169 1 300 1 67 1 33 1 
169 1 241 1 

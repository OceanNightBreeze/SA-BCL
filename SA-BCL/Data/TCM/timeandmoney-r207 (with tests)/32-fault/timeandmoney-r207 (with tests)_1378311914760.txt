#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 303 (186,254) (186,254) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 303 (186,254) (186,254) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 303 (186,254) (186,254) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 303 (186,254) (186,254) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 303 (30,282) (30,282) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (33,149,154,170) 18 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (33,149,154,170) 18 117 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (33,149,154,170) 18 117 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (119,142,223) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (119,142,223) 1 315 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (119,142,223) 1 53 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (101,138) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (101,138) 4 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (24,206,281) (24,206,281) (24,206,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (24,206,281) (24,206,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (33,149,154,170) (33,149,154,170) (24,206,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (72,171) (72,171) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (119,142,223) (119,142,223) 243 69 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 309 48 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 309 48 192 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 309 48 192 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 309 48 192 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 75 188 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 160 185 250 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 160 185 250 131 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 179 155 (50,174) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 179 155 (97,278) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (119,142,223) 1 109 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
13 1 33 1 170 1 116 1 27 1 186 1 254 1 303 1 149 1 
13 1 33 1 170 1 116 1 27 1 186 1 254 1 303 1 149 1 
13 1 33 1 170 1 116 1 27 1 186 1 254 1 303 1 149 1 
13 1 33 1 170 1 116 1 27 1 186 1 254 1 303 1 149 1 
13 4 33 1 95 2 115 2 59 1 81 1 149 4 293 1 258 1 170 1 130 1 152 3 238 1 27 1 154 3 319 1 320 1 200 1 
282 1 13 1 33 1 170 1 286 1 116 1 27 1 30 1 303 1 200 1 149 1 
13 1 33 2 170 2 116 1 27 1 18 1 149 2 
13 2 33 2 170 2 116 1 154 1 27 1 117 1 18 1 271 1 149 3 
13 2 33 2 170 2 116 1 154 1 27 1 117 1 18 1 271 1 149 3 
269 1 
92 1 
12 2 273 2 316 1 308 2 156 1 79 2 20 2 106 2 
32 1 163 1 287 2 79 2 207 1 253 2 211 1 44 2 169 2 266 1 51 1 174 1 52 1 12 2 227 1 96 1 308 2 60 1 20 2 233 1 21 2 190 1 273 3 316 1 66 1 102 1 28 1 156 1 155 1 158 1 159 1 196 1 244 1 31 1 162 1 202 1 106 3 
12 1 273 1 5 1 316 1 295 1 308 1 79 1 20 1 71 1 106 1 
110 1 273 1 5 1 153 1 223 1 160 1 119 1 20 1 106 1 
12 1 110 1 273 1 5 1 153 1 308 1 79 1 223 1 20 1 106 1 
307 1 142 1 173 1 312 1 193 1 
12 1 140 1 307 1 56 1 308 1 79 1 142 2 312 2 208 1 20 1 150 1 273 1 5 1 316 1 295 1 193 1 29 1 71 1 106 1 
307 1 142 1 312 1 
12 1 140 1 308 1 142 1 79 1 312 1 20 1 273 1 5 1 316 1 295 1 193 1 71 1 106 1 
208 1 
12 1 140 1 307 1 56 1 308 1 79 1 142 2 312 2 208 1 20 1 234 1 273 1 5 1 316 1 295 1 193 1 29 1 71 1 106 1 
247 2 204 1 79 1 288 1 208 2 290 1 85 2 292 2 124 5 5 1 295 1 127 1 6 1 222 1 93 1 12 1 15 4 139 1 140 1 307 2 55 2 56 2 308 1 142 5 312 5 144 2 20 1 147 1 273 1 316 1 274 1 237 1 193 2 29 1 105 2 242 1 71 1 106 1 
269 1 
12 1 308 1 79 1 20 2 22 1 273 2 218 1 156 2 106 2 
317 1 310 1 270 1 
163 1 137 1 207 1 253 1 60 1 190 1 44 1 273 1 169 1 266 1 102 1 156 1 155 1 196 1 174 1 106 1 
163 1 12 1 308 1 310 1 207 1 80 1 253 1 60 1 20 1 190 1 44 1 273 2 169 1 102 1 266 1 155 1 196 1 174 1 280 1 106 2 
12 3 273 3 308 3 79 1 156 1 80 1 20 3 106 3 
12 1 273 1 5 1 308 1 20 1 71 1 106 1 
12 1 22 1 273 1 5 1 218 1 308 1 79 1 20 1 106 1 
12 2 110 1 308 2 79 1 80 1 1 1 20 2 315 1 22 1 273 2 5 1 153 1 223 1 280 1 106 2 
12 1 273 2 308 1 156 1 185 1 80 1 160 1 20 2 106 2 
12 1 110 1 53 1 273 1 5 1 153 1 308 1 223 1 1 1 80 1 20 1 106 1 280 1 
12 2 22 1 273 2 317 1 308 2 310 1 79 1 80 1 20 2 106 2 
163 1 207 1 253 1 60 1 190 1 44 1 273 1 169 1 266 1 102 1 156 1 155 1 196 1 174 1 106 1 
163 1 35 1 97 1 253 1 60 1 190 1 44 1 273 1 169 1 266 1 102 1 156 1 155 1 196 1 106 1 
248 1 203 1 287 2 0 1 211 2 43 1 214 1 292 1 52 1 55 1 270 2 310 2 21 4 99 1 67 1 66 2 317 2 159 1 244 1 31 1 162 1 202 1 
128 1 
12 4 22 1 273 5 308 4 156 1 79 1 185 1 80 2 197 1 160 1 20 5 212 1 280 1 106 5 
12 1 273 1 5 1 128 1 308 1 20 1 71 1 106 1 
138 1 11 1 
138 1 11 1 
87 1 138 1 101 1 11 1 
87 1 138 1 101 1 11 1 
87 1 101 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
138 1 11 1 
4 1 138 1 143 1 11 1 
12 1 273 1 308 1 184 1 20 1 106 1 
238 1 319 1 200 1 
286 1 238 1 200 1 
286 1 263 1 57 1 319 2 195 1 200 3 
216 1 286 1 263 1 319 1 195 1 200 2 
286 1 263 2 319 1 195 1 200 2 
136 1 305 1 307 1 56 1 142 4 208 1 312 4 261 1 265 1 220 1 193 3 29 1 
79 1 252 1 208 1 5 1 295 1 296 1 173 1 9 1 12 1 140 1 307 1 56 1 308 1 142 2 312 2 20 1 273 1 316 1 193 2 71 1 106 1 
203 1 79 1 208 2 85 1 292 1 124 2 5 1 295 1 261 1 265 1 298 1 92 3 10 1 12 1 136 1 305 1 15 3 140 1 56 1 55 1 226 1 308 1 142 3 311 1 312 3 144 1 20 1 147 1 99 1 273 1 316 1 23 2 193 2 70 2 105 1 71 1 106 1 
79 1 85 1 166 1 5 1 261 2 89 1 265 1 92 7 10 2 12 1 15 5 20 1 99 2 273 1 23 4 193 3 105 1 106 1 203 2 208 4 292 2 124 4 295 1 298 1 136 1 305 1 140 1 226 2 55 2 56 1 308 1 142 4 312 4 311 3 144 1 147 1 316 1 241 1 70 4 71 1 
269 1 
75 1 60 1 
39 1 
196 1 60 1 
112 2 39 1 60 3 190 1 49 1 8 1 196 1 
190 1 196 1 60 1 
221 1 60 1 
285 1 55 1 16 3 205 1 231 1 211 3 86 2 314 1 151 2 21 7 292 1 294 1 274 1 66 4 127 1 237 1 322 1 
285 1 55 1 16 3 205 1 231 1 211 3 86 2 314 1 151 2 21 7 292 1 294 1 274 1 66 4 127 1 237 1 322 1 
285 1 55 1 16 3 165 1 205 1 231 1 211 3 86 2 314 1 151 2 21 7 292 1 294 1 274 1 66 4 127 1 237 1 322 1 
21 1 151 1 314 1 66 1 300 1 231 1 322 2 
285 1 287 4 205 1 211 4 86 3 292 1 125 1 126 1 294 1 127 1 55 1 16 4 146 1 21 9 151 2 314 1 66 5 274 1 237 1 159 2 244 2 322 1 162 2 202 2 
163 1 74 1 33 1 36 1 286 1 116 1 38 1 206 1 253 1 209 1 44 1 169 1 170 1 91 1 13 1 225 1 57 1 149 2 63 1 24 1 102 1 154 1 238 1 27 1 319 1 281 1 200 2 
163 1 33 1 36 1 286 1 116 1 38 1 206 1 253 1 209 1 213 1 44 1 169 1 170 1 259 1 91 1 13 2 225 1 57 1 149 3 63 1 24 1 276 1 102 1 238 1 154 2 319 1 200 2 
163 1 13 1 225 1 36 1 286 1 57 1 38 1 116 1 253 1 209 1 149 2 63 1 213 1 44 1 169 1 24 1 276 1 102 1 238 1 154 2 319 1 200 2 
163 1 33 1 36 2 116 2 41 1 253 1 209 2 44 1 169 1 45 1 170 1 259 1 171 1 217 1 266 1 133 1 13 1 225 2 60 1 149 1 102 1 196 1 72 1 
163 1 33 1 36 1 286 1 116 1 38 1 206 1 253 1 209 1 213 1 44 1 169 1 170 1 91 1 13 1 225 1 57 1 149 1 63 1 24 1 102 1 238 1 27 1 319 1 281 1 200 2 
19 1 
163 1 110 1 37 1 253 2 119 1 85 1 122 1 44 2 124 1 169 2 45 1 5 1 47 1 6 1 217 1 266 2 298 1 223 1 15 1 180 1 307 2 228 1 142 2 312 2 144 1 60 1 20 1 273 1 153 1 102 1 69 1 29 1 105 1 243 1 196 1 160 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 307 1 180 1 142 2 312 2 119 1 20 1 234 1 273 1 5 1 47 1 153 1 69 1 29 1 223 1 243 1 160 1 106 1 
110 1 180 1 142 1 312 1 144 1 119 1 20 1 85 1 273 1 5 1 6 1 47 1 153 1 69 1 223 1 105 1 243 1 160 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 273 1 5 1 180 1 47 1 153 1 69 1 142 1 312 1 223 1 243 1 160 1 119 1 20 1 106 1 
110 1 180 1 142 1 312 1 144 1 119 1 20 1 85 1 273 1 5 1 6 1 47 1 153 1 69 1 223 1 105 1 243 1 160 1 106 1 
52 1 248 1 269 1 287 2 159 1 244 1 31 1 162 1 202 1 
245 3 111 2 203 3 40 1 287 4 82 1 211 7 292 3 294 1 10 3 52 1 175 4 268 1 16 1 55 1 270 13 310 13 62 1 21 17 99 1 66 10 317 4 28 1 156 1 158 1 159 2 279 1 244 2 31 2 107 1 162 2 202 2 
163 1 287 2 207 1 253 1 80 1 211 1 3 1 44 1 169 1 262 1 266 1 174 1 52 1 12 1 137 1 224 1 268 1 308 1 60 1 20 1 190 1 21 2 273 2 66 1 317 1 102 1 156 1 155 1 28 1 196 1 159 1 158 1 244 1 31 1 202 1 106 2 280 1 162 1 
12 1 52 1 268 1 287 2 308 1 253 1 80 1 20 1 255 1 44 1 169 1 273 1 266 1 159 1 31 1 244 1 162 1 280 1 106 1 202 1 
163 4 248 1 74 1 253 7 80 1 167 1 256 1 169 7 266 2 90 1 12 1 181 1 20 1 21 2 190 1 273 1 25 1 191 1 102 3 28 1 196 3 31 2 202 2 106 1 108 1 287 4 210 1 211 1 213 1 44 6 45 1 217 1 52 2 227 2 308 1 60 4 148 1 236 1 66 1 158 1 159 2 244 2 162 2 
203 1 287 2 79 1 211 2 292 1 10 1 12 1 52 1 268 1 306 1 55 1 308 1 310 1 270 1 20 1 21 3 22 1 99 1 273 1 66 1 317 1 159 1 244 1 31 1 162 1 202 1 106 1 
52 1 248 1 203 1 16 1 287 2 310 1 270 1 21 2 292 1 294 1 67 1 66 2 317 1 159 1 31 1 244 1 202 1 162 1 
52 1 248 1 55 1 287 2 310 1 270 1 0 1 211 2 21 2 99 1 317 1 159 1 31 1 244 1 202 1 162 1 
52 1 248 1 203 1 55 1 287 2 310 2 270 2 211 2 21 4 292 1 99 1 66 2 317 2 159 1 31 1 244 1 202 1 162 1 10 1 
52 1 203 1 16 1 287 2 310 1 270 1 21 2 292 1 294 1 67 1 66 2 317 1 191 1 159 1 31 1 244 1 202 1 162 1 
52 1 55 1 287 2 310 1 270 1 0 1 211 2 21 2 99 1 317 1 191 1 159 1 31 1 244 1 202 1 162 1 
52 1 203 1 55 1 16 1 287 2 310 2 270 2 211 2 21 4 292 1 99 1 294 1 66 2 317 2 191 1 159 1 31 1 244 1 202 1 162 1 10 1 
52 1 203 1 55 1 287 2 310 2 270 2 211 2 21 4 292 1 99 1 66 2 317 2 159 1 31 1 244 1 202 1 162 1 10 1 
163 1 287 2 207 1 253 1 211 1 44 1 169 1 266 1 174 1 52 1 96 1 60 1 21 2 190 1 273 1 66 1 102 1 28 1 156 1 155 1 196 1 159 1 158 1 31 1 244 1 106 1 202 1 162 1 
163 1 35 1 77 1 287 2 253 1 211 1 44 1 169 1 266 1 52 1 97 1 60 1 21 2 190 1 273 1 66 1 102 1 28 1 156 1 155 1 196 1 159 1 158 1 31 1 244 1 106 1 202 1 162 1 
52 1 203 1 268 1 55 1 287 2 310 2 270 2 211 2 21 4 292 1 99 1 66 2 317 2 159 1 31 1 244 1 202 1 162 1 10 1 
163 1 203 1 74 1 287 2 207 1 253 1 211 2 292 1 44 1 169 1 174 1 135 1 10 1 52 1 55 1 96 1 310 2 270 2 60 1 21 4 190 1 99 1 273 1 66 2 317 2 102 1 155 1 196 1 159 1 31 1 244 1 106 1 202 1 162 1 
203 1 287 2 79 1 211 1 292 1 294 1 10 1 12 1 52 1 268 1 55 1 16 1 308 1 270 1 310 1 20 1 21 3 99 1 22 1 273 1 66 2 317 1 159 1 244 1 31 1 162 1 202 1 201 1 106 1 
245 1 111 1 203 2 287 4 211 7 292 2 126 1 294 1 264 1 48 1 267 1 132 1 301 1 10 2 175 2 16 1 55 2 145 1 230 1 62 1 21 13 99 2 66 6 192 1 159 2 244 2 162 2 202 2 
245 2 203 1 287 4 86 1 211 8 292 1 126 1 48 2 299 1 132 1 301 2 302 1 10 1 175 2 16 1 55 1 309 1 145 2 146 1 62 2 21 14 99 1 66 6 192 1 159 2 244 2 162 2 202 2 
283 1 245 3 111 2 203 4 287 6 120 1 86 1 211 16 292 4 126 1 294 2 48 1 299 1 267 1 132 1 301 2 302 1 10 4 175 5 16 3 55 3 309 1 145 3 230 1 146 1 62 3 21 30 99 3 66 14 192 1 159 3 244 3 162 3 202 3 
283 1 245 3 111 3 203 4 287 4 120 1 211 13 292 4 126 1 294 2 48 1 267 1 132 1 301 2 10 4 175 6 16 2 55 2 309 1 145 3 230 1 62 3 21 27 99 2 66 14 192 1 159 2 244 2 162 2 202 2 
245 2 111 2 203 2 285 1 205 1 287 2 86 1 211 10 292 3 126 1 294 1 127 1 48 1 132 1 301 1 10 2 175 4 55 2 16 2 309 1 145 2 62 2 151 1 21 21 99 1 274 1 66 11 237 1 192 1 159 1 244 1 162 1 202 1 
163 1 164 1 287 2 253 2 211 1 167 1 44 2 169 2 46 1 52 1 268 1 181 1 141 1 227 2 313 1 60 1 20 2 21 2 273 2 66 1 26 1 102 1 28 1 196 1 159 1 158 1 31 1 244 1 202 1 106 2 162 1 
163 1 74 1 36 1 286 1 183 1 57 1 38 1 58 1 253 2 213 1 63 1 44 2 169 2 235 1 102 1 238 1 91 1 319 1 200 2 
163 1 36 1 286 1 57 1 38 1 58 1 253 1 213 1 63 1 44 1 169 1 102 1 238 1 91 1 319 1 134 1 200 2 
163 1 36 1 183 1 253 1 60 1 44 1 169 1 45 1 217 1 102 1 266 1 103 1 196 1 133 1 
163 1 36 1 286 1 183 1 57 1 38 1 58 1 253 1 213 1 63 1 44 1 169 1 235 1 102 1 238 1 91 1 319 1 200 2 
176 1 
269 1 
208 2 85 1 124 1 6 1 172 1 92 1 15 1 54 1 307 1 56 1 142 1 311 1 312 1 144 1 29 1 105 1 277 1 
163 2 304 1 75 1 144 1 253 1 60 1 188 1 85 1 190 1 44 1 169 1 6 1 102 1 266 1 105 1 8 1 196 1 
247 1 245 1 203 1 208 4 84 1 85 2 292 1 124 2 6 2 299 1 92 6 302 1 10 1 175 1 15 5 307 1 55 1 56 1 309 1 142 1 312 1 311 3 144 2 62 1 99 1 23 4 29 1 70 4 105 2 
247 2 79 1 85 1 292 2 124 2 5 1 295 1 127 1 6 1 93 1 12 1 15 2 140 1 55 1 308 1 142 1 312 1 144 1 20 1 273 1 316 1 274 1 237 1 104 1 242 1 105 1 71 1 106 1 
15 1 56 1 208 1 144 1 290 1 85 1 124 1 6 1 105 1 222 1 
203 2 15 5 55 2 311 5 208 5 292 2 124 5 99 2 260 1 23 5 70 5 92 10 10 2 
12 1 140 1 307 1 56 1 308 1 79 1 142 1 312 1 208 1 20 1 273 1 5 1 316 1 295 1 29 1 71 1 106 1 
108 1 163 3 37 1 253 2 210 1 85 2 122 1 168 1 44 2 124 1 169 2 45 1 6 1 217 1 266 2 90 1 298 1 15 1 307 2 228 1 142 2 312 2 144 2 60 2 147 1 190 1 25 1 102 2 29 1 105 2 196 2 
163 1 287 2 79 2 207 1 253 1 211 1 44 1 169 1 266 1 174 1 12 2 52 1 96 1 308 2 60 1 20 2 233 1 21 1 190 1 273 3 316 1 102 1 156 1 155 1 158 1 159 1 196 1 244 1 31 1 162 1 106 3 202 1 
15 1 56 1 311 1 208 2 144 1 85 1 122 1 124 1 23 1 6 1 298 1 105 1 92 2 
297 1 7 1 291 1 
297 1 7 1 291 1 
297 1 7 1 291 1 
34 1 297 1 7 1 318 1 121 1 
297 1 7 1 83 1 
297 1 7 1 83 1 
297 1 7 1 83 1 
297 1 7 1 
138 1 11 1 
285 1 55 1 16 3 287 4 205 1 146 1 211 4 86 2 151 1 21 8 292 1 66 4 294 1 274 1 127 1 237 1 159 2 244 2 202 2 162 2 
269 1 
203 1 55 1 16 1 287 2 211 2 21 4 292 1 99 1 66 2 294 1 159 1 198 1 244 1 202 1 162 1 10 1 
21 5 292 1 245 1 175 2 203 1 111 1 66 3 62 1 10 1 211 2 
245 2 203 2 111 1 285 1 205 1 40 1 287 2 86 4 211 12 292 5 294 4 127 2 10 2 175 2 55 5 16 8 146 1 151 1 21 25 99 2 274 2 66 13 237 2 242 1 159 1 244 1 107 1 202 1 162 1 
21 1 175 1 211 1 
21 1 245 1 66 1 
203 1 16 2 55 1 211 3 86 1 21 6 292 1 99 1 260 1 66 3 294 1 10 1 
175 1 245 1 203 1 16 1 55 1 287 4 309 1 146 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 2 244 2 10 1 302 1 202 2 162 2 
55 1 16 2 211 3 86 1 21 6 292 1 66 3 274 1 294 1 127 1 237 1 
285 1 16 2 205 1 287 2 146 1 86 1 211 2 21 3 66 1 294 1 274 1 127 1 159 1 321 1 244 1 202 1 162 1 
16 5 55 2 287 2 86 3 211 5 21 10 292 2 126 1 274 2 294 2 66 5 127 2 237 1 242 1 159 1 244 1 162 1 202 1 
203 1 16 1 287 2 21 2 292 1 126 1 66 2 294 1 159 1 244 1 202 1 162 1 
203 1 55 1 287 2 211 2 21 4 292 1 99 1 126 1 66 2 159 1 244 1 202 1 162 1 10 1 
16 2 287 6 146 1 230 1 211 2 86 1 21 3 126 1 274 1 294 1 66 1 127 1 159 3 321 1 244 3 202 3 162 3 
245 3 111 1 203 3 285 1 113 1 205 1 287 10 251 1 86 4 211 18 292 5 126 1 294 5 127 3 10 3 175 4 16 9 55 5 146 2 230 1 62 1 151 1 21 34 99 3 274 3 66 16 237 2 159 5 321 1 198 1 244 5 161 1 162 5 202 5 
175 2 245 1 203 1 111 1 287 2 309 1 62 1 211 2 21 5 292 1 126 1 66 3 159 1 244 1 10 1 202 1 162 1 
245 1 175 2 203 1 111 1 16 1 287 4 309 1 62 1 211 2 21 5 292 1 126 1 294 1 66 3 159 2 198 1 244 2 10 1 202 2 162 2 
175 1 245 1 203 1 16 1 55 1 287 4 309 1 146 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 2 244 2 10 1 302 1 202 2 162 2 
175 1 245 1 203 1 16 1 55 1 287 4 309 1 146 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 2 244 2 10 1 302 1 202 2 162 2 
175 2 245 1 203 1 111 1 287 2 309 1 62 1 211 2 21 5 292 1 126 1 66 3 159 1 244 1 10 1 202 1 162 1 
175 1 245 1 203 1 16 1 55 1 287 4 309 1 146 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 2 244 2 10 1 302 1 202 2 162 2 
245 1 175 1 203 1 16 1 55 1 287 6 309 1 146 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 3 244 3 198 1 10 1 302 1 202 3 162 3 
245 1 175 1 203 1 16 1 55 1 287 6 309 1 146 1 230 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 3 244 3 10 1 302 1 202 3 162 3 
285 1 55 1 16 6 205 2 211 4 86 3 21 7 292 1 274 3 294 3 66 3 127 3 237 1 
245 1 175 1 203 1 16 1 55 1 287 6 309 1 146 1 230 1 62 1 86 1 211 5 21 8 292 1 99 1 126 1 66 3 299 1 159 3 244 3 10 1 302 1 202 3 162 3 
250 1 185 1 160 1 
100 1 284 1 131 1 250 1 78 1 185 1 160 1 189 1 
44 1 169 1 269 1 266 1 253 1 
163 1 12 1 308 1 80 1 253 1 60 1 20 1 190 1 44 1 273 2 169 1 266 1 102 1 156 1 155 1 196 1 174 1 106 2 
163 1 12 1 110 1 177 1 179 1 308 1 80 1 253 1 60 3 20 1 190 2 44 1 273 1 169 1 5 1 153 1 102 1 155 1 221 1 196 2 174 1 106 1 
163 1 12 1 110 1 177 1 179 1 97 1 308 1 80 1 253 1 60 3 20 1 190 2 44 1 273 1 169 1 5 1 153 1 102 1 155 1 221 1 196 2 106 1 
163 1 75 1 112 1 79 1 208 1 253 1 118 1 44 1 169 1 5 1 295 1 219 1 221 1 12 1 177 1 179 1 140 1 307 1 56 1 308 1 142 2 312 2 60 4 20 1 190 1 273 1 316 1 102 1 196 1 278 1 71 1 106 1 
163 1 75 1 112 1 79 1 208 1 253 1 44 1 169 1 5 1 295 1 219 1 221 1 50 1 12 1 177 1 179 1 140 1 307 1 56 1 308 1 142 2 312 2 60 4 20 1 190 1 273 1 316 1 102 1 196 1 71 1 106 1 
163 1 44 1 169 1 257 1 102 1 253 1 
163 3 74 1 181 1 227 1 253 6 210 1 60 3 148 1 213 1 190 1 256 1 44 5 169 6 236 1 275 1 25 1 266 2 102 2 8 1 196 2 
163 1 74 1 253 1 80 1 86 2 169 1 174 1 12 1 268 1 16 2 96 1 270 1 20 1 190 1 21 6 273 2 274 1 102 1 196 1 31 2 106 2 202 2 285 1 287 4 205 1 207 1 211 3 292 1 44 1 46 1 127 1 135 1 52 2 55 1 308 1 310 1 60 1 151 1 66 3 317 1 237 1 155 1 156 2 240 1 159 2 244 2 162 2 
247 2 79 1 208 1 253 1 289 1 290 1 85 1 292 2 124 4 44 1 168 1 169 1 5 1 295 1 6 1 127 1 266 1 222 1 93 1 12 1 15 4 140 1 56 1 55 2 308 1 142 1 312 1 144 1 20 1 273 1 316 1 274 1 237 1 193 1 105 1 242 1 71 1 106 1 
163 2 304 1 112 1 39 1 253 1 60 1 190 1 44 1 169 1 257 1 102 1 8 1 196 1 
163 1 123 1 74 1 44 4 45 1 169 4 217 1 102 1 266 1 253 4 196 1 60 1 199 1 
108 1 163 2 177 1 253 2 210 1 60 1 98 1 190 1 44 2 169 2 25 1 102 1 90 1 196 1 
163 1 44 1 169 1 286 1 102 1 38 1 266 1 238 1 253 1 200 1 
163 1 74 1 164 1 181 1 253 2 60 1 213 1 44 2 169 2 102 1 196 1 
163 2 177 1 74 1 181 1 253 5 60 3 123 1 256 1 44 4 45 1 169 5 236 1 217 1 266 1 102 2 196 2 
163 2 177 1 74 1 249 1 181 1 253 5 60 3 123 1 44 4 45 1 169 5 236 1 217 1 266 1 102 2 196 2 
163 1 12 1 97 1 308 1 80 1 253 1 60 1 20 1 190 1 44 1 273 2 169 1 266 1 102 1 156 1 155 1 196 1 106 2 
163 2 177 1 253 1 210 1 60 1 190 1 44 1 169 1 275 1 25 1 102 1 8 1 196 1 
14 1 141 1 313 1 187 1 20 1 65 2 273 1 5 1 68 1 26 1 156 1 106 1 
110 1 109 1 178 1 141 1 142 1 312 1 1 1 313 1 187 1 20 1 65 2 273 1 5 1 26 1 68 1 153 1 239 1 193 1 223 1 106 1 
68 1 187 1 
109 1 178 1 65 1 
269 1 
13 1 33 1 293 1 170 1 152 1 320 1 149 1 
13 1 116 1 209 1 
13 2 33 1 73 1 94 1 17 1 232 1 149 2 64 1 293 1 170 1 152 1 27 1 320 1 
13 2 33 1 293 1 170 1 95 1 152 1 154 1 320 1 149 2 
13 1 33 1 115 1 149 1 258 1 170 1 152 1 27 1 238 1 319 1 200 1 
13 1 33 1 170 1 152 1 27 1 320 1 149 1 
13 1 33 1 293 1 170 1 27 1 320 2 149 1 
13 2 33 2 76 1 114 1 149 2 170 2 152 1 129 1 27 1 320 1 
13 1 33 1 94 1 182 1 149 1 293 1 170 1 27 1 320 1 
13 2 33 1 286 1 57 1 2 1 149 2 293 1 170 1 152 1 27 1 238 1 154 1 319 1 320 1 200 2 
13 4 33 2 95 1 115 1 81 1 149 4 293 1 170 2 130 1 152 2 27 1 154 2 320 1 
13 1 33 1 293 1 170 1 152 1 27 1 320 1 149 1 
13 4 73 1 33 1 94 1 115 1 81 1 232 1 149 4 64 1 293 2 170 1 152 3 154 2 320 2 
13 2 33 1 42 1 149 2 271 1 88 1 293 1 170 1 152 1 27 1 154 1 320 1 
13 3 64 2 73 2 33 1 293 1 170 1 152 1 27 1 157 1 320 1 232 1 149 3 
215 1 152 2 229 2 61 1 
13 1 246 1 33 1 170 1 27 1 149 1 
13 2 33 1 272 1 293 1 170 1 152 1 154 1 27 1 320 1 149 2 
194 1 
13 1 33 1 293 1 170 1 152 1 27 1 320 1 149 1 
13 3 33 1 73 1 149 3 272 1 293 1 170 1 152 1 154 1 27 1 320 1 
94 1 152 1 115 1 81 1 
152 1 320 1 

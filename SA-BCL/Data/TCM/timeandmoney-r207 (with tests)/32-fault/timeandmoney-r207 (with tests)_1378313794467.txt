#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 59 (130,163,180) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 59 141 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 59 141 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 144 129 116 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 144 129 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 287 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 51 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 195 (47,138,211) (62,124,296) (62,124,296) (62,124,296) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 59 (130,163,180) 30 212 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 217 194 22 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 217 194 22 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 217 194 22 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 217 194 22 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 217 194 22 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 195 (47,138,211) (47,138,211) (47,138,211) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 144 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 247 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 59 141 190 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 184 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 293 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 1 284 1 169 1 89 1 274 1 208 3 17 3 160 1 187 2 297 2 154 1 101 1 191 2 
214 1 215 1 166 1 169 4 68 1 274 1 275 1 15 1 17 9 187 2 185 1 154 1 191 5 284 7 195 1 200 2 27 1 89 3 126 1 249 1 208 9 160 1 297 2 101 1 
214 1 215 1 166 1 169 4 68 1 274 1 275 1 15 1 17 9 187 2 185 1 154 1 191 5 284 7 195 1 200 2 27 1 89 3 126 1 249 1 208 9 160 1 297 2 101 1 
166 1 214 2 215 1 169 4 173 1 68 1 274 1 15 2 17 9 185 2 187 2 154 1 191 5 284 6 81 1 195 2 117 1 48 1 200 2 27 1 289 1 89 3 126 1 208 9 160 1 162 1 297 2 101 1 
166 1 214 2 215 1 169 4 173 1 68 1 274 1 15 2 17 9 185 2 187 2 154 1 191 5 284 6 81 1 195 2 117 1 48 1 200 2 27 1 289 1 89 3 126 1 208 9 160 1 162 1 297 2 101 1 
166 1 214 2 215 1 169 5 173 1 68 1 274 1 15 2 17 10 185 2 187 2 154 1 191 6 284 7 81 1 195 2 117 1 48 1 200 2 27 1 289 1 89 4 126 1 208 10 160 1 162 1 297 2 101 1 
214 2 215 1 169 3 173 1 68 1 274 1 15 2 17 7 185 2 187 2 154 1 191 4 284 4 81 1 195 2 117 1 48 1 200 1 27 1 289 1 89 2 126 1 208 7 160 1 162 1 297 2 101 1 
166 1 284 3 195 1 169 2 200 2 27 1 89 1 126 1 274 1 15 1 208 4 17 4 160 1 187 1 297 1 185 1 154 1 191 3 
214 1 195 1 172 1 173 1 289 1 86 1 274 1 15 1 228 1 208 2 17 2 160 1 187 1 297 1 280 1 191 1 154 1 
123 1 
262 1 
123 1 
109 1 261 1 130 1 229 1 182 1 95 1 123 1 
293 1 
294 1 
248 2 92 2 226 2 278 1 188 2 87 2 104 1 205 2 
168 1 64 1 265 1 9 1 40 1 10 1 175 1 177 1 13 1 179 1 226 2 18 2 150 2 278 1 279 1 233 1 188 2 76 2 196 2 285 1 286 1 241 1 288 2 242 1 87 2 205 2 248 3 92 3 127 1 206 1 29 1 250 1 133 1 57 1 98 1 58 1 213 1 137 1 104 1 
177 1 248 1 92 1 226 1 207 1 278 1 94 1 188 1 87 1 205 1 
59 1 180 1 
36 1 218 1 198 1 262 1 87 1 205 1 90 1 177 1 92 1 248 1 226 1 130 2 182 2 188 1 163 1 
123 1 
123 1 
14 1 130 1 182 1 
1 1 168 1 286 1 265 1 288 1 9 1 10 1 175 1 205 1 13 1 92 2 248 2 146 1 226 1 250 1 18 1 150 1 188 1 58 1 300 1 
40 1 245 1 87 1 205 1 177 1 92 2 248 2 226 2 251 1 188 1 104 1 
1 1 244 1 203 1 
286 1 168 1 288 1 265 1 9 1 40 1 10 1 175 1 177 1 13 1 41 1 248 1 92 1 18 1 250 1 150 1 58 1 104 1 
293 1 
248 3 92 3 146 1 226 3 188 3 87 1 104 1 205 3 
177 1 248 1 92 1 226 1 94 1 188 1 205 1 
245 1 87 1 205 1 177 1 92 1 248 1 226 1 251 1 188 1 
36 1 218 1 168 1 64 1 265 1 9 1 10 1 175 1 13 1 177 1 146 1 179 1 226 3 18 1 182 1 150 1 279 1 278 1 115 1 188 3 76 2 196 1 285 1 286 1 288 1 242 1 87 2 245 1 205 3 90 1 248 4 92 4 29 1 130 1 250 1 133 1 57 1 163 1 256 1 58 1 213 1 137 1 104 1 300 1 
59 1 248 1 92 1 146 1 226 1 141 1 188 1 205 1 
36 1 218 1 262 1 157 1 87 1 245 1 90 1 205 3 177 1 92 3 248 3 146 2 226 3 130 1 182 1 188 3 163 1 256 1 300 1 
1 1 248 2 92 2 146 1 226 2 244 1 188 2 87 1 245 1 205 2 
286 1 168 1 288 1 265 1 9 1 40 1 10 1 175 1 177 1 13 1 248 1 92 1 18 1 250 1 150 1 58 1 104 1 
240 1 286 1 168 1 288 1 265 1 9 1 40 1 10 1 177 1 13 1 248 1 92 1 16 1 18 1 150 1 58 1 104 1 
1 2 108 1 2 1 38 1 64 1 12 1 71 1 113 1 237 1 76 2 196 4 83 1 120 1 242 1 244 2 203 2 54 1 206 2 128 1 29 1 133 1 57 1 137 1 213 2 
234 1 
59 1 141 1 25 1 170 1 245 1 87 1 205 4 92 4 248 4 146 2 226 4 188 4 104 1 300 1 
177 1 248 1 92 1 226 1 234 1 94 1 188 1 205 1 
74 1 156 1 111 1 
290 1 272 1 149 1 156 2 111 2 102 1 
156 1 111 1 
156 1 111 1 
272 1 149 1 
272 1 149 1 
272 1 149 1 
31 1 156 1 111 1 
31 1 156 1 111 1 
31 1 156 1 111 1 
131 1 156 1 111 1 
131 1 156 1 111 1 
131 1 156 1 111 1 
116 1 129 1 130 1 65 1 182 1 156 1 111 1 222 1 144 1 
129 1 65 1 156 1 111 1 222 1 144 1 
260 1 15 2 185 1 21 2 86 1 
195 1 15 1 185 1 
195 1 15 1 86 1 
260 1 15 3 151 1 185 2 21 1 86 1 
260 1 15 2 185 1 21 1 86 1 176 1 
219 1 123 1 
79 1 287 1 123 2 282 1 
35 1 109 1 37 1 261 1 7 1 174 1 268 1 229 1 182 1 78 1 45 1 120 1 84 1 123 2 128 1 159 2 130 1 95 1 257 1 103 1 
35 1 37 1 109 1 261 1 120 1 7 1 84 1 51 1 123 1 174 1 268 1 128 1 159 2 229 1 130 1 182 1 95 1 257 1 45 1 78 1 103 1 
253 1 
293 1 
13 1 58 1 
13 3 292 1 72 1 10 1 58 1 88 2 
13 1 82 1 
13 1 10 1 58 1 
13 1 28 1 
46 1 196 7 2 3 119 1 3 1 220 1 269 1 12 1 223 1 54 2 128 1 227 1 158 2 206 4 209 1 19 1 235 1 213 3 
34 1 2 7 140 1 110 4 220 4 64 1 267 3 70 1 269 2 223 1 12 3 19 1 186 1 237 3 76 2 45 3 46 1 196 22 120 3 242 1 291 1 54 3 206 11 158 1 128 3 29 1 209 1 97 1 258 1 137 1 213 11 
2 3 3 1 220 1 64 1 269 1 12 2 223 1 227 1 19 1 76 2 196 9 118 1 119 1 242 1 54 2 128 2 206 5 158 1 29 1 209 1 255 1 100 1 213 4 137 1 
46 1 196 7 2 3 119 1 3 1 220 1 269 1 12 1 223 1 54 2 128 1 158 2 206 4 227 1 209 1 19 1 213 3 
46 1 196 7 2 3 119 1 3 1 220 1 269 1 12 1 223 1 54 2 128 1 158 2 206 4 227 1 209 1 19 1 213 3 
107 1 33 1 214 2 263 2 265 1 143 2 171 1 9 2 10 1 69 1 270 1 273 1 13 2 17 1 18 1 112 1 150 1 75 1 187 1 192 1 80 1 197 1 286 1 288 1 204 1 208 1 210 1 135 2 297 1 58 2 
214 1 138 1 61 1 62 1 263 1 265 1 67 1 143 1 9 1 274 1 15 2 17 1 18 1 150 1 151 1 185 1 187 1 195 1 288 1 124 1 86 1 295 1 208 1 296 1 135 1 297 1 
214 1 138 1 61 1 62 1 263 1 265 1 67 1 143 1 9 1 274 1 15 2 17 1 18 1 150 1 151 1 185 1 187 1 193 1 195 1 288 1 124 1 86 1 208 1 296 1 135 1 297 1 
214 1 138 1 61 1 62 1 263 1 265 1 67 1 143 1 9 1 270 1 15 2 228 1 17 3 18 1 151 1 150 1 183 1 185 1 187 1 191 1 154 1 284 2 195 1 288 1 124 1 86 1 295 1 208 3 160 1 135 1 297 1 
214 1 138 1 61 1 263 1 265 1 143 1 9 1 15 2 228 1 17 2 18 1 150 1 151 1 183 1 185 1 191 1 154 1 284 2 195 1 288 1 124 1 86 1 295 1 208 2 160 1 135 1 
155 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 145 1 
286 1 130 1 18 1 150 1 288 1 182 1 145 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 14 1 180 1 30 1 130 2 231 1 24 1 182 2 212 1 96 1 281 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 145 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
59 1 180 1 30 1 130 1 24 1 182 1 212 1 96 1 
107 1 265 1 64 1 171 1 9 2 10 1 69 1 13 2 179 1 18 2 112 1 150 2 20 1 114 1 233 1 76 2 196 2 80 1 197 1 286 1 288 2 242 1 206 1 29 1 133 1 57 1 98 1 58 2 137 1 213 1 
1 1 2 1 64 1 12 1 226 1 232 1 188 1 237 1 76 2 45 1 196 3 120 1 242 1 244 1 203 1 87 1 245 1 205 1 54 1 92 1 248 1 128 1 206 1 29 1 133 1 298 1 57 1 137 1 213 2 
293 1 29 1 83 1 64 1 133 1 242 1 57 1 76 2 137 1 
1 11 2 2 4 1 220 1 110 3 140 1 64 2 267 3 70 1 12 1 179 1 233 1 189 1 43 1 237 1 76 4 45 2 196 14 49 1 120 2 242 2 244 4 203 11 54 1 206 8 128 2 29 2 133 1 298 1 57 2 213 6 137 2 104 1 
64 1 9 1 10 1 13 1 146 1 226 1 18 1 73 1 150 1 233 1 76 2 242 1 244 1 92 2 248 2 29 1 250 1 104 1 168 1 264 1 265 1 40 1 175 1 41 1 177 1 179 1 188 1 196 2 286 1 288 1 53 1 205 1 206 1 133 1 298 1 57 1 58 1 213 1 137 1 300 1 
286 1 288 1 64 1 242 1 201 1 205 1 92 1 248 1 146 1 226 1 29 1 18 1 150 1 133 1 298 1 188 1 57 1 76 2 137 1 300 1 
1 1 196 2 2 1 83 1 220 1 64 1 120 1 242 1 244 1 203 1 128 1 206 2 29 1 71 1 133 1 57 1 76 2 137 1 
1 1 196 2 2 1 83 1 64 1 242 1 244 1 203 1 12 1 54 1 29 1 133 1 113 1 57 1 237 1 76 2 137 1 213 2 
1 2 2 2 220 1 64 1 12 1 237 1 76 2 45 1 196 4 83 1 120 1 242 1 244 2 203 2 54 1 206 2 128 1 29 1 133 1 57 1 137 1 213 2 
1 1 196 2 2 1 220 1 64 1 120 1 242 1 244 1 203 1 128 1 206 2 29 1 71 1 133 1 114 1 57 1 76 2 137 1 
1 1 196 2 2 1 64 1 242 1 244 1 203 1 12 1 54 1 29 1 133 1 113 1 114 1 57 1 237 1 76 2 137 1 213 2 
1 2 2 2 220 1 64 1 12 1 114 1 237 1 76 2 45 1 196 4 120 1 242 1 244 2 203 2 54 1 206 2 128 1 29 1 133 1 57 1 137 1 213 2 
1 2 2 2 220 1 64 1 12 1 237 1 76 2 45 1 196 4 120 1 242 1 244 2 203 2 54 1 206 2 128 1 29 1 133 1 57 1 137 1 213 2 
168 1 265 1 64 1 9 1 40 1 10 1 175 1 177 1 13 1 179 1 18 1 150 1 279 1 233 1 76 2 196 2 286 1 288 1 242 1 92 1 248 1 206 1 29 1 250 1 133 1 57 1 58 1 137 1 213 1 104 1 
60 1 168 1 265 1 64 1 9 1 40 1 10 1 177 1 13 1 16 1 179 1 18 1 150 1 76 2 196 1 240 1 286 1 288 1 242 1 92 1 248 1 29 1 133 1 57 1 58 1 137 1 213 1 104 1 
1 2 2 2 220 1 64 1 12 1 237 1 76 2 45 1 196 4 120 1 242 1 244 2 203 2 54 1 206 2 128 1 29 1 133 1 298 1 57 1 137 1 213 2 
1 2 2 1 168 1 265 1 64 1 9 1 10 1 175 1 12 1 13 1 18 1 150 1 279 1 237 1 76 2 45 1 193 1 196 4 288 1 120 1 242 1 244 2 50 1 203 2 54 1 92 1 248 1 206 2 128 1 29 1 250 1 133 1 57 1 58 1 213 2 137 1 
165 1 1 1 2 1 220 1 64 1 12 1 226 1 188 1 237 1 76 2 45 1 196 3 120 1 242 1 244 1 203 1 87 1 245 1 205 1 92 1 248 1 128 1 206 2 29 1 133 1 298 1 57 1 213 1 137 1 
246 1 217 1 194 1 29 1 64 1 242 1 255 1 76 2 137 1 22 1 
246 1 217 1 194 1 29 1 64 1 242 1 255 1 76 2 137 1 22 1 
246 1 217 1 194 1 29 1 64 1 242 1 255 1 76 2 137 1 22 1 
246 1 217 1 194 1 29 1 64 1 242 1 255 1 76 2 137 1 22 1 
246 1 217 1 194 1 29 1 64 1 242 1 255 1 76 2 137 1 22 1 
265 1 64 1 39 1 9 1 8 1 13 1 178 1 226 2 179 1 18 2 150 2 20 1 233 1 44 1 76 2 196 2 288 2 242 1 248 2 92 2 206 1 29 1 55 1 133 1 298 1 57 1 98 2 58 1 164 1 137 1 213 1 
107 1 263 1 265 1 9 2 171 1 10 1 69 1 13 2 18 1 150 1 112 1 153 1 192 1 80 1 197 1 286 1 288 1 204 1 134 1 58 2 
195 1 47 1 138 1 61 1 263 1 288 1 265 1 67 1 9 1 86 1 15 2 295 1 18 1 151 1 150 1 134 1 211 1 185 1 
193 1 195 1 47 1 138 1 61 1 263 1 265 1 288 2 67 1 9 1 86 1 15 2 295 1 18 2 151 1 150 2 134 1 211 1 185 1 
195 1 47 1 138 1 61 1 263 1 288 1 265 1 67 1 9 1 86 1 224 1 15 2 295 1 18 1 151 1 150 1 185 1 
56 1 
105 1 145 1 
128 1 159 2 120 1 84 1 257 1 45 1 
286 1 18 1 150 1 288 1 
293 1 
145 1 
145 1 
286 1 18 1 150 1 288 1 145 1 
145 1 
130 1 182 1 161 1 145 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
65 1 144 1 
156 1 111 1 
196 10 118 1 2 5 119 1 220 2 64 1 242 1 223 2 12 2 54 3 206 5 128 2 29 1 209 2 255 1 76 2 137 1 213 5 
196 2 2 1 220 1 64 1 120 1 242 1 128 1 206 2 29 1 255 1 76 2 137 1 
196 4 2 2 220 1 64 1 120 1 242 1 12 1 54 1 128 1 206 2 29 1 255 1 237 1 76 2 213 2 137 1 45 1 
196 3 2 2 220 1 64 3 242 3 223 1 225 1 54 1 206 1 29 3 209 1 152 1 255 1 97 1 76 6 213 2 137 3 
34 1 0 1 2 12 3 1 110 4 140 1 220 5 64 5 267 3 70 1 223 3 12 5 225 1 227 1 152 1 186 1 237 3 76 10 45 3 196 34 119 2 120 3 242 5 54 7 158 1 206 16 128 5 29 5 209 3 255 1 97 2 258 1 213 18 137 5 
2 2 3 1 110 1 142 1 64 1 267 1 70 1 12 1 223 1 227 1 76 2 196 8 119 1 242 1 54 2 158 1 128 1 206 4 29 1 209 1 255 1 213 4 137 1 
0 1 2 3 3 1 110 2 140 1 220 1 142 1 64 2 267 1 70 1 12 1 223 1 227 1 76 4 45 1 196 11 119 1 120 1 242 2 54 2 158 1 206 6 128 2 29 2 209 1 255 1 213 5 137 2 
0 1 2 4 3 1 220 1 110 1 142 1 64 3 267 1 70 1 223 1 12 3 227 1 148 1 181 1 237 2 76 6 45 2 239 1 196 19 119 1 120 2 242 3 54 3 158 1 206 9 128 3 29 3 209 1 255 1 97 1 99 1 213 10 137 3 
0 1 2 5 3 1 220 2 110 1 142 1 64 3 267 1 70 1 223 1 12 2 227 1 148 1 181 1 237 1 76 6 45 2 239 1 196 17 119 1 120 2 242 3 54 3 158 1 206 10 128 3 29 3 209 1 255 1 97 1 99 1 213 7 137 3 
2 2 3 1 110 1 142 1 64 1 267 1 70 1 12 1 223 1 227 1 76 2 196 8 119 1 242 1 54 2 158 1 128 1 206 4 29 1 209 1 255 1 213 4 137 1 
2 2 220 1 110 1 142 1 64 1 267 1 70 1 12 2 148 1 181 1 237 2 76 2 45 2 239 1 196 12 120 2 242 1 54 1 206 6 128 2 29 1 255 1 99 1 213 6 137 1 
0 1 2 5 3 1 220 2 110 1 142 1 64 4 267 1 70 1 223 1 12 2 227 1 148 1 181 1 237 1 76 8 45 2 239 1 196 18 119 1 120 2 242 4 54 3 158 1 206 10 128 3 29 4 209 1 255 1 97 2 99 1 213 8 137 4 
2 6 220 3 110 1 142 1 64 4 267 1 70 1 12 2 148 1 152 1 181 1 237 2 76 8 45 3 239 1 196 16 120 3 242 4 54 3 206 9 128 3 29 4 255 1 97 2 99 1 213 7 137 4 
196 7 2 6 3 1 119 1 220 3 12 1 223 3 54 3 227 2 128 1 206 3 209 3 213 4 
2 4 3 1 220 1 110 1 142 1 64 4 267 1 70 1 223 1 12 2 227 1 148 1 152 1 181 1 237 1 76 8 45 2 239 1 196 18 119 1 120 2 242 4 54 3 158 1 206 10 128 3 29 4 209 1 255 1 97 2 99 1 213 8 137 4 
196 8 2 3 119 1 3 1 220 1 64 2 242 2 12 1 223 1 54 2 158 1 128 1 206 4 227 1 29 2 209 1 97 1 76 4 213 4 137 2 
293 1 
0 1 196 4 2 2 220 1 64 1 120 1 242 1 12 1 54 1 128 1 206 2 29 1 237 1 76 2 213 2 137 1 45 1 
196 7 2 2 110 2 140 1 220 1 120 1 267 1 70 1 12 1 54 1 206 3 128 1 237 1 213 4 45 1 
2 9 3 1 4 1 220 4 140 1 110 2 64 2 267 2 223 2 12 3 225 1 227 1 189 1 237 2 76 4 45 2 196 23 119 1 120 2 242 2 54 5 158 1 128 3 206 11 29 2 209 2 97 2 213 12 137 2 
196 1 110 1 213 1 
196 1 206 1 267 1 
0 1 196 6 2 3 220 1 64 1 120 1 242 1 12 1 54 2 128 1 206 3 29 1 236 1 237 1 76 2 137 1 213 3 45 1 
2 2 220 1 110 1 142 1 64 1 267 1 70 1 12 2 148 1 181 1 237 2 76 2 45 2 239 1 196 12 120 2 242 1 54 1 206 6 128 2 29 1 255 1 99 1 213 6 137 1 
196 6 2 2 119 1 220 1 12 1 223 1 54 1 128 1 206 3 209 1 213 3 
196 3 2 2 3 1 220 1 64 1 242 1 223 1 54 1 225 1 206 1 227 1 29 1 209 1 97 1 76 2 213 2 137 1 
247 1 5 1 63 1 243 1 85 1 
59 1 141 1 190 1 
107 1 193 1 80 1 197 1 286 1 265 1 288 2 171 1 9 2 10 1 69 1 13 2 18 2 112 1 150 2 58 2 
107 1 139 1 288 1 265 1 171 1 9 2 10 1 69 1 13 1 18 1 150 1 112 1 58 1 
195 1 61 1 286 1 288 1 265 1 9 1 86 1 15 1 18 1 150 1 
193 1 288 2 265 1 9 1 13 1 295 1 18 2 150 2 44 1 58 1 164 1 
216 1 107 1 265 2 9 3 171 1 10 1 69 1 13 4 18 2 150 3 112 1 44 1 193 1 80 1 197 1 286 1 288 3 26 1 58 3 
216 1 107 1 265 2 9 3 171 1 10 1 69 1 13 4 18 2 150 3 112 1 44 1 193 1 80 1 197 1 286 1 288 3 121 1 58 3 
293 1 286 1 18 1 150 1 288 1 
168 1 265 1 9 1 10 1 40 1 13 1 177 1 146 1 16 1 226 1 18 1 150 1 188 1 286 1 288 1 205 1 248 2 92 2 58 1 104 1 
288 1 265 1 171 1 9 2 10 1 69 1 91 1 13 1 292 1 18 1 150 1 136 1 58 1 
168 1 265 1 9 1 10 1 40 1 13 1 177 1 146 1 226 1 18 1 150 1 188 1 286 1 288 1 205 1 248 2 92 2 250 1 58 1 104 1 
36 1 218 1 168 1 265 1 9 1 40 1 10 2 13 3 177 2 146 1 226 2 147 1 18 1 150 1 188 2 288 1 205 1 248 2 92 2 28 1 250 1 136 1 58 2 104 1 
36 1 218 1 168 1 265 1 9 1 40 1 10 2 13 3 177 2 146 1 16 1 226 2 147 1 18 1 150 1 188 2 288 1 205 1 248 2 92 2 28 1 136 1 58 2 104 1 
262 1 265 1 266 1 6 1 9 1 10 1 177 1 13 4 14 1 226 1 147 1 18 1 150 1 182 2 278 1 188 1 82 1 198 1 288 1 202 1 87 1 88 1 205 1 90 1 248 1 92 1 28 1 207 1 130 2 94 1 136 1 58 1 
262 1 265 1 9 1 10 1 177 1 13 4 14 1 226 1 147 1 18 1 277 1 150 1 182 2 278 1 188 1 82 1 198 1 288 1 202 1 87 1 88 1 205 1 90 1 248 1 92 1 28 1 207 1 130 2 94 1 136 1 58 1 
288 1 265 1 9 1 93 1 18 1 150 1 
286 1 288 1 265 1 171 1 9 2 10 1 69 1 91 1 13 1 292 1 18 1 150 1 58 1 
1 1 2 4 3 1 220 1 64 2 9 1 11 1 10 1 223 2 12 3 13 1 146 1 226 1 227 1 18 1 150 1 76 4 242 2 244 1 92 2 248 2 158 1 29 2 250 1 104 3 168 1 265 1 39 1 40 1 175 1 177 1 279 1 188 1 193 1 196 13 118 1 119 2 288 1 50 1 203 1 205 1 54 3 128 3 206 7 209 2 133 2 298 1 57 2 58 1 137 2 213 6 
123 1 
93 1 18 1 265 1 150 1 288 1 184 1 9 1 
106 1 52 1 238 1 104 1 271 1 
106 1 218 1 36 1 221 1 271 1 177 2 226 1 182 1 278 1 188 1 238 1 23 1 202 1 52 1 123 1 87 1 205 1 90 1 248 1 92 1 130 1 207 1 94 1 32 1 163 1 256 1 
248 1 92 1 178 1 226 1 55 1 8 1 52 1 238 1 271 1 
221 1 23 1 271 1 
274 1 17 1 208 1 160 1 297 1 187 1 191 1 154 1 
284 2 169 1 289 1 89 1 228 1 208 4 17 4 42 1 160 2 187 1 297 1 154 2 191 3 259 1 
283 1 284 1 167 1 274 1 249 1 208 2 17 2 160 1 187 1 297 1 191 1 154 1 
289 2 274 1 208 3 17 3 42 2 160 1 254 1 187 1 297 1 191 1 154 1 259 1 
132 2 199 1 66 1 191 2 
274 1 17 1 208 1 297 1 187 1 122 1 
284 1 274 1 17 2 208 2 160 1 297 1 187 1 68 1 191 1 154 1 
77 1 
274 1 17 1 208 1 160 1 297 1 187 1 191 1 154 1 
293 1 
17 1 208 1 160 1 297 1 187 1 191 1 154 1 
214 1 17 1 143 1 
289 2 274 1 208 3 17 3 230 1 42 1 160 1 187 1 297 1 191 1 154 1 259 1 
284 1 17 2 208 2 160 1 200 1 297 1 187 1 191 1 154 1 
195 1 169 1 27 1 274 1 15 1 208 1 17 1 187 1 297 1 185 1 191 1 
274 1 17 1 208 1 297 1 187 1 191 1 154 1 
274 1 17 1 208 1 160 1 297 1 187 1 154 2 
125 1 274 1 208 2 17 2 276 1 252 1 187 2 297 2 191 1 154 1 
215 1 284 2 169 1 68 1 89 1 274 1 208 3 17 3 160 1 187 1 297 1 154 1 191 2 
284 1 195 1 86 1 274 1 15 2 208 2 17 2 160 1 151 1 187 1 297 1 185 1 191 1 154 1 299 1 
166 1 284 2 169 1 200 1 89 1 274 1 208 4 17 4 160 1 187 2 297 2 154 1 191 2 
284 1 68 1 289 1 274 1 208 3 17 3 160 1 187 1 297 1 154 1 191 1 
228 1 169 1 191 1 89 1 
191 1 154 1 

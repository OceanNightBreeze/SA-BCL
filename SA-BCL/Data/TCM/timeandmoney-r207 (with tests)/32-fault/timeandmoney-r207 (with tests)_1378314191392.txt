#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 96 (177,301) (177,301) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 96 (177,301) (177,301) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 96 (177,301) (177,301) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 96 (177,301) (177,301) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 96 (51,111) (51,111) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 69 5 280 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 69 5 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (53,57,131,295) (53,57,131,295) (53,57,131,295) (237,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (53,57,131,295) (53,57,131,295) (53,57,131,295) (237,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 92 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 92 270 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 92 270 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (46,103) 266 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (3,253) (3,253) (192,311) 190 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 67 267 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 181 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 69 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (46,103) 266 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (46,103) (46,103) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (46,103) (46,103) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 179 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (53,57,131,295) (53,57,131,295) (53,57,131,295) 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (53,57,131,295) (53,57,131,295) (53,57,131,295) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (53,57,131,295) (53,57,131,295) (53,57,131,295) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
35 1 75 1 
96 1 35 1 301 1 177 1 
96 1 35 1 301 1 177 1 
96 1 35 1 301 1 177 1 
96 1 35 1 301 1 177 1 
35 1 123 1 
96 1 51 1 111 1 35 1 313 1 28 1 
213 1 35 1 
213 1 35 1 
164 1 167 1 102 1 83 1 84 1 185 1 129 1 52 1 112 1 142 1 316 1 95 1 77 1 116 1 
37 1 
6 1 121 1 164 1 37 1 102 1 167 1 83 1 84 1 185 1 307 1 129 1 52 2 112 1 142 2 316 1 95 1 77 1 196 1 116 1 
6 1 4 4 296 2 180 1 299 2 102 1 300 1 220 1 104 1 185 1 112 1 312 1 314 1 316 1 77 1 196 2 116 1 80 2 121 1 36 1 164 1 37 1 167 2 42 1 83 1 84 1 126 4 129 1 90 2 130 1 279 1 52 5 134 2 135 1 142 5 145 1 95 1 60 2 
6 1 181 1 37 1 
271 1 
112 1 102 2 83 2 195 1 316 2 95 2 77 2 116 2 
212 1 151 1 3 1 217 2 100 1 102 2 157 1 65 2 21 1 109 1 222 1 112 1 191 1 74 2 195 1 316 3 77 2 116 2 118 1 33 1 226 1 39 1 83 2 322 1 172 1 204 1 325 1 235 1 205 1 55 1 206 1 281 1 284 2 285 2 59 1 95 3 147 1 
129 1 112 1 164 1 102 1 83 1 316 1 84 1 95 1 77 1 116 1 
6 1 97 1 164 1 37 1 201 1 102 1 83 1 84 1 185 1 129 2 52 1 174 1 112 1 93 1 223 1 142 1 316 2 146 1 95 2 77 2 116 1 
6 1 97 1 164 1 37 1 201 1 102 2 83 2 84 1 185 1 129 2 52 2 174 1 112 1 223 1 142 2 316 2 95 2 77 2 116 2 
52 1 182 1 167 1 142 1 196 1 
6 1 52 2 121 1 37 1 167 1 287 1 142 2 196 1 
52 1 142 1 196 1 
102 1 83 1 169 1 22 1 316 2 195 2 95 2 77 2 116 1 
125 1 43 1 159 1 
151 1 217 1 100 1 65 1 322 1 21 1 222 1 55 1 281 1 262 1 285 1 59 1 195 1 316 1 95 1 147 1 
21 1 217 1 166 1 285 1 65 1 
181 1 195 1 
317 1 294 1 166 1 102 2 83 2 169 1 129 1 316 2 195 1 95 2 77 2 116 1 
129 1 102 1 83 1 316 1 84 1 95 1 77 1 
317 1 102 3 83 3 195 1 316 3 95 3 77 3 116 1 
129 1 102 1 83 1 316 1 84 1 95 1 77 1 
102 1 83 1 169 1 129 1 22 1 316 1 95 1 77 1 116 1 
166 1 102 1 83 1 316 1 95 1 169 1 77 1 116 1 
317 1 102 1 83 1 195 1 316 2 146 1 95 2 77 2 289 1 
166 1 
102 1 43 1 83 1 316 1 95 1 169 1 77 1 116 1 
151 1 217 1 100 1 65 1 322 1 21 1 222 1 55 1 281 1 285 1 59 1 195 1 316 1 95 1 147 1 
151 1 217 1 100 1 65 1 18 1 322 1 21 1 55 1 281 1 285 1 59 1 195 1 316 1 95 1 225 1 
212 1 12 1 246 1 250 1 153 1 157 1 159 2 68 1 260 1 191 1 74 4 194 1 80 1 226 1 125 2 39 2 43 2 235 1 91 1 205 1 134 1 206 2 284 2 286 2 140 1 
102 1 83 1 129 1 72 1 223 1 316 1 95 1 77 1 
176 1 239 1 87 1 
98 1 87 2 233 1 133 1 239 2 178 1 329 1 
239 1 87 1 
239 1 87 1 
233 1 98 1 
233 1 98 1 
233 1 98 1 
249 1 239 1 87 1 
249 1 239 1 87 1 
249 1 239 1 87 1 
239 1 127 1 87 1 
239 1 127 1 87 1 
239 1 127 1 87 1 
188 1 69 1 5 1 52 1 280 1 142 1 239 1 328 1 87 1 
188 1 69 1 5 1 239 1 328 1 87 1 
113 1 313 2 251 2 28 1 88 1 
113 1 313 1 224 1 
313 1 224 1 28 1 
113 2 313 3 251 1 303 1 28 1 88 1 
108 1 113 1 313 2 251 1 28 1 88 1 
290 2 4 3 6 1 299 1 102 1 185 1 71 2 259 2 310 1 112 1 73 1 316 1 77 1 196 1 116 1 80 1 318 1 121 1 124 1 271 2 37 1 164 1 167 4 276 1 83 1 126 2 84 1 129 1 90 1 130 1 52 5 91 1 134 1 140 1 141 1 142 5 95 1 60 1 148 1 
6 1 4 3 182 2 102 1 105 1 185 1 112 1 196 3 116 1 119 1 121 1 124 1 37 1 271 2 276 1 126 2 129 1 130 1 52 5 134 1 140 1 142 5 60 1 148 1 290 2 299 1 71 2 73 1 316 1 77 1 79 2 80 1 318 1 164 1 167 4 83 1 84 1 90 1 91 1 95 1 
290 1 6 1 4 1 299 1 102 1 185 1 259 1 71 1 310 1 112 1 312 1 73 1 316 1 77 1 115 1 116 1 318 1 164 1 37 2 271 2 167 2 83 1 276 1 84 1 126 2 129 1 90 1 52 3 134 1 141 1 140 1 142 3 95 1 60 1 148 1 
290 2 6 1 4 1 299 1 184 1 309 1 71 2 259 2 310 1 312 1 73 1 115 2 318 1 120 1 37 3 271 4 167 3 276 2 126 4 90 1 52 4 134 2 141 1 140 2 142 4 60 1 148 2 
240 1 
34 1 181 1 281 1 
216 1 281 1 
151 1 281 1 59 1 
261 1 281 1 
151 1 281 1 
151 1 34 2 321 1 94 1 281 3 59 1 
80 1 36 1 246 2 248 1 39 4 220 1 107 1 234 2 236 1 260 1 132 1 134 1 162 1 206 5 25 1 74 9 286 3 145 1 
212 1 248 2 246 1 64 1 219 1 220 1 157 1 19 1 260 1 162 1 191 1 74 6 30 1 226 1 39 3 170 1 45 1 48 1 234 1 236 1 206 3 284 2 286 2 145 1 
212 1 245 1 248 1 246 3 220 2 157 1 107 1 260 3 314 1 191 1 74 18 80 3 226 1 36 2 40 1 39 8 234 2 236 1 132 1 134 3 206 10 284 2 286 6 145 2 
80 1 36 1 246 2 248 1 39 4 220 1 107 1 234 2 236 1 260 1 132 1 134 1 162 1 206 5 74 9 286 3 145 1 
80 1 36 1 246 2 248 1 39 4 220 1 107 1 234 2 236 1 260 1 132 1 134 1 162 1 206 5 74 9 286 3 145 1 
295 1 131 1 53 1 237 1 
70 1 292 1 35 1 217 1 285 1 65 1 
70 1 161 1 35 1 217 1 285 1 65 1 
295 1 131 1 53 1 237 1 
292 1 295 2 293 1 218 1 217 1 100 1 183 1 65 1 303 1 255 2 70 1 20 1 113 1 313 2 224 1 28 1 265 1 320 1 227 1 41 1 230 1 322 1 57 2 285 1 241 1 
13 1 
7 2 4 2 6 1 9 2 97 1 247 1 100 1 256 2 21 2 23 1 115 2 196 6 29 1 197 1 198 2 31 1 121 3 271 2 37 2 201 1 203 1 126 2 49 2 130 1 129 1 52 5 281 1 283 1 208 1 285 2 207 1 143 1 142 5 146 1 60 1 210 1 151 1 152 1 217 2 154 2 299 1 65 2 223 1 73 1 316 1 77 1 81 1 322 1 171 2 324 4 90 1 326 1 174 1 93 1 95 1 
6 1 31 1 81 1 97 1 37 1 154 1 201 1 203 1 324 2 129 1 52 2 174 1 223 1 93 1 283 1 207 1 142 2 316 1 146 1 95 1 196 1 77 1 
6 1 31 1 81 1 97 1 37 1 201 1 203 1 171 1 324 3 129 1 52 2 174 1 223 1 93 1 283 1 207 1 142 2 316 1 146 1 95 1 77 1 
6 1 9 1 97 1 154 1 307 1 223 1 316 1 77 1 196 2 31 1 81 1 121 1 37 1 201 1 203 1 171 1 324 3 129 1 52 3 174 1 93 1 283 1 207 1 142 3 95 1 146 1 
6 2 9 1 97 1 154 1 102 1 185 1 307 1 112 1 223 1 24 1 316 2 77 2 196 2 116 1 31 1 81 1 121 1 164 1 37 2 201 1 83 1 203 1 84 1 171 1 324 3 129 2 52 3 174 1 93 1 283 1 207 1 142 3 146 1 95 2 
6 2 4 1 7 2 9 2 97 1 256 2 23 1 115 2 196 4 198 2 197 1 31 1 121 2 37 2 271 2 201 1 203 1 126 1 49 2 129 1 130 1 52 4 283 1 207 1 142 4 146 1 60 1 152 1 299 1 154 2 223 1 316 1 77 1 81 1 171 2 324 4 90 1 174 1 93 1 95 1 
6 1 31 1 81 1 97 1 37 1 201 1 203 1 324 2 129 1 52 2 92 1 174 1 223 1 93 1 283 1 207 1 142 2 316 1 146 1 95 1 77 1 
6 1 31 1 81 1 97 1 37 1 201 1 203 1 324 2 129 1 52 2 92 1 174 1 223 1 93 1 283 1 207 1 142 2 316 1 146 1 95 1 77 1 
6 2 4 1 9 2 97 1 14 2 102 1 185 1 23 1 112 1 114 2 196 4 116 1 198 2 31 1 121 2 37 2 271 2 272 1 201 1 203 1 126 1 49 2 130 1 129 2 52 4 283 1 139 1 207 1 142 4 146 1 60 1 63 1 299 1 154 2 223 1 316 2 77 2 319 1 81 1 164 1 83 1 84 1 171 2 324 4 90 1 174 1 93 1 95 2 
6 1 9 1 97 1 154 1 223 1 316 1 77 1 196 1 31 1 81 1 270 1 37 1 201 1 203 1 171 1 324 3 129 1 52 2 92 1 174 1 93 1 283 1 207 1 142 2 95 1 146 1 
6 1 9 1 97 1 154 1 223 1 316 1 77 1 196 1 31 1 81 1 270 1 37 1 201 1 203 1 171 1 324 3 129 1 52 2 92 1 174 1 93 1 283 1 207 1 142 2 95 1 146 1 
4 1 6 1 97 1 299 1 23 1 223 1 114 1 316 1 77 1 197 1 198 1 319 1 31 1 81 1 271 1 37 1 201 1 203 1 126 1 324 2 49 1 90 1 130 1 129 1 52 2 174 1 93 1 283 1 207 1 142 2 146 1 95 1 60 1 
212 1 151 2 11 1 217 2 100 3 65 2 157 1 21 1 109 1 191 1 74 2 266 1 226 1 38 1 39 1 275 1 322 2 323 1 46 1 172 1 325 1 235 1 205 1 281 2 206 1 284 2 285 2 208 1 59 1 210 1 
212 1 226 1 102 1 276 1 83 1 157 1 169 1 235 1 205 1 134 1 56 1 206 1 191 1 284 2 74 1 140 1 175 1 316 1 95 1 77 1 116 1 
212 1 226 1 181 1 246 1 250 1 39 1 220 1 157 1 107 1 235 1 260 1 205 1 132 1 206 1 191 1 284 2 74 2 286 2 195 1 145 1 
212 2 244 1 246 2 219 1 157 2 159 12 306 1 109 1 260 2 191 2 74 16 195 1 199 1 80 2 32 1 226 2 125 12 39 8 43 12 276 2 170 3 86 1 172 1 48 3 235 1 91 2 205 2 134 2 56 1 206 8 284 4 140 2 286 4 
212 1 226 1 166 1 39 1 157 1 172 1 235 1 109 1 205 1 56 1 206 1 191 1 284 2 163 1 74 2 242 1 
3 1 212 1 226 1 217 1 166 1 39 1 157 1 65 1 253 1 235 1 21 1 109 1 205 1 311 1 56 1 190 1 191 1 284 2 74 1 285 1 
212 1 226 1 125 1 250 1 153 1 43 1 157 1 159 1 235 1 260 1 205 1 134 1 191 1 206 2 284 2 74 2 286 1 140 1 
212 1 80 1 226 1 246 1 125 1 250 1 39 2 43 1 157 1 159 1 235 1 205 1 91 1 191 1 284 2 74 2 286 1 194 1 
212 1 246 1 250 1 157 1 159 2 260 1 191 1 74 4 80 1 226 1 125 2 39 2 276 1 43 2 235 1 205 1 91 1 134 1 206 2 284 2 140 1 286 2 
212 1 226 1 125 1 153 1 43 1 157 1 159 1 323 1 235 1 260 1 205 1 134 1 191 1 206 2 284 2 74 2 286 1 140 1 
212 1 80 1 226 1 246 1 125 1 39 2 43 1 157 1 159 1 323 1 235 1 205 1 91 1 191 1 284 2 74 2 286 1 194 1 
212 1 246 1 157 1 159 2 260 1 191 1 74 4 80 1 226 1 125 2 39 2 276 1 43 2 323 1 235 1 205 1 91 1 134 1 206 2 284 2 140 1 286 2 
80 1 212 1 226 1 246 1 125 2 39 2 43 2 276 1 157 1 159 2 235 1 91 1 260 1 205 1 134 1 191 1 206 2 284 2 74 4 286 2 140 1 
151 1 3 1 212 1 217 1 100 1 65 1 157 1 21 1 109 1 222 1 191 1 74 2 195 1 316 1 226 1 39 1 322 1 172 1 235 1 205 1 55 1 206 1 281 1 284 2 285 1 59 1 147 1 95 1 
151 1 212 1 214 1 217 1 100 1 18 1 65 1 157 1 21 1 109 1 191 1 74 2 195 1 316 1 225 1 226 1 39 1 322 1 172 1 235 1 205 1 55 1 206 1 281 1 284 2 285 1 59 1 95 1 
212 1 246 1 157 1 159 2 260 1 191 1 74 4 80 1 226 1 125 2 39 2 276 1 43 2 235 1 205 1 91 1 134 1 56 1 206 2 284 2 140 1 286 2 
3 1 151 1 212 1 246 1 217 1 100 1 65 1 157 1 159 2 253 1 260 1 222 1 161 1 191 1 74 4 316 1 80 1 226 1 125 2 39 2 43 2 276 1 322 1 235 1 91 1 205 1 134 1 55 1 206 2 281 1 284 2 285 1 286 2 140 1 59 1 147 1 95 1 
212 1 102 1 157 1 159 1 260 1 191 1 74 3 316 1 77 1 116 1 80 1 226 1 125 1 39 1 83 1 276 1 43 1 169 1 235 1 91 1 205 1 134 1 56 1 206 2 284 2 238 1 286 1 140 1 95 1 
212 2 2 1 245 1 219 2 158 1 157 2 66 1 305 1 308 1 110 1 260 2 191 2 74 22 263 1 315 3 80 2 226 2 165 1 39 10 274 1 168 1 276 3 170 2 277 1 48 2 91 2 134 3 206 12 284 4 286 2 140 3 288 1 61 1 
212 2 2 1 245 1 219 2 158 1 157 2 66 1 305 1 308 1 110 1 260 1 191 2 74 20 263 1 315 3 80 1 226 2 165 1 39 8 274 1 168 1 276 3 170 2 277 1 48 2 91 1 134 3 206 12 284 4 286 1 140 3 288 1 61 1 
212 1 2 1 245 1 219 2 157 1 66 1 305 1 308 1 110 1 260 1 191 1 74 20 263 1 315 3 80 1 226 1 165 1 39 8 274 1 168 1 276 3 170 2 277 1 48 2 91 1 134 3 206 12 284 2 286 1 140 3 288 1 61 1 
212 2 2 1 245 1 219 2 158 1 157 2 66 1 305 1 308 1 260 1 191 2 74 18 263 1 315 2 76 1 80 1 226 2 165 1 39 7 274 1 168 1 276 3 170 2 277 1 48 2 91 1 134 3 206 11 284 4 286 1 140 3 288 1 61 1 
2 1 212 1 245 1 219 2 157 1 66 1 305 1 308 1 110 1 260 2 191 1 74 32 263 1 315 2 80 3 32 2 199 2 226 1 165 2 39 13 274 2 168 1 276 6 170 4 277 1 48 4 91 3 134 6 206 19 284 2 140 6 286 2 288 1 61 1 
151 1 212 1 8 1 297 1 217 2 100 1 65 2 157 1 254 1 187 1 109 1 191 1 74 2 316 2 77 2 122 1 226 1 39 1 275 1 231 1 322 1 172 1 325 2 235 1 205 1 56 1 281 1 206 1 284 2 285 2 95 2 
50 1 21 1 10 1 218 1 217 1 285 1 156 1 65 1 
292 1 1 1 217 1 218 1 100 1 228 1 183 1 65 1 303 1 322 1 50 1 113 1 313 2 138 1 285 1 224 1 28 1 241 1 
292 1 1 1 217 2 218 1 100 1 228 1 183 1 65 2 303 1 322 1 50 1 161 1 113 1 313 2 138 1 285 2 224 1 28 1 241 1 
292 1 1 1 217 1 218 1 100 1 228 1 183 1 17 1 65 1 303 1 322 1 113 1 313 2 285 1 224 1 28 1 241 1 
278 1 
279 1 90 1 130 1 299 1 60 1 
290 2 80 1 4 2 271 2 276 1 126 2 71 2 91 1 134 1 140 1 
6 1 52 1 121 1 37 1 142 1 196 1 
150 1 151 1 4 1 247 1 217 3 100 1 299 2 155 1 65 3 67 1 21 2 312 1 73 1 196 4 267 1 121 2 322 1 126 2 90 2 130 1 326 2 52 3 281 1 285 3 208 1 143 1 142 3 60 2 210 1 
279 1 181 1 42 1 
4 1 7 1 6 1 152 1 299 1 256 1 115 1 196 1 121 1 271 1 37 1 126 1 90 1 130 1 52 1 142 1 60 1 
6 1 4 8 97 2 100 2 15 1 16 2 102 1 252 2 185 1 257 2 21 1 112 1 192 2 26 2 196 5 116 1 34 2 121 3 37 1 271 6 276 2 126 7 129 1 130 3 52 5 134 2 281 6 136 1 285 1 59 1 140 2 142 5 60 3 290 6 151 1 216 3 217 1 299 3 65 1 71 6 73 2 316 1 77 1 78 1 80 2 164 1 83 1 84 1 322 1 90 3 326 1 91 2 94 1 95 1 327 2 
290 4 4 3 2 1 299 1 219 1 66 1 71 4 263 1 32 1 199 1 271 3 276 4 170 2 126 7 277 1 48 2 90 1 130 1 134 4 140 4 288 1 60 1 
4 2 296 2 299 1 220 1 102 1 104 1 185 1 112 1 314 1 316 1 77 1 116 1 117 1 80 1 36 1 164 1 83 1 84 1 126 2 129 1 90 1 130 1 52 1 134 2 142 1 145 1 95 1 60 1 
212 1 3 1 151 1 217 1 100 1 102 2 157 1 65 1 21 1 109 1 222 1 112 1 191 1 74 1 195 1 316 3 77 2 116 2 226 1 39 1 83 2 322 1 204 1 235 1 205 1 55 1 281 1 284 2 285 1 59 1 95 3 147 1 
4 1 6 1 271 1 37 1 299 1 126 1 130 1 90 1 71 1 326 1 73 1 60 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
69 1 328 1 
239 1 87 1 
80 1 2 1 212 1 226 1 245 1 219 1 39 4 276 2 157 1 170 1 66 1 277 1 48 1 91 1 134 2 206 6 191 1 284 2 74 10 140 2 263 1 288 1 
212 2 2 1 245 1 219 1 157 2 66 1 189 1 191 2 74 10 263 1 80 1 226 2 39 4 276 2 170 1 277 1 48 1 91 1 134 2 206 6 284 4 140 2 288 1 
212 2 2 1 245 1 219 1 157 2 66 1 260 2 189 1 191 2 74 18 263 1 32 1 199 1 80 2 226 2 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 4 140 4 286 2 288 1 
212 2 2 1 245 1 219 1 157 2 66 1 260 1 189 1 191 2 74 18 263 1 32 1 199 1 80 2 226 2 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 4 140 4 286 1 288 1 
80 1 2 1 212 1 226 1 245 1 219 1 39 4 276 2 157 1 170 1 66 1 277 1 48 1 91 1 134 2 206 6 191 1 284 2 74 10 140 2 263 1 288 1 
212 1 2 1 245 1 219 1 157 1 66 1 260 2 191 1 74 18 263 1 32 1 199 1 80 2 226 1 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 2 140 4 286 2 288 1 
212 2 2 1 245 1 219 1 157 2 66 1 260 1 189 1 191 2 74 18 263 1 32 1 199 1 80 2 226 2 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 4 140 4 286 1 288 1 
212 2 2 1 245 1 219 1 157 2 158 1 66 1 260 2 191 2 74 18 263 1 32 1 199 1 80 2 226 2 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 4 140 4 286 2 288 1 
246 2 39 2 220 2 107 2 132 1 260 2 206 2 74 4 286 4 145 2 
212 2 2 1 245 1 219 1 157 2 158 1 66 1 260 1 191 2 74 18 263 1 32 1 199 1 80 2 226 2 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 4 140 4 286 1 288 1 
80 2 36 1 246 2 39 5 220 1 260 2 134 2 314 1 206 5 74 10 286 4 145 1 
212 1 226 1 245 1 157 1 260 1 134 1 191 1 206 2 284 2 74 2 140 1 286 1 
80 1 212 1 226 1 245 1 39 2 276 1 157 1 91 1 260 1 134 1 191 1 206 2 284 2 74 4 286 1 140 1 
212 1 226 1 245 1 246 1 39 1 220 1 157 1 260 1 191 1 206 1 284 2 74 2 286 2 145 1 
212 4 245 1 246 3 64 1 219 1 220 2 158 1 157 4 19 1 107 1 260 3 189 1 314 1 191 4 74 15 80 2 226 4 36 1 39 8 170 1 45 1 48 1 132 1 134 2 206 7 284 8 286 6 145 2 
80 1 212 2 226 2 36 1 246 2 64 1 39 4 220 1 157 2 107 1 234 1 260 1 132 1 134 1 206 4 191 2 284 4 74 8 286 3 145 1 
107 1 234 1 80 1 260 1 132 1 134 1 36 1 181 1 206 4 246 2 39 4 74 8 286 3 220 1 145 1 
212 1 226 1 276 1 157 1 134 1 189 1 191 1 206 2 284 2 74 2 140 1 
80 1 32 1 199 1 219 1 39 4 276 2 170 2 48 2 91 1 260 1 134 2 206 6 74 10 286 1 140 2 
212 2 244 1 246 3 64 2 220 2 157 2 107 1 260 4 191 2 74 23 32 1 80 3 199 1 226 2 36 1 39 12 276 2 170 2 45 1 48 2 234 1 132 1 91 2 134 3 206 11 284 4 286 7 140 2 145 2 
48 1 74 1 39 1 
206 1 74 1 170 1 
80 1 16 1 39 3 276 1 260 1 91 1 134 1 206 3 74 6 140 1 286 1 
212 1 2 1 245 1 219 1 157 1 66 1 260 2 191 1 74 18 263 1 32 1 199 1 80 2 226 1 39 7 276 4 170 2 277 1 48 2 91 2 134 4 206 11 284 2 140 4 286 2 288 1 
80 1 260 1 134 1 36 1 246 1 206 3 39 3 74 6 286 2 220 1 145 1 
212 1 226 1 246 1 64 1 39 2 220 1 157 1 45 1 107 1 260 1 132 1 206 1 191 1 284 2 74 3 286 2 145 1 
47 1 195 1 316 1 95 1 146 1 77 1 289 1 
243 1 269 1 202 1 304 1 221 1 47 1 195 1 316 1 146 1 95 1 77 1 289 1 
151 1 217 4 100 1 65 4 322 1 258 1 21 1 161 1 282 1 281 1 285 4 208 1 210 1 
151 1 11 1 266 1 217 1 100 2 38 1 65 1 322 1 232 1 46 1 281 1 285 1 59 1 
21 1 313 1 217 1 100 1 285 1 224 1 65 1 28 1 322 1 241 1 
292 1 151 1 8 1 217 2 297 1 100 1 65 2 322 1 161 1 281 1 285 2 
150 1 151 2 8 1 217 4 100 2 65 5 322 2 186 1 258 1 21 1 161 1 281 3 208 1 285 5 193 1 210 1 
291 1 150 1 151 2 8 1 217 4 100 2 65 5 322 2 186 1 258 1 21 1 161 1 281 3 208 1 285 5 210 1 
151 1 21 1 181 1 281 1 217 1 100 1 208 1 285 1 65 1 322 1 210 1 
317 1 151 1 217 1 100 1 102 1 83 1 65 1 322 1 21 1 55 1 281 1 285 1 59 1 195 1 316 2 95 2 147 1 77 1 
150 1 151 2 217 1 100 1 298 1 102 2 65 1 223 1 261 1 195 1 316 2 77 2 317 1 201 1 83 1 322 1 129 1 55 1 281 3 285 1 59 2 147 1 95 2 
150 1 151 2 217 2 100 1 298 1 102 2 18 1 65 2 223 1 261 1 195 1 316 2 77 2 317 1 201 1 83 1 322 1 129 1 55 1 282 1 281 3 285 2 59 2 95 2 
150 1 151 1 6 1 216 1 97 1 217 1 100 1 298 1 102 1 65 1 185 1 106 1 160 1 112 1 261 1 316 1 77 1 196 1 116 1 34 1 164 1 37 1 83 1 84 1 322 1 129 1 52 2 281 4 285 1 59 1 142 2 95 1 
150 1 151 1 6 1 216 1 97 1 217 1 100 1 298 1 102 1 65 1 252 1 185 1 112 1 261 1 316 1 77 1 196 1 116 1 34 1 164 1 37 1 83 1 84 1 322 1 129 1 52 2 281 4 285 1 59 1 142 2 95 1 
217 1 100 1 285 1 65 1 322 1 128 1 
151 1 11 1 217 1 100 2 103 1 65 1 322 1 46 1 21 1 94 1 281 1 285 1 59 1 
151 1 212 2 3 1 246 1 217 1 100 1 220 1 102 1 157 2 65 1 253 1 107 1 260 1 161 1 311 1 222 1 191 2 74 2 195 1 316 2 77 1 317 1 226 2 39 1 83 1 231 1 322 1 235 2 132 1 205 2 55 1 56 1 206 1 281 1 284 4 285 1 286 2 59 1 145 1 95 2 147 1 
4 4 6 1 97 1 102 1 104 1 252 1 185 1 257 1 21 1 112 1 192 1 26 1 196 2 116 1 34 1 121 1 36 1 37 1 42 1 126 4 129 1 130 2 279 1 52 3 134 2 281 2 285 1 142 3 145 1 60 2 296 2 216 1 217 1 299 2 220 1 155 1 65 1 314 1 316 1 77 1 80 2 164 1 167 1 83 1 84 1 90 2 95 1 
151 1 34 1 217 2 100 2 65 2 322 1 128 1 161 1 94 1 136 1 281 2 285 2 59 1 
317 1 151 1 217 1 100 1 102 1 83 1 65 1 18 1 322 1 21 1 55 1 281 1 285 1 59 1 195 1 316 2 95 2 77 1 
150 1 151 1 11 1 217 1 100 2 103 1 65 1 322 1 46 1 94 1 281 1 285 1 59 1 
89 1 149 1 99 1 101 1 
89 1 149 1 179 1 200 1 52 1 99 1 101 1 167 1 142 1 27 1 
149 1 122 1 101 1 254 1 187 1 89 1 316 1 95 1 77 1 
89 1 179 1 27 1 
35 1 44 1 
131 1 53 1 295 2 57 1 44 1 255 1 
295 1 54 1 35 1 57 1 58 1 302 1 44 1 255 1 
295 1 215 1 35 1 137 1 229 1 44 1 255 1 
273 1 230 1 62 1 
35 1 
295 1 35 1 57 1 44 1 85 1 255 1 
0 1 
35 1 
265 1 320 1 181 1 230 1 
295 1 131 1 53 1 
20 1 41 1 255 1 
295 1 35 1 137 1 229 1 144 1 44 1 255 1 
295 1 131 1 53 1 
35 1 
35 1 
35 1 
173 1 35 1 
211 1 295 2 268 1 35 1 230 1 44 1 85 1 255 2 57 2 209 1 
35 1 313 1 28 1 
211 1 295 2 268 1 35 1 82 1 230 1 44 1 255 2 57 2 264 1 
295 1 35 1 229 1 44 1 255 1 
211 1 268 1 230 1 44 1 
320 1 230 1 

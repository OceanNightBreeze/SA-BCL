#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (9,97,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (14,198) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (9,97,324) 184 46 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (9,97,324) 184 292 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 288 (118,160,171) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 245 115 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (9,97,324) (9,97,324) 93 311 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 161 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (102,263) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (14,198) 208 143 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 242 50 19 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 242 50 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 242 50 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 242 50 19 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 242 50 19 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (268,323) 266 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (268,323) 266 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (268,323) 20 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (268,323) 20 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 245 115 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 132 181 92 321 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 132 181 92 321 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 132 181 92 321 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 161 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 136 15 (216,228) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 127 (185,215) (185,215) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 29 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 297 1 283 1 65 3 327 1 71 3 75 2 334 2 199 1 94 1 235 1 342 1 239 2 
297 2 43 1 4 1 182 1 301 1 47 2 262 1 265 1 199 1 94 1 235 4 315 1 58 1 239 5 65 9 283 1 327 6 71 9 75 2 334 2 164 1 122 2 36 1 125 2 219 1 291 1 342 3 222 2 
297 2 43 1 4 1 182 1 301 1 47 2 262 1 265 1 199 1 94 1 235 4 315 1 58 1 239 5 65 9 283 1 327 6 71 9 75 2 334 2 164 1 122 2 36 1 125 2 219 1 291 1 342 3 222 2 
297 2 43 1 4 1 182 1 301 1 47 2 262 1 265 1 199 1 94 1 235 5 315 1 58 1 239 6 65 10 283 1 327 7 71 10 75 2 334 2 164 1 122 2 36 1 125 2 219 1 291 1 342 4 222 2 
297 2 43 1 4 1 182 1 301 1 47 2 262 1 265 1 199 1 94 1 235 3 315 1 239 4 65 7 283 1 327 4 71 7 75 2 334 2 164 1 122 1 36 1 125 2 219 1 291 1 342 2 222 2 
283 1 65 4 327 3 71 4 47 1 75 1 334 1 122 2 199 1 94 1 235 2 125 1 219 1 342 1 315 1 58 1 239 3 222 1 
297 1 244 1 283 1 65 2 207 1 182 1 71 2 47 1 75 1 265 1 334 1 199 1 94 1 125 1 239 1 99 1 
297 1 43 1 47 1 11 1 262 1 199 1 94 1 235 4 315 1 239 5 58 1 327 7 65 9 283 1 158 1 71 9 75 2 334 2 164 1 122 2 125 1 219 1 342 3 222 1 
297 1 43 1 47 1 11 1 262 1 199 1 94 1 235 4 315 1 239 5 58 1 327 7 65 9 283 1 158 1 71 9 75 2 334 2 164 1 122 2 125 1 219 1 342 3 222 1 
280 1 2 1 325 1 111 1 249 1 250 1 97 1 338 1 340 1 253 1 98 1 144 1 317 1 129 1 
218 1 
166 1 44 1 218 1 97 2 183 1 139 1 98 2 249 1 
293 2 176 1 2 1 298 1 133 2 44 1 179 1 227 1 135 1 183 1 267 1 97 5 21 1 144 1 98 5 317 1 240 1 241 2 278 1 107 2 280 1 108 1 325 1 111 1 248 2 284 1 209 1 249 2 250 1 117 1 166 2 34 3 338 1 218 1 340 1 253 1 129 1 
218 1 183 1 161 1 
218 1 38 2 100 1 
17 1 2 2 338 2 111 2 340 1 253 2 317 2 129 2 
0 1 225 2 257 1 2 2 8 1 230 1 90 1 305 1 17 1 316 1 145 1 317 2 318 1 103 1 106 2 279 1 280 1 61 1 154 1 111 2 287 2 333 1 336 1 337 2 217 1 168 2 338 2 339 1 340 1 253 2 343 1 175 1 129 2 
280 1 2 1 325 1 338 1 111 1 340 1 253 1 317 1 129 1 250 1 
192 1 280 1 95 1 324 1 111 1 253 1 9 1 317 1 162 1 
192 1 280 1 2 1 324 1 338 1 111 1 253 1 317 1 162 1 129 1 
295 1 166 1 97 1 98 1 249 1 
166 1 33 1 44 1 218 1 97 2 183 1 98 2 249 1 
166 1 97 1 98 1 
2 1 111 2 74 1 17 2 338 1 253 2 79 1 317 2 129 1 
102 1 14 1 208 1 
106 1 280 1 178 1 154 1 287 1 333 1 17 1 337 1 217 1 318 1 
17 1 161 1 
106 1 243 1 111 1 141 1 287 1 14 1 333 1 337 1 217 1 338 1 253 1 317 1 318 1 129 1 
2 1 17 1 338 3 111 3 253 3 317 3 141 1 129 3 
280 1 325 1 338 1 111 1 253 1 317 1 129 1 
74 1 280 1 2 1 338 1 111 1 253 1 79 1 317 1 129 1 
280 1 243 1 2 1 324 1 111 2 184 1 46 1 141 1 162 1 192 1 74 1 338 2 253 2 317 2 129 2 
280 1 17 1 95 1 154 1 338 1 111 2 253 2 221 1 317 2 141 1 129 1 
192 1 280 1 243 1 324 1 338 1 111 1 184 1 253 1 317 1 292 1 141 1 162 1 129 1 
102 1 2 1 111 2 141 1 74 1 14 1 338 2 253 2 317 2 129 2 
106 1 280 1 154 1 287 1 333 1 17 1 337 1 217 1 318 1 
106 1 64 1 111 1 86 1 112 1 300 1 287 1 333 1 15 1 335 1 17 1 337 1 216 1 253 1 148 1 
225 2 132 1 227 1 187 1 230 1 263 1 304 1 91 1 14 2 305 1 198 1 316 1 146 1 103 1 102 2 61 2 108 1 208 2 330 1 213 1 168 4 339 2 343 1 175 1 
192 1 280 1 338 1 111 1 134 1 253 1 317 1 129 1 
280 1 243 1 2 1 154 1 111 5 302 1 141 2 74 1 165 1 95 1 17 1 338 4 253 5 221 1 317 5 129 4 
280 1 325 1 338 2 134 1 111 2 253 2 317 2 129 2 
288 1 171 1 220 1 160 1 
118 1 171 1 220 1 
171 1 220 1 
171 1 220 1 
288 1 160 1 
288 1 160 1 
288 1 160 1 
35 1 171 1 220 1 
35 1 171 1 220 1 
35 1 171 1 220 1 
18 1 171 1 220 1 
18 1 171 1 220 1 
18 1 171 1 220 1 
82 1 1 1 2 1 229 1 5 1 140 1 234 1 97 1 98 1 144 1 317 1 105 1 280 1 153 1 325 1 111 1 250 1 31 1 211 1 32 1 252 1 338 1 171 1 340 1 253 1 220 1 129 1 
252 1 338 1 111 1 253 1 317 1 129 1 
24 1 76 2 47 2 99 1 222 1 
125 1 47 1 222 1 
125 1 47 1 99 1 
76 1 24 1 126 1 47 3 99 1 222 2 
76 1 24 1 47 2 99 1 222 1 81 1 
130 1 150 1 83 1 44 1 183 1 48 1 249 3 285 1 166 1 218 1 97 4 98 4 
97 1 236 1 98 1 249 1 
293 1 130 1 83 1 2 1 133 1 84 1 132 1 181 1 183 1 190 1 232 1 271 1 97 3 144 1 98 3 317 1 240 1 150 1 107 1 280 1 108 1 325 1 111 1 248 1 249 2 285 1 250 1 34 2 338 1 218 1 340 1 38 1 253 1 129 1 
150 1 130 1 293 1 107 1 83 1 108 1 132 1 84 1 133 1 181 1 248 1 190 1 249 1 285 1 232 1 34 2 271 1 97 2 272 1 38 1 98 2 240 1 
258 1 
332 1 64 1 161 1 
64 1 66 1 
64 1 300 1 
332 2 335 1 64 3 300 1 116 1 22 1 
335 1 64 1 300 1 
64 1 77 1 
45 1 227 2 185 1 10 2 146 4 278 2 204 1 151 1 152 1 62 1 61 6 108 2 284 1 330 5 117 2 215 1 168 11 339 5 127 1 
151 1 61 1 45 2 168 1 10 1 89 1 
225 2 45 1 227 1 185 1 10 1 191 1 305 1 316 1 146 2 278 1 103 1 151 1 152 1 108 1 61 3 284 1 330 3 117 1 30 1 215 1 168 5 339 2 175 1 
45 1 227 2 185 1 10 2 146 4 278 2 151 1 152 1 62 1 61 6 108 2 284 1 330 5 117 2 215 1 168 11 339 5 127 1 
45 1 227 2 185 1 10 2 146 4 278 2 151 1 152 3 62 1 61 6 108 2 284 1 330 7 117 2 215 1 168 11 339 5 127 1 
297 2 7 1 186 2 300 1 231 2 193 1 196 1 56 1 148 1 106 1 110 1 64 1 65 1 112 1 113 1 71 1 287 1 75 1 333 1 334 1 337 1 37 2 173 1 
297 1 186 1 138 1 231 1 47 2 49 1 314 1 99 1 148 1 106 1 27 1 65 1 283 1 112 1 68 1 71 1 287 1 75 1 334 1 289 1 337 1 125 1 37 1 126 1 222 1 345 1 
297 1 186 1 138 1 231 1 47 2 49 1 199 1 94 1 314 1 239 1 99 1 148 1 106 1 25 1 27 1 327 1 65 2 283 1 112 1 68 1 71 2 287 1 75 1 334 1 289 1 337 1 125 1 37 1 126 1 222 1 
297 1 226 1 186 1 138 1 231 1 47 2 49 1 199 1 94 1 56 1 239 1 99 1 148 1 106 1 27 1 65 3 327 2 112 1 68 1 71 3 287 1 75 1 334 1 289 1 337 1 125 1 37 1 126 1 222 1 345 1 
297 1 226 1 186 1 138 1 231 1 47 2 49 1 199 1 94 1 239 1 99 1 148 1 106 1 65 2 327 2 112 1 71 2 287 1 289 1 337 1 37 1 125 1 126 1 222 1 345 1 
256 1 
293 1 107 1 106 1 44 1 179 1 245 1 248 1 115 1 73 1 287 1 333 1 166 2 34 1 337 1 97 2 98 2 
280 1 23 1 324 1 111 1 9 1 162 1 192 1 93 1 95 1 97 1 311 1 200 1 253 1 98 1 317 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
280 1 23 1 324 1 44 1 111 1 139 1 9 1 162 1 192 1 166 1 93 1 95 1 97 2 311 1 200 1 253 1 98 2 317 1 
293 1 107 1 280 1 23 1 324 1 179 1 111 1 248 1 9 1 162 1 192 1 93 1 95 1 97 1 311 1 200 1 253 1 98 1 317 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
192 1 280 1 23 1 93 1 95 1 324 1 97 1 111 1 200 1 311 1 253 1 9 1 98 1 317 1 162 1 
293 1 107 1 280 1 23 1 324 1 179 1 111 1 248 1 9 1 162 1 192 1 93 1 95 1 97 1 311 1 200 1 253 1 98 1 317 1 
8 1 90 2 13 1 264 1 276 1 203 1 103 2 106 7 279 1 25 1 109 1 282 1 110 1 112 4 111 1 287 6 213 1 129 1 225 4 300 3 230 2 141 1 305 2 310 1 316 2 317 1 147 1 148 3 61 1 64 4 333 2 335 1 337 7 168 2 169 1 338 1 339 1 172 1 173 1 253 1 343 2 80 1 175 2 
225 2 2 1 132 1 227 1 181 1 230 1 187 1 189 1 14 1 305 1 316 1 146 1 317 1 102 1 103 1 108 1 61 1 111 1 208 1 330 1 74 1 338 1 168 3 339 2 253 1 343 1 175 1 41 1 129 1 
225 2 227 1 185 1 230 1 10 1 14 1 305 1 17 2 316 1 146 2 278 1 102 1 103 1 108 1 61 3 208 1 330 2 117 1 161 1 213 1 215 1 168 6 339 3 343 1 127 1 175 1 
225 4 132 2 227 1 8 1 181 2 230 2 187 1 189 1 88 1 14 11 305 2 17 1 316 2 238 1 202 1 146 1 103 2 102 4 279 1 152 1 61 8 108 2 326 1 208 11 330 2 286 1 168 14 339 6 78 3 343 1 223 1 175 2 344 3 
225 2 259 1 178 1 8 1 230 1 189 1 141 1 194 1 305 1 17 1 316 1 317 1 318 1 102 1 103 1 106 1 279 1 243 1 61 1 111 1 159 1 287 1 333 1 337 1 217 1 338 1 168 2 339 1 253 1 343 1 175 1 129 1 
0 1 225 4 132 1 227 1 181 1 8 1 187 1 230 2 189 1 141 1 261 1 14 3 305 2 143 1 316 2 146 1 277 1 317 1 318 1 102 3 103 2 106 1 61 3 108 1 243 1 111 1 208 3 329 1 330 1 287 1 333 1 337 1 217 1 168 7 338 1 339 4 290 1 253 1 343 2 175 2 129 1 
102 1 103 1 225 2 152 1 108 1 61 2 132 1 208 1 230 1 330 1 304 1 14 1 305 1 213 1 168 2 316 1 343 1 175 1 
102 1 103 1 225 2 227 1 208 1 230 1 187 1 330 1 91 1 14 1 305 1 213 1 168 2 339 2 316 1 146 1 343 1 175 1 
225 2 132 1 227 1 181 1 230 1 187 1 14 2 305 1 316 1 146 1 103 1 102 2 152 1 61 2 108 1 208 2 330 2 213 1 168 4 339 2 343 1 175 1 
102 1 103 1 225 2 152 1 108 1 61 2 132 1 208 1 230 1 330 1 304 1 14 1 305 1 168 2 316 1 343 1 147 1 175 1 
102 1 103 1 225 2 227 1 208 1 230 1 187 1 330 1 91 1 14 1 305 1 168 2 339 2 316 1 146 1 343 1 147 1 175 1 
225 2 132 1 227 1 181 1 230 1 187 1 14 2 305 1 316 1 146 1 147 1 103 1 102 2 152 1 61 2 108 1 208 2 330 2 168 4 339 2 343 1 175 1 
102 2 103 1 225 2 152 1 108 1 61 2 132 1 227 1 181 1 187 1 208 2 230 1 330 2 14 2 305 1 168 4 339 2 316 1 146 1 343 1 175 1 
0 1 225 2 8 1 230 1 305 1 17 1 316 1 318 1 103 1 106 1 279 1 280 1 61 1 154 1 287 1 333 1 337 1 217 1 168 2 339 1 343 1 175 1 
225 2 86 1 8 1 300 1 230 1 303 1 305 1 15 1 17 1 316 1 148 1 103 1 106 1 279 1 61 1 64 1 112 1 111 1 287 1 333 1 335 1 337 1 216 1 168 2 339 1 253 1 343 1 175 1 
225 2 132 1 227 1 181 1 230 1 187 1 189 1 14 2 305 1 316 1 146 1 103 1 102 2 152 1 61 2 108 1 208 2 330 2 168 4 339 2 343 1 175 1 
0 1 225 2 132 1 227 1 181 1 230 1 187 1 14 1 305 1 316 1 146 1 318 1 102 1 103 1 106 1 25 1 108 1 61 1 208 1 330 1 287 1 337 1 217 1 168 3 339 2 290 1 343 1 175 1 
225 2 2 1 132 1 227 1 181 1 187 1 230 1 189 1 14 1 305 1 316 1 317 1 103 1 102 1 152 1 108 1 61 2 26 1 111 1 208 1 330 1 74 1 338 1 168 3 339 1 253 1 343 1 175 1 129 1 
103 1 242 1 50 1 30 1 305 1 225 2 28 1 19 1 316 1 175 1 
103 1 242 1 50 1 30 1 305 1 225 2 28 1 19 1 316 1 175 1 
103 1 242 1 50 1 30 1 305 1 225 2 28 1 19 1 316 1 175 1 
103 1 242 1 50 1 30 1 305 1 225 2 28 1 19 1 316 1 175 1 
103 1 242 1 50 1 30 1 305 1 225 2 28 1 19 1 316 1 175 1 
163 1 105 1 31 1 1 1 268 1 246 1 171 1 275 1 220 1 140 1 
118 1 51 1 
105 1 31 1 1 1 57 1 171 1 313 1 220 1 140 1 72 1 
82 1 2 1 5 1 229 1 234 1 144 1 317 1 280 1 153 1 325 1 111 1 250 1 211 1 32 1 252 1 338 1 340 1 253 1 129 1 
82 1 2 1 5 1 229 1 234 1 144 1 317 1 280 1 153 1 325 1 111 1 250 1 211 1 32 1 252 1 338 1 340 1 253 1 129 1 
82 1 2 1 5 1 229 1 234 1 144 1 317 1 280 1 153 1 325 1 111 1 250 1 211 1 32 1 252 1 338 1 340 1 253 1 129 1 
266 1 323 1 35 1 
266 1 323 1 35 1 
18 1 20 1 
323 1 18 1 20 1 
131 1 174 1 
82 1 1 1 296 1 131 1 84 1 229 1 140 1 233 1 51 1 17 1 97 1 98 1 317 2 105 1 153 1 111 2 249 1 31 1 118 1 167 1 338 2 171 1 253 2 220 1 254 1 174 1 129 2 
266 1 35 1 
323 1 18 1 20 1 
294 1 225 2 8 1 300 1 230 1 189 1 90 2 264 1 197 1 305 1 316 1 317 2 148 1 103 1 106 2 279 1 60 1 109 1 61 1 64 1 155 1 112 1 111 2 287 2 337 2 124 1 168 2 339 1 253 2 343 1 175 1 
106 1 64 1 110 1 112 1 300 1 231 1 287 1 193 1 333 1 337 1 173 1 148 1 40 1 59 1 
106 1 112 1 68 1 138 1 69 1 47 2 231 1 287 1 289 1 337 1 125 1 55 1 126 1 99 1 222 1 148 1 345 1 59 1 
106 2 25 1 112 1 68 1 138 1 69 1 47 2 231 1 287 2 289 1 337 2 125 1 55 1 126 1 99 1 222 1 148 1 345 1 59 1 
106 1 112 1 68 1 138 1 47 2 231 1 287 1 289 1 337 1 125 1 308 1 55 1 126 1 99 1 222 1 148 1 345 1 
177 1 
293 1 107 1 298 1 133 1 179 1 135 1 248 1 183 1 34 1 218 1 
108 1 34 2 132 1 271 1 181 1 38 1 232 1 
166 1 44 1 218 1 97 1 183 1 98 1 
293 1 106 1 107 1 44 1 179 1 245 1 248 1 115 1 73 1 287 1 333 1 166 2 269 1 34 1 337 1 97 1 98 1 
298 1 133 1 34 1 218 1 135 1 183 1 161 1 
293 1 133 1 44 1 179 1 137 1 183 1 188 1 270 1 97 1 98 1 100 1 107 1 248 1 166 1 34 1 218 2 38 1 
293 1 107 1 106 1 205 1 320 1 64 2 179 1 66 1 112 2 248 1 300 1 116 1 287 1 333 1 335 1 337 1 148 1 
293 1 133 6 132 2 179 1 227 2 181 2 187 2 232 5 142 1 52 1 92 1 271 5 201 1 238 1 107 1 321 1 108 2 248 1 34 4 38 3 78 1 344 1 
293 1 2 1 133 2 179 1 227 1 97 1 21 1 98 1 144 1 317 1 241 2 278 1 107 1 280 1 108 1 63 1 325 1 111 1 248 1 284 1 117 1 250 1 34 1 338 1 340 1 253 1 129 1 
0 1 257 1 225 2 2 2 8 1 230 1 305 1 17 1 316 1 317 2 318 1 103 1 106 1 111 2 287 1 333 1 337 1 217 1 168 1 338 2 340 1 339 1 253 2 343 1 129 2 175 1 
293 1 107 1 133 1 179 1 248 1 183 1 190 1 73 1 34 1 271 1 218 1 38 1 
105 1 1 1 131 1 246 1 307 1 
105 1 1 1 70 1 
105 1 1 1 70 1 
105 1 1 1 70 1 
105 1 1 1 101 1 
105 1 1 1 101 1 
105 1 1 1 101 1 
105 1 1 1 
171 1 220 1 
103 1 225 2 152 2 61 3 108 1 227 1 284 1 330 4 117 1 30 1 305 1 168 6 339 3 316 1 146 2 175 1 278 1 
103 1 225 2 152 1 108 1 61 2 132 1 330 1 30 1 305 1 168 2 316 1 175 1 
103 1 225 2 152 1 108 1 61 2 132 1 227 1 181 1 187 1 330 2 30 1 305 1 168 4 339 2 316 1 146 1 175 1 
103 3 225 6 152 1 61 1 330 2 117 1 30 1 305 3 212 1 53 1 306 1 168 3 339 2 316 3 146 1 175 3 278 1 
225 8 132 2 6 1 227 4 181 2 185 1 10 1 187 2 305 4 53 1 309 1 316 4 237 1 146 5 238 1 278 2 103 4 104 1 152 4 61 14 108 4 284 1 330 9 117 2 30 1 212 1 215 1 168 28 339 14 78 3 127 1 175 4 344 3 
225 2 227 2 185 1 10 1 305 1 316 1 238 1 146 4 278 2 103 1 152 1 321 1 108 2 61 6 284 1 330 5 117 2 30 1 215 1 168 12 339 6 78 1 127 1 344 1 175 1 
225 4 132 1 227 2 181 1 185 1 10 1 88 1 305 2 309 1 316 2 146 4 238 1 278 2 103 2 321 1 152 2 61 8 108 3 284 1 330 6 117 2 30 1 215 1 168 15 339 7 78 2 127 1 175 2 344 1 
225 6 132 2 227 4 181 2 185 1 10 1 187 2 142 1 305 3 52 1 92 1 53 1 309 1 201 1 316 3 238 1 146 5 278 2 103 3 152 2 321 1 61 11 108 4 284 1 330 7 117 2 30 1 215 1 168 23 339 12 78 1 127 1 344 1 175 3 
103 1 225 2 321 1 108 2 61 6 132 2 227 1 181 2 187 1 330 1 142 1 30 1 305 1 92 1 52 1 168 10 339 4 201 1 78 1 316 1 146 1 238 1 175 1 344 1 
225 2 227 2 185 1 10 1 305 1 316 1 238 1 146 4 278 2 103 1 152 1 321 1 108 2 61 6 284 1 330 5 117 2 30 1 215 1 168 12 339 6 78 1 127 1 344 1 175 1 
225 2 132 2 227 2 181 2 187 2 142 1 305 1 52 1 92 1 201 1 316 1 238 1 146 1 103 1 152 1 321 1 61 6 108 2 330 2 30 1 168 12 339 6 78 1 344 1 175 1 
225 6 132 2 227 1 181 2 187 1 142 1 305 3 92 1 52 1 53 1 309 1 201 1 316 3 238 1 146 1 103 3 321 1 61 6 108 2 330 1 30 1 168 11 339 5 78 1 175 3 344 1 
225 8 132 3 227 2 181 3 187 2 142 1 305 4 92 1 52 1 53 2 201 1 316 4 238 1 146 3 103 4 152 3 321 1 61 9 108 3 330 6 30 1 212 1 168 16 339 7 78 1 175 4 344 1 
152 3 108 1 61 3 227 1 185 2 330 6 117 3 215 1 168 7 339 4 146 3 127 1 278 3 
225 6 132 2 227 1 181 2 187 1 142 1 305 3 92 1 52 1 53 1 201 1 316 3 238 1 146 1 103 3 321 1 61 6 108 2 330 1 30 1 212 1 168 11 339 5 78 1 175 3 344 1 
225 4 227 2 185 1 10 1 305 2 53 1 316 2 146 4 278 2 103 2 152 3 61 7 108 2 284 1 330 7 117 2 215 1 168 14 339 7 127 1 175 2 
61 3 108 1 215 1 227 1 168 6 339 3 185 1 10 1 330 2 127 1 146 2 278 1 117 1 161 1 
103 1 225 2 152 1 108 1 61 2 132 1 227 1 181 1 187 1 330 2 305 1 168 4 339 2 309 1 316 1 146 1 175 1 
152 1 61 3 108 1 132 1 227 1 181 1 187 1 88 1 330 2 168 7 339 4 78 2 146 1 238 1 344 1 
225 2 132 2 227 4 181 2 185 1 10 1 187 2 88 1 305 1 53 1 316 1 146 5 278 2 103 1 152 2 108 4 61 11 326 1 284 1 330 7 117 2 286 1 215 1 168 22 339 11 78 2 127 1 344 2 175 1 
168 1 339 1 78 1 
61 1 168 1 344 1 
103 1 225 2 152 1 108 1 61 3 132 1 227 1 181 1 187 1 330 3 305 1 168 6 309 1 339 3 143 1 316 1 146 2 175 1 
225 2 132 2 227 2 181 2 187 2 142 1 305 1 52 1 92 1 201 1 316 1 238 1 146 1 103 1 152 1 321 1 61 6 108 2 330 2 30 1 168 12 339 6 78 1 344 1 175 1 
152 1 108 1 61 3 227 1 330 2 117 1 168 6 339 3 127 1 146 1 278 1 
103 1 225 2 152 1 61 1 185 1 330 2 117 1 305 1 53 1 215 1 306 1 168 3 339 2 316 1 146 1 278 1 175 1 
280 1 214 1 17 1 95 1 154 1 111 1 253 1 221 1 317 1 
42 1 280 1 154 1 156 1 111 1 87 1 114 1 16 1 214 1 17 1 95 1 253 1 221 1 317 1 
106 4 25 1 110 1 64 1 112 1 300 1 287 4 333 1 337 4 274 1 173 1 148 1 255 1 
106 2 64 1 112 2 300 1 331 1 287 2 13 1 335 1 337 2 169 1 310 1 172 1 273 1 148 1 
287 1 106 1 333 1 289 1 337 1 125 1 112 1 47 1 99 1 148 1 
287 2 106 2 197 1 25 1 109 1 64 1 337 2 112 1 300 1 148 1 345 1 
106 5 25 1 109 1 110 1 64 3 112 2 300 2 331 1 287 4 333 1 337 5 274 1 173 1 80 1 203 1 148 2 
106 5 25 1 109 1 110 1 64 3 112 2 300 2 331 1 287 4 333 1 337 5 274 1 312 1 173 1 203 1 148 2 
287 1 106 1 333 1 64 1 110 1 337 1 112 1 300 1 173 1 148 1 161 1 
106 1 280 1 154 1 111 1 141 1 287 1 333 1 17 1 337 1 338 1 253 1 317 1 129 1 318 1 
106 1 280 1 154 1 111 1 141 1 331 1 287 1 17 1 337 1 338 1 253 1 317 1 129 1 318 1 
106 1 64 3 136 1 112 1 111 1 300 2 141 1 331 1 287 1 335 2 15 1 337 1 216 1 77 1 338 1 253 1 317 1 148 1 129 1 
106 3 64 4 228 1 66 1 157 1 136 1 112 1 183 1 300 1 331 1 12 1 287 3 332 1 333 1 335 1 166 1 337 3 218 1 77 1 97 2 98 2 148 1 255 1 
106 3 64 4 66 1 157 1 136 1 112 1 183 1 299 1 300 1 331 1 287 3 332 1 333 1 335 1 166 1 337 3 218 1 77 1 97 2 98 2 148 1 255 1 
287 1 106 1 337 1 282 1 112 1 148 1 
300 2 90 1 310 1 276 1 203 1 148 2 106 6 25 1 109 1 64 3 282 1 112 3 210 1 116 1 287 5 333 2 335 1 337 6 172 1 80 1 
294 1 0 1 225 4 227 1 185 1 230 2 189 1 141 1 261 1 305 2 17 1 316 2 146 1 317 1 278 1 318 1 103 2 106 1 25 1 61 2 108 1 111 1 330 1 117 1 287 1 215 1 337 1 217 1 168 4 338 1 339 2 253 1 290 1 127 1 343 2 175 2 129 1 
293 2 298 1 133 1 44 1 179 2 135 1 183 1 299 1 269 1 97 3 98 3 107 2 106 1 322 1 64 2 66 1 67 1 157 1 248 2 249 1 287 1 251 1 332 1 333 1 166 2 34 1 337 1 218 1 
106 2 320 1 25 1 282 1 64 2 112 2 300 1 116 1 332 1 287 2 335 1 337 2 148 1 
106 1 64 1 112 1 111 2 300 1 141 1 287 1 333 1 335 1 15 1 17 1 337 1 216 1 338 1 253 2 317 1 148 1 129 1 
106 1 64 1 112 2 300 1 210 1 331 1 116 1 287 1 335 1 337 1 310 1 172 1 148 1 
121 1 17 1 54 1 180 1 319 1 
121 1 123 1 3 1 97 1 29 1 98 1 249 1 
60 1 155 1 180 1 111 1 121 1 124 1 253 1 317 1 319 1 
192 1 280 1 121 1 123 1 324 1 54 1 180 1 184 1 29 1 162 1 319 1 
75 1 334 1 199 1 94 1 65 1 283 1 71 1 239 1 
327 2 65 4 182 1 71 4 75 1 119 1 120 1 334 1 199 2 94 2 235 1 342 1 239 3 128 1 
75 1 334 1 199 1 94 1 96 1 85 1 327 1 65 2 283 1 158 1 71 2 239 1 
283 1 65 3 247 1 182 2 71 3 75 1 119 1 334 1 199 1 94 1 239 1 128 2 
224 2 206 1 170 1 239 2 
75 1 334 1 65 1 283 1 328 1 71 1 
75 1 334 1 199 1 94 1 327 1 65 2 283 1 71 2 239 1 262 1 
281 1 
75 1 334 1 199 1 94 1 65 1 283 1 71 1 239 1 
199 1 94 1 239 1 161 1 
75 1 334 1 199 1 94 1 65 1 71 1 239 1 
297 1 37 1 71 1 
283 1 65 3 182 2 71 3 75 1 334 1 119 1 199 1 94 1 39 1 239 1 128 1 
75 1 334 1 122 1 199 1 94 1 327 1 65 2 71 2 239 1 
283 1 65 1 71 1 47 1 75 1 334 1 235 1 125 1 315 1 239 1 222 1 
75 1 334 1 199 1 65 1 283 1 71 1 239 1 
75 1 334 1 199 2 94 1 65 1 283 1 71 1 
260 1 283 1 65 2 71 2 75 2 195 1 334 2 199 1 341 1 239 1 
283 1 65 3 327 2 71 3 262 1 75 1 334 1 164 1 199 1 94 1 235 1 342 1 239 2 
283 1 65 2 327 1 71 2 47 2 75 1 334 1 199 1 94 1 125 1 126 1 239 1 99 1 222 1 149 1 
283 1 65 4 327 2 71 4 75 2 334 2 122 1 199 1 94 1 235 1 342 1 58 1 239 2 
327 1 283 1 65 3 182 1 71 3 262 1 75 1 334 1 199 1 94 1 239 1 
120 1 235 1 342 1 239 1 
199 1 239 1 

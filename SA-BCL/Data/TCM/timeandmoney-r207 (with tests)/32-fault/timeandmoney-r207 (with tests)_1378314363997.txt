#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (90,145,229,232,266) (177,226) (177,226) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (90,145,229,232,266) (177,226) (177,226) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (90,145,229,232,266) (177,226) (177,226) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (90,145,229,232,266) (177,226) (177,226) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 41 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (90,145,229,232,266) (169,336) (169,336) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 41 20 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 41 20 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (152,160) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (152,160) 58 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (152,160) 58 171 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 212 54 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 158 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,191,233,276) (1,191,233,276) (85,179,256) (85,179,256) (85,179,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,191,233,276) (1,191,233,276) (85,179,256) (85,179,256) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (1,191,233,276) (1,191,233,276) (85,179,256) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,191,233,276) (1,191,233,276) (85,179,256) (85,179,256) (85,179,256) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 73 335 264 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 315 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 315 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 291 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 252 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 252 59 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 122 184 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (1,191,233,276) (1,191,233,276) 297 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 1 247 1 60 1 229 1 191 1 63 1 193 1 65 1 233 1 18 1 276 1 236 1 172 1 177 1 
193 1 63 1 191 1 65 1 18 1 233 1 276 1 236 1 172 1 247 1 226 1 60 1 229 1 177 1 
193 1 63 1 191 1 65 1 18 1 233 1 276 1 236 1 172 1 247 1 226 1 60 1 229 1 177 1 
193 1 63 1 191 1 65 1 18 1 233 1 276 1 236 1 172 1 247 1 226 1 60 1 229 1 177 1 
1 1 102 1 60 1 41 1 191 1 63 2 164 1 65 1 233 1 276 2 128 1 304 1 236 1 136 1 
193 1 63 1 191 1 336 1 65 1 169 1 233 1 276 1 304 1 247 1 60 1 268 1 229 1 
1 1 247 1 60 1 121 1 191 2 63 3 164 2 42 1 233 2 276 3 128 1 219 1 308 1 
1 5 75 1 53 1 247 1 102 1 36 1 60 1 41 1 164 3 191 2 63 7 42 2 65 1 233 2 276 7 20 1 128 3 304 1 236 1 219 1 136 1 
1 5 75 1 53 1 247 1 102 1 36 1 60 1 41 1 164 3 191 2 63 7 42 2 65 1 233 2 276 7 20 1 128 3 304 1 236 1 219 1 136 1 
3 1 173 1 158 1 
3 1 277 1 107 2 
43 1 242 2 31 2 78 2 140 1 176 2 109 2 224 2 
0 1 4 1 180 1 181 1 11 1 316 1 140 1 12 1 270 1 324 1 271 1 196 2 148 2 66 1 19 1 197 1 200 1 21 1 153 1 203 1 109 3 111 1 205 1 242 2 31 2 337 1 78 3 161 1 339 2 342 1 123 2 43 1 174 1 305 2 50 1 131 1 176 2 224 2 225 1 
242 1 31 1 78 1 140 1 166 1 19 1 176 1 109 1 310 1 224 1 
26 1 3 1 29 1 78 1 296 1 186 1 144 1 124 1 19 1 173 1 278 1 109 1 224 1 157 1 
3 1 140 1 144 2 19 2 278 1 109 2 157 1 70 1 26 1 242 2 31 2 78 2 296 2 124 1 166 1 173 1 176 2 224 2 310 1 
144 1 212 1 296 1 222 1 
144 2 3 1 173 1 318 1 296 2 132 1 222 1 112 1 
144 1 296 1 112 1 
242 1 31 1 78 1 296 1 140 1 144 1 166 1 19 1 176 1 222 1 109 1 70 1 310 1 224 1 
3 1 
254 1 144 2 3 1 173 1 318 1 296 2 222 1 112 1 
3 1 6 2 100 1 318 1 296 5 249 1 144 5 165 1 258 1 260 1 275 2 262 1 173 1 49 2 306 1 222 2 334 1 112 2 71 1 
31 1 337 1 181 1 78 2 209 1 342 1 123 1 271 1 148 1 197 1 48 1 305 1 50 1 131 1 217 1 176 1 109 2 205 1 224 1 225 1 
43 1 158 1 
0 1 27 1 242 1 31 1 78 2 57 1 43 1 19 1 176 1 109 2 224 2 
55 1 209 1 83 1 
0 1 98 1 337 1 181 1 78 1 342 1 123 1 271 1 43 1 148 1 19 1 197 1 305 1 50 1 131 1 109 1 205 1 225 1 
242 1 43 1 31 3 48 1 78 3 176 3 109 3 224 3 
166 1 31 1 19 1 78 1 176 1 109 1 224 1 
27 1 242 1 31 1 78 1 57 1 19 1 176 1 109 1 224 1 
4 1 11 1 181 1 56 1 57 1 316 1 140 1 12 1 270 1 324 1 271 1 144 1 196 1 148 1 197 1 19 1 200 1 278 1 331 1 203 1 109 4 205 1 157 1 26 1 242 2 31 3 337 1 78 4 161 1 296 1 339 2 342 1 123 1 124 1 43 1 48 1 174 1 305 1 50 1 131 1 217 1 176 3 224 3 225 1 
0 1 31 1 290 1 78 2 186 1 43 1 19 1 48 1 176 1 109 2 224 2 
26 1 242 1 3 1 31 3 78 3 57 1 56 1 296 1 144 1 124 1 19 1 48 2 129 1 278 1 217 1 176 3 109 3 224 3 157 1 
242 1 31 2 55 1 78 2 57 1 209 1 48 1 176 2 109 2 224 2 
0 1 337 1 181 1 78 1 342 1 123 1 271 1 43 1 148 1 19 1 197 1 305 1 131 1 50 1 109 1 205 1 225 1 
0 1 288 1 181 1 78 1 342 1 123 1 43 1 148 1 106 1 19 1 197 1 305 1 131 1 50 1 109 1 205 1 225 1 
4 1 180 2 55 2 316 2 12 1 319 1 270 1 188 1 230 1 196 4 151 1 203 1 293 1 161 1 339 2 250 1 209 2 83 2 86 1 126 1 174 1 135 1 
31 1 78 1 320 1 19 1 176 1 109 1 224 1 157 1 
242 1 31 4 290 1 78 5 57 1 186 1 253 1 43 1 48 2 217 1 134 1 176 4 109 5 224 5 
166 1 31 1 19 1 78 1 176 1 109 1 224 1 
16 1 160 1 
16 1 160 1 
152 1 283 1 
152 1 283 1 
152 1 283 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 
16 1 160 1 58 1 185 1 
144 1 16 1 160 1 171 1 58 1 296 1 185 1 
65 1 304 1 236 1 
65 1 304 1 268 1 
65 3 168 1 289 1 302 1 236 2 268 1 
65 2 214 1 289 1 302 1 236 1 268 1 
65 2 289 1 302 2 236 1 268 1 
52 1 138 1 3 2 99 2 6 1 318 1 144 5 230 1 275 1 277 1 201 2 68 1 107 3 238 1 112 1 113 1 116 1 76 1 245 2 296 5 86 1 258 2 126 1 87 1 262 1 130 1 49 1 173 1 222 4 306 3 263 1 135 1 
144 2 212 1 54 1 296 2 101 1 119 1 222 2 
52 1 138 1 3 3 6 1 99 2 144 3 230 1 275 1 277 2 201 1 107 4 334 1 113 1 116 1 245 2 296 3 86 1 258 2 126 1 130 1 173 1 49 1 222 2 306 3 263 1 135 1 
52 1 138 1 3 4 99 4 6 1 144 4 230 2 275 1 277 3 201 2 107 7 334 1 113 1 244 1 116 1 245 4 296 4 213 1 86 2 258 4 126 2 130 2 173 1 49 1 221 1 306 5 222 3 263 2 135 2 
89 1 158 1 
74 1 50 1 
127 1 
50 1 342 1 
91 1 
50 1 342 1 225 1 
146 1 50 1 
96 1 207 1 115 3 180 4 316 3 344 1 15 1 194 1 125 1 126 1 196 7 88 2 23 1 223 2 92 1 239 1 135 1 
96 1 207 1 115 3 180 4 316 3 344 1 15 1 194 1 125 1 126 1 196 7 88 2 23 1 223 2 92 1 239 1 135 1 
96 1 207 1 115 3 180 4 316 3 344 1 15 1 194 1 105 1 125 1 126 1 196 7 88 2 23 1 223 2 92 1 239 1 135 1 
125 1 196 1 199 1 180 1 223 1 239 1 344 2 
96 1 180 5 316 4 12 2 270 2 15 1 194 1 196 9 279 1 23 1 203 2 239 1 156 1 115 4 207 1 339 4 162 1 344 1 126 1 88 3 174 2 223 2 92 1 135 1 
1 1 179 1 246 1 247 1 267 1 60 1 343 1 82 1 123 1 191 1 63 1 256 1 85 1 233 1 148 1 276 2 305 1 110 1 93 1 
1 2 2 1 246 1 247 1 267 1 82 1 123 1 191 1 63 2 256 1 85 1 17 1 233 1 148 1 276 3 305 1 69 1 110 1 93 1 
2 1 1 2 246 1 267 1 247 1 82 1 123 1 63 1 256 1 17 1 148 1 276 2 305 1 110 1 
208 1 181 1 295 1 246 2 247 2 267 2 248 1 342 1 13 1 123 1 192 1 191 1 63 1 272 1 233 1 148 1 276 1 305 1 131 1 50 1 69 1 110 2 205 1 
1 1 179 1 246 1 247 1 267 1 60 1 82 1 123 1 191 1 63 1 256 1 85 1 17 1 233 1 148 1 276 2 305 1 110 1 93 1 
38 1 
95 2 3 1 6 1 8 1 9 1 181 2 183 1 103 2 192 1 195 2 275 1 277 2 107 2 24 1 112 6 205 1 28 2 208 1 292 1 118 1 296 4 120 1 123 2 49 1 305 2 50 1 131 1 306 2 51 1 138 1 314 2 318 3 144 4 148 2 333 1 73 1 338 1 79 1 340 2 342 1 255 2 258 2 262 1 175 2 
338 1 118 1 318 1 296 2 183 1 340 1 144 2 254 1 24 1 51 1 112 2 
95 1 144 1 338 1 314 1 118 1 183 1 296 1 24 1 51 1 
95 1 338 1 314 1 118 1 318 1 296 2 183 1 340 1 254 1 144 2 24 1 175 1 51 1 112 2 
95 1 3 1 6 1 178 1 183 1 103 1 195 1 19 1 275 1 277 1 24 1 109 1 282 1 112 5 28 1 31 1 118 1 296 3 120 1 49 1 306 1 51 1 224 1 310 1 314 1 315 1 318 2 140 1 141 1 144 3 70 1 335 1 73 1 242 1 338 1 78 1 340 3 254 1 255 1 166 1 258 1 262 1 173 1 175 3 176 1 
95 2 3 2 6 1 314 2 318 2 183 1 103 2 144 3 195 2 275 1 277 2 107 2 24 1 333 1 112 4 28 2 73 1 338 1 118 1 296 3 340 2 120 1 255 2 258 1 262 1 173 1 49 1 175 2 306 1 51 1 
95 2 3 1 6 1 314 2 315 1 318 2 183 1 103 2 144 3 195 2 275 1 277 2 24 1 112 4 282 1 28 2 335 1 73 1 338 1 118 1 296 3 340 2 120 1 255 2 258 1 262 1 173 1 49 1 175 2 306 1 51 1 
95 2 3 1 6 1 314 2 315 1 318 2 183 1 103 2 144 3 195 2 275 1 277 2 24 1 112 4 282 1 28 2 335 1 73 1 338 1 118 1 296 3 340 2 120 1 255 2 258 1 262 1 173 1 49 1 175 2 306 1 51 1 
6 1 183 1 227 1 144 1 195 1 198 1 275 1 24 1 335 1 73 1 338 1 34 1 118 1 296 1 255 1 258 1 262 1 49 1 306 1 51 1 264 1 
95 1 338 1 314 1 315 1 118 1 296 1 183 1 141 1 340 1 144 1 24 1 175 1 51 1 112 1 
95 1 338 1 314 1 315 1 118 1 296 1 183 1 141 1 340 1 144 1 24 1 175 1 51 1 112 1 
73 1 6 1 338 1 34 1 118 1 296 1 183 1 255 1 144 1 258 1 195 1 198 1 275 1 262 1 49 1 24 1 306 1 51 1 
96 1 4 1 180 3 55 1 316 3 12 1 270 1 15 1 194 1 196 6 23 1 203 1 158 1 115 2 161 1 339 2 209 1 250 1 83 1 43 2 126 1 88 2 174 1 223 1 92 1 135 1 
0 1 311 1 4 1 180 6 55 3 316 5 142 1 12 2 270 2 324 1 104 2 230 2 196 11 19 1 235 2 22 1 203 2 115 1 207 1 161 2 339 4 209 8 83 8 346 1 298 1 43 1 86 1 126 2 301 1 174 2 263 2 135 1 
0 1 4 1 98 1 180 1 181 1 12 1 270 1 271 1 196 2 197 1 19 1 22 1 203 1 109 2 205 1 31 1 294 1 123 1 43 1 48 1 305 1 217 1 131 1 50 1 307 1 224 1 225 1 55 1 316 1 324 1 148 1 153 1 237 1 337 1 78 2 161 1 339 2 342 1 174 1 176 1 
4 1 181 1 316 1 12 1 270 1 14 1 324 1 196 1 148 1 22 1 203 1 109 1 31 1 78 1 161 1 339 2 123 1 48 1 174 1 305 1 217 1 176 1 224 1 
4 1 181 1 180 1 316 1 12 1 270 1 322 1 324 1 192 1 64 1 148 2 196 2 66 1 153 1 203 1 205 3 240 1 30 1 32 1 208 1 161 1 339 2 342 2 123 2 305 2 174 1 131 2 50 2 218 1 225 1 
4 1 180 1 55 1 57 1 316 2 12 1 270 1 230 1 196 3 274 1 22 1 203 1 109 1 242 1 31 1 78 1 161 1 339 2 209 1 83 1 86 1 126 1 174 1 176 1 263 1 224 1 135 1 
4 1 115 1 207 1 180 2 55 1 293 1 161 1 339 2 209 1 250 1 12 1 270 1 83 1 230 1 196 2 126 1 174 1 203 1 
4 1 55 1 161 1 316 2 339 2 209 1 250 1 12 1 270 1 319 1 83 1 86 1 196 2 174 1 203 1 135 1 
4 1 180 2 55 2 316 2 12 1 270 1 230 1 196 4 203 1 207 1 115 1 161 1 339 2 250 1 209 2 83 2 86 1 126 1 174 1 263 1 135 1 
4 1 115 1 207 1 30 1 180 2 55 1 293 1 161 1 339 2 209 1 12 1 270 1 83 1 230 1 196 2 126 1 174 1 203 1 
4 1 30 1 55 1 161 1 316 2 339 2 209 1 12 1 270 1 319 1 83 1 86 1 196 2 174 1 203 1 135 1 
4 1 30 1 180 2 55 2 316 2 161 1 339 2 209 2 12 1 270 1 83 2 230 1 86 1 196 4 126 1 174 1 203 1 263 1 135 1 
4 1 115 1 207 1 180 2 55 2 316 2 161 1 339 2 209 2 12 1 270 1 83 2 230 1 86 1 126 1 196 4 174 1 203 1 263 1 135 1 
0 1 4 1 180 1 11 1 181 1 316 1 12 1 270 1 271 1 324 1 196 2 148 1 19 1 197 1 153 1 203 1 109 1 205 1 337 1 78 1 161 1 339 2 342 1 123 1 43 1 305 1 174 1 131 1 50 1 225 1 
0 1 4 1 181 1 316 1 12 1 187 1 270 1 324 1 196 1 148 1 106 1 19 1 197 1 203 1 109 1 205 1 288 1 78 1 161 1 339 2 342 1 123 1 43 1 305 1 174 1 131 1 50 1 225 1 
4 1 180 2 55 2 316 2 12 1 270 1 230 1 196 4 22 1 203 1 207 1 115 1 161 1 339 2 209 2 83 2 86 1 126 1 174 1 263 1 135 1 
4 1 180 2 11 1 55 2 316 2 12 1 270 1 271 1 230 1 196 4 148 1 197 1 154 1 203 1 109 1 205 1 337 1 78 1 161 1 339 2 209 2 343 1 342 1 83 2 123 1 86 1 126 1 305 1 174 1 131 1 50 1 263 1 135 1 225 1 
4 1 180 2 55 1 57 1 316 1 12 1 270 1 230 1 196 3 22 1 203 1 109 1 242 1 115 1 207 1 31 1 78 1 161 1 339 2 209 1 83 1 86 1 257 1 126 1 174 1 176 1 263 1 135 1 224 1 
265 1 96 1 5 1 180 15 316 14 12 4 270 4 15 1 194 1 104 2 230 2 196 29 235 2 330 1 280 2 23 1 203 4 156 2 241 1 207 3 115 5 243 1 117 1 339 8 80 1 251 1 162 1 84 1 211 3 86 2 259 1 126 3 88 2 303 1 174 4 220 1 223 1 92 1 263 2 135 3 
265 1 96 1 5 1 180 15 316 14 12 4 270 4 15 1 194 1 104 2 230 2 196 29 235 2 330 1 280 2 23 1 203 4 156 2 241 1 207 3 115 5 243 1 117 1 339 8 80 1 251 1 162 1 84 1 211 3 86 2 259 1 126 3 88 2 303 1 174 4 220 1 223 1 92 1 263 2 135 3 
265 1 180 11 316 11 12 3 270 3 104 2 230 2 196 22 235 2 330 1 280 2 203 3 156 2 241 1 207 2 115 3 243 1 117 1 339 6 80 1 251 1 162 1 84 1 211 3 86 2 259 1 126 2 88 1 303 1 174 3 220 1 263 2 135 2 
265 1 96 1 5 1 180 17 316 16 12 4 270 4 15 1 194 1 104 2 230 3 196 33 235 2 330 1 280 2 23 1 203 4 156 2 241 1 287 1 207 3 115 5 117 1 339 8 341 1 80 1 251 1 162 1 84 1 211 3 86 3 259 1 126 4 88 2 303 1 174 4 220 1 223 1 92 1 263 3 135 4 
265 2 180 11 316 9 12 3 270 3 104 2 230 2 196 20 235 2 330 2 280 2 203 3 156 2 241 1 207 1 115 2 243 1 117 1 339 6 80 1 251 1 162 1 84 1 211 3 86 1 259 1 126 2 88 1 303 1 174 3 220 1 263 2 135 1 
4 1 180 1 316 1 12 1 270 1 324 1 231 1 148 2 196 2 66 2 22 1 153 1 203 1 155 1 109 2 205 1 240 1 35 1 78 2 161 1 339 2 342 1 163 1 123 2 170 1 305 2 174 1 131 1 50 1 133 1 224 2 
40 1 343 1 82 1 123 2 17 1 167 1 273 1 148 2 305 2 110 1 93 1 
82 1 123 1 17 1 273 1 148 1 216 1 305 1 110 1 93 1 
33 1 181 1 208 1 248 1 342 1 40 1 123 1 192 1 148 1 305 1 131 1 50 1 110 1 205 1 
167 1 17 1 273 1 148 1 305 1 40 1 110 1 82 1 93 1 123 1 
67 1 
3 1 258 1 260 1 173 1 249 1 306 1 158 1 
3 2 6 1 318 1 103 1 144 1 275 1 277 1 107 1 112 1 28 1 296 1 120 1 258 1 262 1 49 1 173 1 306 1 
6 1 286 1 74 1 181 1 291 1 342 1 143 1 123 1 148 1 275 1 262 1 49 1 305 1 131 1 50 2 205 2 225 1 
138 1 137 1 3 5 99 5 6 2 9 1 318 1 144 1 104 1 230 2 329 1 275 2 277 3 235 1 107 6 280 1 112 1 241 1 117 1 245 5 296 1 210 1 84 1 258 5 86 2 126 2 262 2 303 1 49 2 173 2 220 1 306 8 347 2 263 2 135 2 
137 1 6 1 140 1 15 1 144 1 19 1 275 1 281 1 23 1 109 1 282 1 70 1 242 1 31 1 78 1 296 1 166 1 258 2 126 2 262 1 49 1 176 1 306 2 347 2 92 1 135 1 310 1 224 1 
3 1 6 1 249 1 258 1 260 1 275 1 262 1 49 1 173 1 306 1 
137 1 3 5 99 5 139 1 245 5 230 2 258 5 86 2 126 2 277 5 107 10 306 5 263 2 135 2 
144 1 3 1 173 1 296 1 318 1 112 1 
138 2 6 2 8 1 181 2 9 2 318 2 144 3 192 1 148 4 234 1 327 1 275 2 25 1 334 1 205 1 112 4 292 1 208 1 296 3 342 1 123 4 258 2 262 1 49 2 305 4 131 1 50 1 306 2 309 2 
4 1 181 1 11 1 316 1 140 1 12 1 270 1 324 1 271 1 196 1 148 1 197 1 200 1 203 1 109 3 205 1 242 2 31 2 337 1 78 3 161 1 339 2 342 1 123 1 43 1 174 1 305 1 131 1 50 1 176 2 224 2 225 1 
138 1 3 4 99 2 6 1 9 1 245 2 258 2 275 1 277 2 262 1 49 1 173 2 107 4 223 1 306 1 
323 1 114 1 321 1 
323 1 114 1 147 1 326 1 44 1 
323 1 114 1 321 1 
323 1 114 1 321 1 
323 1 114 1 39 1 
323 1 114 1 39 1 
323 1 114 1 39 1 
323 1 114 1 
16 1 160 1 
96 1 180 14 316 10 12 2 270 2 15 2 194 1 104 1 230 2 196 24 235 1 281 1 280 1 23 2 203 2 156 1 241 1 207 4 115 8 117 1 339 4 162 1 84 1 86 1 126 5 88 4 303 1 174 2 220 1 223 1 92 2 263 2 135 4 
96 1 180 10 316 7 12 3 270 3 15 1 194 1 104 1 230 2 196 17 149 1 235 1 280 1 23 1 203 3 156 1 241 1 115 3 207 1 117 1 339 6 162 1 84 1 86 1 126 3 88 2 303 1 174 3 220 1 223 1 92 1 263 2 135 2 
96 1 180 9 316 10 12 3 270 3 15 1 194 1 104 1 230 2 196 19 149 1 235 1 280 1 23 1 203 3 156 1 241 1 207 1 115 4 117 1 339 6 162 1 84 1 86 2 126 3 303 1 88 3 174 3 220 1 223 1 92 1 263 2 135 3 
96 1 180 10 316 7 12 3 270 3 15 1 194 1 104 1 230 2 196 17 149 1 235 1 280 1 23 1 203 3 156 1 241 1 207 2 115 4 117 1 339 6 162 1 84 1 86 1 126 3 88 2 303 1 174 3 220 1 223 1 92 1 263 2 135 2 
96 1 180 14 316 10 12 2 270 2 15 2 194 1 104 1 230 2 196 24 235 1 281 1 280 1 23 2 203 2 156 1 241 1 207 4 115 8 117 1 339 4 162 1 84 1 86 1 126 5 88 4 303 1 174 2 220 1 223 1 92 2 263 2 135 4 
180 6 316 6 12 1 270 1 104 1 230 2 196 12 235 1 280 1 203 1 241 1 207 1 115 1 117 1 339 2 162 1 84 1 86 2 126 2 303 1 174 1 220 1 263 2 135 2 
96 1 180 10 316 8 12 4 270 4 15 1 194 1 104 1 230 2 196 18 149 1 235 1 280 1 23 1 203 4 156 2 241 1 207 2 115 5 117 1 339 8 162 1 84 1 86 1 126 3 303 1 88 3 174 4 220 1 223 1 92 1 263 2 135 2 
5 1 180 7 316 4 12 3 270 3 104 1 230 2 196 11 235 1 280 1 203 3 156 1 241 1 115 2 207 2 117 1 339 6 162 1 84 1 86 1 126 2 303 1 174 3 220 1 263 2 135 1 
96 1 115 6 207 3 180 3 316 4 15 3 194 2 196 7 126 1 88 3 23 3 92 1 135 1 
96 1 5 1 180 10 316 8 12 4 270 4 15 1 194 1 104 1 230 2 196 18 235 1 280 1 23 1 203 4 156 2 241 1 207 1 115 4 117 1 339 8 162 1 84 1 86 1 126 3 303 1 88 3 174 4 220 1 223 1 92 1 263 2 135 2 
96 1 207 1 115 3 180 4 316 4 339 4 12 2 270 2 15 1 194 1 126 1 196 8 88 2 174 2 23 1 223 1 203 2 92 1 156 1 135 1 
194 1 96 1 115 2 196 6 126 1 180 3 88 2 316 3 23 1 223 1 92 1 135 1 15 1 158 1 
180 2 316 2 339 2 12 1 270 1 230 1 86 1 126 1 196 4 149 1 174 1 203 1 263 1 135 1 
104 1 196 2 180 1 235 1 316 1 280 1 
311 1 96 1 180 13 316 12 12 1 270 1 15 2 194 1 230 2 104 2 196 25 235 2 281 1 23 2 203 1 156 1 207 4 115 8 339 2 346 1 86 2 126 5 301 1 88 4 174 1 223 1 92 2 263 2 135 5 
104 1 196 1 316 1 
196 1 180 1 235 1 
207 1 115 1 139 1 180 3 316 3 339 2 12 1 270 1 230 1 86 1 196 6 126 1 149 1 174 1 203 1 263 1 135 1 
180 6 316 6 12 1 270 1 104 1 230 2 196 12 235 1 280 1 203 1 241 1 207 1 115 1 117 1 339 2 162 1 84 1 86 2 126 2 303 1 174 1 220 1 263 2 135 2 
115 2 207 1 180 3 316 3 15 1 126 1 196 6 88 1 23 1 92 1 135 1 
96 1 207 1 115 2 180 1 316 2 339 2 12 1 270 1 81 1 15 1 194 1 196 3 88 1 174 1 23 1 203 1 156 1 
115 6 207 3 180 6 316 6 15 2 196 12 126 2 88 3 281 1 23 2 92 1 135 2 
207 1 115 1 180 2 339 2 12 1 162 1 270 1 230 1 126 1 196 2 174 1 203 1 
115 1 207 1 180 2 316 2 339 2 12 1 162 1 270 1 230 1 86 1 126 1 196 4 174 1 203 1 263 1 135 1 
5 1 115 2 207 1 180 1 316 2 339 6 12 3 162 1 270 3 81 1 15 1 196 3 88 1 174 3 23 1 203 3 156 1 
96 1 5 1 180 8 316 9 12 4 270 4 189 1 15 3 194 1 104 1 196 17 149 1 235 1 281 1 280 1 23 3 203 4 156 1 207 4 115 8 339 8 162 1 81 1 126 2 88 4 174 4 92 1 135 2 
252 1 
72 1 7 1 47 1 59 1 252 1 108 1 
192 1 148 1 208 1 181 1 305 1 131 1 50 1 342 1 205 1 158 1 123 1 
0 1 181 1 148 1 197 1 19 1 109 2 205 1 31 1 337 1 78 2 342 1 123 1 43 1 48 1 305 1 131 1 50 1 176 1 224 1 225 1 
0 1 190 1 148 1 197 1 19 2 278 1 109 2 205 1 157 1 31 1 337 1 78 2 342 2 123 1 43 1 48 1 305 1 131 1 50 2 176 2 309 1 224 2 225 2 
0 1 190 1 148 1 197 1 19 2 278 1 109 2 205 1 157 1 31 1 288 1 78 2 342 2 123 1 43 1 48 1 305 1 131 1 50 2 176 2 309 1 224 2 225 2 
313 1 3 1 140 1 144 2 190 1 148 1 19 1 109 1 70 1 112 1 205 1 159 1 242 1 31 1 74 1 78 1 296 2 342 1 123 1 166 1 124 1 89 1 305 1 173 1 131 1 50 2 176 1 224 1 310 1 309 1 225 1 
3 1 140 1 144 2 190 1 148 1 19 1 150 1 109 1 112 1 205 1 70 1 242 1 31 1 74 1 78 1 296 2 342 1 123 1 166 1 124 1 89 1 305 1 173 1 131 1 50 2 176 1 224 1 310 1 309 1 225 1 
204 1 
181 1 342 1 143 1 123 1 64 1 148 1 305 1 50 1 131 1 218 1 205 2 94 1 225 1 
0 1 96 1 4 2 11 1 180 7 12 2 270 2 15 2 271 1 194 1 196 13 19 1 197 1 22 1 281 1 202 1 23 2 203 2 109 2 205 1 207 1 115 4 31 1 209 1 123 1 43 3 126 3 48 1 305 1 131 1 50 1 223 1 224 1 135 3 225 1 55 1 316 6 231 1 148 1 154 1 337 1 78 2 161 2 339 4 343 1 342 1 83 1 88 3 174 2 176 1 92 2 
3 2 6 2 181 1 15 2 190 1 19 1 275 2 281 1 23 2 109 1 205 1 112 2 31 1 296 3 123 1 124 1 126 2 305 1 49 2 131 1 50 3 222 1 306 4 224 1 135 2 310 1 225 1 137 1 140 1 318 1 228 1 62 1 144 3 146 1 148 1 327 1 150 1 328 1 70 1 242 1 74 1 78 1 249 1 342 1 166 1 258 5 260 1 89 1 262 2 173 2 176 1 347 3 92 1 
204 1 
32 1 181 1 208 1 343 1 342 2 123 2 322 1 192 1 64 1 148 2 305 2 50 2 131 2 218 1 205 3 225 1 
32 1 269 1 342 1 123 1 322 1 64 1 148 1 305 1 50 1 131 1 218 1 205 2 225 1 
181 1 268 1 61 1 123 1 65 1 148 1 305 1 304 1 131 1 205 1 
35 1 343 1 342 1 123 2 17 1 148 2 305 2 50 1 131 1 155 1 205 1 
181 1 317 1 192 1 322 1 325 1 64 1 148 3 205 4 32 1 35 1 208 1 342 3 343 1 123 2 305 3 131 3 50 4 218 1 225 1 
181 1 192 1 322 1 325 1 64 1 148 3 205 4 32 1 35 1 208 1 342 3 343 1 123 2 45 1 305 3 131 3 50 4 218 1 225 1 
0 1 181 1 148 1 197 1 19 1 109 2 205 1 31 1 288 1 78 2 342 1 123 1 43 1 48 1 305 1 131 1 50 1 176 1 224 1 225 1 
342 1 143 1 123 1 64 1 148 1 305 1 50 1 131 1 218 1 309 1 205 2 94 1 225 1 
299 1 300 1 170 1 122 1 
299 1 285 1 184 1 
299 2 300 1 170 1 122 1 
144 1 312 1 299 2 285 1 300 1 170 1 296 1 184 1 222 1 122 1 
164 1 308 1 121 1 158 1 
164 1 63 1 191 1 233 1 276 1 308 1 121 1 
63 1 247 1 267 1 
60 1 229 2 121 1 164 1 191 1 63 3 145 1 232 1 233 1 276 3 90 1 308 1 
164 1 63 2 191 1 1 1 233 1 276 2 308 1 121 1 136 1 
102 1 60 1 191 1 63 1 164 1 65 1 233 1 276 1 128 1 236 1 304 1 
164 1 63 1 191 1 233 1 276 1 60 1 308 1 
63 1 191 1 233 1 276 1 60 1 308 2 121 1 
206 1 97 1 77 1 60 1 164 1 191 2 63 2 233 2 276 2 308 1 
1 2 75 1 53 1 60 1 121 1 191 1 63 3 164 2 42 1 233 1 276 3 128 1 308 1 
63 1 191 1 1 1 65 2 168 1 233 1 276 2 304 1 236 1 297 1 60 1 268 1 
1 2 60 1 121 1 191 2 63 4 164 2 42 1 233 2 276 4 128 1 332 1 308 1 136 1 
164 1 63 1 191 1 233 1 276 1 60 1 308 1 121 1 
1 2 229 1 121 2 63 4 191 1 164 3 42 1 145 1 233 1 215 1 276 4 128 1 90 1 308 2 
1 1 37 1 36 1 60 1 121 1 164 1 191 1 63 2 233 1 46 1 276 2 308 1 
266 1 60 1 229 2 121 1 164 1 191 1 63 3 145 1 233 1 276 3 90 2 308 1 
164 2 10 1 182 1 345 2 
63 1 191 1 233 1 261 1 276 1 60 1 
164 1 63 2 191 1 1 1 75 1 233 1 276 2 60 1 308 1 121 1 
284 1 
164 1 63 1 191 1 233 1 276 1 60 1 308 1 121 1 
164 1 63 3 191 1 1 1 75 1 233 1 276 3 60 1 308 1 121 1 229 1 
164 1 42 1 215 1 128 1 
164 1 308 1 

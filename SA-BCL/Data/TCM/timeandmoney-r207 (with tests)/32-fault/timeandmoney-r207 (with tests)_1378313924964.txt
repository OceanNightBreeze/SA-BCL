#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 115 55 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 115 44 145 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 115 44 276 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 115 356 138 120 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 115 44 318 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 115 55 160 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 325 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 325 233 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 17 (220,290,293) (100,122,248) (100,122,248) (100,122,248) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 115 280 347 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 115 229 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 115 229 88 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 115 44 276 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 115 44 147 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 115 44 147 266 228 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 115 44 147 266 228 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 115 44 147 266 328 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 115 229 88 340 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 115 229 88 340 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 115 44 147 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 7 53 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (4,286) 54 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (4,286) 54 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (4,286) 49 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (4,286) 49 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 17 (220,290,293) (220,290,293) (220,290,293) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 110 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 115 44 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 196 28 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 115 44 210 81 254 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 123 98 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (294,351) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 115 44 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 115 280 347 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 110 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 115 (104,272) 102 243 (0,124) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (33,187,198,305) (33,187,198,305) 316 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
238 1 204 1 17 2 271 2 317 1 157 1 207 3 113 1 136 1 187 9 140 1 346 2 119 2 96 9 9 1 247 1 33 6 306 1 305 2 333 4 198 2 334 1 84 1 267 1 310 5 127 2 155 1 339 1 
238 1 204 1 17 2 271 2 317 1 157 1 207 3 113 1 136 1 187 9 140 1 346 2 119 2 96 9 9 1 247 1 33 6 306 1 305 2 333 4 198 2 334 1 84 1 267 1 310 5 127 2 155 1 339 1 
238 1 204 1 17 2 271 2 317 1 157 1 207 4 113 1 136 1 187 10 140 1 346 2 119 2 96 10 9 1 247 1 33 7 306 1 305 2 333 5 198 2 334 1 84 1 267 1 310 6 127 2 155 1 339 1 
204 1 17 2 271 2 317 1 157 1 207 2 113 1 136 1 187 7 140 1 346 2 119 2 96 7 9 1 247 1 33 4 306 1 305 2 333 3 198 2 334 1 84 1 267 1 310 4 127 1 155 1 339 1 
96 4 238 1 17 1 33 3 207 1 305 1 333 2 198 1 334 1 187 4 84 1 267 1 310 3 140 1 127 2 155 1 346 1 119 1 
96 2 257 1 17 1 271 1 317 1 157 1 2 1 305 1 198 1 343 1 308 1 187 2 310 1 267 1 140 1 155 1 346 1 
96 3 9 1 271 1 33 1 207 1 305 2 333 1 198 2 187 3 267 1 310 2 140 1 155 1 
181 1 238 1 17 1 271 1 207 3 113 1 136 1 187 9 140 1 346 1 119 1 96 9 9 1 33 7 305 2 333 4 198 2 334 1 84 1 267 1 310 5 127 2 155 1 255 1 
181 1 238 1 17 1 271 1 207 3 113 1 136 1 187 9 140 1 346 1 119 1 96 9 9 1 33 7 305 2 333 4 198 2 334 1 84 1 267 1 310 5 127 2 155 1 255 1 
148 1 110 1 129 1 
148 1 285 1 144 2 
256 2 41 1 107 2 332 2 95 2 211 2 342 2 14 1 
256 3 65 1 18 1 133 1 272 1 315 1 211 2 342 2 22 2 91 1 274 1 299 2 323 2 163 1 194 2 261 1 95 2 97 1 171 1 32 2 121 1 330 1 350 1 265 1 332 3 12 1 335 1 355 1 178 1 41 1 252 1 107 2 86 1 288 1 14 1 131 1 15 1 
256 1 227 1 332 1 342 1 211 1 107 1 311 1 95 1 60 1 14 1 
256 2 185 1 342 1 211 1 260 1 95 1 148 1 227 2 78 1 35 1 332 2 101 1 336 1 153 1 107 2 179 1 311 1 129 1 60 1 14 1 313 1 
256 2 211 2 342 2 95 2 148 1 227 2 78 1 35 2 332 2 101 2 336 1 153 1 107 2 179 1 311 1 129 1 60 1 14 1 313 1 
35 1 158 1 115 1 55 1 101 1 
145 1 35 1 158 1 44 1 115 1 101 1 
35 1 115 1 101 1 
256 1 227 1 158 1 35 1 332 1 342 1 211 1 101 1 107 1 311 1 60 1 95 1 14 1 313 1 
148 1 
276 1 35 1 158 1 44 1 115 1 101 1 
23 1 138 1 356 1 120 1 35 3 158 2 193 1 115 1 166 1 319 1 101 3 
256 3 41 1 34 1 107 3 332 3 342 1 95 3 211 3 
256 1 227 1 107 1 332 1 60 1 95 1 211 1 
256 1 227 1 332 1 342 1 211 1 106 1 93 1 107 1 95 1 
256 4 65 1 18 1 133 1 272 1 315 1 342 2 211 3 22 1 91 1 274 1 299 1 323 2 163 1 93 1 194 1 261 1 167 1 95 3 171 1 227 1 32 1 34 1 330 1 51 1 78 1 175 1 35 1 265 1 332 4 101 1 12 1 336 1 355 1 153 1 178 1 41 1 107 3 86 1 179 1 288 1 14 1 131 1 15 1 
256 2 41 1 34 1 107 2 332 2 185 1 95 1 211 1 161 1 
256 3 302 1 148 1 227 1 34 2 51 1 78 1 35 1 175 1 332 3 342 1 211 3 101 1 336 1 153 1 93 1 107 3 179 1 95 3 
256 1 93 1 107 1 332 1 95 1 211 1 342 1 125 1 
256 1 32 1 133 1 18 1 272 1 330 1 265 1 332 1 22 1 274 1 355 1 178 1 41 1 194 1 131 1 
256 1 32 1 133 1 18 1 330 1 89 1 265 1 332 1 22 1 274 1 178 1 41 1 42 1 194 1 131 1 
237 1 171 1 65 1 315 1 173 1 99 1 240 1 91 1 12 1 299 2 323 2 201 1 108 1 288 2 27 1 223 1 15 1 195 1 
256 1 227 1 78 1 332 1 211 1 107 1 43 1 95 1 
110 1 41 1 
256 2 332 2 342 1 211 1 106 1 41 2 93 1 107 2 95 1 
240 1 223 1 
256 1 32 1 133 1 18 1 272 1 330 1 265 1 332 1 22 1 274 1 355 1 178 1 41 1 202 1 194 1 131 1 
256 2 32 1 18 1 133 1 272 1 34 1 330 1 51 1 265 1 332 2 211 1 125 1 22 1 274 1 355 1 178 1 107 1 194 1 95 1 131 1 
256 5 34 2 51 1 332 5 185 1 211 4 342 1 161 1 282 1 324 1 41 1 93 1 107 5 95 4 
256 1 227 1 107 1 332 1 60 1 95 1 211 1 
132 1 289 1 327 1 
132 1 289 1 327 1 
132 1 289 1 327 1 
132 1 289 1 90 1 
132 1 289 1 90 1 
132 1 289 1 90 1 
132 1 289 1 
132 1 289 1 
218 1 263 1 
218 1 263 1 
218 1 263 1 
132 1 289 1 287 1 
132 2 289 2 329 1 4 1 218 1 263 1 
289 2 132 2 148 1 19 1 183 2 134 1 292 1 273 2 35 2 79 1 36 1 184 2 249 1 352 2 177 2 101 2 230 1 284 3 286 1 
256 2 289 1 132 1 183 1 273 1 35 1 341 1 332 2 184 1 352 1 211 2 101 1 230 1 213 1 70 1 284 1 41 1 287 1 191 1 107 2 47 1 48 1 95 2 244 1 
17 1 346 1 119 1 
17 1 346 1 2 1 
349 1 82 1 346 3 2 1 314 1 119 2 
349 1 346 2 2 1 314 1 119 1 250 1 
349 1 346 2 2 1 119 1 314 2 
35 1 158 1 44 1 115 1 318 1 101 1 
35 2 158 2 115 1 55 1 160 1 101 2 197 1 298 1 
111 1 239 1 35 2 158 1 319 1 101 2 23 1 83 1 325 1 193 1 166 1 312 1 
111 1 239 1 35 1 319 1 101 1 23 1 83 1 325 1 193 1 233 1 166 1 312 1 
178 1 265 1 
178 3 18 1 25 1 268 2 265 1 253 1 
110 1 178 1 268 1 
196 1 178 1 
192 1 
178 1 18 1 265 1 
178 1 321 1 
237 3 182 1 226 2 206 3 173 3 208 2 98 1 123 2 38 1 21 1 162 1 200 1 92 1 335 9 299 17 288 8 27 4 29 1 
237 3 226 2 182 3 206 3 173 3 208 2 98 1 123 2 38 1 21 1 162 1 200 1 92 1 335 9 299 17 288 8 27 6 29 1 
237 3 182 1 206 3 208 2 21 1 162 1 299 17 92 1 27 4 29 1 226 2 173 3 98 1 80 1 123 2 38 1 335 9 200 1 288 8 
169 1 295 1 38 2 200 1 92 1 335 2 299 4 215 1 26 1 141 1 288 2 358 1 30 1 
64 1 237 3 182 2 65 1 206 2 315 1 208 1 162 1 91 1 72 1 323 2 299 13 92 1 26 1 27 5 29 1 226 1 173 2 98 1 123 1 38 1 12 1 335 7 200 1 288 6 
17 1 290 1 133 1 271 1 2 1 22 1 68 1 187 1 274 1 5 1 277 1 140 1 74 1 346 2 194 1 119 1 77 1 96 1 32 1 122 1 305 1 100 1 248 1 198 1 82 1 236 1 
17 1 290 1 133 1 271 1 2 1 22 1 68 1 187 3 274 1 5 1 164 1 277 1 346 2 194 1 119 1 77 1 96 3 32 1 33 2 122 1 305 1 248 1 198 1 307 1 308 1 82 1 251 1 310 1 267 1 155 1 236 1 
290 1 17 1 133 1 271 1 2 1 22 1 187 2 274 1 5 1 164 1 277 1 346 2 194 1 119 1 77 1 96 2 32 1 33 2 122 1 307 1 308 1 82 1 310 1 267 1 155 1 236 1 
96 1 77 2 32 1 133 1 271 2 265 1 305 1 198 1 199 1 22 1 212 1 187 1 274 1 275 1 57 1 5 2 251 1 178 1 190 1 277 2 142 1 194 1 131 1 
17 1 290 1 133 1 271 1 2 1 22 1 68 1 187 1 274 1 5 1 277 1 140 1 346 2 194 1 119 1 77 1 96 1 32 1 122 1 305 1 100 1 248 1 198 1 307 1 82 1 236 1 
176 1 
111 1 32 1 280 1 239 1 112 1 35 1 115 1 101 1 22 1 23 1 193 1 194 1 166 1 347 1 131 1 
256 1 146 1 148 1 225 1 227 1 78 1 35 2 115 1 332 1 229 1 185 1 101 2 116 1 46 2 336 1 153 1 73 1 107 1 179 1 260 1 129 1 217 1 
16 1 256 1 146 1 148 1 225 1 227 1 78 1 35 2 332 1 185 1 101 2 116 1 46 3 336 1 153 1 73 1 107 1 179 1 260 1 129 1 217 1 
256 1 146 1 148 1 225 1 227 1 88 1 78 1 35 2 115 1 332 1 229 1 185 1 101 2 116 1 46 2 336 1 153 1 73 1 107 1 179 1 260 1 129 1 217 1 
276 1 35 1 44 1 115 1 101 1 
256 1 111 1 112 1 115 1 135 1 185 1 116 1 46 2 189 1 23 1 73 1 193 1 260 1 143 1 166 1 217 1 144 1 224 1 146 1 147 1 225 1 148 1 227 1 172 1 78 1 35 2 332 1 101 2 336 1 285 1 153 1 107 1 44 1 179 1 109 1 129 1 
256 1 270 1 111 1 112 1 115 1 135 1 185 1 116 1 46 2 189 1 23 1 73 1 193 1 260 1 143 1 166 1 217 1 224 1 146 1 147 1 225 1 148 1 227 1 172 1 78 1 35 2 228 1 332 1 101 2 266 1 336 1 285 1 153 1 107 1 44 1 179 1 109 1 129 1 
256 1 270 1 111 1 112 1 115 1 135 1 185 1 116 1 46 2 189 1 23 1 73 1 193 1 260 1 143 1 166 1 217 1 224 1 146 1 147 1 225 1 148 1 227 1 172 1 78 1 35 2 228 1 332 1 101 2 266 1 336 1 285 1 153 1 107 1 44 1 179 1 109 1 129 1 
256 1 111 1 112 1 115 1 135 1 185 1 116 1 46 2 69 1 23 1 73 1 193 1 260 1 143 1 166 1 217 1 144 1 224 1 31 1 146 1 328 1 147 1 225 1 148 1 227 1 78 1 35 2 332 1 101 2 266 1 336 1 153 1 107 1 13 1 44 1 179 1 235 1 129 1 
256 1 146 1 148 1 225 1 227 1 340 1 88 1 78 1 35 2 115 1 332 1 229 1 185 1 101 2 116 1 46 2 336 1 153 1 73 1 107 1 179 1 260 1 129 1 217 1 
256 1 146 1 148 1 225 1 227 1 340 1 88 1 78 1 35 2 115 1 332 1 229 1 185 1 101 2 116 1 46 2 336 1 153 1 73 1 107 1 179 1 260 1 129 1 217 1 
256 1 111 1 112 1 115 1 135 1 185 1 116 1 46 2 69 1 23 1 73 1 193 1 260 1 143 1 166 1 217 1 144 1 224 1 31 1 146 1 147 1 225 1 148 1 227 1 78 1 35 2 332 1 101 2 336 1 153 1 107 1 44 1 179 1 235 1 129 1 
182 1 171 1 65 1 315 1 206 1 150 1 240 1 91 1 12 1 299 2 323 2 335 2 108 1 27 1 219 1 223 1 15 1 
237 1 171 1 65 1 315 1 173 1 99 1 240 1 91 1 12 1 299 2 323 2 108 1 288 2 27 1 223 1 15 1 195 1 
237 1 182 1 171 1 65 1 315 1 206 1 173 1 240 2 91 1 12 1 299 4 323 2 335 2 108 1 288 2 27 2 61 1 219 1 195 1 223 2 15 1 
182 1 171 1 65 1 315 1 206 1 150 1 240 1 91 1 12 1 299 2 323 2 335 2 232 1 27 1 219 1 223 1 15 1 
237 1 171 1 65 1 315 1 173 1 99 1 240 1 91 1 12 1 299 2 323 2 232 1 288 2 27 1 223 1 15 1 195 1 
182 1 171 1 65 1 315 1 206 1 240 1 91 1 12 1 299 2 323 2 335 2 232 1 27 1 61 1 219 1 223 1 15 1 
182 1 171 1 65 1 315 1 206 1 240 1 91 1 12 1 323 2 335 2 299 2 27 1 61 1 219 1 223 1 15 1 
256 1 18 1 133 1 65 1 272 1 315 1 22 1 91 1 274 1 299 2 323 2 194 1 261 1 32 1 171 1 330 1 265 1 332 1 12 1 335 1 355 1 178 1 41 1 252 1 86 1 288 1 131 1 15 1 
256 1 18 1 133 1 65 1 315 1 89 1 22 1 91 1 274 1 299 2 323 2 194 1 261 1 32 1 171 1 330 1 265 1 332 1 12 1 335 1 58 1 178 1 41 1 42 1 252 1 288 1 131 1 15 1 
182 1 171 1 65 1 315 1 206 1 240 1 320 1 91 1 12 1 299 2 323 2 335 2 27 1 61 1 219 1 223 1 15 1 
256 1 182 1 18 1 133 1 65 1 272 1 206 1 315 1 240 1 22 1 91 1 274 1 299 2 323 2 74 1 194 1 27 1 219 1 223 1 32 1 171 1 10 1 330 1 265 1 332 1 12 1 335 2 355 1 178 1 86 1 61 1 15 1 
256 1 182 1 65 1 315 1 206 1 211 1 342 1 320 1 240 1 91 1 323 2 299 2 93 1 27 1 95 1 219 1 223 1 171 1 332 1 12 1 335 2 107 1 180 1 61 1 15 1 
237 1 110 1 171 1 65 1 315 1 208 1 123 1 162 1 91 1 12 1 299 2 335 1 323 2 41 1 108 1 288 1 27 1 29 1 15 1 
65 2 315 2 295 1 320 1 240 6 91 2 323 4 299 7 215 2 300 1 141 1 261 1 223 6 169 2 171 1 353 1 12 2 335 3 41 1 252 1 288 4 234 1 15 2 
256 1 45 1 65 1 315 1 211 1 240 1 320 1 91 1 323 2 299 2 241 1 261 1 95 1 171 1 34 1 51 1 332 1 12 1 335 1 107 1 252 1 288 1 15 1 
237 1 182 2 133 1 0 1 272 1 315 2 320 1 240 2 91 2 274 1 323 4 194 1 95 1 10 1 51 1 330 1 332 2 12 2 335 3 107 1 288 2 61 1 15 2 256 2 65 2 18 1 291 1 206 1 211 1 22 1 299 5 214 1 345 1 261 1 27 3 219 1 223 2 32 1 171 2 34 1 265 1 355 1 178 1 86 1 131 1 
18 1 133 3 65 1 315 1 297 1 22 2 91 1 274 2 323 2 299 2 190 1 94 1 194 2 142 1 261 1 97 1 32 2 171 1 281 1 265 2 12 1 283 1 335 1 178 2 126 1 252 1 232 1 288 1 131 1 15 1 
256 1 237 1 65 1 315 1 206 1 211 1 342 1 240 1 320 1 91 1 323 2 299 3 93 1 27 1 95 1 219 1 223 1 195 1 171 1 173 1 332 1 12 1 335 1 40 1 107 1 288 2 61 1 15 1 
64 1 237 1 182 2 205 1 65 2 315 2 206 2 3 1 67 2 91 2 71 1 323 4 299 20 215 2 7 1 26 2 141 2 278 1 27 3 75 1 219 2 195 2 169 2 173 2 151 1 12 2 56 1 309 1 354 1 152 1 335 10 81 1 288 10 254 1 61 2 
64 1 237 1 182 1 205 1 65 1 315 1 206 2 3 2 67 2 91 1 71 1 323 2 299 18 215 2 7 1 26 2 141 2 278 1 27 2 75 1 219 2 195 1 169 2 173 1 53 1 12 1 56 1 354 1 152 2 335 10 81 1 288 8 254 1 61 2 
64 1 237 1 182 2 205 1 65 2 315 2 206 2 3 1 67 2 91 2 71 1 323 4 299 20 215 2 7 1 26 2 141 2 278 1 27 3 75 1 219 2 195 2 169 2 173 2 53 1 12 2 56 1 309 1 354 1 152 1 335 10 81 1 288 10 254 1 61 2 
64 1 237 1 182 2 205 1 65 2 315 2 206 2 3 1 67 2 91 2 71 1 323 4 299 20 215 2 7 1 26 2 141 2 278 1 27 3 75 1 219 2 195 2 169 2 173 2 53 1 12 2 56 1 309 1 354 1 152 1 335 10 81 1 288 10 254 1 61 2 
64 1 237 2 182 2 205 1 65 1 315 1 206 2 3 1 67 2 91 1 71 1 323 2 299 20 215 2 7 1 26 2 141 2 278 1 27 4 75 1 219 2 195 2 169 2 173 2 53 1 12 1 56 1 354 1 152 1 335 10 81 1 288 10 254 1 61 2 
289 1 132 1 148 1 19 1 183 1 134 1 292 1 273 1 35 1 79 1 184 1 249 1 352 1 177 1 101 1 230 1 284 2 286 1 
289 1 132 1 148 1 19 1 183 1 134 1 292 1 273 1 35 1 79 1 184 1 249 1 352 1 177 1 101 1 230 1 284 2 286 1 
289 1 132 1 148 1 19 1 183 1 134 1 292 1 273 1 35 1 79 1 184 1 249 1 352 1 177 1 101 1 230 1 284 2 286 1 
4 1 54 1 327 1 
4 1 54 1 327 1 
49 1 90 1 
49 1 4 1 90 1 
70 1 48 1 
256 2 132 1 289 1 183 1 273 1 158 1 341 1 184 1 186 1 211 2 213 1 70 1 191 1 47 1 48 1 95 2 244 1 35 1 79 1 332 2 177 1 352 1 101 1 284 1 41 1 287 1 107 2 
132 1 289 1 183 1 134 1 286 1 357 1 273 1 184 1 249 1 352 1 
287 1 191 1 
231 1 132 1 289 1 183 1 273 1 174 1 184 1 352 1 262 1 
54 1 327 1 
49 1 4 1 90 1 
256 2 133 1 65 1 315 1 320 1 22 2 91 1 188 1 274 1 322 1 323 2 299 2 139 1 194 2 216 1 261 1 221 1 97 2 32 2 171 1 331 1 265 1 332 2 12 1 335 1 178 1 107 2 126 1 252 1 288 1 15 1 
17 1 32 2 290 1 133 1 293 1 2 1 307 1 22 2 68 1 274 1 82 1 277 1 346 2 242 1 74 1 194 2 236 1 119 1 220 1 
17 1 32 1 290 1 133 1 293 1 2 1 307 1 22 1 68 1 274 1 82 1 277 1 346 2 194 1 236 1 119 1 62 1 
32 1 133 1 265 1 22 1 274 1 57 1 178 1 190 1 277 1 242 1 194 1 142 1 131 1 222 1 
17 1 32 1 290 1 133 1 293 1 2 1 307 1 22 1 68 1 274 1 82 1 277 1 346 2 242 1 194 1 236 1 119 1 220 1 
59 1 
148 1 110 1 111 1 294 1 351 1 135 1 129 1 
111 1 172 1 112 1 115 1 135 1 189 1 23 1 285 1 44 1 193 1 166 1 109 1 144 1 
196 1 32 1 133 1 18 1 112 1 265 1 22 1 23 1 274 1 344 1 178 1 25 1 193 1 194 1 166 1 28 1 131 1 
111 5 1 1 206 1 112 1 66 4 210 1 115 1 135 2 23 1 71 1 215 1 141 1 193 1 166 1 144 6 219 1 195 1 169 1 148 4 264 4 173 1 81 1 285 3 44 1 254 1 129 1 61 1 
270 1 111 1 1 1 112 1 208 1 35 1 98 1 135 1 123 1 101 1 23 1 193 1 166 1 
23 1 148 1 111 1 112 1 351 1 193 1 135 1 129 1 166 1 
148 1 111 1 206 1 264 1 173 1 66 1 135 2 285 1 76 1 61 1 219 1 144 2 195 1 
44 1 115 1 
111 1 32 1 280 1 239 1 112 1 115 1 22 1 23 1 39 1 193 1 194 1 166 1 347 1 131 1 
256 3 65 1 133 1 18 1 272 1 315 1 211 2 342 2 22 1 91 1 274 1 299 1 323 2 163 1 194 1 261 1 95 2 32 1 171 1 330 1 265 1 332 3 12 1 355 1 178 1 41 1 107 2 86 1 288 1 14 1 131 1 15 1 
148 2 246 1 111 1 239 1 112 1 66 1 135 1 23 1 285 1 193 1 166 1 129 1 144 2 
63 1 183 1 184 1 
63 1 183 1 184 1 
63 1 183 1 184 1 
183 1 105 1 184 1 
183 1 105 1 184 1 
183 1 105 1 184 1 
183 1 184 1 
132 1 289 1 
183 1 134 1 184 1 48 1 348 1 
237 1 182 1 65 1 315 1 208 1 98 1 123 1 162 1 91 1 12 1 323 2 26 1 27 2 29 1 
237 1 110 1 226 1 206 1 173 1 208 1 123 1 162 1 335 3 299 6 288 3 27 1 29 1 
237 1 182 1 65 1 315 1 206 1 173 1 91 1 12 1 117 1 323 2 335 2 299 4 288 2 27 2 61 1 219 1 195 1 
169 1 335 1 299 2 215 1 141 1 288 1 
169 1 237 2 182 1 226 1 206 2 173 2 208 1 98 1 295 1 123 1 162 1 299 13 335 6 215 1 26 1 234 1 288 7 27 3 29 1 
169 1 299 1 288 1 
299 1 335 1 215 1 
237 2 182 1 65 1 291 1 315 1 206 1 173 1 12 1 91 1 323 2 117 1 299 6 335 3 288 3 27 3 61 1 219 1 195 1 
64 1 169 1 237 1 182 1 65 1 206 2 315 1 173 2 91 1 12 1 71 1 81 1 335 6 323 2 299 12 215 1 141 1 278 1 288 6 27 2 254 1 75 1 61 2 219 2 195 2 
237 1 226 1 182 1 206 1 173 1 208 1 123 1 335 3 299 6 288 3 27 2 
299 1 26 1 295 1 288 1 
64 1 237 2 182 2 226 1 65 1 315 1 206 2 208 1 173 2 98 1 123 1 12 1 91 1 323 2 335 5 299 10 288 5 27 4 
64 1 182 1 65 1 315 1 206 1 91 1 12 1 323 2 335 2 299 2 27 1 219 1 
64 1 237 1 182 1 65 1 315 1 206 1 173 1 91 1 12 1 323 2 335 2 299 4 288 2 27 2 61 1 219 1 195 1 
64 1 237 1 65 1 315 1 208 1 123 1 91 1 12 1 323 2 335 1 299 2 288 1 27 1 
64 1 237 1 182 1 65 3 315 3 208 1 295 1 162 1 91 3 117 1 323 6 299 3 215 1 141 1 26 1 27 2 29 1 169 1 98 1 123 1 12 3 309 1 335 1 288 2 358 1 
64 1 237 1 182 1 65 1 315 1 206 2 91 1 71 1 299 11 323 2 215 1 26 1 141 1 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 1 335 7 81 1 288 4 254 1 61 2 
64 1 237 1 182 1 65 2 315 2 206 2 91 2 71 1 299 11 323 4 117 1 215 1 26 1 141 1 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 2 335 7 81 1 288 4 254 1 61 2 
64 1 237 1 182 1 65 2 315 2 206 2 91 2 71 1 117 1 299 13 323 4 215 1 141 1 26 1 278 1 27 2 75 1 219 2 195 2 169 1 173 2 12 2 335 6 81 1 288 7 254 1 61 2 
64 1 237 1 182 1 65 2 315 2 206 2 91 2 71 1 117 1 299 11 323 4 215 1 26 1 141 1 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 2 335 7 81 1 288 4 254 1 61 2 
64 1 237 1 182 1 65 1 315 1 206 2 91 1 71 1 299 11 323 2 215 1 26 1 141 1 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 1 335 7 81 1 288 4 254 1 61 2 
64 1 169 1 237 1 182 1 65 1 206 2 315 1 173 2 91 1 12 1 71 1 81 1 335 6 323 2 299 12 215 1 141 1 278 1 288 6 27 2 254 1 75 1 61 2 219 2 195 2 
64 1 237 1 182 1 65 2 315 2 206 2 91 2 71 1 299 12 117 1 323 4 215 1 141 1 26 2 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 2 335 7 81 1 288 5 254 1 61 2 
64 1 237 2 182 2 65 2 315 2 206 2 91 2 71 1 299 12 323 4 215 1 141 1 26 2 278 1 27 4 75 1 219 2 195 1 169 1 173 1 12 2 309 1 335 7 81 1 288 5 254 1 61 2 
237 2 182 2 208 2 123 2 162 1 335 2 299 4 288 2 27 4 29 2 
64 1 237 1 182 1 65 2 315 2 206 2 91 2 71 1 299 12 323 4 215 1 141 1 26 2 278 1 27 2 75 1 219 2 195 1 169 1 173 1 12 2 309 1 335 7 81 1 288 5 254 1 61 2 
256 1 41 1 107 1 118 1 332 1 185 1 161 1 
154 1 165 1 326 1 114 1 149 1 
274 1 110 1 32 1 133 1 178 1 190 1 265 1 142 1 194 1 22 1 131 1 
256 2 32 1 18 1 133 1 272 1 34 1 330 1 265 1 332 2 211 1 22 1 274 1 178 1 41 1 107 1 194 1 95 1 131 1 
256 2 303 1 279 1 227 1 32 1 18 2 133 1 272 1 34 1 78 1 330 1 265 2 332 2 211 1 22 1 321 1 274 1 336 1 178 3 41 1 107 2 194 1 95 2 
256 2 303 1 170 1 279 1 227 1 32 2 18 2 133 1 34 1 78 1 330 1 265 2 89 1 332 2 211 1 22 2 321 1 274 1 336 1 178 3 41 1 107 2 194 2 95 2 
256 1 342 1 211 1 22 1 194 1 95 1 196 1 303 1 148 1 227 1 32 1 35 1 332 1 101 1 178 1 107 1 311 1 129 1 60 1 14 1 130 1 313 1 
256 1 342 1 211 1 22 1 194 1 95 1 196 1 303 1 148 1 227 1 32 1 35 1 332 1 101 1 178 1 104 1 107 1 311 1 129 1 60 1 14 1 313 1 
32 1 133 1 37 1 22 1 274 1 194 1 
32 1 18 1 133 2 281 1 265 1 22 1 283 1 274 1 178 1 25 1 194 1 337 1 131 1 
256 2 237 1 18 1 133 1 65 2 0 1 272 1 315 2 208 1 211 1 162 1 320 1 22 1 91 2 274 1 299 2 323 4 74 1 194 1 27 1 216 1 95 1 29 1 171 2 32 1 10 1 34 1 330 1 265 1 123 1 332 2 12 2 335 1 355 1 178 1 41 1 107 1 86 1 288 1 15 2 
196 1 32 1 112 1 158 1 35 1 115 1 101 1 124 1 22 1 102 1 23 1 39 1 178 1 104 1 243 1 193 1 194 1 166 1 131 1 
32 1 18 1 133 1 265 1 37 1 22 1 274 1 344 1 178 1 25 1 268 1 192 1 194 1 
32 2 18 1 133 3 281 1 265 2 297 1 22 2 283 1 274 2 178 2 190 1 94 1 74 1 194 2 142 1 131 1 
32 1 18 1 133 2 281 1 265 1 297 1 22 1 283 1 274 1 178 1 269 1 94 1 194 1 
32 1 17 1 133 1 2 1 22 1 274 1 346 1 194 1 236 1 131 1 
32 2 133 1 265 1 22 2 307 1 274 1 322 1 178 1 74 1 194 2 221 1 
133 4 18 1 209 1 297 1 22 2 24 1 274 3 190 1 74 1 94 1 194 3 142 1 221 1 32 3 281 1 265 3 283 1 178 4 131 1 
133 4 18 1 297 1 22 2 24 1 274 3 190 1 74 1 94 1 194 3 142 1 221 1 32 3 281 1 265 3 283 1 103 1 178 4 131 1 
256 2 32 1 18 1 133 1 34 1 330 1 265 1 89 1 332 2 211 1 22 1 274 1 178 1 41 1 107 1 194 1 95 1 131 1 
303 1 32 1 18 1 133 2 281 1 265 1 22 1 283 1 274 1 178 1 25 1 194 1 337 1 
256 1 188 1 139 1 107 1 331 1 332 1 128 1 338 1 8 1 
301 1 11 1 338 1 
41 1 20 1 128 1 8 1 338 1 
256 1 301 1 148 1 227 1 11 1 158 1 35 1 332 1 211 1 342 1 101 1 107 1 311 1 129 1 60 1 95 1 338 1 87 1 14 1 313 1 
110 1 310 1 267 1 155 1 
96 1 187 1 310 1 267 1 155 1 305 1 198 1 
96 1 5 1 271 1 
96 3 157 2 305 1 198 1 258 1 187 3 6 1 310 1 267 1 259 1 140 1 155 1 
96 2 187 2 310 1 267 1 33 1 127 1 155 1 305 1 198 1 
96 1 187 1 17 1 310 1 140 1 346 1 305 1 333 1 198 1 119 1 334 1 
96 1 187 1 310 1 267 1 140 1 305 1 198 1 
96 1 187 1 267 2 140 1 155 1 305 1 198 1 
96 2 156 1 296 1 305 2 198 2 187 2 310 1 267 1 85 1 140 1 
96 3 33 2 113 1 207 1 305 1 333 1 198 1 136 1 187 3 267 1 310 2 140 1 155 1 
96 1 187 2 33 1 316 1 140 1 346 1 2 1 305 1 198 1 
96 4 238 1 33 2 207 1 305 2 333 1 198 2 187 4 267 1 310 2 140 1 127 1 155 1 
96 1 187 1 310 1 267 1 140 1 155 1 305 1 198 1 
96 4 33 2 157 1 207 1 305 1 333 1 198 1 258 1 308 1 187 4 267 2 310 3 259 1 155 2 
96 2 181 1 50 1 33 1 52 1 305 1 198 1 187 2 310 1 267 1 140 1 155 1 
96 3 157 2 305 1 198 1 258 1 187 3 310 1 267 1 259 2 140 1 155 1 245 1 
168 2 137 1 310 2 203 1 
96 1 187 1 140 1 159 1 305 1 198 1 
96 2 187 2 310 1 267 1 33 1 113 1 140 1 155 1 305 1 198 1 
304 1 
96 1 187 1 310 1 267 1 140 1 155 1 305 1 198 1 
96 3 187 3 310 1 267 1 33 1 113 1 157 1 140 1 155 1 305 1 198 1 
310 1 207 1 333 1 308 1 
310 1 267 1 

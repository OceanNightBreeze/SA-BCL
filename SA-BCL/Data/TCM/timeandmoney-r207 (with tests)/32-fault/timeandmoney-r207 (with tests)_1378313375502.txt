#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (18,143) (18,143) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 180 93 315 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 115 257 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 180 52 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 180 93 228 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 180 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 294 216 0 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 294 216 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (11,301) (11,301) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (133,242,267) (133,242,267) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (133,242,267) (133,242,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (133,242,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (133,242,267) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 180 307 71 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 180 148 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 180 148 272 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 180 93 315 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 180 148 272 130 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 180 148 272 130 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (74,77,246) (74,77,246) (74,77,246) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (74,77,246) (74,77,246) (74,77,246) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (74,77,246) (74,77,246) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 180 93 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 180 307 71 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 180 93 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 180 (145,167) 176 10 (38,302) 9 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 28 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 294 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (68,192) 126 39 (59,194) (59,194) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 180 (145,167) 176 10 (38,302) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 53 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 117 (134,231) (134,231) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 147 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1069 | == -> !=
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
231 1 45 1 117 1 142 3 50 2 49 1 168 1 90 1 150 1 245 2 134 1 15 1 95 3 
201 1 45 1 117 4 210 1 50 2 49 1 168 4 88 2 90 3 134 1 172 1 15 2 95 9 229 1 231 1 233 1 141 1 101 1 236 2 142 9 317 2 32 1 188 1 321 2 35 1 149 1 150 6 245 2 
201 1 45 1 117 4 210 1 50 2 49 1 168 4 88 2 90 3 134 1 172 1 15 2 95 9 229 1 231 1 233 1 141 1 101 1 236 2 142 9 317 2 32 1 188 1 321 2 35 1 149 1 150 6 245 2 
201 1 45 1 117 5 210 1 50 2 49 1 168 5 88 2 90 4 134 1 172 1 15 2 95 10 229 1 231 1 233 1 141 1 101 1 236 2 142 10 317 2 32 1 188 1 321 2 35 1 149 1 150 7 245 2 
201 1 45 1 117 3 210 1 50 2 49 1 168 3 88 2 90 2 134 1 172 1 15 2 95 7 229 1 231 1 233 1 101 1 236 2 142 7 317 2 32 1 188 1 321 1 35 1 149 1 150 4 245 2 
229 1 231 1 45 1 117 2 141 1 236 1 142 4 50 1 317 1 168 2 88 1 321 2 90 1 35 1 150 3 245 1 134 1 95 4 
201 1 42 1 45 1 245 1 15 1 142 1 50 1 18 1 143 1 95 1 
45 1 117 4 49 1 50 2 168 4 88 1 90 3 134 1 15 1 95 9 229 1 231 1 236 1 141 1 142 9 317 1 32 1 321 2 239 1 149 1 35 1 150 7 281 1 245 2 
45 1 117 4 49 1 50 2 168 4 88 1 90 3 134 1 15 1 95 9 229 1 231 1 236 1 141 1 142 9 317 1 32 1 321 2 239 1 149 1 35 1 150 7 281 1 245 2 
36 1 107 1 290 1 192 1 194 1 39 1 126 1 59 1 
163 1 
180 1 36 1 107 1 290 1 93 1 315 1 
115 1 36 2 107 2 12 1 298 1 290 1 78 1 79 1 257 1 
91 1 
218 1 163 1 99 2 
73 1 97 2 185 2 192 2 254 2 26 2 39 1 126 2 
114 1 157 1 119 1 85 1 252 1 2 2 254 2 213 1 126 2 55 2 17 1 264 1 300 1 224 2 174 1 178 1 20 1 268 1 269 1 183 1 24 1 97 3 185 2 67 2 274 1 275 1 26 3 31 1 33 1 144 1 145 1 106 1 73 1 283 1 243 2 192 2 39 1 
192 1 39 1 126 1 59 1 
19 1 163 1 97 1 164 1 254 1 273 1 26 1 126 1 54 1 107 1 36 1 282 1 37 1 244 1 192 1 194 1 153 1 39 1 59 1 
19 1 163 1 97 1 185 1 164 1 254 1 273 1 26 1 126 2 54 1 36 2 107 2 282 1 37 1 194 1 192 2 39 1 59 1 
180 1 36 1 107 1 290 1 52 1 
180 1 36 1 107 1 290 1 93 1 228 1 
180 1 36 1 107 1 
270 1 234 1 97 2 185 1 254 2 26 2 126 1 73 2 192 1 
235 1 47 1 303 1 
157 1 20 1 269 1 97 1 2 1 213 1 26 1 275 1 144 1 145 1 279 1 55 1 73 1 243 1 264 1 300 1 
158 1 84 2 234 1 97 5 185 4 291 1 254 5 26 5 126 1 8 1 73 1 14 1 244 1 192 4 
169 1 37 1 97 2 185 2 192 2 254 2 68 1 26 2 
91 1 
157 1 20 1 269 1 84 1 97 2 2 1 185 1 47 1 213 1 254 1 275 1 26 2 145 1 8 1 144 1 55 1 243 1 300 1 264 1 192 1 
73 1 84 1 97 3 185 3 192 3 254 3 26 3 126 1 
169 1 37 1 97 1 185 1 192 1 254 1 26 1 
270 1 234 1 37 1 97 1 185 1 192 1 254 1 26 1 126 1 
157 1 84 1 252 1 2 1 164 1 254 3 8 1 264 1 17 1 177 1 19 1 20 1 268 1 269 1 183 1 97 4 24 1 185 3 273 1 274 1 26 4 275 1 33 1 278 1 106 1 36 1 107 1 37 2 282 1 283 1 192 3 39 1 114 1 213 1 126 2 55 1 300 1 224 1 234 1 67 2 318 1 144 1 145 1 73 1 243 1 
73 1 84 1 14 1 97 2 244 1 185 1 192 1 254 2 26 2 
19 1 84 2 163 1 234 1 97 3 185 3 212 1 164 1 254 3 273 1 318 1 26 3 126 1 8 1 36 1 107 1 37 1 282 1 192 3 
84 1 234 1 97 2 185 2 47 1 192 2 254 2 303 1 26 2 126 1 
157 1 20 1 269 1 97 1 2 1 213 1 26 1 275 1 144 1 145 1 55 1 73 1 243 1 264 1 300 1 
20 1 269 1 97 1 2 1 213 1 26 1 275 1 144 1 55 1 73 1 243 1 264 1 300 1 155 1 41 1 
112 1 114 1 252 1 47 2 296 1 171 1 263 1 17 1 224 4 303 2 309 1 178 2 268 1 183 1 235 2 24 2 67 2 25 1 27 1 276 1 280 1 283 1 247 1 249 1 
19 1 97 1 185 1 254 1 68 1 26 1 37 1 192 1 
319 1 146 1 189 2 
189 1 
189 1 
189 1 
319 1 146 1 
319 1 146 1 
319 1 146 1 
189 1 
189 1 
189 1 
189 1 
189 1 
189 1 
30 1 0 1 189 1 36 1 107 1 216 1 294 1 29 1 
30 1 189 1 216 1 294 1 29 1 
42 1 
88 1 236 1 317 1 
42 1 
42 1 
42 1 
200 1 251 1 208 1 163 1 290 4 292 1 124 1 296 1 219 1 54 1 297 3 221 1 222 1 171 1 12 1 298 1 173 1 94 1 22 1 23 1 99 1 25 1 70 1 36 4 107 4 109 1 324 2 79 1 247 1 
36 1 107 1 290 1 295 1 
200 1 251 1 163 3 208 2 290 2 124 1 296 1 54 1 218 2 297 3 222 2 12 1 171 1 298 1 94 1 173 2 99 4 25 1 70 1 36 3 107 3 109 1 324 1 78 1 79 1 247 1 
200 1 44 1 251 2 163 5 208 4 290 3 124 1 296 2 54 1 218 4 297 5 222 4 12 1 171 2 298 1 173 4 94 2 99 8 25 2 70 1 151 1 36 4 107 4 109 1 324 2 78 1 79 1 154 1 247 2 
205 1 
20 1 269 1 275 1 
269 1 122 1 
91 1 
269 1 111 1 
20 1 269 1 
20 1 269 3 207 1 253 1 316 2 275 1 
309 3 199 1 178 4 159 1 161 1 120 1 24 3 293 1 7 1 170 1 261 2 241 1 171 1 263 2 224 7 247 1 40 1 175 1 
82 1 114 1 83 1 161 1 1 1 120 1 7 1 261 1 170 2 299 1 263 1 17 1 224 6 309 2 178 3 183 1 312 1 24 3 65 1 67 2 241 1 110 1 283 1 40 1 
114 1 161 1 159 1 120 1 293 1 7 1 261 1 170 1 171 2 263 2 17 1 224 9 175 1 266 1 309 3 178 5 183 1 24 4 314 1 67 2 28 1 283 1 247 2 40 1 
309 3 178 4 161 1 159 1 120 1 24 3 293 1 7 1 170 1 261 2 241 1 171 1 263 2 224 7 247 1 40 1 175 1 
309 3 178 4 161 1 159 1 120 1 24 3 293 1 7 1 170 1 261 2 241 1 171 1 263 2 224 7 247 1 40 1 175 1 
162 1 2 1 142 1 50 1 102 1 144 1 11 1 55 1 243 1 245 1 15 2 196 2 301 1 95 1 
267 1 45 1 2 1 142 1 50 1 125 1 55 1 133 1 243 1 245 1 15 1 196 1 95 1 
267 1 45 1 2 1 142 1 50 1 55 1 133 1 243 1 245 1 284 1 15 1 196 1 95 1 
162 1 2 1 142 2 50 1 86 1 125 1 55 1 150 1 133 1 243 1 245 1 15 1 196 1 95 2 
55 1 150 1 242 1 2 1 243 1 15 1 196 1 142 1 86 1 125 1 95 1 
135 1 
180 1 23 1 2 1 70 1 71 1 144 1 297 1 55 1 107 1 36 1 12 1 298 1 243 1 79 1 307 1 
113 1 180 1 19 1 179 1 163 2 97 1 164 1 254 1 273 1 26 1 217 1 237 1 54 2 148 1 107 2 36 2 223 2 37 1 282 1 244 1 153 1 225 1 
113 1 19 1 179 1 163 2 209 1 97 1 164 1 254 1 273 1 26 1 217 1 237 1 54 2 107 2 36 2 223 3 37 1 282 1 244 1 153 1 225 1 
113 1 180 1 19 1 179 1 163 2 97 1 272 1 164 1 254 1 273 1 26 1 217 1 237 1 54 2 148 1 107 2 36 2 223 2 37 1 282 1 244 1 153 1 225 1 
180 1 36 1 107 1 93 1 315 1 
113 1 208 1 163 2 164 1 214 1 254 1 258 1 217 1 297 1 54 2 12 1 298 1 223 2 225 1 308 1 179 1 19 1 23 1 97 1 313 1 273 1 26 1 34 1 237 1 36 2 107 2 282 1 37 1 244 1 153 1 79 1 
113 1 208 1 163 3 164 1 214 1 254 1 126 1 258 2 217 1 297 1 54 3 12 1 298 1 223 2 225 1 59 1 308 1 179 1 19 1 230 1 232 1 23 1 97 1 273 1 26 1 34 2 237 1 72 1 36 2 107 2 282 1 37 1 244 1 192 1 194 1 153 1 79 1 39 1 
113 1 208 1 163 3 164 1 214 1 254 1 126 1 258 2 217 1 297 1 54 3 12 1 298 1 223 2 225 1 59 1 308 1 179 1 19 1 230 1 232 1 23 1 97 1 273 1 26 1 34 2 237 1 72 1 36 2 107 2 282 1 37 1 244 1 192 1 194 1 153 1 79 1 39 1 
113 1 163 3 164 1 254 1 214 1 126 1 258 2 217 1 54 3 223 2 225 1 59 1 179 1 19 1 97 1 273 1 26 1 34 2 237 1 72 1 36 2 107 2 282 1 37 1 244 1 192 1 194 1 327 1 153 1 39 1 
113 1 180 1 19 1 179 1 163 2 97 1 272 1 164 1 254 1 273 1 26 1 217 1 237 1 54 2 148 1 130 1 107 2 36 2 223 2 37 1 282 1 244 1 153 1 225 1 
113 1 180 1 19 1 179 1 163 2 97 1 272 1 164 1 254 1 273 1 26 1 217 1 237 1 54 2 148 1 130 1 107 2 36 2 223 2 37 1 282 1 244 1 153 1 225 1 
113 1 208 1 163 2 164 1 214 1 254 1 258 1 217 1 297 1 129 1 54 2 12 1 298 1 223 2 225 1 179 1 19 1 23 1 97 1 313 1 273 1 26 1 34 1 237 1 36 2 107 2 282 1 37 1 244 1 153 1 79 1 
114 2 84 1 252 2 2 8 215 1 254 1 213 2 6 1 51 1 125 1 87 1 55 8 262 1 264 2 17 2 224 2 174 2 227 1 178 1 20 2 268 2 182 1 269 3 183 2 97 1 24 1 185 1 67 4 26 1 144 2 31 1 106 1 280 1 243 7 283 2 284 1 192 1 326 1 195 1 
114 1 252 1 47 1 254 1 126 1 296 1 171 1 263 1 17 1 94 1 224 3 303 1 305 1 309 1 178 1 268 1 183 1 235 1 234 1 97 1 24 2 185 1 67 2 25 1 26 1 283 1 192 1 247 1 328 1 
114 1 280 1 268 1 183 1 91 1 252 1 283 1 17 1 67 2 
82 2 114 2 252 2 47 8 7 1 296 1 171 2 263 1 17 2 224 11 94 2 303 3 177 1 60 1 309 2 178 6 268 1 183 2 235 8 24 5 98 1 67 4 25 2 106 1 73 1 37 1 283 2 110 2 325 1 287 1 248 1 247 1 328 1 
157 1 114 1 84 1 252 1 2 1 213 1 254 1 259 1 8 1 55 1 300 1 264 1 17 1 56 1 224 2 303 1 265 1 178 1 20 1 268 1 269 1 183 1 97 2 24 1 185 1 67 2 275 1 26 2 145 1 144 1 31 1 279 1 106 1 73 1 243 1 283 1 192 1 328 1 
157 1 114 2 160 1 84 1 252 2 2 1 213 1 254 1 8 1 55 1 300 1 264 1 17 2 224 1 226 1 20 1 21 1 268 2 269 1 183 2 97 2 24 1 185 1 67 4 274 1 275 1 26 2 145 1 144 1 106 1 283 2 243 1 38 1 192 1 328 1 
309 1 114 1 178 2 268 1 183 1 235 1 252 1 47 1 67 2 25 1 7 1 280 1 171 1 283 1 17 1 224 2 303 1 249 1 
309 1 114 1 268 1 183 1 235 1 252 1 24 2 47 1 67 2 27 1 296 1 280 1 263 1 283 1 17 1 224 2 303 1 247 1 
114 1 252 1 47 2 7 1 296 1 171 1 263 1 17 1 94 1 224 4 303 2 309 2 178 2 268 1 183 1 235 2 24 2 67 2 25 1 280 1 283 1 247 1 
309 1 114 1 178 2 268 1 183 1 235 1 252 1 47 1 67 2 25 1 7 1 171 1 283 1 17 1 224 2 303 1 227 1 249 1 
309 1 114 1 268 1 183 1 235 1 252 1 24 2 47 1 67 2 27 1 296 1 263 1 283 1 17 1 224 2 303 1 247 1 227 1 
114 1 252 1 47 2 7 1 296 1 171 1 263 1 17 1 94 1 224 4 303 2 227 1 309 2 178 2 268 1 183 1 235 2 24 2 67 2 25 1 283 1 247 1 
309 2 114 1 178 2 268 1 183 1 235 2 252 1 24 2 47 2 67 2 25 1 7 1 296 1 171 1 263 1 283 1 17 1 94 1 224 4 247 1 303 2 
157 1 114 1 252 1 2 1 213 1 55 1 300 1 264 1 17 1 224 2 178 1 20 1 268 1 269 1 183 1 97 1 24 1 67 2 274 1 275 1 26 1 31 1 145 1 144 1 106 1 73 1 243 1 283 1 
114 1 252 1 2 1 213 1 48 1 55 1 300 1 264 1 17 1 224 2 178 1 20 1 268 1 269 1 183 1 97 1 24 1 67 2 275 1 26 1 31 1 144 1 106 1 73 1 243 1 283 1 155 1 41 1 
114 1 252 1 47 2 7 1 296 1 171 1 263 1 17 1 94 1 224 4 303 2 309 2 178 2 268 1 183 1 235 2 24 2 67 2 25 1 283 1 247 1 328 1 
157 1 114 1 252 1 2 1 47 2 213 1 7 1 296 1 55 1 171 1 263 1 300 1 264 1 17 1 224 4 94 1 303 2 226 1 309 2 178 2 20 1 268 1 269 1 183 1 235 2 24 2 97 1 67 2 25 1 274 1 275 1 26 1 145 1 243 1 283 1 284 1 247 1 
114 1 252 1 47 1 254 1 7 1 126 1 296 1 171 1 17 1 94 1 224 3 303 1 309 1 178 2 268 1 183 1 234 1 235 1 24 1 97 1 185 1 67 2 25 1 26 1 240 1 283 1 192 1 247 1 328 1 
82 2 114 2 116 1 202 1 250 4 1 2 123 1 7 2 296 2 89 1 171 2 263 2 17 2 224 20 94 2 309 4 178 10 183 2 139 1 271 1 24 10 100 1 314 1 67 4 25 2 277 2 238 1 283 2 110 2 247 2 156 1 
114 1 82 2 116 1 250 4 1 2 123 2 296 1 89 2 171 1 17 1 224 16 94 1 178 8 183 1 139 1 271 1 24 8 100 1 314 1 67 2 25 1 277 1 238 1 283 1 110 2 247 1 
82 3 114 2 116 1 250 4 1 3 123 2 7 1 296 1 89 1 171 1 17 2 224 18 94 1 309 1 178 9 183 2 139 1 271 1 24 9 100 1 314 1 67 4 25 1 277 1 238 1 283 2 110 3 247 1 288 1 156 1 
82 3 114 2 116 1 250 4 1 3 123 2 7 1 296 1 89 1 171 1 263 1 17 2 224 18 94 1 309 2 178 9 183 2 139 1 271 1 24 9 100 1 314 1 67 4 25 1 277 1 238 1 283 2 110 3 247 1 288 1 156 1 
82 2 114 1 116 1 159 4 250 4 1 2 120 4 123 1 293 4 7 1 296 1 89 1 261 4 171 5 263 5 17 1 94 1 224 36 175 4 309 6 178 20 183 1 139 1 271 1 24 16 100 1 314 1 67 2 25 1 277 1 238 1 283 1 110 2 247 5 40 4 
114 1 252 1 2 2 213 1 254 2 55 2 220 1 264 1 17 1 224 2 174 2 136 1 178 1 20 1 268 1 269 1 183 1 97 2 24 1 67 2 69 1 26 2 31 1 106 1 283 1 243 2 323 1 326 1 195 1 198 1 328 1 
310 1 20 1 269 1 2 1 213 1 144 1 87 1 55 1 190 1 75 1 262 1 243 1 76 1 264 1 
42 1 63 1 2 1 213 1 5 1 125 1 55 1 190 1 75 1 74 1 243 1 264 1 77 1 246 1 
42 1 63 1 2 2 213 1 5 1 125 1 55 2 190 1 75 1 74 1 243 2 284 1 264 1 77 1 246 1 
42 1 55 1 63 1 75 1 2 1 243 1 264 1 77 1 193 1 213 1 5 1 246 1 125 1 
285 1 
61 1 208 1 163 1 23 1 105 1 54 1 297 1 12 1 298 1 79 1 
43 1 208 5 163 5 99 10 66 2 25 2 296 2 218 5 297 5 222 5 171 2 197 1 94 2 173 5 247 2 
180 1 93 1 
180 1 23 1 2 1 103 1 70 1 71 1 144 1 297 1 55 1 12 1 298 1 243 1 79 1 307 1 
91 1 
180 1 208 1 23 1 99 1 297 1 218 1 12 1 298 1 108 1 16 1 93 1 79 1 308 1 
207 1 2 1 213 1 167 1 127 1 9 1 10 1 55 1 297 1 12 1 298 1 264 2 302 1 176 1 180 1 20 1 269 3 23 1 275 1 70 1 144 1 243 1 111 2 79 1 
82 1 43 1 163 2 208 2 289 1 1 1 126 1 54 1 297 2 218 1 222 2 12 1 298 1 173 2 59 1 139 1 23 1 64 1 99 2 66 1 70 1 110 1 192 1 194 1 79 1 39 1 
230 1 208 1 23 1 120 1 66 2 293 1 126 1 28 1 297 2 107 1 36 1 171 1 12 1 298 1 192 1 194 1 79 1 247 1 39 1 40 1 59 1 
114 1 157 1 252 1 2 1 254 2 213 1 126 2 55 1 17 1 264 1 300 1 224 1 20 1 268 1 269 1 183 1 24 1 97 3 185 2 67 2 274 1 26 3 275 1 144 1 33 1 145 1 106 1 73 1 243 1 283 1 192 2 39 1 
208 2 163 4 23 1 289 1 99 4 70 1 218 2 297 1 54 2 261 1 222 2 12 1 298 1 173 2 79 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
30 1 294 1 
189 1 
309 5 114 1 178 5 183 1 120 2 24 5 314 1 67 2 293 1 28 1 7 2 171 2 283 1 263 3 17 1 224 10 247 2 40 2 
309 1 178 2 114 1 171 1 183 1 283 1 17 1 314 1 224 2 67 2 25 1 7 1 
309 2 114 1 178 2 183 1 24 2 314 1 67 2 25 1 7 1 296 1 171 1 263 1 283 1 17 1 94 1 224 4 247 1 
309 2 114 3 178 1 183 3 312 1 120 1 24 2 314 1 65 1 67 6 7 1 283 3 263 1 17 3 224 3 40 1 156 1 
82 1 114 4 83 1 159 1 1 1 120 2 293 1 7 3 171 2 263 3 17 4 224 15 175 1 309 6 178 7 183 4 312 1 24 8 314 1 65 1 67 8 28 1 283 4 110 1 247 2 80 1 40 2 156 1 
309 2 178 4 114 1 82 1 159 1 183 1 139 1 120 1 1 1 24 4 314 1 67 2 293 1 261 1 171 1 263 2 283 1 110 1 17 1 224 8 247 1 40 1 175 1 
82 1 114 2 159 1 1 1 120 1 293 1 261 1 171 1 263 2 17 2 224 8 175 1 309 2 178 4 139 1 183 2 24 4 314 1 67 4 283 2 110 1 247 1 80 1 40 1 
82 1 114 2 159 1 1 1 120 2 293 2 7 1 261 1 171 3 263 3 17 2 224 15 175 1 309 4 178 8 139 1 183 2 24 7 314 1 67 4 28 1 110 1 283 2 247 3 80 1 40 2 
82 1 114 2 159 1 1 1 120 2 293 2 7 3 261 1 171 3 263 4 17 2 224 15 175 1 309 7 178 8 139 1 183 2 24 7 314 1 67 4 28 1 110 1 283 2 247 3 80 1 40 2 
309 2 178 4 114 1 82 1 159 1 183 1 139 1 120 1 1 1 24 4 314 1 67 2 293 1 261 1 171 1 263 2 283 1 110 1 17 1 224 8 247 1 40 1 175 1 
178 1 114 1 82 1 183 1 139 1 1 1 24 1 314 1 67 2 283 1 110 1 17 1 224 2 
178 1 114 2 82 1 183 2 139 1 1 1 24 1 314 1 67 4 110 1 283 2 17 2 224 2 80 1 
178 1 114 2 82 1 183 2 139 1 1 1 24 1 314 1 67 4 110 1 283 2 17 2 224 2 156 1 
309 6 178 3 159 2 120 3 24 4 293 1 7 3 171 1 263 3 224 7 247 1 175 1 40 3 
178 1 114 2 82 1 183 2 139 1 1 1 24 1 314 1 67 4 110 1 283 2 17 2 224 2 156 1 
309 3 178 4 114 2 159 1 183 2 312 1 120 1 24 4 67 4 293 1 7 1 261 1 171 1 263 2 283 2 17 2 224 8 247 1 175 1 40 1 
91 1 
309 2 114 1 178 2 183 1 24 2 67 2 25 1 7 1 296 1 171 1 263 1 283 1 17 1 94 1 224 4 247 1 80 1 
178 1 82 1 1 1 110 1 24 1 224 2 
82 2 114 1 159 1 120 2 293 2 7 4 296 2 261 1 171 5 263 4 17 1 94 2 224 25 175 1 60 1 309 8 178 13 183 1 312 1 24 12 98 1 67 2 25 2 28 1 110 2 283 1 325 1 247 5 40 2 
82 1 24 1 224 1 
178 1 110 1 224 1 
309 3 114 1 178 3 183 1 24 3 67 2 25 1 7 1 296 1 171 1 283 1 263 2 17 1 197 1 224 6 94 1 80 1 247 1 
178 1 114 1 82 1 183 1 139 1 1 1 24 1 314 1 67 2 283 1 110 1 17 1 224 2 
309 2 178 3 120 1 24 3 293 1 7 1 171 1 263 1 224 6 247 1 40 1 
309 2 178 1 114 1 159 1 183 1 120 1 312 1 24 2 65 1 67 2 7 1 263 1 283 1 17 1 224 3 40 1 175 1 
186 1 73 1 97 1 14 1 244 1 254 1 26 1 
97 1 140 1 254 1 256 1 26 1 186 1 187 1 73 1 13 1 14 1 244 1 306 1 
20 1 269 1 2 4 3 1 213 1 144 1 87 1 55 4 262 1 132 1 243 4 284 1 264 1 
20 1 137 1 118 1 269 1 311 1 2 1 213 1 275 1 55 1 243 1 92 1 264 2 304 1 
144 1 42 1 55 1 63 1 2 1 243 1 264 1 213 1 
20 1 269 1 2 2 213 1 125 1 55 2 220 1 243 2 284 1 264 1 195 1 
20 2 62 1 269 3 182 1 2 5 215 1 213 2 87 1 144 1 55 5 262 1 132 1 243 4 284 1 264 2 195 1 
20 2 62 1 269 3 182 1 2 5 213 2 165 1 87 1 144 1 55 5 262 1 132 1 243 4 284 1 264 2 195 1 
20 1 269 1 84 1 97 2 2 1 185 1 254 1 213 1 275 1 26 2 144 1 55 1 73 1 243 1 300 1 264 1 192 1 41 1 
203 1 20 1 137 1 62 1 207 1 269 1 2 1 213 1 275 1 55 1 243 1 264 2 304 1 
144 1 55 1 91 1 2 1 243 1 
20 1 269 1 84 1 97 2 2 1 185 1 254 1 213 1 275 1 26 2 144 1 145 1 55 1 73 1 243 1 300 1 264 1 192 1 
19 1 20 2 269 3 84 1 62 1 97 2 2 1 164 1 185 2 122 1 254 2 213 1 275 2 26 2 145 1 128 1 55 1 73 1 37 1 243 1 300 1 264 1 192 1 
84 1 2 2 3 1 164 1 213 1 254 2 122 1 128 1 55 2 264 1 300 1 19 1 20 2 62 1 269 3 97 2 185 2 26 2 275 2 73 1 243 2 37 1 192 1 41 1 
62 1 269 1 163 1 2 1 166 1 126 1 55 1 54 1 107 1 36 1 243 1 111 1 192 1 194 1 39 1 59 1 
62 1 269 1 163 1 2 1 126 1 167 1 55 1 54 1 107 1 36 1 243 1 111 1 192 1 194 1 39 1 59 1 
55 1 2 1 243 1 264 1 213 1 51 1 
203 1 20 1 137 1 207 1 269 1 2 1 213 1 275 1 144 1 55 1 243 1 264 2 304 1 
114 2 157 1 159 1 84 1 120 1 252 2 2 1 47 1 213 1 254 1 293 1 55 1 261 1 171 1 263 2 300 1 264 1 17 2 224 6 303 1 175 1 226 1 309 2 178 3 20 1 268 2 269 1 183 2 235 1 24 3 97 2 185 1 67 4 274 1 275 1 69 1 26 2 145 1 73 2 283 2 243 1 284 1 38 1 192 1 247 1 40 1 328 1 
180 1 269 1 290 1 23 1 2 1 103 1 167 1 144 1 10 1 55 1 107 1 36 1 12 1 298 1 243 1 111 1 79 1 302 1 176 1 
20 1 207 1 269 2 2 2 213 1 316 1 51 1 275 1 127 1 55 2 243 2 284 1 264 2 
320 1 73 1 286 1 255 1 81 1 
53 1 36 1 107 1 290 1 152 1 255 1 104 1 
136 1 97 1 323 1 286 1 254 1 255 1 26 1 198 1 81 1 
320 1 19 1 53 1 37 1 282 1 164 1 286 1 273 1 318 1 255 1 104 1 81 1 
231 1 45 1 245 1 134 1 142 1 50 1 95 1 
204 1 231 2 117 1 210 1 121 1 142 4 50 1 168 1 90 1 322 1 150 2 245 1 134 2 95 4 
231 1 181 1 45 1 142 2 50 1 260 1 239 1 150 1 245 1 134 1 95 2 
204 2 231 1 45 1 96 1 210 2 142 3 50 1 322 1 245 1 134 1 95 3 
206 1 117 2 138 1 184 2 
45 1 245 1 142 1 50 1 58 1 95 1 
32 1 231 1 150 1 45 1 245 1 134 1 142 2 50 1 95 2 
57 1 
231 1 45 1 245 1 134 1 142 1 50 1 95 1 
91 1 
231 1 245 1 134 1 142 1 50 1 95 1 
191 1 15 1 95 1 
231 1 204 1 322 1 45 1 46 1 210 2 245 1 134 1 142 3 50 1 95 3 
321 1 231 1 150 1 245 1 134 1 142 2 50 1 95 2 
45 1 117 1 236 1 142 1 50 1 317 1 168 1 88 1 35 1 245 1 95 1 
45 1 245 1 134 1 142 1 50 1 95 1 
231 1 117 1 45 1 245 1 134 1 142 1 50 1 95 1 
45 1 211 1 4 1 142 2 50 2 131 1 245 2 134 1 95 2 
231 1 45 1 117 1 142 3 50 1 168 1 32 1 90 1 149 1 150 2 245 1 134 1 95 3 
42 1 147 1 45 1 245 1 142 1 50 1 95 1 
231 1 45 1 117 1 141 1 142 4 50 2 168 1 321 1 90 1 150 2 245 2 134 1 95 4 
32 1 231 1 150 1 45 1 210 1 245 1 134 1 142 3 50 1 95 3 
90 1 117 1 121 1 168 1 
134 1 

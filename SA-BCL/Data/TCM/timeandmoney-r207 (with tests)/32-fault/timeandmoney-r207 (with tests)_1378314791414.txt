#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 296 (46,248) (46,248) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 296 (46,248) (46,248) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 296 (46,248) (46,248) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 296 (46,248) (46,248) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 309 121 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 309 74 216 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 309 74 149 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 309 96 251 211 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 182 (159,203,305) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 47 56 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 47 56 153 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 309 74 227 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 309 121 268 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 65 209 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 138 51 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 309 308 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 309 74 149 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 309 308 84 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 309 74 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 274 175 197 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 274 175 197 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 8 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 309 308 84 97 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 309 308 84 97 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 309 74 274 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 99 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 289 245 264 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 289 245 264 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 289 245 264 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 289 245 264 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 289 245 264 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 301 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 91 9 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 117 133 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (210,281) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V ERROR java.lang.NullPointerException 99 43 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 309 74 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 138 51 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 47 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 234 43 50 133 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 309 (7,260) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 309 (60,113) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 309 (60,113) 231 150 (11,273) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 13 255 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 3 1 111 1 46 1 33 1 262 1 292 1 17 1 296 1 248 1 139 1 39 1 104 1 
1 1 3 1 111 1 46 1 33 1 262 1 292 1 17 1 296 1 248 1 139 1 39 1 104 1 
1 1 3 1 111 1 46 1 33 1 262 1 292 1 17 1 296 1 248 1 139 1 39 1 104 1 
1 1 3 1 111 1 46 1 33 1 262 1 292 1 17 1 296 1 248 1 139 1 39 1 104 1 
226 1 93 1 3 1 66 3 173 2 111 1 33 1 48 3 262 1 212 1 316 1 14 2 17 4 296 1 269 1 39 4 302 1 104 1 
226 1 202 1 3 1 64 1 48 1 33 1 262 1 292 1 316 1 17 2 296 1 139 1 39 2 165 1 104 1 87 1 
226 1 3 2 66 1 48 2 262 2 315 1 316 1 14 1 17 3 139 1 269 1 39 3 104 1 
41 1 93 1 3 2 173 2 48 5 212 1 14 4 17 9 296 1 139 1 302 1 303 1 104 1 226 1 28 1 66 7 111 1 33 1 262 2 315 1 316 1 269 3 39 9 235 1 
41 1 93 1 3 2 173 2 48 5 212 1 14 4 17 9 296 1 139 1 302 1 303 1 104 1 226 1 28 1 66 7 111 1 33 1 262 2 315 1 316 1 269 3 39 9 235 1 
116 1 297 1 301 1 
30 1 
266 2 75 2 89 1 156 2 238 1 256 2 38 2 58 2 
40 1 168 1 277 1 89 1 170 1 282 2 0 1 238 1 243 1 213 1 54 1 140 1 23 1 100 2 220 2 58 2 143 1 304 1 147 1 67 1 109 1 256 2 228 1 31 1 113 1 73 1 265 1 266 3 75 2 318 2 156 3 157 2 124 1 37 1 38 2 162 1 128 1 
49 1 266 1 75 1 89 1 80 1 156 1 256 1 38 1 58 1 146 1 
59 1 236 1 287 1 239 1 116 1 266 1 49 1 247 1 297 1 156 1 320 1 271 1 58 1 299 1 
59 1 236 2 287 2 256 1 239 1 116 1 75 1 266 1 49 1 297 1 156 1 320 1 38 1 58 1 299 1 
236 1 107 1 287 1 121 1 309 1 
236 1 107 1 287 1 216 1 309 1 74 1 
236 1 287 1 309 1 
89 1 236 1 107 1 287 1 108 1 256 1 49 1 75 1 266 1 80 1 156 1 38 1 58 1 146 1 
297 1 
236 1 107 1 287 1 149 1 309 1 74 1 
236 3 94 1 107 2 287 3 29 1 96 1 309 1 251 1 211 1 103 1 114 1 
238 1 301 1 
256 1 238 2 191 1 35 1 266 2 75 1 156 2 38 1 58 2 
283 1 233 1 240 1 
304 1 147 1 238 1 31 1 113 1 73 1 266 1 318 1 156 1 157 1 160 1 23 1 124 1 220 1 143 1 128 1 
304 1 147 1 286 1 256 1 31 1 240 1 113 1 73 1 266 2 318 1 156 2 157 1 124 1 23 1 38 1 220 1 183 1 58 1 143 1 128 1 
75 1 266 3 286 1 156 3 238 1 256 3 38 3 58 3 
49 1 266 1 80 1 156 1 256 1 38 1 58 1 
49 1 35 1 266 1 75 1 156 1 256 1 38 1 58 1 191 1 
40 1 168 1 89 1 282 1 236 1 0 1 286 1 287 1 238 1 239 1 49 1 243 1 213 1 54 1 140 1 23 1 100 2 220 1 58 3 183 1 299 1 143 1 304 1 59 1 147 1 67 1 109 1 306 1 256 3 31 1 191 1 113 1 73 1 115 1 75 2 266 4 318 1 156 4 320 1 157 1 124 1 37 1 38 3 128 1 
266 2 247 1 15 1 286 1 156 2 238 1 256 1 38 1 58 2 
59 1 236 1 287 1 286 2 256 3 239 1 191 1 115 1 75 1 49 1 266 3 297 1 320 1 156 3 85 1 38 3 183 1 58 3 299 1 
286 1 256 2 191 1 240 1 75 1 266 2 233 1 156 2 38 2 58 2 
304 1 147 1 238 1 31 1 113 1 73 1 266 1 318 1 156 1 157 1 23 1 124 1 220 1 143 1 128 1 
304 1 189 1 238 1 31 1 260 1 73 1 266 1 318 1 156 1 157 1 23 1 124 1 220 1 143 1 128 1 
168 1 279 1 188 1 282 1 63 1 67 1 109 1 243 1 213 1 12 1 140 1 54 1 99 1 100 2 
49 1 59 1 266 1 190 1 156 1 256 1 38 1 58 1 
286 2 256 4 238 1 191 1 266 5 75 1 247 1 15 1 52 1 156 5 98 1 38 4 58 5 183 1 
49 1 266 2 190 1 80 1 156 2 256 2 38 2 58 2 
305 1 25 1 
305 1 25 1 
182 1 159 1 
182 1 159 1 
182 1 159 1 
305 1 32 1 25 1 
203 1 305 1 25 1 
182 1 305 1 159 1 25 1 
305 1 32 1 25 1 
305 1 32 1 25 1 
120 1 305 1 25 1 
120 1 305 1 25 1 
120 1 305 1 25 1 
294 1 305 1 110 1 56 1 47 1 25 1 
294 1 236 1 153 1 287 1 305 1 110 1 56 1 47 1 25 1 
296 1 111 1 33 1 
296 1 33 1 87 1 
154 1 95 1 111 2 261 1 33 3 87 1 
154 1 200 1 95 1 111 1 33 2 87 1 
154 2 95 1 111 1 33 2 87 1 
236 1 107 1 287 1 227 1 309 1 74 1 
268 1 236 2 107 2 287 2 121 1 122 1 142 1 309 1 
236 2 131 1 285 1 94 1 107 1 287 2 65 1 29 1 114 1 321 1 218 1 103 1 
236 1 131 1 285 1 94 1 287 1 65 1 29 1 209 1 114 1 321 1 218 1 103 1 
152 1 301 1 73 1 
91 1 73 1 
112 1 
304 1 73 1 
304 1 152 2 124 1 259 1 290 1 73 3 
304 1 124 1 73 1 
129 1 73 1 
187 2 61 1 282 7 204 3 5 1 42 1 132 1 178 1 151 1 243 3 244 2 12 1 79 1 323 1 162 4 223 1 198 1 
187 2 61 1 282 7 204 3 5 1 42 1 132 1 178 1 151 1 243 3 244 2 12 1 79 1 323 1 162 4 223 1 198 1 
187 2 61 1 282 7 204 3 5 1 42 1 205 1 132 1 178 1 151 1 243 3 244 2 12 1 79 1 223 1 323 1 162 4 198 1 
151 1 244 1 282 1 69 1 162 1 323 2 
168 2 282 16 2 1 204 9 42 1 5 2 174 1 178 2 243 7 213 2 244 2 12 3 54 2 100 4 223 1 187 5 61 3 106 1 67 2 151 1 79 2 81 1 162 9 323 1 198 4 
3 1 48 1 179 1 180 1 53 1 136 1 17 2 296 1 298 1 139 1 23 1 220 1 102 1 104 1 224 1 225 1 226 1 66 1 111 1 33 2 261 1 262 1 313 1 316 1 318 1 157 1 39 2 87 1 276 1 128 1 
3 1 48 1 181 1 53 1 136 1 17 3 296 1 298 1 139 1 249 1 23 1 220 1 102 1 224 1 225 1 226 1 66 2 111 1 261 1 33 2 262 1 313 1 316 1 318 1 157 1 270 1 39 3 87 1 276 1 128 1 
48 1 181 1 53 1 17 2 298 1 296 1 139 1 23 1 220 1 224 1 225 1 226 1 66 2 111 1 33 2 261 1 313 1 316 1 318 1 157 1 270 1 39 2 87 1 276 1 128 1 
278 1 252 1 3 1 262 1 34 1 313 2 53 2 318 1 17 1 157 1 139 2 249 1 220 1 39 1 143 1 126 1 276 2 
3 1 180 1 53 1 136 1 17 1 296 1 298 1 139 1 23 1 220 1 102 1 104 1 224 1 225 1 111 1 33 2 261 1 262 1 313 1 318 1 157 1 270 1 39 1 87 1 276 1 128 1 
10 1 
236 1 285 1 94 1 287 1 29 1 207 1 114 1 51 1 318 1 321 1 157 1 138 1 220 1 143 1 
59 1 88 1 236 2 287 2 239 1 309 1 308 1 241 2 116 2 49 1 266 1 247 1 137 1 297 2 320 1 156 1 19 1 271 1 141 1 299 1 58 1 222 1 
88 1 236 2 287 2 239 1 241 3 49 1 247 1 137 1 297 3 19 1 141 1 58 1 299 1 222 1 59 1 149 1 309 1 74 1 266 1 116 3 156 1 320 1 271 1 158 1 
59 1 88 1 236 2 287 2 239 1 309 1 308 1 241 2 116 2 49 1 266 1 247 1 137 1 297 2 320 1 156 1 84 1 19 1 271 1 141 1 299 1 58 1 222 1 
236 1 287 1 149 1 309 1 74 1 
88 1 236 2 285 1 94 1 171 1 287 2 207 1 239 1 241 2 176 1 49 1 247 1 137 1 18 1 297 2 19 1 141 1 58 1 299 1 144 1 222 1 59 1 29 1 114 1 266 1 116 2 156 1 320 1 271 1 274 1 
88 1 236 2 285 1 94 1 171 1 287 2 239 1 207 1 241 2 175 1 176 1 49 1 247 1 137 1 18 1 297 2 19 1 141 1 58 1 299 1 144 1 222 1 59 1 29 1 114 1 266 1 116 2 230 1 156 1 320 1 271 1 197 1 274 1 
88 1 236 2 285 1 94 1 171 1 287 2 239 1 207 1 241 2 175 1 176 1 49 1 247 1 137 1 18 1 297 2 19 1 141 1 58 1 299 1 144 1 222 1 59 1 29 1 114 1 266 1 116 2 230 1 156 1 320 1 271 1 197 1 274 1 
59 1 88 1 236 2 287 2 239 1 241 2 8 1 116 2 49 1 266 1 247 1 137 1 297 2 320 1 156 1 19 1 271 1 141 1 299 1 58 1 222 1 
59 1 88 1 236 2 287 2 239 1 309 1 308 1 241 2 116 2 49 1 266 1 247 1 137 1 97 1 297 2 320 1 156 1 84 1 19 1 271 1 141 1 299 1 58 1 222 1 
59 1 88 1 236 2 287 2 239 1 309 1 308 1 241 2 116 2 49 1 266 1 247 1 137 1 97 1 297 2 320 1 156 1 84 1 19 1 271 1 141 1 299 1 58 1 222 1 
88 1 130 1 236 2 284 1 285 1 94 1 171 1 287 2 207 1 239 1 241 2 49 1 247 1 137 1 18 1 297 2 19 1 141 1 58 1 299 1 144 1 222 1 59 1 29 1 30 1 309 1 74 1 114 1 266 1 116 2 119 1 156 1 320 1 271 1 274 1 
187 2 168 1 279 1 282 6 61 1 283 1 204 2 5 1 42 1 67 1 238 2 109 1 240 1 178 1 243 3 244 1 213 1 12 1 79 1 233 1 140 1 54 1 100 2 301 1 162 3 223 1 
40 1 168 2 280 1 170 1 282 20 283 14 204 2 238 1 43 4 240 14 243 7 213 2 12 2 54 2 140 2 99 2 55 2 100 4 26 4 61 4 254 1 67 2 109 1 68 1 192 2 117 1 267 4 233 4 234 4 161 1 162 13 198 2 
168 1 40 1 282 2 170 1 286 1 238 1 243 1 213 1 215 1 54 1 140 1 23 1 220 1 100 2 58 1 183 1 143 1 304 1 147 1 67 1 109 1 68 1 256 1 257 1 31 1 113 1 73 1 266 2 78 1 318 1 157 1 233 1 156 2 124 1 160 1 38 1 162 1 128 1 
168 3 90 2 170 1 5 1 238 2 240 5 178 1 243 8 244 1 12 3 99 2 23 2 100 6 183 1 105 2 187 2 256 1 109 3 31 2 113 2 266 3 270 1 37 2 124 2 272 2 38 1 273 2 198 4 128 2 40 1 282 18 283 5 42 1 286 1 204 6 43 2 291 1 213 3 295 1 140 3 54 3 220 3 58 1 223 1 143 1 304 2 61 3 147 2 67 3 68 1 73 2 79 1 232 1 318 3 157 3 156 3 233 5 234 2 162 10 
168 2 40 1 277 2 279 1 170 1 282 2 286 1 242 1 179 1 243 1 213 2 13 1 54 2 140 2 23 2 220 8 100 4 221 1 58 1 143 2 304 2 62 1 67 2 256 1 109 2 71 1 310 1 194 1 73 3 266 1 82 1 318 7 156 1 157 8 270 1 38 1 162 1 125 1 128 2 
168 1 282 2 43 1 243 1 213 1 12 1 54 1 140 1 99 1 100 2 58 1 61 1 67 1 256 1 109 1 68 1 191 1 312 1 75 1 266 1 156 1 234 1 38 1 162 1 
168 1 279 1 282 2 61 1 283 1 204 1 67 1 109 1 240 1 213 1 233 1 140 1 54 1 234 1 100 2 162 2 198 1 164 1 
168 1 279 1 282 1 63 1 67 1 109 1 243 1 213 1 12 1 140 1 54 1 99 1 100 2 
168 1 279 1 282 3 61 1 283 1 67 1 109 1 43 1 240 1 243 1 213 1 12 1 233 1 99 1 140 1 54 1 234 1 100 2 162 2 
168 1 282 2 61 1 283 1 204 1 67 1 109 1 240 1 310 1 213 1 233 1 140 1 54 1 234 1 100 2 162 2 198 1 164 1 
168 1 282 1 63 1 67 1 109 1 310 1 243 1 213 1 12 1 140 1 54 1 99 1 100 2 
168 1 282 3 61 1 283 1 67 1 109 1 43 1 240 1 310 1 243 1 213 1 12 1 233 1 99 1 140 1 54 1 234 1 100 2 162 2 
168 1 61 1 282 3 283 1 67 1 109 1 43 1 240 1 243 1 213 1 12 1 233 1 99 1 140 1 54 1 234 1 100 2 162 2 
168 1 40 1 170 1 282 2 238 1 243 1 213 1 140 1 54 1 23 1 220 1 100 2 143 1 304 1 147 1 67 1 109 1 31 1 113 1 73 1 266 1 318 1 157 1 156 1 124 1 37 1 162 1 128 1 
168 1 40 1 170 1 282 2 238 1 243 1 213 1 246 1 140 1 54 1 23 1 220 1 100 2 143 1 304 1 189 1 67 1 109 1 31 1 260 1 73 1 266 1 318 1 157 1 156 1 124 1 162 1 128 1 
168 1 282 3 61 1 283 1 67 1 68 1 109 1 43 1 240 1 243 1 213 1 12 1 233 1 99 1 140 1 54 1 234 1 100 2 162 2 
168 1 282 3 283 1 43 1 240 1 243 1 179 1 213 1 12 1 99 1 140 1 54 1 23 1 220 1 100 2 105 1 304 1 61 1 147 1 67 1 109 1 31 1 113 1 73 1 266 1 318 1 233 1 157 1 156 1 234 1 124 1 37 1 162 2 128 1 
168 1 282 4 283 1 43 1 240 1 243 2 213 1 12 1 20 1 99 1 54 1 140 1 100 2 58 1 61 1 67 1 256 1 109 1 68 1 191 1 75 1 266 1 156 1 233 1 234 1 38 1 162 2 
168 1 213 1 245 1 81 1 67 1 54 1 289 1 100 2 101 1 264 1 
168 1 213 1 245 1 81 1 67 1 54 1 289 1 100 2 101 1 264 1 
168 1 213 1 245 1 81 1 67 1 54 1 289 1 100 2 101 1 264 1 
168 1 213 1 245 1 81 1 67 1 54 1 289 1 100 2 101 1 264 1 
168 1 213 1 245 1 81 1 67 1 54 1 289 1 100 2 101 1 264 1 
266 1 253 1 156 1 58 1 
237 1 111 1 44 1 261 1 33 2 179 1 293 1 318 2 53 1 136 1 296 1 157 2 298 1 270 1 23 1 220 2 87 1 224 1 128 1 
111 1 44 1 261 1 33 2 318 1 53 1 136 1 296 1 157 1 298 1 270 1 23 1 220 1 87 1 224 1 127 1 128 1 
278 1 293 1 53 1 318 1 157 1 45 1 220 1 143 1 
237 1 111 1 44 1 261 1 33 2 293 1 318 1 53 1 136 1 296 1 157 1 298 1 270 1 23 1 220 1 87 1 224 1 128 1 
311 1 
116 1 281 1 285 1 297 1 210 1 301 1 144 1 
285 1 94 1 29 1 207 1 144 1 176 1 114 1 
304 1 91 1 94 1 29 1 207 1 290 1 73 1 114 1 9 1 318 1 157 1 23 1 124 1 220 1 143 1 128 2 185 1 
117 1 267 1 285 1 94 1 29 1 207 1 133 1 144 1 26 1 114 1 
27 1 61 2 236 1 285 1 94 1 2 1 287 1 5 1 29 1 207 1 114 1 178 1 230 1 12 1 79 1 144 2 163 2 
116 1 281 1 285 1 94 1 297 1 29 1 207 1 144 1 114 1 
186 1 12 1 61 1 285 2 297 1 99 1 30 2 234 1 43 1 70 1 144 2 263 1 
309 1 74 1 
285 1 94 1 29 1 207 1 114 1 51 1 318 1 321 1 157 1 138 1 220 1 143 1 275 1 
40 1 168 1 89 1 282 1 0 1 238 1 243 1 213 1 140 1 54 1 23 1 100 2 220 1 58 2 143 1 304 1 147 1 67 1 256 2 109 1 31 1 113 1 73 1 266 3 75 2 318 1 157 1 156 3 37 1 124 1 38 2 128 1 
89 1 285 1 94 1 207 1 49 1 297 1 58 1 146 1 29 1 108 1 256 1 114 1 116 1 75 1 266 1 80 1 321 1 156 1 38 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
294 1 47 1 
305 1 25 1 
187 1 168 2 61 2 282 10 106 1 204 1 67 2 43 2 208 1 133 1 177 1 50 1 117 1 243 4 213 2 267 1 12 1 317 1 81 1 99 1 234 2 54 2 100 4 162 6 26 1 
168 2 282 11 5 1 42 1 204 3 43 1 133 1 178 1 243 5 244 1 213 2 12 1 54 2 100 4 223 1 26 2 187 2 61 2 67 2 192 1 193 1 117 1 267 1 79 1 81 1 234 1 162 6 198 1 
168 2 282 18 204 2 43 4 208 1 133 1 177 1 50 1 243 7 213 2 12 3 54 2 99 3 55 1 100 4 26 2 187 1 61 4 106 1 67 2 192 1 117 1 267 2 317 1 81 1 234 4 162 11 198 1 
168 2 282 18 204 2 43 4 208 1 133 1 177 1 50 1 243 7 213 2 12 3 54 2 99 3 55 1 100 4 26 2 187 1 61 4 106 1 67 2 192 1 117 1 267 2 317 1 81 1 234 4 162 11 198 1 
187 1 168 2 61 2 282 10 106 1 204 1 67 2 43 2 208 1 133 1 177 1 50 1 117 1 243 4 213 2 267 1 12 1 317 1 81 1 99 1 234 2 54 2 100 4 162 6 26 1 
168 2 282 18 204 2 43 4 208 1 133 1 177 1 50 1 243 7 213 2 12 3 54 2 99 3 55 1 100 4 26 2 187 1 61 4 106 1 67 2 192 1 117 1 267 2 317 1 81 1 234 4 162 11 198 1 
168 3 282 18 204 2 43 4 208 1 133 1 177 1 50 1 243 7 213 3 12 3 54 3 99 3 55 1 100 6 26 2 187 1 61 4 106 1 67 3 192 1 193 1 117 1 267 2 317 1 81 1 234 4 162 11 198 1 
168 2 282 9 204 1 43 2 133 1 243 3 213 2 12 1 54 2 99 1 55 1 100 4 26 2 61 2 67 2 192 1 117 1 267 2 81 1 234 2 162 6 198 1 167 1 
187 3 282 7 61 1 42 1 5 3 204 6 178 3 243 4 12 1 79 1 223 2 162 3 198 3 
168 2 282 9 204 1 43 2 133 1 243 3 213 2 12 1 54 2 99 1 55 1 100 4 26 2 61 2 67 2 192 1 117 1 267 2 81 1 234 2 162 6 198 1 167 1 
187 2 168 2 61 1 282 8 106 1 204 3 42 1 5 1 67 2 178 1 243 4 244 1 213 2 12 1 79 1 54 2 100 4 162 4 223 1 198 1 
187 2 61 1 282 6 42 1 5 1 204 2 178 1 243 3 244 1 12 1 79 1 301 1 223 1 162 3 
168 1 61 1 282 3 67 1 43 1 193 1 243 1 213 1 12 1 54 1 234 1 99 1 100 2 162 2 
282 10 61 2 204 1 43 2 192 1 117 1 243 4 267 2 12 2 234 2 99 2 55 1 162 6 198 1 26 2 
168 2 282 28 2 1 5 4 42 1 204 10 43 2 178 4 243 14 244 1 213 2 12 4 99 2 54 2 55 1 100 4 223 1 26 2 187 5 61 4 106 2 67 2 192 1 267 2 79 2 77 1 234 2 161 1 162 14 198 5 
243 1 282 1 26 1 
267 1 282 1 162 1 
282 5 61 1 204 1 43 1 243 2 12 1 234 1 99 1 272 1 162 3 198 1 
168 2 282 18 204 2 43 4 208 1 133 1 177 1 50 1 243 7 213 2 12 3 54 2 99 3 55 1 100 4 26 2 187 1 61 4 106 1 67 2 192 1 117 1 267 2 317 1 81 1 234 4 162 11 198 1 
187 1 61 1 282 6 5 1 204 2 178 1 243 3 12 1 79 1 162 3 198 1 
187 1 168 1 282 3 106 1 204 2 5 1 42 1 67 1 178 1 243 2 213 1 77 1 54 1 100 2 162 1 223 1 198 1 
168 1 187 3 282 10 61 2 2 1 5 2 204 5 67 1 178 2 243 5 213 1 12 2 79 1 81 1 54 1 100 2 162 5 198 2 
168 1 61 1 282 2 204 1 67 1 213 1 81 1 54 1 234 1 100 2 162 2 198 1 
168 1 61 1 282 3 204 1 67 1 43 1 243 1 213 1 12 1 81 1 99 1 54 1 234 1 100 2 162 2 198 1 
168 3 187 1 282 3 106 1 5 1 204 2 67 3 178 1 243 2 213 3 77 1 81 1 54 3 100 6 162 1 198 1 167 1 
168 3 282 12 2 1 204 4 42 1 5 1 178 1 243 6 213 3 12 2 54 3 100 6 223 1 26 1 187 2 61 2 67 3 193 1 117 1 267 1 79 1 195 1 81 1 162 6 198 2 167 1 
266 1 247 1 15 1 156 1 238 1 206 1 58 1 
201 1 238 1 206 1 229 1 266 1 214 1 247 1 15 1 156 1 196 1 57 1 58 1 
304 1 318 1 157 1 23 1 71 1 220 1 301 1 125 1 143 1 128 1 73 1 
304 1 286 1 238 1 256 1 31 1 113 1 73 1 266 2 318 1 156 2 157 1 124 1 23 1 38 1 220 1 58 1 143 1 128 1 
129 1 286 1 238 1 134 1 49 1 23 1 220 1 58 2 299 1 304 2 59 1 256 1 31 1 113 1 73 3 266 2 318 1 157 1 156 2 124 2 322 1 38 2 128 1 
129 1 286 1 238 1 6 1 134 1 49 1 23 1 220 2 58 2 299 1 304 2 59 1 256 1 31 1 260 1 73 3 266 2 318 2 157 2 156 2 124 2 322 1 38 2 128 1 
91 1 236 1 318 1 287 1 157 1 7 1 220 1 322 1 309 1 73 1 
60 1 91 1 236 1 318 1 287 1 157 1 220 1 322 1 309 1 73 1 
318 1 157 1 23 1 220 1 128 1 242 1 
304 1 4 1 290 1 73 1 36 1 318 1 157 1 124 1 23 1 220 1 143 1 166 1 128 2 
168 2 5 1 238 2 240 1 178 1 179 1 243 3 244 1 12 1 23 1 100 4 105 1 187 2 256 1 109 2 258 1 31 1 113 1 266 2 37 1 124 1 38 1 273 1 128 1 282 6 283 1 286 1 42 1 204 2 213 2 140 2 54 2 220 1 58 1 223 1 304 1 61 1 147 1 67 2 68 1 73 1 79 1 318 1 233 1 157 1 156 2 162 3 
60 1 91 1 236 1 107 1 94 1 287 1 29 1 207 1 309 1 73 1 114 1 150 1 11 1 231 1 318 1 157 1 220 1 143 1 275 1 
304 1 112 1 290 1 242 1 73 1 152 1 318 1 157 1 124 1 23 1 220 1 185 1 128 2 
304 1 169 1 6 1 71 1 73 1 179 1 318 4 157 4 23 1 220 4 143 1 125 1 128 1 
304 1 4 1 73 1 76 1 36 1 295 1 318 1 157 1 124 1 23 1 220 1 145 1 128 2 
318 1 296 1 298 1 157 1 23 1 220 1 33 1 143 1 87 1 128 1 
179 1 13 1 318 2 157 2 255 1 270 1 220 2 
304 2 169 1 71 1 73 3 179 1 13 1 318 4 82 1 157 5 23 2 322 1 220 5 221 1 125 1 143 1 128 2 
304 2 169 1 71 1 73 3 179 1 13 1 318 4 16 1 82 1 157 5 23 2 322 1 220 5 125 1 143 1 128 2 
304 1 286 1 238 1 256 1 31 1 260 1 73 1 266 2 318 1 156 2 157 1 124 1 23 1 38 1 220 1 58 1 143 1 128 1 
304 1 4 1 290 1 73 1 36 1 318 1 157 1 124 1 23 1 322 1 220 1 166 1 128 2 
83 1 238 1 22 1 123 1 250 1 
59 1 199 1 236 2 107 1 287 2 238 1 239 1 115 1 116 1 49 1 83 2 297 1 320 1 123 1 22 2 86 1 299 1 250 2 184 1 
253 1 83 1 123 1 250 1 
123 1 86 1 184 1 
316 1 226 1 48 1 301 1 
316 1 226 1 17 1 3 1 48 1 39 1 262 1 
313 1 139 1 39 1 
226 1 3 1 307 1 48 1 262 1 135 1 316 1 17 3 300 1 39 3 104 1 165 2 
316 1 226 1 17 2 3 1 66 1 173 1 48 1 39 2 262 1 
3 1 111 1 48 1 33 1 262 1 14 1 17 1 296 1 39 1 302 1 104 1 
316 1 17 1 3 1 48 1 39 1 262 1 104 1 
316 2 226 1 17 1 3 1 39 1 262 1 104 1 
92 1 3 2 172 1 48 1 262 2 316 1 155 1 17 2 39 2 104 1 
41 1 226 1 28 1 3 1 66 2 48 2 262 1 316 1 14 1 17 3 269 1 39 3 104 1 
226 1 3 1 66 1 111 1 48 1 33 2 261 1 262 1 118 1 316 1 17 2 296 1 39 2 87 1 104 1 
226 1 93 1 3 2 66 2 173 1 48 2 262 2 316 1 14 1 17 4 269 1 39 4 104 1 
316 1 226 1 17 1 3 1 48 1 39 1 262 1 104 1 
226 2 3 1 288 1 66 2 48 3 262 1 135 1 316 2 14 1 17 4 269 1 300 1 39 4 165 1 
226 1 3 1 66 1 48 1 262 1 314 1 316 1 17 2 319 1 39 2 104 1 303 1 
226 1 3 1 148 1 48 1 262 1 135 1 316 1 17 3 300 2 39 3 104 1 165 2 
21 1 219 2 48 2 72 1 
17 1 3 1 217 1 39 1 262 1 104 1 
316 1 226 1 28 1 17 2 3 1 66 1 48 1 39 2 262 1 104 1 
24 1 
316 1 226 1 17 1 3 1 48 1 39 1 262 1 104 1 
28 1 316 1 226 1 17 3 3 1 66 1 48 1 39 3 262 1 165 1 104 1 
14 1 288 1 269 1 48 1 
316 1 48 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (130,300) 126 (34,70) (34,70) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (130,300) 126 (34,70) (34,70) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (130,300) 126 (34,70) (34,70) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (130,300) 126 (34,70) (34,70) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 284 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 165 75 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 165 75 280 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 16 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 49 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 19 248 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,187,221,263) (59,187,221,263) (43,255,266) (43,255,266) (43,255,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,187,221,263) (59,187,221,263) (43,255,266) (43,255,266) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (59,187,221,263) (59,187,221,263) (43,255,266) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,187,221,263) (59,187,221,263) (43,255,266) (43,255,266) (43,255,266) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 73 213 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 254 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 254 146 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 96 122 97 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 96 122 97 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 96 122 4 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 254 146 86 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 254 146 86 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 96 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 175 94 204 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 175 94 204 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 175 94 204 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 175 94 204 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 175 94 204 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 39 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 84 98 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (46,299) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 165 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (136,154) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (22,128) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 273 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 302 (125,168) (125,168) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
126 1 221 1 59 1 70 1 263 1 83 1 300 1 237 1 185 1 52 1 34 1 
126 1 221 1 59 1 70 1 263 1 83 1 300 1 237 1 185 1 52 1 34 1 
126 1 221 1 59 1 70 1 263 1 83 1 300 1 237 1 185 1 52 1 34 1 
126 1 221 1 59 1 70 1 263 1 83 1 300 1 237 1 185 1 52 1 34 1 
187 3 221 1 263 4 83 1 226 1 125 1 193 1 12 1 237 4 168 1 59 1 139 1 62 1 103 2 63 1 206 1 302 2 215 2 305 1 
59 1 221 1 20 1 83 1 263 2 225 1 226 1 206 1 9 1 125 1 193 1 275 1 237 2 185 1 52 1 168 1 
187 1 59 2 221 2 83 1 263 3 62 1 103 1 125 1 193 1 130 1 302 1 237 3 52 1 168 1 
187 7 221 2 263 9 83 1 226 1 88 1 158 1 125 1 193 1 12 1 130 1 237 9 52 1 168 1 135 1 59 2 290 1 139 1 62 3 103 4 63 1 206 1 302 4 215 2 305 1 
187 7 221 2 263 9 83 1 226 1 88 1 158 1 125 1 193 1 12 1 130 1 237 9 52 1 168 1 135 1 59 2 290 1 139 1 62 3 103 4 63 1 206 1 302 4 215 2 305 1 
273 1 
80 1 82 1 170 1 29 1 203 1 102 1 30 1 191 1 149 1 230 1 286 1 
80 1 137 1 82 2 170 1 102 1 30 1 191 1 174 1 149 1 230 1 159 1 286 1 
194 1 82 1 
194 1 82 1 
82 1 
194 1 82 1 
194 1 82 1 
194 1 44 1 82 2 304 1 277 1 241 1 
229 1 5 1 6 1 159 1 91 1 92 1 56 1 286 2 170 2 244 1 22 1 174 1 208 1 250 2 297 2 69 1 71 2 183 1 107 1 30 1 32 1 33 1 79 1 
273 1 207 1 
137 1 170 2 138 1 174 1 207 2 159 1 177 1 30 2 286 2 
186 1 65 1 
170 1 244 1 22 1 6 1 207 1 250 1 297 1 71 1 91 1 147 1 107 1 92 1 32 1 33 1 79 1 286 1 
137 1 69 1 170 3 30 3 174 3 207 1 159 3 286 3 
170 1 102 1 30 1 15 1 174 1 159 1 286 1 
137 1 170 1 138 1 102 1 30 1 174 1 159 1 286 1 177 1 
80 1 137 1 82 1 170 2 102 1 174 2 191 1 230 1 267 1 159 2 177 1 69 1 30 2 149 1 166 1 56 1 286 2 
58 1 69 1 170 2 29 1 30 2 174 1 207 1 159 1 286 2 
80 1 82 1 170 1 102 1 174 1 191 1 267 1 230 1 159 1 69 1 30 1 149 1 56 1 286 1 284 1 
137 1 170 2 174 2 65 1 5 1 159 2 177 1 69 1 30 2 286 2 
170 1 244 1 22 1 6 1 207 1 250 1 297 1 71 1 91 1 107 1 92 1 32 1 33 1 79 1 286 1 
170 1 244 1 152 1 6 1 207 1 250 1 297 1 71 1 91 1 107 1 32 1 33 1 79 1 286 1 136 1 
81 1 219 2 0 2 36 1 190 1 228 1 87 1 234 1 11 1 127 1 276 1 54 1 55 1 167 2 100 4 247 1 25 1 65 2 66 1 186 2 309 1 
170 1 102 1 30 1 265 1 174 1 149 1 159 1 286 1 
58 1 137 1 170 5 174 4 207 1 159 4 177 1 209 1 69 2 29 1 30 5 56 1 201 1 286 5 
170 2 102 1 30 2 265 1 15 1 174 2 159 2 286 2 
289 1 120 1 
289 1 120 1 
306 1 89 1 
306 1 89 1 
306 1 89 1 
289 1 182 1 120 1 
289 1 72 1 120 1 
289 2 120 2 140 1 89 1 196 1 306 1 17 1 
289 1 182 1 120 1 
289 1 182 1 120 1 
289 1 120 1 249 1 
289 1 120 1 249 1 
289 1 120 1 249 1 
289 1 223 1 120 1 75 1 165 1 157 1 
289 1 223 1 82 1 120 1 75 1 165 1 157 1 280 1 
226 1 206 1 305 1 
20 1 226 1 206 1 
114 1 150 1 20 1 226 3 305 2 8 1 
114 1 150 1 20 1 274 1 226 2 305 1 
150 1 114 2 20 1 226 2 305 1 
194 1 82 1 16 1 
194 2 82 2 49 1 264 1 26 1 
220 1 19 1 82 2 293 1 194 1 44 1 304 1 277 1 238 1 241 1 133 1 
220 1 19 1 82 1 293 1 248 1 44 1 304 1 238 1 277 1 241 1 133 1 
99 1 273 1 32 1 
252 1 32 1 
117 1 
32 1 6 1 
294 1 
107 1 32 1 6 1 
32 1 123 1 
0 4 2 4 37 3 268 1 10 1 235 1 11 2 127 2 272 1 197 2 279 1 167 5 291 1 100 9 295 1 110 1 307 1 78 2 
0 4 2 6 37 3 268 1 10 1 235 1 11 2 127 2 272 1 197 2 279 1 167 5 291 1 100 9 295 3 110 1 307 1 78 2 
0 4 2 4 37 3 268 1 10 1 235 1 11 2 127 2 272 1 197 2 279 1 198 1 167 5 291 1 100 9 295 1 110 1 307 1 78 2 
81 2 219 4 113 1 0 20 2 14 84 1 37 7 87 2 268 1 160 1 10 1 45 4 233 1 164 1 235 1 11 6 127 6 272 1 197 3 276 2 279 2 54 4 200 2 167 21 134 1 291 1 100 41 247 4 23 1 295 7 143 4 108 1 110 2 78 3 307 2 309 2 111 4 
81 2 219 4 0 5 2 6 87 2 37 4 268 1 11 2 235 1 127 2 272 1 197 2 276 2 279 1 200 1 167 6 291 1 100 11 295 2 28 1 110 1 307 1 78 2 309 2 35 1 
187 1 59 1 221 1 83 1 263 2 224 1 119 1 266 1 250 1 297 1 43 1 71 1 303 1 255 1 237 1 52 1 242 1 285 1 217 1 
187 2 59 1 221 1 292 1 263 3 224 1 119 1 90 1 250 1 297 1 43 1 211 1 71 1 303 1 255 1 237 2 52 1 242 1 217 1 
187 2 263 2 224 1 90 1 250 1 297 1 211 1 71 1 303 1 255 1 237 1 52 1 242 1 217 1 
221 1 115 1 263 1 224 2 151 1 231 1 6 1 192 1 91 2 271 1 237 1 52 2 278 1 59 1 292 1 171 1 244 1 250 1 145 1 297 1 27 1 71 1 107 1 303 2 31 1 32 1 258 1 79 1 217 2 
187 1 59 1 221 1 83 1 263 2 224 1 119 1 266 1 250 1 297 1 43 1 211 1 71 1 303 1 255 1 237 1 52 1 242 1 217 1 
269 1 
297 1 220 1 44 1 261 1 71 1 82 1 293 1 73 1 213 1 244 1 304 1 277 1 250 1 
80 1 60 1 82 2 170 1 203 1 102 1 104 1 191 1 230 1 254 1 129 1 29 1 214 1 30 1 149 1 199 1 286 1 
80 1 60 1 82 2 170 1 203 1 102 1 104 1 24 1 191 1 230 1 129 1 29 1 214 1 30 1 149 1 199 1 286 1 
80 1 60 1 82 2 170 1 203 1 102 1 104 1 191 1 230 1 146 1 254 1 129 1 29 1 214 1 30 1 149 1 199 1 286 1 
82 1 
80 1 220 1 261 1 82 2 191 1 230 1 155 1 44 1 129 1 277 1 199 1 283 1 286 1 96 1 170 1 60 1 203 1 102 1 246 1 104 1 141 1 29 1 214 1 30 1 304 1 77 1 149 1 
80 1 220 1 261 1 82 2 122 1 191 1 230 1 155 1 44 1 129 1 277 1 199 1 281 1 283 1 286 1 96 1 97 1 170 1 60 1 203 1 102 1 246 1 104 1 141 1 29 1 30 1 214 1 304 1 77 1 149 1 
80 1 220 1 261 1 82 2 122 1 191 1 230 1 155 1 44 1 129 1 277 1 199 1 281 1 283 1 286 1 96 1 97 1 170 1 60 1 203 1 102 1 246 1 104 1 141 1 29 1 30 1 214 1 304 1 77 1 149 1 
80 1 220 1 261 1 82 2 122 1 191 1 230 1 4 1 155 1 44 1 47 1 129 1 277 1 199 1 286 1 96 1 170 1 60 1 203 1 245 1 102 1 104 1 141 1 253 1 29 1 30 1 214 1 304 1 77 1 149 1 
80 1 60 1 82 2 170 1 203 1 102 1 104 1 86 1 191 1 230 1 146 1 254 1 129 1 29 1 214 1 30 1 149 1 199 1 286 1 
80 1 60 1 82 2 170 1 203 1 102 1 104 1 86 1 191 1 230 1 146 1 254 1 129 1 29 1 214 1 30 1 149 1 199 1 286 1 
80 1 220 1 261 1 82 2 191 1 230 1 155 1 44 1 129 1 277 1 199 1 286 1 96 1 170 1 60 1 203 1 245 1 102 1 104 1 141 1 253 1 29 1 214 1 30 1 304 1 77 1 149 1 
219 2 81 1 2 1 228 1 37 1 87 1 66 1 235 1 272 1 273 1 197 1 276 1 78 1 55 1 309 1 
81 2 219 4 0 5 2 1 153 1 228 1 87 2 160 1 45 2 233 1 11 2 127 1 276 2 54 2 55 2 167 6 100 11 102 1 247 1 295 1 105 1 143 2 65 8 207 1 178 1 210 1 148 1 256 1 186 8 309 2 111 2 
219 2 81 1 0 1 3 1 228 1 87 1 6 1 159 1 91 1 48 1 92 1 51 1 276 1 55 1 56 1 167 1 286 2 170 2 244 1 100 2 172 1 22 1 174 1 65 1 207 1 250 1 297 1 69 1 71 1 147 1 107 1 148 1 256 1 30 1 32 1 33 1 79 1 309 1 
81 3 219 6 222 2 0 11 2 3 153 1 3 1 228 3 87 3 6 2 159 1 162 1 91 2 235 1 11 4 92 2 167 11 170 3 244 1 100 22 102 1 22 2 247 2 174 1 250 1 251 2 107 2 30 1 256 1 186 6 32 2 33 2 37 2 268 1 39 2 42 2 270 2 45 2 127 4 272 1 197 1 276 3 54 2 55 3 282 1 56 1 286 3 291 1 295 1 65 6 207 1 297 1 69 1 71 1 148 1 78 1 309 3 79 2 
81 1 219 2 115 1 0 1 151 1 3 1 228 1 231 1 87 1 6 1 91 2 276 1 278 1 55 1 240 1 167 1 244 1 100 2 21 1 208 1 250 2 297 2 27 1 71 2 107 1 148 1 32 1 79 1 309 1 
81 1 219 2 118 1 0 2 228 1 87 1 159 1 45 1 11 1 127 1 276 1 54 1 55 1 167 1 286 1 137 1 170 1 100 3 247 1 174 1 65 1 177 1 256 1 30 1 186 1 309 1 
219 2 81 1 2 1 100 2 36 1 295 1 228 1 87 1 65 1 66 1 11 1 186 1 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 0 2 100 2 247 1 228 1 87 1 25 1 65 1 66 1 127 1 186 1 276 1 55 1 309 1 
219 2 81 1 0 2 2 1 100 4 247 1 295 1 228 1 87 1 65 2 66 1 45 1 11 1 127 1 186 2 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 2 1 100 2 36 1 21 1 295 1 228 1 87 1 65 1 11 1 186 1 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 0 2 100 2 21 1 247 1 228 1 87 1 25 1 65 1 127 1 186 1 276 1 55 1 309 1 
219 2 81 1 0 2 100 4 21 1 247 1 228 1 87 1 65 2 45 1 11 1 127 1 186 2 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 0 2 2 1 100 4 247 1 295 1 228 1 87 1 65 2 45 1 11 1 127 1 186 2 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 0 1 3 1 228 1 87 1 6 1 91 1 92 1 276 1 55 1 167 1 286 1 170 1 100 2 244 1 22 1 207 1 250 1 251 1 297 1 71 1 107 1 148 1 32 1 33 1 79 1 309 1 
219 2 81 1 0 1 152 1 3 1 228 1 87 1 6 1 124 1 91 1 276 1 55 1 167 1 136 1 286 1 170 1 100 2 244 1 207 1 250 1 297 1 71 1 107 1 148 1 32 1 33 1 79 1 309 1 
219 2 81 1 0 2 2 1 100 4 247 1 295 1 228 1 87 1 65 2 45 1 11 1 127 1 256 1 186 2 276 1 54 1 55 1 309 1 167 2 
219 2 81 1 222 1 0 2 2 1 228 1 87 1 6 1 45 1 91 1 11 1 127 1 92 1 276 1 54 1 55 1 167 2 285 1 286 1 170 1 100 4 247 1 22 1 295 1 65 2 250 1 251 1 297 1 71 1 107 1 186 2 32 1 33 1 79 1 309 1 
81 1 219 2 0 1 2 1 228 1 87 1 159 1 45 1 11 1 127 1 14 1 276 1 54 1 55 1 167 2 286 1 137 1 170 1 100 3 247 1 174 1 295 1 65 1 177 1 256 1 30 1 186 1 309 1 
81 1 219 2 94 1 204 1 276 1 87 1 175 1 309 1 35 1 243 1 
81 1 219 2 94 1 204 1 276 1 87 1 175 1 309 1 35 1 243 1 
81 1 219 2 94 1 204 1 276 1 87 1 175 1 309 1 35 1 243 1 
81 1 219 2 94 1 204 1 276 1 87 1 175 1 309 1 35 1 243 1 
81 1 219 2 94 1 204 1 276 1 87 1 175 1 309 1 35 1 243 1 
219 2 81 1 0 1 189 1 3 1 228 1 87 1 7 1 91 1 50 1 276 1 55 1 240 1 167 1 286 2 170 2 100 2 205 1 208 2 250 2 297 2 71 2 148 1 256 1 30 2 79 1 309 1 259 1 
112 1 116 1 224 1 119 1 250 2 297 2 211 1 71 2 257 1 285 1 242 1 
297 1 71 1 211 1 224 1 119 1 257 1 76 1 242 1 250 1 
115 1 116 1 224 1 244 1 151 1 231 1 6 1 40 1 250 1 145 1 297 1 27 1 91 2 71 1 271 1 107 1 32 1 278 1 79 1 
112 1 297 1 116 1 71 1 211 1 224 1 119 1 257 1 242 1 250 1 
64 1 
46 1 299 1 273 1 155 1 
220 1 44 1 261 1 246 1 304 1 277 1 155 1 283 1 
220 1 261 1 61 1 244 1 101 1 6 1 39 1 250 1 41 1 252 1 297 1 44 1 91 2 71 1 107 1 304 1 216 1 277 1 32 2 79 1 
220 1 98 1 44 1 261 1 84 1 304 1 277 1 155 1 143 1 111 1 
220 1 18 2 261 1 82 1 291 1 155 2 268 1 44 1 11 2 127 1 197 1 304 1 277 1 53 1 281 1 78 1 
44 1 261 1 46 1 304 1 277 1 155 1 
220 1 45 1 11 1 127 1 247 1 54 1 155 1 
297 1 71 1 244 1 250 1 
220 1 44 1 261 1 293 1 304 1 227 1 277 1 155 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
223 1 165 1 
289 1 120 1 
81 1 219 2 0 5 2 4 84 1 87 1 37 3 268 1 11 2 235 1 127 2 272 1 197 2 276 1 167 5 98 1 291 1 100 10 295 1 143 1 78 2 309 1 35 1 111 1 
81 2 219 4 0 6 2 5 84 1 121 1 37 3 87 2 268 1 45 1 233 1 235 1 11 3 127 2 272 1 197 2 276 2 54 1 167 7 98 1 291 1 100 13 295 2 143 2 78 2 35 1 309 2 111 1 
81 3 219 6 260 1 0 11 2 7 121 1 84 1 87 3 37 5 268 1 45 2 235 1 11 4 127 4 272 1 197 2 276 3 54 2 200 1 167 10 98 1 291 1 100 21 247 2 295 2 143 1 298 1 181 1 74 1 78 2 309 3 35 1 111 1 
81 3 219 6 260 1 0 8 2 7 121 1 84 1 37 3 87 3 268 1 45 2 235 1 11 4 127 3 272 1 197 2 276 3 54 2 200 1 167 11 98 1 291 1 100 19 247 1 295 4 143 1 298 1 181 1 74 1 78 2 309 3 35 1 111 1 
81 1 219 2 0 5 2 4 84 1 87 1 37 3 268 1 11 2 235 1 127 2 272 1 197 2 276 1 167 5 98 1 291 1 100 10 295 1 143 1 78 2 309 1 35 1 111 1 
81 1 219 2 260 1 0 6 2 2 84 1 37 1 87 1 45 2 11 2 127 2 276 1 54 2 167 6 98 1 100 12 247 2 295 1 143 1 298 1 181 1 74 1 309 1 35 1 111 1 
81 4 219 8 260 1 0 9 2 6 84 1 121 1 87 4 37 4 268 1 45 2 235 1 11 4 127 3 272 1 197 2 276 4 54 2 200 2 167 11 98 1 291 1 100 20 247 1 295 2 143 1 298 1 181 1 74 1 78 2 309 4 35 1 111 1 
81 3 219 6 260 1 0 4 2 2 84 1 87 3 45 2 11 2 127 1 276 3 54 2 132 1 200 1 167 7 98 1 100 11 247 1 295 2 143 1 298 1 181 1 74 1 35 1 309 3 111 1 
0 3 291 1 2 6 100 5 295 3 37 3 268 1 11 1 235 1 127 1 272 1 197 3 78 3 167 2 
81 4 219 8 260 1 0 9 2 6 84 1 87 4 37 4 268 1 45 2 235 1 11 4 127 3 272 1 197 2 276 4 54 2 132 1 200 2 167 11 98 1 291 1 100 20 247 1 295 2 143 1 298 1 181 1 74 1 78 2 35 1 309 4 111 1 
219 4 81 2 291 1 0 6 2 6 100 12 295 3 37 3 87 2 268 1 11 2 235 1 127 2 272 1 197 2 276 2 200 1 78 2 167 6 309 2 
235 1 2 1 272 1 273 1 197 1 37 1 78 1 
219 2 81 1 0 2 2 1 121 1 100 4 247 1 37 1 87 1 45 1 11 1 127 1 276 1 54 1 309 1 167 2 
0 6 2 4 84 1 100 12 247 2 295 2 37 2 143 2 160 1 45 2 233 1 11 2 127 2 54 2 167 6 111 2 
219 2 81 1 0 10 2 7 37 5 87 1 268 1 160 1 45 2 233 1 235 1 11 4 127 4 272 1 197 2 276 1 54 2 200 1 167 10 291 1 100 20 247 2 295 2 143 2 210 1 78 2 309 1 111 2 
0 1 100 1 143 1 
100 1 167 1 111 1 
81 1 219 2 0 3 2 3 121 1 100 6 247 1 295 2 87 1 37 1 39 1 45 1 11 1 127 1 276 1 54 1 309 1 167 3 
81 1 219 2 260 1 0 6 2 2 84 1 37 1 87 1 45 2 11 2 127 2 276 1 54 2 167 6 98 1 100 12 247 2 295 1 143 1 298 1 181 1 74 1 309 1 35 1 111 1 
291 1 0 3 2 2 100 6 295 1 37 1 11 1 127 1 197 1 78 1 167 3 
219 2 81 1 0 2 2 2 100 3 295 1 37 1 87 1 164 1 235 1 272 1 197 1 276 1 78 1 200 1 167 1 309 1 
81 1 219 2 0 5 291 1 2 5 100 10 295 2 87 1 37 3 268 1 11 2 127 2 197 2 276 1 78 2 309 1 35 1 167 5 
81 1 219 2 11 1 2 1 100 2 295 1 276 1 54 1 87 1 167 2 309 1 35 1 
219 2 81 1 0 2 2 2 100 4 247 1 295 1 37 1 87 1 45 1 11 1 127 1 276 1 54 1 35 1 309 1 167 2 
219 6 81 3 0 2 2 2 100 3 295 1 87 3 37 1 164 1 197 1 276 3 132 1 200 1 78 1 35 1 309 3 167 1 
81 4 219 8 0 13 2 8 84 1 121 1 87 4 37 4 268 1 45 2 235 1 11 4 127 4 272 1 197 2 276 4 54 2 132 1 200 1 167 13 134 1 291 1 100 26 247 2 23 1 295 4 143 3 108 1 78 2 309 4 35 1 111 3 
58 1 163 1 170 1 29 1 30 1 207 1 286 1 
58 1 262 1 170 1 207 1 179 1 163 1 212 1 109 1 29 1 30 1 57 1 286 1 
27 1 297 1 71 1 273 1 244 1 250 1 
170 2 244 1 22 1 174 1 6 1 207 1 159 1 250 1 297 1 69 1 91 1 71 1 107 1 30 1 32 1 33 1 79 1 286 2 
153 1 230 1 6 2 123 1 159 2 91 1 131 1 286 2 170 2 102 2 22 1 174 1 207 1 176 1 250 1 297 1 69 1 71 1 107 2 30 2 32 3 149 1 33 1 79 1 
153 1 230 1 6 2 123 1 159 2 91 1 131 1 136 1 286 2 170 2 102 2 174 1 207 1 176 1 250 1 297 1 69 1 71 1 107 2 30 2 32 3 149 1 33 1 79 1 
252 1 297 1 71 1 82 1 131 1 32 1 154 1 250 1 
252 1 297 1 71 1 82 1 128 1 131 1 32 1 250 1 
297 1 91 1 71 1 296 1 79 1 250 1 
115 1 231 1 6 2 91 3 93 1 239 1 285 1 169 1 244 2 208 1 296 1 250 6 297 6 106 1 180 1 71 5 107 1 216 1 32 3 79 2 
81 2 219 4 222 1 0 4 2 4 153 1 228 2 87 2 6 1 159 1 91 1 235 1 11 2 92 1 167 4 170 2 100 8 102 1 22 1 174 1 250 1 251 1 107 1 30 1 256 1 32 1 33 1 259 1 37 3 268 1 270 1 127 2 272 1 197 2 276 2 55 2 285 1 286 2 291 1 295 1 207 1 297 1 69 1 71 1 78 2 309 2 79 1 
194 1 82 1 
99 1 6 1 296 1 250 2 41 1 297 2 71 2 91 2 107 1 216 1 32 2 79 1 285 1 
115 1 244 1 151 1 231 1 6 1 250 2 297 2 27 1 91 2 71 2 107 1 32 1 278 1 79 1 285 1 
115 1 202 1 151 1 231 1 6 1 250 2 297 2 71 2 91 2 107 1 131 1 278 1 32 1 79 1 
297 1 20 1 91 1 188 1 71 1 226 1 244 1 206 1 79 1 250 1 
297 2 91 1 211 1 71 2 7 1 79 1 250 2 285 1 
169 1 115 1 244 1 151 1 231 1 6 2 250 3 27 1 297 3 180 1 71 2 91 3 107 1 278 1 239 1 32 3 79 2 285 1 
169 1 115 1 244 1 151 1 231 1 142 1 6 2 250 3 27 1 297 3 180 1 71 2 91 3 107 1 278 1 32 3 79 2 285 1 
170 2 244 1 174 1 6 1 207 1 159 1 250 1 297 1 69 1 91 1 71 1 107 1 30 1 32 1 33 1 79 1 286 2 136 1 
115 1 231 1 6 1 250 1 297 1 71 1 91 2 107 1 93 1 216 1 131 1 32 1 79 1 
68 1 170 1 1 1 189 1 301 1 30 1 50 1 205 1 286 1 
80 1 1 1 102 1 85 1 191 1 267 1 230 1 68 1 195 1 301 1 95 1 149 1 
68 1 195 1 1 1 301 1 207 1 
80 1 82 2 1 2 102 1 85 1 191 1 267 1 230 1 232 1 207 1 68 1 194 1 195 2 301 2 149 1 95 1 
125 1 273 1 168 1 
125 1 193 1 221 1 59 1 263 1 237 1 168 1 
237 1 52 1 217 1 
59 1 221 1 83 1 263 2 67 1 9 1 125 1 193 1 236 1 237 2 168 1 
187 1 59 1 221 1 263 2 125 1 193 1 237 2 215 1 168 1 
59 1 221 1 83 1 263 1 226 1 103 1 63 1 206 1 302 1 237 1 305 1 
125 1 221 1 59 1 263 1 83 1 237 1 
125 1 221 1 59 1 263 1 83 1 302 1 237 1 168 1 
161 1 221 1 59 1 263 1 83 1 237 1 144 1 
187 2 59 1 221 1 290 1 83 1 263 3 62 1 103 1 125 1 193 1 302 1 237 3 168 1 135 1 
187 1 59 1 221 1 20 1 83 1 263 2 226 2 173 1 206 1 8 1 125 1 193 1 237 2 305 1 168 1 
187 2 59 1 221 1 83 1 263 3 139 1 62 1 103 1 125 1 193 1 302 1 237 3 215 1 168 1 
59 1 221 1 83 1 263 1 125 1 193 1 237 1 168 1 
187 2 59 1 221 1 263 3 62 1 103 1 125 1 193 2 302 1 237 3 168 1 
218 1 187 1 59 1 221 1 83 1 263 2 38 1 88 1 125 1 193 1 237 2 168 1 
59 1 221 1 83 1 263 2 156 1 67 1 9 1 125 1 193 1 237 2 168 1 
287 2 13 1 302 2 184 1 
221 1 59 1 263 1 83 1 237 1 308 1 
187 1 59 1 221 1 290 1 83 1 263 2 125 1 193 1 237 2 168 1 
288 1 
59 1 221 1 83 1 263 1 125 1 193 1 237 1 168 1 
59 1 221 1 83 1 263 2 9 1 125 1 193 1 237 2 168 1 
193 1 302 1 62 1 103 1 
125 1 

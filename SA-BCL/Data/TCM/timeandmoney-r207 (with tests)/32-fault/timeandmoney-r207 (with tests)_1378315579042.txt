#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 303 144 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 83 36 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) (187,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (187,287) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) (187,287) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,119,128,289) (59,119,128,289) (59,119,128,289) 297 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 211 157 121 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 189 22 252 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (230,271) (230,271) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 97 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 83 36 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 83 36 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 83 36 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 303 144 129 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 189 94 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 296 21 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 241 261 159 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 203 68 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 189 94 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 189 22 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 189 62 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
297 1 59 1 137 1 119 1 128 1 
73 1 183 1 104 1 
183 1 67 1 140 2 
260 2 20 2 100 2 10 2 12 1 170 1 148 2 16 2 
199 2 48 1 126 1 247 1 249 1 10 2 130 1 169 1 12 1 208 2 170 1 64 1 16 2 66 1 216 1 18 2 175 2 260 2 20 3 99 1 98 1 301 1 100 3 218 1 106 1 32 1 143 1 74 1 33 1 35 1 116 2 37 1 231 1 80 1 148 2 82 1 234 1 
260 1 20 1 100 1 10 1 12 1 254 1 255 1 245 1 148 1 16 1 
44 1 20 1 194 1 100 1 138 1 181 1 55 1 73 1 57 1 183 1 267 1 254 1 117 1 148 1 
260 1 20 1 194 2 100 1 138 1 181 2 55 1 73 1 57 1 183 1 267 1 10 1 254 1 16 1 148 1 
43 1 206 1 194 1 160 1 181 1 
43 1 73 1 183 1 206 1 268 1 194 2 11 1 181 2 
206 1 194 1 181 1 
43 1 260 1 194 1 20 1 100 1 181 1 245 1 109 1 10 1 12 1 254 1 255 1 16 1 148 1 
183 1 
43 1 73 1 183 1 206 1 268 1 92 1 194 2 181 2 
43 2 177 1 154 1 194 5 88 1 179 2 24 1 101 2 49 1 181 5 182 1 73 1 183 1 268 1 206 2 113 1 207 2 38 1 39 1 
18 1 175 1 260 1 20 2 301 1 217 1 100 2 218 1 219 1 48 1 106 1 226 1 249 1 35 1 130 1 208 1 231 1 64 1 16 1 148 1 
170 1 104 1 
260 1 20 2 100 2 114 1 10 1 170 2 148 2 16 1 313 1 
226 1 155 1 105 1 
18 1 175 1 20 1 100 1 301 1 218 1 48 1 106 1 308 1 249 1 35 1 130 1 208 1 170 1 231 1 64 1 
260 4 20 5 217 2 100 5 219 1 102 1 244 1 114 1 10 1 170 1 117 1 16 4 148 5 84 1 
260 2 20 2 100 2 254 1 255 1 78 1 148 2 16 2 
260 3 20 3 10 1 217 1 100 3 170 1 148 3 16 3 
260 1 20 1 100 1 254 1 255 1 148 1 16 1 
260 1 20 1 114 1 100 1 10 1 254 1 148 1 16 1 313 1 
194 1 199 1 48 1 126 1 55 1 57 1 247 1 249 1 10 2 130 1 12 1 208 1 170 1 254 1 64 1 292 1 16 3 216 1 18 1 175 1 260 3 20 4 99 1 98 1 301 1 100 4 217 1 138 1 218 1 219 1 181 1 106 1 32 1 267 1 74 1 114 1 35 1 116 2 231 1 37 1 40 1 148 3 82 1 234 1 
260 1 20 2 100 2 217 1 170 1 117 1 148 2 16 1 84 1 
260 3 194 1 20 3 299 1 217 2 100 3 138 1 219 1 181 1 55 1 57 1 183 1 267 1 114 1 10 1 254 1 40 1 16 3 148 3 
260 2 20 2 217 1 155 1 100 2 114 1 226 1 10 1 16 2 148 2 
18 1 175 1 20 1 100 1 301 1 218 1 48 1 106 1 249 1 35 1 130 1 208 1 170 1 231 1 64 1 
18 1 175 1 20 1 100 1 301 1 218 1 304 1 48 1 106 1 50 1 130 1 208 1 170 1 231 1 64 1 
150 1 152 1 45 1 155 2 199 4 126 2 53 1 204 1 247 1 213 1 216 1 99 1 98 1 178 1 25 1 265 1 105 2 32 1 115 1 226 2 116 2 188 1 80 2 234 1 
267 1 260 1 20 1 100 1 254 1 78 1 148 1 16 1 
72 1 
72 1 
262 1 197 1 
262 1 197 1 
262 1 197 1 72 1 
72 1 
72 1 
72 1 
72 1 
72 1 
262 1 197 1 72 2 
72 1 
72 1 
260 1 194 1 20 1 300 1 100 1 303 1 161 1 181 1 5 1 7 1 282 1 163 1 58 1 144 1 76 1 172 1 16 1 148 1 
194 2 161 1 5 2 245 1 282 2 58 2 167 1 251 1 10 1 12 1 254 1 255 1 16 1 260 1 20 1 300 2 100 1 181 2 109 1 76 2 309 1 36 1 148 1 83 1 
69 1 277 1 93 1 
69 1 93 1 243 1 
156 1 277 2 93 3 15 1 243 1 29 1 
295 1 156 1 277 1 93 2 243 1 29 1 
156 2 277 1 93 2 243 1 29 1 
43 3 152 1 154 2 194 4 49 1 245 1 54 1 206 1 10 1 207 1 12 1 254 1 255 1 16 1 213 1 260 1 20 1 178 1 179 1 100 1 101 1 265 1 141 2 181 4 107 2 109 1 111 1 73 1 268 1 183 1 113 2 185 1 147 1 311 1 148 1 273 1 
43 3 152 1 86 1 154 2 194 4 49 1 160 1 245 1 206 2 10 1 207 1 12 1 254 1 255 1 16 1 134 1 213 1 260 1 20 1 178 1 179 1 100 1 101 1 265 1 141 2 181 4 107 2 109 1 73 1 268 1 183 1 113 2 185 1 147 1 232 1 148 1 273 1 
43 1 152 1 194 2 154 2 245 1 54 1 10 1 207 1 12 1 254 1 255 1 16 1 213 1 260 1 20 1 179 1 178 1 100 1 101 1 265 1 181 2 141 2 182 1 107 2 109 1 111 1 73 1 183 1 113 2 147 1 148 1 273 1 
213 1 152 1 153 1 154 2 194 1 178 1 179 1 101 1 265 1 141 2 181 1 182 1 107 2 111 1 54 1 113 2 207 1 147 1 273 1 
64 1 210 1 104 1 
296 1 64 1 
310 1 
301 1 218 1 64 1 
95 1 64 1 
218 1 64 1 
301 1 9 1 218 1 89 1 64 3 210 2 
213 1 135 2 152 1 238 1 25 2 199 5 220 1 278 1 126 2 53 3 205 1 77 1 209 1 269 1 80 3 149 1 272 1 
213 1 135 2 152 1 238 1 25 2 199 5 220 1 278 1 126 2 53 3 205 1 77 1 209 1 269 1 80 3 149 1 272 1 
213 1 135 2 152 1 2 1 238 1 25 2 199 5 220 1 278 1 126 2 53 3 205 1 77 1 209 1 269 1 80 3 149 1 272 1 
152 2 238 1 276 1 241 2 4 1 199 14 122 2 278 1 126 6 200 1 51 1 53 4 205 3 247 1 209 2 135 1 213 1 216 1 261 1 99 1 178 2 25 1 265 1 30 1 32 1 116 2 312 1 149 1 80 8 272 1 273 2 
152 1 238 1 4 1 199 7 278 1 126 3 162 1 53 4 205 1 247 2 209 1 213 1 135 2 216 2 99 2 25 3 220 1 32 2 186 1 116 4 77 1 269 1 80 4 272 1 
297 1 59 1 137 1 119 1 128 1 
59 1 137 1 119 1 287 1 128 1 
137 1 119 1 289 1 187 1 
59 1 137 1 119 1 287 1 128 1 
297 1 59 1 137 1 119 1 128 1 
274 1 
1 2 154 2 165 2 166 1 253 1 254 1 256 2 173 4 18 2 175 2 20 1 179 1 100 1 263 2 101 1 28 2 181 5 266 2 106 1 183 2 268 3 267 1 113 2 117 1 42 1 44 1 275 2 194 5 49 1 202 1 55 1 57 1 206 6 286 1 207 1 130 2 208 2 132 1 291 1 64 1 133 1 211 1 293 1 67 2 138 1 218 1 140 2 71 1 305 1 73 1 145 1 231 1 233 1 148 1 85 1 
173 2 44 1 194 3 20 1 138 1 100 1 181 3 202 1 55 1 57 1 268 1 92 1 206 2 267 1 286 1 254 1 256 1 133 1 293 1 233 1 117 1 148 1 
44 1 194 3 202 1 55 1 57 1 206 1 92 1 286 1 254 1 133 1 293 1 173 3 20 1 100 1 138 1 28 1 181 3 73 1 267 1 183 1 268 1 148 1 117 1 233 1 
44 1 1 1 194 3 202 1 55 1 57 1 92 1 206 2 286 1 254 1 256 1 133 1 293 1 173 3 20 1 100 1 138 1 28 1 181 3 73 1 268 1 267 1 183 1 148 1 117 1 233 1 
1 4 154 1 157 1 92 1 165 2 254 1 256 4 173 6 20 1 179 1 100 1 23 1 263 2 101 1 28 4 181 5 266 2 267 1 268 3 183 5 113 1 117 1 118 1 44 1 275 2 194 5 49 1 202 1 55 1 57 1 206 7 286 1 207 1 133 1 211 1 293 1 67 2 138 1 302 1 73 5 75 1 233 1 148 1 85 1 
44 1 275 2 1 2 154 1 194 4 49 1 202 1 55 1 57 1 206 4 165 2 286 1 207 1 254 1 256 2 133 1 211 1 293 1 173 4 67 2 20 1 179 1 100 1 138 1 263 2 140 2 101 1 28 2 305 1 181 4 266 2 73 1 183 2 268 2 267 1 113 1 233 1 117 1 148 1 85 1 
44 1 275 2 1 2 154 1 194 4 157 1 49 1 202 1 55 1 57 1 206 4 165 2 286 1 207 1 254 1 256 2 133 1 211 1 293 1 173 4 67 2 20 1 179 1 100 1 138 1 23 1 263 2 101 1 28 2 181 4 266 2 73 1 183 1 268 2 267 1 113 1 75 1 148 1 117 1 233 1 85 1 
44 1 275 2 1 2 154 1 194 4 157 1 49 1 202 1 55 1 57 1 206 4 165 2 286 1 207 1 254 1 256 2 133 1 211 1 293 1 173 4 67 2 20 1 179 1 100 1 138 1 23 1 263 2 101 1 28 2 181 4 266 2 73 1 183 1 268 2 267 1 113 1 75 1 148 1 117 1 233 1 85 1 
44 1 275 1 154 1 194 2 157 1 121 1 49 1 202 1 55 1 57 1 165 1 286 1 207 1 254 1 133 1 211 1 293 1 173 2 215 1 20 1 179 1 100 1 138 1 101 1 181 2 306 1 267 1 113 1 148 1 117 1 233 1 
44 1 275 2 1 3 154 1 194 4 157 1 49 1 202 1 55 1 57 1 165 2 206 5 286 1 207 1 254 1 256 3 133 1 211 1 293 1 173 5 67 2 20 1 179 1 100 1 138 1 23 1 302 1 263 2 101 1 28 3 181 4 266 2 73 1 183 1 268 2 267 1 113 1 75 1 148 1 117 1 233 1 85 1 
44 1 275 2 1 3 154 1 194 4 157 1 49 1 202 1 55 1 57 1 165 2 206 5 286 1 207 1 254 1 256 3 133 1 211 1 293 1 173 5 67 2 20 1 179 1 100 1 138 1 23 1 302 1 263 2 101 1 28 3 181 4 266 2 73 1 183 1 268 2 267 1 113 1 75 1 148 1 117 1 233 1 85 1 
44 1 275 1 154 1 194 2 49 1 202 1 55 1 57 1 165 1 286 1 207 1 254 1 133 1 211 1 293 1 173 2 215 1 20 1 179 1 100 1 138 1 101 1 181 2 267 1 113 1 233 1 117 1 148 1 
135 1 213 1 152 1 216 1 45 1 238 1 98 1 99 1 155 1 199 4 25 2 220 1 104 1 105 1 126 2 53 2 32 1 247 1 226 1 77 1 116 2 170 1 269 1 80 2 234 1 272 1 
152 4 155 5 241 4 199 24 122 4 123 1 126 11 51 2 53 2 56 1 205 2 247 2 8 1 169 1 170 1 213 3 214 1 216 2 261 1 99 2 98 1 178 4 265 3 105 17 32 2 226 17 116 4 312 2 80 13 82 1 234 2 273 4 
155 1 199 2 48 1 123 1 126 1 127 1 247 1 249 1 130 1 208 1 169 1 170 1 64 1 16 1 294 1 175 1 18 1 216 1 260 1 20 2 98 1 99 1 301 1 100 2 217 1 218 1 219 1 106 1 308 1 32 1 227 1 35 1 116 2 231 1 148 1 80 1 234 1 82 1 
152 4 237 1 238 1 155 4 247 3 249 2 169 1 254 1 16 1 175 1 18 1 260 1 20 3 99 3 98 3 178 2 100 3 25 2 180 2 105 4 106 2 32 3 35 2 116 6 37 2 269 1 272 1 273 2 199 16 48 2 123 1 279 1 126 6 53 3 205 1 284 2 283 1 130 1 208 1 64 2 213 2 298 1 216 3 217 1 301 2 219 1 218 2 220 1 142 2 225 2 226 4 77 1 231 2 148 1 80 10 82 1 234 3 
42 1 45 1 195 1 199 2 242 1 124 1 126 1 52 1 285 1 247 2 252 1 130 2 208 4 169 1 253 1 64 3 16 1 174 1 66 1 175 4 18 4 216 2 260 1 20 1 99 2 98 2 301 1 22 1 100 1 217 1 218 3 106 3 32 2 116 4 231 2 190 1 189 1 148 1 80 1 234 2 82 1 
152 1 199 1 123 1 247 1 10 1 16 1 216 1 260 1 20 1 99 1 98 1 178 1 100 1 32 1 224 1 114 1 116 2 148 1 80 1 234 1 273 1 
216 1 152 1 45 1 98 1 99 1 178 1 155 1 199 2 105 1 53 1 32 1 205 1 247 1 226 1 116 2 188 1 80 2 234 1 
150 1 213 1 216 1 45 1 98 1 99 1 155 1 25 1 199 2 265 1 105 1 126 2 53 1 32 1 247 1 226 1 116 2 234 1 
216 1 152 1 45 1 98 1 99 1 178 1 155 1 199 2 105 1 32 1 247 1 226 1 116 2 80 2 234 1 273 1 
216 1 152 1 98 1 99 1 178 1 155 1 199 2 124 1 105 1 53 1 32 1 205 1 247 1 226 1 116 2 188 1 80 2 234 1 
150 1 213 1 216 1 98 1 99 1 155 1 25 1 199 2 124 1 265 1 105 1 126 2 53 1 32 1 247 1 226 1 116 2 234 1 
216 1 152 1 98 1 99 1 178 1 155 1 199 2 124 1 105 1 32 1 247 1 226 1 116 2 80 2 234 1 273 1 
216 1 152 1 98 1 99 1 178 1 155 1 199 2 105 1 32 1 247 1 226 1 116 2 80 2 234 1 273 1 
199 2 48 1 126 1 247 1 249 1 130 1 169 1 208 1 170 1 64 1 175 1 18 1 216 1 20 1 98 1 99 1 301 1 100 1 218 1 106 1 32 1 35 1 116 2 231 1 37 1 80 1 234 1 82 1 
199 2 48 1 126 1 50 1 247 1 130 1 169 1 208 1 170 1 14 1 64 1 175 1 18 1 216 1 20 1 98 1 99 1 301 1 100 1 218 1 304 1 106 1 32 1 116 2 231 1 80 1 234 1 82 1 
216 1 152 1 98 1 99 1 178 1 155 1 199 2 123 1 105 1 32 1 247 1 226 1 116 2 80 2 234 1 273 1 
152 1 87 1 155 1 199 2 48 1 247 1 249 1 208 1 64 1 175 1 18 1 216 1 20 1 178 1 98 1 99 1 301 1 100 1 218 1 180 1 105 1 106 1 32 1 226 1 35 1 116 2 231 1 37 1 80 2 234 1 273 1 
152 1 199 3 123 1 126 1 247 1 10 1 96 1 16 1 213 1 216 1 260 1 20 1 99 1 98 1 178 1 100 1 265 1 105 1 32 1 114 1 226 1 116 2 148 1 80 2 234 1 273 1 
236 1 152 7 240 4 239 1 196 1 4 1 241 4 199 45 122 4 159 1 126 22 162 1 51 2 53 7 91 1 205 6 247 3 65 1 212 1 213 6 216 3 261 2 99 3 178 7 221 1 25 1 265 6 31 1 32 3 229 1 116 6 312 2 79 1 41 1 80 23 191 1 273 7 
236 1 152 7 240 4 239 1 196 1 4 1 241 4 199 43 122 4 159 1 126 20 162 1 51 2 53 6 91 1 205 5 247 3 65 1 212 1 213 5 216 3 261 2 99 3 178 7 221 1 25 1 265 5 31 1 32 3 229 1 116 6 312 2 79 1 41 1 80 23 191 1 273 7 
236 1 152 10 238 3 240 4 239 1 196 1 4 1 241 4 199 52 122 4 159 1 126 23 162 1 51 2 53 9 91 1 205 5 247 2 65 1 212 1 135 3 213 8 216 2 261 2 99 2 178 7 220 3 221 1 25 4 265 5 31 1 32 2 229 1 77 3 116 4 312 2 269 3 41 1 80 29 272 3 191 1 273 7 
236 1 152 7 240 3 239 1 196 1 4 1 241 4 199 41 122 4 159 1 126 19 162 1 51 2 164 1 53 6 205 5 247 3 65 1 212 1 213 5 216 3 261 2 99 3 178 7 221 1 25 1 265 5 31 1 32 3 229 1 116 6 312 2 79 1 41 1 80 22 191 1 273 7 
236 1 152 3 240 4 239 2 196 1 4 1 241 2 199 25 122 2 159 1 126 12 162 1 53 2 205 1 91 1 247 2 212 2 65 1 213 2 216 2 261 2 99 2 178 3 221 1 25 1 265 2 31 1 32 2 229 1 116 4 41 1 80 13 191 1 273 3 
58 1 76 1 230 1 271 1 5 1 282 1 
303 1 
58 1 76 1 5 1 97 1 282 1 
288 1 
290 1 
194 1 161 1 5 1 245 1 282 1 58 1 167 1 251 1 10 1 12 1 254 1 255 1 16 1 260 1 20 1 300 2 100 1 181 1 109 1 76 1 309 1 36 1 148 1 83 1 
194 1 161 1 5 1 245 1 282 1 58 1 167 1 251 1 10 1 12 1 254 1 255 1 16 1 260 1 20 1 300 2 100 1 181 1 109 1 76 1 309 1 36 1 148 1 83 1 
194 1 161 1 5 1 245 1 282 1 58 1 167 1 251 1 10 1 12 1 254 1 255 1 16 1 260 1 20 1 300 2 100 1 181 1 109 1 76 1 309 1 36 1 148 1 83 1 
288 1 
288 1 
290 1 
290 1 
257 1 6 1 
43 1 194 1 300 1 303 1 5 1 181 1 7 1 282 1 163 1 58 1 167 1 144 1 129 1 76 1 251 1 172 1 
195 1 199 2 242 1 123 1 126 1 52 1 285 1 168 1 247 1 208 2 169 1 94 1 64 2 66 2 175 2 216 1 18 2 20 2 98 1 99 1 301 1 100 2 218 2 139 1 27 1 106 2 307 1 32 1 116 2 231 1 190 1 189 1 148 2 80 1 234 1 82 1 
192 1 174 1 18 2 175 2 136 1 87 1 69 1 277 1 3 1 243 1 125 1 106 1 112 1 248 1 93 2 208 2 231 1 15 1 63 1 
192 1 174 1 18 1 175 1 136 1 69 1 277 1 3 1 243 1 125 1 106 1 61 1 248 1 93 2 208 1 231 1 15 1 
17 1 175 1 18 1 228 1 3 1 130 1 208 1 63 1 
192 1 174 1 18 1 175 1 136 1 69 1 277 1 3 1 243 1 125 1 106 1 112 1 248 1 93 2 208 1 231 1 15 1 63 1 
108 1 
73 1 183 1 154 1 113 1 38 1 104 1 39 1 
194 1 154 1 67 1 179 1 263 1 140 1 101 1 49 1 181 1 266 1 73 1 206 1 268 1 183 2 113 1 207 1 85 1 
296 1 18 1 175 1 21 1 179 1 301 1 218 1 89 1 101 1 49 1 280 1 106 2 207 1 130 1 208 1 231 1 64 1 
67 1 261 1 154 1 179 1 241 1 122 1 159 1 101 1 140 2 49 1 141 1 107 1 183 1 113 1 207 1 
193 1 152 2 237 1 194 1 154 2 238 1 49 1 245 1 246 2 10 1 207 1 12 1 254 1 255 1 16 1 213 1 260 1 20 1 179 1 100 1 101 1 181 1 109 1 75 1 113 2 77 1 148 1 272 1 
154 1 179 1 101 1 49 1 73 1 183 1 113 1 207 1 38 1 39 1 
152 1 67 1 178 1 140 2 141 1 107 1 183 1 113 2 273 1 
73 1 183 1 206 1 268 1 194 1 181 1 
42 1 154 2 194 3 195 1 242 1 49 1 60 1 285 1 166 1 206 4 207 2 130 2 131 1 208 4 253 1 64 2 291 2 171 1 175 4 18 4 176 2 179 2 301 1 218 2 101 2 71 2 181 3 182 1 106 3 145 1 268 2 113 2 231 2 190 1 
199 1 48 1 126 1 247 1 249 1 10 2 130 1 208 1 12 1 170 1 64 1 16 2 175 1 18 1 216 1 260 2 20 3 99 1 98 1 100 3 301 1 218 1 106 1 32 1 74 1 35 1 116 2 37 1 231 1 148 2 82 1 234 1 
135 1 67 2 154 1 179 1 140 4 101 1 49 1 71 1 141 2 107 2 73 2 183 4 113 2 207 1 291 1 
58 1 19 1 76 1 
58 1 19 1 76 1 
58 1 19 1 76 1 
58 1 76 1 47 1 
58 1 76 1 47 1 
58 1 184 1 76 1 270 1 6 1 
58 1 76 1 47 1 
58 1 76 1 
72 1 
152 7 236 1 237 1 238 2 4 1 241 2 199 28 122 2 159 1 126 12 162 1 51 1 53 6 205 2 247 2 65 1 135 1 213 5 216 2 261 1 99 2 178 4 220 1 221 1 25 4 265 2 32 2 77 2 116 4 312 1 269 1 80 16 272 2 191 1 273 4 
152 7 236 1 237 1 238 2 4 1 241 2 199 30 122 2 159 1 126 14 162 1 51 1 53 7 205 3 247 3 250 1 65 1 135 1 213 6 216 3 261 1 99 3 178 4 220 1 221 1 25 4 265 3 32 3 77 2 116 6 312 1 269 1 80 16 272 2 191 1 273 4 
236 1 152 3 238 1 241 1 4 1 199 13 122 1 159 1 126 5 162 1 53 4 205 1 247 3 250 1 65 1 135 1 213 1 216 3 261 1 99 3 178 2 220 1 25 3 221 1 32 3 77 1 116 6 269 1 80 8 272 1 273 2 191 1 
236 1 152 5 237 1 238 2 241 1 4 1 199 20 122 1 159 1 126 9 162 1 53 7 205 3 247 3 250 1 65 1 135 1 213 4 216 3 261 1 99 3 178 2 220 1 25 4 221 1 265 1 32 3 77 2 116 6 269 1 80 11 272 2 273 2 191 1 
152 7 236 1 237 1 238 2 4 1 241 2 199 28 122 2 159 1 126 12 162 1 51 1 53 6 205 2 247 2 65 1 135 1 213 5 216 2 261 1 99 2 178 4 220 1 221 1 25 4 265 2 32 2 77 2 116 4 312 1 269 1 80 16 272 2 191 1 273 4 
236 1 152 2 241 1 4 1 199 9 122 1 159 1 126 3 162 1 53 2 205 1 247 2 65 1 216 2 261 1 99 2 178 2 25 1 221 1 32 2 116 4 80 6 273 2 191 1 
236 1 152 2 241 1 4 1 199 11 122 1 159 1 126 5 162 1 53 1 247 3 250 1 65 1 213 1 216 3 261 1 99 3 178 2 25 1 221 1 265 1 32 3 116 6 80 6 273 2 191 1 
236 1 152 2 241 1 4 1 199 11 122 1 159 1 126 5 162 1 53 2 205 1 247 3 65 1 213 1 216 3 261 1 99 3 178 2 25 1 221 1 265 1 32 3 116 6 79 1 80 6 273 2 191 1 
135 1 213 3 152 3 237 1 238 2 199 9 220 1 25 4 126 4 53 7 205 3 77 2 269 1 80 5 272 2 
236 1 152 2 241 1 4 1 199 11 122 1 159 1 126 5 162 1 53 1 247 3 65 1 213 1 216 3 261 1 99 3 178 2 25 1 221 1 265 1 32 3 116 6 79 1 80 6 273 2 191 1 
135 1 213 1 152 1 216 2 99 2 238 1 4 1 199 6 25 2 220 1 126 3 53 3 32 2 205 1 247 2 77 1 116 4 269 1 80 3 272 1 
135 1 213 1 152 1 238 1 220 1 25 2 199 4 104 1 126 2 53 2 77 1 269 1 80 2 272 1 
216 1 152 1 99 1 178 1 199 2 32 1 247 1 250 1 116 2 80 2 273 1 
213 1 152 2 261 1 178 2 241 2 199 10 122 2 265 1 126 4 51 1 53 1 205 1 312 1 80 6 273 2 
152 5 237 1 238 3 241 2 4 2 199 25 122 2 126 11 200 1 51 1 53 11 205 6 247 2 135 1 213 3 214 1 216 2 178 2 99 2 25 5 220 1 32 2 77 2 116 4 312 1 269 1 80 14 272 3 273 2 
199 1 122 1 126 1 
241 1 199 1 80 1 
152 1 178 1 199 4 126 1 53 1 284 1 205 1 80 3 273 1 
236 1 152 2 241 1 4 1 199 9 122 1 159 1 126 3 162 1 53 2 205 1 247 2 65 1 216 2 261 1 99 2 178 2 25 1 221 1 32 2 116 4 80 6 273 2 191 1 
213 1 152 1 199 2 77 1 126 1 80 1 
216 1 238 1 99 1 4 1 25 1 199 3 220 1 200 1 126 2 53 2 32 1 205 1 247 1 116 2 269 1 80 1 272 1 
213 2 216 1 152 2 237 1 99 1 238 1 25 2 199 8 126 4 162 1 32 1 53 4 205 2 247 1 116 2 77 1 80 4 272 1 
216 1 152 1 99 1 178 1 199 2 162 1 32 1 53 1 205 1 247 1 116 2 80 2 
213 1 216 1 152 1 99 1 178 1 199 4 265 1 126 2 162 1 53 1 32 1 205 1 247 1 116 2 80 2 273 1 
216 3 99 3 238 1 4 1 199 3 25 1 200 1 126 2 162 1 32 3 53 2 205 1 247 3 116 6 79 1 80 1 272 1 
152 4 237 1 238 2 276 1 4 1 241 2 199 21 122 2 200 1 126 10 162 1 51 1 53 7 205 4 247 4 250 1 213 3 216 4 261 1 99 4 178 2 25 3 220 1 265 1 32 4 77 1 116 8 312 1 269 1 79 1 80 11 272 2 273 2 
203 1 20 1 100 1 170 1 148 1 117 1 84 1 
203 1 68 1 26 1 264 1 258 1 81 1 
42 1 175 1 18 1 218 1 130 1 208 1 253 1 231 1 64 1 104 1 106 1 
18 1 175 1 260 1 20 2 301 1 217 1 100 2 218 1 48 1 106 1 35 1 130 1 208 1 170 1 231 1 64 1 16 1 148 1 
18 1 175 1 260 1 176 1 20 2 138 1 301 2 217 1 100 2 218 2 48 1 106 1 281 1 267 1 35 1 208 1 170 1 95 1 254 1 231 1 64 3 16 2 148 2 
18 2 175 2 260 1 176 1 20 2 138 1 301 2 217 1 100 2 218 2 222 1 48 1 106 1 281 1 50 1 267 1 208 2 170 1 95 1 254 1 231 1 64 3 16 2 148 2 
296 1 0 1 18 3 175 3 176 1 194 2 301 1 218 1 70 1 222 1 181 2 106 1 281 1 73 1 57 1 183 1 206 1 130 1 208 3 95 1 231 1 64 4 210 1 
296 1 18 3 175 3 176 1 194 2 301 1 218 1 222 1 181 2 106 1 201 1 281 1 73 1 57 1 183 1 206 1 130 1 208 3 95 1 231 1 64 4 210 1 
175 1 18 1 34 1 208 1 231 1 106 1 
18 1 175 1 301 1 89 1 218 1 198 1 106 2 285 1 130 1 208 1 231 1 64 1 190 1 
152 1 87 1 238 1 155 1 199 4 48 1 123 1 126 2 53 2 247 2 249 1 208 1 170 1 64 1 16 1 135 1 213 1 216 2 18 1 175 1 260 1 20 2 98 2 99 2 301 1 100 2 217 1 218 1 25 2 220 1 27 1 180 1 105 1 106 1 32 2 225 1 226 1 35 1 77 1 116 4 231 1 37 1 269 1 80 2 148 1 272 1 234 2 
43 1 154 1 194 3 49 2 201 1 57 1 206 2 130 1 207 2 131 1 208 1 64 2 210 1 259 1 296 1 175 1 18 1 179 2 101 2 181 3 110 1 73 1 183 1 268 1 113 1 146 1 38 1 39 1 
18 1 175 1 301 1 89 1 218 1 280 1 106 2 34 1 310 1 208 1 231 1 64 1 210 1 
42 1 18 4 175 4 87 1 218 1 222 1 106 1 130 1 208 4 13 1 253 1 231 1 64 1 
18 1 175 1 195 1 301 1 218 1 242 1 106 2 90 1 285 1 208 1 231 1 64 1 190 1 
175 1 18 1 69 1 130 1 93 1 208 1 231 1 243 1 125 1 106 1 
174 1 18 2 175 2 87 1 195 1 301 1 218 2 242 1 106 2 285 1 208 2 94 1 231 1 64 2 190 1 189 1 
18 2 175 2 87 1 195 1 22 1 301 1 218 2 242 1 106 2 285 1 130 1 208 2 231 1 64 2 190 1 189 1 
18 2 175 2 87 1 195 1 301 1 218 2 242 1 106 2 285 1 130 1 208 2 231 1 62 1 64 2 190 1 189 1 
18 1 175 1 260 1 20 2 301 1 217 1 100 2 218 1 48 1 106 1 50 1 130 1 208 1 170 1 231 1 64 1 16 1 148 1 
18 1 175 1 176 1 301 1 89 1 218 1 198 1 106 2 285 1 208 1 231 1 64 1 190 1 
151 1 46 1 170 1 103 1 223 1 
235 1 43 1 151 2 46 1 194 2 120 1 138 1 158 1 223 2 103 2 181 2 55 1 73 1 57 1 183 1 267 1 170 1 254 1 40 1 
151 1 46 1 20 1 100 1 139 1 223 1 307 1 168 1 148 1 
235 1 46 1 158 1 

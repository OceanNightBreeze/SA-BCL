#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (10,115,215,230,255) (53,185) (53,185) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (10,115,215,230,255) (53,185) (53,185) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (10,115,215,230,255) (53,185) (53,185) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (10,115,215,230,255) (53,185) (53,185) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 336 135 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 336 135 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (208,266) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 202 288 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 173 162 277 332 124 317 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 314 347 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 314 258 333 74 109 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 314 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 314 258 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 314 258 333 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 314 258 333 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 314 258 333 74 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 136 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (131,359) 27 173 162 277 50 12 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 173 162 277 332 149 8 60 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 173 162 277 332 149 8 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 173 162 277 332 149 8 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 173 162 277 332 149 8 60 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 136 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 136 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 173 162 277 332 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 173 162 277 50 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 173 162 277 332 140 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (208,266) (208,266) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
354 1 123 1 46 1 110 1 198 1 185 1 261 1 280 1 327 1 230 1 53 1 40 1 11 1 306 1 
354 1 123 1 46 1 110 1 198 1 185 1 261 1 280 1 327 1 230 1 53 1 40 1 11 1 306 1 
354 1 123 1 46 1 110 1 198 1 185 1 261 1 280 1 327 1 230 1 53 1 40 1 11 1 306 1 
354 1 123 1 46 1 110 1 198 1 185 1 261 1 280 1 327 1 230 1 53 1 40 1 11 1 306 1 
107 1 182 1 336 1 46 1 110 4 357 1 337 1 145 2 147 2 261 1 280 1 327 4 205 3 40 1 11 1 206 2 
354 1 16 1 78 1 182 1 123 1 110 2 91 1 147 1 261 1 280 1 251 1 327 2 230 1 40 1 11 1 168 1 
354 1 78 1 110 3 91 1 338 1 337 1 147 2 261 2 280 2 327 3 205 1 11 1 206 1 
354 1 30 1 135 1 336 1 110 4 338 1 337 1 147 1 261 2 280 2 327 4 293 1 205 2 11 1 206 1 
354 1 30 1 135 1 336 1 110 4 338 1 337 1 147 1 261 2 280 2 327 4 293 1 205 2 11 1 206 1 
136 1 312 1 195 1 
311 2 312 1 234 1 
216 1 148 2 310 1 19 2 104 2 346 2 152 2 296 2 
119 1 120 1 0 2 102 1 127 1 104 3 346 2 143 1 325 1 279 1 237 1 174 1 64 1 146 1 178 1 262 2 148 2 214 1 67 1 41 2 353 1 13 1 152 2 181 2 216 1 310 1 19 3 184 1 22 1 25 1 93 1 341 1 228 2 165 1 361 1 231 1 296 2 
208 1 
243 1 256 1 312 1 171 1 19 1 200 1 104 1 6 1 260 1 238 1 167 1 42 1 195 1 296 1 
243 1 256 1 312 1 19 1 200 1 346 1 104 1 260 1 238 1 148 1 167 2 42 2 195 1 152 1 296 1 
63 1 170 1 167 1 42 1 292 1 
106 1 63 1 170 1 312 1 167 2 90 1 42 2 195 1 
63 1 167 1 42 1 
208 1 266 1 170 1 167 1 42 1 
312 1 
106 1 63 1 170 1 312 1 167 2 42 2 195 1 268 1 
106 1 219 1 170 2 59 1 299 1 197 1 1 1 245 1 63 2 71 1 271 1 315 1 167 5 42 5 28 1 68 1 307 1 
310 1 136 1 
310 2 19 2 104 2 346 1 148 1 328 1 152 1 98 1 296 2 
34 1 131 1 27 1 
0 1 310 1 19 1 104 1 22 1 143 1 279 1 146 1 178 1 262 1 9 1 228 1 165 1 67 1 353 1 13 1 
56 1 0 1 19 2 346 1 104 2 143 1 22 1 279 1 146 1 178 1 262 1 131 1 228 1 138 1 67 1 165 1 353 1 13 1 152 1 296 1 
56 2 310 1 171 1 19 5 346 4 104 5 148 1 226 1 97 1 137 1 328 1 138 1 152 4 296 5 
256 1 19 2 104 2 346 2 32 1 152 2 296 2 113 1 
56 1 148 1 310 1 19 3 104 3 346 3 152 3 296 3 
256 1 19 1 104 1 346 1 152 1 296 1 113 1 
256 1 148 1 328 1 19 1 104 1 346 1 152 1 98 1 296 1 
56 1 0 1 102 1 256 1 104 4 346 3 143 1 325 1 279 1 237 1 260 1 238 1 174 1 64 1 146 1 178 1 262 1 148 2 214 1 328 1 67 1 41 1 42 1 353 1 13 1 152 3 181 2 216 1 243 1 310 1 19 4 200 1 22 1 25 1 93 1 341 1 360 1 228 1 138 1 165 1 361 1 167 1 139 1 296 3 
56 1 310 1 226 1 171 1 19 2 104 2 346 1 152 1 296 2 
56 2 243 1 256 1 312 1 19 3 200 1 346 3 104 3 203 1 238 1 260 1 148 1 360 1 328 1 138 1 167 1 42 1 152 3 296 3 
56 1 19 2 346 2 104 2 34 1 148 1 131 1 328 1 152 2 296 2 
0 1 310 1 19 1 104 1 22 1 143 1 279 1 146 1 262 1 178 1 228 1 165 1 67 1 353 1 13 1 
0 1 262 1 256 1 310 1 228 1 247 1 353 1 153 1 
119 2 55 1 102 1 192 1 325 1 173 1 237 1 64 1 34 2 131 2 213 1 214 1 41 4 181 2 157 1 47 1 93 1 359 1 227 1 361 2 27 2 188 1 
256 1 19 1 200 1 104 1 346 1 152 1 32 1 296 1 
313 1 99 1 
313 1 99 1 
190 1 224 1 313 1 99 1 
190 1 224 1 313 1 99 1 
190 1 224 1 
128 1 313 1 99 1 
193 1 313 1 99 1 
15 1 190 1 224 1 187 1 313 2 99 2 
128 1 313 1 99 1 
128 1 313 1 99 1 
309 1 313 1 99 1 
309 1 313 1 99 1 
309 1 313 1 99 1 
76 1 57 1 2 1 3 1 346 2 104 2 105 1 350 1 193 1 36 1 150 1 42 1 152 2 87 1 289 1 18 1 310 1 19 2 160 1 313 1 254 1 167 1 296 2 99 1 
196 1 15 1 76 1 220 1 312 1 3 2 313 2 105 2 269 1 186 1 36 2 194 2 254 3 167 2 42 2 272 1 99 2 241 1 289 2 
182 1 46 1 40 1 
182 1 40 1 168 1 
46 2 37 1 287 1 40 3 183 1 168 1 
211 1 46 1 287 1 40 2 183 1 168 1 
46 1 287 1 40 2 183 2 168 1 
170 4 2 1 142 1 234 1 322 2 324 1 173 1 350 1 63 1 130 1 282 1 42 5 195 1 87 1 307 1 106 1 157 1 311 2 312 2 245 1 356 1 202 1 162 1 271 1 340 1 116 2 315 1 167 5 273 1 342 1 
208 1 266 1 170 2 312 1 172 1 89 1 292 1 63 1 167 2 42 2 195 1 343 1 
170 1 282 1 167 2 42 2 273 1 28 1 202 1 
282 1 288 1 167 1 42 1 28 1 273 1 202 1 
178 1 253 1 136 1 
178 1 82 1 
26 1 
178 1 67 1 13 1 
178 1 286 1 
178 1 67 1 
178 3 253 2 67 1 117 1 348 1 13 1 
119 5 58 1 59 2 299 1 274 1 192 1 39 1 41 9 133 2 264 4 290 1 68 2 157 1 108 1 111 1 248 1 92 2 361 4 
119 5 58 1 59 2 299 1 274 1 192 1 39 1 41 9 133 2 264 4 290 1 68 2 157 1 108 1 111 1 248 1 92 2 361 4 
119 5 320 1 299 1 58 1 59 2 274 1 192 1 39 1 41 9 133 2 264 4 290 1 68 2 157 1 108 1 111 1 248 1 92 2 361 4 
119 4 162 1 157 1 108 1 44 1 332 1 124 1 88 1 274 2 111 1 277 1 361 1 41 5 173 1 317 1 
119 5 299 1 58 1 59 2 102 1 274 1 323 1 192 1 325 1 64 1 214 1 39 1 41 9 133 2 264 4 290 1 68 2 181 2 157 1 108 1 111 1 21 1 92 2 361 4 
0 1 319 1 78 1 5 1 175 1 147 1 146 1 280 1 261 1 262 1 179 1 327 2 37 1 40 2 11 1 86 1 354 1 217 1 331 1 182 1 46 1 110 2 91 1 22 1 228 1 205 1 166 1 168 1 54 1 232 1 
0 1 319 1 78 1 344 1 61 1 5 1 175 1 147 1 146 1 280 1 261 1 262 1 37 1 327 3 40 2 354 1 217 1 331 1 182 1 46 1 110 3 91 1 22 1 94 1 228 1 205 2 166 1 168 1 54 1 232 1 
0 1 319 1 78 1 344 1 5 1 147 1 146 1 262 1 327 2 37 1 40 2 354 1 331 1 182 1 46 1 110 2 91 1 22 1 94 1 228 1 205 2 166 1 168 1 54 1 232 1 
0 1 61 1 345 1 5 2 146 1 280 1 261 1 262 1 178 1 304 1 327 1 305 1 67 1 353 1 151 1 180 1 354 2 110 1 22 1 164 1 228 1 166 2 54 2 
217 1 354 1 331 1 319 1 0 1 182 1 46 1 110 1 22 1 5 1 175 1 146 1 261 1 280 1 262 1 94 1 37 1 327 1 228 1 40 2 166 1 11 1 168 1 86 1 54 1 232 1 
51 1 
0 2 101 2 104 1 324 1 6 1 7 1 238 1 63 2 146 1 326 1 67 1 151 1 106 1 242 1 243 1 159 1 69 1 19 1 245 1 200 1 22 1 164 1 116 2 294 1 167 3 296 1 256 1 171 1 347 1 260 1 33 1 262 2 178 1 84 1 38 1 42 3 353 2 307 1 356 2 270 1 271 1 314 1 229 1 315 1 228 2 
106 1 155 1 242 1 243 1 101 2 256 1 159 1 171 1 19 1 200 1 104 1 268 1 6 1 238 1 260 1 7 1 63 2 33 1 84 1 167 3 42 3 296 1 
101 3 256 1 171 1 233 1 104 1 6 1 7 1 260 1 238 1 63 1 33 1 84 1 42 3 195 1 106 1 242 1 243 1 159 1 312 1 19 1 200 1 268 1 167 3 296 1 
155 1 242 1 243 1 29 1 101 2 256 1 159 1 171 1 19 1 200 1 104 1 6 1 238 1 260 1 7 1 63 1 33 1 84 1 167 2 42 2 296 1 
74 1 101 2 29 2 256 1 171 1 258 1 104 1 6 1 7 1 260 1 238 1 33 1 63 3 326 1 84 1 42 3 307 1 106 1 242 1 155 2 243 1 333 1 159 1 109 1 199 1 19 1 245 1 200 1 356 1 268 1 270 1 271 1 314 1 116 1 229 1 315 1 167 3 296 1 
101 2 256 1 171 1 104 1 6 1 7 1 260 1 238 1 33 1 326 1 84 1 42 2 307 1 242 1 243 1 159 1 19 1 245 1 200 1 356 1 270 1 271 1 314 1 116 1 229 1 315 1 167 2 296 1 
101 2 256 1 171 1 258 1 104 1 6 1 7 1 260 1 238 1 33 1 326 1 84 1 42 2 307 1 242 1 243 1 333 1 159 1 19 1 199 1 200 1 245 1 356 1 270 1 271 1 314 1 116 1 229 1 315 1 167 2 296 1 
101 2 256 1 171 1 258 1 104 1 6 1 7 1 260 1 238 1 33 1 326 1 84 1 42 2 307 1 242 1 243 1 333 1 159 1 19 1 199 1 200 1 245 1 356 1 270 1 271 1 314 1 116 1 229 1 315 1 167 2 296 1 
101 4 233 2 235 1 104 1 6 1 238 1 7 1 63 4 326 2 195 1 106 2 242 1 155 2 243 1 158 1 159 1 19 1 245 1 200 1 112 2 116 1 167 4 296 1 208 1 29 2 256 1 171 1 258 1 129 2 260 1 33 1 84 1 42 4 307 1 308 1 266 1 311 2 312 1 356 1 271 1 314 1 315 1 229 2 
74 1 101 2 29 1 256 1 171 1 258 1 104 1 6 1 7 1 260 1 238 1 33 1 63 1 326 1 84 1 42 2 307 1 242 1 155 1 243 1 333 1 159 1 19 1 199 1 245 1 200 1 356 1 270 1 271 1 314 1 116 1 229 1 315 1 167 2 296 1 
74 1 101 2 29 1 256 1 171 1 258 1 104 1 6 1 7 1 260 1 238 1 33 1 63 1 326 1 84 1 42 2 307 1 242 1 155 1 243 1 333 1 159 1 19 1 199 1 245 1 200 1 356 1 270 1 271 1 314 1 116 1 229 1 315 1 167 2 296 1 
101 3 233 1 104 1 6 1 238 1 7 1 63 4 326 2 195 1 106 2 242 1 155 2 243 1 158 1 159 1 19 1 200 1 245 1 112 2 163 1 116 1 167 4 296 1 208 1 29 2 256 1 171 1 129 2 260 1 33 1 84 1 42 4 307 1 266 1 311 2 312 1 356 1 271 1 314 1 315 1 229 2 
119 3 181 2 157 1 58 1 59 1 102 1 310 2 192 1 325 1 47 1 237 1 64 1 92 1 93 1 136 1 214 1 39 1 361 3 41 6 133 1 264 2 68 1 290 1 
119 3 181 2 157 1 44 1 102 1 88 1 277 1 173 1 325 1 237 1 162 1 64 1 50 1 93 1 131 4 214 1 41 4 352 1 361 1 27 4 12 1 
119 1 56 1 0 1 321 1 102 1 104 2 346 1 143 1 349 1 325 1 279 1 237 1 146 1 64 1 34 1 178 1 262 1 9 1 214 1 67 1 352 1 41 2 353 1 13 1 152 1 181 2 310 1 19 2 22 1 114 1 93 1 25 1 228 1 138 1 165 1 361 1 231 1 296 1 
56 1 0 1 102 2 104 2 143 1 325 2 279 1 237 2 64 2 146 1 67 1 152 1 13 1 157 1 19 2 22 1 162 1 25 1 165 1 27 2 296 1 119 3 257 1 31 1 346 1 173 1 174 1 34 2 262 1 178 1 131 2 214 2 352 1 41 5 353 1 85 1 133 1 264 1 181 4 134 1 223 1 93 2 228 1 138 1 361 2 
318 1 56 1 0 7 191 1 102 2 104 1 325 2 237 2 64 2 146 4 65 1 67 3 151 1 13 1 152 1 19 1 246 1 22 3 249 1 164 1 25 1 296 1 119 1 121 1 127 2 346 1 262 6 178 4 179 1 214 2 41 2 353 2 43 1 218 1 181 4 45 1 222 1 47 1 93 2 228 7 316 1 361 1 231 1 
119 1 102 1 80 1 346 1 104 1 325 1 173 1 192 1 237 1 64 1 34 1 131 1 148 1 328 1 214 1 213 1 352 1 41 3 152 1 133 1 264 1 181 2 157 1 19 1 162 1 93 1 361 2 27 1 296 1 
181 2 119 2 157 1 102 1 325 1 173 1 47 1 237 1 64 1 34 1 93 1 131 1 227 1 214 1 41 2 27 1 
181 2 102 1 325 1 192 1 47 1 237 1 64 1 34 1 93 1 131 1 214 1 213 1 41 2 361 2 27 1 133 1 264 1 188 1 
181 2 119 2 157 1 102 1 325 1 173 1 47 1 237 1 162 1 64 1 34 1 93 1 131 1 214 1 41 2 27 1 
181 2 119 2 157 1 102 1 246 1 325 1 173 1 237 1 64 1 34 1 93 1 131 1 227 1 214 1 41 2 27 1 
181 2 102 1 246 1 325 1 192 1 237 1 64 1 34 1 93 1 131 1 214 1 213 1 41 2 361 2 27 1 133 1 264 1 188 1 
181 2 119 2 157 1 102 1 246 1 325 1 173 1 237 1 162 1 64 1 34 1 93 1 131 1 214 1 41 2 27 1 
181 2 119 2 157 1 102 1 325 1 173 1 237 1 162 1 64 1 34 1 93 1 131 1 214 1 41 2 27 1 
119 1 0 1 102 1 104 1 143 1 325 1 279 1 237 1 174 1 146 1 64 1 262 1 178 1 214 1 67 1 41 2 353 1 13 1 181 2 310 1 19 1 22 1 93 1 25 1 228 1 165 1 361 1 231 1 
181 2 0 1 256 1 102 1 310 1 247 1 325 1 237 1 64 1 25 1 262 1 93 1 95 1 228 1 214 1 41 1 361 1 353 1 153 1 
181 2 119 2 157 1 102 1 325 1 173 1 237 1 162 1 64 1 34 1 93 1 131 1 214 1 41 2 352 1 27 1 
119 2 0 1 102 1 104 1 143 1 173 1 325 1 279 1 237 1 174 1 146 1 64 1 34 1 262 1 179 1 178 1 131 1 214 1 67 1 41 2 13 1 85 1 181 2 157 1 19 1 22 1 162 1 93 1 228 1 165 1 27 1 
119 2 102 1 346 1 104 1 192 1 325 1 173 1 237 1 64 1 148 1 131 1 328 1 214 1 213 1 352 1 41 3 263 1 152 1 181 2 157 1 19 1 162 1 93 1 361 1 27 1 296 1 
119 4 181 4 100 1 157 1 44 1 332 1 102 2 88 1 60 1 277 1 21 1 173 1 210 1 325 2 162 1 64 2 8 1 149 1 66 1 214 2 41 6 361 2 
189 1 119 5 181 2 140 1 44 2 332 2 102 1 4 1 88 2 60 1 21 1 144 1 210 1 325 1 64 1 8 2 149 2 66 3 214 1 41 10 361 5 
119 4 181 4 100 1 157 1 44 1 332 1 102 2 88 1 60 1 277 1 21 1 173 1 210 1 325 2 162 1 64 2 8 1 149 1 66 1 214 2 41 6 361 2 
119 4 181 4 100 1 157 1 44 1 332 1 102 2 88 1 60 1 277 1 21 1 173 1 210 1 325 2 162 1 64 2 8 1 149 1 66 1 214 2 41 6 361 2 
119 7 58 1 59 1 102 1 60 1 277 1 192 1 325 1 210 1 173 1 64 1 8 1 149 1 66 1 214 1 39 1 41 12 133 1 264 2 68 1 290 1 181 2 157 2 332 1 44 1 88 1 21 1 162 1 92 1 361 5 
119 1 318 1 0 2 102 1 104 2 127 2 300 1 325 1 237 1 146 1 64 1 178 1 262 2 214 1 67 1 352 1 41 2 181 2 244 1 45 1 19 2 20 1 22 1 93 1 25 1 228 2 204 1 361 1 231 1 296 2 169 1 
217 1 0 2 319 1 182 1 46 1 22 1 70 1 236 1 5 1 48 1 146 1 262 2 179 1 94 1 37 1 228 2 40 2 168 1 232 1 
217 1 0 1 319 1 182 1 46 1 81 1 22 1 5 1 48 1 146 1 262 1 94 1 37 1 228 1 40 2 168 1 232 1 
0 1 275 1 22 1 236 1 5 1 146 1 178 1 262 1 164 1 228 1 67 1 353 1 151 1 180 1 
217 1 0 1 319 1 182 1 46 1 22 1 70 1 236 1 5 1 48 1 146 1 262 1 94 1 37 1 228 1 40 2 168 1 232 1 
358 1 
136 1 
270 1 271 1 116 1 315 1 245 1 356 1 307 1 
0 1 31 1 278 1 82 1 324 1 146 2 262 1 178 2 67 1 353 1 13 1 307 1 154 1 265 1 245 1 356 2 22 1 225 1 271 1 52 1 228 1 315 1 117 1 
208 1 140 1 79 1 277 1 234 4 324 1 173 2 192 2 130 4 35 1 213 2 195 1 307 1 219 3 266 1 157 2 332 1 44 2 311 5 88 1 312 2 245 1 356 6 162 2 271 1 116 5 315 1 294 1 118 1 342 4 
219 1 299 1 59 1 199 1 245 1 271 1 315 1 167 1 42 1 307 1 68 1 
271 1 315 1 245 1 307 1 
106 1 63 1 312 1 167 1 42 1 195 1 
75 1 0 2 324 1 63 2 146 1 178 1 262 2 67 1 38 1 353 2 42 2 151 1 307 1 106 1 69 1 245 1 356 1 22 1 271 1 164 1 116 1 315 1 228 2 294 1 167 2 28 1 
0 1 102 1 104 3 346 2 143 1 325 1 279 1 237 1 174 1 64 1 146 1 262 1 178 1 148 2 214 1 67 1 41 1 353 1 152 2 13 1 181 2 216 1 310 1 19 3 22 1 25 1 93 1 341 1 228 1 165 1 361 1 296 2 
311 4 312 4 111 1 245 1 234 2 356 1 324 1 271 1 130 2 116 2 315 1 294 1 195 2 342 2 307 1 
36 1 96 1 105 1 
220 1 36 1 267 1 160 1 105 1 
36 1 96 1 105 1 
36 1 96 1 105 1 
36 1 335 1 105 1 
36 1 335 1 105 1 
36 1 335 1 105 1 
36 1 105 1 
313 1 99 1 
119 4 59 2 58 1 299 1 102 2 325 2 192 1 303 1 64 2 214 2 39 1 41 8 133 2 264 4 68 2 290 1 181 4 157 1 92 2 361 4 
119 3 157 1 58 1 59 1 192 1 92 1 136 1 39 1 41 6 361 3 133 1 264 2 290 1 68 1 
181 2 119 2 157 1 102 1 325 1 173 1 162 1 64 1 339 1 214 1 41 2 
119 3 162 1 157 1 44 1 332 1 88 1 277 1 41 4 361 1 173 1 
119 3 162 1 157 1 50 1 44 1 88 1 277 1 41 4 361 1 173 1 
88 1 41 1 361 1 
119 1 44 1 41 1 
119 3 157 1 31 1 173 1 162 1 92 2 361 1 41 4 264 2 
119 1 181 2 140 1 332 1 44 1 102 1 88 1 21 1 325 1 64 1 214 1 361 1 41 2 
119 3 157 1 59 1 192 1 92 1 39 1 41 6 361 3 133 1 264 2 68 1 
119 1 181 2 59 1 58 1 102 1 325 1 303 1 64 1 92 1 214 1 295 1 361 2 41 3 133 1 264 2 68 1 290 1 
119 1 92 1 59 1 299 1 361 1 41 2 133 1 264 2 68 1 
181 2 119 2 157 1 102 1 21 1 325 1 173 1 64 1 214 1 41 2 
181 2 119 2 157 1 102 1 21 1 325 1 173 1 162 1 64 1 214 1 41 2 
181 2 119 1 59 1 102 1 21 1 325 1 64 1 92 1 214 1 361 1 41 2 133 1 264 2 68 1 
119 11 100 1 299 1 59 2 58 1 102 4 124 1 126 1 325 4 173 2 192 2 303 1 64 4 239 1 214 4 213 1 39 1 41 20 133 2 264 5 68 2 290 1 181 8 157 3 332 1 44 3 88 3 21 1 162 2 339 1 92 3 361 9 
119 10 299 1 59 2 58 1 140 1 102 2 103 1 209 1 192 2 325 2 173 2 64 2 303 1 284 1 214 2 213 1 39 1 41 19 133 3 330 1 264 5 68 2 290 1 181 4 157 3 44 1 332 1 88 1 21 1 162 2 92 2 361 9 
119 3 181 4 157 1 44 1 140 1 332 1 102 2 88 1 277 1 21 1 173 1 325 2 162 1 64 2 339 1 214 2 361 1 41 4 
119 5 299 1 140 1 58 1 59 2 102 2 192 1 325 2 64 2 214 2 39 1 41 10 133 2 264 4 290 1 68 2 181 4 157 1 44 1 332 1 88 1 21 1 339 1 92 2 361 5 
119 5 299 1 140 1 58 1 59 2 102 2 192 1 325 2 64 2 214 2 39 1 41 10 133 2 264 4 290 1 68 2 181 4 157 1 44 1 332 1 88 1 21 1 339 1 92 2 361 5 
119 10 299 1 59 2 58 1 140 1 102 2 103 1 209 1 192 2 325 2 173 2 64 2 303 1 284 1 214 2 213 1 39 1 41 19 133 3 330 1 264 5 68 2 290 1 181 4 157 3 44 1 332 1 88 1 21 1 162 2 92 2 361 9 
119 1 181 2 140 1 332 1 44 1 102 1 88 1 21 1 325 1 64 1 214 1 361 1 41 2 
119 1 181 4 44 1 140 1 332 1 102 2 88 1 21 1 325 2 64 2 339 1 214 2 361 1 41 2 
119 1 181 4 100 1 44 1 140 1 332 1 102 2 88 1 21 1 325 2 64 2 214 2 361 1 41 2 
119 2 58 1 59 2 92 2 41 4 361 2 133 2 264 4 290 2 68 2 
119 1 181 4 100 1 44 1 140 1 332 1 102 2 88 1 21 1 325 2 64 2 214 2 361 1 41 2 
310 1 226 1 171 1 19 1 104 1 296 1 14 1 
207 1 177 1 176 1 24 1 351 1 
146 1 0 1 178 1 164 1 262 1 136 1 228 1 67 1 151 1 353 1 22 1 
56 1 0 1 310 1 19 2 346 1 104 2 143 1 22 1 146 1 178 1 262 1 228 1 67 1 165 1 353 1 13 1 152 1 296 1 
355 1 56 1 0 1 256 1 310 1 19 2 200 1 346 1 104 2 143 1 22 1 250 1 260 1 146 1 178 3 262 1 286 1 228 1 67 2 165 1 13 2 152 2 296 2 
56 1 0 2 256 1 104 2 346 1 143 1 212 1 260 1 146 1 262 2 178 3 286 1 67 2 152 2 13 2 355 1 156 1 310 1 19 2 200 1 22 1 250 1 228 2 296 2 
208 1 0 2 259 1 82 1 301 1 238 1 63 1 146 1 178 4 262 2 286 1 67 1 353 1 42 2 13 1 195 1 355 1 266 1 312 1 22 1 250 1 253 1 228 2 167 2 
355 1 156 1 0 3 312 1 82 1 22 1 250 1 302 1 238 1 63 1 146 1 262 3 178 4 253 1 286 1 228 3 67 1 167 2 353 1 42 2 195 1 13 1 
146 1 0 1 262 1 191 1 228 1 22 1 
218 1 0 6 191 1 121 1 45 1 127 1 22 2 23 1 146 3 179 1 262 5 178 3 65 1 316 1 228 6 117 1 67 2 353 2 13 1 43 1 
56 1 0 1 58 1 59 2 102 2 104 2 143 1 325 2 192 1 279 1 237 2 64 2 146 1 67 1 152 1 13 1 290 1 68 2 157 1 19 2 22 1 165 1 296 1 169 1 119 4 299 1 346 1 174 1 262 1 179 1 178 1 214 2 39 1 352 1 41 8 85 1 133 2 264 4 181 4 134 1 310 3 93 2 92 2 228 1 361 4 
75 1 170 1 0 1 299 1 59 1 262 1 353 1 42 1 307 1 68 1 219 1 265 1 334 1 245 1 225 1 49 1 271 1 228 1 315 1 167 1 
0 2 191 1 22 1 146 2 179 1 262 2 178 2 253 1 228 2 52 1 117 1 67 1 13 1 
156 1 0 4 22 1 146 1 283 1 262 4 179 1 164 1 178 1 228 4 67 1 353 1 151 1 
355 1 0 2 121 1 222 1 291 1 249 1 22 1 146 2 262 2 178 1 228 2 67 1 13 1 43 1 
146 1 319 1 0 1 262 1 182 1 228 1 40 1 353 1 168 1 22 1 
0 2 45 1 22 1 300 1 146 1 179 1 262 2 178 1 94 1 228 2 67 1 
355 1 218 1 0 5 45 1 22 2 146 2 283 1 164 1 262 4 179 1 178 3 65 1 228 5 67 2 151 1 353 1 
355 1 218 1 0 5 298 1 45 1 22 2 146 2 283 1 164 1 262 4 179 1 178 3 228 5 67 2 151 1 353 1 
56 1 0 1 310 1 19 2 346 1 104 2 143 1 22 1 212 1 146 1 178 1 262 1 228 1 67 1 353 1 13 1 152 1 296 1 
355 1 0 1 121 1 22 1 23 1 146 2 262 1 178 1 228 1 117 1 67 1 13 1 43 1 
281 1 221 1 310 1 132 1 297 1 
243 1 170 1 256 1 122 1 17 1 221 2 310 1 312 1 200 1 238 1 260 1 281 2 285 1 132 2 360 1 167 2 42 2 195 1 297 1 
221 1 244 1 19 1 20 1 104 1 281 1 204 1 297 1 296 1 
285 1 17 1 297 1 
147 1 78 1 136 1 91 1 
147 1 280 1 261 1 78 1 327 1 110 1 91 1 
354 1 110 1 54 1 
78 1 110 3 91 1 147 1 115 1 261 1 280 1 327 3 230 2 11 1 215 1 255 1 
145 1 147 1 280 1 261 1 78 1 327 2 205 1 110 2 91 1 
107 1 182 1 46 1 110 1 147 1 261 1 280 1 327 1 40 1 11 1 206 1 
147 1 280 1 261 1 327 1 110 1 11 1 91 1 
280 1 261 1 78 1 327 1 110 1 11 1 91 2 
77 1 110 2 276 1 91 1 147 1 261 2 280 2 327 2 11 1 72 1 
280 1 261 1 78 1 30 1 327 1 110 1 11 1 91 1 83 1 
78 1 182 1 46 1 110 2 201 1 91 1 147 1 261 1 280 1 327 2 37 1 205 1 40 2 11 1 168 1 
78 1 110 4 91 1 357 1 145 1 337 1 147 2 261 2 280 2 327 4 205 2 11 1 206 1 
147 1 280 1 261 1 78 1 327 1 110 1 11 1 91 1 
78 2 110 4 91 2 83 1 337 1 115 1 147 3 261 1 280 1 327 4 230 1 205 2 215 1 206 1 
78 1 141 1 110 2 91 1 147 1 261 1 280 1 327 2 293 1 205 1 11 1 329 1 
78 1 110 3 91 1 115 1 147 1 261 1 280 1 10 1 327 3 230 2 11 1 215 2 
73 2 147 2 240 1 62 1 
280 1 261 1 327 1 110 1 11 1 161 1 
147 1 280 1 261 1 78 1 125 1 327 2 205 1 110 2 11 1 91 1 
252 1 
147 1 280 1 261 1 78 1 327 1 110 1 11 1 91 1 
78 1 125 1 110 3 91 1 147 1 261 1 280 1 327 3 205 1 230 1 11 1 
337 1 147 1 206 1 83 1 
147 1 91 1 

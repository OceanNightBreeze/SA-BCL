#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (267,293) (267,293) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (267,293) (267,293) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (267,293) (267,293) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (267,293) (267,293) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 347 306 87 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 347 306 87 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 302 (45,58,226) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (45,58,226) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 201 261 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (45,58,226) 278 114 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 302 328 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (45,58,226) 278 110 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 302 328 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (213,340) (112,121) (112,121) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 86 69 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 262 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 262 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 262 342 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 251 163 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 203 316 47 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 203 316 47 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 203 316 47 31 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 203 316 47 31 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (152,336) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 51 74 192 197 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 245 352 236 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 245 272 236 274 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 245 352 6 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 245 352 236 274 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (213,340) (213,340) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (213,340) (112,121) (112,121) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (213,340) (112,121) (112,121) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (213,340) (112,121) (112,121) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 86 69 148 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 200 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 102 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 296 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 245 272 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (119,253) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 251 163 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 245 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 245 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 302 328 322 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 302 328 322 61 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (45,58,226) 278 333 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 267 1 11 1 15 1 301 1 293 1 206 1 94 1 22 1 9 1 52 1 
225 1 267 1 11 1 15 1 301 1 293 1 206 1 94 1 22 1 9 1 52 1 
225 1 267 1 11 1 15 1 301 1 293 1 206 1 94 1 22 1 9 1 52 1 
225 1 267 1 11 1 15 1 301 1 293 1 206 1 94 1 22 1 9 1 52 1 
283 1 120 1 80 1 223 1 207 1 225 4 11 4 138 3 231 1 142 2 232 2 15 1 301 1 216 3 347 1 218 1 306 1 21 1 52 1 
15 1 120 1 301 1 94 1 207 1 216 1 9 1 225 2 347 1 11 2 159 1 19 1 317 1 21 1 186 1 52 1 
220 1 225 3 142 1 11 3 15 2 120 1 301 2 80 1 138 1 94 1 207 1 216 2 52 1 
283 1 220 1 232 1 142 3 15 2 301 2 299 1 80 2 223 1 154 1 94 1 208 1 216 3 225 7 347 1 11 7 87 1 138 5 306 1 21 1 52 1 
283 1 220 1 232 1 142 3 15 2 301 2 299 1 80 2 223 1 154 1 94 1 208 1 216 3 225 7 347 1 11 7 87 1 138 5 306 1 21 1 52 1 
33 1 81 1 102 1 
34 1 81 1 77 2 
266 2 198 2 3 1 12 2 334 2 115 2 72 2 7 1 
282 1 260 1 1 1 24 1 3 1 55 1 309 1 312 1 7 1 137 1 244 1 266 2 313 1 268 1 292 1 12 2 334 2 318 1 141 1 95 1 276 2 341 1 70 2 115 3 72 2 195 1 128 1 73 1 198 3 235 1 149 1 49 2 135 1 280 2 259 1 150 1 281 2 
266 1 198 1 143 1 12 1 255 1 334 1 286 1 115 1 72 1 7 1 
302 1 45 1 
266 1 198 1 58 1 12 1 334 1 115 1 72 1 
226 1 91 1 214 1 166 1 117 1 
319 1 226 2 33 1 126 1 214 2 81 1 166 1 117 1 
226 1 214 1 166 1 
298 1 143 1 214 1 286 1 72 1 115 1 7 1 117 1 226 1 266 1 198 1 255 1 12 1 334 1 
81 1 
319 1 226 2 33 1 214 2 81 1 166 1 285 1 117 1 
261 1 118 1 226 2 53 1 300 1 214 2 201 1 134 1 117 1 
3 1 102 1 
3 2 242 1 115 2 72 1 196 1 266 1 198 2 12 1 334 2 
174 1 152 1 171 1 
3 1 62 1 305 1 286 1 
260 1 309 1 55 1 205 1 276 1 341 1 72 1 115 2 128 1 73 1 181 1 198 2 292 1 12 1 171 1 334 1 135 1 49 1 150 1 281 1 
181 1 266 1 198 3 3 1 12 3 334 3 115 3 72 3 
198 1 143 1 12 1 334 1 286 1 115 1 72 1 
266 1 198 1 12 1 334 1 242 1 286 1 115 1 72 1 196 1 
181 1 266 1 198 2 114 1 278 1 205 1 58 1 12 2 334 2 115 2 72 2 196 1 
181 1 198 1 328 1 12 1 302 1 334 1 115 1 72 1 
181 1 198 1 278 1 205 1 58 1 12 1 334 1 115 1 72 1 110 1 
152 1 72 2 115 2 196 1 181 1 266 1 198 2 12 2 171 1 334 2 
260 1 3 1 55 1 309 1 276 1 341 1 115 1 128 1 73 1 198 1 292 1 49 1 135 1 281 1 150 1 
260 1 3 1 55 1 276 1 115 1 323 1 128 1 73 1 124 1 198 1 292 1 49 1 135 1 281 1 150 1 
282 1 174 2 0 1 24 2 152 2 56 1 82 1 311 1 4 1 312 1 137 1 8 1 244 1 35 1 336 1 141 1 70 2 235 2 169 1 149 1 171 2 219 1 51 1 280 4 
88 1 198 1 199 1 12 1 334 1 286 1 115 1 72 1 
328 1 3 1 42 1 205 1 302 1 72 4 115 4 196 1 181 2 32 1 266 1 198 4 12 4 334 4 
88 1 198 2 143 1 12 2 334 2 286 1 115 2 72 2 
348 1 
348 1 
43 1 60 1 
43 1 60 1 
43 1 60 1 
348 1 
348 1 
348 2 43 1 60 1 
348 1 
348 1 
348 1 
348 1 
348 1 
247 1 112 1 214 2 178 1 81 1 121 1 340 1 263 2 264 2 226 2 289 1 348 2 65 2 140 2 111 2 
68 1 247 1 214 1 69 1 115 1 72 1 263 1 84 1 264 1 226 1 86 1 348 1 198 1 12 1 334 1 353 1 65 1 140 1 111 1 
283 1 347 1 21 1 
347 1 19 1 21 1 
283 2 188 1 269 1 19 1 156 1 21 3 
283 1 269 1 19 1 156 1 331 1 21 2 
283 1 269 2 19 1 156 1 21 2 
187 1 319 1 53 1 92 1 214 4 81 1 166 1 167 1 262 1 288 1 117 3 123 1 226 4 118 1 33 1 76 1 134 1 202 1 
226 1 214 1 57 1 117 1 
53 1 92 1 300 1 214 2 167 1 262 1 288 1 117 1 123 1 226 2 118 1 134 1 
53 1 92 1 300 1 214 1 342 1 167 1 262 1 288 1 123 1 226 1 118 1 134 1 
102 1 128 1 10 1 
128 1 98 1 
354 1 
128 1 150 1 
260 1 238 1 103 1 128 3 10 2 150 1 
260 1 128 1 150 1 
256 1 128 1 
0 3 24 3 176 1 113 1 56 2 136 1 194 2 311 1 168 1 85 1 130 1 235 4 219 1 63 1 279 1 246 1 280 7 
0 3 24 3 176 1 113 1 56 2 136 1 194 2 311 1 168 1 85 1 130 1 235 4 219 1 63 1 279 1 246 1 280 7 
0 3 24 3 176 1 175 1 113 1 56 2 136 1 194 2 311 1 168 1 85 1 130 1 235 4 219 1 63 1 279 1 246 1 280 7 
282 1 0 10 176 2 24 15 2 3 56 5 310 1 136 5 311 4 155 1 137 1 209 1 265 1 85 2 245 1 63 1 246 1 13 4 141 1 113 2 194 3 127 1 70 2 168 1 97 1 74 3 130 2 235 16 169 3 149 1 219 4 279 1 51 3 280 31 
282 2 0 4 24 4 176 1 240 1 56 3 310 1 136 1 311 1 137 2 85 1 63 1 141 2 113 1 190 1 194 2 70 4 168 1 130 1 235 5 149 2 219 1 279 1 280 9 
283 1 120 1 221 1 79 1 27 1 207 1 225 2 11 2 138 1 230 1 15 1 188 1 301 1 233 1 276 1 94 1 216 1 73 1 347 1 129 1 350 1 351 1 19 1 217 1 49 1 135 1 50 1 21 2 281 1 52 1 
283 1 120 1 221 1 222 1 27 1 207 1 180 1 225 3 11 3 185 1 138 2 230 1 188 1 15 1 301 1 233 1 276 1 94 1 216 1 73 1 347 1 350 1 351 1 19 1 217 1 49 1 135 1 50 1 21 2 281 1 
283 1 120 1 27 1 207 1 180 1 225 2 11 2 185 1 138 2 188 1 233 1 94 1 276 1 216 1 73 1 347 1 350 1 351 1 19 1 217 1 49 1 135 1 50 1 21 2 281 1 
14 1 15 1 301 1 55 1 25 1 222 1 153 1 233 2 94 2 276 1 252 1 128 1 345 1 73 1 225 1 11 1 184 1 350 2 217 2 135 1 49 1 150 1 281 1 
283 1 221 1 27 1 225 1 11 1 185 1 230 1 15 1 188 1 301 1 233 1 276 1 94 1 73 1 347 1 129 1 350 1 351 1 19 1 217 1 49 1 135 1 50 1 21 2 281 1 52 1 
215 1 
187 1 118 1 226 1 53 1 92 1 163 1 55 1 214 1 276 1 134 1 49 1 167 1 251 1 281 1 
319 1 214 2 284 1 166 2 193 1 285 1 122 1 30 1 16 1 226 2 290 1 
226 1 338 1 290 1 214 1 284 1 179 1 193 1 122 1 30 1 
319 1 338 1 214 2 284 1 166 2 179 1 193 1 285 1 250 1 122 1 30 1 16 1 226 2 290 1 
284 1 81 1 286 1 285 1 287 1 7 1 122 1 30 1 226 2 266 1 290 1 33 1 12 1 334 1 319 1 298 1 143 1 214 2 166 2 193 1 115 1 72 1 250 1 16 1 198 1 255 1 
187 1 189 1 53 1 214 1 284 1 193 1 167 1 122 1 30 1 226 1 118 1 158 1 290 1 258 1 134 1 327 1 203 1 66 1 
53 1 284 1 122 1 30 1 226 1 290 1 158 1 316 1 66 1 187 1 189 1 214 1 193 1 167 1 118 1 47 1 258 1 172 1 134 1 327 1 203 1 
53 1 284 1 122 1 30 1 226 1 290 1 158 1 316 1 66 1 187 1 189 1 214 1 193 1 167 1 118 1 47 1 258 1 172 1 134 1 327 1 203 1 
53 1 308 1 284 1 81 1 179 2 122 1 30 1 226 3 33 1 290 1 316 1 66 1 187 1 319 2 337 2 338 2 189 2 41 2 214 3 166 4 193 1 167 1 250 2 16 2 118 1 100 1 77 2 257 1 258 2 134 1 203 1 
53 1 284 1 179 1 122 1 30 1 31 1 226 1 290 1 158 1 316 1 66 1 187 1 189 1 338 1 214 1 166 1 193 1 167 1 250 1 16 1 118 1 47 1 258 1 172 1 134 1 327 1 203 1 
53 1 284 1 179 1 122 1 30 1 31 1 226 1 290 1 158 1 316 1 66 1 187 1 189 1 338 1 214 1 166 1 193 1 167 1 250 1 16 1 118 1 47 1 258 1 172 1 134 1 327 1 203 1 
53 1 284 1 81 1 179 2 122 1 83 1 30 1 226 3 33 1 290 1 66 1 187 1 319 2 337 2 338 2 189 2 41 2 214 3 166 4 193 1 167 1 250 2 16 2 118 1 100 1 258 2 77 2 134 1 203 1 
174 1 0 2 282 1 141 1 24 3 176 1 152 1 3 2 56 2 194 1 311 1 70 2 312 1 168 1 8 1 137 1 244 1 130 1 235 3 149 1 171 1 219 1 63 1 279 1 102 1 280 6 
0 2 282 2 174 11 24 6 2 3 152 4 3 1 56 1 136 1 224 1 311 2 312 2 137 2 244 1 209 1 313 1 245 1 315 1 109 1 13 3 318 1 141 2 144 1 70 4 99 1 74 2 235 8 149 2 169 1 171 11 219 1 51 2 280 14 
282 1 24 1 152 1 3 1 205 1 224 1 312 1 137 1 244 1 181 1 313 1 12 1 334 1 108 1 318 1 141 1 70 2 115 1 72 1 116 1 198 1 235 1 149 1 48 1 305 1 280 2 
260 1 282 2 24 1 309 1 55 1 241 1 205 1 26 1 224 1 312 2 137 2 244 2 181 1 228 1 292 1 12 1 334 1 229 1 318 1 141 2 276 1 341 1 70 4 115 2 72 1 128 1 73 1 198 2 149 2 135 1 49 1 259 1 280 1 150 1 281 1 
282 2 1 2 24 1 177 1 79 1 55 2 25 1 330 1 332 1 312 2 8 1 137 2 244 2 181 1 313 1 185 1 12 1 334 1 270 1 318 1 141 2 14 1 165 1 276 8 70 4 46 1 115 1 72 1 128 3 73 2 198 1 235 1 149 2 135 2 49 7 307 1 280 2 281 8 150 2 
0 1 174 1 282 1 24 2 152 1 56 1 224 1 311 1 312 1 137 1 244 1 266 1 210 1 12 1 334 1 141 1 70 2 72 1 115 1 196 1 74 1 198 1 235 1 149 1 169 1 171 1 219 1 51 1 280 3 
0 1 174 1 282 1 141 1 152 1 136 1 311 1 70 2 312 1 8 1 137 1 244 1 235 2 149 1 171 1 35 1 51 1 280 2 
0 1 174 1 282 1 141 1 24 2 152 1 56 1 70 2 4 1 312 1 8 1 137 1 244 1 149 1 169 1 171 1 219 1 280 2 
282 1 174 2 0 2 24 2 152 2 56 1 136 1 311 1 312 1 137 1 8 1 244 1 141 1 70 2 74 1 235 2 149 1 169 1 171 2 219 1 51 1 280 4 
0 1 174 1 282 1 141 1 152 1 136 1 311 1 70 2 312 1 137 1 244 1 235 2 149 1 171 1 270 1 35 1 51 1 280 2 
0 1 174 1 282 1 141 1 24 2 152 1 56 1 70 2 4 1 312 1 137 1 244 1 149 1 169 1 171 1 270 1 219 1 280 2 
282 1 174 2 0 2 24 2 152 2 56 1 136 1 311 1 312 1 137 1 244 1 270 1 141 1 70 2 74 1 235 2 149 1 169 1 171 2 219 1 51 1 280 4 
282 1 174 2 0 2 24 2 152 2 56 1 136 1 311 1 312 1 137 1 244 1 141 1 70 2 74 1 235 2 149 1 169 1 171 2 219 1 51 1 280 4 
260 1 282 1 24 1 3 1 309 1 55 1 312 1 137 1 244 1 313 1 292 1 318 1 141 1 276 1 341 1 70 2 115 1 128 1 73 1 198 1 235 1 149 1 135 1 49 1 280 2 259 1 150 1 281 1 
260 1 282 1 24 1 3 1 55 1 312 1 137 1 244 1 124 1 313 1 292 1 318 1 141 1 249 1 276 1 70 2 323 1 115 1 128 1 73 1 198 1 235 1 149 1 135 1 49 1 280 2 150 1 281 1 
282 1 174 2 0 2 24 2 152 2 56 1 136 1 224 1 311 1 312 1 137 1 244 1 141 1 70 2 74 1 235 2 149 1 169 1 171 2 219 1 51 1 280 4 
0 2 174 2 260 1 282 1 24 2 152 2 309 1 79 1 56 1 136 1 311 1 312 1 137 1 244 1 292 1 229 1 141 1 276 1 341 1 70 2 115 1 128 1 73 1 74 1 198 1 235 2 169 1 149 1 171 2 219 1 135 1 49 1 51 1 280 4 259 1 281 1 150 1 
0 1 282 1 174 1 24 1 152 1 136 1 224 1 311 1 312 1 137 1 244 1 266 1 12 1 334 1 141 1 70 2 72 1 115 1 196 1 74 1 198 1 235 2 169 1 149 1 132 1 171 1 219 1 51 1 280 3 
282 2 0 4 204 1 24 7 2 1 240 1 56 2 136 2 311 2 137 2 209 1 245 1 211 1 13 2 141 2 274 1 192 1 70 4 343 1 197 1 74 2 235 6 352 1 149 2 169 2 236 1 219 2 51 2 280 13 
282 1 141 1 204 1 24 2 2 1 240 1 274 1 343 1 70 2 137 1 235 2 149 1 352 2 245 1 236 2 13 1 280 4 
282 2 0 3 204 3 24 11 2 3 240 1 56 1 136 2 311 2 6 1 137 2 209 1 245 3 211 1 272 1 13 4 141 2 274 1 192 1 70 4 343 1 74 2 17 1 235 10 352 2 149 2 169 2 236 1 219 2 51 2 280 21 
282 2 0 4 204 2 24 9 2 2 240 1 56 2 136 2 311 2 6 1 137 2 209 1 245 2 211 1 13 3 141 2 274 1 192 1 70 4 343 1 74 2 17 1 235 8 352 2 149 2 169 2 236 1 219 2 51 2 280 17 
282 1 0 1 204 1 24 4 176 1 2 1 240 1 56 1 311 1 137 1 245 1 63 1 13 1 141 1 274 1 194 1 70 2 343 1 168 1 130 1 235 5 352 1 149 1 219 1 236 1 279 1 280 9 
348 1 340 1 65 1 263 1 213 1 264 1 111 1 
86 1 
348 1 106 1 65 1 263 1 264 1 111 1 
247 1 112 1 214 1 178 1 81 1 121 1 340 1 263 1 264 1 226 1 289 1 348 1 65 1 140 2 111 1 
247 1 112 1 214 1 178 1 81 1 121 1 340 1 263 1 264 1 226 1 289 1 348 1 65 1 140 2 111 1 
247 1 112 1 214 1 178 1 81 1 121 1 340 1 263 1 264 1 226 1 289 1 348 1 65 1 140 2 111 1 
170 1 
170 1 
200 1 
200 1 
325 1 344 1 
68 1 214 1 178 1 69 1 263 1 117 1 84 1 264 1 226 1 289 1 86 1 348 1 148 1 353 1 65 1 140 1 111 1 
170 1 
200 1 
282 1 1 2 24 1 54 1 330 1 224 1 312 1 137 1 244 1 313 1 291 1 334 2 318 1 141 1 321 1 165 1 276 2 70 2 115 2 128 1 73 1 346 1 198 2 235 1 149 1 135 1 49 2 101 1 280 2 150 1 281 2 
283 1 188 1 79 1 233 1 276 2 146 1 29 1 73 1 347 1 185 1 19 1 351 1 78 1 135 1 49 2 50 1 21 2 230 1 281 2 
283 1 188 1 233 1 276 1 146 1 73 1 347 1 185 1 19 1 351 1 304 1 49 1 135 1 50 1 21 2 230 1 281 1 
14 1 55 1 25 1 233 1 276 1 128 1 73 1 18 1 184 1 78 1 135 1 49 1 150 1 281 1 
283 1 188 1 233 1 276 1 146 1 29 1 73 1 347 1 185 1 19 1 351 1 78 1 49 1 135 1 50 1 21 2 230 1 281 1 
326 1 
33 1 81 1 119 1 167 1 66 1 102 1 253 1 
187 1 118 1 158 1 53 1 134 1 327 1 66 1 167 1 
260 1 187 1 53 1 55 1 276 1 167 1 98 1 128 2 73 2 118 1 160 1 296 1 134 1 36 1 135 1 49 1 103 1 139 1 150 1 281 1 
187 1 118 1 53 1 2 1 245 1 134 1 66 1 167 1 13 1 272 1 
187 1 297 1 53 1 176 1 214 1 311 2 167 1 157 2 226 1 118 1 130 1 219 1 172 1 134 1 279 1 66 2 173 1 
187 1 118 1 33 1 53 1 81 1 134 1 167 1 66 1 253 1 
81 1 311 1 167 1 74 1 34 1 90 1 169 1 133 1 77 2 219 1 66 2 51 1 
226 1 319 1 33 1 214 1 81 1 166 1 
187 1 118 1 53 1 92 1 163 1 55 1 134 1 276 1 49 1 237 1 167 1 251 1 281 1 
282 1 260 1 24 1 3 1 55 1 309 1 7 1 312 1 137 1 244 1 266 2 292 1 12 2 334 2 318 1 141 1 276 1 341 1 70 2 115 3 72 2 195 1 128 1 73 1 198 3 149 1 49 1 135 1 280 1 259 1 281 1 150 1 
187 1 53 1 92 1 298 1 143 1 81 1 286 1 115 1 72 1 167 1 7 1 266 1 118 1 33 1 198 1 12 1 255 1 334 1 134 1 
89 1 65 1 264 1 
89 1 65 1 264 1 
349 1 325 1 271 1 65 1 264 1 
89 1 65 1 264 1 
294 1 65 1 264 1 
294 1 65 1 264 1 
294 1 65 1 264 1 
65 1 264 1 
348 1 
0 3 282 2 141 2 24 4 176 1 56 2 310 1 136 1 194 1 311 1 70 4 168 1 137 2 130 1 235 4 149 2 219 1 63 1 279 1 280 8 
0 2 24 3 176 1 56 2 194 1 311 1 168 1 130 1 235 3 63 1 219 1 279 1 102 1 280 6 
0 2 282 1 141 1 151 1 24 2 56 1 136 1 311 1 70 2 137 1 74 1 235 2 169 1 149 1 219 1 51 1 280 4 
24 1 2 1 235 1 245 1 13 1 280 2 
0 4 282 1 176 1 24 9 2 2 56 3 310 1 136 1 311 3 137 1 209 1 63 1 13 2 141 1 144 1 194 1 70 2 168 1 74 2 99 1 130 1 235 9 169 2 149 1 219 3 279 1 51 2 280 18 
24 1 13 1 280 1 
2 1 235 1 280 1 
141 1 282 1 0 3 151 1 24 3 56 2 136 1 311 1 70 2 137 1 74 1 235 3 149 1 169 1 296 1 219 1 51 1 280 6 
282 1 0 2 23 1 24 6 2 1 240 1 56 1 136 1 311 2 137 1 245 1 161 1 13 1 272 1 38 1 141 1 275 1 70 2 74 2 235 6 149 1 169 2 219 2 51 2 280 12 
0 2 24 3 176 1 56 1 136 1 311 1 130 1 235 3 219 1 279 1 280 6 
0 2 282 1 141 1 176 1 24 2 56 1 310 1 136 1 70 2 147 1 168 1 137 1 130 1 235 1 149 1 63 1 280 3 
141 1 282 1 0 5 297 1 176 2 24 5 240 1 56 3 136 2 311 2 70 2 137 1 130 2 235 5 149 1 219 2 279 1 280 10 
282 1 141 1 0 1 240 1 136 1 311 1 70 2 137 1 235 2 149 1 51 1 280 2 
0 2 282 1 141 1 24 2 240 1 56 1 136 1 311 1 70 2 137 1 74 1 235 2 169 1 149 1 219 1 51 1 280 4 
282 3 141 3 0 2 24 2 176 1 240 1 310 1 56 1 136 1 70 6 147 1 137 3 130 1 235 1 149 3 211 1 280 3 
282 5 0 12 151 1 176 3 24 18 2 3 240 1 310 2 56 7 136 5 155 1 311 5 137 5 209 1 245 1 211 1 63 1 13 4 141 5 194 1 127 1 70 10 147 1 168 1 97 1 74 3 130 3 235 16 149 5 169 3 219 5 279 2 51 3 280 34 
282 1 0 2 24 4 176 1 2 1 240 1 56 2 311 1 137 1 245 1 63 1 13 1 272 1 141 1 194 1 70 2 168 1 130 1 235 4 149 1 219 1 279 1 280 8 
282 2 0 3 151 1 176 1 24 5 2 1 240 1 56 2 136 1 311 2 137 2 209 1 245 1 63 1 13 2 272 1 141 2 194 1 70 4 168 1 74 1 130 1 235 6 149 2 219 1 279 1 51 1 280 11 
141 1 282 1 24 1 2 1 240 1 235 1 149 1 245 1 70 2 13 1 272 1 280 2 137 1 
282 2 0 1 23 1 151 1 24 4 2 1 240 1 56 1 311 2 137 2 245 1 161 1 13 1 272 1 38 1 141 2 275 1 70 4 74 2 235 7 149 2 169 1 219 1 51 2 280 11 
282 1 0 2 24 4 176 1 2 1 240 1 56 2 311 1 137 1 245 1 63 1 13 1 272 1 141 1 194 1 70 2 168 1 130 1 235 4 149 1 219 1 279 1 280 8 
141 1 282 1 24 1 2 1 240 1 235 1 149 1 245 1 70 2 13 1 272 1 280 2 137 1 
23 1 282 3 0 1 151 1 24 5 2 1 240 1 56 1 310 1 311 2 137 3 245 1 161 1 13 1 272 1 38 1 141 3 275 1 70 6 74 2 235 7 149 3 169 1 219 1 51 2 280 12 
23 1 282 3 0 4 24 5 2 1 240 1 56 2 310 1 136 2 311 2 137 3 245 1 211 1 161 1 13 1 272 1 38 1 141 3 275 1 70 6 74 2 235 7 149 3 169 1 219 1 51 2 280 12 
0 6 24 4 176 3 56 3 136 3 311 1 168 2 130 3 235 3 219 1 63 1 279 1 280 7 
23 1 282 3 0 1 24 5 2 1 240 1 56 1 310 1 311 2 137 3 245 1 211 1 161 1 13 1 272 1 38 1 141 3 275 1 70 6 74 2 235 7 149 3 169 1 219 1 51 2 280 12 
328 1 302 1 322 1 
93 1 328 1 61 1 75 1 302 1 322 1 96 1 324 1 
14 1 55 1 25 1 276 1 135 1 49 1 102 1 128 1 73 1 150 1 281 1 
260 1 3 1 55 1 309 1 276 1 72 1 115 2 128 1 73 1 181 1 198 2 292 1 12 1 334 1 49 1 135 1 150 1 281 1 
260 2 3 1 309 1 105 1 286 1 125 1 181 1 292 1 12 2 334 2 276 1 115 2 72 1 128 3 73 1 198 2 277 1 199 1 256 1 135 1 49 1 281 1 150 2 
260 2 3 1 105 1 276 2 286 1 72 1 115 2 128 3 73 1 181 1 125 1 124 1 198 2 277 1 292 1 256 1 199 1 12 2 334 2 49 2 135 1 20 1 150 2 281 2 
260 1 55 1 81 1 286 1 7 1 10 1 125 1 266 1 226 2 33 1 12 1 334 1 295 1 212 1 298 1 143 1 214 2 166 1 339 1 276 2 115 1 72 1 128 4 98 1 73 1 198 1 277 1 255 1 256 1 135 1 49 2 281 2 150 1 
260 1 55 1 214 2 81 1 166 1 276 3 98 1 128 4 73 1 10 1 125 1 226 2 33 1 277 1 256 1 314 1 212 1 49 3 135 1 20 1 150 1 281 3 
177 1 276 1 135 1 49 1 73 1 281 1 
1 1 260 1 320 1 177 1 79 1 55 2 248 1 165 1 59 1 276 7 332 1 46 1 128 3 73 3 185 1 49 6 135 2 307 1 103 1 281 7 150 2 
174 1 0 2 260 1 282 2 24 3 176 1 152 1 3 2 79 1 309 1 56 2 26 1 224 1 311 1 312 2 137 2 244 2 181 1 292 1 12 1 63 1 334 1 229 1 141 2 194 1 276 1 341 1 70 4 115 2 72 1 168 1 128 1 73 1 130 1 198 2 235 3 149 2 171 1 219 1 135 1 49 1 279 1 101 1 280 6 259 1 150 1 281 1 
53 1 176 1 329 1 55 1 311 2 286 1 7 1 157 2 266 1 226 1 12 1 334 1 66 3 187 1 297 1 298 1 143 1 214 1 276 1 115 1 72 1 167 2 117 1 253 1 118 1 198 1 130 1 255 1 219 2 134 1 49 1 119 1 279 1 237 1 173 1 281 1 
260 1 79 1 177 1 276 2 128 2 10 1 73 2 160 1 49 2 135 1 103 1 281 2 150 1 
14 1 239 1 55 1 79 1 25 1 276 4 128 1 73 1 49 4 135 1 20 1 281 4 150 1 
260 1 248 1 59 1 276 2 243 1 128 1 73 2 125 1 227 1 182 1 49 2 135 1 281 2 150 1 
347 1 19 1 55 1 276 1 135 1 49 1 50 1 21 1 73 1 281 1 
54 1 79 1 165 1 276 2 128 1 73 1 185 1 49 2 135 1 281 2 150 1 
14 1 239 1 55 1 79 1 25 1 165 1 276 5 46 1 128 3 73 2 125 1 49 4 135 2 307 1 281 5 150 2 
14 1 239 1 55 1 79 1 25 1 165 1 276 5 46 1 128 3 73 2 125 1 49 4 135 2 281 5 39 1 150 2 
260 1 3 1 55 1 276 1 72 1 115 2 128 1 73 1 181 1 124 1 198 2 292 1 12 1 334 1 49 1 135 1 150 1 281 1 
260 1 320 1 248 1 59 1 276 1 128 1 73 2 125 1 49 1 135 1 103 1 281 1 150 1 
3 1 164 1 131 1 145 1 162 1 
67 1 226 1 333 1 214 1 278 1 164 1 58 1 131 1 145 1 335 1 117 1 162 1 
321 1 145 1 115 1 346 1 198 1 291 1 131 1 334 1 162 1 
333 1 335 1 162 1 
120 1 207 1 102 1 216 1 
225 1 11 1 15 1 120 1 301 1 207 1 216 1 
225 1 350 1 94 1 
15 1 120 1 301 1 104 1 191 1 44 1 207 1 216 1 225 3 11 3 52 1 186 2 
232 1 15 1 120 1 301 1 207 1 216 1 225 2 11 2 218 1 138 1 
283 1 225 1 347 1 142 1 11 1 15 1 301 1 223 1 21 1 216 1 52 1 
225 1 11 1 15 1 301 1 207 1 216 1 52 1 
225 1 11 1 15 1 120 1 301 1 207 2 52 1 
15 2 301 2 207 1 303 1 216 1 225 2 11 2 64 1 273 1 52 1 
142 1 15 1 120 1 301 1 80 1 154 1 207 1 208 1 216 2 225 3 11 3 138 2 52 1 
283 1 15 1 188 1 120 1 301 1 207 1 216 1 225 2 347 1 11 2 19 1 138 1 21 2 37 1 52 1 
231 1 232 1 142 1 15 1 120 1 301 1 80 1 207 1 216 2 225 3 11 3 218 1 138 2 52 1 
225 1 11 1 15 1 120 1 301 1 207 1 216 1 52 1 
142 1 15 1 120 2 301 1 104 1 80 1 44 1 207 2 216 3 225 4 11 4 218 1 138 2 186 1 
15 1 120 1 301 1 299 1 207 1 28 1 216 1 225 2 11 2 183 1 138 1 52 1 
15 1 120 1 301 1 104 2 44 1 207 1 71 1 216 1 225 3 11 3 52 1 186 2 
40 2 107 1 5 1 216 2 
225 1 234 1 11 1 15 1 301 1 52 1 
225 2 11 2 15 1 120 1 301 1 138 1 207 1 208 1 216 1 52 1 
254 1 
225 1 11 1 15 1 120 1 301 1 207 1 216 1 52 1 
225 3 11 3 15 1 120 1 301 1 138 1 207 1 208 1 216 1 186 1 52 1 
225 1 142 1 11 1 80 1 138 1 216 1 
207 1 216 1 

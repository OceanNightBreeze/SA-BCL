#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 181 5 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 181 5 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (134,228) (134,228) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (134,228) (134,228) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (134,228) (134,228) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (134,228) (134,228) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (32,82,141,247,288) (132,256) (132,256) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 337 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 131 233 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 131 51 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 187 111 159 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 147 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 131 262 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 337 279 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 264 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (37,57,200,320) (37,57,200,320) (126,249,325) (126,249,325) (126,249,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (37,57,200,320) (37,57,200,320) (126,249,325) (126,249,325) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (37,57,200,320) (37,57,200,320) (126,249,325) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (37,57,200,320) (37,57,200,320) (126,249,325) (126,249,325) (126,249,325) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 131 175 255 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 131 51 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 190 319 188 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 190 250 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (237,238) 278 242 (49,78) 108 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 131 175 255 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 31 308 (137,315) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 31 (237,238) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 190 319 188 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (237,238) 278 242 (49,78) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 190 250 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 190 319 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 190 47 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (37,57,200,320) (37,57,200,320) 227 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | RETURN | 5491 | return null
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
102 7 320 2 299 1 57 5 58 1 63 1 200 2 5 1 244 3 133 1 201 1 246 3 9 1 115 1 181 1 272 2 98 1 35 1 309 1 275 1 37 7 
102 7 320 2 299 1 57 5 58 1 63 1 200 2 5 1 244 3 133 1 201 1 246 3 9 1 115 1 181 1 272 2 98 1 35 1 309 1 275 1 37 7 
134 1 104 1 102 1 320 1 168 1 228 1 85 1 63 1 275 1 37 1 200 1 
134 1 104 1 102 1 320 1 168 1 228 1 85 1 63 1 275 1 37 1 200 1 
134 1 104 1 102 1 320 1 168 1 228 1 85 1 63 1 275 1 37 1 200 1 
134 1 104 1 102 1 320 1 168 1 228 1 85 1 63 1 275 1 37 1 200 1 
102 2 320 1 57 1 200 1 244 1 133 1 201 1 246 1 115 1 181 1 98 1 35 1 275 1 37 2 
82 1 102 1 104 1 320 1 195 1 63 1 200 1 132 1 201 1 133 1 275 1 256 1 37 1 
102 3 320 2 57 1 63 1 156 1 200 2 244 1 246 2 330 1 272 1 309 1 275 1 37 3 
30 1 
289 1 254 2 326 1 
193 2 68 2 212 1 93 2 15 1 265 2 119 2 46 2 
298 1 212 1 265 2 3 1 174 2 46 2 8 1 7 2 10 1 11 1 93 3 95 1 14 1 15 1 100 1 18 2 19 1 142 1 56 1 193 2 194 1 27 1 28 2 197 1 152 1 239 1 238 1 157 1 112 1 285 1 68 3 71 1 206 2 208 1 162 1 335 1 119 2 
193 1 265 1 46 1 68 1 93 1 116 1 15 1 119 1 338 1 
193 2 107 1 265 1 46 1 64 1 48 1 68 2 93 2 116 1 289 1 96 1 252 1 15 1 209 1 338 1 119 1 186 1 277 1 
193 2 107 1 265 2 218 1 46 2 48 1 68 2 93 2 116 1 289 1 96 1 15 1 77 1 209 1 338 1 119 2 186 1 277 1 
84 1 97 1 77 1 337 1 218 1 
233 1 84 1 97 1 77 1 218 1 131 1 
97 1 77 1 218 1 
193 1 84 1 265 1 218 1 46 1 68 1 93 1 116 1 15 1 77 1 209 1 338 1 119 1 
289 1 
84 1 51 1 97 1 77 1 218 1 131 1 
111 1 159 1 84 2 61 1 97 1 322 1 77 3 139 1 155 1 218 3 187 1 
30 1 
193 2 212 2 167 1 265 1 46 1 68 2 93 2 291 1 119 1 
292 1 54 1 122 1 
18 1 194 1 212 1 152 1 3 1 238 1 157 1 7 1 283 1 285 1 11 1 68 1 93 1 206 1 71 1 14 1 
18 1 297 1 193 1 194 1 152 1 3 1 265 1 238 1 157 1 46 1 7 1 11 1 285 1 204 1 68 2 93 2 71 1 206 1 14 1 122 1 
232 1 297 1 193 4 212 1 2 1 167 1 265 4 46 4 48 1 204 2 68 4 93 4 177 1 119 1 
193 1 68 1 93 1 265 1 338 1 46 1 
193 3 204 1 68 3 212 1 93 3 265 3 119 1 46 3 
193 1 68 1 93 1 265 1 338 1 46 1 
48 1 193 1 68 1 93 1 167 1 291 1 265 1 119 1 46 1 
297 1 193 2 147 1 107 1 167 1 265 2 46 2 48 1 204 1 68 2 93 2 138 1 277 1 119 1 186 1 
232 1 193 2 212 1 166 1 265 1 46 1 64 1 48 1 204 1 68 2 93 2 
48 1 193 1 297 1 68 1 204 1 93 1 70 1 107 1 265 1 138 1 277 1 186 1 46 1 
193 2 167 1 265 2 46 2 204 1 68 2 93 2 54 1 119 1 122 1 
18 1 194 1 212 1 152 1 3 1 238 1 157 1 7 1 285 1 11 1 68 1 93 1 206 1 71 1 14 1 
232 1 18 1 194 1 212 1 152 1 3 1 86 1 157 1 7 1 48 1 285 1 11 1 68 1 93 1 206 1 71 1 137 1 
142 2 56 1 144 1 27 1 28 2 197 1 151 1 62 1 239 1 174 2 10 1 292 1 335 1 295 1 122 1 101 1 
48 1 193 1 68 1 93 1 107 1 265 1 210 1 46 1 
226 1 150 1 
226 1 150 1 
327 1 76 1 
327 1 76 1 
327 1 76 1 
328 1 226 1 150 1 
327 1 34 1 76 1 226 2 150 2 163 1 
42 1 226 1 150 1 
328 1 226 1 150 1 
328 1 226 1 150 1 
226 1 150 1 36 1 
226 1 150 1 36 1 
226 1 150 1 36 1 
83 1 42 1 212 1 165 1 265 2 268 1 218 1 46 2 93 2 13 1 226 1 225 1 16 1 310 1 22 1 55 1 193 2 280 1 150 1 154 1 68 2 253 1 77 1 121 1 
258 1 22 2 125 2 55 2 83 3 165 1 280 2 150 2 304 1 218 2 89 1 161 1 180 1 289 1 253 2 226 2 77 2 163 1 39 1 
133 1 201 1 115 1 
133 1 201 1 195 1 
201 3 143 1 115 2 195 1 207 1 323 1 
201 2 143 1 115 1 195 1 273 1 323 1 
201 2 143 2 115 1 195 1 323 1 
84 1 262 1 97 1 77 1 218 1 131 1 
84 2 279 1 214 1 97 1 77 2 182 1 337 1 218 2 
84 2 127 1 265 1 266 1 130 1 218 3 46 1 219 2 306 1 93 1 96 1 15 1 16 1 139 1 312 1 316 2 103 2 193 1 192 1 318 1 144 1 61 1 62 1 322 1 155 1 243 1 326 2 68 1 116 1 289 3 77 3 209 1 254 4 118 3 338 1 119 1 
84 1 127 1 264 1 266 1 130 1 218 2 219 2 306 1 16 1 139 1 312 1 316 2 103 2 192 1 318 1 144 1 61 1 62 1 322 1 155 1 243 1 326 2 289 2 77 2 254 4 118 3 
30 1 
194 1 176 1 
184 1 
194 1 71 1 152 1 
194 1 231 1 
194 1 152 1 
88 1 194 3 71 1 224 2 152 1 6 1 
142 3 21 2 0 3 128 1 301 1 28 7 62 1 169 1 281 2 243 1 305 1 67 1 136 1 229 1 164 1 100 4 99 1 
142 3 21 2 0 3 128 1 301 1 28 7 62 1 169 1 281 2 243 1 305 1 67 1 136 1 229 1 164 1 100 4 99 1 
142 3 21 2 0 3 128 1 301 1 28 7 62 1 169 1 45 1 281 2 243 1 305 1 67 1 136 1 229 1 164 1 100 4 99 1 
0 2 301 1 128 1 302 1 169 1 174 2 135 1 305 1 270 1 90 1 229 2 100 3 99 1 142 3 20 1 21 1 56 1 105 1 149 1 28 6 197 1 281 1 239 1 335 1 
0 4 301 1 128 1 169 1 303 1 174 4 305 1 270 1 136 1 229 1 100 5 142 4 21 3 56 2 148 1 28 9 62 1 197 2 239 2 281 2 243 1 67 1 335 2 164 1 
126 1 1 1 3 1 173 1 133 1 7 1 223 1 275 1 189 1 18 1 102 1 57 1 320 1 195 1 63 1 200 1 325 1 157 1 282 1 201 2 249 1 115 1 206 1 75 1 207 1 257 1 37 2 
126 1 1 1 3 1 173 1 133 1 7 1 50 1 223 1 189 1 18 1 317 1 102 2 320 1 57 2 195 1 109 1 63 1 200 1 325 1 157 1 201 2 115 1 206 1 75 1 207 1 257 1 37 3 
18 1 102 1 317 1 57 2 195 1 1 1 3 1 63 1 157 1 325 1 133 1 201 2 7 1 50 1 115 1 206 1 223 1 75 1 207 1 37 2 257 1 189 1 
1 2 217 1 3 1 7 1 223 2 18 1 102 1 191 1 194 1 320 1 60 1 152 1 109 1 153 1 240 1 63 2 157 1 200 1 285 1 332 1 206 1 37 1 257 2 
126 1 1 1 3 1 173 1 133 1 7 1 223 1 275 1 189 1 18 1 317 1 102 1 57 1 320 1 195 1 63 1 200 1 325 1 157 1 201 2 249 1 115 1 206 1 75 1 207 1 257 1 37 2 
307 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
316 1 41 1 234 1 61 1 44 1 322 1 267 1 218 1 178 1 251 1 74 1 77 1 118 1 139 1 
18 1 316 1 61 1 44 1 322 1 130 1 218 1 131 1 175 1 7 1 113 1 285 1 206 1 97 2 77 1 255 1 118 1 139 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
51 1 97 1 77 1 218 1 131 1 
316 1 41 1 234 1 61 1 44 1 322 1 267 1 218 1 69 1 251 1 74 1 77 1 118 1 139 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
41 1 234 1 251 1 74 1 77 1 267 1 218 1 
10 1 56 1 27 1 30 1 197 1 335 1 239 1 174 2 101 1 
142 2 318 2 56 1 43 1 105 2 26 1 27 1 28 8 302 2 197 1 239 1 243 2 174 2 245 1 10 1 284 1 94 1 292 7 335 1 54 5 312 2 339 1 100 6 122 7 
297 1 212 1 3 1 265 1 46 1 174 2 7 1 10 1 11 1 93 2 94 1 14 1 54 1 100 1 18 1 19 1 142 1 193 1 56 1 194 1 106 1 27 1 28 2 152 1 197 1 238 1 239 1 157 1 285 1 283 1 331 1 68 2 204 1 71 1 206 1 335 1 162 1 336 1 
260 1 297 1 129 1 3 1 265 1 46 1 174 4 7 1 10 2 11 1 221 1 49 1 93 2 94 1 14 1 312 1 100 3 18 1 142 2 318 1 193 1 56 2 194 1 27 2 29 1 28 5 152 1 197 2 238 1 239 2 243 1 157 1 112 1 285 1 68 2 204 1 71 1 206 1 292 2 335 2 162 1 122 2 
265 1 3 2 172 1 46 1 174 4 7 4 8 1 10 2 93 1 188 1 101 1 100 1 18 4 19 1 190 1 142 1 319 1 193 1 56 2 191 1 194 3 145 1 146 1 27 2 28 2 197 2 235 1 152 3 239 2 157 3 282 1 285 2 68 1 204 1 332 1 71 1 206 4 72 1 293 1 335 2 162 1 
193 1 68 1 93 1 167 1 265 1 183 1 119 1 46 1 
40 1 56 1 318 1 27 1 28 2 197 1 239 1 243 1 174 2 10 1 292 1 335 1 122 1 101 1 100 2 
142 2 56 1 144 1 27 1 28 2 197 1 151 1 62 1 239 1 174 2 10 1 292 1 335 1 122 1 101 1 
56 1 318 1 27 1 28 2 197 1 239 1 243 1 174 2 10 1 292 1 335 1 312 1 122 1 101 1 100 2 
40 1 56 1 318 1 27 1 28 2 235 1 197 1 239 1 243 1 174 2 10 1 292 1 335 1 122 1 100 2 
142 2 56 1 144 1 27 1 28 2 235 1 197 1 151 1 62 1 239 1 174 2 10 1 292 1 335 1 122 1 
56 1 318 1 27 1 28 2 235 1 197 1 239 1 243 1 174 2 10 1 292 1 335 1 312 1 122 1 100 2 
56 1 318 1 27 1 28 2 197 1 239 1 243 1 174 2 10 1 292 1 335 1 312 1 122 1 100 2 
212 1 3 1 174 2 7 1 10 1 11 1 93 1 14 1 100 1 18 1 19 1 142 1 56 1 194 1 27 1 28 2 152 1 197 1 238 1 239 1 157 1 112 1 285 1 68 1 71 1 206 1 335 1 162 1 
212 1 3 1 86 1 174 2 7 1 48 1 10 1 11 1 93 1 137 1 140 1 232 1 18 1 142 1 56 1 194 1 27 1 28 1 152 1 197 1 239 1 157 1 285 1 68 1 71 1 206 1 335 1 162 1 
56 1 318 1 27 1 28 2 197 1 239 1 243 1 174 2 10 1 94 1 292 1 335 1 312 1 122 1 100 2 
3 1 174 2 7 1 10 1 11 1 221 1 93 1 14 1 312 1 100 2 18 1 318 1 56 1 194 1 27 1 28 2 152 1 197 1 238 1 239 1 243 1 157 1 282 1 112 1 68 1 71 1 206 1 292 1 335 1 122 1 
0 1 128 1 167 1 265 1 174 2 46 1 10 1 93 1 94 1 54 1 312 1 100 2 56 1 193 1 318 1 27 1 28 2 197 1 239 1 243 1 160 1 68 1 335 1 292 1 119 1 122 1 
123 1 0 4 128 2 302 2 216 1 4 4 174 4 220 1 222 1 12 1 276 1 312 2 100 10 21 2 20 2 142 10 56 2 318 2 105 2 144 2 196 2 148 1 28 20 62 2 197 2 324 1 239 2 243 2 114 1 335 2 80 1 
123 1 302 2 216 2 4 4 174 2 220 1 276 1 312 1 100 8 142 8 20 2 56 1 318 1 105 2 144 1 196 1 148 1 28 16 62 1 197 1 324 2 239 1 243 1 114 1 335 1 80 1 
123 1 0 1 128 1 302 3 216 1 4 4 174 4 220 1 12 1 276 1 312 1 100 9 20 3 142 9 23 1 56 2 318 1 105 3 144 1 196 1 148 1 28 18 62 1 197 2 324 2 239 2 243 1 114 1 335 2 80 1 
123 1 0 2 128 1 302 3 216 1 4 4 174 4 220 1 12 1 276 1 312 1 100 9 21 1 20 3 142 9 23 1 56 2 318 1 105 3 144 1 196 1 148 1 28 18 62 1 197 2 324 2 239 2 243 1 114 1 335 2 80 1 
123 1 0 6 128 1 302 2 216 1 169 4 4 4 174 2 305 4 220 1 136 4 276 1 312 1 100 20 20 2 142 16 21 5 318 1 56 1 105 2 144 1 196 1 148 1 28 36 62 5 197 1 281 4 324 1 239 1 243 5 67 4 114 1 335 1 164 4 80 1 
3 1 172 1 174 2 8 2 7 2 10 1 93 2 94 1 274 1 185 1 100 1 18 2 314 1 19 1 190 1 142 1 193 2 56 1 194 2 145 1 146 1 27 1 28 2 152 2 197 1 239 1 157 2 250 1 68 2 71 1 206 2 72 1 334 1 293 1 335 1 162 1 
81 1 261 1 3 1 173 1 7 2 133 1 189 1 18 2 317 1 195 1 157 1 282 1 201 2 329 1 206 2 115 1 75 1 207 1 257 1 
18 1 317 1 195 1 3 1 157 1 173 1 133 1 201 2 7 1 329 1 271 1 115 1 206 1 75 1 207 1 257 1 189 1 
18 1 259 1 81 1 191 1 194 1 152 1 3 1 153 1 157 1 7 1 285 1 332 1 206 1 257 1 
18 1 317 1 81 1 261 1 195 1 3 1 157 1 173 1 133 1 201 2 7 1 329 1 115 1 206 1 75 1 207 1 257 1 189 1 
296 1 
212 1 265 2 3 1 174 2 46 2 7 1 10 1 11 1 93 3 14 1 15 1 18 1 142 1 56 1 193 2 194 1 27 1 28 1 197 1 152 1 238 1 239 1 157 1 112 1 285 1 68 3 206 1 71 1 208 1 162 1 335 1 119 2 
316 2 103 2 61 1 44 1 322 1 281 1 130 1 326 2 219 2 113 1 96 2 289 4 254 4 139 1 118 1 
30 1 
316 1 321 1 61 1 44 1 322 1 131 1 326 1 69 1 97 1 254 1 53 1 139 1 118 1 
44 1 3 1 130 1 7 1 88 1 176 2 224 1 97 1 139 1 18 1 278 1 194 4 61 1 152 1 108 1 322 1 237 1 157 2 242 1 285 1 206 1 71 1 333 1 78 1 118 1 
215 1 302 1 265 1 44 1 130 1 46 1 219 2 93 1 96 1 15 1 139 1 316 2 103 2 20 1 193 1 105 1 61 1 322 1 326 1 113 1 66 1 68 1 116 1 289 2 209 1 254 2 118 2 338 1 119 1 80 1 211 1 
215 1 44 1 265 1 169 1 218 1 46 1 305 1 93 1 15 1 139 1 316 1 193 1 61 1 322 1 243 1 158 1 65 1 67 1 68 1 116 1 77 1 209 1 118 1 338 1 119 1 
87 1 316 1 289 1 96 1 290 1 61 1 322 1 44 1 118 1 139 1 
316 5 103 5 318 2 144 2 215 2 29 1 62 2 243 2 326 5 219 5 66 1 289 5 254 10 118 5 312 2 
97 1 131 1 
18 1 316 1 61 1 44 1 322 1 130 1 131 1 7 1 175 1 113 1 285 1 206 1 97 2 255 1 118 1 139 1 311 1 
248 1 280 1 253 1 
180 1 280 1 253 1 225 1 120 1 
248 1 280 1 253 1 
248 1 280 1 253 1 
280 1 253 1 269 1 
280 1 253 1 269 1 
280 1 253 1 269 1 
280 1 253 1 
226 1 150 1 
142 4 21 2 0 3 56 2 128 1 28 8 62 1 197 2 169 1 281 1 239 2 243 1 174 4 305 1 67 1 270 1 136 1 335 2 164 1 100 4 
30 1 
21 1 142 2 0 2 56 1 318 1 144 1 128 1 28 4 62 1 197 1 239 1 243 1 171 1 174 2 335 1 312 1 100 2 
142 1 20 1 105 1 28 2 302 1 100 1 
0 6 43 1 128 3 302 2 169 2 174 2 305 2 270 1 136 1 312 2 100 11 21 3 142 11 318 2 56 1 105 2 144 2 28 22 62 4 197 1 281 1 239 1 243 4 245 1 65 1 67 2 284 1 335 1 164 1 
142 1 28 1 302 1 
105 1 28 1 100 1 
142 3 21 2 56 1 318 1 0 3 144 1 128 1 29 1 28 6 197 1 62 1 239 1 243 1 171 1 174 2 335 1 312 1 100 3 
20 1 142 1 56 1 105 1 148 1 302 1 28 2 197 1 239 1 174 2 335 1 100 1 80 1 
142 3 21 1 0 2 128 1 28 6 62 1 169 1 243 1 305 1 67 1 100 3 
21 1 142 2 0 2 56 1 128 1 28 3 197 1 169 1 239 1 174 2 305 1 135 1 270 1 136 1 335 1 164 1 100 1 
21 1 142 3 0 1 28 5 62 1 169 1 243 1 305 1 65 1 67 1 100 2 
56 1 318 1 0 1 128 1 148 1 28 2 197 1 239 1 243 1 174 2 335 1 100 2 
21 1 142 2 0 2 56 1 318 1 144 1 128 1 148 1 28 4 62 1 197 1 239 1 243 1 174 2 335 1 312 1 100 2 
142 2 21 1 56 3 0 2 128 1 28 3 148 1 197 3 169 1 239 3 174 6 135 1 305 1 270 1 12 1 335 3 100 1 
0 4 128 2 302 1 169 2 171 1 174 8 135 1 305 2 270 1 136 1 12 1 100 5 142 7 20 1 21 2 56 4 105 1 149 1 148 1 28 12 62 1 197 4 239 4 243 1 67 1 65 1 335 4 164 1 
0 2 302 1 169 1 174 2 305 1 136 1 100 4 142 4 20 1 21 2 56 1 105 1 28 8 148 1 62 1 197 1 281 1 239 1 243 1 67 1 335 1 164 1 80 1 
0 2 302 1 169 1 171 1 174 4 305 1 136 1 100 4 142 4 20 1 21 2 56 2 105 1 28 8 148 1 62 1 197 2 281 1 239 2 243 1 67 1 335 2 164 1 80 1 
0 2 302 1 169 2 171 1 174 4 305 2 136 1 100 6 142 6 20 1 21 2 56 2 105 1 28 12 148 1 62 2 197 2 281 1 239 2 243 2 65 1 67 2 335 2 164 1 80 1 
0 5 128 2 302 1 169 2 171 1 174 4 305 2 136 1 100 6 142 6 20 1 21 3 56 2 105 1 28 12 148 1 62 2 197 2 281 1 239 2 243 2 65 1 67 2 335 2 164 1 80 1 
0 2 302 1 169 1 174 2 305 1 136 1 100 4 142 4 20 1 21 2 56 1 105 1 28 8 148 1 62 1 197 1 281 1 239 1 243 1 67 1 335 1 164 1 80 1 
20 1 142 1 56 1 105 1 148 1 302 1 28 2 197 1 239 1 174 2 335 1 100 1 80 1 
20 1 142 1 56 2 105 1 148 1 302 1 28 2 197 2 239 2 171 1 174 4 335 2 100 1 80 1 
20 1 142 1 56 2 105 1 148 1 302 1 28 2 197 2 239 2 174 4 12 1 335 2 100 1 80 1 
142 4 21 3 0 6 128 3 28 7 62 1 169 3 243 1 305 3 67 1 136 1 164 2 100 3 
20 1 142 1 56 2 105 1 148 1 302 1 28 2 197 2 239 2 174 4 12 1 335 2 100 1 80 1 
232 1 193 1 212 1 166 1 241 1 64 1 48 1 68 1 93 1 
232 1 193 1 212 1 263 1 166 1 199 1 241 1 64 1 48 1 203 1 68 1 205 1 93 1 117 1 
18 1 7 1 285 1 206 1 30 1 
18 1 193 1 194 1 212 1 152 1 265 1 3 1 238 1 157 1 46 1 7 1 11 1 285 1 204 1 68 2 93 2 71 1 206 1 
18 1 193 2 194 3 212 1 213 1 107 1 31 1 152 2 265 1 3 1 238 1 157 1 46 2 7 1 48 1 11 1 204 1 68 2 93 2 71 2 206 1 277 1 231 1 
212 1 213 1 3 1 265 1 46 2 7 1 48 2 11 1 93 2 137 1 277 1 231 1 232 1 18 1 193 2 194 3 107 1 152 2 31 1 157 1 68 2 204 1 206 1 71 2 
18 1 315 1 194 4 213 1 152 1 31 1 3 1 157 1 218 1 7 1 176 1 71 1 206 1 224 1 308 1 77 1 97 1 231 1 
18 1 194 4 213 1 152 1 31 1 3 1 237 1 157 1 218 1 7 1 176 1 71 1 206 1 224 1 77 1 97 1 231 1 
18 1 7 1 206 1 300 1 3 1 157 1 
18 3 124 1 190 1 319 1 194 3 145 1 146 2 152 3 3 2 157 4 172 1 282 1 7 3 88 1 285 2 206 3 71 2 293 2 188 1 
0 3 265 1 3 1 169 2 174 4 7 1 10 2 11 1 93 2 94 1 14 1 100 5 18 1 21 3 193 1 194 1 27 2 28 11 197 2 281 1 282 1 112 1 204 1 206 1 292 1 122 1 212 3 46 1 48 1 305 2 221 1 49 1 136 1 232 1 142 6 56 2 152 1 62 2 238 1 239 2 157 1 243 2 65 1 67 2 68 2 71 1 334 1 335 2 164 1 
18 1 278 1 194 2 84 1 61 1 44 1 322 1 237 1 242 1 218 1 7 1 285 1 176 1 206 1 224 1 97 1 77 1 78 1 139 1 311 1 
18 2 194 2 300 1 152 1 3 1 157 2 282 1 7 2 88 1 206 2 71 1 224 1 333 1 
18 4 191 1 194 1 152 1 3 1 110 1 157 1 282 1 7 4 91 1 285 1 332 1 206 4 
18 2 194 1 213 1 145 1 146 1 152 1 3 1 157 2 172 1 7 2 202 1 206 2 71 1 293 1 
18 1 195 1 3 1 157 1 7 1 201 1 133 1 285 1 206 1 189 1 
18 2 7 2 190 1 317 1 194 2 250 1 71 1 145 1 206 2 146 1 152 2 3 1 293 1 157 2 172 1 282 1 
18 2 7 2 190 1 319 1 285 1 194 2 71 1 145 1 206 2 146 1 152 2 3 1 157 2 172 1 282 1 
47 1 18 2 7 2 190 1 285 1 194 2 71 1 145 1 206 2 146 1 152 2 3 1 293 1 157 2 172 1 282 1 
212 1 3 1 265 1 46 1 7 1 48 1 11 1 93 2 137 1 18 1 232 1 193 1 194 1 152 1 157 1 285 1 68 2 204 1 206 1 71 1 
18 1 124 1 194 1 213 1 146 1 152 1 3 1 157 2 7 1 88 1 206 1 71 1 293 1 
212 1 73 1 236 1 52 1 170 1 
84 1 265 1 170 1 218 1 46 1 48 1 92 1 93 1 96 1 15 1 52 1 138 1 186 1 277 1 17 1 193 1 24 1 107 1 236 1 68 1 116 1 289 1 73 1 77 1 209 1 338 1 119 1 
314 1 193 1 236 1 170 1 68 1 93 1 52 1 274 1 185 1 
92 1 52 1 17 1 
102 3 82 1 57 1 320 1 58 1 200 1 156 1 246 1 330 1 275 1 37 3 
246 1 179 1 272 1 244 1 
246 1 156 1 
30 1 
246 1 102 1 330 1 320 1 156 1 37 1 200 1 
102 1 1 1 63 1 
246 1 141 1 82 2 102 3 330 1 320 1 288 1 32 1 275 1 156 1 37 3 200 1 
246 1 102 2 330 1 57 1 320 1 98 1 156 1 37 2 200 1 
102 1 320 1 200 1 244 1 246 1 201 1 133 1 115 1 35 1 275 1 37 1 
246 1 102 1 320 1 275 1 156 1 37 1 200 1 
102 1 330 1 320 1 275 1 156 2 37 1 200 1 
102 2 320 2 156 1 200 2 33 1 246 1 275 1 37 2 230 1 313 1 
102 3 320 1 57 2 58 1 156 1 200 1 244 1 246 2 9 1 330 1 272 1 275 1 37 3 
133 1 201 2 102 1 57 1 320 1 115 1 195 1 207 1 227 1 275 1 37 2 200 1 
102 4 320 2 57 2 156 1 200 2 244 1 246 2 330 1 272 1 98 1 275 1 37 4 38 1 
246 1 102 1 330 1 320 1 275 1 156 1 37 1 200 1 
82 1 102 4 57 2 320 1 32 1 156 2 200 1 244 1 246 3 330 2 288 1 179 1 272 1 37 4 
102 2 320 1 299 1 57 1 198 1 156 1 200 1 246 1 330 1 275 1 79 1 37 2 
246 1 82 2 247 1 102 3 330 1 320 1 288 1 32 2 275 1 156 1 37 3 200 1 
246 2 25 1 59 1 287 2 
102 1 286 1 320 1 275 1 37 1 200 1 
246 1 102 2 330 1 57 1 320 1 58 1 275 1 156 1 37 2 200 1 
294 1 
246 1 102 1 330 1 320 1 275 1 156 1 37 1 200 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 84 (214,218) (214,218) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 84 (214,218) (214,218) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 84 (214,218) (214,218) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 84 (214,218) (214,218) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (89,145,272,279) (89,145,272,279) 264 261 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (89,145,272,279) (89,145,272,279) 264 261 67 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (89,145,272,279) (89,145,272,279) 264 261 67 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) 108 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 147 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) 108 175 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 224 118 96 (137,150) 123 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 53 (166,284,308) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 224 118 3 62 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 224 118 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 71 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 85 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 224 122 43 (110,152) (4,340) (4,340) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 135 72 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 159 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 224 122 43 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 147 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) (115,125) (249,280) 184 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 224 118 96 (137,150) 123 107 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) (115,125) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 229 244 347 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 229 244 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 229 244 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 229 244 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 229 244 347 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 224 289 296 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 224 122 43 (110,152) (110,152) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 135 72 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 224 118 3 41 36 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) 108 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 224 122 43 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 224 118 168 73 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 224 289 296 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 224 289 254 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 224 289 234 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 224 118 96 (137,150) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 260 (137,150) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 260 (13,49) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 224 118 3 243 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 224 118 96 (13,49) 160 (115,125) (115,125) (249,280) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 260 (13,49) 235 310 (249,280) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 224 118 3 41 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 224 118 96 (137,150) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 224 118 3 243 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (89,145,272,279) (89,145,272,279) 264 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (89,145,272,279) (89,145,272,279) 264 101 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
32 2 211 1 290 1 162 1 279 3 145 1 74 1 246 1 89 2 272 2 106 3 134 1 325 1 
279 1 239 1 211 1 84 1 320 1 214 1 246 1 218 1 89 1 187 1 209 1 106 1 272 1 
279 1 239 1 211 1 84 1 320 1 214 1 246 1 218 1 89 1 187 1 209 1 106 1 272 1 
279 1 239 1 211 1 84 1 320 1 214 1 246 1 218 1 89 1 187 1 209 1 106 1 272 1 
279 1 239 1 211 1 84 1 320 1 214 1 246 1 218 1 89 1 187 1 209 1 106 1 272 1 
145 1 279 2 264 1 211 1 261 1 89 1 106 1 272 1 
32 1 211 1 212 1 84 1 162 1 187 1 279 2 256 1 20 1 320 1 172 1 246 1 89 1 272 1 106 2 134 1 
32 2 264 1 211 1 290 2 12 1 67 1 279 7 145 5 86 1 261 1 181 1 74 2 246 1 89 2 272 2 106 6 325 1 
32 2 264 1 211 1 290 2 12 1 67 1 279 7 145 5 86 1 261 1 181 1 74 2 246 1 89 2 272 2 106 6 325 1 
158 1 275 1 328 1 330 1 2 1 265 1 15 1 93 1 302 1 201 1 178 1 146 1 52 1 98 1 
315 1 
178 1 258 1 275 2 315 1 292 1 186 1 93 2 163 1 
275 5 315 1 176 1 291 1 299 1 120 1 292 1 186 1 335 1 93 5 163 2 190 1 202 2 178 2 236 1 50 1 102 2 51 1 309 2 
138 1 
205 2 315 1 105 1 
158 1 25 1 328 2 2 2 52 2 265 2 98 2 201 2 
108 1 33 1 158 1 328 1 1 1 119 2 140 1 2 1 265 1 160 1 13 1 115 1 35 2 201 1 224 1 153 1 306 1 338 1 96 1 52 1 196 2 98 1 118 1 
158 1 146 1 328 1 2 1 52 1 265 1 15 1 302 1 98 1 201 1 
275 1 328 1 330 1 2 1 93 1 302 1 201 2 52 1 98 2 9 1 158 1 10 1 56 1 315 1 265 2 59 1 15 1 186 1 215 1 18 1 146 2 
158 1 275 2 328 2 330 1 2 2 56 1 315 1 265 2 15 1 302 1 186 1 93 2 215 1 201 2 18 1 146 2 52 2 98 2 9 1 
178 1 275 1 93 1 163 1 23 1 
178 1 275 2 315 1 194 1 292 1 186 1 93 2 163 1 
275 1 93 1 163 1 
25 1 228 1 328 1 277 1 2 1 109 1 265 2 201 2 146 1 52 1 98 2 
24 1 79 1 37 1 
224 1 33 1 147 1 1 1 119 1 338 1 96 1 160 1 13 1 35 1 196 1 118 1 
33 1 328 1 1 1 119 1 2 1 265 1 160 1 13 1 35 1 201 1 224 1 338 1 232 1 96 1 241 1 196 1 98 1 118 1 
138 1 
25 1 328 3 2 3 232 1 52 1 265 3 98 3 201 3 
146 1 328 1 2 1 265 1 15 1 98 1 201 1 
328 1 228 1 2 1 109 1 265 1 201 1 146 1 52 1 98 1 
108 1 328 3 275 1 1 1 175 1 119 1 2 3 109 1 93 1 68 1 201 3 224 1 338 1 96 1 52 2 241 1 98 3 9 1 158 1 33 1 56 1 265 3 160 1 13 1 115 1 35 1 215 1 18 1 146 1 232 1 196 1 118 1 
25 1 328 1 277 1 2 1 265 2 59 1 201 2 146 1 232 1 112 1 98 2 
275 1 328 3 56 1 2 3 315 1 109 1 265 3 93 1 68 1 215 1 201 3 18 1 146 1 232 2 6 1 52 1 241 1 98 3 9 1 
24 1 328 2 2 2 232 1 52 1 109 1 265 2 98 2 37 1 201 2 
224 1 33 1 1 1 119 1 338 1 96 1 160 1 13 1 35 1 196 1 118 1 
224 1 33 1 1 1 119 1 338 1 123 1 150 1 96 1 35 1 196 1 118 1 
54 2 79 1 311 1 329 1 263 1 314 1 66 1 293 2 114 1 346 1 257 1 167 1 225 1 8 2 271 1 37 1 
328 1 2 1 265 1 215 1 201 1 146 1 295 1 98 1 
25 1 328 4 2 4 199 1 109 1 265 5 59 1 317 1 201 5 232 2 52 1 112 1 241 1 98 5 
146 1 328 1 2 1 265 1 15 1 98 1 201 1 
19 1 166 1 53 1 308 1 
19 1 166 1 284 1 
19 1 166 1 
19 1 166 1 
53 1 308 1 
53 1 308 1 
53 1 308 1 
294 1 19 1 166 1 
294 1 19 1 166 1 
294 1 19 1 166 1 
19 1 166 1 282 1 
19 1 166 1 282 1 
19 1 166 1 282 1 
275 2 65 2 11 1 315 1 93 2 304 1 60 2 144 2 267 3 61 1 19 2 166 2 255 1 169 1 7 1 75 1 270 1 240 2 273 2 
220 1 148 1 25 1 80 1 275 1 328 2 65 1 222 1 2 2 265 2 151 1 93 1 60 1 201 2 144 1 267 1 19 1 255 1 166 1 154 1 180 1 240 1 284 1 98 2 
305 1 313 2 172 1 209 1 187 2 
84 1 187 1 209 1 
84 1 172 1 187 1 
313 1 305 1 334 1 172 1 209 2 187 3 
313 1 305 1 22 1 172 1 209 1 187 2 
148 1 275 5 198 1 151 1 120 2 93 5 202 1 178 4 205 3 259 1 50 1 94 1 29 1 51 3 180 1 155 2 131 2 309 1 133 1 263 1 82 1 315 2 292 1 186 1 163 1 189 1 167 1 117 1 102 1 349 1 105 1 64 2 
275 2 328 1 330 1 2 1 93 2 302 1 201 1 178 2 52 1 98 1 158 1 315 1 265 1 15 1 186 1 163 1 146 1 268 1 350 1 297 1 23 1 
148 1 328 1 275 3 2 1 330 1 198 1 120 2 302 1 93 3 201 1 202 1 178 2 205 4 259 1 94 1 29 1 51 3 155 2 52 1 98 1 131 2 309 1 158 1 263 1 315 3 265 1 15 1 186 1 189 1 190 1 146 1 167 1 102 1 117 1 349 1 105 2 64 1 
148 1 275 2 198 1 120 2 93 2 202 1 178 1 253 1 205 4 259 1 94 1 29 1 51 3 155 2 131 2 309 1 263 1 315 2 189 1 190 1 167 1 102 1 117 1 349 1 105 2 64 1 
76 1 
138 1 
260 1 
224 1 
224 1 62 1 3 1 118 1 
224 1 118 1 
71 1 
173 1 40 1 39 2 42 3 301 1 204 1 207 1 227 1 54 13 210 1 242 2 58 7 14 1 293 6 191 1 245 4 167 3 349 3 21 2 
274 1 173 1 54 20 42 1 263 3 198 3 58 10 266 1 301 3 85 1 293 10 5 1 17 1 204 1 237 3 238 1 167 3 245 4 117 3 207 1 349 3 126 1 233 4 
39 1 173 1 174 1 42 3 301 2 204 1 337 1 207 1 8 2 126 1 54 11 210 1 242 1 314 1 58 6 14 1 114 1 293 5 191 1 346 1 167 2 245 5 349 2 21 1 271 1 
39 2 173 1 54 13 210 1 42 3 242 2 58 7 301 1 14 1 293 6 191 1 204 1 167 3 245 4 207 1 349 3 21 2 227 1 
39 2 173 1 54 13 210 1 42 3 242 2 58 7 301 3 14 1 293 6 191 1 204 1 167 3 245 6 207 1 349 3 21 2 227 1 
340 1 33 1 327 2 119 1 43 1 4 1 223 2 110 1 35 1 250 1 345 2 279 1 224 1 122 1 226 1 246 2 89 1 196 1 272 1 106 1 
327 1 119 1 1 1 223 1 334 1 279 1 252 1 283 1 338 1 157 1 209 1 31 1 211 1 84 1 35 1 16 1 343 1 187 2 345 1 348 1 246 1 172 1 196 1 89 1 106 1 272 1 
327 1 119 1 1 1 223 1 334 1 279 2 252 1 283 1 338 1 209 1 134 1 31 1 32 1 211 1 84 1 35 1 16 1 162 1 343 1 187 2 345 1 145 1 348 1 246 1 172 1 196 1 89 1 63 1 106 2 272 1 
327 1 119 1 1 1 223 1 334 1 279 3 283 1 338 1 226 1 157 1 209 1 134 1 31 1 32 1 312 1 84 1 35 1 16 1 162 1 343 1 187 2 345 1 145 2 348 1 246 1 172 1 196 1 89 1 106 3 272 1 
327 1 119 1 1 1 223 1 334 1 279 2 338 1 157 1 209 1 134 1 31 1 32 1 312 1 84 1 35 1 16 1 162 1 187 2 345 1 145 2 348 1 246 1 172 1 196 1 106 2 
341 1 
135 1 33 1 275 1 119 1 93 1 35 1 163 1 202 1 72 1 50 1 102 1 51 1 29 1 196 1 309 1 
275 2 213 1 316 1 200 1 292 1 93 2 303 1 163 2 258 1 206 1 182 1 
206 1 275 1 139 1 182 1 213 1 298 1 316 1 93 1 303 1 
275 2 139 1 213 1 316 1 200 1 298 1 292 1 93 2 230 1 303 1 163 2 258 1 206 1 182 1 
2 1 300 1 120 1 93 2 302 1 303 1 47 1 50 1 258 1 51 1 124 1 182 1 52 1 98 1 309 1 99 2 315 1 316 1 265 1 230 2 186 1 15 1 318 1 146 1 102 1 269 2 275 2 328 1 330 1 26 1 200 2 202 1 201 1 336 1 206 1 78 1 158 1 213 1 292 1 163 3 
275 1 120 1 93 1 303 1 202 1 206 1 50 1 51 1 182 1 309 1 78 1 99 1 141 1 213 1 316 1 318 1 102 1 269 1 
328 1 275 1 2 1 330 1 26 1 120 1 302 1 93 1 303 1 201 1 202 1 336 1 50 1 206 1 51 1 124 1 52 1 182 1 98 1 309 1 78 1 99 2 158 1 315 1 213 1 265 1 316 1 15 1 186 1 318 1 146 1 102 1 269 2 
328 1 275 1 2 1 330 1 26 1 120 1 302 1 93 1 303 1 201 1 202 1 336 1 50 1 206 1 51 1 124 1 52 1 182 1 98 1 309 1 78 1 99 2 158 1 315 1 213 1 265 1 316 1 15 1 186 1 318 1 146 1 102 1 269 2 
159 1 206 1 275 1 182 1 213 1 316 1 93 1 303 1 219 1 
2 1 298 1 120 1 93 1 302 1 303 1 47 1 50 1 51 1 124 1 182 1 52 1 98 1 309 1 99 2 139 1 315 1 316 1 265 1 230 1 186 1 15 1 318 1 146 1 102 1 269 2 275 1 328 1 330 1 26 1 200 1 202 1 201 1 336 1 206 1 78 1 158 1 213 1 163 1 
2 1 298 1 120 1 93 1 302 1 303 1 47 1 50 1 51 1 124 1 182 1 52 1 98 1 309 1 99 2 139 1 315 1 316 1 265 1 230 1 186 1 15 1 318 1 146 1 102 1 269 2 275 1 328 1 330 1 26 1 200 1 202 1 201 1 336 1 206 1 78 1 158 1 213 1 163 1 
275 1 120 1 93 1 303 1 202 1 206 1 50 1 51 1 182 1 309 1 183 1 99 1 141 1 213 1 316 1 318 1 102 1 269 1 
54 2 33 1 329 1 314 1 119 2 43 1 81 1 58 1 293 1 114 1 35 2 224 1 346 1 306 1 225 1 122 1 170 1 8 2 127 1 196 2 30 1 271 1 
24 1 42 1 329 1 328 1 2 1 198 1 109 1 201 1 281 1 225 1 52 1 8 2 98 1 54 3 79 1 263 1 314 1 265 1 58 1 114 1 293 2 346 1 245 1 167 1 117 1 349 1 171 1 271 1 37 1 
138 1 346 1 311 1 225 1 329 1 314 1 8 2 114 1 271 1 
24 5 25 1 329 1 277 1 198 2 91 1 5 1 237 2 225 2 8 4 262 1 54 9 79 7 314 2 58 6 293 3 114 2 346 2 146 1 103 1 117 2 170 1 104 1 349 2 233 2 171 1 271 2 37 7 
24 1 149 1 329 1 328 1 1 1 119 1 2 1 201 1 224 1 225 1 338 1 96 1 8 2 241 1 98 1 208 1 54 2 33 1 314 1 81 1 83 1 265 1 160 1 58 1 13 1 35 1 114 1 293 1 346 1 147 1 170 1 232 1 171 1 196 1 271 1 118 1 
329 1 328 1 1 1 119 1 2 1 201 1 224 1 280 1 225 1 338 1 125 1 96 1 8 2 241 1 98 1 54 1 33 1 314 1 184 1 265 1 160 1 13 1 115 1 114 1 35 1 293 1 346 1 170 1 232 1 171 1 196 1 271 1 118 1 
54 2 79 1 311 1 329 1 314 1 58 2 114 1 344 1 346 1 225 1 117 1 349 1 8 2 271 1 37 1 
54 2 79 1 311 1 329 1 263 1 314 1 66 1 114 1 293 2 346 1 167 1 225 1 8 2 271 1 37 1 
54 2 79 1 311 1 329 1 314 1 198 1 58 2 114 1 346 1 225 1 117 1 349 1 8 2 271 1 37 1 
54 2 79 1 329 1 314 1 58 2 114 1 344 1 346 1 225 1 117 1 349 1 8 2 127 1 271 1 37 1 
54 2 79 1 329 1 263 1 314 1 66 1 114 1 293 2 346 1 167 1 225 1 8 2 127 1 271 1 37 1 
54 2 79 1 329 1 314 1 198 1 58 2 114 1 346 1 225 1 117 1 349 1 8 2 127 1 271 1 37 1 
54 2 79 1 329 1 314 1 198 1 58 2 114 1 346 1 225 1 117 1 349 1 8 2 271 1 37 1 
224 1 33 1 1 1 119 1 338 1 96 1 160 1 13 1 115 1 35 1 196 1 118 1 
224 1 33 1 1 1 119 1 338 1 123 1 150 1 96 1 35 1 196 1 107 1 118 1 
54 2 79 1 329 1 314 1 198 1 58 2 114 1 346 1 225 1 117 1 349 1 8 2 171 1 271 1 37 1 
224 1 1 1 119 1 338 1 125 1 96 1 160 1 13 1 115 1 35 1 196 1 63 1 118 1 
24 1 329 1 328 1 2 1 331 1 198 1 109 1 301 1 201 1 225 1 52 1 8 2 98 1 54 2 79 1 314 1 265 1 58 2 114 1 346 1 245 1 117 1 349 1 171 1 271 1 37 1 
346 1 244 1 337 1 347 1 314 1 229 1 57 1 8 2 114 1 271 1 
346 1 244 1 337 1 347 1 314 1 229 1 57 1 8 2 114 1 271 1 
346 1 244 1 337 1 347 1 314 1 229 1 57 1 8 2 114 1 271 1 
346 1 244 1 337 1 347 1 314 1 229 1 57 1 8 2 114 1 271 1 
346 1 244 1 337 1 347 1 314 1 229 1 57 1 8 2 114 1 271 1 
19 1 166 1 65 1 7 1 75 1 240 1 304 1 60 1 132 1 144 1 
28 1 19 1 166 1 65 1 332 1 240 1 322 1 60 1 144 1 
80 1 284 1 
275 1 65 1 11 1 315 1 93 1 304 1 60 1 144 1 267 2 61 1 19 1 255 1 166 1 169 1 7 1 75 1 240 1 273 1 
275 1 65 1 11 1 315 1 93 1 304 1 60 1 144 1 267 2 61 1 19 1 255 1 166 1 169 1 7 1 75 1 240 1 273 1 
275 1 65 1 11 1 315 1 93 1 304 1 60 1 144 1 267 2 61 1 19 1 255 1 166 1 169 1 7 1 75 1 240 1 273 1 
165 1 294 1 156 1 
165 1 294 1 156 1 
282 1 307 1 
282 1 156 1 307 1 
220 1 154 1 
148 1 220 1 25 1 275 1 328 2 65 1 222 1 2 2 151 1 93 1 69 1 201 2 178 1 154 1 180 1 240 1 284 1 98 2 80 1 265 2 60 1 144 1 267 1 19 1 169 1 166 1 273 1 
165 1 294 1 
282 1 156 1 307 1 
329 1 119 2 201 2 224 1 306 2 225 1 8 2 98 2 30 1 54 2 289 1 314 1 81 1 265 2 58 1 35 2 114 1 293 1 142 1 346 1 116 1 217 1 170 1 296 1 171 1 196 2 271 1 38 1 
224 1 33 1 122 1 119 1 43 1 110 1 152 1 35 1 196 1 345 1 287 1 
119 1 1 1 84 1 334 1 35 1 16 1 187 2 342 1 343 1 345 1 338 1 95 1 157 1 172 1 196 1 209 1 287 1 31 1 
1 1 119 2 84 1 334 1 35 2 16 1 187 2 342 1 343 1 345 1 338 1 95 1 157 1 172 1 196 2 209 1 63 1 287 1 31 1 
119 1 1 1 84 1 334 1 35 1 16 1 187 2 343 1 203 1 345 1 338 1 95 1 157 1 172 1 196 1 209 1 31 1 
231 1 
315 1 299 1 120 1 335 1 186 1 202 1 50 1 102 1 51 1 309 1 
197 2 263 2 198 2 315 5 113 1 120 5 205 10 167 2 111 1 117 2 51 5 349 2 155 5 105 5 131 5 
275 1 315 1 292 1 186 1 93 1 163 1 
135 1 33 1 119 1 35 1 163 1 202 1 251 1 72 1 50 1 102 1 51 1 29 1 196 1 309 1 
138 1 
275 1 120 1 121 1 93 1 202 1 46 1 205 1 50 1 51 1 309 1 78 1 315 2 292 1 186 1 163 1 102 1 105 1 
41 1 33 1 119 1 3 1 35 1 202 1 224 1 50 1 102 1 36 1 196 1 118 1 309 1 
275 1 197 2 221 1 198 2 247 1 120 5 93 1 202 2 237 1 48 1 205 6 179 1 50 2 29 1 51 8 155 5 131 5 129 1 309 2 263 2 315 5 34 1 113 1 292 1 186 2 163 1 17 1 167 2 193 1 102 2 117 2 349 2 105 3 233 1 323 1 
39 1 197 2 275 1 328 1 330 1 2 1 120 2 93 1 302 1 201 1 202 1 50 1 51 2 124 1 52 1 98 1 309 1 158 1 242 1 265 1 113 1 15 1 191 1 146 1 167 1 102 1 349 2 21 1 
108 1 158 1 33 1 328 1 1 1 119 1 2 1 265 1 160 1 13 1 115 1 35 1 201 1 224 1 338 1 96 1 52 1 196 1 98 1 118 1 
315 4 120 2 186 2 202 1 205 4 50 1 102 1 193 1 207 1 29 1 51 1 155 2 105 2 131 2 309 1 
154 1 7 1 240 1 288 1 144 1 
240 1 97 1 144 1 
240 1 97 1 144 1 
240 1 97 1 144 1 
240 1 130 1 144 1 
240 1 130 1 144 1 
240 1 130 1 144 1 
240 1 144 1 
19 1 166 1 
39 1 54 10 242 2 42 3 314 1 58 5 301 2 114 1 293 5 191 1 346 1 245 5 167 2 337 1 349 2 21 2 8 2 271 1 
54 2 314 1 58 2 301 1 114 1 346 1 245 1 337 1 117 1 349 1 8 2 271 1 
54 4 42 1 263 1 314 1 198 1 58 2 301 1 293 2 114 1 346 1 167 1 245 2 337 1 117 1 349 1 8 2 271 1 
54 3 242 1 42 1 314 2 58 1 301 1 293 2 114 2 164 1 346 2 245 2 337 1 87 1 21 1 8 4 126 1 271 2 
39 1 274 1 42 3 198 2 301 3 237 3 238 1 337 1 8 6 126 1 54 24 210 1 242 1 263 2 314 3 58 12 14 1 266 1 293 12 114 3 17 1 191 1 346 3 216 1 245 6 167 4 117 2 349 4 21 1 87 1 233 3 271 3 
39 2 42 3 301 1 237 1 337 1 8 2 54 14 210 1 242 2 314 1 58 7 14 1 293 7 114 1 17 1 191 1 346 1 167 3 245 4 349 3 21 2 233 1 323 1 271 1 
39 2 42 3 198 1 301 2 5 1 237 1 337 1 8 4 54 17 210 1 242 2 314 2 58 9 14 1 293 8 114 2 17 1 191 1 346 2 167 3 216 1 245 5 117 1 349 4 21 2 233 2 323 1 271 2 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 4 126 1 129 1 54 13 263 2 314 2 58 6 293 7 114 2 17 1 346 2 216 1 167 2 245 2 117 2 349 2 233 1 323 1 271 2 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 4 126 1 129 1 54 11 263 1 314 2 58 7 293 4 114 2 17 1 346 2 216 1 167 1 245 2 117 2 349 2 233 1 323 1 271 2 
39 2 42 3 301 1 237 1 337 1 8 2 54 14 210 1 242 2 314 1 58 7 14 1 293 7 114 1 17 1 191 1 346 1 167 3 245 4 349 3 21 2 233 1 323 1 271 1 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 2 129 1 54 12 263 2 314 1 58 6 293 6 114 1 17 1 346 1 167 2 245 2 117 2 349 2 233 1 323 1 271 1 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 4 126 2 129 1 54 12 263 1 314 2 58 7 293 5 114 2 17 1 346 2 216 1 167 1 245 2 117 2 349 2 233 1 323 1 271 2 
42 2 221 1 198 2 247 1 301 2 237 1 179 1 337 1 8 4 126 2 129 1 54 12 263 1 314 2 58 7 293 5 114 2 17 1 346 2 167 1 245 4 117 2 349 2 87 1 233 1 323 1 271 2 
39 1 54 7 210 1 242 3 42 3 58 3 14 2 301 3 293 4 167 1 245 6 349 1 21 3 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 4 126 2 129 1 54 12 263 1 314 2 58 7 293 5 114 2 17 1 346 2 167 1 245 2 117 2 349 2 87 1 233 1 323 1 271 2 
39 1 54 10 210 1 42 2 242 1 314 1 58 5 301 2 14 1 293 5 114 1 191 1 346 1 167 2 245 4 349 2 21 1 8 2 126 1 271 1 
138 1 
54 4 42 1 263 1 314 1 198 1 58 2 301 1 293 2 114 1 346 1 167 1 245 2 216 1 117 1 349 1 8 2 271 1 
237 1 54 2 58 1 233 1 293 1 17 1 
39 1 42 2 198 2 301 2 5 1 237 2 126 1 262 1 54 20 210 1 263 2 242 1 58 10 14 1 293 10 191 1 167 4 245 4 117 2 103 1 349 4 21 1 233 2 
54 1 233 1 293 1 
54 1 237 1 58 1 
54 6 263 1 42 2 314 1 198 1 58 3 301 1 114 1 293 3 346 1 216 1 245 3 167 1 111 1 117 1 349 1 8 2 271 1 
42 1 221 1 198 2 247 1 301 1 237 1 179 1 337 1 8 2 129 1 54 12 263 2 314 1 58 6 293 6 114 1 17 1 346 1 167 2 245 2 117 2 349 2 233 1 323 1 271 1 
39 1 54 6 242 1 42 1 58 3 301 1 293 3 167 1 245 2 349 1 21 1 
164 1 54 1 126 1 293 1 
25 1 100 1 265 1 59 1 112 1 98 1 201 1 
25 1 100 1 265 1 59 1 185 1 319 1 201 1 88 1 128 1 285 1 112 1 98 1 
224 1 33 1 122 1 119 2 43 1 35 2 196 2 63 1 
224 1 168 1 119 1 0 1 73 1 35 1 196 1 118 1 
33 1 1 1 119 1 338 1 84 1 172 1 35 1 196 1 187 1 31 1 
224 1 289 1 119 2 157 1 296 1 35 2 196 2 63 1 
224 1 254 1 33 1 289 1 119 2 35 2 196 2 63 1 
224 1 33 1 289 1 119 2 35 2 196 2 63 1 234 1 
138 1 33 1 119 1 35 1 196 1 
33 1 328 1 119 1 1 1 2 1 265 1 13 1 35 1 201 1 224 1 338 1 232 1 96 1 196 1 98 1 118 1 
328 1 119 1 1 1 2 1 265 1 13 1 35 1 248 1 201 1 224 1 338 1 232 1 96 1 196 1 98 1 118 1 
328 1 119 1 1 1 2 1 150 1 265 1 35 1 248 1 201 1 224 1 338 1 232 1 96 1 196 1 98 1 118 1 
137 1 275 1 119 1 260 1 35 1 196 1 93 1 248 1 
49 1 275 1 119 1 260 1 35 1 196 1 93 1 248 1 
1 1 119 1 338 1 35 1 196 1 177 1 
224 1 33 1 119 1 3 1 35 1 196 1 243 1 118 1 
329 1 328 1 1 1 119 1 2 1 201 1 224 1 280 1 225 1 338 1 125 1 96 1 8 2 98 1 314 1 265 1 160 1 13 1 114 1 35 1 115 1 346 1 116 1 232 1 171 1 196 1 271 1 63 1 118 1 
310 1 33 1 275 1 119 1 235 1 35 1 93 1 249 1 202 1 178 1 251 1 49 1 50 1 102 1 260 1 196 1 309 1 
41 1 224 1 119 1 3 1 35 1 196 1 177 1 118 1 
33 1 328 1 119 1 1 1 2 1 150 1 265 1 35 1 201 1 224 1 338 1 232 1 96 1 196 1 98 1 118 1 
224 1 119 1 3 1 35 1 196 1 243 1 248 1 118 1 
27 1 70 1 25 1 44 1 195 1 
328 1 275 2 2 1 330 1 92 1 44 1 93 2 302 1 68 1 201 1 27 1 178 1 70 1 52 1 98 1 9 1 158 1 56 1 315 1 265 1 15 1 186 1 215 1 143 1 18 1 146 2 321 1 195 1 
70 1 217 1 265 1 44 1 195 1 98 1 142 1 201 1 38 1 
56 1 44 1 68 1 215 1 143 1 27 1 18 1 70 1 146 1 321 1 195 1 9 1 
279 1 32 1 211 1 89 1 162 1 106 1 272 1 134 1 
32 2 290 1 188 1 162 2 145 2 279 3 192 1 74 1 89 1 106 3 272 1 134 2 90 2 
145 1 279 2 32 1 276 1 211 1 12 1 286 1 89 1 162 1 106 2 272 1 134 1 
211 1 188 1 162 1 279 1 89 1 272 1 106 1 324 1 90 1 134 1 
32 1 333 1 45 1 
279 1 211 1 89 1 77 1 106 1 272 1 
145 1 279 2 32 1 211 1 181 1 89 1 162 1 106 2 272 1 134 1 
326 1 
279 1 32 1 211 1 89 1 162 1 106 1 272 1 134 1 
138 1 
279 1 32 1 89 1 162 1 106 1 272 1 134 1 
327 1 246 1 106 1 
211 1 188 1 162 1 279 1 192 1 89 1 272 1 106 1 90 1 134 1 
145 1 279 2 264 1 89 1 106 1 272 1 
32 1 55 1 211 1 84 1 187 1 279 1 74 1 89 1 209 1 272 1 106 1 
279 1 32 1 211 1 89 1 162 1 106 1 272 1 
279 1 211 1 89 1 162 2 106 1 272 1 134 1 
32 1 136 1 211 1 162 1 278 1 279 2 339 1 89 2 272 2 106 2 
32 2 211 1 290 1 162 1 279 3 145 2 86 1 181 1 74 1 89 1 272 1 106 3 134 1 
32 1 211 1 84 1 334 1 161 1 162 1 187 2 279 2 145 1 172 1 89 1 209 1 272 1 106 2 134 1 
145 1 279 2 264 1 211 1 89 1 101 1 106 1 272 1 
32 1 211 1 162 1 145 1 279 3 256 1 181 1 89 1 272 1 106 3 134 1 
32 1 290 1 74 1 90 1 
32 1 162 1 

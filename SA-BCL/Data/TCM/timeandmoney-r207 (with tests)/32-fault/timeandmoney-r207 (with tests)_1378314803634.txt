#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (131,242) 89 (161,275) (161,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (131,242) 89 (161,275) (161,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (131,242) 89 (161,275) (161,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (131,242) 89 (161,275) (161,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (246,278) (246,278) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 270 (105,115,291) 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 245 219 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 245 219 332 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 83 203 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException (100,101) (100,101) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 130 324 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 79 23 95 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 79 23 95 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 79 23 95 171 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 79 23 95 171 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 112 103 74 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 112 103 74 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 112 103 74 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 112 103 74 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 112 103 74 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 11 236 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 193 312 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 65 207 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (246,278) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 130 324 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 245 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 193 312 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 193 312 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (246,278) (246,278) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
224 1 211 1 89 1 320 1 250 1 212 1 275 1 161 1 128 1 188 1 131 1 
224 1 211 1 89 1 320 1 250 1 212 1 275 1 161 1 128 1 188 1 131 1 
224 1 211 1 89 1 320 1 250 1 212 1 275 1 161 1 128 1 188 1 131 1 
224 1 211 1 89 1 320 1 250 1 212 1 275 1 161 1 128 1 188 1 131 1 
224 1 114 1 320 1 184 1 232 2 327 3 211 4 330 1 212 4 50 2 310 1 128 1 194 1 110 1 151 1 132 3 55 1 221 1 
224 1 198 1 320 1 184 1 250 1 276 1 188 1 211 1 330 1 212 1 243 1 106 1 128 1 55 1 221 1 
224 1 320 2 184 1 250 1 327 1 211 3 212 3 50 1 242 1 128 2 310 1 132 2 55 1 
114 1 200 1 250 1 211 9 212 9 50 4 310 3 128 2 132 5 55 1 221 1 224 1 320 2 184 1 232 2 327 7 330 1 239 1 69 1 242 1 194 1 110 1 151 1 156 1 
114 1 200 1 250 1 211 9 212 9 50 4 310 3 128 2 132 5 55 1 221 1 224 1 320 2 184 1 232 2 327 7 330 1 239 1 69 1 242 1 194 1 110 1 151 1 156 1 
84 1 63 1 302 1 
84 1 41 1 280 2 
292 2 186 2 118 2 82 1 190 2 248 1 269 2 7 2 
292 2 0 1 249 1 119 1 118 3 82 1 299 1 253 1 123 2 256 1 7 3 87 1 259 1 260 1 304 1 126 1 263 1 90 1 315 1 21 1 269 2 27 1 319 1 59 1 186 2 32 1 190 2 140 1 67 2 238 1 191 1 241 2 285 2 72 1 153 1 248 1 113 2 
292 1 186 1 307 1 39 1 118 1 82 1 190 1 196 1 269 1 7 1 
118 1 84 1 99 1 62 1 63 1 190 1 34 1 7 1 8 1 38 1 39 1 216 1 150 1 314 1 
292 1 186 1 118 1 84 1 62 2 99 1 63 1 190 1 34 2 7 1 39 1 216 1 150 1 314 1 269 1 
167 1 214 1 309 1 62 1 34 1 
214 1 309 1 84 1 62 2 63 1 316 1 166 1 34 2 
214 1 62 1 34 1 
292 1 158 1 186 1 82 1 118 1 62 1 190 1 34 1 7 1 307 1 39 1 309 1 196 1 269 1 
84 1 
93 1 214 1 309 1 84 1 62 2 63 1 316 1 34 2 
160 1 84 1 278 1 62 5 204 2 63 1 230 1 205 1 34 5 235 1 284 2 214 2 309 2 286 1 246 1 53 2 40 1 316 1 56 1 
248 1 302 1 
292 1 2 1 186 1 252 1 118 2 190 2 7 2 248 2 269 1 
78 1 266 1 
26 1 118 1 299 1 32 1 123 1 256 1 7 1 67 1 259 1 263 1 191 1 90 1 285 1 72 1 153 1 248 1 
292 3 186 1 308 1 118 3 190 3 248 1 269 3 7 3 
292 1 39 1 118 1 190 1 196 1 269 1 7 1 
292 1 2 1 186 1 39 1 252 1 118 1 190 1 269 1 7 1 
292 3 249 1 2 1 299 1 118 4 82 1 253 1 254 1 123 1 256 1 7 4 259 1 260 1 304 1 126 1 263 1 90 1 308 1 13 1 216 1 315 1 21 1 314 1 269 3 27 1 58 1 59 1 186 2 99 1 62 1 32 1 140 1 190 3 34 1 67 1 191 1 241 1 39 1 285 1 150 1 72 1 153 1 248 1 113 2 
292 1 8 1 308 1 118 2 71 1 190 2 248 1 269 1 7 2 
292 3 25 1 2 1 186 1 118 3 84 1 62 1 99 1 254 1 190 3 34 1 7 3 308 2 39 1 13 1 216 1 150 1 314 1 269 3 
292 2 2 1 186 1 118 2 190 2 7 2 308 1 91 1 266 1 269 2 
118 1 299 1 32 1 123 1 256 1 7 1 67 1 259 1 263 1 191 1 90 1 285 1 72 1 153 1 248 1 
118 1 299 1 32 1 123 1 256 1 7 1 67 1 263 1 191 1 285 1 72 1 18 1 153 1 248 1 57 1 
78 2 27 1 249 1 251 1 201 1 253 2 35 1 258 1 260 1 238 2 126 1 264 1 241 4 172 1 107 1 91 2 266 2 267 1 21 1 315 1 220 1 113 2 
292 1 39 1 118 1 190 1 314 1 269 1 22 1 7 1 
292 1 299 1 118 2 32 1 254 1 190 1 123 1 256 1 7 2 67 1 259 1 191 1 263 1 90 1 308 1 285 1 72 1 266 1 153 1 269 1 
292 4 272 1 2 1 186 1 322 1 118 5 190 5 254 1 7 5 8 1 308 2 71 1 248 1 269 4 
292 2 39 1 118 2 190 2 22 1 196 1 269 2 7 2 
19 1 291 1 
19 1 291 1 
270 1 115 1 
270 1 115 1 
270 1 115 1 
105 1 19 1 291 1 
270 1 115 1 19 1 291 1 
133 1 19 1 291 1 
133 1 19 1 291 1 
133 1 19 1 291 1 
94 1 19 1 291 1 
94 1 19 1 291 1 
94 1 19 1 291 1 
245 1 61 1 64 1 19 1 219 1 291 1 
245 1 332 1 61 1 62 1 64 1 19 1 219 1 34 1 291 1 
330 1 110 1 221 1 
330 1 106 1 221 1 
168 1 106 1 110 2 122 1 317 1 221 3 
106 1 110 1 122 1 77 1 317 1 221 2 
106 1 110 1 122 2 317 1 221 2 
44 1 273 1 116 1 83 1 84 1 62 4 204 1 63 1 230 1 205 1 279 1 34 4 305 1 214 1 284 1 309 3 53 1 316 1 
295 1 116 1 83 1 84 1 204 1 62 4 63 1 230 1 205 1 279 1 34 4 167 1 284 1 214 2 309 3 92 1 288 1 53 1 316 1 
273 1 160 1 83 1 62 2 204 1 205 1 279 1 34 2 305 1 284 1 309 1 53 1 
273 1 160 1 83 1 203 1 62 1 204 1 205 1 279 1 34 1 305 1 284 1 53 1 
178 1 302 1 
11 1 153 1 
143 1 
72 1 153 1 
143 1 294 1 177 1 178 2 72 1 32 1 153 1 
72 1 32 1 153 1 
104 1 153 1 
251 2 298 1 253 5 255 1 165 1 207 1 258 2 97 1 325 3 101 1 100 1 65 1 36 1 238 6 148 1 241 11 333 4 289 1 
251 2 298 1 253 6 255 1 165 2 207 1 258 2 97 1 325 3 101 1 100 1 65 1 36 1 238 6 148 1 241 12 333 5 289 1 
251 2 298 1 253 5 165 1 255 1 207 1 209 1 258 2 97 1 325 3 101 1 100 1 65 1 36 1 238 6 148 1 241 11 333 4 289 1 
183 1 97 2 298 1 253 1 325 1 255 1 36 1 238 1 241 2 333 1 
249 1 97 1 298 1 253 2 100 1 101 1 325 2 65 1 36 1 260 1 238 2 241 4 129 1 333 2 334 1 289 1 315 1 21 1 113 2 
250 1 299 1 123 1 256 1 208 1 211 2 261 1 212 2 168 1 128 1 132 1 55 1 179 1 221 2 224 1 182 1 320 1 184 1 189 1 229 1 281 1 67 1 327 1 330 1 285 1 331 1 106 1 244 1 110 1 76 1 
250 1 299 1 123 1 256 1 211 3 125 1 261 1 168 1 212 3 128 1 132 1 55 1 179 1 221 2 182 1 320 1 184 1 189 1 281 1 67 1 327 2 330 1 285 1 331 1 70 1 106 1 244 1 110 1 75 1 76 1 
250 1 299 1 123 1 256 1 211 2 125 1 212 2 168 1 132 1 55 1 179 1 221 2 182 1 184 1 189 1 281 1 67 1 327 2 330 1 285 1 331 1 106 1 110 1 75 1 76 1 
250 2 299 1 85 1 123 1 256 1 301 1 211 1 263 1 212 1 128 1 15 1 217 1 16 1 179 2 320 1 189 2 141 1 281 2 67 1 285 1 70 1 72 1 153 1 
224 1 182 1 320 1 250 1 299 1 189 1 229 1 123 1 256 1 281 1 67 1 261 1 211 1 330 1 168 1 212 1 331 1 285 1 106 1 244 1 128 1 110 1 76 1 75 1 179 1 221 2 
137 1 
62 1 204 1 324 1 230 1 205 1 279 1 123 1 34 1 67 1 263 1 284 1 285 1 130 1 53 1 
118 1 6 2 7 1 8 1 214 2 51 1 216 1 316 1 20 1 314 1 93 1 180 1 321 1 60 1 62 3 99 1 190 1 34 3 102 1 38 1 39 1 150 1 
118 1 84 1 6 3 7 1 8 1 214 1 51 1 216 1 20 1 314 1 316 1 93 1 180 1 321 1 185 1 62 3 99 1 190 1 63 1 34 3 102 1 38 1 39 1 150 1 
118 1 84 1 6 3 7 1 8 1 214 2 215 1 51 1 216 1 316 1 20 1 314 1 93 1 180 1 321 1 185 1 60 1 62 3 99 1 190 1 63 1 34 3 102 1 38 1 39 1 150 1 
292 1 158 1 82 1 118 2 84 1 6 2 7 2 8 1 307 1 214 2 215 1 51 1 216 1 20 1 316 1 314 1 269 1 93 1 180 1 321 1 186 1 60 1 62 3 99 1 63 1 190 2 34 3 102 1 38 1 240 1 39 2 150 1 196 1 
79 1 118 1 204 1 205 1 6 2 7 1 8 1 51 1 53 1 216 1 20 1 314 1 56 1 180 1 28 1 321 1 138 1 62 2 99 1 29 1 190 1 230 1 34 2 102 1 233 1 38 1 284 1 39 1 150 1 
79 1 118 1 204 1 205 1 6 2 7 1 8 1 51 1 53 1 216 1 313 1 20 1 314 1 23 1 56 1 180 1 95 1 28 1 321 1 138 1 29 1 62 2 99 1 190 1 230 1 34 2 102 1 233 1 38 1 39 1 284 1 150 1 
79 1 118 1 204 1 205 1 6 2 7 1 8 1 51 1 53 1 216 1 313 1 20 1 314 1 23 1 56 1 180 1 95 1 28 1 321 1 138 1 29 1 62 2 99 1 190 1 230 1 34 2 102 1 233 1 38 1 39 1 284 1 150 1 
79 1 118 1 84 1 204 1 46 1 205 1 6 4 7 1 8 1 214 4 215 2 51 1 53 1 216 1 316 2 20 1 314 1 23 1 56 1 180 1 28 2 135 1 225 2 321 1 185 2 60 2 138 2 62 4 99 1 63 1 190 1 230 1 280 2 34 4 102 1 234 2 38 1 39 1 284 1 150 1 290 1 
79 1 118 1 204 1 205 1 6 3 7 1 8 1 171 1 214 1 215 1 51 1 53 1 216 1 313 1 20 1 314 1 23 1 56 1 180 1 95 1 28 1 321 1 185 1 60 1 138 1 29 1 62 2 99 1 190 1 230 1 34 2 102 1 233 1 38 1 284 1 39 1 150 1 
79 1 118 1 204 1 205 1 6 3 7 1 8 1 171 1 214 1 215 1 51 1 53 1 216 1 313 1 20 1 314 1 23 1 56 1 180 1 95 1 28 1 321 1 185 1 60 1 138 1 29 1 62 2 99 1 190 1 230 1 34 2 102 1 233 1 38 1 284 1 39 1 150 1 
79 1 84 1 6 4 7 1 8 1 20 1 180 1 28 2 185 2 99 1 190 1 102 1 34 4 280 2 38 1 39 1 284 1 118 1 204 1 205 1 214 4 215 2 51 1 216 1 53 1 314 1 316 2 56 1 318 1 135 1 321 1 225 2 60 2 138 2 62 4 63 1 230 1 234 2 150 1 
260 1 249 1 27 1 126 1 100 1 101 1 315 1 21 1 267 1 302 1 113 2 
78 8 249 2 297 1 251 2 253 5 121 1 165 1 258 1 260 2 304 1 126 1 91 3 266 8 315 2 21 2 220 1 271 1 134 1 27 2 277 1 31 1 238 6 192 2 39 1 241 11 108 2 107 2 333 1 247 1 152 2 248 1 113 4 
292 1 249 1 297 1 299 1 118 2 119 1 253 1 254 1 123 1 256 1 7 2 259 1 260 1 88 1 304 1 263 1 126 1 90 1 308 1 91 1 54 1 21 1 315 1 269 1 26 1 27 1 136 1 32 1 190 1 67 1 191 1 238 1 285 1 241 2 72 1 153 1 248 1 113 2 
78 6 249 3 251 4 253 12 254 1 162 2 165 1 256 2 7 3 259 2 258 4 260 3 263 1 90 2 91 6 266 6 21 3 269 1 24 2 27 3 190 1 32 2 100 1 101 1 191 2 39 1 285 1 107 2 195 2 289 1 113 6 292 1 297 1 119 1 118 3 299 2 47 2 123 1 207 1 304 1 126 3 308 1 315 3 220 2 134 1 140 2 325 2 65 1 142 1 67 1 144 1 238 12 148 1 241 24 333 3 72 2 153 2 152 2 248 2 
292 1 249 2 118 1 299 2 119 1 253 1 123 8 256 2 208 1 7 1 260 2 304 1 263 2 126 2 308 1 174 1 265 1 176 1 16 1 267 1 315 2 21 2 269 1 27 2 319 2 190 1 141 1 67 8 68 1 238 1 285 7 241 2 111 1 73 1 72 2 153 3 75 1 42 1 113 4 
292 1 78 1 197 1 249 1 2 1 297 1 251 1 118 1 253 2 7 1 258 1 260 1 126 1 91 1 266 1 315 1 21 1 220 1 269 1 27 1 186 1 190 1 238 1 241 3 107 1 152 1 113 2 
78 1 27 1 249 1 251 1 165 1 35 1 260 1 126 1 238 2 241 2 91 1 107 1 333 1 266 1 267 1 21 1 315 1 113 2 
78 1 27 1 249 1 253 2 258 1 260 1 126 1 241 2 172 1 91 1 266 1 267 1 21 1 315 1 220 1 113 2 
78 2 249 1 251 1 253 2 165 1 258 1 260 1 126 1 91 2 266 2 315 1 21 1 267 1 220 1 27 1 238 2 241 4 107 1 333 1 152 1 113 2 
78 1 27 1 249 1 251 1 165 1 35 1 260 1 126 1 238 2 241 2 91 1 107 1 333 1 266 1 21 1 315 1 42 1 113 2 
78 1 27 1 249 1 253 2 258 1 260 1 126 1 241 2 172 1 91 1 266 1 21 1 315 1 220 1 42 1 113 2 
78 2 27 1 249 1 251 1 253 2 258 1 260 1 126 1 238 2 241 4 91 2 107 1 266 2 152 1 220 1 21 1 315 1 42 1 113 2 
78 2 27 1 249 1 251 1 253 2 165 1 258 1 260 1 126 1 238 2 241 4 91 2 107 1 333 1 266 2 152 1 220 1 21 1 315 1 113 2 
249 1 119 1 299 1 118 1 253 1 123 1 256 1 7 1 259 1 260 1 304 1 263 1 126 1 90 1 21 1 315 1 27 1 32 1 140 1 67 1 238 1 191 1 241 2 285 1 72 1 153 1 248 1 113 2 
249 1 119 1 299 1 118 1 253 1 123 1 256 1 7 1 260 1 262 1 304 1 263 1 126 1 18 1 21 1 315 1 57 1 27 1 32 1 67 1 238 1 191 1 241 2 285 1 72 1 153 1 248 1 113 2 
78 2 27 1 249 1 297 1 251 1 253 2 165 1 258 1 260 1 126 1 238 2 241 4 91 2 107 1 333 1 266 2 152 1 220 1 21 1 315 1 113 2 
78 2 249 1 251 1 299 1 118 1 253 2 47 1 165 1 123 1 256 1 208 1 7 1 258 1 259 1 260 1 126 1 90 1 91 2 266 2 220 1 21 1 315 1 27 1 32 1 140 1 67 1 238 2 191 1 241 4 285 1 107 1 333 1 72 1 153 1 152 1 113 2 
292 1 78 1 249 1 2 1 297 1 251 1 118 1 253 1 165 1 7 1 258 1 260 1 126 1 91 1 266 1 220 1 315 1 21 1 269 1 27 1 186 1 190 1 326 1 238 2 241 3 107 1 333 1 152 1 113 2 
260 1 249 1 37 1 129 1 74 1 112 1 315 1 21 1 103 1 113 2 
260 1 249 1 37 1 129 1 74 1 112 1 315 1 21 1 103 1 113 2 
260 1 249 1 37 1 129 1 74 1 112 1 315 1 21 1 103 1 113 2 
260 1 249 1 37 1 129 1 74 1 112 1 315 1 21 1 103 1 113 2 
260 1 249 1 37 1 129 1 74 1 112 1 315 1 21 1 103 1 113 2 
1 1 249 1 297 1 299 1 118 2 119 1 253 1 123 2 256 1 206 1 7 2 260 1 304 1 126 1 306 1 21 1 315 1 27 1 319 2 227 1 190 2 67 2 68 1 238 1 241 2 285 2 154 1 113 2 
299 1 123 2 124 1 256 1 281 1 208 1 67 2 330 1 168 1 149 1 285 2 283 1 331 1 106 1 244 1 110 1 75 1 76 1 221 2 
96 1 299 1 123 1 256 1 281 1 67 1 330 1 168 1 149 1 285 1 331 1 106 1 244 1 110 1 75 1 76 1 221 2 
299 1 141 1 123 1 124 1 256 1 300 1 301 1 281 1 67 1 263 1 285 1 72 1 16 1 153 1 
299 1 123 1 124 1 256 1 281 1 67 1 330 1 168 1 149 1 285 1 283 1 331 1 106 1 244 1 110 1 75 1 76 1 221 2 
282 1 
84 1 278 1 246 1 63 1 205 1 56 1 302 1 
233 1 284 1 29 1 53 1 204 1 230 1 205 1 56 1 
294 1 299 1 204 1 32 1 230 1 123 1 163 1 256 1 67 1 236 1 263 1 11 1 284 1 285 1 53 1 72 1 153 1 
192 1 284 1 108 1 193 1 312 1 53 1 204 1 230 1 205 1 56 1 
98 1 62 1 204 1 230 1 205 1 34 1 65 1 207 1 284 1 53 1 313 1 289 1 56 1 
284 1 84 1 278 1 53 1 204 1 63 1 230 1 205 1 56 1 
251 1 84 1 30 1 45 1 205 1 280 2 258 1 107 1 152 1 41 1 220 1 56 2 
214 1 84 1 62 1 63 1 316 1 34 1 
204 1 324 1 230 1 205 1 279 1 123 1 67 1 329 1 263 1 285 1 284 1 53 1 130 1 
292 2 249 1 118 3 82 1 299 1 253 1 123 1 256 1 7 3 259 1 260 1 304 1 263 1 126 1 90 1 315 1 21 1 269 2 27 1 59 1 186 2 190 2 140 1 32 1 67 1 191 1 241 1 285 1 72 1 153 1 248 1 113 2 
292 1 158 1 82 1 118 1 84 1 204 1 205 1 7 1 307 1 53 1 269 1 186 1 63 1 190 1 230 1 279 1 284 1 39 1 196 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
245 1 64 1 
19 1 291 1 
249 2 165 1 325 1 101 1 100 1 65 1 207 1 260 2 9 1 333 2 289 1 21 2 315 2 113 4 
100 1 101 1 302 1 
181 1 249 1 251 1 253 2 325 1 258 1 260 1 238 2 241 4 107 1 333 1 152 1 21 1 315 1 220 1 113 2 
238 1 192 1 241 2 108 1 193 1 253 1 
249 1 251 4 253 11 121 1 165 2 207 1 258 4 260 1 9 1 220 2 21 1 315 1 277 1 100 1 101 1 325 4 65 1 238 11 148 1 192 2 241 22 107 2 108 2 333 6 289 1 152 2 247 1 113 2 
241 1 108 1 253 1 
238 1 192 1 241 1 
181 1 249 1 251 1 253 3 162 1 165 2 325 1 258 1 260 1 238 3 241 6 107 1 333 3 152 1 315 1 21 1 220 1 113 2 
249 1 251 2 80 1 81 1 253 6 5 1 165 1 258 2 260 1 129 1 311 1 312 1 315 1 21 1 220 2 325 1 238 6 192 1 241 12 108 1 193 1 107 2 333 2 152 2 113 2 
251 1 253 3 325 1 165 1 65 1 258 1 238 3 148 1 241 6 333 2 289 1 
249 1 202 1 253 1 165 1 325 1 100 1 101 1 65 1 207 1 260 1 9 1 241 1 333 2 289 1 21 1 315 1 113 2 
249 1 251 2 253 5 325 2 165 2 65 1 207 1 258 2 260 1 238 5 148 1 241 10 129 1 333 4 289 1 315 1 21 1 113 2 
249 1 251 1 165 1 260 1 238 2 241 2 107 1 129 1 333 1 21 1 315 1 113 2 
249 1 251 1 253 2 325 1 165 1 258 1 260 1 238 2 241 4 107 1 129 1 333 2 152 1 220 1 21 1 315 1 113 2 
249 1 253 1 325 1 65 1 260 1 238 1 241 2 129 1 333 1 289 1 21 1 315 1 113 2 
249 4 251 3 253 8 165 2 207 1 257 1 258 2 260 4 9 1 129 1 218 1 315 4 21 4 220 2 181 1 277 1 100 1 101 1 325 2 65 1 231 1 238 9 192 3 241 17 108 4 193 1 107 3 287 1 333 4 289 1 152 3 113 8 
249 1 251 3 253 7 165 1 207 1 258 2 260 1 129 1 312 1 315 1 21 1 277 1 325 2 101 1 100 1 65 1 238 8 148 1 192 1 241 15 108 2 193 1 107 1 333 3 289 1 152 1 113 2 
249 2 251 3 253 7 165 2 207 1 258 2 260 2 129 1 312 1 315 2 21 2 181 1 277 1 325 2 100 1 101 1 65 1 238 8 148 1 192 1 241 15 108 2 193 1 107 1 333 4 289 1 152 1 113 4 
260 1 249 1 238 1 192 1 241 2 108 1 193 1 253 1 129 1 312 1 315 1 21 1 113 2 
249 3 251 2 80 1 81 1 253 4 5 1 165 1 258 1 260 3 9 1 129 1 311 1 312 1 315 3 21 3 220 1 181 1 238 7 192 1 241 11 108 1 193 1 107 2 333 1 152 2 113 6 
249 1 251 3 253 7 165 1 207 1 258 2 260 1 129 1 312 1 315 1 21 1 277 1 325 2 101 1 100 1 65 1 238 8 148 1 192 1 241 15 108 2 193 1 107 1 333 3 289 1 152 1 113 2 
260 1 249 1 238 1 192 1 241 2 108 1 193 1 253 1 129 1 312 1 315 1 21 1 113 2 
249 4 251 2 80 1 81 1 253 5 5 1 165 1 258 1 260 4 9 2 311 1 129 1 312 1 315 4 21 4 220 1 181 1 325 1 238 7 192 1 241 12 108 1 193 1 107 2 333 2 152 2 113 8 
249 3 251 2 80 1 81 1 253 4 5 1 165 2 258 1 260 3 9 1 129 1 311 1 312 1 315 3 21 3 220 1 238 7 192 1 241 11 108 1 193 1 107 2 287 1 333 2 152 2 113 6 
253 1 101 1 100 1 325 1 165 1 65 1 207 1 238 1 241 2 333 2 289 1 
249 4 251 2 80 1 81 1 253 5 5 1 165 1 258 1 260 4 9 2 311 1 129 1 312 1 315 4 21 4 220 1 325 1 238 7 192 1 241 12 108 1 193 1 107 2 287 1 333 2 152 2 113 8 
8 1 146 1 118 1 71 1 190 1 248 1 7 1 
293 1 43 1 118 1 228 1 190 1 7 1 8 1 146 1 213 1 14 1 71 1 248 1 
67 1 263 1 285 1 299 1 72 1 16 1 153 1 141 1 123 1 256 1 302 1 
292 1 118 2 299 1 32 1 190 1 123 1 256 1 7 2 67 1 191 1 263 1 308 1 90 1 285 1 72 1 153 1 248 1 269 1 
292 1 299 1 118 2 123 1 256 1 7 2 90 1 308 1 314 1 269 2 274 1 190 2 32 2 67 1 104 1 237 1 191 1 285 1 39 1 150 1 72 2 153 3 248 1 
292 1 299 1 118 2 123 2 256 1 7 2 169 1 308 1 314 1 269 2 57 1 274 1 190 2 32 2 67 2 104 1 237 1 191 1 285 2 39 1 150 1 72 2 153 3 248 1 
292 1 158 1 118 1 82 1 299 1 84 1 123 2 86 1 256 1 7 1 263 1 307 1 11 1 214 1 52 1 178 1 269 1 186 1 274 1 62 2 99 1 190 1 32 1 63 1 34 2 67 2 104 1 237 1 39 1 285 2 72 1 153 3 196 1 
274 1 299 1 84 1 99 1 62 2 120 1 63 1 32 1 123 3 256 1 34 2 104 1 67 3 237 1 263 1 169 1 11 1 285 3 214 1 72 1 178 1 153 3 
67 1 285 1 299 1 111 1 123 1 256 1 
199 1 294 1 319 1 299 2 4 1 32 1 123 7 256 3 208 1 67 7 303 1 263 2 285 6 174 1 265 1 176 1 111 1 73 1 72 2 153 3 75 1 
1 1 249 2 251 2 253 5 165 1 256 1 7 2 259 1 258 2 260 2 90 1 21 2 24 1 269 1 27 2 190 1 32 1 101 1 100 1 191 1 39 1 285 1 289 1 113 4 292 1 297 1 118 2 299 1 47 1 123 1 208 1 207 1 126 2 308 1 315 2 134 1 140 1 325 2 65 1 67 1 238 5 148 1 241 10 333 3 72 1 153 1 248 2 
299 1 84 1 204 2 120 1 205 1 123 1 256 1 263 1 11 1 214 2 309 1 53 2 178 1 316 1 56 1 187 1 278 1 99 1 62 3 63 1 32 1 323 1 230 2 34 3 67 1 329 1 237 1 285 1 284 2 109 1 246 1 72 1 153 2 
294 1 299 1 32 1 123 1 163 1 256 1 67 1 285 1 178 1 111 1 72 1 153 1 
299 1 141 1 123 4 256 1 208 1 67 4 263 1 169 1 12 1 285 4 16 1 72 1 153 1 
223 1 199 1 226 1 274 1 117 1 299 1 4 1 32 1 123 2 256 2 67 2 285 2 72 1 153 1 
67 1 330 1 263 1 285 1 106 1 299 1 76 1 123 1 256 1 221 1 
67 2 285 2 299 1 154 1 75 1 123 2 256 1 208 1 
274 1 299 2 141 1 123 5 256 2 208 1 67 5 263 1 12 1 285 4 174 1 176 1 16 1 73 1 72 2 153 3 
274 1 299 2 141 1 123 5 256 2 208 1 67 5 263 1 147 1 12 1 285 4 174 1 176 1 16 1 72 2 153 3 
292 1 118 2 299 1 32 1 190 1 123 1 256 1 7 2 67 1 191 1 263 1 308 1 285 1 72 1 153 1 248 1 269 1 57 1 
199 1 294 1 274 1 299 1 4 1 32 1 123 1 256 2 67 1 303 1 285 1 72 1 153 1 
175 1 66 1 
145 1 170 1 33 1 
134 1 227 1 118 1 190 1 66 1 206 1 7 1 145 2 306 1 39 1 175 1 248 1 
292 1 158 1 82 1 118 2 84 1 206 1 7 2 306 1 307 1 170 1 49 1 309 1 13 1 175 1 216 1 314 1 269 1 186 1 227 1 62 2 99 1 63 1 190 2 33 1 66 1 34 2 145 2 39 2 150 1 196 1 
184 1 132 1 55 1 302 1 
211 1 320 1 184 1 212 1 128 1 132 1 55 1 
211 1 250 1 179 1 
224 1 320 1 184 1 210 1 211 3 212 3 127 1 48 1 128 1 132 1 268 2 55 1 
232 1 327 1 211 2 320 1 184 1 212 2 128 1 132 1 55 1 
224 1 320 1 211 1 330 1 212 1 50 1 128 1 194 1 110 1 132 1 221 1 
224 1 211 1 320 1 184 1 212 1 128 1 132 1 
224 1 211 1 320 1 184 2 212 1 128 1 55 1 
224 1 222 1 157 1 320 2 184 1 139 1 211 2 212 2 128 2 132 1 
224 1 200 1 320 1 184 1 327 2 211 3 212 3 239 1 50 1 128 1 310 1 132 2 55 1 
224 1 320 1 184 1 164 1 327 1 211 2 330 1 212 2 168 1 106 1 128 1 110 1 132 1 55 1 221 2 
224 1 320 2 184 1 232 1 327 2 211 4 212 4 50 1 128 2 310 1 151 1 132 2 55 1 
224 1 211 1 320 1 184 1 212 1 128 1 132 1 55 1 
198 1 320 1 184 2 327 2 211 4 127 1 212 4 48 1 50 1 128 1 310 1 132 3 268 1 55 2 
224 1 296 1 320 1 184 1 327 1 211 2 212 2 69 1 128 1 17 1 132 1 55 1 
224 1 320 1 184 1 3 1 211 3 127 1 212 3 48 2 128 1 132 1 268 2 55 1 
328 1 173 1 132 2 155 2 
224 1 211 1 159 1 320 1 212 1 128 1 
224 1 327 1 200 1 211 2 320 1 184 1 212 2 128 1 132 1 55 1 
10 1 
224 1 211 1 320 1 184 1 212 1 128 1 132 1 55 1 
224 1 327 1 200 1 211 3 320 1 184 1 212 3 128 1 132 1 55 1 268 1 
198 1 50 1 310 1 132 1 
184 1 132 1 

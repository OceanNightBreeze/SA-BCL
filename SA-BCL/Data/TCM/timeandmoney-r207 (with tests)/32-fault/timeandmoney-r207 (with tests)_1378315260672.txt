#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (70,72,136,264,292) (90,185) (90,185) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (70,72,136,264,292) (90,185) (90,185) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (70,72,136,264,292) (90,185) (90,185) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (70,72,136,264,292) (90,185) (90,185) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (36,270) (36,270) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 161 (50,95,133) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (103,168,225) (11,34,260) (11,34,260) (11,34,260) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (103,168,225) (11,34,260) (11,34,260) (11,34,260) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (103,168,225) (11,34,260) (11,34,260) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (103,168,225) (11,34,260) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (160,243) 325 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (160,243) 325 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 18 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 304 289 184 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 304 289 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 304 289 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 304 289 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 304 289 184 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (103,168,225) (103,168,225) (103,168,225) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (103,168,225) (103,168,225) (103,168,225) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (103,168,225) (103,168,225) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (160,243) 325 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 18 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 333 245 224 177 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 293 254 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (160,243) 325 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 283 251 (221,252) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 283 251 (153,255) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (160,243) (160,243) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (160,243) (160,243) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 121 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 4 1 119 2 174 2 52 1 201 2 166 1 291 3 61 1 63 1 155 1 271 3 343 1 
202 1 241 1 148 1 190 1 72 1 291 1 90 1 155 1 271 1 174 1 185 1 201 1 
202 1 241 1 148 1 190 1 72 1 291 1 90 1 155 1 271 1 174 1 185 1 201 1 
202 1 241 1 148 1 190 1 72 1 291 1 90 1 155 1 271 1 174 1 185 1 201 1 
202 1 241 1 148 1 190 1 72 1 291 1 90 1 155 1 271 1 174 1 185 1 201 1 
1 2 190 1 4 2 119 3 191 1 46 1 192 1 174 1 229 1 52 1 201 1 166 1 130 1 291 4 61 1 63 3 271 4 65 1 
202 1 190 1 291 1 270 1 155 1 36 1 271 1 174 1 201 1 276 1 
1 2 4 4 46 1 174 2 52 1 176 1 61 1 63 7 155 1 271 9 65 1 21 1 190 1 119 5 192 1 191 1 229 1 201 2 83 1 166 3 130 1 291 9 343 1 302 1 
1 2 4 4 46 1 174 2 52 1 176 1 61 1 63 7 155 1 271 9 65 1 21 1 190 1 119 5 192 1 191 1 229 1 201 2 83 1 166 3 130 1 291 9 343 1 302 1 
140 1 326 1 307 1 98 1 78 1 262 1 7 1 212 1 82 1 128 1 152 1 220 1 297 1 20 1 
8 1 
239 1 140 2 8 1 117 1 98 2 209 1 7 1 68 1 
140 5 117 2 144 1 305 1 309 1 98 5 49 1 31 1 7 2 199 1 145 1 316 2 53 1 239 1 8 1 9 1 157 2 209 1 139 2 
8 1 209 1 18 1 
285 2 8 1 111 1 
82 1 326 2 279 1 128 2 152 2 220 2 262 2 20 2 
252 1 303 1 5 2 175 1 262 2 313 1 101 1 214 2 152 3 12 1 179 1 180 1 156 1 220 2 181 2 320 1 321 1 20 2 226 1 326 3 279 1 27 1 193 1 76 1 122 1 124 2 164 1 234 1 235 1 82 1 85 2 129 1 128 2 131 1 167 1 296 1 251 1 
82 1 326 1 128 1 152 1 307 1 220 1 262 1 297 1 212 1 20 1 
140 1 307 1 98 1 262 2 212 1 8 1 152 2 319 1 220 1 182 1 20 1 326 2 194 1 198 1 78 1 125 1 82 1 126 1 128 1 209 1 297 2 
140 2 326 2 307 1 98 2 194 1 78 1 262 2 212 1 82 1 125 1 8 1 128 2 126 1 152 2 319 1 209 1 220 2 297 2 20 2 
140 1 117 1 98 1 7 1 200 1 
239 1 140 2 8 1 117 1 59 1 98 2 209 1 7 1 
140 1 117 1 98 1 
26 1 326 2 279 1 48 1 262 2 128 1 269 1 152 2 220 1 297 1 20 1 
54 1 337 1 244 1 
326 1 252 1 279 1 5 1 76 1 175 1 77 1 234 1 214 1 131 1 152 1 180 1 181 1 321 1 251 1 226 1 
279 1 18 1 
252 1 326 2 172 1 5 1 76 1 175 1 262 1 234 1 214 1 54 1 131 1 152 2 180 1 220 1 181 1 321 1 93 1 20 1 226 1 251 1 
26 1 326 5 279 1 172 2 6 1 262 5 128 1 340 1 152 5 220 4 182 1 20 4 93 1 23 1 
326 2 152 2 307 1 220 2 262 2 335 1 297 1 20 2 
326 3 279 1 128 1 172 1 152 3 220 3 262 3 20 3 
326 1 152 1 307 1 220 1 262 1 297 1 20 1 
26 1 326 1 48 1 262 1 128 1 152 1 220 1 297 1 20 1 
252 1 172 1 5 1 98 1 262 3 175 1 101 1 268 1 269 1 180 1 179 1 13 1 181 1 20 3 26 1 27 1 279 1 193 1 194 1 122 1 124 1 125 1 128 2 126 1 131 1 296 1 297 2 140 1 303 1 313 1 214 1 152 4 319 1 220 3 321 1 226 1 326 4 76 1 234 1 235 1 82 1 85 2 167 1 93 1 251 1 
326 2 279 1 340 1 152 2 172 1 220 1 182 1 262 2 20 1 
26 1 140 1 326 3 172 2 98 1 194 1 262 3 102 1 125 1 8 1 128 1 126 1 152 3 13 1 319 1 220 3 297 1 93 1 20 3 
26 1 326 2 172 1 262 2 54 1 128 1 244 1 152 2 220 2 20 2 
326 1 252 1 279 1 5 1 76 1 175 1 234 1 214 1 131 1 152 1 180 1 181 1 321 1 251 1 226 1 
326 1 279 1 5 1 76 1 175 1 234 1 214 1 269 1 131 1 152 1 153 1 154 1 180 1 181 1 297 1 251 1 226 1 
94 1 51 1 101 1 54 2 179 2 14 1 320 2 27 1 193 1 196 1 197 1 122 1 333 1 232 1 124 4 337 2 85 2 244 2 206 1 167 1 207 1 37 1 250 1 296 1 
326 1 152 1 194 1 220 1 262 1 297 1 335 1 20 1 
95 1 161 1 133 1 75 1 
95 1 75 1 50 1 
95 1 75 1 
95 1 75 1 
161 1 133 1 
161 1 133 1 
161 1 133 1 
95 1 75 1 138 1 
95 1 75 1 138 1 
95 1 75 1 138 1 
240 1 95 1 75 1 
240 1 95 1 75 1 
240 1 95 1 75 1 
140 1 95 1 98 1 310 1 262 2 50 1 55 1 151 1 152 2 220 2 67 1 66 1 20 2 25 1 326 2 279 1 159 1 75 1 230 1 242 1 204 1 88 1 342 1 301 1 
140 2 189 1 95 2 159 2 282 1 330 1 98 2 75 2 55 2 8 1 151 3 204 2 219 1 88 2 248 1 40 1 294 2 274 1 301 1 
276 1 
46 1 229 1 65 1 
276 1 
276 1 
276 1 
140 5 305 1 258 1 98 5 310 1 49 3 7 4 265 2 316 1 8 2 9 2 10 2 157 1 66 1 322 1 111 1 227 2 117 1 230 1 332 1 197 1 333 1 336 1 239 1 285 3 206 1 245 1 208 1 209 1 39 1 250 1 139 1 
96 1 258 2 98 8 262 1 7 6 100 4 265 6 8 5 9 6 111 3 20 1 117 5 28 1 197 3 199 1 200 4 285 9 128 1 206 3 209 1 39 2 297 1 139 2 140 8 305 1 307 1 311 1 49 8 212 1 316 2 152 1 157 2 220 1 222 1 66 4 326 1 227 6 73 1 332 1 78 1 333 3 81 1 82 1 239 1 245 3 250 3 
140 3 258 1 98 3 49 3 7 2 316 1 265 2 8 3 10 1 9 2 157 1 66 1 111 2 227 2 197 1 333 1 199 1 336 1 285 4 206 1 245 1 208 1 209 1 39 1 250 1 139 1 
96 1 258 1 98 3 262 1 7 2 265 4 8 4 9 4 10 1 111 3 20 1 28 1 197 2 199 1 285 7 128 1 206 2 208 1 39 1 209 1 297 1 139 1 140 3 307 1 49 5 212 1 316 1 152 1 157 1 220 1 66 2 326 1 227 4 73 1 333 2 78 1 336 1 82 1 245 2 250 2 
15 1 
238 1 175 1 18 1 
24 1 175 1 
76 1 175 1 226 1 
175 1 300 1 
175 1 226 1 
238 2 327 1 62 1 76 1 175 3 226 1 
171 2 218 1 179 4 320 5 110 1 323 1 277 1 329 1 196 4 197 2 124 9 32 1 84 1 338 1 35 1 37 3 249 1 250 2 92 2 
277 2 84 1 218 1 329 1 320 1 124 1 266 1 
210 1 171 1 256 1 101 1 179 5 320 6 110 1 323 2 277 1 27 1 329 1 196 5 197 2 122 1 124 11 32 1 85 2 84 1 338 1 167 1 37 3 250 2 249 1 92 1 298 1 
171 2 218 1 179 4 320 5 110 1 323 1 277 1 329 1 196 4 197 2 32 1 124 9 84 1 338 1 37 3 249 1 250 2 92 2 
171 2 218 1 179 4 320 5 110 1 323 3 277 1 329 1 196 6 197 2 32 1 124 9 84 1 338 1 37 3 249 1 250 2 92 2 
142 1 5 1 259 2 174 1 175 1 162 1 99 1 201 1 234 1 214 1 216 1 317 2 131 1 291 1 246 1 180 1 155 2 271 1 181 1 183 1 295 2 226 1 69 1 
190 1 5 1 259 1 331 1 260 1 174 1 231 1 201 1 214 1 317 1 34 1 131 1 11 1 291 1 180 1 155 1 271 1 181 1 273 1 295 1 225 1 276 1 
190 1 5 1 259 1 260 1 174 1 231 1 201 1 214 1 317 1 34 1 131 1 11 1 291 1 180 1 155 1 271 1 181 1 273 1 295 1 225 1 346 1 276 1 
5 1 259 1 331 1 260 1 174 1 231 1 201 1 214 1 317 1 34 1 287 1 131 1 291 2 180 1 63 1 155 1 271 2 181 1 183 1 273 1 295 1 225 1 276 1 
5 1 259 1 331 1 231 1 214 1 317 1 34 1 287 1 131 1 291 1 180 1 63 1 155 1 271 1 181 1 295 1 225 1 276 1 
281 1 
140 2 305 1 5 2 258 1 98 2 49 1 175 2 316 1 214 2 9 1 180 2 157 1 181 2 275 1 69 1 226 2 187 1 325 1 278 1 117 2 160 1 76 1 162 1 234 2 239 1 131 2 169 1 139 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 3 326 1 117 1 280 1 120 1 98 3 194 1 198 1 262 1 125 1 239 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 68 1 
140 2 326 1 280 1 305 1 120 1 98 2 194 1 198 1 262 1 316 1 125 1 8 1 126 1 152 1 288 1 319 1 157 1 209 1 182 1 297 1 139 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 120 1 98 2 194 1 198 1 262 1 125 1 8 1 126 1 288 1 152 1 319 1 209 1 182 1 297 1 
140 2 326 1 280 1 305 1 120 1 98 2 194 1 198 1 262 1 316 1 125 1 8 1 126 1 152 1 288 1 319 1 157 1 209 1 182 1 297 1 139 1 
303 1 172 1 5 6 262 1 175 4 101 2 214 7 149 1 152 1 180 3 12 1 179 1 220 1 181 7 320 1 223 1 20 1 69 1 226 3 187 1 325 1 326 1 27 2 160 1 328 1 284 1 193 2 29 1 76 1 122 2 162 1 232 1 124 2 234 2 33 1 85 4 129 2 131 3 167 2 134 1 296 2 346 1 
262 1 101 1 263 1 54 1 152 1 179 2 220 1 320 1 20 1 26 1 326 1 27 1 193 1 196 1 122 1 333 1 197 1 124 3 236 1 337 1 85 2 128 1 244 1 167 1 245 1 206 1 37 1 296 1 250 1 
171 1 27 1 193 1 196 1 122 1 232 1 101 1 32 1 85 2 338 1 167 1 37 1 18 1 296 1 92 1 
0 3 303 1 253 1 173 1 101 2 263 1 54 11 105 1 12 1 179 6 107 1 272 3 320 8 323 1 279 1 27 2 118 1 193 1 195 1 196 2 122 2 333 2 197 1 124 14 337 11 85 4 244 4 167 2 245 2 206 1 37 1 296 2 250 2 
252 1 303 1 172 1 5 1 175 1 262 1 263 1 101 1 214 1 57 1 152 2 180 1 179 1 12 1 181 1 220 1 320 1 321 1 112 1 20 1 226 1 326 2 279 1 27 1 193 1 76 1 77 1 122 1 124 2 234 1 85 2 86 1 131 1 244 1 167 1 296 1 93 1 251 1 
252 2 171 2 172 1 5 1 257 1 262 1 175 2 101 3 263 1 269 1 12 1 179 8 180 2 181 1 110 1 20 1 279 1 27 3 193 3 196 5 122 3 197 3 32 1 124 16 131 2 290 2 206 1 37 4 296 3 297 1 303 1 308 1 313 2 315 1 214 1 54 3 152 3 220 1 320 8 321 2 323 1 226 2 326 3 76 2 333 1 234 1 337 3 85 6 338 1 244 3 167 3 341 1 245 1 249 1 250 3 92 2 344 2 93 1 251 2 
27 1 193 1 196 1 122 1 333 1 232 1 101 1 124 2 54 1 337 1 85 2 244 1 167 1 207 1 296 1 250 1 320 2 323 1 
27 1 193 1 196 1 122 1 197 1 232 1 101 1 51 1 124 2 54 1 337 1 85 2 244 1 167 1 206 1 179 2 37 1 296 1 
101 1 54 2 179 2 320 2 323 1 27 1 193 1 196 2 333 1 122 1 197 1 232 1 124 4 337 2 85 2 244 2 245 1 167 1 206 1 37 1 250 1 296 1 
27 1 328 1 193 1 196 1 122 1 333 1 101 1 124 2 54 1 337 1 85 2 244 1 167 1 207 1 296 1 250 1 320 2 323 1 
27 1 328 1 193 1 196 1 122 1 197 1 101 1 51 1 124 2 54 1 337 1 85 2 244 1 167 1 206 1 179 2 37 1 296 1 
101 1 54 2 179 2 320 2 323 1 27 1 328 1 193 1 196 2 333 1 122 1 197 1 124 4 337 2 85 2 244 2 245 1 167 1 206 1 37 1 250 1 296 1 
101 1 54 2 179 2 320 2 323 1 27 1 193 1 196 2 333 1 122 1 197 1 124 4 337 2 85 2 244 2 245 1 167 1 206 1 37 1 250 1 296 1 
252 1 303 1 5 1 313 1 175 1 101 1 214 1 152 1 12 1 180 1 179 1 181 1 320 1 321 1 226 1 326 1 279 1 27 1 193 1 76 1 122 1 124 2 234 1 85 2 131 1 167 1 296 1 251 1 
303 1 306 1 5 1 175 1 101 1 214 1 269 1 153 1 152 1 154 1 180 1 179 1 181 1 226 1 326 1 279 1 27 1 193 1 76 1 122 1 124 1 234 1 85 2 131 1 167 1 296 1 297 1 251 1 
101 1 263 1 54 2 179 2 320 2 323 1 27 1 193 1 196 2 333 1 122 1 197 1 124 4 337 2 85 2 244 2 245 1 167 1 206 1 37 1 250 1 296 1 
252 1 5 1 313 1 175 1 101 1 214 1 54 2 152 1 179 2 180 1 181 1 320 2 321 1 323 1 226 1 326 1 27 1 193 1 196 2 76 1 197 1 333 1 122 1 124 4 337 2 85 2 131 1 244 2 206 1 167 1 245 1 37 1 250 1 296 1 344 1 346 1 251 1 
262 1 101 1 263 1 54 1 152 1 179 1 220 1 320 2 186 1 323 1 20 1 26 1 326 1 27 1 193 1 196 1 197 1 122 1 333 1 124 3 337 1 85 2 128 1 244 1 206 1 167 1 245 1 296 1 250 1 
85 2 27 1 2 1 304 1 289 1 167 1 256 1 122 1 184 1 101 1 
85 2 27 1 2 1 304 1 289 1 167 1 256 1 122 1 184 1 101 1 
85 2 27 1 2 1 304 1 289 1 167 1 256 1 122 1 184 1 101 1 
85 2 27 1 2 1 304 1 289 1 167 1 256 1 122 1 184 1 101 1 
85 2 27 1 2 1 304 1 289 1 167 1 256 1 122 1 184 1 101 1 
55 1 127 1 159 1 95 1 204 1 282 1 88 1 330 1 75 1 274 1 
242 1 50 1 
55 1 159 1 95 1 204 1 88 1 47 1 75 1 64 1 170 1 
74 1 138 1 
240 1 215 1 324 1 
140 1 189 1 95 1 159 1 282 1 330 1 98 1 75 1 55 1 8 1 151 2 204 1 219 1 88 1 40 1 294 1 274 1 301 1 
140 1 189 1 95 1 159 1 282 1 330 1 98 1 75 1 55 1 8 1 151 2 204 1 219 1 88 1 40 1 294 1 274 1 301 1 
140 1 189 1 95 1 159 1 282 1 330 1 98 1 75 1 55 1 8 1 151 2 204 1 219 1 88 1 40 1 294 1 274 1 301 1 
74 1 138 1 324 1 
74 1 138 1 324 1 
240 1 215 1 
240 1 215 1 324 1 
25 1 342 1 
140 1 95 1 98 1 310 1 50 1 262 2 314 1 7 1 55 1 151 1 152 2 220 2 67 1 66 1 20 2 25 1 326 2 279 1 159 1 75 1 230 1 242 1 204 1 88 1 40 1 342 1 294 1 
303 1 45 1 5 2 175 1 262 2 263 1 101 1 214 2 152 2 180 1 12 1 179 1 181 2 320 1 223 1 226 1 116 1 188 1 326 2 27 1 284 1 193 1 122 1 124 2 85 2 129 2 131 1 167 1 296 1 137 1 42 1 
141 1 5 1 175 1 162 1 234 1 214 1 317 1 104 1 131 1 246 1 180 1 181 1 226 1 69 1 
141 1 5 1 331 1 231 1 214 1 103 1 317 1 131 1 180 1 181 1 168 1 273 1 225 1 276 1 
141 1 5 2 331 1 231 1 214 2 103 1 317 1 131 1 180 1 181 2 168 1 273 1 346 1 225 1 276 1 
5 1 331 1 231 1 163 1 214 1 317 1 131 1 180 1 181 1 168 1 273 1 225 1 276 1 
267 1 
144 1 305 1 309 1 49 1 316 1 8 1 9 1 157 1 209 1 139 1 
227 5 261 1 49 5 333 2 197 2 265 5 146 2 285 10 8 5 9 5 341 1 245 2 206 2 250 2 111 5 
140 1 239 1 8 1 117 1 98 1 209 1 
140 1 3 1 305 1 5 2 258 1 98 1 49 1 175 2 316 1 214 2 9 1 180 2 157 1 181 2 275 1 226 2 69 1 187 1 325 1 278 1 117 2 160 1 76 1 162 1 234 2 239 1 131 2 169 1 139 1 
8 1 9 1 144 1 309 1 49 1 209 1 18 1 
140 1 117 1 305 1 98 1 49 1 316 1 239 1 285 1 8 2 9 1 318 1 157 1 209 1 345 1 111 1 139 1 299 1 
5 1 258 1 98 2 175 4 265 3 8 3 9 3 178 1 180 1 181 1 111 3 24 2 117 2 197 1 125 1 285 6 131 2 132 1 205 1 206 1 139 2 43 1 140 2 305 2 49 4 316 2 214 1 146 1 56 1 157 2 221 1 226 1 227 3 327 1 76 1 333 1 234 1 238 1 239 1 341 1 245 1 91 1 250 1 
0 1 305 1 49 6 265 4 316 1 177 1 8 1 9 4 105 1 157 1 272 1 111 1 224 1 227 4 333 2 197 2 334 1 286 1 285 2 245 2 206 2 89 1 250 2 139 1 
140 1 171 1 305 1 97 1 307 1 98 1 261 1 49 2 262 1 212 1 316 1 146 2 9 2 152 1 157 1 220 1 110 1 20 1 326 1 197 1 78 1 82 1 128 1 249 1 250 2 297 1 92 1 139 1 
252 1 303 1 5 1 262 2 313 1 175 1 101 1 214 1 152 3 179 1 180 1 181 1 220 2 321 1 20 2 226 1 326 3 279 1 27 1 193 1 76 1 122 1 124 1 234 1 235 1 82 1 85 2 128 2 131 1 167 1 296 1 251 1 
227 2 278 1 305 1 258 1 49 1 265 2 316 1 84 1 285 4 8 4 9 2 157 1 209 2 111 2 139 1 
25 1 159 1 88 1 312 1 274 1 
203 1 159 1 88 1 
203 1 159 1 88 1 
203 1 159 1 88 1 
159 1 88 1 237 1 
159 1 88 1 237 1 
159 1 88 1 237 1 
159 1 88 1 
95 1 75 1 
27 1 171 2 256 1 196 5 122 1 197 2 101 1 124 10 85 2 167 1 179 5 37 3 249 1 320 5 250 2 92 2 110 1 323 2 
27 1 256 1 196 1 122 1 333 1 101 1 124 2 85 2 167 1 250 1 320 2 323 1 
27 1 256 1 196 2 197 1 122 1 333 1 101 1 124 4 85 2 206 1 167 1 245 1 179 2 37 1 250 1 320 2 323 1 
210 1 27 2 171 1 256 1 196 2 122 2 101 2 124 3 85 4 106 1 167 2 179 2 37 1 16 1 320 1 92 1 323 1 
210 1 0 3 171 1 211 1 256 1 101 3 147 1 105 1 60 1 106 1 179 12 272 3 320 12 110 1 323 3 27 3 196 6 122 3 333 2 197 4 32 1 124 24 85 6 338 1 87 1 167 3 245 2 206 2 37 3 249 1 250 4 92 1 
210 1 171 1 101 1 179 5 320 5 110 1 323 2 27 1 196 4 122 1 197 2 32 1 124 10 85 2 338 1 167 1 37 2 249 1 250 2 92 1 
171 1 338 1 37 1 196 1 18 1 92 1 32 1 
27 1 211 1 196 2 197 1 122 1 333 1 101 1 124 4 85 2 206 1 167 1 245 1 179 2 37 1 250 1 320 2 323 1 
0 2 173 1 196 2 197 1 333 1 124 7 105 1 206 1 245 1 179 4 37 1 272 1 320 3 250 1 323 1 
0 2 210 1 171 1 253 1 173 1 179 10 272 2 320 10 110 1 323 2 196 5 195 1 197 4 333 2 124 20 32 1 338 1 206 2 245 2 37 3 250 4 249 1 92 1 
0 1 179 1 124 1 
272 1 320 1 124 1 
27 1 211 1 196 4 122 1 333 1 197 1 101 1 124 6 85 2 167 1 341 1 245 1 206 1 179 3 37 2 250 1 320 3 323 2 
0 1 27 1 256 1 333 1 122 1 334 1 101 1 124 5 85 2 177 1 105 1 245 1 167 1 179 2 272 1 250 1 320 3 224 1 
171 1 196 2 197 1 124 6 179 3 37 1 250 1 320 3 110 1 92 1 323 1 
210 1 179 1 16 1 124 1 
0 1 171 2 256 1 101 1 177 1 105 1 179 5 272 1 320 5 110 1 323 1 27 1 196 4 197 2 122 1 124 10 32 1 85 2 338 1 167 1 37 3 250 2 249 1 92 2 
0 2 171 2 211 1 256 1 173 1 101 2 177 1 105 1 179 6 272 1 320 7 110 1 323 2 27 2 196 5 197 2 122 2 333 1 32 1 124 13 85 4 338 1 167 2 245 1 37 3 249 1 250 3 92 2 
0 1 27 1 256 1 333 1 122 1 334 1 101 1 124 5 85 2 177 1 105 1 245 1 167 1 179 2 272 1 250 1 320 3 224 1 
0 1 27 1 256 1 333 1 122 1 334 1 101 1 124 5 85 2 177 1 105 1 245 1 167 1 179 2 272 1 250 1 320 3 224 1 
0 1 171 2 256 1 101 1 177 1 105 1 179 5 272 1 320 5 110 1 323 1 27 1 196 4 197 2 122 1 124 10 32 1 85 2 338 1 167 1 37 3 250 2 249 1 92 2 
0 1 27 1 256 1 333 1 122 1 334 1 101 1 124 5 85 2 177 1 105 1 245 1 167 1 179 2 272 1 250 1 320 3 224 1 
0 1 27 2 211 1 256 1 333 1 122 2 334 1 101 2 124 5 85 4 177 1 105 1 245 1 167 2 179 2 272 1 250 1 320 3 224 1 
0 1 27 2 256 1 333 1 122 2 334 1 101 2 124 5 85 4 177 1 105 1 245 1 106 1 167 2 179 2 272 1 250 1 320 3 224 1 
171 3 196 6 197 1 124 5 32 1 338 1 179 3 37 3 320 2 250 1 249 1 110 1 92 3 323 3 
0 1 27 2 256 1 333 1 122 2 334 1 101 2 124 5 85 4 177 1 105 1 245 1 106 1 167 2 179 2 272 1 250 1 320 3 224 1 
326 1 279 1 152 1 340 1 293 1 262 1 182 1 
44 1 254 1 247 1 293 1 135 1 108 1 
58 1 131 1 5 4 180 1 181 4 175 1 162 1 41 1 346 1 234 1 226 1 69 1 214 4 
187 1 325 1 217 1 131 1 160 1 5 1 180 1 76 1 181 1 175 1 226 1 214 1 
131 1 5 1 180 1 181 1 231 1 234 1 276 1 214 1 
188 1 5 2 284 1 331 1 175 1 214 2 131 1 180 1 181 2 346 1 226 1 
71 1 5 4 284 1 29 1 162 1 175 3 234 1 214 5 149 1 131 2 180 2 181 5 41 1 346 1 69 1 226 2 
71 1 5 4 284 1 29 1 162 1 175 3 80 1 234 1 214 5 131 2 180 2 181 5 41 1 346 1 69 1 226 2 
131 1 5 1 180 1 181 1 175 1 162 1 18 1 234 1 226 1 69 1 214 1 
326 2 252 1 279 1 172 1 5 1 76 1 175 1 262 1 234 1 214 1 131 1 152 2 180 1 220 1 181 1 20 1 226 1 251 1 
326 1 252 1 71 1 172 1 283 1 5 1 76 2 175 3 262 1 214 1 131 1 152 1 180 1 220 1 181 1 300 1 20 1 226 2 251 1 
326 1 71 1 172 1 283 1 5 1 76 2 175 3 262 1 214 1 131 1 152 1 153 1 180 1 220 1 181 1 300 1 20 1 226 2 251 1 
140 2 255 1 5 1 307 1 98 2 262 1 175 4 212 1 214 1 8 1 152 1 180 1 220 1 181 1 20 1 226 1 24 1 326 1 117 1 71 1 283 1 76 1 78 1 123 1 82 1 238 1 125 1 128 1 131 1 209 1 297 1 300 1 
140 2 5 1 307 1 98 2 262 1 175 4 212 1 214 1 8 1 152 1 180 1 220 1 221 1 181 1 20 1 226 1 24 1 326 1 117 1 71 1 283 1 76 1 78 1 82 1 238 1 125 1 128 1 131 1 209 1 297 1 300 1 
131 1 5 1 180 1 181 1 134 1 214 1 
327 1 131 1 160 1 243 1 5 1 180 1 76 1 181 1 175 1 234 1 226 1 214 1 
252 1 171 2 172 1 5 1 262 1 175 1 101 2 263 1 269 1 180 1 179 4 181 1 110 1 20 1 116 1 27 2 279 1 193 2 196 4 122 2 197 2 32 1 124 8 131 1 290 1 37 3 296 2 297 1 313 1 214 1 152 2 220 1 320 4 321 1 323 1 226 1 326 2 76 1 85 4 338 1 167 2 249 1 250 2 344 1 92 2 346 1 251 1 
171 1 3 1 5 1 98 3 261 1 175 2 262 1 7 1 8 2 9 5 178 1 181 1 110 1 20 1 24 1 117 2 197 2 125 1 128 1 132 1 209 2 297 1 139 2 140 3 144 1 305 2 307 1 309 1 49 4 212 1 316 2 214 1 146 2 56 1 152 1 157 2 221 1 220 1 326 1 78 1 234 1 239 1 238 1 82 1 249 1 250 2 92 1 
327 1 5 2 76 1 175 2 214 2 238 1 131 2 91 1 180 1 181 2 134 1 346 1 226 1 
172 1 5 1 262 1 175 1 214 1 269 1 153 1 152 2 180 1 181 1 220 1 20 1 226 1 326 2 279 1 76 1 234 1 131 1 297 1 251 1 
71 1 327 1 131 1 160 1 243 1 5 1 180 1 76 1 181 1 175 1 226 1 214 1 
326 1 165 1 45 1 152 1 38 1 262 1 158 1 137 1 42 1 
125 1 165 1 150 1 126 1 319 1 13 1 194 1 38 1 158 1 233 1 297 1 22 1 
165 1 279 1 38 1 158 1 233 1 
140 2 307 1 98 2 262 1 7 1 212 1 150 1 8 1 152 1 13 1 319 1 220 1 158 1 113 1 20 1 22 1 326 1 194 1 78 1 233 1 82 1 125 1 165 1 128 1 126 1 38 1 209 1 297 2 
190 1 119 1 291 1 61 1 271 1 174 1 52 1 201 1 
70 1 72 1 4 1 119 3 174 1 52 2 201 1 166 1 291 4 61 2 63 2 271 4 109 1 136 1 
190 1 228 1 119 1 174 1 52 1 176 1 201 1 291 2 61 1 63 1 271 2 114 1 
70 2 190 1 119 1 72 2 174 1 264 1 52 1 201 1 291 3 61 1 271 3 136 1 
119 2 339 2 30 1 115 1 
190 1 291 1 271 1 174 1 213 1 201 1 
190 1 119 1 291 2 61 1 63 1 271 2 174 1 52 1 201 1 302 1 
79 1 
190 1 119 1 291 1 61 1 271 1 174 1 52 1 201 1 
119 1 61 1 18 1 52 1 
119 1 291 1 61 1 271 1 174 1 52 1 201 1 
155 1 259 1 271 1 
70 1 190 1 119 1 72 2 174 1 52 1 201 1 291 3 61 1 292 1 271 3 136 1 
1 1 119 1 291 2 61 1 63 1 271 2 174 1 52 1 201 1 
190 1 4 1 119 1 46 1 174 1 229 1 201 1 130 1 291 1 271 1 65 1 
190 1 119 1 291 1 271 1 174 1 52 1 201 1 
190 1 291 1 61 1 271 1 174 1 52 2 201 1 
190 1 143 1 119 1 174 2 52 1 201 2 291 2 271 2 17 1 19 1 
190 1 4 1 119 2 174 1 52 1 201 1 166 1 291 3 61 1 63 2 271 3 21 1 302 1 
190 1 291 1 271 1 121 1 174 1 201 1 276 1 
1 1 190 1 4 1 119 2 191 1 174 2 52 1 201 2 166 1 291 4 61 1 63 2 271 4 
190 1 119 1 72 1 291 3 61 1 63 1 271 3 174 1 52 1 201 1 302 1 
166 1 119 1 4 1 109 1 
119 1 52 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 144 (19,88) (19,88) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 144 (19,88) (19,88) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 144 (19,88) (19,88) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 144 (19,88) (19,88) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 324 144 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (281,302) (281,302) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 324 144 89 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 324 144 89 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (225,285,290) (80,330,350) (80,330,350) (80,330,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (225,285,290) (80,330,350) (80,330,350) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (225,285,290) (80,330,350) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (225,285,290) (80,330,350) (80,330,350) (80,330,350) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 209 147 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 164 259 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (225,285,290) (225,285,290) (225,285,290) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (225,285,290) (225,285,290) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (225,285,290) (225,285,290) (225,285,290) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 34 150 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 164 259 14 171 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 324 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 172 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (149,208,237,364) (149,208,237,364) 324 295 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
19 1 241 1 149 1 311 1 5 1 144 1 339 1 79 1 364 1 344 1 237 2 293 2 127 1 317 1 88 1 140 1 
19 1 241 1 149 1 311 1 5 1 144 1 339 1 79 1 364 1 344 1 237 2 293 2 127 1 317 1 88 1 140 1 
19 1 241 1 149 1 311 1 5 1 144 1 339 1 79 1 364 1 344 1 237 2 293 2 127 1 317 1 88 1 140 1 
19 1 241 1 149 1 311 1 5 1 144 1 339 1 79 1 364 1 344 1 237 2 293 2 127 1 317 1 88 1 140 1 
208 1 364 1 149 1 324 1 237 2 293 1 5 1 144 1 
364 1 149 1 237 1 293 1 302 1 281 1 317 1 140 1 5 1 229 1 
75 1 149 2 244 1 243 2 5 1 208 1 9 1 364 2 33 1 237 3 106 1 293 3 317 1 
107 1 75 1 149 2 324 1 243 2 5 1 144 1 7 1 208 5 364 2 33 2 237 7 106 2 293 6 146 1 317 1 89 1 
107 1 75 1 149 2 324 1 243 2 5 1 144 1 7 1 208 5 364 2 33 2 237 7 106 2 293 6 146 1 317 1 89 1 
343 1 298 1 25 1 
109 1 343 1 304 2 
220 2 214 2 24 1 230 1 238 2 226 2 368 2 271 2 
191 2 192 1 214 3 267 1 42 1 151 1 133 1 111 1 160 1 200 2 10 1 220 2 114 1 161 1 163 1 226 2 116 1 49 1 332 1 165 1 271 2 18 1 119 2 120 1 24 1 230 1 231 2 361 1 233 1 338 1 305 1 105 2 366 1 238 3 346 1 186 1 368 2 
41 1 220 1 214 1 24 1 238 1 253 1 226 1 368 1 271 1 212 1 
357 1 41 1 62 1 214 1 25 1 77 1 351 1 343 1 201 1 58 1 238 1 314 1 347 1 271 1 
357 1 41 2 62 1 214 2 24 1 25 1 77 2 351 1 220 2 343 1 201 2 238 2 253 1 226 2 347 1 368 2 282 1 271 2 212 1 
118 1 201 1 48 1 77 1 156 1 
41 1 214 1 220 1 201 2 48 1 253 1 226 1 331 1 271 1 118 1 321 1 24 1 25 1 77 2 343 1 238 1 368 1 282 1 212 1 
118 1 201 1 77 1 
41 1 214 1 24 1 77 1 220 1 201 1 48 1 238 1 253 1 226 1 368 1 282 1 271 1 212 1 
343 1 
41 1 214 1 250 1 220 1 201 2 48 1 253 1 226 1 271 1 118 1 321 1 24 1 25 1 77 2 343 1 238 1 368 1 282 1 212 1 
61 2 128 2 41 1 214 1 215 4 152 1 286 1 245 1 158 1 248 1 220 1 68 1 201 5 48 2 97 1 253 1 226 1 15 2 271 1 118 2 334 1 321 1 169 2 24 1 299 1 260 2 25 2 206 1 77 5 143 1 174 1 343 2 238 1 85 2 368 1 188 5 282 1 212 1 
298 1 230 1 
41 1 214 2 230 1 170 1 220 1 82 1 57 1 238 2 226 1 368 1 271 2 
228 1 363 1 272 1 
119 1 214 1 42 1 267 1 230 1 231 1 361 1 233 1 111 1 305 1 200 1 238 1 161 1 16 1 332 1 18 1 
167 1 119 1 214 2 267 1 42 1 231 1 361 1 233 1 111 1 305 1 125 1 200 1 220 1 161 1 238 2 368 1 332 1 271 1 272 1 18 1 
125 1 220 3 214 3 230 1 238 3 226 1 368 3 271 3 
41 1 220 1 214 1 238 1 253 1 368 1 271 1 
41 1 214 1 170 1 220 1 82 1 238 1 226 1 368 1 271 1 
191 1 41 1 62 1 192 1 214 4 267 1 42 1 151 1 133 1 351 1 111 1 160 1 200 1 220 3 201 1 161 1 163 1 226 2 255 1 49 1 332 1 165 1 271 3 18 1 167 1 357 1 119 1 24 1 230 1 170 1 77 1 231 1 361 1 233 1 338 1 305 1 125 1 182 1 105 2 366 1 238 4 186 1 347 1 368 3 
41 1 214 2 230 1 329 1 125 1 220 1 57 1 58 1 238 2 368 1 271 2 
167 1 357 1 62 1 41 1 214 3 170 1 77 1 351 1 96 1 125 2 182 1 220 3 343 1 201 1 238 3 226 1 347 1 368 3 271 3 
214 2 170 1 125 1 220 2 238 2 226 1 228 1 368 2 271 2 272 1 
119 1 214 1 42 1 267 1 230 1 231 1 361 1 111 1 233 1 305 1 200 1 238 1 161 1 332 1 18 1 
119 1 214 1 267 1 230 1 231 1 361 1 111 1 233 1 354 1 305 1 200 1 252 1 238 1 161 1 332 1 
128 1 191 3 192 1 44 1 160 1 112 1 10 1 45 1 70 1 163 1 228 1 164 1 165 1 272 1 169 1 78 1 338 2 363 1 105 2 366 1 186 1 86 1 283 1 266 1 
197 1 
167 1 214 5 230 1 170 1 278 1 329 1 125 2 173 1 220 4 58 1 238 5 226 1 368 4 271 5 
41 1 220 1 214 1 238 1 253 1 368 1 271 1 
195 1 288 1 
195 1 288 1 
38 1 162 1 
38 1 162 1 
38 1 162 1 
195 1 218 1 288 1 
195 1 218 1 288 1 
195 1 218 1 288 1 
11 1 195 1 288 1 
168 1 38 1 162 1 195 2 56 1 288 2 
104 1 195 1 288 1 
104 1 195 1 288 1 
104 1 195 1 288 1 
168 1 92 1 121 2 360 1 65 1 77 2 29 1 195 2 4 2 288 2 113 1 343 1 222 1 201 2 306 1 98 2 307 2 356 2 239 3 
189 1 359 1 214 2 121 1 52 1 360 1 230 1 77 1 195 1 4 1 288 1 220 2 11 1 201 1 355 1 184 1 238 2 263 1 345 1 307 1 356 1 239 1 368 2 271 2 
79 1 241 1 344 1 
229 1 
229 1 
229 1 
229 1 
61 1 128 1 215 3 1 1 353 1 313 1 45 1 201 5 223 1 355 1 48 4 15 1 164 1 50 1 319 1 259 1 118 1 321 1 169 1 299 1 260 1 25 1 77 5 276 2 123 1 304 1 343 1 210 1 184 1 345 1 188 1 
41 1 214 1 156 1 220 1 201 2 48 2 253 1 226 1 271 1 118 1 204 1 22 1 24 1 25 1 77 2 261 1 343 1 238 1 368 1 282 1 212 1 
61 1 128 1 109 1 215 3 1 1 286 1 353 1 45 1 201 3 223 1 355 1 48 2 15 1 50 1 319 1 164 1 259 1 169 1 25 1 260 1 77 3 276 1 123 1 304 2 343 2 188 1 
61 1 128 2 109 1 215 5 1 2 286 1 353 1 45 2 47 1 201 4 223 1 355 2 48 3 15 1 50 1 319 1 164 2 259 2 169 2 25 1 260 1 77 4 276 2 123 2 304 3 343 2 188 2 369 1 176 1 
298 1 71 1 233 1 
233 1 157 1 
316 1 
361 1 233 1 
267 1 131 1 361 1 233 3 71 2 316 1 87 1 
267 1 361 1 233 1 
233 1 30 1 
334 1 128 1 90 1 169 1 191 6 352 1 232 1 196 2 338 2 248 1 43 1 112 2 221 1 10 4 174 1 83 1 266 3 
334 1 128 1 90 1 169 1 191 7 352 1 232 1 196 2 338 3 248 1 43 1 112 2 221 1 10 4 174 1 83 1 266 3 
334 1 128 1 90 1 169 1 191 6 352 1 232 1 196 2 338 2 248 1 43 1 112 2 221 1 10 4 174 1 83 1 258 1 266 3 
90 1 128 7 191 44 192 1 352 2 153 1 268 1 196 3 245 1 248 3 43 2 160 1 112 9 221 4 10 20 45 4 224 1 294 1 164 4 165 1 259 4 334 3 51 4 169 7 300 1 232 1 102 4 338 24 174 2 83 1 105 2 186 1 280 1 308 1 266 13 265 1 
128 1 191 10 192 2 352 1 196 2 43 1 248 1 160 2 112 4 10 5 221 1 294 1 165 2 334 1 169 1 301 1 124 1 232 1 338 5 174 1 83 1 105 4 186 2 266 5 
119 1 101 1 275 1 149 1 110 1 350 1 231 1 5 1 80 1 200 1 290 1 364 1 137 1 161 1 237 1 330 1 293 1 317 1 332 1 60 1 229 1 17 1 
119 1 275 1 149 1 110 1 231 1 80 1 208 1 200 1 290 1 364 1 13 1 137 1 161 1 237 2 330 1 293 2 317 1 332 1 72 1 318 1 60 1 229 1 17 1 
119 1 275 1 231 1 80 1 208 1 200 1 290 1 13 1 137 1 161 1 237 1 293 1 317 1 332 1 318 1 60 1 229 1 17 1 
91 1 149 1 217 1 199 1 200 1 69 1 137 2 161 1 293 1 317 2 332 1 72 1 166 1 119 1 275 2 231 1 361 1 233 1 305 1 328 1 364 1 237 1 60 2 
119 1 275 1 149 1 110 1 350 1 231 1 5 1 80 1 200 1 290 1 364 1 137 1 161 1 237 1 330 1 293 1 317 1 332 1 318 1 60 1 229 1 17 1 
95 1 
61 1 109 2 62 1 154 1 66 1 200 2 201 4 161 1 15 1 332 1 296 1 118 4 20 1 119 2 299 1 260 1 336 2 77 4 262 1 304 2 305 2 343 1 264 1 347 1 36 2 91 1 41 1 215 2 214 1 129 1 351 1 217 1 312 1 178 1 138 1 180 1 314 1 319 1 271 1 320 3 358 1 357 1 321 2 322 1 231 2 361 1 277 1 233 1 54 2 326 1 103 1 58 1 238 1 188 2 
118 1 357 1 62 1 41 1 214 1 77 2 351 1 262 1 326 1 201 2 178 1 58 1 238 1 138 1 180 1 314 1 347 1 271 1 320 2 296 1 
41 1 62 1 214 1 351 1 250 1 201 3 178 1 314 1 180 1 271 1 296 1 320 3 118 1 357 1 321 1 322 1 25 1 77 3 262 1 326 1 343 1 58 1 238 1 347 1 
118 1 357 1 62 1 41 1 214 1 77 2 154 1 351 1 262 1 326 1 201 2 178 1 58 1 238 1 138 1 180 1 314 1 347 1 271 1 320 2 296 1 
41 2 62 1 214 2 351 1 154 1 220 1 250 1 201 3 178 1 253 1 139 1 138 1 226 1 314 1 180 1 271 2 296 1 320 3 118 2 357 1 321 1 322 1 24 1 25 1 77 3 262 1 326 1 343 1 58 1 238 2 347 1 368 1 282 1 212 1 
61 1 62 1 109 2 154 1 66 1 201 3 15 1 296 1 118 2 20 1 299 1 25 1 260 1 336 2 77 3 262 1 304 2 343 2 264 1 347 1 36 2 41 1 214 1 215 1 351 1 178 1 138 1 180 1 314 1 271 1 320 3 357 1 321 1 322 1 326 1 54 2 103 1 58 1 238 1 188 1 
61 1 62 1 109 1 154 1 66 1 159 1 201 3 253 1 15 1 296 1 118 2 20 1 24 1 299 1 260 1 25 1 336 1 77 3 262 1 303 1 209 1 343 1 347 1 36 1 212 1 41 2 214 2 215 1 351 1 220 1 178 1 138 1 226 1 180 1 314 1 271 2 320 3 357 1 321 1 322 1 326 1 54 1 103 1 58 1 238 2 368 1 188 1 282 1 
61 1 62 1 109 1 154 1 66 1 159 1 201 3 253 1 15 1 296 1 118 2 20 1 24 1 299 1 260 1 25 1 336 1 77 3 262 1 303 1 209 1 343 1 347 1 36 1 212 1 41 2 214 2 215 1 351 1 220 1 178 1 138 1 226 1 180 1 314 1 271 2 320 3 357 1 321 1 322 1 326 1 54 1 103 1 58 1 238 2 368 1 188 1 282 1 
61 1 62 1 63 1 154 1 66 1 201 3 291 1 253 1 15 1 296 1 118 2 24 1 299 1 260 1 25 1 77 3 262 1 303 1 304 1 343 1 347 1 36 1 37 1 212 1 41 2 214 2 215 1 349 1 351 1 220 1 178 1 138 1 226 1 180 1 314 1 271 2 320 3 357 1 321 1 322 1 55 1 326 1 54 1 58 1 238 2 368 1 188 1 282 1 
147 1 61 1 62 1 109 1 154 2 66 1 159 1 201 3 253 1 15 1 296 1 118 3 20 1 24 1 299 1 260 1 25 1 336 1 77 3 262 1 303 1 209 1 343 1 347 1 36 1 212 1 41 2 214 2 215 1 351 1 220 1 178 1 138 2 226 1 180 1 314 1 271 2 320 3 357 1 321 1 322 1 326 1 54 1 103 1 58 1 238 2 368 1 188 1 282 1 
118 1 147 1 357 1 322 1 62 1 41 1 214 1 77 2 154 1 351 1 262 1 326 1 209 1 201 2 178 1 58 1 238 1 138 1 180 1 314 1 347 1 271 1 320 3 296 1 
61 1 62 1 154 2 66 1 201 4 291 2 253 1 15 1 296 1 118 4 24 1 299 1 260 1 25 1 77 4 262 1 304 2 343 1 264 1 347 1 36 2 37 2 212 1 41 2 214 2 215 1 349 1 351 1 220 1 178 1 138 2 226 1 180 1 314 1 271 2 320 4 357 1 321 2 322 2 326 1 54 2 58 1 238 2 368 1 188 1 282 1 
128 1 191 5 192 1 196 1 248 1 160 1 112 1 10 3 163 1 228 1 165 1 272 1 334 1 169 1 298 1 230 2 232 1 338 2 363 1 174 1 83 1 105 2 366 1 186 1 283 1 266 1 
128 4 191 22 192 2 153 2 67 1 160 2 112 2 10 9 45 4 163 1 49 1 228 4 164 4 165 2 272 14 259 4 51 4 169 4 120 1 297 1 142 1 230 1 300 2 102 4 338 13 363 14 81 1 105 4 366 2 186 2 280 1 266 2 
191 2 214 2 192 1 216 1 267 1 42 1 111 1 160 1 200 1 135 1 220 1 10 1 269 1 161 1 163 1 228 1 49 1 16 1 332 1 165 1 271 1 18 1 167 1 119 1 120 1 230 1 231 1 361 1 233 1 338 1 305 1 125 1 81 1 366 1 238 2 105 2 186 1 368 1 
191 17 192 3 2 2 111 2 196 1 248 1 160 3 200 1 249 2 112 3 10 8 161 2 163 3 257 1 332 2 164 2 165 3 18 2 259 2 167 1 334 1 119 1 169 3 120 1 26 1 338 9 305 1 125 1 81 1 174 1 126 2 83 1 266 3 128 3 214 3 309 2 42 2 267 2 133 2 220 1 45 2 49 1 228 5 271 1 272 5 230 2 231 1 361 2 232 1 233 2 363 5 105 6 238 3 366 3 186 3 368 1 
191 2 192 2 193 1 242 1 155 1 6 1 289 1 160 2 200 7 10 1 114 2 161 3 163 2 332 4 165 2 119 6 120 1 122 1 76 1 338 1 305 2 125 1 342 1 175 1 91 1 214 1 267 1 217 1 220 1 49 1 271 1 101 1 231 7 361 3 233 4 279 1 145 1 366 2 105 4 238 1 186 2 368 1 283 1 
335 1 191 2 169 1 214 1 192 1 170 1 160 1 81 1 10 2 220 1 238 1 366 1 105 2 163 1 226 1 186 1 368 1 164 1 271 1 165 1 259 1 
191 1 169 1 192 1 78 1 160 1 10 1 366 1 105 2 163 1 186 1 164 1 283 1 165 1 
128 1 191 2 192 1 363 1 338 2 44 1 160 1 112 1 45 1 366 1 105 2 163 1 186 1 228 1 283 1 165 1 266 1 272 1 
128 1 191 3 192 1 160 1 112 1 10 1 45 1 163 1 228 1 164 1 165 1 259 1 272 1 169 1 338 2 363 1 105 2 366 1 186 1 283 1 266 1 
191 1 169 1 192 1 76 1 78 1 160 1 10 1 366 1 105 2 163 1 186 1 164 1 165 1 
128 1 191 2 192 1 76 1 363 1 338 2 44 1 160 1 112 1 45 1 366 1 105 2 163 1 186 1 228 1 165 1 266 1 272 1 
128 1 191 3 192 1 160 1 112 1 10 1 45 1 163 1 228 1 164 1 165 1 259 1 272 1 169 1 76 1 338 2 363 1 105 2 366 1 186 1 266 1 
128 1 191 3 192 1 160 1 112 1 10 1 45 1 163 1 228 1 164 1 165 1 259 1 272 1 169 1 338 2 363 1 105 2 366 1 186 1 266 1 
191 2 214 1 192 1 267 1 42 1 133 1 111 1 160 1 200 1 10 1 161 1 163 1 49 1 332 1 165 1 18 1 119 1 120 1 230 1 231 1 361 1 233 1 338 1 305 1 238 1 366 1 105 2 186 1 
191 2 214 1 192 1 267 1 111 1 354 1 160 1 200 1 10 1 252 1 161 1 163 1 49 1 332 1 165 1 119 1 120 1 230 1 231 1 361 1 233 1 338 1 305 1 31 1 238 1 366 1 105 2 186 1 
128 1 191 3 192 1 160 1 112 1 10 1 45 1 163 1 228 1 164 1 165 1 259 1 272 1 169 1 338 2 363 1 81 1 105 2 366 1 186 1 266 1 
128 1 191 3 214 1 192 1 267 1 42 1 309 1 133 1 111 1 160 1 112 1 200 1 45 1 10 1 161 1 163 1 228 1 164 1 332 1 165 1 272 1 18 1 259 1 119 1 169 1 101 1 231 1 361 1 233 1 363 1 338 2 238 1 366 1 105 2 186 1 266 1 
128 1 191 2 192 1 214 1 160 1 220 1 10 1 45 1 163 1 226 1 164 1 165 1 271 1 259 1 169 1 170 1 53 1 338 1 81 1 105 2 366 1 238 1 186 1 368 1 
40 1 128 3 108 1 191 15 192 2 153 1 246 1 160 2 112 2 10 6 45 3 202 1 164 3 165 2 333 1 259 3 51 2 141 1 169 3 300 1 124 1 102 2 234 1 338 9 105 4 186 2 280 1 187 1 266 2 
128 1 108 2 191 13 93 1 192 1 246 1 160 1 10 5 45 1 14 1 315 1 202 2 164 1 165 1 333 1 259 1 51 2 141 2 169 1 27 1 171 1 124 1 102 2 338 8 105 2 186 1 280 2 187 1 
40 1 128 3 108 2 191 17 93 1 192 2 153 1 246 1 160 2 112 1 10 7 45 3 202 1 164 3 165 2 333 1 259 3 51 2 141 1 169 3 300 1 124 1 102 2 338 10 105 4 186 2 280 1 187 1 266 1 
40 1 128 3 108 2 191 17 93 1 192 2 153 1 246 1 160 2 112 1 10 7 45 3 202 1 164 3 165 2 333 1 259 3 51 2 141 1 169 3 300 1 124 1 102 2 338 10 105 4 186 2 280 1 187 1 266 1 
128 7 108 3 191 39 93 1 192 1 153 2 196 1 246 1 248 1 160 1 112 7 10 16 45 6 14 1 315 1 202 1 164 6 165 1 333 1 259 6 334 1 51 4 141 1 169 7 300 2 27 1 171 1 124 1 232 1 102 4 338 23 174 1 83 1 105 2 186 1 280 2 187 1 266 7 
168 1 92 1 121 1 65 1 307 1 28 1 356 1 195 1 4 1 288 1 
121 1 84 1 367 1 99 1 307 1 356 1 195 1 4 1 288 1 
11 1 52 1 
168 1 92 1 121 1 360 1 65 1 77 1 29 1 195 1 4 1 288 1 343 1 222 1 201 1 306 1 98 1 307 1 356 1 239 2 
168 1 92 1 121 1 360 1 65 1 77 1 29 1 195 1 4 1 288 1 343 1 222 1 201 1 306 1 98 1 307 1 356 1 239 2 
168 1 92 1 121 1 360 1 65 1 77 1 29 1 195 1 4 1 288 1 343 1 222 1 201 1 306 1 98 1 307 1 356 1 239 2 
56 1 218 1 240 1 
56 1 218 1 240 1 
104 1 94 1 
104 1 94 1 56 1 
189 1 263 1 
189 1 214 2 195 1 4 1 219 1 288 1 220 2 201 1 11 1 355 1 48 1 98 1 356 1 271 2 359 1 121 1 52 1 230 1 77 1 29 1 238 2 184 1 345 1 263 1 307 1 239 1 368 2 
218 1 240 1 
104 1 94 1 56 1 
213 1 191 2 214 2 192 1 310 1 193 1 6 1 198 1 160 1 200 2 10 1 114 2 161 1 163 1 292 1 227 1 49 1 332 1 271 2 165 1 119 2 120 1 231 2 361 1 233 1 338 1 81 1 366 1 238 2 105 2 186 1 
119 2 101 1 285 1 110 1 231 2 200 2 290 1 236 1 161 1 225 1 332 1 318 1 60 1 229 1 17 1 
119 1 110 1 231 1 200 1 290 1 179 1 225 1 161 1 318 1 60 1 332 1 229 1 17 1 
119 1 177 1 91 1 231 1 361 1 233 1 217 1 305 1 200 1 236 1 161 1 332 1 60 1 166 1 
119 1 285 1 110 1 231 1 200 1 290 1 236 1 225 1 161 1 332 1 318 1 60 1 229 1 17 1 
284 1 
68 1 215 1 343 1 298 1 25 1 206 1 188 1 
61 1 109 1 215 1 201 1 15 1 118 1 20 1 321 1 299 1 25 1 260 1 336 1 77 1 304 1 103 1 343 2 188 1 
61 1 119 1 299 1 150 1 260 1 231 1 305 1 200 1 161 1 15 1 34 1 332 1 
61 1 51 1 169 1 109 2 215 2 299 1 260 1 1 3 171 1 123 3 304 4 102 1 343 2 14 1 315 1 15 1 280 1 164 1 188 3 259 1 
61 1 128 1 41 1 214 1 215 2 245 1 248 1 159 1 220 1 201 1 97 1 253 1 226 1 15 1 271 1 334 1 169 2 24 1 299 1 260 1 77 1 174 1 238 1 85 2 368 1 188 2 282 1 212 1 
61 1 215 1 299 1 260 1 25 1 206 1 68 1 343 1 15 1 188 1 
128 1 169 1 109 1 215 2 1 1 123 1 304 2 45 1 343 1 85 1 164 1 188 1 259 1 
118 1 321 1 41 1 214 1 24 1 25 1 77 1 220 1 201 1 343 1 238 1 253 1 226 1 368 1 271 1 282 1 212 1 
61 2 91 1 215 1 267 1 129 1 286 1 242 1 312 1 217 1 289 1 200 2 201 2 161 2 15 2 100 1 332 3 319 1 118 2 358 1 119 2 321 1 299 1 260 2 231 2 77 2 361 2 233 2 279 1 305 2 145 1 188 1 
191 1 192 1 214 3 42 1 267 1 151 1 133 1 111 1 160 1 200 1 220 2 161 1 163 1 226 2 49 1 332 1 165 1 271 2 18 1 119 1 24 1 230 1 231 1 361 1 233 1 338 1 305 1 105 2 238 3 366 1 186 1 368 2 
61 1 109 2 215 2 129 1 1 2 196 1 15 1 319 1 299 1 25 2 260 1 123 2 304 4 343 4 85 1 188 2 
121 1 365 1 307 1 
121 1 365 1 307 1 
121 1 365 1 307 1 
189 1 183 1 121 1 307 1 35 1 
121 1 307 1 362 1 
121 1 307 1 362 1 
121 1 307 1 362 1 
121 1 307 1 
195 1 288 1 
334 1 128 1 169 1 191 7 192 2 232 1 196 1 338 3 248 1 160 2 112 1 10 4 221 1 174 1 83 1 105 4 186 2 294 1 165 2 266 2 
248 1 334 1 128 1 112 1 191 5 10 3 169 1 174 1 298 1 83 1 232 1 196 1 338 2 266 1 
128 1 169 1 191 3 192 1 287 1 338 2 160 1 112 1 10 1 45 1 105 2 186 1 164 1 165 1 266 1 259 1 
51 2 128 2 191 10 169 2 300 1 153 1 102 2 338 6 112 1 10 4 45 2 280 1 164 2 266 1 259 2 
128 3 191 20 192 2 153 1 196 1 248 2 67 1 160 2 112 4 221 2 45 2 10 9 294 2 164 2 165 2 259 2 73 1 334 2 51 2 169 3 300 1 232 1 102 2 338 11 174 1 83 1 105 4 186 2 266 6 
51 1 191 1 338 1 
191 1 10 1 102 1 
128 1 191 5 169 1 192 1 287 1 338 3 160 1 112 2 10 2 45 1 126 1 105 2 186 1 164 1 165 1 259 1 266 2 
128 1 191 6 192 1 160 1 112 1 10 2 45 1 14 1 315 1 164 1 165 1 259 1 51 1 169 1 171 1 124 1 102 1 338 4 105 2 186 1 280 1 266 1 
334 1 128 1 169 1 191 6 338 3 248 1 112 1 10 3 221 1 174 1 266 2 
73 1 334 1 191 3 192 1 232 1 338 2 248 1 160 1 112 1 10 1 221 1 83 1 105 2 186 1 294 1 165 1 266 2 
334 2 128 2 191 10 169 2 192 1 124 1 245 1 338 5 248 2 160 1 112 3 221 2 10 5 174 1 105 2 186 1 165 1 266 5 
169 1 191 1 192 1 124 1 160 1 10 1 105 2 186 1 164 1 165 1 
128 1 169 1 191 3 192 1 124 1 338 2 160 1 112 1 10 1 45 1 105 2 186 1 164 1 165 1 266 1 259 1 
73 1 334 1 40 1 191 3 192 3 124 1 338 2 248 1 160 3 112 1 221 1 10 1 105 6 186 3 294 1 165 3 266 2 
40 1 128 6 191 36 192 5 153 1 287 1 196 1 248 3 160 5 112 4 221 3 10 16 45 4 224 1 294 2 164 4 165 5 259 4 73 1 334 3 51 4 169 6 300 1 124 1 232 1 102 4 338 20 174 2 83 1 105 10 186 5 308 1 280 1 265 1 266 7 
128 3 191 15 192 1 153 1 196 1 248 1 160 1 112 2 10 7 45 2 164 2 165 1 259 2 334 1 51 2 169 3 300 1 171 1 124 1 232 1 102 2 338 8 174 1 83 1 105 2 186 1 280 1 266 2 
128 3 191 14 192 2 153 1 287 1 160 2 112 3 10 5 45 3 14 1 315 1 164 3 165 2 259 3 51 2 169 3 300 1 171 1 124 1 102 2 338 9 105 4 186 2 280 1 266 3 
128 1 191 7 192 2 287 1 160 2 10 2 45 1 14 1 315 1 164 1 165 2 259 1 51 1 169 1 171 1 124 1 102 1 338 5 105 4 186 2 280 1 
128 1 191 6 192 2 287 1 160 2 112 1 10 2 45 1 14 1 315 1 164 1 165 2 259 1 51 1 169 1 171 1 124 1 102 1 338 4 105 4 186 2 280 1 266 1 
128 3 191 15 192 1 153 1 196 1 248 1 160 1 112 2 10 7 45 2 164 2 165 1 259 2 334 1 51 2 169 3 300 1 171 1 124 1 232 1 102 2 338 8 174 1 83 1 105 2 186 1 280 1 266 2 
128 1 191 6 192 1 160 1 112 1 10 2 45 1 14 1 315 1 164 1 165 1 259 1 51 1 169 1 171 1 124 1 102 1 338 4 105 2 186 1 280 1 266 1 
128 1 191 7 192 2 287 1 160 2 10 2 45 1 14 1 315 1 164 1 165 2 259 1 51 1 169 1 171 1 124 1 102 1 338 5 105 4 186 2 280 1 
40 1 128 1 191 7 192 2 160 2 112 2 10 2 45 1 14 1 315 1 164 1 165 2 259 1 51 1 169 1 171 1 124 1 102 1 338 5 105 4 186 2 280 1 266 2 
334 3 128 1 191 7 169 1 232 2 338 4 248 3 112 3 221 3 10 3 174 1 83 1 266 6 
40 1 128 1 191 7 192 2 160 2 10 2 45 1 14 1 315 1 164 1 165 2 259 1 51 1 169 1 171 1 124 1 102 1 338 5 105 4 186 2 280 1 
41 1 214 1 230 1 329 1 340 1 57 1 58 1 238 1 271 1 
117 1 41 1 214 1 23 1 230 1 329 1 235 1 340 1 136 1 57 1 12 1 58 1 238 1 271 1 
305 1 200 1 119 1 91 1 298 1 161 1 231 1 361 1 233 1 217 1 332 1 
119 1 214 2 267 1 230 1 231 1 361 1 233 1 111 1 305 1 125 1 200 1 220 1 238 2 161 1 368 1 332 1 271 1 18 1 
41 2 214 2 267 2 111 1 200 1 220 2 161 1 115 1 203 1 332 1 271 2 18 1 357 1 119 1 230 1 231 1 361 2 233 3 30 1 125 1 57 1 238 2 347 1 368 1 
41 2 214 2 267 2 111 1 354 1 200 1 220 2 161 1 115 1 203 1 332 1 271 2 357 1 119 1 230 1 231 1 361 2 233 3 30 1 125 1 57 1 238 2 347 1 368 1 
148 1 41 1 62 1 214 1 267 1 157 1 200 1 220 1 201 2 161 1 253 1 115 1 226 1 71 1 203 1 332 1 271 1 118 1 119 1 274 1 24 1 25 1 231 1 77 2 361 1 233 4 30 1 343 1 238 1 368 1 282 1 212 1 
41 1 62 1 214 1 267 1 157 1 200 1 220 1 201 2 161 1 253 1 115 1 226 1 71 1 203 1 332 1 271 1 118 1 119 1 24 1 25 1 337 1 231 1 77 2 361 1 233 4 30 1 343 1 238 1 368 1 282 1 212 1 
200 1 119 1 161 1 231 1 332 1 155 1 
267 1 131 1 155 1 6 1 200 6 114 1 161 2 332 3 119 5 323 1 101 1 122 1 231 6 361 2 233 3 279 1 305 2 342 1 145 1 175 1 
128 1 213 1 191 5 214 2 192 2 267 1 309 1 42 1 2 1 133 1 111 1 196 1 248 1 160 2 112 1 200 1 10 3 220 1 161 1 163 2 228 1 332 1 165 2 271 1 272 1 18 1 334 1 119 1 169 1 101 1 230 2 231 1 361 1 232 1 233 1 363 1 338 2 125 1 81 1 174 1 83 1 366 2 238 2 105 4 186 2 368 1 266 1 
61 2 62 1 3 1 157 1 245 1 248 1 200 1 68 1 201 3 253 1 71 1 15 2 118 2 334 1 119 1 169 2 24 1 299 2 260 2 25 2 337 1 206 1 77 3 305 1 343 2 174 1 85 2 212 1 128 2 41 1 214 1 215 4 134 1 220 1 46 1 48 1 97 1 226 1 100 1 271 1 321 1 231 1 233 2 238 1 368 1 188 5 282 1 
200 1 119 1 161 1 231 1 34 1 332 1 155 1 
119 4 21 1 101 1 91 1 132 1 231 4 361 1 217 1 233 1 305 1 200 4 161 1 332 1 
119 2 267 1 231 2 361 1 242 1 233 1 279 1 289 1 200 2 145 1 161 1 115 1 185 1 332 2 
305 1 200 1 119 1 161 1 231 1 332 1 229 1 17 1 
119 2 101 1 231 2 361 1 233 1 198 1 6 1 200 2 161 1 318 1 332 1 
119 4 91 1 101 1 132 1 231 5 361 2 217 1 233 3 6 1 305 1 200 5 342 1 161 2 115 1 175 1 332 2 
119 4 91 1 101 1 64 1 132 1 231 5 361 2 217 1 233 3 6 1 305 1 200 5 342 1 161 2 115 1 332 2 
119 1 214 2 267 1 230 1 231 1 361 1 233 1 111 1 354 1 305 1 125 1 200 1 220 1 238 2 161 1 368 1 332 1 271 1 
119 1 323 1 267 1 131 1 231 1 361 1 233 1 279 1 200 1 145 1 161 1 115 1 332 2 
74 1 325 1 230 1 181 1 59 1 
190 1 41 1 214 1 8 1 220 1 201 1 48 1 253 1 226 1 271 1 24 1 325 1 25 1 77 1 341 1 343 1 238 1 368 1 282 1 212 1 
74 1 214 1 325 1 310 1 238 1 292 1 227 1 59 1 271 1 
341 1 190 1 325 1 
9 1 298 1 243 1 244 1 
9 1 364 1 149 1 237 1 293 1 243 1 244 1 
137 1 293 1 317 1 
0 1 39 1 149 1 205 1 243 1 244 1 5 1 339 2 364 1 9 1 237 3 293 3 
208 1 364 1 149 1 324 1 237 2 293 1 
79 1 247 1 241 1 364 1 149 1 344 1 237 1 106 1 293 1 243 1 5 1 
9 1 364 1 149 1 237 1 293 1 243 1 5 1 
9 2 364 1 149 1 237 1 293 1 244 1 5 1 
149 2 207 1 243 1 5 1 327 1 9 1 364 2 32 1 237 2 293 2 
149 1 244 1 243 2 5 1 7 1 208 2 9 1 364 1 33 1 237 3 106 1 293 3 146 1 
208 1 364 1 149 1 237 2 293 1 172 1 5 1 229 1 
208 1 364 1 149 1 324 1 237 2 293 1 295 1 5 1 
9 1 364 1 149 1 237 1 293 1 243 1 244 1 5 1 
0 1 149 1 205 1 194 1 244 2 243 3 339 1 208 2 9 2 364 1 33 1 237 4 106 1 293 4 
107 1 149 1 243 1 244 1 5 1 208 1 9 1 364 1 237 2 293 2 256 1 270 1 
0 1 273 1 149 1 205 2 243 1 244 1 5 1 339 2 364 1 9 1 237 3 293 3 
130 1 254 2 211 1 243 2 
364 1 149 1 237 1 293 1 348 1 5 1 
208 1 9 1 364 1 149 1 237 2 293 2 146 1 243 1 244 1 5 1 
251 1 
9 1 364 1 149 1 237 1 293 1 243 1 244 1 5 1 
149 1 244 1 243 1 5 1 339 1 208 1 364 1 9 1 237 3 293 3 146 1 
33 1 194 1 106 1 243 1 
9 1 243 1 

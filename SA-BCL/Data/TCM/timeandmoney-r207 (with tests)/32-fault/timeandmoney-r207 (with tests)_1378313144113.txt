#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 205 164 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 205 164 259 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.ArrayIndexOutOfBoundsException 217 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 265 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) (195,260) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) (195,260) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (56,193,208) (56,193,208) (56,193,208) 5 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 152 191 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 152 161 1 137 198 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 152 161 1 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 161 1 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 161 63 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 152 161 1 137 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 152 161 1 137 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (99,183) 146 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 67 258 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 178 89 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 67 258 11 126 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 111 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 205 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (99,183) (99,183) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (99,183) 146 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (99,183) (99,183) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
265 1 273 1 144 1 
144 1 72 1 51 2 
54 2 216 1 158 1 65 2 184 2 210 2 174 2 211 2 
156 1 115 1 158 1 222 1 253 1 118 1 7 2 10 1 261 1 123 2 166 2 264 1 14 2 16 1 128 1 227 1 174 2 87 1 49 1 204 1 53 1 54 2 24 1 230 1 25 1 98 1 210 3 211 2 279 1 282 1 216 1 148 2 65 2 184 3 244 1 151 1 35 1 
283 1 54 1 158 1 65 1 252 1 184 1 120 1 210 1 174 1 211 1 
273 1 190 1 78 1 210 1 163 1 144 1 211 1 262 1 283 1 284 1 184 1 17 1 20 1 186 1 
54 1 273 1 78 1 210 1 144 1 211 1 262 1 284 2 283 1 65 1 184 1 17 2 20 1 174 1 186 1 
284 1 93 1 275 1 17 1 108 1 
284 2 135 1 273 1 275 1 17 2 108 1 29 1 144 1 
284 1 275 1 17 1 
54 1 158 1 252 1 120 1 210 1 141 1 211 1 283 1 284 1 65 1 184 1 17 1 174 1 108 1 
144 1 
90 1 284 2 135 1 273 1 275 1 17 2 108 1 144 1 
135 1 273 1 76 2 275 2 95 1 61 1 144 1 223 1 284 5 238 1 266 1 130 1 17 5 202 1 131 2 68 1 293 1 108 2 294 2 
54 1 220 1 230 1 25 1 156 1 98 1 210 2 10 1 7 1 101 1 211 1 123 1 14 1 65 1 184 2 128 1 151 1 70 1 35 1 53 1 
54 3 216 1 65 3 184 3 174 1 210 3 101 1 211 3 
283 1 54 1 65 1 184 1 120 1 210 1 211 1 
283 1 54 1 65 1 291 1 184 1 210 1 174 1 211 1 112 1 
156 1 115 1 158 1 222 1 253 1 78 1 118 1 10 1 7 1 262 1 261 1 123 1 166 1 264 1 14 1 128 1 17 1 20 1 174 2 87 1 204 1 53 1 54 3 230 1 25 1 139 1 98 1 210 4 101 1 211 3 282 1 283 1 284 1 240 1 216 1 148 2 65 3 184 4 244 1 151 1 186 1 70 1 112 1 35 1 
54 1 216 1 65 1 190 1 184 2 210 2 101 1 211 2 124 1 
54 3 139 1 78 1 210 3 101 2 144 1 211 3 262 1 284 1 283 1 285 1 65 3 184 3 17 1 20 1 174 1 70 1 186 1 112 1 
54 2 220 1 210 2 101 1 211 2 65 2 184 2 174 1 71 1 112 1 
25 1 230 1 156 1 210 1 98 1 7 1 10 1 123 1 14 1 216 1 184 1 128 1 151 1 53 1 35 1 
113 1 230 1 156 1 210 1 98 1 7 1 60 1 10 1 123 1 14 1 216 1 184 1 151 1 53 1 35 1 
220 1 115 1 177 1 222 1 159 1 138 1 160 1 253 1 209 1 118 1 166 2 264 1 148 2 132 1 71 1 87 2 219 1 204 1 154 1 
283 1 54 1 157 1 65 1 184 1 210 1 262 1 211 1 
265 1 216 1 
54 1 210 2 211 2 216 2 65 1 291 1 184 2 174 1 112 1 
220 1 71 1 219 1 
0 1 230 1 25 1 156 1 210 1 98 1 7 1 10 1 123 1 14 1 216 1 184 1 128 1 151 1 53 1 35 1 
54 4 190 1 255 1 210 5 101 2 211 5 124 1 216 1 65 4 40 1 184 5 174 1 70 1 112 1 
283 1 54 2 157 1 65 2 184 2 120 1 210 2 211 2 
241 1 206 1 179 1 
241 1 206 1 179 1 
206 1 179 1 32 1 
206 1 179 1 32 1 
206 1 179 1 32 1 
206 1 179 1 
206 1 179 1 
206 1 179 1 245 1 281 1 
206 1 179 1 245 1 281 1 
245 1 281 1 
241 1 206 1 179 1 
206 2 233 1 179 2 257 1 245 1 281 1 
206 1 179 1 182 1 
205 1 206 1 150 1 179 1 164 1 64 1 
284 1 205 1 206 1 150 1 179 1 17 1 164 1 259 1 64 1 
109 1 62 1 145 1 
82 1 109 1 145 1 
82 1 172 1 170 1 109 3 86 1 62 2 
82 1 23 1 172 1 109 2 86 1 62 1 
82 1 172 1 109 2 62 1 86 2 
158 1 251 1 76 1 252 1 120 1 258 1 80 1 167 1 226 1 18 1 130 1 17 4 174 1 131 1 52 1 54 1 91 1 135 1 273 1 275 1 95 2 58 1 209 1 210 1 141 1 211 1 144 1 283 1 284 4 65 1 184 1 67 1 293 1 108 3 154 1 294 1 
158 1 76 1 252 1 120 1 256 1 258 1 80 1 18 1 130 1 17 4 131 1 174 1 52 1 91 1 54 1 135 1 93 1 231 1 273 1 275 2 95 2 58 1 209 1 210 1 141 1 143 1 144 1 211 1 283 1 284 4 65 1 184 1 67 1 293 1 108 3 154 1 294 1 
158 1 251 1 252 1 76 1 120 1 258 1 80 1 226 1 17 2 18 1 174 1 131 1 202 1 52 1 54 1 273 1 58 1 95 2 209 1 210 1 141 1 211 1 144 1 283 1 284 2 65 1 184 1 67 1 108 1 293 1 294 1 154 1 
251 1 76 1 95 2 58 1 209 1 258 1 80 1 278 1 284 1 226 1 18 1 17 1 67 1 202 1 131 1 293 1 52 1 154 1 294 1 
230 1 98 1 
230 1 272 1 217 1 151 1 21 1 98 1 
265 1 21 1 
230 1 122 1 
44 1 
230 1 151 1 98 1 
230 1 192 1 
138 3 159 4 209 1 180 2 80 1 28 1 166 5 194 1 15 1 16 2 173 1 43 1 45 1 22 1 292 1 87 3 246 1 
138 3 159 4 209 1 180 2 80 1 28 1 166 6 194 1 15 1 16 2 173 1 43 1 45 1 22 1 292 1 87 4 246 1 
138 3 159 4 209 1 180 2 80 1 28 1 166 5 263 1 194 1 15 1 16 2 173 1 43 1 45 1 22 1 292 1 87 3 246 1 
159 1 138 1 43 2 6 1 180 1 22 1 87 1 166 1 
115 1 222 1 159 4 253 1 80 2 166 8 194 1 264 1 15 1 16 3 173 1 43 1 45 1 22 1 87 5 138 3 209 2 180 1 28 1 213 1 148 2 107 1 111 1 246 1 
56 1 5 1 96 1 208 1 193 1 
195 1 56 1 96 1 208 1 193 1 
14 1 215 1 225 1 7 1 260 1 123 1 
195 1 56 1 96 1 208 1 193 1 
56 1 5 1 96 1 208 1 193 1 
27 1 
36 1 221 1 2 1 75 1 76 1 191 1 10 1 7 2 123 2 12 1 13 1 14 2 83 1 130 1 17 2 201 1 131 1 200 1 53 2 135 1 230 1 275 2 95 2 59 1 98 1 212 1 284 2 103 1 287 1 149 1 152 1 293 2 35 1 294 1 73 1 
90 1 135 1 36 1 221 1 275 2 59 1 284 2 103 1 149 1 31 1 17 2 
284 1 103 1 36 1 221 1 149 1 117 1 17 1 59 1 46 1 
90 1 135 1 36 1 221 1 275 2 117 1 59 1 284 2 103 1 286 1 149 1 31 1 17 2 46 1 
36 1 1 1 221 1 2 1 75 1 76 1 161 1 12 1 13 1 198 1 17 2 129 1 130 1 131 1 90 1 135 1 137 1 275 3 95 1 59 1 284 2 103 1 286 2 149 1 31 2 152 1 293 1 294 1 
36 1 221 1 2 1 75 1 76 1 95 1 59 1 12 1 13 1 284 1 103 1 149 1 17 1 130 1 131 1 152 1 293 1 294 1 
36 1 1 1 221 1 2 1 75 1 76 1 161 1 13 1 12 1 130 1 129 1 17 1 131 1 95 1 59 1 284 1 103 1 149 1 152 1 293 1 294 1 
36 1 1 1 221 1 2 1 75 1 76 1 161 1 13 1 12 1 130 1 129 1 17 1 131 1 95 1 59 1 284 1 103 1 149 1 152 1 293 1 294 1 
36 1 221 1 2 1 76 1 161 1 94 1 95 1 59 1 63 1 12 1 284 1 125 1 103 1 149 1 17 1 130 1 131 1 152 1 293 1 133 1 294 1 
36 1 1 1 221 1 2 1 75 1 117 1 76 1 161 1 12 1 13 1 17 1 129 1 130 1 131 1 46 1 137 1 275 1 95 1 59 1 284 1 103 1 286 1 149 1 31 1 152 1 293 1 294 1 
36 1 1 1 221 1 2 1 75 1 117 1 76 1 161 1 12 1 13 1 17 1 129 1 130 1 131 1 46 1 137 1 275 1 95 1 59 1 284 1 103 1 286 1 149 1 31 1 152 1 293 1 294 1 
36 1 221 1 2 1 76 1 95 1 59 1 12 1 284 1 125 1 103 1 149 1 17 1 130 1 131 1 152 1 293 1 133 1 294 1 
115 1 222 1 160 1 253 1 118 1 80 1 166 1 264 1 148 2 16 1 67 1 203 1 204 1 
220 1 115 1 222 1 159 1 138 1 160 1 253 1 209 1 118 1 166 2 264 1 148 2 132 1 71 1 87 2 219 1 204 1 154 1 
220 1 115 1 222 1 160 1 159 1 253 1 118 1 258 1 80 1 166 3 264 1 16 1 87 2 204 1 138 1 209 1 148 2 67 1 71 1 219 1 154 1 
115 1 222 1 253 1 118 1 8 1 80 1 166 1 264 1 148 2 16 1 67 1 203 1 204 1 
220 1 115 1 222 1 159 1 138 1 253 1 209 1 118 1 8 1 166 2 264 1 148 2 132 1 71 1 87 2 219 1 204 1 154 1 
220 1 115 1 222 1 159 1 253 1 118 1 258 1 8 1 80 1 166 3 264 1 16 1 87 2 204 1 138 1 209 1 148 2 67 1 71 1 219 1 154 1 
220 1 115 1 222 1 159 1 253 1 118 1 258 1 80 1 166 3 264 1 16 1 87 2 204 1 138 1 209 1 148 2 67 1 71 1 219 1 154 1 
156 1 115 1 222 1 253 1 118 1 10 1 7 1 123 1 166 2 14 1 264 1 16 1 128 1 87 1 53 1 204 1 24 1 25 1 230 1 98 1 210 1 282 1 216 1 148 2 184 1 151 1 244 1 35 1 
113 1 156 1 115 1 222 1 253 1 118 1 10 1 7 1 123 1 166 2 14 1 264 1 16 1 87 1 53 1 204 1 136 1 24 1 230 1 98 1 210 1 60 1 216 1 148 2 184 1 151 1 244 1 35 1 
220 1 115 1 222 1 159 1 253 1 118 1 258 1 80 1 166 3 264 1 16 1 87 2 204 1 134 1 138 1 209 1 148 2 67 1 71 1 219 1 154 1 
220 1 156 1 115 1 222 1 159 1 253 1 118 1 10 1 7 1 258 1 80 1 123 1 166 3 14 1 264 1 169 1 16 1 128 1 41 1 87 2 204 1 25 1 230 1 138 1 209 1 98 1 210 1 282 1 148 2 184 1 67 1 151 1 71 1 219 1 154 1 35 1 
115 1 222 1 253 1 118 1 258 1 80 1 166 2 264 1 16 1 19 1 174 1 87 1 204 1 134 1 54 1 209 1 210 1 211 1 148 2 65 1 184 1 67 1 112 1 154 1 
220 1 115 1 222 1 160 1 159 2 253 1 118 1 80 1 166 5 264 1 265 1 15 1 16 2 173 1 45 1 87 3 204 1 138 2 209 1 180 1 28 1 148 2 216 1 71 1 246 1 219 1 
264 1 115 1 148 2 222 1 253 1 118 1 228 1 204 1 134 1 
0 1 248 1 156 1 115 1 222 1 253 1 118 1 10 1 7 1 123 1 166 2 14 1 264 1 16 1 128 1 87 1 53 1 204 1 134 1 92 1 54 1 230 1 25 1 24 1 98 1 210 2 101 1 211 1 216 1 148 2 65 1 184 2 151 1 244 1 71 1 70 1 187 1 35 1 
156 1 115 2 222 2 253 2 118 2 10 1 7 1 123 1 166 1 264 2 14 1 128 1 41 1 267 1 48 1 87 1 204 2 134 1 53 1 54 1 230 1 25 1 98 1 210 2 101 1 211 1 102 1 282 1 148 4 65 1 184 2 151 1 244 1 70 1 35 1 
115 2 3 1 222 2 160 1 253 2 254 1 118 2 10 3 7 6 8 1 123 7 166 2 14 7 264 2 83 1 127 1 16 1 42 1 87 1 49 2 53 2 204 2 54 1 55 1 230 4 24 1 210 1 98 3 101 1 183 1 211 1 212 1 215 1 146 1 148 4 65 1 184 1 151 1 244 1 153 1 33 1 35 3 
54 1 115 1 222 1 253 1 210 1 118 1 258 1 80 1 211 1 166 2 264 1 148 2 65 1 16 2 171 1 184 1 67 1 174 1 112 1 134 1 204 1 
114 1 250 1 115 2 38 1 222 2 159 2 253 2 162 1 165 1 258 2 80 2 81 1 166 11 264 2 16 4 87 7 229 1 271 1 232 2 178 1 235 1 138 2 209 2 142 1 148 4 107 1 67 2 154 2 
250 2 115 2 38 1 222 2 159 1 253 2 162 2 165 2 258 2 80 2 11 1 166 17 264 2 84 1 126 1 16 7 87 10 89 1 229 2 232 2 178 1 138 1 235 2 209 2 142 1 277 1 242 1 243 1 148 4 107 1 67 2 34 1 154 2 
114 1 250 1 115 2 38 1 222 2 159 1 253 2 162 1 165 1 258 2 80 2 81 1 166 13 264 2 16 5 87 8 89 1 229 2 232 2 178 1 235 1 138 1 209 2 142 1 148 4 107 1 67 2 154 2 
114 1 250 1 115 2 38 1 222 2 159 1 253 2 162 1 165 1 258 2 80 2 81 1 166 13 264 2 16 5 87 8 89 1 229 2 232 2 178 1 235 1 138 1 209 2 142 1 148 4 107 1 67 2 154 2 
114 2 250 1 115 1 38 1 222 1 159 7 253 1 162 2 119 2 165 1 258 6 80 7 11 1 166 37 264 1 84 1 126 1 15 1 16 15 173 1 45 1 87 22 89 1 229 2 232 4 178 1 235 4 138 7 209 7 180 1 277 1 142 1 28 1 242 1 243 1 148 2 107 1 67 6 246 1 154 6 
237 1 249 1 234 1 184 1 210 1 211 1 
207 1 10 1 7 2 79 1 62 1 145 1 123 2 82 1 14 2 215 1 197 1 288 1 147 1 169 1 170 1 66 1 109 2 50 1 35 1 
7 1 79 1 10 1 62 1 145 1 123 1 82 1 14 1 215 1 197 1 288 1 170 1 66 1 106 1 109 2 50 1 35 1 
230 1 207 1 98 1 10 1 7 1 79 1 123 1 212 1 14 1 83 1 196 1 224 1 35 1 53 1 
207 1 10 1 7 1 79 1 62 1 145 1 123 1 82 1 14 1 215 1 197 1 288 1 147 1 170 1 66 1 109 2 50 1 35 1 
168 1 
265 1 273 1 95 1 293 1 61 1 144 1 223 1 
13 1 75 1 76 1 95 1 130 1 131 1 293 1 294 1 
76 3 4 2 10 4 7 1 80 2 14 1 17 5 18 4 20 2 21 2 230 6 26 2 95 8 98 3 104 1 110 2 247 2 35 3 188 2 258 2 121 2 122 3 123 1 199 1 130 3 131 3 53 1 52 4 51 8 135 3 273 1 272 1 275 5 209 2 144 5 284 5 287 2 289 2 290 2 151 3 67 2 69 1 293 5 72 4 73 1 294 3 154 2 
232 1 76 1 235 1 95 2 162 1 258 1 277 1 80 1 11 1 144 2 126 1 130 1 18 3 67 1 131 1 293 3 72 2 294 1 52 3 51 4 
158 1 76 1 252 1 120 1 80 2 173 1 130 1 129 1 17 1 131 1 45 1 174 1 54 1 26 2 95 2 209 1 210 1 141 1 211 1 283 1 284 1 65 1 184 1 293 3 246 1 111 1 294 1 
273 1 76 1 95 1 61 1 144 1 223 1 130 1 131 1 293 1 294 1 
26 1 95 2 209 1 258 1 80 1 144 1 18 1 67 1 293 1 72 1 154 1 52 1 51 2 
284 1 135 1 273 1 275 1 17 1 144 1 
189 1 76 2 9 2 10 1 7 4 123 4 14 4 83 1 130 1 17 3 202 1 200 1 201 1 131 2 53 2 135 2 176 1 230 1 275 4 95 2 98 1 212 1 284 3 239 1 287 2 293 2 35 1 294 2 73 2 
156 1 115 1 158 1 222 1 253 1 118 1 7 1 10 1 123 1 261 1 166 1 264 1 14 1 128 1 174 2 87 1 53 1 204 1 54 2 25 1 230 1 210 3 98 1 211 2 282 1 216 1 148 2 65 2 184 3 244 1 151 1 35 1 
76 1 130 1 18 2 131 1 52 2 51 4 273 1 26 1 95 2 180 1 144 3 287 1 293 1 72 2 73 1 294 1 
205 1 64 1 
205 1 64 1 
205 1 64 1 
205 1 64 1 
205 1 64 1 
205 1 64 1 
206 1 179 1 
205 1 64 1 
205 1 64 1 
115 2 222 2 159 3 138 2 253 2 209 1 180 1 80 1 28 1 166 7 194 1 264 2 148 4 15 1 16 3 173 1 45 1 87 4 34 1 246 1 
138 2 159 2 209 1 180 1 28 1 80 1 166 5 265 1 15 1 16 2 173 1 45 1 87 3 246 1 
115 1 222 1 159 1 138 1 253 1 209 1 258 1 80 1 166 3 264 1 148 2 16 1 67 1 87 2 218 1 154 1 
114 1 232 2 159 1 138 1 235 1 162 1 209 1 258 1 80 1 166 6 16 2 67 1 87 4 154 1 
114 1 115 2 222 2 159 7 77 1 253 2 119 1 258 2 80 3 166 20 194 2 264 2 15 1 16 8 173 2 45 1 87 12 232 2 235 2 138 5 209 3 180 1 28 1 214 1 148 4 67 2 246 2 34 2 154 2 
232 1 87 1 166 1 
16 1 235 1 166 1 
115 1 222 1 138 2 159 2 253 1 209 1 258 1 80 1 166 5 264 1 148 2 289 1 16 2 67 1 218 1 87 3 154 1 
115 1 222 1 159 1 253 1 162 1 258 2 80 2 11 1 166 10 264 1 84 1 126 1 16 4 87 6 232 1 235 1 138 1 209 2 277 1 148 2 243 1 107 1 67 2 154 2 
138 1 159 2 209 1 80 1 166 6 194 1 16 3 173 1 45 1 87 3 246 1 
115 1 222 1 159 2 138 1 77 1 253 1 28 1 166 3 194 1 264 1 148 2 15 1 16 1 173 1 87 2 246 1 34 1 
138 2 159 3 209 2 80 2 166 7 194 1 16 3 173 1 45 1 87 4 111 1 246 1 
115 1 222 1 253 1 80 1 166 1 264 1 148 2 16 1 107 1 67 1 
115 1 222 1 159 1 138 1 253 1 209 1 258 1 80 1 166 3 264 1 148 2 16 1 107 1 67 1 87 2 154 1 
115 3 222 3 77 1 138 1 159 2 253 3 81 1 166 3 264 3 194 1 148 6 16 1 173 1 107 1 87 2 34 1 246 1 
114 1 115 5 222 5 77 1 159 8 253 5 162 1 258 3 80 5 81 1 166 32 194 3 264 5 39 1 15 1 16 13 173 3 45 2 87 19 232 4 235 3 138 5 276 1 209 5 140 1 180 1 28 1 148 10 107 1 67 3 218 1 246 3 34 2 154 3 
115 1 222 1 159 2 253 1 162 1 80 1 166 7 264 1 126 1 15 1 16 3 173 1 45 1 87 4 232 1 235 1 138 2 209 1 180 1 28 1 148 2 107 1 246 1 
114 1 115 2 222 2 159 6 253 2 162 1 119 1 258 4 80 6 11 1 166 25 194 1 264 2 84 1 126 1 15 1 16 10 173 1 45 1 87 15 232 2 235 2 138 5 209 6 277 1 28 1 243 1 148 4 107 1 67 4 218 1 246 1 111 1 154 4 
115 3 222 3 159 1 253 3 162 1 258 2 80 2 11 1 166 11 264 3 84 1 126 1 16 4 87 7 232 1 235 1 138 1 209 2 277 1 148 6 243 1 107 1 67 2 218 1 34 1 154 2 
115 2 222 2 159 5 253 2 162 1 258 2 80 4 11 1 166 17 194 2 264 2 84 1 126 1 15 1 16 7 173 1 45 1 87 10 232 1 235 1 138 3 209 4 277 1 28 1 148 4 243 1 107 1 67 2 218 1 246 1 111 1 154 2 
115 1 222 1 159 2 253 1 162 1 80 1 166 7 264 1 126 1 15 1 16 3 173 1 45 1 87 4 232 1 235 1 138 2 209 1 180 1 28 1 148 2 107 1 246 1 
115 1 222 1 159 1 253 1 162 1 258 2 80 2 11 1 166 10 264 1 84 1 126 1 16 4 87 6 232 1 235 1 138 1 209 2 277 1 148 2 243 1 107 1 67 2 154 2 
115 3 222 3 159 1 253 3 162 1 258 2 80 2 11 1 166 11 264 3 84 1 126 1 16 4 87 7 232 1 235 1 138 1 209 2 277 1 243 1 148 6 107 1 67 2 218 1 34 1 154 2 
115 3 222 3 159 2 253 3 162 1 258 2 80 2 81 1 11 1 166 11 264 3 84 1 126 1 16 4 87 7 232 1 235 1 138 2 209 2 277 1 243 1 148 6 107 1 67 2 34 1 154 2 
138 3 159 6 209 1 28 2 80 1 166 7 194 3 15 1 16 3 173 3 45 1 87 4 246 3 
115 3 222 3 159 1 253 3 162 1 258 2 80 2 81 1 11 1 166 11 264 3 84 1 126 1 16 4 87 7 232 1 235 1 138 1 209 2 277 1 243 1 148 6 107 1 67 2 34 1 154 2 
216 1 190 1 184 1 210 1 270 1 211 1 124 1 
175 1 57 1 181 1 30 1 283 1 216 1 185 1 47 1 
14 1 230 1 83 1 265 1 98 1 10 1 7 1 123 1 35 1 212 1 53 1 
54 1 230 1 25 1 156 1 98 1 210 2 10 1 7 1 101 1 211 1 123 1 14 1 216 1 65 1 184 2 151 1 53 1 35 1 
54 1 230 3 25 1 156 1 4 1 192 1 78 1 98 2 210 2 10 1 9 1 7 1 101 1 262 1 211 2 123 1 283 1 14 1 216 1 65 2 184 2 151 2 35 1 
54 1 230 3 156 1 4 1 192 1 78 1 98 2 210 2 10 1 9 1 7 2 60 1 101 1 262 1 211 2 123 2 283 1 14 2 216 1 65 2 184 2 268 1 151 2 35 1 
155 1 158 1 252 1 120 1 7 1 9 1 122 1 123 1 14 1 17 2 20 1 21 1 174 1 54 1 230 1 273 1 275 1 210 1 141 1 211 1 144 1 283 1 284 2 65 1 184 1 
188 1 230 3 273 1 4 1 275 1 192 1 98 1 10 1 9 1 7 3 122 1 144 1 123 3 284 2 14 3 268 1 17 2 20 1 151 1 21 1 53 1 35 1 
14 1 42 1 10 1 7 1 123 1 35 1 
14 1 230 1 272 1 151 1 98 1 99 1 10 1 7 1 183 1 123 1 35 1 53 1 
220 1 156 1 115 2 222 2 159 2 253 2 118 2 10 1 7 1 80 1 123 1 166 5 264 2 14 1 15 1 169 1 16 2 173 1 128 1 267 1 41 1 45 1 87 3 204 2 134 1 54 1 230 1 25 1 138 2 209 1 98 1 210 2 180 1 101 1 28 1 280 1 211 1 282 1 216 1 148 4 65 1 184 2 151 1 71 1 219 1 246 1 35 1 
188 1 76 2 4 1 7 1 10 1 121 1 122 1 123 1 223 1 14 1 130 2 17 3 20 1 131 2 21 1 53 1 135 1 230 2 273 1 275 2 95 1 98 1 61 1 144 1 284 3 239 1 290 1 151 1 293 1 108 1 110 1 294 2 35 1 
230 1 272 1 98 1 7 1 10 2 123 1 14 1 104 1 42 1 151 1 44 1 21 1 35 1 
230 1 37 1 98 1 10 1 7 4 123 4 212 1 14 4 83 1 169 1 268 1 53 1 35 1 
55 1 14 1 230 1 146 1 151 1 98 1 10 1 7 1 183 1 123 1 35 1 236 1 
82 1 14 1 10 1 7 1 109 1 145 1 50 1 123 1 35 1 53 1 
230 1 254 1 98 1 7 2 10 1 100 1 123 2 14 2 215 1 169 1 35 1 
230 3 37 1 3 1 254 1 98 2 9 1 7 4 10 2 123 5 212 1 14 5 83 1 169 1 153 1 53 1 35 2 
230 3 37 1 97 1 254 1 98 2 9 1 7 4 10 2 123 5 212 1 14 5 83 1 169 1 153 1 53 1 35 2 
54 1 230 1 156 1 98 1 210 2 10 1 7 1 60 1 101 1 211 1 123 1 14 1 216 1 65 1 184 2 151 1 53 1 35 1 
14 1 230 1 272 1 151 1 98 1 99 1 10 1 7 1 9 1 183 1 123 1 35 1 
237 1 249 1 274 1 74 1 234 1 105 1 
105 1 269 1 85 1 
216 1 274 1 116 1 74 1 105 1 
273 1 274 2 74 2 116 2 78 1 139 1 144 1 262 1 283 1 284 2 216 1 105 1 17 2 269 1 20 1 108 1 85 1 186 1 88 1 

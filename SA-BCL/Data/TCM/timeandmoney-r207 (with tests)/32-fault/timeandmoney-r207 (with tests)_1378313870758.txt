#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (29,64,151,152,186) (3,250) (3,250) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (29,64,151,152,186) (3,250) (3,250) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (29,64,151,152,186) (3,250) (3,250) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (29,64,151,152,186) (3,250) (3,250) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 133 243 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 133 243 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 78 168 154 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 78 168 154 165 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 78 168 154 (91,114) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 78 168 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 171 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 57 276 109 237 45 96 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (150,213,255) (201,210,281) (201,210,281) (201,210,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (150,213,255) (201,210,281) (201,210,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (150,213,255) (201,210,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (150,213,255) (201,210,281) (201,210,281) (201,210,281) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (140,167,227) (140,167,227) 67 77 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 57 276 109 237 233 271 116 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 57 276 109 237 233 271 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 57 276 109 237 233 271 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 57 276 109 237 233 271 116 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 78 216 253 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (150,213,255) (150,213,255) (150,213,255) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (150,213,255) (150,213,255) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (150,213,255) (150,213,255) (150,213,255) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 78 168 154 (91,114) (91,114) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 78 168 154 165 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 57 276 109 237 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 57 276 109 53 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 57 276 109 237 45 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 57 276 109 237 99 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 78 97 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 78 97 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 78 97 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 248 54 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 118 244 87 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 78 97 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 54 158 89 268 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 118 185 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 118 244 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 118 38 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 78 97 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (37,73,100,160) (37,73,100,160) 39 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 238 1 157 1 100 1 65 1 160 1 145 1 250 1 37 1 21 1 152 1 254 1 22 1 
3 1 238 1 157 1 100 1 65 1 160 1 145 1 250 1 37 1 21 1 152 1 254 1 22 1 
3 1 238 1 157 1 100 1 65 1 160 1 145 1 250 1 37 1 21 1 152 1 254 1 22 1 
3 1 238 1 157 1 100 1 65 1 160 1 145 1 250 1 37 1 21 1 152 1 254 1 22 1 
175 1 133 1 73 1 113 1 37 2 100 1 40 1 21 2 254 1 51 1 160 1 145 1 
238 1 100 1 160 1 141 1 225 1 37 2 149 1 169 1 264 1 40 1 21 2 152 1 254 1 153 1 22 1 94 1 
238 1 136 1 100 2 274 1 160 2 51 1 73 1 37 3 264 1 21 3 40 2 254 1 94 1 
175 1 133 1 144 1 238 1 113 1 136 1 241 1 100 2 274 2 243 1 160 2 51 3 145 1 107 1 73 5 37 7 40 3 21 7 254 1 
175 1 133 1 144 1 238 1 113 1 136 1 241 1 100 2 274 2 243 1 160 2 51 3 145 1 107 1 73 5 37 7 40 3 21 7 254 1 
6 1 139 1 246 1 
191 1 
168 1 78 1 154 1 
165 1 168 1 78 1 154 1 
168 1 91 1 78 1 154 1 
110 1 227 1 137 1 140 1 247 1 83 1 
168 1 78 1 
167 1 260 1 218 1 48 1 49 1 
114 1 48 2 49 1 6 1 245 1 181 1 246 1 168 1 91 1 167 2 260 1 78 1 154 1 
167 1 260 1 48 1 
168 1 91 1 167 1 114 1 48 1 49 1 78 1 154 1 
246 1 
42 1 114 1 48 2 49 1 6 1 181 1 246 1 168 1 91 1 167 2 260 1 78 1 154 1 
4 1 112 2 114 1 115 1 48 5 6 1 258 4 49 2 119 1 52 1 182 1 181 1 91 1 260 2 17 2 93 1 232 1 61 1 154 1 270 1 240 1 275 1 246 1 32 1 168 1 167 5 251 1 76 2 78 1 170 1 171 1 
252 1 179 1 
252 1 179 1 
117 1 66 1 
117 1 66 1 
117 1 66 1 
252 1 179 1 68 1 
197 1 252 1 179 1 
111 1 26 1 117 1 252 2 179 2 66 1 
252 1 179 1 68 1 
252 1 179 1 68 1 
43 1 252 1 179 1 
43 1 252 1 179 1 
43 1 252 1 179 1 
63 1 174 1 135 1 86 1 199 3 26 1 179 2 48 2 202 2 221 1 246 1 162 2 13 2 167 2 279 2 56 1 75 2 252 2 231 1 
13 1 167 1 174 1 279 1 199 1 252 1 179 1 75 1 48 1 78 1 162 1 
145 1 
169 1 153 1 141 1 
134 1 153 1 145 2 141 1 
269 1 50 1 141 1 145 1 226 1 166 1 153 1 
50 2 145 1 141 1 226 1 166 1 153 1 
1 1 48 4 47 1 6 1 49 3 246 1 181 1 167 4 260 1 261 1 93 1 189 1 41 1 
1 1 218 1 48 4 6 1 49 3 181 1 246 1 205 1 167 4 260 2 16 1 123 1 93 1 189 1 
143 1 1 1 112 1 114 1 115 1 47 1 48 3 6 1 49 2 258 3 182 1 52 1 223 1 91 1 261 1 17 2 57 1 190 2 191 4 61 1 154 1 155 2 240 1 276 1 161 1 246 3 168 1 167 3 35 2 76 1 78 1 80 1 41 1 
143 1 1 1 112 2 85 1 114 1 115 1 48 4 47 1 6 1 258 5 49 3 182 1 52 2 223 2 91 1 261 1 17 4 57 2 190 4 191 8 61 1 154 1 266 1 267 1 155 4 240 1 276 2 161 2 246 5 168 1 167 4 35 4 76 2 78 1 80 2 41 2 
164 1 122 1 55 1 139 1 277 1 
55 1 95 1 
90 1 
206 1 55 1 
206 1 55 3 178 1 25 1 188 1 277 2 
206 1 55 1 25 1 
14 1 55 1 
24 2 4 1 180 1 52 1 32 1 163 1 120 3 34 3 15 1 71 4 76 1 170 1 20 1 280 1 79 2 62 7 192 1 
24 2 4 1 180 1 52 1 32 1 163 1 120 3 34 3 15 1 71 4 76 1 170 1 20 1 280 1 79 2 62 7 192 1 
24 2 4 1 46 1 180 1 52 1 32 1 163 1 120 3 34 3 15 1 71 4 76 1 170 1 20 1 280 1 79 2 62 7 192 1 
96 1 237 1 215 1 45 1 276 1 180 1 52 1 12 1 120 1 71 4 57 1 280 2 79 1 109 1 62 5 
24 3 4 1 196 2 272 2 7 4 180 1 52 1 32 1 33 2 163 1 105 2 120 4 121 1 34 4 15 1 208 1 71 5 209 1 76 1 170 1 20 1 280 1 79 2 62 9 
220 1 145 1 222 1 147 2 126 1 21 1 153 1 128 2 129 1 132 2 134 1 238 1 100 1 201 1 28 1 160 1 141 1 278 1 207 1 210 1 37 1 254 1 281 1 82 1 172 1 213 1 
44 1 220 1 145 1 222 1 147 1 126 1 21 2 153 1 234 1 128 1 129 1 132 1 195 1 134 1 238 1 100 1 201 1 28 1 160 1 141 1 207 1 73 1 210 1 37 2 82 1 213 1 
132 1 195 1 134 1 238 1 28 1 145 1 141 1 222 1 207 1 147 1 210 1 73 1 37 1 126 1 21 1 153 1 234 1 128 1 213 1 82 1 129 1 
44 1 222 1 147 1 55 1 187 1 19 1 126 1 21 1 128 1 129 2 132 1 238 2 98 1 100 1 28 2 69 1 160 1 70 1 102 1 249 1 206 1 37 1 82 2 
220 1 145 1 222 1 147 1 126 1 21 1 153 1 128 1 129 1 132 1 195 1 238 1 134 1 100 1 201 1 28 1 160 1 141 1 207 1 210 1 37 1 254 1 281 1 82 1 213 1 
273 1 
132 1 147 1 167 1 98 1 93 1 48 1 128 1 
110 1 48 1 137 1 67 1 140 1 247 1 167 1 227 1 228 1 77 1 212 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
42 1 110 1 137 1 48 2 67 1 140 1 181 1 247 1 167 2 227 1 260 1 228 1 77 1 212 1 83 1 
110 1 48 1 137 1 67 1 140 1 247 1 167 1 227 1 228 1 93 1 77 1 212 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 227 1 167 1 228 1 137 1 48 1 77 1 67 1 140 1 212 1 247 1 83 1 
110 1 48 1 137 1 67 1 140 1 247 1 167 1 227 1 228 1 93 1 77 1 212 1 83 1 
237 1 215 1 196 2 116 1 271 1 272 2 7 4 219 1 276 1 204 1 52 1 33 2 12 1 105 2 120 2 71 4 209 1 18 1 57 1 233 1 109 1 62 6 
84 1 215 2 116 1 217 1 7 4 88 1 52 1 12 2 120 9 121 1 18 1 57 1 233 2 62 16 194 1 237 2 24 1 196 2 271 2 99 1 239 1 272 2 276 1 204 3 161 1 33 2 105 2 34 1 209 1 71 7 76 1 
237 1 215 1 196 2 116 1 271 1 272 2 7 4 219 1 276 1 204 1 52 1 33 2 12 1 105 2 120 2 71 4 209 1 18 1 57 1 233 1 109 1 62 6 
237 1 215 1 196 2 116 1 271 1 272 2 7 4 219 1 276 1 204 1 52 1 33 2 12 1 105 2 120 2 71 4 209 1 18 1 57 1 233 1 109 1 62 6 
215 1 4 1 116 1 7 2 52 2 12 1 120 4 15 1 18 1 57 1 233 1 62 11 237 1 24 1 196 1 271 1 272 1 276 1 204 1 32 1 33 1 105 1 163 1 34 1 209 1 71 7 76 1 170 1 79 1 109 1 
13 1 63 1 279 1 56 1 26 1 252 1 179 1 75 1 127 1 162 1 
197 1 200 1 
0 1 13 1 183 1 279 1 252 1 179 1 75 1 138 1 162 1 
63 1 174 1 135 1 199 2 26 1 48 1 179 1 202 1 221 1 246 1 162 1 13 1 167 1 279 1 56 1 75 1 252 1 231 1 
63 1 174 1 135 1 199 2 26 1 48 1 179 1 202 1 221 1 246 1 162 1 13 1 167 1 279 1 56 1 75 1 252 1 231 1 
63 1 174 1 135 1 199 2 26 1 48 1 179 1 202 1 221 1 246 1 162 1 13 1 167 1 279 1 56 1 75 1 252 1 231 1 
111 1 9 1 68 1 
111 1 9 1 68 1 
43 1 36 1 
43 1 111 1 36 1 
156 1 10 1 
156 1 214 1 197 1 216 1 135 1 199 1 200 1 179 1 48 1 49 1 202 1 10 1 101 1 162 1 223 1 13 1 167 1 279 1 75 1 252 1 253 1 78 1 
9 1 68 1 
43 1 111 1 36 1 
110 1 137 1 247 1 103 1 
132 2 195 1 255 1 134 1 28 1 220 1 145 1 141 1 222 1 278 1 207 1 147 2 72 1 126 1 150 1 153 1 128 2 213 1 
132 1 195 1 255 1 134 1 198 1 28 1 220 1 145 1 141 1 222 1 207 1 147 1 126 1 153 1 128 1 213 1 
132 1 98 1 28 1 70 1 222 1 102 1 104 1 206 1 147 1 55 1 72 1 19 1 126 1 128 1 
132 1 195 1 255 1 134 1 28 1 220 1 145 1 141 1 222 1 207 1 147 1 72 1 150 1 126 1 153 1 128 1 213 1 
235 1 
270 1 17 1 258 1 6 1 232 1 139 1 246 1 
93 1 
132 1 147 1 98 1 93 1 128 1 
93 1 
106 1 167 1 93 1 48 1 
270 1 93 1 
155 2 112 1 258 2 276 1 52 1 246 2 161 1 35 2 17 2 57 1 76 1 190 2 191 4 80 1 
114 1 48 1 6 1 181 1 246 1 168 1 167 1 91 1 260 1 78 1 154 1 
132 1 147 1 176 1 93 1 98 1 128 1 
165 1 168 1 78 1 154 1 
93 1 
224 1 13 1 279 1 
156 1 13 1 63 1 279 1 8 1 
224 1 13 1 279 1 
224 1 13 1 279 1 
13 1 279 1 259 1 
13 1 279 1 259 1 
13 1 279 1 259 1 
13 1 279 1 
252 1 179 1 
24 2 4 1 196 2 272 2 7 4 52 1 32 1 33 2 105 2 163 1 120 4 34 3 121 1 15 1 71 4 76 1 170 1 79 1 20 1 62 8 
163 1 120 3 34 2 24 2 15 1 71 3 4 1 76 1 170 1 79 1 139 1 52 1 62 6 32 1 
24 1 196 1 272 1 7 2 276 1 161 1 52 1 33 1 105 1 120 2 34 2 71 2 76 1 57 1 20 1 23 1 62 4 
120 1 237 1 215 1 71 3 57 1 109 1 276 1 52 1 62 4 12 1 
120 1 215 1 71 3 57 1 109 1 276 1 52 1 62 4 12 1 53 1 
120 1 62 1 12 1 
215 1 71 1 62 1 
24 2 196 1 7 2 272 1 203 1 276 1 52 1 161 1 33 1 105 1 120 3 34 3 71 3 57 1 76 1 20 1 23 1 62 6 
215 1 217 1 7 2 52 1 12 1 120 4 57 1 62 7 237 1 24 1 196 1 99 1 239 1 272 1 276 1 161 1 33 1 105 1 34 1 209 1 71 3 76 1 
24 1 4 1 52 1 32 1 120 3 34 2 71 3 76 1 170 1 20 1 62 6 
24 1 196 1 272 1 7 2 242 1 32 1 33 1 105 1 163 1 120 2 34 2 121 1 15 1 71 1 170 1 20 1 62 3 
24 3 196 1 4 1 7 2 272 1 52 2 32 2 33 1 105 1 120 5 34 5 209 1 71 5 76 2 170 2 171 1 20 2 62 10 
196 1 272 1 7 2 52 1 33 1 105 1 34 1 209 1 71 2 57 1 20 1 62 2 
24 1 196 1 272 1 7 2 276 1 161 1 52 1 33 1 105 1 120 2 34 2 209 1 71 2 76 1 57 1 20 1 62 4 
24 1 196 3 272 3 7 6 242 1 219 1 32 1 33 3 105 3 120 2 121 1 34 2 209 1 71 1 170 1 20 1 62 3 
215 3 4 1 45 1 7 8 219 1 52 4 12 3 120 11 121 1 15 1 124 1 57 3 20 2 23 1 62 24 237 1 24 3 196 4 272 4 276 3 159 1 161 2 32 1 33 4 163 1 105 4 34 5 209 1 71 13 76 3 170 1 79 1 109 1 
237 1 24 2 215 1 4 1 196 1 99 1 272 1 7 2 52 1 32 1 33 1 12 1 163 1 105 1 120 4 34 2 15 1 71 4 209 1 76 1 170 1 79 1 62 8 
237 1 215 1 196 2 99 1 272 2 7 4 276 1 52 1 33 2 12 1 105 2 120 1 71 3 209 1 57 1 109 1 23 1 62 4 
215 1 4 1 217 1 7 6 52 2 12 1 120 8 121 1 15 1 57 1 23 1 62 14 237 1 24 3 196 3 99 1 239 1 272 3 276 1 161 1 32 1 33 3 163 1 105 3 34 3 209 1 71 6 76 2 170 1 79 1 
215 1 217 1 7 4 52 1 12 1 120 4 57 1 23 1 62 7 237 1 24 1 196 2 99 1 239 1 272 2 276 1 161 1 33 2 105 2 34 1 209 1 71 3 76 1 
237 1 24 2 215 1 4 1 196 1 99 1 272 1 7 2 52 1 32 1 33 1 12 1 163 1 105 1 120 4 34 2 15 1 71 4 209 1 76 1 170 1 79 1 62 8 
215 1 217 1 7 2 52 1 12 1 120 4 57 1 62 7 237 1 24 1 196 1 99 1 239 1 272 1 276 1 161 1 33 1 105 1 34 1 209 1 71 3 76 1 
215 1 217 1 7 6 52 1 12 1 120 5 121 1 57 1 23 1 62 8 237 1 24 1 196 3 99 1 239 1 272 3 276 1 161 1 33 3 105 3 34 1 209 1 71 3 76 1 
215 1 217 1 7 6 219 1 52 1 12 1 120 5 121 1 57 1 62 8 237 1 24 2 196 3 99 1 239 1 272 3 276 1 161 1 33 3 105 3 34 2 209 1 71 3 76 1 
24 3 4 1 52 1 32 3 163 1 120 4 34 6 15 2 71 3 76 1 170 3 20 3 62 7 
215 1 217 1 7 6 219 1 52 1 12 1 120 5 121 1 57 1 62 8 237 1 24 1 196 3 99 1 239 1 272 3 276 1 161 1 33 3 105 3 34 1 209 1 71 3 76 1 
110 1 148 1 137 1 263 1 247 1 83 1 
110 1 137 1 11 1 247 1 148 1 92 1 229 1 58 1 263 1 173 1 83 1 
206 1 132 1 147 1 55 1 98 1 19 1 126 1 139 1 128 1 222 1 102 1 
97 1 78 1 
97 1 78 1 
97 1 78 1 
132 3 98 1 25 1 48 2 6 1 246 1 222 1 277 1 206 1 248 1 146 1 14 1 108 1 167 2 147 3 260 1 55 4 262 1 126 1 265 1 211 1 128 3 95 1 
132 1 25 1 48 1 54 1 277 1 222 1 206 1 248 1 146 1 14 1 167 1 147 1 55 4 126 1 128 1 95 1 
132 1 147 1 126 1 128 1 222 1 130 1 
132 3 177 1 98 2 25 2 27 2 118 1 244 1 87 1 222 4 278 1 206 3 147 3 55 3 74 1 230 1 125 2 188 1 126 2 128 3 
97 1 78 1 
132 1 268 1 176 1 48 1 98 1 49 1 158 1 277 1 54 1 89 1 167 1 147 1 55 2 93 1 128 1 95 1 
132 2 25 1 277 1 222 2 278 1 206 1 184 1 147 2 55 2 188 1 126 1 128 2 130 1 
132 4 98 1 31 1 222 1 102 1 278 1 206 1 147 4 55 1 19 1 126 1 211 1 128 4 
132 2 177 1 25 1 27 1 222 2 146 1 206 1 147 2 55 1 230 1 125 1 126 1 236 1 128 2 
207 1 132 1 147 1 98 1 169 1 126 1 153 1 128 1 141 1 222 1 
132 2 195 1 177 1 25 1 27 1 118 1 222 2 278 1 206 2 147 2 185 1 55 2 230 1 125 1 126 1 128 2 
132 2 177 1 98 1 25 1 27 1 118 1 244 1 222 2 278 1 206 2 147 2 55 2 230 1 125 1 126 1 128 2 
132 2 177 1 98 1 25 1 27 1 118 1 222 2 278 1 206 2 147 2 55 2 230 1 125 1 38 1 126 1 128 2 
97 1 78 1 
132 1 25 1 27 1 222 2 146 1 206 1 147 1 55 1 74 1 125 1 188 1 126 1 128 1 
264 1 40 1 139 1 94 1 
37 1 100 1 264 1 40 1 21 1 160 1 94 1 
238 1 21 1 129 1 
100 1 64 1 160 1 186 1 37 3 264 1 151 1 40 1 21 3 254 1 152 2 94 1 
73 1 113 1 37 2 100 1 264 1 40 1 21 2 160 1 94 1 
175 1 37 1 100 1 40 1 21 1 254 1 51 1 160 1 145 1 
37 1 100 1 264 1 40 1 21 1 254 1 160 1 
37 1 100 1 264 2 21 1 254 1 160 1 94 1 
37 1 100 1 21 1 254 1 160 1 30 1 142 1 
144 1 100 1 274 1 160 1 51 1 107 1 73 2 37 3 264 1 21 3 40 2 254 1 94 1 
73 1 37 2 100 1 39 1 21 1 254 1 153 1 160 1 141 1 
113 1 100 2 274 1 160 2 51 1 73 2 37 4 264 1 21 4 40 2 254 1 81 1 94 1 
37 1 100 1 264 1 40 1 21 1 254 1 160 1 94 1 
64 1 100 1 274 1 160 1 51 1 73 2 186 1 37 4 264 2 21 4 40 3 152 1 94 2 193 1 
256 1 241 1 100 1 160 1 73 1 37 2 264 1 40 1 21 2 254 1 59 1 94 1 
100 1 64 2 29 1 160 1 186 1 37 3 264 1 40 1 21 3 254 1 152 2 94 1 
131 1 257 2 5 1 40 2 
2 1 37 1 100 1 21 1 254 1 160 1 
107 1 73 1 37 2 100 1 264 1 40 1 21 2 254 1 160 1 94 1 
60 1 
37 1 100 1 264 1 40 1 21 1 254 1 160 1 94 1 
107 1 73 1 37 3 100 1 264 1 40 1 21 3 152 1 254 1 160 1 94 1 
274 1 40 1 51 1 193 1 
264 1 40 1 

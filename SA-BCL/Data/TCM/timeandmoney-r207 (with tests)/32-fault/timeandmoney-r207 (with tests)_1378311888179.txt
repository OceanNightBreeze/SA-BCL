#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 196 (260,271) (260,271) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 196 (260,271) (260,271) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 196 (260,271) (260,271) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 196 (260,271) (260,271) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 196 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 196 83 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 196 83 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 306 (24,41,95) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 298 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 34 23 258 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 10 281 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 10 172 225 315 262 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 10 172 225 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 10 172 225 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 10 172 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 10 172 225 315 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 10 172 225 315 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 104 52 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 104 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 104 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 104 52 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 104 52 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 228 305 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 34 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 34 14 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 164 170 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
196 1 128 1 199 4 179 1 162 1 271 1 3 1 45 1 5 2 203 4 48 1 260 1 322 1 285 1 288 1 29 1 53 1 97 1 98 1 149 1 35 2 295 2 
196 1 128 1 199 4 179 1 162 1 271 1 3 1 45 1 5 2 203 4 48 1 260 1 322 1 285 1 288 1 29 1 53 1 97 1 98 1 149 1 35 2 295 2 
196 1 128 1 199 4 179 1 162 1 271 1 3 1 45 1 5 2 203 4 48 1 260 1 322 1 285 1 288 1 29 1 53 1 97 1 98 1 149 1 35 2 295 2 
196 1 128 1 199 4 179 1 162 1 271 1 3 1 45 1 5 2 203 4 48 1 260 1 322 1 285 1 288 1 29 1 53 1 97 1 98 1 149 1 35 2 295 2 
196 1 39 1 199 4 3 1 240 1 45 2 4 2 203 4 48 3 288 1 97 1 98 1 53 2 149 1 35 1 295 1 
128 1 132 1 199 2 45 1 5 1 203 2 185 1 322 1 288 1 119 1 98 1 73 1 78 1 149 1 35 1 295 1 
132 1 199 3 162 1 45 2 5 1 203 3 48 1 98 1 97 1 53 1 78 1 35 2 295 2 
196 1 199 4 160 1 162 1 45 1 5 1 203 4 48 2 29 1 98 1 97 1 53 1 35 2 83 1 295 2 
196 1 199 4 160 1 162 1 45 1 5 1 203 4 48 2 29 1 98 1 97 1 53 1 35 2 83 1 295 2 
210 1 
329 1 
181 2 219 1 277 2 88 1 163 2 123 2 169 2 339 2 
218 1 181 2 86 2 219 1 136 1 220 1 137 1 88 1 46 1 187 1 140 1 142 1 9 1 307 1 237 1 197 1 108 1 109 1 161 2 274 2 277 3 163 2 244 1 113 1 68 1 206 1 209 2 287 2 333 1 32 1 77 1 334 1 123 3 338 1 337 1 169 2 339 2 
181 1 219 1 277 1 163 1 226 1 111 1 121 1 123 1 169 1 339 1 
316 1 38 1 177 1 130 1 58 1 277 1 163 1 226 1 110 1 165 1 326 1 188 1 309 1 123 1 
38 1 130 2 177 1 181 2 219 1 226 2 188 1 309 2 58 1 277 2 163 2 111 1 323 1 165 1 326 1 121 1 123 2 169 2 339 2 
42 1 
42 1 
130 1 232 1 309 1 
42 1 
177 1 
42 1 
114 1 130 1 309 1 42 1 182 1 269 1 103 1 
238 1 218 1 161 1 181 1 85 1 86 1 136 1 274 1 220 1 277 2 163 1 46 1 187 1 68 1 206 1 140 1 123 2 337 1 339 1 37 1 
210 1 
181 1 277 2 163 2 88 1 226 1 146 1 30 1 99 1 123 2 169 1 339 1 
20 1 43 1 37 1 
161 1 218 1 86 1 274 1 136 1 277 1 220 1 88 1 46 1 68 1 187 1 206 1 140 1 289 1 123 1 337 1 
316 1 238 1 181 4 85 2 277 5 163 5 88 1 63 1 211 1 30 1 123 5 169 1 102 1 339 4 
181 1 277 1 163 1 226 1 123 1 111 1 339 1 
181 3 85 1 277 3 88 1 163 3 123 3 169 1 339 3 
181 1 277 1 163 1 226 1 123 1 111 1 339 1 
181 1 277 1 163 1 226 1 30 1 99 1 123 1 169 1 339 1 
38 1 130 1 218 1 181 3 85 1 86 1 136 1 219 1 220 1 88 1 226 1 46 1 187 1 140 1 188 1 142 1 307 1 309 1 237 1 197 1 238 1 109 1 161 1 274 1 277 4 163 3 280 1 244 1 113 1 165 1 68 1 206 1 326 1 209 1 287 2 72 1 30 1 32 1 77 1 123 4 338 1 337 1 169 2 339 3 
316 1 181 1 85 1 277 2 163 2 88 1 226 1 63 1 146 1 123 2 339 1 
238 1 38 1 177 1 130 1 181 3 85 2 277 3 163 3 226 1 165 1 326 1 188 1 72 1 30 1 75 1 309 1 123 3 169 1 339 3 
181 2 85 1 20 1 277 2 163 2 30 1 123 2 169 1 339 2 37 1 
161 1 218 1 86 1 274 1 136 1 277 1 220 1 88 1 46 1 68 1 187 1 140 1 206 1 123 1 337 1 
161 1 57 1 218 1 86 1 274 1 136 1 277 1 88 1 47 1 68 1 187 1 140 1 206 1 123 1 337 1 
131 1 43 2 87 1 142 1 157 1 237 1 197 1 239 1 20 2 21 1 278 1 243 1 321 1 244 1 113 1 286 1 287 2 209 4 28 1 333 2 77 2 338 1 125 1 37 2 
38 1 178 1 181 1 277 1 163 1 226 1 123 1 339 1 
235 1 24 1 
235 1 24 1 
95 1 306 1 
95 1 306 1 
95 1 306 1 
118 1 235 1 24 1 
41 1 235 1 24 1 
95 1 306 1 235 1 24 1 
118 1 235 1 24 1 
118 1 235 1 24 1 
294 1 235 1 24 1 
294 1 235 1 24 1 
294 1 235 1 24 1 
129 1 130 1 181 2 133 1 41 1 88 1 228 1 90 1 141 1 13 1 309 1 153 1 235 1 105 1 16 1 277 2 163 2 24 1 64 1 330 1 123 2 339 2 124 1 174 1 
296 2 177 1 130 2 16 3 133 2 284 1 24 2 117 1 167 1 330 2 13 2 308 1 309 2 310 1 153 1 100 1 235 2 313 1 174 2 
288 1 3 1 149 1 
288 1 119 1 149 1 
1 1 332 1 119 1 3 2 149 3 283 1 
1 1 119 1 3 1 149 2 101 1 283 1 
1 1 119 1 3 1 149 2 283 2 
195 1 42 1 
298 1 42 2 152 1 193 1 
126 2 130 1 42 2 221 1 182 1 141 1 8 1 94 1 51 1 309 1 269 1 103 1 317 1 107 1 21 1 279 1 22 1 114 1 286 1 171 1 
126 2 130 1 221 1 42 1 182 1 8 1 141 1 94 1 51 1 309 1 269 1 103 1 317 1 107 1 241 1 21 1 22 1 279 1 114 1 286 1 171 1 
210 1 
206 1 320 1 
122 1 
206 1 218 1 337 1 
206 1 336 1 
206 1 337 1 
139 2 206 3 218 1 144 1 62 1 337 1 
2 1 93 2 265 1 266 1 150 1 54 1 156 2 314 1 56 1 21 3 243 5 321 3 209 14 28 4 328 2 333 8 248 2 77 6 
2 1 93 2 265 3 266 1 150 1 54 1 156 2 314 1 56 1 21 3 243 7 321 3 209 14 28 4 328 2 333 8 248 2 77 6 
2 1 89 1 93 2 265 1 266 1 150 1 54 1 156 2 314 1 56 1 21 3 243 5 321 3 209 14 28 4 328 2 333 8 248 2 77 6 
261 1 216 1 209 3 333 2 2 1 248 1 34 1 77 1 23 1 150 2 258 1 
84 1 2 1 6 1 142 2 93 2 265 2 150 1 54 1 156 2 314 1 197 2 198 1 56 1 21 3 243 7 321 3 244 2 113 2 287 4 209 16 28 5 328 2 333 9 248 2 77 7 
132 1 176 1 297 1 180 1 86 1 3 1 136 1 45 1 222 1 5 1 7 1 48 1 187 1 96 1 98 1 149 2 199 2 161 1 272 1 19 1 274 1 203 2 27 1 288 1 119 1 332 1 78 1 35 1 215 1 295 1 
132 1 176 1 180 1 86 1 3 1 136 1 45 1 222 1 5 1 183 1 7 1 48 2 187 1 263 1 143 1 149 2 199 3 161 1 272 1 19 1 274 1 203 3 27 1 288 1 332 1 119 1 78 1 35 1 215 1 295 1 
132 1 176 1 180 1 86 1 136 1 3 1 45 1 5 1 7 1 48 2 187 1 263 1 143 1 149 2 199 2 161 1 19 1 274 1 203 2 27 1 288 1 119 1 332 1 78 1 215 1 
176 2 180 2 86 1 136 1 5 2 183 1 301 1 304 1 187 1 12 1 199 1 161 1 61 1 274 1 203 1 68 1 245 1 206 1 325 1 337 1 35 1 295 1 215 2 
176 1 297 1 180 1 86 1 3 1 136 1 222 1 5 1 7 1 187 1 143 1 98 1 149 2 199 1 161 1 272 1 19 1 274 1 203 1 27 1 288 1 119 1 332 1 35 1 215 1 295 1 
151 1 
253 1 86 2 255 1 182 1 187 1 188 1 190 1 10 1 15 1 103 1 270 1 106 1 18 1 274 2 277 1 279 1 110 1 281 1 114 1 206 1 290 1 123 1 126 2 38 1 130 3 134 2 136 1 226 1 302 1 232 2 309 3 312 1 236 1 155 1 316 1 161 2 319 1 163 1 245 1 68 2 165 1 325 1 326 1 337 1 171 2 80 1 
38 1 130 3 134 2 255 1 226 1 184 1 188 1 232 2 309 3 15 1 312 1 159 1 106 1 316 1 319 1 277 1 163 1 110 1 165 1 326 1 290 1 123 1 
106 1 38 1 316 1 177 1 130 3 58 1 134 3 319 1 255 1 277 1 163 1 226 1 110 1 184 1 65 1 165 1 188 1 326 1 290 1 232 1 309 3 123 1 312 1 15 1 
159 1 38 1 316 1 130 2 134 2 319 1 255 1 277 1 163 1 226 1 110 1 165 1 188 1 326 1 290 1 232 1 31 1 309 2 123 1 312 1 15 1 
126 1 253 1 38 1 130 3 134 2 255 1 182 1 225 1 226 1 302 1 184 1 188 1 262 1 190 1 10 1 232 3 309 3 15 1 312 1 103 1 315 1 159 2 270 1 316 1 106 1 18 1 319 1 277 1 163 1 110 1 165 1 114 1 166 1 326 1 290 1 31 2 123 1 171 1 172 1 
126 1 38 1 253 1 130 2 134 2 255 1 182 1 226 1 302 1 188 1 190 1 10 1 309 2 15 1 312 1 103 1 270 1 316 1 18 1 319 1 277 1 163 1 110 1 165 1 114 1 326 1 290 1 123 1 171 1 
126 1 253 1 38 1 130 2 134 2 255 1 226 1 225 1 182 1 302 1 188 1 190 1 10 1 309 2 15 1 312 1 103 1 270 1 316 1 18 1 319 1 277 1 163 1 110 1 165 1 166 1 114 1 326 1 290 1 123 1 171 1 172 1 
126 1 253 1 38 1 130 2 134 2 255 1 226 1 225 1 182 1 302 1 188 1 190 1 10 1 309 2 15 1 312 1 103 1 270 1 316 1 18 1 319 1 277 1 163 1 110 1 165 1 166 1 114 1 326 1 290 1 123 1 171 1 172 1 
126 1 38 1 130 2 254 1 134 2 255 1 226 1 182 1 302 1 188 1 190 1 10 1 309 2 15 1 312 1 103 1 270 1 316 1 17 1 319 1 277 1 275 1 163 1 110 1 165 1 114 1 326 1 327 1 290 1 123 1 171 1 172 1 
126 1 253 1 38 1 130 2 134 2 255 1 182 1 226 1 225 1 302 1 188 1 190 1 10 1 232 1 309 2 15 1 312 1 103 1 315 1 159 1 270 1 316 1 18 1 319 1 277 1 163 1 110 1 165 1 114 1 166 1 326 1 290 1 31 1 123 1 171 1 172 1 
126 1 253 1 38 1 130 2 134 2 255 1 182 1 226 1 225 1 302 1 188 1 190 1 10 1 232 1 309 2 15 1 312 1 103 1 315 1 159 1 270 1 316 1 18 1 319 1 277 1 163 1 110 1 165 1 114 1 166 1 326 1 290 1 31 1 123 1 171 1 172 1 
126 1 38 1 130 2 254 1 134 2 255 1 182 1 226 1 302 1 188 1 190 1 10 1 309 2 15 1 312 1 103 1 270 1 316 1 319 1 277 1 163 1 110 1 165 1 114 1 326 1 327 1 290 1 123 1 171 1 
237 1 197 1 142 1 287 2 239 1 210 1 338 1 244 1 113 1 
237 1 197 1 142 1 287 2 338 1 244 1 36 1 113 1 26 1 
218 1 181 1 86 1 85 1 136 1 220 1 88 1 137 1 46 1 187 1 140 1 142 1 191 1 311 1 237 1 197 1 238 1 161 1 109 1 274 1 20 1 277 2 163 1 244 1 282 1 68 1 113 1 26 1 206 1 287 2 209 2 289 1 333 1 123 2 77 1 337 1 338 1 339 1 
237 1 238 1 197 1 161 1 181 1 86 1 85 1 274 1 277 1 163 1 242 1 244 1 68 1 26 1 113 1 142 1 287 2 123 1 338 1 339 1 
181 1 85 1 86 8 300 1 136 2 137 1 187 2 142 2 143 1 96 1 154 1 237 2 197 2 239 1 161 7 109 1 274 8 277 1 163 1 164 1 244 2 112 1 68 2 113 2 245 1 206 3 325 1 116 1 287 4 209 2 291 1 333 1 168 1 123 1 77 1 334 2 338 2 337 2 339 1 
131 1 181 1 43 1 142 1 237 1 197 1 107 1 20 1 277 1 163 1 21 1 243 1 321 1 244 1 113 1 26 1 286 1 287 2 209 3 28 1 30 1 333 1 123 1 77 2 169 1 338 1 339 1 82 1 37 1 
237 1 197 1 239 1 20 1 43 1 278 1 21 1 243 1 244 1 113 1 286 1 209 2 287 2 142 1 265 1 333 2 338 1 37 1 
237 1 197 1 131 1 239 1 20 1 43 1 243 1 321 1 244 1 113 1 209 2 287 2 142 1 28 1 77 2 338 1 125 1 37 1 
131 1 43 2 142 1 265 1 237 1 197 1 107 1 239 1 20 2 21 1 243 2 321 1 244 1 113 1 286 1 287 2 209 4 28 1 333 2 77 2 338 1 37 2 
237 1 197 1 300 1 20 1 43 1 278 1 21 1 243 1 244 1 113 1 286 1 209 2 287 2 142 1 265 1 333 2 338 1 37 1 
237 1 197 1 131 1 300 1 20 1 43 1 243 1 321 1 244 1 113 1 209 2 287 2 142 1 28 1 77 2 338 1 125 1 37 1 
131 1 300 1 43 2 142 1 265 1 237 1 197 1 107 1 20 2 21 1 243 2 321 1 244 1 113 1 286 1 287 2 209 4 28 1 333 2 77 2 338 1 37 2 
131 1 43 2 142 1 265 1 237 1 197 1 107 1 20 2 21 1 243 2 321 1 244 1 113 1 286 1 209 4 287 2 28 1 333 2 77 2 338 1 37 2 
218 1 86 1 136 1 220 1 137 1 88 1 46 1 187 1 140 1 142 1 307 1 237 1 197 1 161 1 109 1 274 1 277 1 244 1 68 1 113 1 206 1 209 2 287 2 333 1 123 1 77 1 337 1 338 1 
218 1 86 1 136 1 137 1 88 1 47 1 187 1 140 1 142 1 237 1 197 1 57 1 161 1 109 1 274 1 277 1 244 1 68 1 113 1 206 1 209 2 287 2 333 1 74 1 123 1 77 1 337 1 338 1 
131 1 43 2 142 1 265 1 237 1 197 1 107 1 20 2 21 1 243 2 321 1 244 1 113 1 26 1 286 1 287 2 209 4 28 1 333 2 77 2 338 1 37 2 
131 1 218 1 86 1 136 1 220 1 43 2 46 1 187 1 140 1 142 1 265 1 11 1 96 1 307 1 237 1 197 1 107 1 161 1 274 1 20 2 277 1 21 1 243 2 321 1 244 1 113 1 206 1 286 1 209 4 287 2 28 1 333 2 77 2 123 1 337 1 338 1 37 2 
131 1 181 1 43 1 142 1 265 1 237 1 197 1 107 1 277 1 20 1 163 1 21 1 243 1 321 1 244 1 113 1 26 1 67 1 286 1 287 2 209 3 30 1 333 2 77 1 123 1 169 1 338 1 339 1 37 1 
197 1 198 1 142 1 287 2 52 1 227 1 244 1 104 1 113 1 
197 1 198 1 142 1 287 2 52 1 227 1 244 1 104 1 113 1 
197 1 198 1 142 1 287 2 52 1 227 1 244 1 104 1 113 1 
197 1 198 1 142 1 287 2 52 1 227 1 244 1 104 1 113 1 
197 1 198 1 142 1 287 2 52 1 227 1 244 1 104 1 113 1 
167 1 330 1 133 1 13 1 293 1 100 1 235 1 284 1 24 1 174 1 
115 1 330 1 133 1 13 1 267 1 235 1 303 1 24 1 174 1 
41 1 64 1 
118 1 60 1 
92 1 59 1 294 1 
296 1 177 1 130 1 16 2 133 1 284 1 24 1 117 1 167 1 330 1 13 1 309 1 310 1 153 1 100 1 235 1 313 1 174 1 
296 1 177 1 130 1 16 2 133 1 284 1 24 1 117 1 167 1 330 1 13 1 309 1 310 1 153 1 100 1 235 1 313 1 174 1 
296 1 177 1 130 1 16 2 133 1 284 1 24 1 117 1 167 1 330 1 13 1 309 1 310 1 153 1 100 1 235 1 313 1 174 1 
118 1 59 1 60 1 
118 1 59 1 60 1 
92 1 294 1 
92 1 59 1 294 1 
105 1 90 1 
296 1 16 1 330 1 133 1 13 1 42 1 310 1 228 1 235 1 24 1 305 1 174 1 
86 2 136 1 137 1 187 1 142 1 264 1 55 1 237 1 194 1 197 1 109 1 161 2 274 2 277 2 163 2 164 1 244 1 112 1 113 1 26 1 206 1 287 2 209 2 333 1 250 1 123 2 77 1 334 2 337 1 338 1 214 1 
161 2 86 2 272 1 3 1 136 1 274 2 201 1 7 1 187 1 27 1 288 1 143 1 50 1 332 1 119 1 96 1 149 2 335 1 215 1 
161 1 86 1 272 1 3 1 274 1 201 1 136 1 7 1 27 1 187 1 288 1 143 1 332 1 119 1 149 2 212 1 215 1 
252 1 161 1 86 1 61 1 136 1 274 1 187 1 68 1 245 1 206 1 325 1 335 1 337 1 215 1 
161 1 86 1 272 1 3 1 274 1 201 1 136 1 7 1 187 1 27 1 288 1 143 1 50 1 332 1 119 1 149 2 335 1 215 1 
207 1 
210 1 
126 1 114 1 253 1 18 1 182 1 171 1 302 1 103 1 
218 1 161 1 86 1 136 1 274 1 320 1 44 1 279 1 182 1 62 1 302 1 186 1 187 2 68 1 206 2 114 1 337 1 171 1 103 1 
126 1 261 1 114 1 216 1 34 1 14 1 182 1 171 1 302 1 103 1 
126 2 130 1 181 1 219 1 226 1 182 1 302 1 93 1 309 1 54 1 103 1 156 1 277 1 21 2 163 1 111 1 321 1 323 1 114 1 166 1 331 1 328 1 120 2 121 1 123 1 169 1 171 2 339 1 
126 1 114 1 177 1 58 1 318 1 182 1 302 1 103 1 
126 2 8 1 286 1 107 1 21 1 22 1 
161 1 86 1 274 1 68 1 
126 1 114 1 279 1 182 1 171 1 302 1 103 1 236 1 
133 1 192 1 174 1 
105 1 147 1 133 1 268 1 174 1 
133 1 192 1 174 1 
133 1 192 1 174 1 
133 1 202 1 174 1 
133 1 202 1 174 1 
133 1 202 1 174 1 
133 1 174 1 
235 1 24 1 
6 1 142 2 93 2 265 3 54 1 156 2 314 1 56 1 197 2 21 3 243 7 321 3 244 2 113 2 287 4 209 17 28 4 328 2 333 9 248 1 77 8 
210 1 
197 1 131 1 107 1 200 1 21 1 243 2 321 1 244 1 113 1 286 1 287 2 142 1 209 4 28 1 265 1 333 2 77 2 
261 1 216 1 209 2 333 1 34 1 77 1 
261 1 69 1 216 1 209 2 333 1 77 1 
261 1 209 1 77 1 
209 1 216 1 333 1 
197 1 107 1 131 1 200 1 21 1 243 3 321 1 244 1 113 1 204 1 286 1 142 1 287 2 209 6 28 2 265 1 333 3 77 3 
261 1 197 1 198 1 216 1 209 2 142 1 287 2 333 1 34 1 77 1 14 1 244 1 113 1 
21 1 243 2 321 1 209 6 93 1 28 1 328 1 265 1 333 3 77 3 156 1 
56 1 197 1 243 2 6 1 244 1 113 1 209 3 287 2 142 1 28 1 93 1 328 1 265 1 333 1 249 1 77 2 314 1 
197 1 198 1 21 2 243 5 321 2 244 1 113 1 142 1 287 2 209 10 93 2 28 3 328 2 265 2 333 5 77 5 54 1 156 1 
198 1 197 1 21 1 243 1 244 1 113 1 286 1 287 2 142 1 209 2 265 1 333 2 
198 1 197 1 131 1 107 1 21 1 243 2 321 1 244 1 113 1 286 1 287 2 142 1 209 4 28 1 265 1 333 2 77 2 
198 1 197 3 6 1 243 2 244 3 113 3 209 3 287 6 142 3 93 1 28 1 328 1 265 1 333 1 249 1 77 2 158 1 
198 1 197 3 216 1 200 1 23 1 244 3 113 3 261 1 209 2 287 6 142 3 333 1 34 1 77 1 158 1 
261 1 197 1 198 1 216 1 209 2 142 1 287 2 333 1 34 1 77 1 14 1 244 1 113 1 
197 2 198 1 216 1 200 1 244 2 113 2 261 1 287 4 142 2 209 2 333 1 34 1 14 1 77 1 
216 1 131 2 6 2 261 1 142 4 93 2 265 5 230 1 14 1 54 1 156 2 314 1 56 1 197 4 198 1 107 2 200 1 21 5 243 9 321 5 244 4 324 1 113 4 286 2 208 1 209 27 287 8 28 4 328 2 333 14 248 1 34 1 77 13 251 1 
261 1 197 1 198 1 216 1 209 2 142 1 287 2 333 1 34 1 77 1 14 1 244 1 113 1 
261 1 197 1 198 1 216 1 209 2 142 1 287 2 333 1 34 1 77 1 14 1 244 1 113 1 
216 1 131 2 6 1 261 1 142 2 265 2 230 1 14 1 197 2 198 1 107 2 21 2 243 3 321 2 244 2 324 1 113 2 286 2 208 1 209 13 287 4 28 1 333 7 34 1 77 6 251 1 
198 1 197 2 216 1 200 1 244 2 113 2 261 1 287 4 142 2 209 2 333 1 34 1 14 1 77 1 
197 2 198 1 216 1 244 2 113 2 261 1 287 4 142 2 209 2 333 1 34 1 14 1 77 1 158 1 
56 2 21 1 243 6 321 1 209 7 93 3 28 3 328 3 265 3 333 3 77 4 156 1 314 1 
197 2 198 1 216 1 244 2 113 2 261 1 287 4 142 2 209 2 333 1 34 1 14 1 77 1 158 1 
316 1 189 1 277 1 88 1 163 1 123 1 63 1 
127 1 316 1 217 1 0 1 277 1 88 1 163 1 63 1 189 1 71 1 33 1 123 1 
161 1 210 1 86 1 274 1 68 1 
218 1 161 1 181 1 85 1 86 1 274 1 136 1 277 2 220 1 88 1 163 1 187 1 68 1 206 1 140 1 123 2 337 1 339 1 
181 1 85 1 135 1 277 1 163 1 123 1 339 1 
181 1 85 1 135 1 277 1 163 1 123 1 339 1 
130 1 135 1 309 1 
130 1 135 1 309 1 
116 1 161 1 86 1 136 1 274 1 187 1 
161 6 218 1 86 7 274 7 136 2 62 1 164 1 66 1 68 2 187 3 206 3 116 1 143 1 291 1 96 1 231 1 334 1 168 1 76 1 337 2 154 1 
181 1 86 1 85 1 88 3 187 1 93 2 265 1 11 1 96 1 197 2 274 1 276 1 277 2 21 3 26 1 113 2 206 1 287 4 209 13 28 4 123 2 218 1 136 1 220 1 226 1 46 1 140 1 142 2 146 1 307 1 54 1 156 2 55 1 314 1 237 2 56 1 161 1 163 1 243 5 321 3 244 2 328 2 333 7 248 1 77 6 338 2 337 1 339 1 
42 1 
161 2 218 1 86 2 274 2 136 1 44 1 62 1 187 2 139 1 206 2 116 1 96 1 337 1 
161 4 86 4 274 4 136 1 138 1 187 1 68 1 245 1 246 1 206 1 325 1 96 1 337 1 
161 1 218 1 86 1 135 1 274 1 136 1 66 1 187 2 91 1 205 1 206 1 231 1 337 1 213 1 
288 1 161 1 119 1 86 1 136 1 274 1 149 1 7 1 187 1 68 1 
161 2 86 2 274 2 136 1 164 1 187 1 206 1 143 1 96 1 250 1 337 1 
161 3 86 4 135 1 274 4 136 2 138 1 164 1 245 1 68 1 187 2 206 3 325 1 96 1 291 1 337 2 154 1 
161 3 86 4 135 1 274 4 136 2 138 1 164 1 245 1 68 1 187 2 206 3 325 1 96 1 291 1 337 2 170 1 
218 1 161 1 57 1 181 1 85 1 86 1 274 1 136 1 277 2 88 1 163 1 187 1 68 1 206 1 140 1 123 2 337 1 339 1 
135 1 
70 1 40 1 88 1 257 1 341 1 
38 1 130 1 40 1 181 1 219 1 42 1 226 2 257 1 188 1 49 1 309 1 234 1 277 1 163 1 111 1 323 1 165 1 326 1 70 1 72 1 121 1 123 1 292 1 169 1 339 1 341 1 
194 1 264 1 40 1 277 1 163 1 123 1 257 1 214 1 341 1 
49 1 234 1 341 1 
210 1 
132 1 199 1 45 1 78 1 203 1 35 1 295 1 
176 1 199 1 5 1 
128 2 199 3 132 1 299 1 256 1 45 1 203 3 98 1 78 1 340 1 35 1 295 1 
132 1 199 2 45 1 78 1 4 1 203 2 48 1 35 1 295 1 
199 1 3 1 240 1 45 1 203 1 288 1 98 1 53 1 149 1 35 1 295 1 
132 1 199 1 98 1 45 1 203 1 35 1 295 1 
132 2 199 1 98 1 78 1 203 1 35 1 295 1 
175 1 132 1 199 2 45 1 203 2 98 1 148 1 35 2 173 1 295 2 
199 1 132 1 203 1 29 1 98 1 78 1 79 1 35 1 295 1 
132 1 199 2 3 1 45 1 223 1 203 2 48 1 288 1 119 1 332 1 98 1 78 1 149 2 35 1 295 1 
39 1 132 1 199 4 45 2 4 1 203 4 48 2 98 1 97 1 53 1 78 1 35 2 295 2 
132 1 199 1 98 1 45 1 78 1 203 1 35 1 295 1 
128 1 132 2 199 4 299 1 256 1 45 3 203 4 48 2 97 1 53 1 78 2 79 1 35 1 295 1 
132 1 199 2 160 1 273 1 45 1 224 1 203 2 48 1 98 1 78 1 35 1 295 1 
128 2 132 1 199 3 299 2 98 1 256 1 45 1 78 1 81 1 203 3 35 1 295 1 
45 2 259 2 25 1 229 1 
199 1 145 1 98 1 203 1 35 1 295 1 
132 1 199 2 247 1 98 1 45 1 78 1 203 2 48 1 35 1 295 1 
233 1 
132 1 199 1 98 1 45 1 78 1 203 1 35 1 295 1 
128 1 199 3 132 1 45 1 203 3 48 1 247 1 98 1 78 1 35 1 295 1 
53 1 97 1 45 1 79 1 
132 1 45 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (82,84,93) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (82,84,93) 119 9 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (82,84,93) 119 44 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (236,261) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 239 96 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (82,84,93) (82,84,93) 278 339 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (32,66) 305 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (32,66) 305 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (32,66) 162 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (32,66) 162 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 239 96 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 230 25 346 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (236,261) (236,261) 46 (112,167) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (236,261) (236,261) 46 (148,221) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (82,84,93) 119 75 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 1 286 1 17 2 253 1 210 3 26 1 57 1 31 2 124 3 6 1 147 2 137 1 273 1 
86 1 17 2 253 1 210 9 231 2 164 1 336 1 315 1 124 9 6 4 147 2 282 1 55 1 286 1 324 1 57 1 26 1 31 5 12 1 304 1 326 1 137 3 273 7 272 1 
86 1 17 2 253 1 210 9 231 2 164 1 336 1 315 1 124 9 6 4 147 2 282 1 55 1 286 1 324 1 57 1 26 1 31 5 12 1 304 1 326 1 137 3 273 7 272 1 
86 1 17 2 253 1 210 9 231 2 4 1 164 1 336 1 124 9 213 1 6 4 147 2 282 2 55 1 286 1 134 1 57 2 26 1 31 5 12 1 304 2 326 1 137 3 157 1 203 1 114 1 272 2 273 6 
86 1 17 2 253 1 210 9 231 2 4 1 164 1 336 1 124 9 213 1 6 4 147 2 282 2 55 1 286 1 134 1 57 2 26 1 31 5 12 1 304 2 326 1 137 3 157 1 203 1 114 1 272 2 273 6 
86 1 17 2 253 1 210 10 231 2 4 1 164 1 336 1 124 10 213 1 6 5 147 2 282 2 55 1 286 1 134 1 57 2 26 1 31 6 12 1 304 2 326 1 137 4 157 1 203 1 114 1 272 2 273 7 
86 1 17 2 253 1 210 7 231 1 4 1 164 1 336 1 124 7 213 1 6 3 147 2 282 2 55 1 286 1 134 1 57 2 26 1 31 4 304 2 326 1 137 2 157 1 203 1 114 1 272 2 273 4 
55 1 286 1 17 1 253 1 210 4 231 2 336 1 31 3 12 1 124 4 304 1 326 1 6 2 147 1 137 1 282 1 272 1 273 3 
55 1 56 1 286 1 17 1 252 1 253 1 134 1 210 2 57 1 31 1 124 2 147 1 203 1 282 1 272 1 311 1 
201 1 68 1 194 1 178 1 82 1 307 1 281 1 198 1 166 1 298 1 15 1 238 1 116 1 54 1 
92 1 
92 1 82 2 60 1 180 1 68 1 291 1 238 2 280 1 
24 1 314 1 68 2 334 1 76 1 11 2 223 1 266 1 92 1 82 5 22 2 125 1 60 2 35 2 69 1 180 1 250 1 291 1 238 5 
92 1 102 1 291 1 
92 1 256 1 322 2 
201 2 281 2 198 2 298 2 15 1 233 1 116 2 54 2 
207 2 118 2 39 1 276 1 277 1 18 1 121 1 163 1 233 1 145 2 196 1 23 1 338 2 46 1 281 2 95 1 198 2 166 1 298 2 199 1 130 1 284 2 54 2 201 3 152 1 220 1 74 1 10 1 301 1 29 1 303 1 34 1 112 1 290 1 15 1 292 1 229 1 116 3 310 1 
178 1 201 1 281 1 198 1 166 1 298 1 15 1 194 1 116 1 54 1 
201 1 93 1 198 1 185 1 84 1 116 1 
201 1 281 1 198 1 298 1 84 1 116 1 54 1 
82 1 60 1 68 1 345 1 238 1 
92 1 82 2 60 1 226 1 180 1 68 1 291 1 238 2 
82 1 60 1 238 1 
201 2 163 1 233 1 123 1 281 1 198 2 289 1 166 1 298 1 116 2 54 1 
312 1 244 1 
201 1 207 1 276 1 121 1 233 1 29 1 196 1 303 1 23 1 338 1 112 1 46 1 199 1 116 1 284 1 200 1 
102 1 233 1 
201 2 207 1 276 1 121 1 174 1 29 1 196 1 303 1 23 1 46 1 112 1 338 1 198 1 298 1 199 1 67 1 206 1 116 2 284 1 54 1 
201 3 281 1 198 3 298 3 233 1 206 1 116 3 54 3 
178 1 201 1 198 1 166 1 298 1 116 1 54 1 
201 1 123 1 281 1 198 1 289 1 166 1 298 1 116 1 54 1 
201 2 119 1 281 1 198 2 289 1 298 2 174 1 9 1 84 1 116 2 206 1 54 2 
189 1 201 2 198 2 298 1 233 1 185 1 116 2 206 1 54 1 
201 1 44 1 119 1 198 1 298 1 174 1 84 1 116 1 206 1 54 1 
201 2 281 1 244 1 198 2 289 1 298 2 67 1 206 1 116 2 54 2 
201 1 207 1 276 1 121 1 233 1 29 1 196 1 303 1 23 1 338 1 112 1 46 1 199 1 116 1 284 1 
201 1 207 1 276 1 121 1 163 1 233 1 29 1 196 1 303 1 23 1 338 1 46 1 166 1 148 1 129 1 116 1 284 1 
312 2 118 2 39 1 277 1 145 4 197 1 165 1 296 1 94 1 130 2 74 2 300 1 58 1 265 1 154 1 269 1 34 1 244 2 290 1 246 1 292 1 329 1 229 1 
201 1 198 1 166 1 261 1 298 1 116 1 54 1 259 1 
201 3 163 1 174 1 233 1 281 1 198 3 289 1 166 1 298 3 206 2 116 3 54 3 
178 1 201 2 198 2 166 1 298 2 116 2 259 1 54 2 
120 1 260 1 79 1 
275 1 202 1 260 2 128 1 66 1 79 2 
260 1 79 1 
260 1 79 1 
202 1 128 1 
202 1 128 1 
202 1 128 1 
260 1 279 1 79 1 
260 1 279 1 79 1 
260 1 279 1 79 1 
340 1 260 1 79 1 
340 1 260 1 79 1 
340 1 260 1 79 1 
16 1 331 1 275 1 208 1 194 1 195 1 146 1 281 1 198 1 166 1 260 1 298 1 238 1 54 1 201 1 132 1 8 1 222 1 79 1 178 1 82 1 307 1 156 1 15 1 182 1 116 1 85 1 
201 1 331 1 198 1 298 1 116 1 54 1 
304 1 252 1 282 2 177 1 33 2 
304 1 282 1 272 1 
252 1 282 1 272 1 
304 2 252 1 270 1 282 3 33 1 177 1 
304 1 252 1 282 2 33 1 177 1 299 1 
187 1 194 1 92 2 94 1 281 1 198 1 48 2 238 5 322 2 54 1 201 1 11 1 154 1 60 1 246 1 65 1 15 1 291 1 250 3 116 1 255 1 68 4 256 2 337 1 22 1 125 1 296 1 69 2 166 1 298 1 343 2 344 1 173 2 178 1 82 5 307 1 35 1 349 1 36 1 180 1 183 1 
194 1 42 2 92 2 94 1 281 1 198 1 238 5 53 1 322 2 54 1 201 1 11 1 154 1 60 3 246 1 248 1 65 1 15 1 291 1 250 3 116 1 255 1 68 4 256 2 337 1 22 1 125 1 296 1 69 2 166 1 298 1 343 2 344 1 173 2 345 2 178 1 82 5 307 1 35 1 36 1 180 1 183 1 
187 1 314 1 255 1 68 2 194 1 256 2 92 2 22 1 296 1 94 1 281 1 69 2 198 1 166 1 48 1 298 1 343 2 238 3 322 2 54 1 201 1 344 1 173 2 11 1 178 1 154 1 82 3 307 1 35 1 349 1 36 1 246 1 65 1 15 1 291 1 183 1 250 3 116 1 
187 1 314 1 255 2 68 3 257 1 256 4 92 4 22 1 296 2 94 2 69 4 48 2 283 1 343 4 238 4 322 4 344 2 104 1 173 4 11 1 154 2 82 4 35 1 349 1 36 2 246 2 65 1 291 1 38 1 183 1 250 5 
141 1 
23 1 102 1 325 1 
23 1 49 1 
23 1 276 1 
23 3 190 1 276 1 325 2 159 1 303 1 
23 1 276 1 303 1 
23 1 254 1 
151 1 74 3 300 4 241 2 145 6 197 2 296 1 94 1 63 1 64 2 138 1 216 1 184 1 130 3 330 1 52 2 160 1 161 1 
118 2 277 1 230 1 89 1 145 6 197 1 149 1 130 3 52 1 219 1 170 1 25 1 74 3 300 2 241 1 34 1 228 1 63 1 138 2 64 1 292 1 330 1 229 1 160 1 
118 4 277 2 122 1 145 8 197 3 296 1 94 1 216 1 149 1 130 4 52 1 151 1 74 4 300 4 77 1 241 2 34 2 63 1 138 1 64 2 292 2 229 2 330 1 161 1 
151 1 74 3 300 4 241 2 145 6 197 2 296 1 94 1 63 1 64 2 138 1 216 1 130 3 330 1 52 2 160 1 161 1 
151 1 74 3 300 4 241 2 145 6 197 2 296 1 94 1 63 1 64 2 138 1 216 1 130 3 330 1 52 2 160 1 161 1 
142 1 207 1 276 1 17 1 192 1 87 2 88 1 121 1 1 1 57 2 210 1 106 2 29 1 196 1 81 2 124 1 23 1 45 1 316 1 147 1 338 1 204 1 284 1 
207 1 252 1 101 1 17 1 253 1 87 1 57 1 210 1 106 1 29 1 41 1 196 1 211 1 108 1 81 1 124 1 304 1 111 1 147 1 338 1 270 1 282 2 217 1 272 1 284 1 251 1 
207 1 17 1 252 1 87 1 253 1 210 2 211 1 196 1 124 2 338 1 147 1 319 1 282 2 217 1 284 1 55 1 286 1 101 1 57 1 106 1 29 1 31 1 108 1 81 1 304 1 111 1 270 1 273 1 272 1 251 1 
207 1 17 1 252 1 87 1 210 3 41 1 211 1 196 1 124 3 338 1 147 1 316 1 282 2 217 1 284 1 55 1 286 1 101 1 57 1 106 1 29 1 31 1 81 1 304 1 111 1 270 1 205 1 272 1 273 2 251 1 
207 1 252 1 87 1 210 2 41 1 196 1 124 2 338 1 282 2 217 1 284 1 55 1 286 1 57 1 106 1 29 1 31 1 81 1 304 1 111 1 270 1 205 1 273 2 272 1 251 1 
287 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 278 1 11 1 82 1 22 1 125 1 93 1 35 1 198 1 339 1 245 1 238 1 185 1 84 1 116 1 186 1 
207 1 121 1 11 1 82 2 22 1 60 2 125 1 35 1 338 1 69 1 180 1 96 1 97 1 238 2 284 1 239 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 278 1 280 1 82 2 60 1 93 1 339 1 198 1 245 1 180 1 238 2 185 1 84 1 116 1 186 1 
201 1 278 1 11 1 82 1 22 1 125 1 93 1 35 1 198 1 339 1 245 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
201 1 82 1 93 1 198 1 339 1 245 1 278 1 238 1 185 1 84 1 116 1 186 1 
207 8 118 4 39 2 276 2 277 2 192 1 121 2 18 1 90 1 145 2 41 1 196 2 23 3 338 8 126 1 198 1 319 1 298 1 130 1 321 1 284 7 54 1 131 1 201 1 220 2 74 1 135 1 10 1 29 2 34 2 288 1 113 1 290 2 204 1 329 1 292 2 229 2 116 1 206 1 
312 1 118 2 39 1 277 1 145 3 197 1 94 1 296 1 281 1 198 1 298 1 130 2 54 1 201 1 74 1 300 1 78 1 154 1 34 1 244 1 289 1 36 1 290 1 246 1 158 1 292 1 229 1 116 1 
151 1 39 1 118 2 74 2 277 1 102 1 300 2 241 2 233 2 145 5 197 2 34 1 296 1 94 1 290 1 64 2 216 1 329 1 292 1 130 3 229 1 161 1 
312 8 118 4 39 2 277 2 230 2 163 1 233 1 145 11 197 1 94 2 296 1 237 1 166 1 130 5 52 1 170 2 74 6 103 1 300 2 10 1 107 1 154 1 34 2 13 1 136 1 244 8 36 2 290 1 246 2 158 1 292 2 229 2 
207 1 39 1 118 2 276 1 277 1 121 1 18 1 294 1 233 1 145 2 196 1 23 1 46 1 338 1 198 1 199 1 298 1 130 1 284 1 200 1 54 1 201 2 74 1 263 1 174 1 10 1 29 1 303 1 34 1 112 1 244 1 290 1 158 1 292 1 229 1 271 1 116 2 206 1 
312 6 39 3 276 2 277 3 233 2 145 19 196 2 197 4 46 2 94 3 198 1 199 2 284 1 52 2 54 1 98 2 99 2 151 1 201 3 152 2 100 2 241 2 10 1 59 1 109 1 154 2 112 2 244 6 290 3 246 2 64 2 158 1 292 3 206 1 116 3 161 1 207 1 118 6 18 1 121 1 23 2 338 1 296 3 216 1 298 1 130 10 74 9 174 1 300 6 29 2 303 2 34 3 308 2 36 2 229 3 
312 1 39 1 118 2 74 2 277 1 300 1 145 2 165 1 34 1 94 1 244 1 290 1 246 1 329 1 292 1 229 1 52 1 
312 1 39 1 118 2 277 1 300 1 145 2 197 1 154 1 34 1 269 1 296 1 244 1 290 1 329 1 292 1 229 1 130 2 
312 2 118 2 39 1 277 1 145 4 197 1 94 1 296 1 130 2 52 1 74 2 300 2 154 1 34 1 244 2 36 1 246 1 290 1 292 1 329 1 229 1 
312 1 131 1 39 1 118 2 74 2 277 1 300 1 145 2 165 1 34 1 94 1 244 1 290 1 246 1 292 1 229 1 52 1 
312 1 131 1 39 1 118 2 277 1 300 1 145 2 197 1 154 1 34 1 269 1 296 1 244 1 290 1 292 1 229 1 130 2 
312 2 118 2 39 1 277 1 145 4 197 1 94 1 296 1 130 2 131 1 74 2 300 1 154 1 34 1 244 2 36 1 246 1 290 1 292 1 229 1 
312 2 39 1 118 2 74 2 277 1 300 2 145 4 197 1 154 1 34 1 296 1 94 1 244 2 36 1 290 1 246 1 292 1 130 2 229 1 52 1 
207 1 39 1 118 2 276 1 277 1 18 1 121 1 233 1 145 2 196 1 23 1 46 1 338 1 199 1 130 1 284 1 201 1 152 1 74 1 10 1 29 1 303 1 34 1 112 1 290 1 292 1 229 1 116 1 
207 1 39 1 118 2 276 1 277 1 121 1 163 1 233 1 145 1 196 1 23 1 46 1 338 1 166 1 148 1 129 1 130 1 284 1 201 1 10 1 29 1 303 1 34 1 327 1 290 1 292 1 229 1 116 1 
312 2 118 2 39 1 277 1 145 4 197 1 94 1 296 1 130 2 52 1 74 2 300 2 154 1 34 1 244 2 36 1 246 1 290 1 158 1 292 1 229 1 
312 2 207 1 39 1 118 2 276 1 277 1 145 4 196 1 197 1 23 1 296 1 94 1 46 1 338 1 319 1 199 1 130 2 52 1 284 1 98 1 201 1 152 1 74 2 300 2 29 1 303 1 154 1 34 1 112 1 244 2 36 1 246 1 290 1 292 1 229 1 116 1 
312 1 118 2 39 1 277 1 145 3 296 1 94 1 281 1 198 1 298 1 130 1 52 1 54 1 201 1 74 2 300 1 224 1 154 1 34 1 244 1 289 1 36 1 290 1 246 1 158 1 292 1 229 1 116 1 
313 1 118 8 277 4 230 2 193 1 40 1 122 1 145 35 258 1 197 4 212 1 296 4 47 3 94 4 317 1 72 1 216 1 73 1 149 2 218 1 130 18 52 4 170 2 151 1 25 2 74 17 27 1 300 8 241 2 346 1 154 3 34 4 306 1 36 3 246 3 64 2 139 1 292 4 229 4 161 1 
118 6 277 3 230 4 193 1 40 1 122 1 145 46 258 1 212 1 197 4 47 4 94 7 296 6 317 1 73 1 149 2 218 2 130 22 52 4 170 4 25 2 74 24 103 2 133 1 27 1 300 8 346 1 154 6 34 3 136 2 306 1 36 7 246 7 139 2 292 3 229 3 
277 4 230 5 193 1 40 1 145 64 197 8 94 9 47 4 317 1 149 2 52 9 151 2 103 2 241 4 154 5 14 1 246 7 64 4 292 4 161 2 118 8 122 1 258 1 212 1 296 7 72 1 216 2 73 1 218 1 130 31 170 5 25 3 74 33 133 1 300 17 27 1 346 1 34 4 136 2 306 1 36 7 139 2 229 4 
118 8 277 4 230 2 193 1 40 1 122 1 145 37 258 1 197 3 212 1 296 4 47 4 94 4 317 1 72 1 216 1 73 1 149 2 218 1 130 19 52 4 170 2 151 1 25 2 74 18 133 1 27 1 300 7 241 2 346 1 154 3 34 4 306 1 36 3 246 3 64 2 139 1 292 4 229 4 161 1 
118 6 277 3 230 3 193 1 40 1 122 1 145 41 258 1 212 1 197 5 47 4 94 6 296 5 317 1 216 1 73 1 149 2 218 1 130 20 52 3 170 3 151 1 25 2 74 21 103 1 133 1 27 1 300 8 241 2 346 1 154 4 34 3 136 1 306 1 36 5 246 5 64 2 139 1 292 3 229 3 161 1 
16 1 143 1 61 1 209 1 260 1 182 1 146 1 79 1 85 1 32 1 
120 1 2 1 
16 1 70 1 71 1 260 1 182 1 146 1 79 1 302 1 85 1 
331 1 208 1 275 1 194 1 195 1 281 1 198 1 166 1 298 1 54 1 201 1 132 1 8 1 222 1 178 1 307 1 156 1 15 1 116 1 
331 1 208 1 275 1 194 1 195 1 281 1 198 1 166 1 298 1 54 1 201 1 132 1 8 1 222 1 178 1 307 1 156 1 15 1 116 1 
331 1 208 1 275 1 194 1 195 1 281 1 198 1 166 1 298 1 54 1 201 1 132 1 8 1 222 1 178 1 307 1 156 1 15 1 116 1 
305 1 279 1 66 1 
305 1 279 1 66 1 
162 1 340 1 
162 1 340 1 66 1 
268 1 332 1 
16 1 208 1 120 1 332 1 68 1 2 1 233 1 146 1 20 1 91 1 198 2 260 1 342 1 298 2 238 1 54 2 262 1 201 2 344 1 8 1 222 1 79 1 82 1 268 1 182 1 116 2 85 1 
305 1 279 1 
162 1 340 1 66 1 
207 2 39 1 118 2 276 1 277 1 18 1 145 2 196 1 234 1 23 1 338 2 198 2 50 1 130 1 321 1 284 2 201 2 220 2 74 1 10 1 29 1 28 1 30 1 80 1 34 1 288 1 290 1 158 1 292 1 229 1 116 2 
142 1 207 1 172 1 276 1 87 1 192 1 121 1 29 1 196 1 21 1 23 1 338 1 204 1 284 1 
323 1 207 1 252 1 101 1 87 1 264 1 41 1 29 1 196 1 21 1 304 1 111 1 338 1 270 1 282 2 272 1 284 1 251 1 
323 1 207 2 252 1 101 1 87 1 264 1 29 1 41 1 196 1 21 1 304 1 111 1 338 2 270 1 282 2 319 1 272 1 284 2 251 1 
207 1 252 1 101 1 87 1 264 1 41 1 29 1 196 1 304 1 111 1 338 1 270 1 282 2 37 1 272 1 284 1 251 1 
83 1 
334 1 11 1 223 1 22 1 92 1 125 1 35 1 69 1 291 1 250 1 
255 1 173 2 256 2 154 1 92 2 94 1 296 1 69 2 36 1 246 1 343 2 250 2 38 1 322 2 
92 1 82 1 60 1 180 1 291 1 238 1 
207 1 144 1 121 1 11 1 82 1 22 1 60 2 125 1 338 1 35 1 69 1 180 1 96 1 97 1 238 1 284 1 239 1 
207 1 118 2 39 1 276 1 277 1 121 1 233 1 145 1 196 1 23 1 338 1 46 1 281 2 95 1 198 2 298 2 199 1 130 1 284 1 54 2 201 3 152 1 10 1 29 1 303 1 34 1 112 1 290 1 15 1 292 1 229 1 116 3 
173 2 11 1 256 2 22 1 92 4 125 1 35 1 69 2 97 1 65 1 343 2 250 1 291 2 330 1 322 2 
92 1 69 1 102 1 334 1 250 1 291 1 223 1 
22 1 125 1 35 1 69 1 240 1 11 1 250 1 
7 1 207 1 190 1 276 1 121 1 11 1 29 1 243 1 196 2 303 1 22 1 23 2 125 1 35 1 338 1 49 1 284 1 
170 1 25 1 230 1 173 1 11 1 256 1 346 1 92 1 22 1 125 1 35 1 69 1 343 1 250 1 322 1 
169 1 255 1 11 1 241 1 82 1 22 1 125 1 35 1 214 1 64 1 238 1 
16 1 332 1 209 1 5 1 146 1 
16 1 309 1 146 1 
16 1 309 1 146 1 
16 1 309 1 146 1 
16 1 43 1 146 1 
16 1 43 1 146 1 
16 1 43 1 146 1 
16 1 146 1 
260 1 79 1 
214 1 64 1 300 1 241 1 197 1 
118 2 74 2 277 1 300 1 122 1 145 2 34 1 94 1 246 1 292 1 229 1 52 1 
118 2 74 2 277 1 300 2 122 1 145 4 197 1 154 1 34 1 296 1 94 1 36 1 246 1 292 1 130 2 229 1 52 1 
118 6 74 1 277 3 300 2 122 1 241 1 145 3 197 1 34 3 72 1 64 1 149 1 292 3 130 2 229 3 52 1 219 1 
118 8 277 4 230 1 89 1 333 1 122 1 145 12 197 2 296 1 94 1 214 1 72 1 216 1 149 1 130 7 52 2 219 1 170 1 151 1 25 1 74 5 300 4 241 2 34 4 64 2 292 4 229 4 161 1 
151 1 118 4 74 4 277 2 300 4 241 2 145 9 197 2 34 2 296 1 94 1 64 2 216 1 292 2 149 1 130 5 229 2 52 2 161 1 
151 1 296 1 94 1 74 2 102 1 64 2 300 2 216 1 241 2 145 5 130 3 197 2 161 1 
118 2 74 2 277 1 333 1 300 2 145 4 197 1 154 1 34 1 296 1 94 1 36 1 246 1 292 1 130 2 229 1 52 1 
170 2 25 1 74 6 230 2 103 1 300 2 145 12 197 1 154 2 136 1 94 2 296 2 36 2 246 2 130 6 52 1 
118 2 277 1 230 2 145 19 197 4 296 3 94 3 216 1 149 1 130 10 52 2 170 2 151 1 74 9 103 1 300 6 241 3 107 1 154 2 34 1 136 1 36 2 246 2 64 3 292 1 229 1 161 1 
170 1 145 1 130 1 
74 1 230 1 145 1 
118 2 100 1 74 3 277 1 333 1 300 4 145 6 197 2 154 1 34 1 94 1 296 1 36 1 246 1 292 1 229 1 130 3 52 2 
118 2 277 1 230 2 193 1 122 1 145 22 197 2 94 4 296 4 317 1 73 1 130 11 52 2 170 2 25 1 74 11 103 1 300 4 346 1 154 4 34 1 136 1 306 1 36 4 246 4 292 1 229 1 
151 1 74 2 300 1 241 1 145 4 197 1 94 1 296 1 64 1 130 2 
118 2 74 1 277 1 300 2 241 1 145 3 197 1 34 1 64 1 216 1 149 1 292 1 130 2 229 1 52 1 161 1 219 1 
118 4 277 2 230 1 193 1 122 1 145 16 197 4 214 1 94 3 296 2 317 1 216 1 73 1 149 1 130 7 52 4 170 1 151 1 25 1 74 9 300 8 241 3 346 1 154 1 34 2 306 1 36 2 246 2 64 3 292 2 229 2 161 1 
118 6 277 3 230 1 193 1 333 1 122 1 145 16 197 3 94 3 296 2 317 1 216 1 73 1 149 1 130 7 52 1 170 1 151 1 25 1 74 9 300 4 241 2 346 1 154 1 34 3 306 1 36 2 246 2 64 2 292 3 229 3 161 1 
118 6 277 3 230 2 193 1 333 1 122 1 145 28 197 4 94 5 296 5 317 1 216 1 73 1 149 1 130 15 52 2 170 2 151 1 25 1 74 13 103 1 300 6 241 2 346 1 154 4 34 3 136 1 306 1 36 4 246 4 64 2 292 3 229 3 161 1 
118 6 277 3 230 2 193 1 333 1 122 1 145 26 197 4 94 5 296 4 317 1 216 1 73 1 149 1 130 12 52 4 170 2 151 1 25 1 74 14 103 1 300 8 241 2 346 1 154 3 34 3 136 1 306 1 36 4 246 4 64 2 292 3 229 3 161 1 
118 4 277 2 230 1 193 1 122 1 145 16 197 4 214 1 94 3 296 2 317 1 216 1 73 1 149 1 130 7 52 4 170 1 151 1 25 1 74 9 300 8 241 3 346 1 154 1 34 2 306 1 36 2 246 2 64 3 292 2 229 2 161 1 
118 2 277 1 230 2 193 1 122 1 145 22 197 2 94 4 296 4 317 1 73 1 130 11 52 2 170 2 25 1 74 11 103 1 300 4 346 1 154 4 34 1 136 1 306 1 36 4 246 4 292 1 229 1 
118 8 277 4 230 2 193 1 333 1 122 1 145 27 197 4 94 5 296 4 317 1 216 1 73 1 149 2 130 13 52 4 170 2 151 1 25 1 74 14 103 1 300 8 241 2 346 1 154 3 34 4 136 1 306 1 36 4 246 4 64 2 292 4 229 4 161 1 
118 4 277 2 230 1 122 1 145 7 197 1 94 1 296 1 72 1 130 4 170 2 25 1 74 3 103 1 300 1 346 1 154 1 34 2 36 1 246 1 292 2 229 2 
151 1 74 3 300 4 241 2 145 7 197 2 296 1 94 1 64 2 216 1 130 4 52 2 161 2 
118 4 277 2 230 1 122 1 145 7 197 1 94 1 296 1 72 1 130 4 170 2 25 1 74 3 103 1 300 1 346 1 154 1 34 2 36 1 246 1 292 2 229 2 
201 1 189 1 198 1 233 1 185 1 116 1 176 1 
171 1 189 1 201 1 153 1 233 1 347 1 176 1 110 1 198 1 318 1 185 1 116 1 
188 1 207 4 276 1 192 1 121 1 29 1 196 1 295 1 23 1 338 4 319 1 204 1 284 4 
207 2 276 1 175 1 335 1 29 1 196 2 225 1 303 1 23 1 338 2 328 1 249 1 284 2 168 1 
207 1 338 1 252 1 121 1 282 1 29 1 272 1 196 1 284 1 251 1 
23 1 207 2 338 2 276 1 50 1 319 1 29 1 41 1 196 1 321 1 284 2 
207 5 276 2 192 1 121 1 90 1 29 2 196 2 295 1 23 3 338 5 126 1 319 1 249 1 204 1 321 1 284 4 
207 5 276 2 192 1 121 1 29 2 196 2 295 1 23 3 338 5 126 1 319 1 181 1 249 1 204 1 321 1 284 4 
23 1 207 1 338 1 276 1 192 1 102 1 121 1 204 1 29 1 196 1 284 1 
201 2 207 1 276 1 121 1 233 1 29 1 196 1 303 1 23 1 46 1 338 1 112 1 198 1 298 1 206 1 116 2 284 1 54 1 
201 1 207 1 276 1 29 1 196 1 303 1 23 1 46 1 338 1 112 1 236 1 198 1 166 1 261 1 298 1 249 1 206 1 116 1 284 1 54 1 
201 1 207 1 276 1 29 1 196 1 303 1 23 1 46 1 338 1 236 1 198 1 166 1 148 1 261 1 298 1 249 1 206 1 116 1 284 1 54 1 
207 1 276 1 254 1 232 1 194 1 196 1 92 1 23 4 338 1 281 1 198 1 166 1 49 1 298 1 238 2 284 1 54 1 201 1 325 1 221 1 29 1 303 1 178 1 82 2 60 1 307 1 62 1 249 1 15 1 291 1 293 1 116 1 
207 1 276 1 254 1 194 1 196 1 92 1 23 4 338 1 281 1 198 1 166 1 49 1 298 1 167 1 238 2 284 1 54 1 201 1 325 1 29 1 303 1 178 1 82 2 60 1 307 1 62 1 249 1 15 1 291 1 293 1 116 1 
207 1 338 1 113 1 29 1 196 1 284 1 
207 7 190 1 220 1 276 2 121 2 90 1 135 1 175 1 242 1 41 1 29 2 196 3 303 1 23 3 338 7 126 1 113 1 319 1 321 1 284 6 168 1 
207 1 39 2 118 4 276 1 277 2 233 2 145 5 196 1 197 2 23 1 296 1 94 1 46 1 338 1 198 1 319 1 216 1 298 1 199 1 130 3 284 1 54 1 98 1 151 1 201 2 152 1 74 2 300 2 241 2 29 1 303 1 80 1 34 2 308 1 112 1 290 2 64 2 158 1 292 2 229 2 116 2 206 1 161 1 
207 1 144 1 255 1 121 1 68 1 334 1 92 1 22 2 125 2 23 2 214 1 338 1 69 1 215 1 49 1 167 1 238 3 284 1 105 1 325 1 241 1 11 2 223 1 82 3 60 2 35 2 180 1 64 1 291 1 293 1 274 1 
7 1 207 1 190 1 276 1 325 1 29 1 196 2 303 1 23 2 338 1 113 1 141 1 284 1 
207 1 276 1 121 1 163 1 233 1 196 1 23 1 338 1 46 1 198 1 148 1 166 1 298 1 284 1 54 1 201 2 29 1 303 1 116 2 206 1 
207 1 190 1 276 1 175 1 242 1 29 1 196 2 303 1 23 1 338 1 249 1 284 1 168 1 
117 1 0 1 247 1 3 1 233 1 
179 1 82 1 117 1 119 1 0 1 75 1 68 1 247 1 3 1 238 1 115 1 84 1 
201 1 117 1 198 1 247 1 3 1 28 1 30 1 116 1 234 1 
179 1 117 1 75 1 
124 1 55 1 286 1 147 1 17 1 253 1 210 1 31 1 
55 2 286 2 17 1 19 1 210 4 31 3 235 1 124 4 6 1 147 1 297 1 137 1 203 1 273 2 
55 1 191 1 286 1 17 1 253 1 210 2 31 1 315 1 124 2 147 1 51 1 273 1 
55 1 286 1 17 1 253 1 210 3 19 2 31 1 235 1 124 3 147 1 203 2 285 1 
155 1 350 2 31 2 267 1 
150 1 124 1 147 1 17 1 253 1 210 1 
124 2 55 1 286 1 147 1 17 1 253 1 210 2 164 1 31 1 273 1 
348 1 
124 1 55 1 286 1 147 1 17 1 253 1 210 1 31 1 
55 1 286 1 17 1 253 1 210 3 164 1 31 1 124 3 147 1 203 1 273 1 
6 1 297 1 137 1 31 1 
55 1 31 1 
55 1 286 1 102 1 31 1 
124 1 55 1 286 1 147 1 17 1 210 1 31 1 
124 1 57 1 106 1 
55 1 286 1 17 1 253 1 210 2 19 1 31 1 235 1 124 2 227 1 147 1 297 1 203 1 
124 2 55 1 286 1 147 1 17 1 231 1 210 2 31 1 273 1 
124 1 304 1 6 1 326 1 147 1 17 1 253 1 282 1 210 1 272 1 31 1 
124 1 55 1 147 1 17 1 253 1 210 1 31 1 
124 1 55 2 286 1 147 1 17 1 253 1 210 1 
124 2 55 1 147 2 17 2 253 1 127 1 210 2 320 1 31 1 140 1 
55 1 286 1 86 1 17 1 253 1 210 3 164 1 31 2 124 3 6 1 147 1 137 1 273 2 
55 1 286 1 252 1 17 1 253 1 210 2 31 1 124 2 304 1 147 1 270 1 282 2 341 1 272 1 273 1 
55 1 286 1 17 2 253 1 210 4 231 1 31 2 12 1 124 4 6 1 147 2 137 1 273 2 

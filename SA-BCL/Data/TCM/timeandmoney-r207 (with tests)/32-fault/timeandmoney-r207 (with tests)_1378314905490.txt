#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) (274,318) (274,318) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) (274,318) (274,318) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) (274,318) (274,318) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) (274,318) (274,318) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 157 (17,122,161,277) 291 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (173,278) (173,278) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) 310 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 157 312 (149,256) 310 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) 135 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 105 123 229 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 140 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) 135 13 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 72 92 59 30 61 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (106,294) (150,241) (150,241) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 1 231 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 72 92 217 180 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 72 92 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 103 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (213,270,317) (53,184,302) (53,184,302) (53,184,302) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (213,270,317) (53,184,302) (53,184,302) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (213,270,317) (53,184,302) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 72 227 117 (168,179) (57,290) (57,290) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (213,270,317) (53,184,302) (53,184,302) (53,184,302) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 114 238 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 140 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) (31,259) (82,129) 252 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 72 227 117 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 116 160 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 72 92 59 30 61 40 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) (31,259) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 139 160 63 288 152 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 139 160 63 288 152 91 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException 279 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 73 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (106,294) (150,241) (150,241) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (106,294) (150,241) (150,241) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (106,294) (150,241) (150,241) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 1 231 239 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (213,270,317) (213,270,317) (213,270,317) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (213,270,317) (213,270,317) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 72 227 117 (168,179) (168,179) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (213,270,317) (213,270,317) (213,270,317) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) 135 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 139 160 63 288 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 25 118 156 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 25 118 156 286 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 72 92 217 186 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 72 92 59 (43,293) 87 (31,259) (31,259) (82,129) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 47 (43,293) 97 145 (82,129) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 72 92 217 287 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 72 227 117 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 72 92 155 14 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 72 178 0 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 72 178 70 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 72 178 261 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 72 92 59 30 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 136 77 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 157 (17,122,161,277) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 157 312 265 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 157 312 296 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 157 312 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
262 1 22 2 149 1 166 1 153 1 193 3 89 1 157 1 211 1 8 2 312 1 240 1 274 1 256 1 200 1 141 3 292 2 260 1 19 1 318 1 
262 1 22 2 149 1 166 1 153 1 193 3 89 1 157 1 211 1 8 2 312 1 240 1 274 1 256 1 200 1 141 3 292 2 260 1 19 1 318 1 
262 1 22 2 149 1 166 1 153 1 193 3 89 1 157 1 211 1 8 2 312 1 240 1 274 1 256 1 200 1 141 3 292 2 260 1 19 1 318 1 
262 1 22 2 149 1 166 1 153 1 193 3 89 1 157 1 211 1 8 2 312 1 240 1 274 1 256 1 200 1 141 3 292 2 260 1 19 1 318 1 
8 1 264 1 240 1 153 1 291 1 193 2 141 2 292 1 17 1 18 1 157 1 19 1 
173 1 8 1 22 1 278 1 193 1 141 1 292 1 89 1 196 1 19 1 
8 2 22 1 312 1 149 1 240 1 153 1 193 2 141 2 292 2 157 1 19 1 
22 1 149 1 153 1 193 3 157 1 8 2 310 1 312 1 240 1 161 1 141 3 292 2 18 1 19 1 
22 1 149 1 153 1 193 3 157 1 8 2 310 1 312 1 240 1 161 1 141 3 292 2 18 1 19 1 
255 1 
303 1 182 1 209 2 
66 2 33 2 12 2 250 1 276 2 258 2 183 1 144 2 
247 2 135 1 87 1 251 1 92 1 10 2 12 1 219 1 258 1 259 1 293 1 183 1 144 1 23 1 59 1 226 1 151 1 32 1 66 1 33 1 72 1 276 1 76 2 
41 1 199 1 66 1 33 1 12 1 276 1 258 1 308 1 183 1 144 1 
41 1 58 1 127 1 25 1 303 1 131 1 46 1 273 1 33 1 218 1 12 1 99 1 104 1 144 1 
41 1 58 1 127 1 303 1 46 2 273 1 66 1 33 1 218 2 12 1 99 1 276 1 258 1 104 1 144 1 
218 1 316 1 46 1 113 1 197 1 
214 1 303 1 218 2 316 1 46 2 29 1 104 1 197 1 
218 1 316 1 46 1 
41 1 46 1 308 1 233 1 197 1 199 1 66 1 33 1 218 1 12 1 276 1 258 1 183 1 144 1 
303 1 
298 1 214 1 303 1 218 2 316 1 46 2 104 1 197 1 
174 1 225 1 167 1 218 3 123 1 229 1 88 1 46 3 105 1 197 2 
255 1 
250 2 272 1 66 1 33 2 12 2 276 1 258 1 295 1 144 2 
120 1 37 1 55 1 
92 1 10 1 23 1 140 1 59 1 247 1 151 1 72 1 87 1 251 1 293 1 76 1 
146 1 23 1 59 1 247 1 151 1 87 1 251 1 137 1 92 1 66 1 10 1 33 1 12 1 72 1 276 1 293 1 76 1 144 1 
66 3 33 3 12 3 250 1 276 3 258 1 137 1 144 3 
41 1 199 1 66 1 33 1 12 1 276 1 144 1 
41 1 66 1 33 1 12 1 276 1 258 1 295 1 144 1 272 1 
41 1 127 1 247 1 87 1 135 1 251 1 137 1 46 1 92 1 10 1 218 1 99 1 12 3 13 1 258 2 293 1 259 1 183 1 144 3 146 1 147 1 58 1 23 1 59 1 151 1 272 1 273 1 66 3 33 3 72 1 276 3 76 1 
66 1 25 1 33 2 118 1 12 2 250 1 276 1 137 1 144 2 
41 1 146 1 126 1 147 1 58 1 127 1 303 1 137 2 46 1 272 1 273 1 66 3 33 3 218 1 12 3 99 1 276 3 258 1 144 3 
137 1 272 1 66 2 33 2 120 1 12 2 37 1 276 2 258 1 144 2 
92 1 10 1 23 1 59 1 247 1 151 1 72 1 87 1 251 1 293 1 76 1 
92 1 10 1 23 1 59 1 247 1 151 1 61 1 72 1 251 1 30 1 76 1 
79 1 44 1 280 1 175 1 139 1 257 1 15 1 55 1 185 1 56 1 222 1 266 1 108 2 192 2 228 1 235 1 236 1 198 1 116 1 120 1 37 1 202 3 205 1 244 1 
41 1 66 1 127 1 33 1 12 1 162 1 276 1 144 1 
299 1 146 1 25 1 250 1 137 2 272 1 66 4 95 1 33 5 118 1 12 5 276 4 258 1 144 5 
41 1 199 1 66 2 33 2 162 1 12 2 276 2 144 2 
248 1 3 1 
248 1 3 1 
158 1 
158 1 
158 1 
237 1 248 1 3 1 
248 1 3 1 142 1 203 1 158 1 
248 1 111 1 3 1 
237 1 248 1 3 1 
237 1 248 1 3 1 
215 1 248 1 3 1 
215 1 248 1 3 1 
215 1 248 1 3 1 
106 1 80 1 303 1 150 1 109 2 194 2 46 2 171 1 195 1 218 2 241 1 101 2 75 2 243 2 
246 1 1 1 109 1 194 1 231 1 171 1 46 1 232 1 271 1 66 1 33 1 218 1 12 1 101 1 276 1 75 1 243 1 144 1 
262 1 200 1 211 1 
196 1 
196 1 
196 1 
196 1 
297 1 303 1 305 1 132 1 46 4 197 3 214 1 218 4 115 1 121 1 316 1 16 1 104 1 
297 1 303 1 305 1 45 1 46 4 234 1 113 1 197 3 214 1 218 4 121 1 69 1 316 2 104 1 
167 1 132 1 88 1 209 2 46 3 174 1 139 1 218 3 257 1 182 1 16 1 104 1 297 1 225 1 303 2 268 1 232 1 197 2 64 3 311 1 198 1 160 1 115 1 116 1 275 1 204 1 
167 1 132 1 88 1 209 3 46 4 6 1 174 1 283 1 139 2 218 4 257 2 182 1 51 1 16 1 104 1 297 1 225 1 303 2 268 2 232 2 197 3 64 5 198 2 311 2 160 2 115 2 116 2 275 1 204 2 
255 1 
47 1 
24 1 
72 1 
92 1 217 1 180 1 72 1 
92 1 72 1 
103 1 
56 2 266 4 81 1 108 2 27 1 28 1 210 1 309 1 236 3 198 1 177 1 50 1 119 2 257 1 163 1 202 6 102 1 
56 2 266 4 81 1 108 3 27 1 28 1 210 1 309 1 236 3 198 1 177 1 50 1 119 2 257 1 163 1 202 7 102 1 
56 2 187 1 266 4 81 1 108 2 27 1 28 1 210 1 309 1 236 3 198 1 177 1 50 1 119 2 257 1 163 1 202 6 102 1 
128 1 44 1 280 1 85 1 210 1 139 2 50 1 257 2 102 1 56 3 222 1 189 3 266 7 191 1 108 9 192 2 27 1 28 2 236 4 198 2 68 1 160 2 116 2 119 1 36 1 71 3 163 1 202 16 39 1 205 1 
81 1 44 2 280 2 210 1 172 1 177 1 257 1 102 1 56 4 222 2 266 5 108 5 192 4 27 1 28 1 309 1 236 5 198 1 159 1 119 2 36 1 202 10 163 1 205 2 
22 1 267 1 60 1 302 1 247 1 151 1 110 1 193 1 251 1 112 1 196 1 8 1 7 1 10 1 141 1 53 1 292 1 317 1 184 1 19 1 76 1 165 1 
22 1 267 1 60 1 247 1 151 1 86 1 110 1 193 2 207 1 251 1 112 1 196 1 8 1 7 1 67 1 10 1 141 2 53 1 292 1 18 1 317 1 184 1 76 1 
22 1 267 1 247 1 151 1 110 1 193 1 207 1 251 1 112 1 196 1 7 1 67 1 10 1 141 1 53 1 18 1 317 1 76 1 
57 1 22 2 267 2 23 1 247 1 227 1 86 1 110 2 193 1 8 1 7 2 10 1 117 1 179 1 289 1 72 1 290 1 141 1 292 1 76 1 
22 1 267 1 60 1 302 1 247 1 151 1 110 1 193 1 207 1 251 1 112 1 196 1 8 1 7 1 10 1 141 1 53 1 292 1 317 1 184 1 19 1 76 1 
83 1 
10 1 23 1 247 1 218 1 121 1 46 1 76 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 99 1 12 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
298 1 301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 3 214 1 273 1 238 1 33 1 114 1 218 3 99 1 12 1 316 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 99 1 121 1 12 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 12 1 99 1 144 1 
301 1 41 1 127 1 58 1 25 1 131 1 133 1 46 2 273 1 238 1 114 1 33 1 218 2 99 1 121 1 12 1 144 1 
255 1 222 1 44 1 280 1 192 2 15 1 205 1 244 1 235 1 
44 2 280 2 250 1 212 1 90 1 254 1 281 1 94 1 139 2 257 2 15 1 55 10 56 1 222 2 188 1 189 3 266 6 191 1 108 8 62 1 192 4 236 1 198 2 160 2 116 2 120 2 37 10 71 3 202 14 242 1 205 2 244 2 
247 1 44 1 280 1 87 1 251 1 137 1 212 1 90 1 92 1 10 1 140 1 12 1 15 1 54 1 293 1 144 1 222 1 188 1 146 1 223 1 23 1 148 1 266 1 59 1 108 1 151 1 192 2 66 1 33 1 120 1 72 1 276 1 202 2 76 1 244 1 205 1 
82 1 44 1 247 1 280 1 87 1 251 1 137 1 252 1 90 1 92 1 10 1 12 1 15 1 293 1 259 1 144 1 222 1 188 1 146 1 23 1 59 1 108 1 151 1 192 2 31 1 66 1 33 1 72 1 202 1 276 1 76 1 244 1 205 1 
222 1 266 1 23 1 226 1 108 1 44 1 247 2 227 1 280 1 192 2 134 1 212 1 90 1 10 2 117 1 72 1 202 2 15 1 74 1 76 2 244 1 205 1 
222 1 188 1 266 2 44 1 280 1 192 2 154 1 272 1 66 1 160 1 33 1 116 1 257 1 12 1 202 2 15 1 276 1 258 1 144 1 244 1 205 1 
222 1 79 1 266 1 44 1 280 1 192 2 235 1 116 1 257 1 202 1 15 1 244 1 205 1 
185 1 56 1 222 1 44 1 108 2 280 1 192 2 235 1 236 1 198 1 139 1 120 1 37 1 202 2 15 1 55 1 244 1 205 1 
44 1 280 1 139 1 257 1 15 1 55 1 56 1 222 1 266 1 108 2 192 2 235 1 236 1 198 1 160 1 116 1 120 1 37 1 202 3 205 1 244 1 
222 1 79 1 266 1 44 1 280 1 192 2 134 1 116 1 257 1 202 1 15 1 244 1 205 1 
185 1 56 1 222 1 44 1 108 2 280 1 192 2 134 1 236 1 198 1 139 1 120 1 37 1 202 2 15 1 55 1 244 1 205 1 
44 1 280 1 134 1 139 1 257 1 15 1 55 1 56 1 222 1 266 1 108 2 192 2 236 1 198 1 160 1 116 1 120 1 37 1 202 3 205 1 244 1 
44 1 280 1 139 1 257 1 15 1 55 1 56 1 222 1 266 1 108 2 192 2 236 1 198 1 160 1 116 1 120 1 37 1 202 3 205 1 244 1 
92 1 10 1 23 1 59 1 247 1 151 1 72 1 87 1 251 1 293 1 259 1 76 1 
92 1 10 1 23 1 59 1 247 1 151 1 61 1 72 1 251 1 30 1 40 1 76 1 
44 1 280 1 139 1 257 1 15 1 55 1 56 1 222 1 188 1 266 1 108 2 192 2 236 1 198 1 160 1 116 1 120 1 37 1 202 3 205 1 244 1 
31 1 92 1 10 1 59 1 247 1 151 1 72 1 87 1 251 1 293 1 259 1 76 1 165 1 
44 1 130 1 280 1 139 1 12 1 257 1 15 1 258 1 144 1 222 1 188 1 266 1 108 1 192 2 272 1 198 1 66 1 33 1 160 1 116 1 276 1 202 2 205 1 244 1 
44 2 280 2 172 1 254 1 91 1 139 2 98 1 181 1 257 2 56 2 222 2 224 1 189 2 266 4 190 1 191 1 108 7 304 1 152 1 192 4 269 1 236 2 198 2 160 2 116 2 71 1 202 11 205 2 
222 1 189 2 266 5 191 2 190 2 44 1 108 7 280 1 192 2 152 2 63 1 172 1 91 1 198 1 139 1 160 1 96 1 116 1 98 2 257 1 288 1 181 1 71 2 202 12 205 1 
44 2 280 2 172 1 254 1 91 1 216 1 139 2 98 1 181 1 257 2 56 1 222 2 224 1 189 2 266 5 190 2 191 1 108 8 152 1 192 4 269 1 236 1 198 2 160 2 116 2 71 1 202 13 205 2 
44 2 280 2 172 1 254 1 91 1 216 1 139 2 98 1 181 1 257 2 56 1 222 2 224 1 189 2 266 5 190 2 191 1 108 8 152 1 192 4 269 1 236 1 198 2 160 2 116 2 71 1 202 13 205 2 
81 1 44 1 280 1 210 1 172 1 254 2 91 1 177 1 94 2 139 5 96 1 98 1 288 1 181 1 257 6 56 6 222 1 189 4 266 14 190 2 191 2 108 20 152 1 192 2 63 1 309 1 236 6 198 6 160 5 116 5 119 1 71 4 163 1 202 34 205 1 
279 1 109 1 194 1 294 1 75 1 243 1 
1 1 
109 1 194 1 73 1 75 1 243 1 
106 1 80 1 303 1 150 1 109 1 194 1 171 1 46 1 195 1 218 1 241 1 101 2 75 1 243 1 
106 1 80 1 303 1 150 1 109 1 194 1 171 1 46 1 195 1 218 1 241 1 101 2 75 1 243 1 
106 1 80 1 303 1 150 1 109 1 194 1 171 1 46 1 195 1 218 1 241 1 101 2 75 1 243 1 
208 1 
208 1 
78 1 
78 1 
300 1 176 1 
246 1 80 1 1 1 109 1 194 1 46 1 195 1 231 1 232 1 271 1 197 1 239 1 218 1 101 1 75 1 243 1 
208 1 
78 1 
93 1 33 1 12 1 144 1 
267 1 247 2 60 1 151 1 207 1 251 1 270 1 112 1 196 1 213 1 65 1 10 2 76 2 317 1 165 1 
267 1 10 1 60 1 247 1 151 1 207 1 251 1 112 1 270 1 196 1 317 1 124 1 76 1 
65 1 267 1 10 1 23 1 117 1 247 1 179 1 227 1 72 1 168 1 76 1 
213 1 65 1 267 1 10 1 60 1 247 1 151 1 207 1 251 1 112 1 270 1 196 1 317 1 76 1 
315 1 
255 1 
121 1 
10 1 23 1 247 1 121 1 76 1 
121 1 
218 1 84 1 121 1 46 1 
121 1 169 1 
303 1 268 1 209 2 5 1 64 2 311 1 198 1 139 1 160 1 116 1 257 1 182 1 204 1 
214 1 303 1 218 1 316 1 46 1 104 1 
10 1 23 1 247 1 121 1 170 1 76 1 
23 1 59 1 247 1 151 1 87 1 135 1 251 1 92 1 66 1 10 1 33 1 12 1 72 1 276 1 258 1 293 1 259 1 183 1 76 1 144 1 
121 1 
21 1 109 1 194 1 
300 1 107 1 109 1 38 1 194 1 
21 1 109 1 194 1 
21 1 109 1 194 1 
109 1 100 1 194 1 
109 1 100 1 194 1 
109 1 100 1 194 1 
109 1 194 1 
248 1 3 1 
56 1 222 2 266 4 81 1 108 3 44 2 280 2 192 4 27 1 210 1 309 1 236 2 198 1 177 1 119 1 257 1 36 1 202 7 163 1 205 2 
255 1 
56 1 222 1 266 1 108 2 44 1 280 1 192 2 307 1 236 1 198 1 139 1 160 1 116 1 257 1 202 3 205 1 
56 1 189 2 266 2 191 1 108 4 254 1 236 1 198 1 139 1 160 1 116 1 257 1 71 1 202 6 
81 1 44 2 280 2 210 2 254 1 177 1 139 2 94 1 257 3 20 1 56 4 222 2 266 9 189 2 108 11 62 1 192 4 27 2 309 1 236 6 198 3 160 2 116 2 119 1 36 2 71 2 163 2 202 20 205 2 
189 1 108 1 202 1 
266 1 71 1 202 1 
56 2 222 1 266 2 44 1 108 3 280 1 192 2 307 1 236 2 285 1 198 1 139 1 160 1 116 1 257 1 202 5 205 1 
222 1 266 2 189 1 191 1 44 1 108 4 280 1 192 2 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 1 
236 2 56 1 198 1 266 3 108 3 257 1 163 1 202 6 27 1 210 1 309 1 
56 1 222 1 266 1 81 1 108 2 44 1 280 1 192 2 27 1 210 1 236 2 177 1 36 1 163 1 202 3 20 1 205 1 
56 1 266 2 108 3 210 1 309 1 236 1 198 1 49 1 257 1 163 1 202 5 
222 1 266 1 44 1 280 1 192 2 172 1 116 1 257 1 202 1 205 1 
56 1 222 1 266 1 108 2 44 1 280 1 192 2 172 1 236 1 198 1 139 1 160 1 116 1 257 1 202 3 205 1 
56 1 222 3 266 1 108 2 44 3 280 3 192 6 269 1 27 1 210 1 172 1 236 2 36 1 202 3 163 1 20 1 205 3 
81 1 128 1 44 5 280 5 85 1 210 3 172 1 254 1 177 1 139 3 257 5 20 1 56 4 222 5 189 4 266 14 191 1 108 18 192 10 27 3 307 1 269 1 309 2 236 7 198 5 160 3 116 3 119 1 36 2 71 3 163 3 202 32 39 1 205 5 
81 1 44 1 280 1 210 1 172 1 177 1 257 1 288 1 56 1 222 1 189 1 266 4 191 1 108 3 192 2 309 1 236 1 198 1 119 1 71 1 202 7 163 1 205 1 
44 2 280 2 172 1 254 1 139 3 94 1 96 1 288 1 257 3 56 2 222 2 189 2 266 5 191 1 108 9 192 4 307 1 63 1 236 2 198 3 160 3 116 3 71 2 202 14 205 2 
222 1 266 2 189 1 191 1 44 1 108 4 280 1 192 2 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 1 
222 1 266 2 189 1 191 1 44 1 108 4 280 1 192 2 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 1 
81 1 44 1 280 1 210 1 172 1 177 1 257 1 288 1 56 1 222 1 189 1 266 4 191 1 108 3 192 2 309 1 236 1 198 1 119 1 71 1 202 7 163 1 205 1 
222 1 266 2 189 1 191 1 44 1 108 4 280 1 192 2 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 1 
222 2 266 2 189 1 191 1 44 2 108 4 280 2 192 4 307 1 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 2 
222 2 266 2 189 1 191 1 44 2 108 4 280 2 192 4 269 1 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 2 
56 3 266 3 81 1 108 4 27 3 210 3 309 1 236 6 198 1 177 2 257 1 202 7 163 3 
222 2 266 2 189 1 191 1 44 2 108 4 280 2 192 4 269 1 63 1 172 1 198 1 139 1 160 1 96 1 116 1 257 1 288 1 71 1 202 6 205 2 
25 1 118 1 156 1 
284 1 25 1 26 1 118 1 286 1 249 1 156 1 164 1 
255 1 10 1 23 1 247 1 76 1 
23 1 59 1 247 1 151 1 137 1 251 1 92 1 66 1 10 1 33 1 12 1 72 1 276 1 293 1 76 1 144 1 
282 1 66 1 33 1 12 1 276 1 137 1 144 1 
282 1 66 1 33 1 12 1 276 1 137 1 144 1 
282 1 218 1 46 1 
282 1 218 1 46 1 
10 1 247 1 151 1 251 1 138 1 76 1 
186 1 92 1 217 1 10 1 23 1 247 1 72 1 76 1 
44 1 247 1 82 1 280 1 87 1 251 1 137 1 92 1 10 1 11 1 12 1 15 1 259 1 293 1 144 1 222 1 188 1 59 1 151 1 192 2 31 1 66 1 33 1 72 1 276 1 76 1 244 1 205 1 165 1 
145 1 23 1 43 1 247 1 129 1 46 1 170 1 47 1 197 1 10 1 218 1 97 1 121 1 76 1 
92 1 217 1 10 1 247 1 287 1 72 1 138 1 76 1 
10 2 23 1 117 1 247 2 227 1 72 1 76 2 165 1 
92 1 10 1 247 1 35 1 72 1 14 1 155 1 76 1 
10 1 23 1 247 1 151 1 251 1 112 1 196 1 76 1 
10 2 178 1 0 1 247 2 72 1 207 1 76 2 165 1 
10 2 23 1 178 1 247 2 70 1 72 1 76 2 165 1 
10 2 23 1 178 1 247 2 72 1 76 2 261 1 165 1 
23 1 59 1 247 1 151 1 137 1 251 1 30 1 92 1 66 1 10 1 33 1 12 1 72 1 276 1 76 1 144 1 
282 1 
93 1 48 2 136 1 230 1 
77 1 93 1 48 2 218 1 136 1 230 1 46 1 221 1 197 1 125 1 
136 1 230 1 
77 1 93 1 48 2 136 1 230 1 221 1 
255 1 
8 1 153 1 193 1 141 1 52 1 292 1 143 1 
7 1 22 1 193 1 
245 1 166 2 153 1 193 3 8 1 313 1 314 1 141 3 292 1 52 1 19 1 143 1 
8 1 264 1 153 1 193 2 141 2 52 1 292 1 18 1 143 1 
8 1 240 1 153 1 193 1 141 1 292 1 17 1 157 1 19 1 
8 1 153 1 193 1 141 1 52 1 292 1 19 1 
8 1 193 1 141 1 52 2 292 1 143 1 19 1 
42 1 153 1 193 2 4 1 253 1 8 2 141 2 52 1 292 2 19 1 
8 1 265 1 312 1 240 1 153 1 306 1 193 2 141 2 292 1 18 1 157 1 19 1 
8 1 2 1 193 1 141 1 292 1 196 1 19 1 
8 1 264 1 312 1 240 1 153 1 193 2 141 2 292 1 18 1 157 1 19 1 296 1 
8 1 153 1 193 1 141 1 52 1 292 1 143 1 19 1 
8 1 312 1 240 2 153 1 193 2 141 2 292 1 18 1 157 1 
153 1 193 2 8 1 122 1 161 1 141 2 277 1 52 1 292 1 18 1 19 1 143 1 
263 1 245 2 166 2 153 1 193 3 8 1 314 1 141 3 292 1 52 1 19 1 143 1 
34 1 206 2 201 1 153 2 
8 1 9 1 193 1 141 1 292 1 19 1 
8 1 153 1 306 1 193 2 141 2 52 1 292 1 18 1 143 1 19 1 
220 1 
8 1 153 1 193 1 141 1 52 1 292 1 143 1 19 1 
8 1 166 1 306 1 153 1 193 3 141 3 52 1 292 1 18 1 143 1 19 1 
312 1 193 1 141 1 153 1 18 1 157 1 
153 1 52 1 

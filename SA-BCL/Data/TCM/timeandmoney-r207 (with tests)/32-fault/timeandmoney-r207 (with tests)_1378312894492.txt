#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 292 177 (93,105) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 14 (21,22) (21,22) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 14 (21,22) (21,22) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 14 (21,22) (21,22) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 14 (21,22) (21,22) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 292 (15,111,151,227) 245 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 292 177 (93,105) 131 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 292 177 (93,105) 131 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 244 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 205 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (11,46) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (11,46) 83 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (11,46) 83 1 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 210 116 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 301 169 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 301 169 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 301 169 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 301 169 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 301 169 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 5 286 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 211 195 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 202 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 202 224 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 202 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 211 195 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 211 195 175 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 199 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 258 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 258 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 258 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 258 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (282,298) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 252 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 270 109 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 52 266 76 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 52 266 76 209 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (159,264) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (261,265) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 301 (101,106) (101,106) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 292 177 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 292 (15,111,151,227) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 292 177 87 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 292 177 130 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 2 162 1 10 1 271 1 273 1 292 1 105 1 308 2 30 2 177 1 196 2 
74 1 21 1 271 1 273 1 14 1 104 1 22 1 308 1 30 1 93 1 196 1 
74 1 21 1 271 1 273 1 14 1 104 1 22 1 308 1 30 1 93 1 196 1 
74 1 21 1 271 1 273 1 14 1 104 1 22 1 308 1 30 1 93 1 196 1 
74 1 21 1 271 1 273 1 14 1 104 1 22 1 308 1 30 1 93 1 196 1 
74 1 162 1 111 1 10 1 273 1 245 1 292 1 176 1 308 2 30 1 278 1 196 2 
54 1 74 1 271 1 273 1 137 1 208 1 247 1 104 1 62 1 65 1 8 1 10 1 212 1 308 2 30 1 196 2 
74 2 162 1 271 1 273 1 105 1 292 1 278 1 151 1 10 1 131 1 308 3 30 2 177 1 196 3 
74 2 162 1 271 1 273 1 105 1 292 1 278 1 151 1 10 1 131 1 308 3 30 2 177 1 196 3 
291 1 96 1 
291 1 96 1 
161 1 291 1 306 1 275 1 126 1 96 2 
299 1 
52 1 250 1 23 1 56 1 305 1 214 1 174 1 50 1 38 1 248 1 96 1 
7 1 23 1 56 1 305 1 214 1 174 1 50 1 38 1 248 1 94 1 96 2 64 1 
291 1 96 1 
291 1 96 1 
96 1 
56 2 136 1 64 1 7 1 174 2 50 2 115 2 117 1 94 1 
190 1 90 1 255 1 
2 1 75 1 165 1 261 1 168 1 4 1 279 1 148 1 188 1 283 1 231 2 150 1 84 2 174 1 49 1 115 1 50 1 91 1 219 2 
299 1 115 1 
20 1 2 1 75 1 56 1 165 1 261 1 37 1 168 1 7 1 188 1 283 1 231 1 150 1 84 1 174 2 90 1 49 1 50 2 219 1 94 1 
7 3 56 3 174 3 115 1 37 1 50 3 94 3 64 1 
7 1 56 1 174 1 205 1 50 1 94 1 
7 1 23 1 56 1 174 1 136 1 50 1 117 1 94 1 64 1 
20 1 56 2 136 1 244 1 37 1 38 1 248 1 64 1 7 2 23 1 305 1 174 2 214 1 50 2 94 2 118 1 96 1 
52 1 266 1 7 1 56 2 174 2 115 1 50 2 37 1 94 1 
7 1 19 1 20 1 23 1 56 1 305 1 214 1 174 1 50 1 37 1 38 1 248 1 118 1 94 1 96 1 
56 2 136 1 37 1 64 1 7 2 174 2 190 1 90 1 50 2 94 2 
75 1 2 1 165 1 261 1 168 1 188 1 231 1 283 1 150 1 84 1 174 1 49 1 115 1 50 1 219 1 
75 1 2 1 165 1 168 1 264 1 231 1 283 1 150 1 84 1 174 1 49 1 115 1 50 1 219 1 71 1 
122 2 242 1 207 1 276 1 277 1 40 1 42 1 170 1 284 2 253 1 129 1 90 2 254 1 255 2 98 4 57 1 138 1 267 1 152 1 67 1 24 1 190 2 27 2 31 1 
7 1 23 1 56 1 123 1 174 1 50 1 38 1 94 1 
52 1 20 1 56 5 136 1 37 2 64 1 266 1 7 4 173 1 112 1 174 5 50 5 115 1 94 4 
7 1 56 1 174 1 205 1 50 1 94 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
11 1 158 1 
11 1 158 1 
11 1 158 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
46 1 132 1 
46 1 238 1 83 1 132 1 
1 1 46 1 238 1 83 1 132 1 96 1 
65 2 12 1 137 1 182 2 192 1 
65 1 212 1 12 1 
65 1 212 1 137 1 
65 3 12 2 137 1 182 1 192 1 145 1 
65 2 12 1 137 1 182 1 192 1 217 1 
9 1 291 1 96 1 
291 2 226 1 269 1 140 1 96 2 
161 1 201 1 291 1 275 1 81 1 126 1 210 1 13 1 306 1 92 1 96 2 
161 1 201 1 275 1 81 1 126 1 210 1 13 1 306 1 92 1 116 1 96 1 
167 1 
299 1 125 1 168 1 
133 1 168 1 
2 1 168 1 
232 1 99 1 2 1 165 1 125 2 168 3 
2 1 165 1 168 1 
168 1 297 1 
120 1 98 1 301 1 122 1 169 1 146 1 
98 1 301 1 122 1 169 1 146 1 
98 1 301 1 122 1 169 1 146 1 
98 1 301 1 122 1 169 1 146 1 
98 1 301 1 122 1 169 1 146 1 
74 1 75 1 2 1 271 2 274 1 168 1 283 1 84 1 251 1 47 1 49 1 219 1 220 2 225 1 262 1 139 2 294 1 185 1 187 2 231 1 308 1 30 1 196 1 
74 1 121 1 75 1 271 1 204 1 273 1 166 1 283 1 84 1 212 1 288 1 12 1 219 1 220 1 95 1 100 1 137 1 139 1 187 1 145 1 65 2 231 1 268 1 308 1 30 1 196 1 
74 1 121 1 75 1 271 1 273 1 166 1 208 1 80 1 278 1 283 1 84 1 10 1 212 1 288 1 12 1 219 1 220 1 95 1 54 1 100 1 137 1 139 1 187 1 145 1 65 2 231 1 268 1 308 2 30 1 196 2 
74 1 121 1 75 1 271 1 204 1 166 1 208 1 278 2 283 1 84 1 10 1 212 1 288 1 12 1 219 1 220 1 95 1 54 1 100 1 137 1 139 1 294 1 145 1 187 1 65 2 231 1 68 1 308 3 30 1 196 3 
121 1 75 1 271 1 204 1 166 1 208 1 278 2 283 1 84 1 10 1 212 1 12 1 219 1 220 1 54 1 100 1 137 1 139 1 187 1 145 1 65 2 231 1 68 1 308 2 196 2 
302 1 
161 1 231 1 286 1 84 1 13 1 306 1 49 1 275 1 219 1 141 1 81 1 5 1 96 1 
52 1 56 1 228 1 38 1 248 1 186 1 211 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 50 1 96 2 
52 1 56 1 228 1 38 1 186 1 248 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 50 1 70 1 96 2 
52 1 56 1 228 1 38 1 186 1 248 1 211 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 50 1 96 2 195 1 
96 1 
161 1 275 1 38 1 248 1 250 1 82 1 86 1 174 1 214 1 215 1 13 1 88 1 50 1 135 1 96 2 52 1 179 1 56 1 228 1 141 1 186 1 300 1 23 1 66 1 305 1 306 1 26 1 
161 1 202 1 275 1 38 1 248 1 250 1 82 1 86 1 13 1 214 1 174 1 215 1 50 1 96 2 52 1 224 1 18 1 179 1 56 1 228 1 141 1 186 1 300 1 23 1 305 1 306 1 
161 1 202 1 275 1 38 1 248 1 250 1 82 1 86 1 13 1 214 1 174 1 215 1 50 1 96 2 52 1 224 1 18 1 179 1 56 1 228 1 141 1 186 1 300 1 23 1 305 1 306 1 
161 1 52 1 179 1 56 1 202 1 275 1 228 1 141 1 38 1 39 1 186 1 248 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 306 1 307 1 216 1 50 1 96 2 
52 1 56 1 228 1 38 1 186 1 248 1 211 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 175 1 50 1 96 2 195 1 
52 1 56 1 228 1 38 1 186 1 248 1 211 1 300 1 250 1 23 1 305 1 86 1 215 1 174 1 214 1 175 1 50 1 96 2 195 1 
161 1 275 1 38 1 248 1 250 1 86 1 174 1 214 1 215 1 88 1 50 1 135 1 96 2 52 1 179 1 56 1 260 1 228 1 141 1 186 1 300 1 23 1 66 1 305 1 306 1 307 1 
231 1 84 1 49 1 183 1 219 1 
122 1 242 1 207 1 42 1 6 1 170 1 7 1 284 2 253 1 174 1 90 1 50 1 221 1 94 1 255 1 98 3 56 1 136 1 57 1 138 1 64 1 267 1 149 1 67 1 152 1 24 1 190 1 27 2 31 1 
98 5 101 1 122 3 242 1 243 1 138 1 207 1 106 1 42 1 170 1 299 1 267 1 284 2 233 1 301 1 129 1 253 1 67 1 24 1 115 1 27 2 218 1 31 1 
198 1 239 1 272 1 122 10 203 1 242 2 207 1 124 3 42 2 170 2 284 4 128 1 253 1 90 13 221 3 255 13 178 1 53 2 98 17 57 3 138 3 59 1 267 1 149 1 67 2 152 1 24 2 154 4 190 4 270 1 115 1 27 7 31 2 
239 1 2 1 75 1 122 1 165 1 242 1 37 1 168 1 42 1 279 1 170 1 7 1 283 1 284 2 44 1 84 1 253 1 174 2 49 1 50 2 219 1 94 1 223 1 178 1 20 1 98 2 56 1 261 1 188 1 231 1 150 1 149 1 67 1 190 1 115 1 27 1 31 1 119 1 
199 1 242 1 37 1 42 1 170 1 7 1 284 2 84 1 253 1 174 1 49 1 50 1 219 1 94 1 178 1 98 1 20 1 56 1 231 1 149 1 67 1 27 1 31 1 
98 2 122 2 242 1 57 1 138 1 277 1 42 1 170 1 284 2 128 1 129 1 253 1 67 1 24 1 190 1 90 1 31 1 255 1 
98 2 242 1 207 1 42 1 40 1 170 1 284 2 267 1 129 1 253 1 67 1 152 1 24 1 190 1 90 1 27 2 31 1 255 1 
98 4 122 2 242 1 57 1 207 1 138 1 42 1 170 1 267 1 284 2 128 1 152 1 129 1 253 1 67 1 24 2 190 2 90 2 27 2 31 1 221 1 255 2 
183 1 
183 1 
183 1 
98 4 122 2 242 1 57 1 207 1 138 1 42 1 170 1 267 1 284 2 128 1 152 1 253 1 67 1 24 2 190 2 90 2 27 2 31 1 221 1 255 2 
239 1 2 1 75 1 122 1 165 1 242 1 168 1 42 1 170 1 283 1 284 2 84 1 253 1 174 1 89 1 49 1 50 1 219 1 178 1 98 2 261 1 188 1 231 1 150 1 67 1 115 1 27 1 31 1 
239 1 2 1 75 1 122 1 165 1 242 1 168 1 42 1 170 1 283 1 284 2 84 1 253 1 174 1 49 1 50 1 219 1 178 1 98 2 264 1 231 1 150 1 67 1 303 1 115 1 27 1 31 1 71 1 
98 4 122 2 242 1 57 1 207 1 138 1 42 1 170 1 267 1 284 2 149 1 128 1 152 1 253 1 67 1 24 2 190 2 90 2 27 2 31 1 221 1 255 2 
75 1 2 1 122 2 165 1 242 1 207 1 80 1 168 1 42 1 170 1 283 1 284 2 128 1 84 1 253 1 174 1 90 2 89 1 50 1 219 1 221 1 255 2 98 4 57 1 261 1 138 1 188 1 267 1 231 1 150 1 152 1 67 1 24 2 190 2 27 2 157 1 31 1 
122 2 242 1 42 1 170 1 7 1 284 2 128 1 253 1 174 1 90 1 50 1 221 1 94 1 255 1 98 3 56 1 136 1 57 1 138 1 64 1 107 1 267 1 149 1 152 1 67 1 24 1 190 1 27 1 31 1 
73 1 198 2 122 25 242 4 243 1 206 1 207 6 36 1 124 4 42 4 280 1 170 4 284 8 128 7 48 1 218 1 221 6 53 2 98 47 257 1 101 1 258 1 57 6 138 7 106 1 229 1 109 1 267 6 233 1 301 1 234 1 152 5 154 4 24 13 113 1 114 1 270 2 27 22 31 4 236 2 33 3 
73 1 122 14 242 3 206 1 207 2 36 2 124 2 42 3 280 1 170 3 284 6 128 2 287 1 48 1 221 3 98 26 258 1 57 3 138 3 229 1 267 2 109 1 234 2 152 2 24 4 154 2 189 1 113 1 114 1 27 12 270 2 31 3 236 2 33 4 
73 1 198 2 122 25 242 4 243 1 206 1 207 6 36 1 124 4 42 4 280 1 170 4 284 8 128 7 48 1 218 1 221 6 53 2 98 47 257 1 101 1 258 1 57 6 138 7 106 1 229 1 109 1 267 6 233 1 301 1 234 1 152 5 154 4 24 13 113 1 114 1 270 2 27 22 31 4 236 2 33 3 
73 1 198 2 122 25 242 4 243 1 206 1 207 6 36 1 124 4 42 4 280 1 170 4 284 8 128 7 48 1 218 1 221 6 53 2 98 47 257 1 101 1 258 1 57 6 138 7 106 1 229 1 109 1 267 6 233 1 301 1 234 1 152 5 154 4 24 13 113 1 114 1 270 2 27 22 31 4 236 2 33 3 
122 7 242 1 243 1 207 1 36 1 124 1 42 1 170 1 284 2 218 1 221 1 53 1 98 12 101 1 258 1 57 1 138 2 106 1 267 1 233 1 301 1 234 1 24 1 154 2 113 1 114 1 270 1 27 5 31 1 33 1 
239 1 75 1 2 1 122 1 242 1 168 1 42 1 170 1 283 1 284 2 84 2 253 1 174 2 289 1 50 2 91 2 219 2 51 1 178 1 98 2 56 2 102 1 230 1 231 2 149 1 67 1 155 1 235 1 27 1 31 1 160 1 
225 1 75 1 2 1 262 1 168 1 143 1 127 1 185 1 187 1 283 1 231 1 84 1 49 1 219 1 
100 1 75 1 204 1 164 1 166 1 137 1 143 1 145 1 187 1 295 1 65 2 231 1 283 1 84 1 212 1 12 1 219 1 95 1 
100 1 75 1 204 1 164 1 166 1 137 1 80 1 143 1 145 1 187 1 295 1 65 2 283 1 231 2 84 2 212 1 12 1 219 2 95 1 
100 1 75 1 204 1 166 1 137 1 145 1 41 1 187 1 295 1 65 2 231 1 283 1 84 1 212 1 12 1 219 1 95 1 
35 1 
161 1 282 1 179 1 306 1 275 1 141 1 
267 1 179 1 152 1 13 1 57 1 138 1 221 1 
231 1 84 1 49 1 219 1 
299 1 282 1 179 1 298 1 
161 1 179 1 82 1 13 1 306 1 26 1 275 1 141 1 
161 1 2 1 75 2 165 1 275 1 168 2 81 1 283 1 45 1 84 1 252 1 13 2 49 1 133 1 219 1 99 1 259 1 180 1 184 1 141 1 60 1 231 1 306 1 
161 1 109 1 179 1 154 1 13 1 306 1 124 1 275 1 270 1 141 1 
161 1 237 1 18 1 179 2 243 1 138 2 275 1 141 1 281 1 267 2 233 1 13 2 306 1 69 1 218 1 96 1 
161 1 179 1 13 1 306 1 275 1 141 1 81 1 296 1 
241 1 213 1 153 1 181 1 171 1 
256 1 241 1 171 1 
256 1 241 1 171 1 
256 1 241 1 171 1 
241 1 78 1 171 1 
241 1 78 1 171 1 
241 1 78 1 171 1 
241 1 171 1 
46 1 132 1 
98 8 122 4 243 1 207 1 138 2 281 1 267 2 233 1 128 1 24 2 27 4 218 1 
98 2 122 2 242 1 57 1 138 1 42 1 170 1 284 2 128 1 24 1 114 1 31 1 
98 4 122 2 242 1 57 1 207 1 138 1 42 1 170 1 267 1 284 2 128 1 152 1 24 2 114 1 27 2 31 1 221 1 
98 3 257 1 122 1 242 3 243 1 207 1 58 1 42 3 170 3 284 6 233 1 128 1 24 2 114 1 27 2 31 3 236 1 
34 1 122 13 242 4 243 1 207 2 124 3 42 4 170 4 284 8 128 2 218 1 221 3 53 1 98 24 101 1 290 1 257 1 57 3 138 4 106 1 61 1 267 3 233 1 301 1 152 2 154 4 24 4 114 1 27 11 270 1 31 4 236 1 309 1 
122 6 242 1 243 1 207 1 124 1 42 1 170 1 284 2 218 1 221 1 53 1 98 10 101 1 57 1 138 2 106 1 267 1 109 1 233 1 301 1 24 1 154 2 114 1 27 4 270 1 31 1 
122 6 242 2 243 1 207 1 124 1 42 2 170 2 284 4 128 1 218 1 221 1 53 1 98 10 101 1 57 1 138 2 106 1 267 1 109 1 233 1 301 1 154 2 24 2 114 1 27 4 270 1 31 2 309 1 
73 1 122 9 242 3 243 1 124 1 207 3 42 3 280 1 170 3 284 6 128 1 48 1 218 1 221 2 98 18 101 1 57 2 138 3 106 1 229 1 109 1 267 3 233 1 301 1 152 2 154 1 24 4 114 1 27 9 270 1 31 3 236 1 309 1 
73 1 122 7 242 4 124 1 207 1 42 4 280 1 170 4 284 8 128 1 48 1 221 2 98 12 57 2 138 2 229 1 109 1 267 1 152 1 154 1 24 2 114 1 27 5 270 1 31 4 236 2 309 1 
122 6 242 1 243 1 207 1 124 1 42 1 170 1 284 2 218 1 221 1 53 1 98 10 101 1 57 1 138 2 106 1 267 1 109 1 233 1 301 1 24 1 154 2 114 1 27 4 270 1 31 1 
73 1 122 6 242 2 124 1 207 2 42 2 280 1 170 2 284 4 128 1 48 1 221 2 98 13 57 2 138 2 229 1 109 1 267 2 152 2 154 1 24 3 114 1 27 7 270 1 31 2 236 1 
73 1 122 10 242 4 243 1 124 1 207 2 42 4 280 1 170 4 284 8 128 1 48 1 218 1 221 2 98 17 101 1 57 2 138 3 106 1 229 1 109 1 267 2 233 1 301 1 152 1 154 1 24 3 114 1 27 7 270 1 31 4 236 2 309 1 
73 1 122 9 242 4 124 1 207 1 42 4 280 1 170 4 284 8 128 3 48 1 221 3 98 16 257 1 57 3 138 3 229 1 109 1 267 2 152 2 154 1 24 4 114 1 27 7 270 1 31 4 236 2 
98 7 101 1 122 3 243 3 207 3 138 1 106 2 267 1 233 3 128 3 24 6 27 4 218 1 
73 1 122 10 242 4 243 1 124 1 207 2 42 4 280 1 170 4 284 8 128 1 48 1 218 1 221 2 98 17 101 1 257 1 57 2 138 3 106 1 229 1 109 1 267 2 233 1 301 1 152 1 154 1 24 3 114 1 27 7 270 1 31 4 236 2 
98 7 101 1 122 4 242 2 243 1 138 1 207 1 106 1 42 2 170 2 267 1 284 4 233 1 301 1 128 1 24 2 27 3 218 1 31 2 236 1 
98 5 101 1 122 3 243 1 207 1 138 1 106 1 299 1 267 1 233 1 301 1 24 1 27 2 218 1 
98 4 122 2 242 1 57 1 207 1 138 1 42 1 170 1 267 1 284 2 152 1 24 1 27 2 31 1 221 1 309 1 
53 1 198 1 98 12 122 6 57 2 207 2 124 2 138 2 267 2 128 2 152 2 154 2 24 4 270 1 27 6 221 2 
198 1 122 9 242 1 243 1 124 2 207 3 42 1 170 1 284 2 128 1 218 1 221 2 53 1 98 17 101 1 57 2 138 3 59 1 106 1 267 3 233 1 301 1 152 2 154 2 24 4 27 8 31 1 236 1 
98 1 154 1 27 1 
98 1 122 1 124 1 
98 6 122 3 242 1 57 1 138 1 207 1 42 1 170 1 284 2 267 1 128 2 252 1 152 1 24 3 27 3 31 1 221 1 309 1 
73 1 122 6 242 2 124 1 207 2 42 2 280 1 170 2 284 4 128 1 48 1 221 2 98 13 57 2 138 2 229 1 109 1 267 2 152 2 154 1 24 3 114 1 27 7 270 1 31 2 236 1 
98 6 122 3 243 1 138 1 207 1 267 1 233 1 128 1 24 2 27 3 218 1 
98 3 101 1 122 1 242 1 243 1 207 1 58 1 106 1 42 1 170 1 284 2 233 1 128 1 24 2 27 2 31 1 236 1 
52 1 266 1 76 1 
52 1 266 1 76 1 200 1 3 1 85 1 249 1 209 1 
75 1 2 1 262 1 80 1 168 1 185 1 231 4 283 1 84 4 49 1 219 4 97 1 72 1 
17 1 2 1 75 2 165 1 168 1 263 1 144 1 108 1 231 1 283 1 84 1 219 1 194 1 
65 1 283 1 231 1 75 1 84 1 212 1 166 1 137 1 49 1 219 1 
2 1 75 1 204 1 102 1 80 1 168 1 231 2 283 1 84 2 155 1 219 2 
2 2 75 2 79 1 262 1 80 1 168 3 185 1 231 5 283 2 285 1 172 1 84 5 155 1 49 1 219 4 97 1 
2 2 75 2 262 1 80 1 168 3 185 1 142 1 231 5 283 2 285 1 172 1 84 5 155 1 49 1 219 4 97 1 
299 1 283 1 231 1 75 1 2 1 84 1 262 1 49 1 168 1 219 1 185 1 
2 1 75 1 56 1 165 1 261 1 37 1 168 1 7 1 231 1 283 1 150 1 84 1 174 2 49 1 115 1 50 2 219 1 94 1 
75 1 2 2 165 2 37 1 168 3 38 1 248 1 7 2 283 1 285 1 84 1 174 2 50 2 219 1 94 1 56 2 261 1 293 1 297 1 231 1 150 1 23 1 115 1 
75 1 2 2 165 2 37 1 168 3 38 1 248 1 7 2 283 1 285 1 84 2 174 2 50 2 219 2 94 1 56 2 264 1 293 1 297 1 231 2 150 1 23 1 115 1 72 1 
231 1 285 1 84 1 133 1 168 1 219 1 159 1 96 1 
231 1 285 1 84 1 133 1 168 1 219 1 265 1 96 1 
283 1 231 1 75 1 84 1 304 1 219 1 
99 1 2 1 75 2 165 1 168 1 263 1 108 1 231 1 283 1 84 1 49 1 219 1 29 1 
2 1 75 1 122 3 165 1 242 2 243 1 207 1 37 1 168 1 80 1 42 2 170 2 7 1 283 1 284 4 84 1 253 2 174 2 289 1 89 1 50 2 218 1 219 1 94 1 98 5 101 1 56 1 261 1 138 1 106 1 188 1 267 1 231 1 233 1 150 1 149 1 301 1 67 2 24 1 115 1 27 2 31 2 157 1 32 1 
291 1 96 1 
99 1 2 1 75 2 165 1 125 1 184 1 80 1 168 2 231 2 283 1 84 2 304 1 219 2 
2 1 75 1 56 1 165 1 37 1 168 1 264 1 7 1 231 1 283 1 150 1 84 1 174 2 49 1 115 1 50 2 219 1 94 1 
99 1 2 1 75 2 165 1 168 1 263 1 108 1 231 1 283 1 285 1 84 1 219 1 29 1 
0 1 197 1 77 1 115 1 28 1 
197 1 0 2 77 2 291 1 103 1 38 1 248 1 23 1 305 1 214 1 115 1 28 2 193 1 118 1 96 2 222 1 
0 1 197 1 77 1 56 1 230 1 174 1 235 1 50 1 160 1 
197 1 103 1 222 1 
54 1 74 1 10 1 273 1 208 1 308 1 30 1 196 1 
74 1 162 2 10 1 292 1 308 2 30 1 278 1 177 1 196 2 
54 1 74 1 151 1 10 1 227 1 273 1 208 1 308 2 30 1 278 1 15 1 196 2 
54 1 74 1 240 1 10 1 273 1 208 1 134 2 308 3 30 1 62 2 147 1 196 3 
10 1 191 1 246 1 
74 1 25 1 273 1 308 1 30 1 196 1 
54 1 74 1 10 1 273 1 208 1 308 2 30 1 278 1 63 1 196 2 
156 1 
54 1 74 1 10 1 273 1 208 1 308 1 30 1 196 1 
299 1 54 1 10 1 208 1 
54 1 74 1 10 1 208 1 308 1 30 1 196 1 
271 1 220 1 196 1 
74 1 54 1 162 1 240 1 273 1 208 1 62 1 110 1 10 1 308 2 134 1 30 1 196 2 
54 1 74 1 10 1 208 1 176 1 308 2 30 1 278 1 196 2 
74 1 162 1 111 1 10 1 273 1 292 1 308 1 30 1 196 1 
74 1 10 1 273 1 208 1 308 1 30 1 196 1 
54 1 74 1 273 1 208 2 308 1 30 1 196 1 
43 1 74 2 163 1 10 1 273 1 208 1 308 2 30 2 16 1 196 2 
74 1 162 1 10 1 87 1 273 1 292 1 308 2 30 1 278 1 177 1 63 1 196 2 
54 1 74 1 55 1 273 1 137 1 208 1 278 1 145 1 65 2 10 1 212 1 12 1 308 2 30 1 196 2 
74 1 162 1 10 1 130 1 273 1 292 1 176 1 308 2 30 1 278 1 177 1 196 2 
54 1 74 1 10 1 273 1 208 1 308 3 30 1 278 1 63 1 62 1 196 3 
10 1 308 1 292 1 278 1 177 1 196 1 
10 1 208 1 

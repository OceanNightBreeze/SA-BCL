#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (43,84) 141 (110,363) (110,363) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (43,84) 141 (110,363) (110,363) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (43,84) 141 (110,363) (110,363) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (43,84) 141 (110,363) (110,363) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 193 281 63 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 193 281 63 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (326,328) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (326,328) (326,328) 245 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (326,328) (326,328) 172 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 24 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 368 68 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 23 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 11 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (326,328) (326,328) 172 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (326,328) (326,328) 172 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (326,328) (326,328) 172 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (326,328) (326,328) 245 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 368 68 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 278 223 123 62 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (326,328) (326,328) 245 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (326,328) (326,328) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 1 159 1 110 1 188 1 141 1 153 1 347 1 363 1 275 1 338 1 43 1 
254 1 159 1 110 1 188 1 141 1 153 1 347 1 363 1 275 1 338 1 43 1 
254 1 159 1 110 1 188 1 141 1 153 1 347 1 363 1 275 1 338 1 43 1 
254 1 159 1 110 1 188 1 141 1 153 1 347 1 363 1 275 1 338 1 43 1 
263 1 188 1 193 1 17 2 311 3 285 1 198 3 338 1 294 1 254 4 53 1 102 1 205 1 151 2 258 1 153 1 347 4 281 1 89 1 
263 1 254 2 188 1 159 1 102 1 207 1 65 1 275 1 193 1 44 1 198 1 153 1 347 2 315 1 89 1 338 1 
263 1 254 3 188 2 84 1 151 1 275 1 311 1 198 2 258 1 153 2 347 3 89 1 338 1 
63 1 187 1 254 7 188 2 102 1 3 1 84 1 151 3 275 1 193 1 17 1 311 5 285 1 198 3 324 1 258 2 153 2 347 7 281 1 338 1 294 1 
63 1 187 1 254 7 188 2 102 1 3 1 84 1 151 3 275 1 193 1 17 1 311 5 285 1 198 3 324 1 258 2 153 2 347 7 281 1 338 1 294 1 
145 1 24 1 179 1 
145 1 38 2 237 1 
322 2 142 2 280 2 167 2 181 1 182 2 77 1 241 2 
2 2 308 1 64 1 41 2 46 1 221 1 142 2 224 1 166 1 167 2 144 1 76 2 77 1 99 1 169 1 272 2 232 1 235 1 318 1 360 1 26 1 362 1 319 1 83 1 239 1 124 1 256 1 9 1 241 2 107 1 322 3 129 1 111 1 280 2 181 1 182 3 133 2 
328 1 
12 1 158 1 328 1 145 1 241 1 93 1 267 1 322 1 138 1 6 1 286 1 260 1 178 1 179 1 182 1 326 1 
158 1 328 1 145 1 241 1 267 2 93 1 322 1 138 2 286 1 142 1 260 1 178 1 179 1 167 1 280 1 182 1 326 1 
267 1 138 1 346 1 284 1 250 1 
365 1 267 2 138 2 145 1 199 1 346 1 179 1 284 1 
267 1 138 1 284 1 
267 1 138 1 328 1 346 1 326 1 
145 1 
365 1 267 2 138 2 145 1 346 1 179 1 72 1 284 1 
328 1 264 4 116 2 134 1 15 1 330 1 354 1 284 2 267 5 138 5 20 1 357 2 202 1 145 2 274 2 148 1 104 1 342 3 54 2 365 1 346 2 214 1 245 1 261 1 179 2 180 2 155 1 326 1 
24 1 77 1 
241 2 93 1 257 1 322 2 142 1 167 1 280 1 182 2 349 1 113 1 77 1 
233 1 34 1 249 1 
232 1 360 1 362 1 41 1 256 1 64 1 107 1 322 1 221 1 129 1 111 1 253 1 182 1 76 1 77 1 133 1 
232 1 360 1 362 1 64 1 256 1 41 1 127 1 241 1 107 1 322 2 34 1 221 1 129 1 111 1 142 1 280 1 182 2 76 1 225 1 133 1 
322 3 142 3 167 1 280 3 182 3 127 1 77 1 241 3 
93 1 322 1 39 1 142 1 280 1 182 1 241 1 
241 1 93 1 322 1 142 1 167 1 280 1 349 1 182 1 113 1 
158 1 2 1 308 1 64 1 41 1 196 1 93 1 267 1 46 1 138 1 221 1 286 1 142 3 167 2 76 1 225 1 77 1 169 1 272 2 232 1 235 1 318 1 360 1 362 1 319 1 83 1 239 1 256 1 124 1 9 1 276 1 127 1 241 3 107 1 322 4 129 1 111 1 260 1 178 1 280 3 181 1 349 1 182 4 133 1 
161 1 127 1 241 2 93 1 257 1 322 2 6 1 142 1 280 1 182 2 77 1 
158 1 145 1 127 2 276 1 241 3 267 1 93 1 138 1 322 3 286 1 142 3 143 1 260 1 178 1 167 1 280 3 349 1 182 3 225 1 
233 1 127 1 241 2 322 2 34 1 142 2 167 1 280 2 349 1 182 2 
232 1 360 1 362 1 41 1 256 1 64 1 107 1 322 1 129 1 221 1 111 1 182 1 76 1 77 1 133 1 
232 1 360 1 41 1 64 1 107 1 322 1 129 1 221 1 111 1 96 1 314 1 182 1 76 1 77 1 133 1 
2 4 332 1 249 2 308 1 312 1 94 1 46 2 268 1 99 2 169 1 80 1 272 2 233 2 234 1 318 1 83 1 239 1 9 1 54 1 278 1 213 1 34 2 325 1 155 1 
248 1 241 1 93 1 322 1 142 1 260 1 280 1 182 1 
127 2 241 3 93 1 257 1 322 3 142 3 280 3 167 1 182 3 349 1 225 1 77 1 
93 1 322 1 39 1 142 1 280 1 182 1 241 1 
351 1 168 1 
351 1 168 1 
49 1 5 1 
49 1 5 1 
49 1 5 1 
351 1 220 1 168 1 
351 1 220 1 168 1 
351 1 251 1 168 1 
305 1 351 2 288 1 49 1 5 1 168 2 
351 1 220 1 168 1 
212 1 351 1 168 1 
212 1 351 1 168 1 
212 1 351 1 168 1 
51 1 328 1 145 1 351 2 172 1 298 2 219 1 309 1 334 2 310 2 267 2 138 2 313 2 109 2 301 1 74 1 183 1 326 1 168 2 
351 1 298 1 150 1 219 1 251 1 343 1 209 1 334 1 241 2 310 1 242 1 267 1 322 2 138 1 313 1 35 1 109 1 142 2 121 1 73 1 280 2 182 2 77 1 168 1 
285 1 102 1 193 1 
102 1 207 1 193 1 
350 1 285 2 102 3 131 1 207 1 355 1 
350 1 285 1 102 2 131 1 207 1 300 1 
285 1 350 1 102 2 131 2 207 1 
328 1 264 1 117 1 356 1 284 1 267 5 138 5 357 1 223 1 73 1 296 1 145 1 274 1 105 1 342 2 364 2 365 1 278 1 33 1 346 4 60 1 130 1 261 1 179 1 180 1 155 1 326 1 
328 1 264 1 331 1 356 1 284 3 250 2 267 5 138 5 357 1 223 1 73 1 227 2 145 1 274 1 105 1 342 2 365 1 278 1 33 1 346 4 60 1 130 1 88 1 179 1 261 1 180 1 155 1 326 1 
328 1 264 1 117 1 267 3 138 3 357 1 223 1 73 1 296 1 145 1 202 1 274 1 105 1 342 2 364 1 278 1 33 1 346 2 130 1 60 1 179 1 180 1 155 1 326 1 
264 1 117 1 66 1 267 4 138 4 357 1 223 2 73 2 296 1 145 1 202 1 82 1 274 1 105 2 342 4 364 2 278 2 33 2 346 3 130 1 60 1 179 1 180 1 155 2 114 1 
37 1 24 1 
221 1 163 1 
101 1 
360 1 221 1 
37 2 360 1 352 1 101 1 64 1 221 1 71 1 
360 1 221 1 64 1 
221 1 21 1 
247 1 134 1 246 1 2 7 15 1 330 1 54 1 29 2 46 3 213 3 70 1 155 1 22 1 359 1 80 2 99 4 78 1 
247 1 134 1 246 1 2 7 15 1 330 1 54 1 29 2 46 3 213 3 70 1 155 1 22 1 359 1 80 2 99 4 78 1 
247 1 134 1 246 1 2 7 15 1 330 1 54 1 29 2 46 3 213 3 70 1 244 1 155 1 22 1 359 1 80 2 99 4 78 1 
246 1 2 1 206 1 22 2 359 1 29 1 99 1 
247 1 134 1 2 9 330 1 15 1 195 1 46 4 70 1 22 1 359 1 169 2 99 5 80 3 78 1 272 4 318 2 239 2 9 2 54 1 55 1 29 2 213 4 345 1 155 1 
263 1 188 1 218 1 355 1 41 1 193 1 311 1 335 1 198 1 285 1 140 1 336 1 76 1 338 1 317 1 254 2 100 1 102 2 207 1 255 1 275 1 126 1 106 1 366 1 129 1 153 1 111 1 347 2 89 1 133 1 
263 1 188 1 355 1 4 1 41 1 193 1 311 2 198 1 285 1 140 1 336 1 76 1 317 1 254 3 100 1 102 2 103 1 320 1 207 1 255 1 275 1 126 1 106 1 366 1 129 1 153 1 111 1 347 3 89 1 133 1 
263 1 355 1 4 1 41 1 193 1 311 2 198 1 285 1 140 1 336 1 76 1 317 1 254 2 100 1 102 2 103 1 207 1 255 1 275 1 106 1 129 1 111 1 347 2 89 1 133 1 
188 1 41 1 221 1 140 2 76 1 226 1 317 2 360 1 254 1 361 1 320 1 8 1 275 2 106 2 277 1 107 1 129 1 111 1 153 1 347 1 367 1 36 1 133 1 
317 1 100 1 254 1 188 1 102 2 218 1 207 1 355 1 255 1 4 1 41 1 126 1 275 1 106 1 193 1 285 1 366 1 129 1 140 1 111 1 336 1 153 1 347 1 76 1 338 1 133 1 
176 1 
264 1 274 1 284 1 41 1 107 1 68 1 267 1 138 1 357 1 60 1 261 1 180 1 76 1 368 1 133 1 
12 1 158 1 14 1 265 1 284 2 67 2 120 1 267 3 93 1 138 3 6 1 95 1 286 1 72 1 201 1 145 2 241 1 365 1 322 1 177 1 260 1 178 1 179 2 182 1 
158 1 12 1 145 2 14 1 67 3 241 1 120 1 93 1 267 2 138 2 322 1 177 1 6 1 286 1 95 1 287 1 260 1 178 1 179 2 182 1 201 1 
12 1 158 1 115 1 14 1 265 1 284 2 67 3 120 1 267 3 93 1 138 3 6 1 95 1 286 1 287 1 72 1 201 1 145 2 241 1 365 1 322 1 177 1 260 1 178 1 179 2 182 1 
328 1 135 1 284 3 93 1 138 3 6 1 286 1 95 1 98 1 201 1 295 1 145 3 341 2 342 1 260 1 154 1 261 1 158 1 12 1 115 2 306 1 264 1 14 1 265 2 67 2 120 1 267 3 357 1 72 1 75 2 274 1 241 1 365 1 32 1 322 1 177 1 87 1 178 1 179 3 180 1 182 1 326 1 
12 1 158 1 306 1 264 1 14 1 67 2 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 75 1 201 1 145 2 274 1 341 1 342 1 241 1 322 1 177 1 260 1 154 1 178 1 261 1 179 2 180 1 303 1 182 1 
12 1 158 1 328 1 306 1 264 1 14 1 135 1 67 2 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 98 1 75 2 201 1 145 3 274 1 341 2 342 1 241 1 32 1 322 1 177 1 260 1 154 1 178 1 179 3 261 1 180 1 182 1 326 1 
12 1 158 1 328 1 306 1 264 1 14 1 135 1 67 2 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 98 1 75 2 201 1 145 3 274 1 341 2 342 1 241 1 32 1 322 1 177 1 260 1 154 1 178 1 179 3 261 1 180 1 182 1 326 1 
158 1 12 1 145 2 23 1 14 1 67 2 241 1 120 1 93 1 267 2 138 2 322 1 177 1 6 1 286 1 95 1 260 1 178 1 179 2 182 1 201 1 
12 1 158 1 328 1 306 1 115 1 264 1 135 1 14 1 265 1 284 1 67 3 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 287 1 98 1 75 2 201 1 295 1 145 3 274 1 341 2 342 1 241 1 32 1 322 1 177 1 260 1 154 1 178 1 261 1 179 3 180 1 182 1 326 1 
12 1 158 1 328 1 306 1 115 1 264 1 135 1 14 1 265 1 284 1 67 3 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 287 1 98 1 75 2 201 1 295 1 145 3 274 1 341 2 342 1 241 1 32 1 322 1 177 1 260 1 154 1 178 1 261 1 179 3 180 1 182 1 326 1 
12 1 158 1 306 1 264 1 14 1 192 1 67 2 120 1 267 2 93 1 138 2 6 1 95 1 286 1 357 1 75 1 201 1 145 2 274 1 341 1 342 1 241 1 322 1 177 1 260 1 178 1 261 1 179 2 180 1 303 1 182 1 
272 2 233 1 318 1 134 1 24 1 2 6 15 1 330 1 83 1 249 1 308 1 239 1 9 1 54 1 29 1 312 1 46 3 213 2 34 1 70 1 155 1 77 2 99 3 80 2 169 1 78 1 
247 1 189 1 2 14 249 11 308 2 252 3 19 1 46 6 94 1 223 2 224 1 77 1 170 1 80 1 200 1 169 2 99 8 272 4 233 4 318 2 319 1 83 1 85 1 239 2 125 3 9 2 28 1 54 1 278 2 213 2 34 11 58 1 155 2 
2 2 308 1 64 1 41 1 46 1 221 1 253 1 142 1 97 1 224 1 76 1 225 1 77 1 169 1 99 1 232 1 272 2 233 1 360 1 318 1 362 1 25 1 319 1 83 1 239 1 256 1 9 1 127 1 210 1 28 1 107 1 241 1 322 2 129 1 111 1 280 1 182 2 133 1 
272 2 318 1 2 1 319 1 83 1 308 1 239 1 41 1 127 1 9 1 28 1 107 1 241 1 46 1 322 1 142 1 280 1 76 1 182 1 225 1 11 1 133 1 169 1 
329 1 2 2 41 7 191 1 335 1 46 1 142 1 291 1 99 1 339 1 9 2 107 2 111 4 348 1 308 2 64 1 312 1 221 4 224 1 166 2 76 6 122 1 226 1 169 2 272 4 81 1 360 3 236 1 318 2 361 1 319 1 83 2 238 1 239 2 127 1 241 1 322 1 323 1 129 3 280 1 182 1 133 7 327 1 
2 3 249 1 308 1 94 1 46 2 142 1 223 1 167 1 292 1 80 1 169 1 99 1 272 2 233 1 318 1 83 1 239 1 9 1 28 1 54 1 241 1 322 1 278 1 213 1 34 1 280 1 349 1 182 1 155 1 
272 2 233 1 318 1 247 1 2 2 83 1 249 1 308 1 239 1 9 1 312 1 278 1 213 1 34 1 325 1 155 1 169 1 99 2 
272 2 233 1 318 1 2 2 83 1 332 1 249 1 308 1 239 1 9 1 54 1 312 1 94 1 46 2 213 1 34 1 80 1 169 1 
247 1 2 4 249 2 308 1 312 1 94 1 46 2 223 1 99 2 169 1 80 1 272 2 233 2 318 1 83 1 239 1 9 1 54 1 278 1 213 2 34 2 155 1 
272 2 233 1 236 1 318 1 247 1 2 2 83 1 249 1 308 1 239 1 9 1 278 1 213 1 34 1 325 1 155 1 169 1 99 2 
272 2 233 1 236 1 318 1 2 2 83 1 332 1 249 1 308 1 239 1 9 1 54 1 94 1 46 2 213 1 34 1 80 1 169 1 
247 1 2 4 249 2 308 1 94 1 46 2 223 1 99 2 169 1 80 1 272 2 233 2 318 1 236 1 83 1 239 1 9 1 54 1 278 1 213 2 34 2 155 1 
272 2 233 2 318 1 247 1 2 4 83 1 249 2 308 1 239 1 9 1 54 1 46 2 94 1 278 1 213 2 34 2 223 1 155 1 80 1 169 1 99 2 
2 2 308 1 64 1 41 1 46 1 221 1 224 1 76 1 77 1 99 1 169 1 232 1 272 2 235 1 360 1 318 1 362 1 319 1 83 1 239 1 256 1 9 1 107 1 322 1 129 1 111 1 182 1 133 1 
186 1 2 2 308 1 64 1 41 1 46 1 221 1 96 1 224 1 314 1 76 1 77 1 99 1 169 1 232 1 272 2 360 1 318 1 319 1 83 1 239 1 9 1 107 1 322 1 129 1 111 1 182 1 133 1 
247 1 2 4 249 2 308 1 94 1 46 2 223 1 99 2 169 1 80 1 272 2 233 2 318 1 83 1 239 1 9 1 28 1 54 1 278 1 213 2 34 2 155 1 
247 1 2 4 249 2 308 1 64 1 41 1 335 1 46 2 94 1 221 1 223 1 76 1 80 1 99 2 169 1 232 1 272 2 233 2 235 1 360 1 318 1 362 1 83 1 239 1 256 1 9 1 54 1 278 1 322 1 213 2 34 2 129 1 111 1 262 1 155 1 182 1 133 1 
247 1 2 3 249 1 308 1 46 1 94 1 142 1 223 1 167 1 169 1 99 2 272 2 233 1 318 1 83 1 239 1 9 1 54 1 28 1 241 1 322 1 278 1 213 1 34 1 280 1 349 1 182 1 155 1 185 1 
247 2 189 2 190 1 2 30 40 2 307 1 252 2 19 2 139 1 46 16 94 4 223 4 269 1 270 1 80 4 169 2 99 14 272 4 318 2 299 1 27 4 239 2 125 4 9 2 54 4 55 1 278 4 213 6 302 1 155 4 184 1 62 1 
190 1 2 10 40 1 307 2 252 1 46 5 139 1 19 1 94 1 223 1 269 2 169 1 99 5 272 2 318 1 27 2 239 1 125 1 9 1 54 1 55 1 278 1 302 1 155 1 
247 2 189 2 190 1 2 28 40 1 307 1 252 3 19 3 139 1 46 15 94 3 223 3 269 2 270 1 80 2 169 2 99 13 272 4 318 2 273 1 299 1 27 4 239 2 125 5 9 2 54 3 55 1 278 3 213 4 302 1 155 3 62 1 
247 1 189 2 190 1 2 26 40 1 307 1 252 2 19 2 139 1 46 14 94 3 223 3 269 1 270 1 80 2 169 2 99 12 272 4 318 2 299 1 27 4 239 2 125 4 9 2 54 3 55 1 278 3 213 3 302 1 155 3 62 1 
134 3 247 3 189 1 190 1 2 41 40 1 15 3 330 3 307 1 252 3 19 2 139 1 46 19 94 3 70 3 223 3 269 1 78 3 80 5 169 1 99 22 272 2 318 1 299 1 27 4 239 1 125 3 9 1 54 6 29 3 55 1 278 3 213 8 58 1 302 1 155 6 62 1 
351 1 298 1 174 1 118 1 309 1 208 1 334 1 42 1 313 1 109 1 168 1 
313 1 351 1 52 1 109 1 59 1 298 1 334 1 86 1 168 1 
251 1 343 1 
51 1 328 1 145 1 351 1 172 1 298 1 219 1 309 1 334 1 310 2 267 1 138 1 313 1 109 1 301 1 74 1 183 1 326 1 168 1 
51 1 328 1 145 1 351 1 172 1 298 1 219 1 309 1 334 1 310 2 267 1 138 1 313 1 109 1 301 1 74 1 183 1 326 1 168 1 
51 1 328 1 145 1 351 1 172 1 298 1 219 1 309 1 334 1 310 2 267 1 138 1 313 1 109 1 301 1 74 1 183 1 326 1 168 1 
305 1 203 1 220 1 
305 1 203 1 220 1 
212 1 128 1 
305 1 212 1 128 1 
242 1 150 1 
351 1 251 1 334 1 310 1 267 1 138 1 313 1 142 2 121 1 73 1 77 1 168 1 51 1 298 1 150 1 209 1 343 1 241 2 242 1 322 2 346 1 109 1 35 1 10 1 301 1 280 2 182 2 
203 1 220 1 
305 1 212 1 128 1 
2 2 137 1 308 1 191 1 41 2 46 1 221 1 50 1 224 1 166 2 358 1 76 2 271 1 230 1 169 1 99 1 272 2 360 1 318 1 319 1 83 1 239 1 9 1 28 1 241 2 322 2 129 1 111 1 348 1 182 2 133 2 
317 1 160 1 102 2 207 1 355 1 4 1 255 1 41 2 126 1 193 1 335 1 285 1 129 1 111 1 47 1 336 1 76 2 228 1 133 2 
317 1 102 2 207 1 355 1 4 1 255 1 41 1 126 1 193 1 285 1 129 1 47 1 336 1 111 1 48 1 76 1 133 1 
317 1 360 1 0 1 361 1 41 1 277 1 107 1 129 1 221 1 111 1 76 1 226 1 228 1 133 1 
317 1 160 1 102 2 207 1 355 1 4 1 255 1 41 1 126 1 193 1 285 1 129 1 111 1 47 1 336 1 76 1 228 1 133 1 
45 1 
145 1 264 1 214 1 24 1 148 1 179 1 342 1 
38 1 264 1 284 1 92 1 267 1 138 1 357 1 145 2 237 1 274 1 342 1 365 1 259 1 154 1 261 1 179 1 180 1 
304 1 264 2 217 1 352 1 136 1 284 2 41 1 64 1 163 2 267 2 138 2 286 1 221 3 357 2 223 1 76 1 360 1 274 2 146 1 149 1 105 2 342 3 30 1 107 1 365 1 152 1 278 1 33 2 129 1 111 2 60 1 112 1 261 2 180 2 155 1 133 1 
38 4 264 11 116 3 189 1 252 2 119 1 19 1 94 4 222 1 357 1 223 4 123 1 237 4 274 1 105 7 342 7 125 2 54 4 278 4 33 7 58 1 261 1 180 1 155 4 369 1 62 1 
328 1 264 2 134 1 116 2 135 1 274 1 15 1 330 1 342 1 54 1 267 1 138 1 357 1 245 1 261 1 180 1 155 1 326 1 
145 1 264 1 274 1 148 1 342 1 214 1 357 1 261 1 179 1 180 1 
278 1 33 1 223 1 105 1 342 2 155 1 
267 1 365 1 138 1 145 1 179 1 284 1 
264 1 274 1 284 1 41 1 107 1 211 1 68 1 357 1 60 1 261 1 180 1 76 1 368 1 133 1 
2 1 308 1 41 1 64 1 46 1 221 1 142 2 167 2 76 1 77 1 169 1 272 2 232 1 235 1 318 1 360 1 362 1 319 1 83 1 239 1 124 1 256 1 9 1 107 1 241 2 322 3 129 1 111 1 280 2 181 1 182 3 133 1 
145 1 264 1 274 1 342 1 194 1 33 1 357 1 60 1 261 1 179 1 180 1 
313 1 298 1 16 1 
313 1 298 1 16 1 
171 1 321 1 313 1 298 1 150 1 
313 1 298 1 16 1 
18 1 313 1 298 1 
18 1 313 1 298 1 
18 1 313 1 298 1 
313 1 298 1 
351 1 168 1 
272 4 318 2 247 1 134 1 2 8 15 1 330 1 239 2 9 2 54 1 29 1 46 4 213 3 345 1 70 1 155 1 99 4 80 2 169 2 78 1 
46 3 213 2 134 1 70 1 24 1 2 6 15 1 330 1 155 1 54 1 29 1 99 3 80 2 78 1 
272 2 318 1 247 1 2 4 239 1 9 1 54 1 46 2 94 1 278 1 213 2 223 1 155 1 90 1 80 1 169 1 99 2 
247 1 189 1 2 7 125 2 54 1 252 1 94 1 19 1 46 4 278 1 213 2 223 1 155 1 80 1 99 3 
134 2 247 4 189 1 2 23 15 1 330 2 252 2 164 1 46 12 94 2 70 1 223 2 78 1 99 11 80 5 169 2 272 4 318 2 85 1 239 2 125 2 9 2 54 3 29 1 278 2 213 9 345 2 58 1 155 3 
46 1 2 1 125 1 
2 1 252 1 99 1 
272 2 304 1 318 1 247 1 2 6 239 1 9 1 54 1 46 3 278 1 94 1 213 3 223 1 155 1 90 1 169 1 99 3 80 2 
272 2 318 1 2 5 239 1 125 1 9 1 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 123 1 99 3 169 1 62 1 
134 1 247 1 2 6 15 1 330 1 54 1 46 3 213 2 155 1 99 3 80 1 
272 2 318 1 247 1 134 1 2 3 330 1 239 1 9 1 164 1 46 2 213 2 345 1 70 1 99 1 80 1 169 1 78 1 
272 2 318 1 134 2 247 2 2 10 330 2 15 1 239 1 9 1 54 2 55 1 46 5 213 5 245 1 155 2 169 1 80 3 99 5 
272 2 318 1 247 1 2 2 239 1 9 1 55 1 278 1 213 1 155 1 169 1 99 2 
272 2 318 1 247 1 2 4 239 1 9 1 54 1 55 1 46 2 94 1 278 1 213 2 223 1 155 1 80 1 169 1 99 2 
272 6 318 3 134 1 247 1 2 3 330 1 239 3 9 3 55 1 164 1 46 2 213 2 345 1 270 1 169 3 80 1 99 1 
134 3 247 5 189 1 2 34 15 2 330 3 283 1 252 3 164 1 46 18 19 1 94 3 70 1 337 1 223 3 270 1 78 1 169 5 99 16 80 7 272 10 318 5 204 1 239 5 125 4 9 5 54 5 29 1 55 1 278 3 213 12 345 2 155 5 90 1 
134 1 2 8 330 1 15 1 252 1 46 4 19 1 70 1 169 1 99 4 78 1 80 2 272 2 318 1 239 1 125 1 9 1 54 1 29 1 55 1 213 2 155 1 62 1 
134 1 247 1 189 1 2 11 15 1 330 1 252 1 46 5 19 1 70 1 223 1 80 2 78 1 169 2 99 6 272 4 318 2 239 2 125 2 9 2 54 1 29 1 55 1 278 1 213 3 155 2 90 1 62 1 
272 2 318 1 2 5 239 1 125 1 9 1 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 123 1 99 3 169 1 62 1 
272 2 318 1 2 5 239 1 125 1 9 1 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 123 1 99 3 169 1 62 1 
134 1 2 8 330 1 15 1 252 1 46 4 19 1 70 1 169 1 99 4 78 1 80 2 272 2 318 1 239 1 125 1 9 1 54 1 29 1 55 1 213 2 155 1 62 1 
272 2 318 1 2 5 239 1 125 1 9 1 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 123 1 99 3 169 1 62 1 
272 4 318 2 2 5 239 2 125 1 9 2 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 90 1 123 1 99 3 169 2 62 1 
272 4 318 2 2 5 239 2 125 1 9 2 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 270 1 123 1 99 3 169 2 62 1 
134 3 247 3 2 7 330 3 15 1 54 1 46 4 213 6 70 2 155 1 78 1 80 3 99 3 
272 4 318 2 2 5 239 2 125 1 9 2 252 1 55 1 278 1 19 1 46 2 222 1 223 1 155 1 270 1 123 1 99 3 169 2 62 1 
322 1 6 1 161 1 132 1 182 1 77 1 241 1 
161 1 162 1 173 1 333 1 241 1 322 1 6 1 132 1 182 1 293 1 77 1 229 1 
360 1 129 1 221 1 24 1 111 1 361 1 41 1 76 1 226 1 107 1 133 1 
232 1 360 1 64 1 41 1 256 1 127 1 241 1 107 1 322 2 221 1 129 1 111 1 142 1 280 1 182 2 76 1 77 1 133 1 
158 1 1 1 41 1 64 2 93 2 221 2 142 1 76 1 77 1 232 1 360 2 256 1 175 1 127 1 241 2 257 1 322 2 129 1 111 1 260 1 280 2 182 2 133 1 
158 1 1 1 41 1 64 2 93 2 221 2 142 1 314 1 76 1 77 1 232 1 360 2 175 1 127 1 241 2 257 1 322 2 129 1 111 1 260 1 280 2 182 2 133 1 
37 1 328 1 1 1 284 1 163 1 41 1 64 1 267 2 138 2 221 2 286 1 165 1 289 1 76 1 360 1 145 1 175 1 129 1 111 1 179 1 326 1 133 1 
328 1 145 1 1 1 41 1 163 1 284 1 267 2 138 2 221 1 286 1 112 1 179 1 76 1 326 1 133 1 
129 1 329 1 111 1 41 1 76 1 133 1 
339 1 360 2 329 1 352 1 266 1 191 1 41 6 64 1 107 2 335 1 323 1 221 3 129 2 111 3 166 1 291 1 76 5 122 1 327 1 133 6 
134 1 2 6 330 1 249 1 41 1 335 1 46 3 142 1 99 3 256 1 9 2 54 1 213 2 111 1 61 1 262 1 155 1 15 1 308 2 64 1 221 1 70 1 358 1 76 1 77 2 169 2 78 1 80 2 272 4 232 1 233 1 235 1 318 2 360 1 362 1 83 2 239 2 127 1 28 1 241 1 29 1 322 2 129 1 34 1 280 1 182 2 133 1 
328 1 264 4 116 2 134 1 217 1 136 1 15 1 330 1 41 1 163 1 284 2 267 3 138 3 221 1 286 1 357 2 76 1 145 2 274 2 146 1 148 1 342 3 54 2 107 1 211 1 365 1 214 1 346 1 245 1 112 1 179 2 261 2 180 2 155 1 326 1 133 1 
37 1 360 1 101 1 329 1 352 1 41 1 64 1 152 1 221 1 129 1 111 2 76 1 133 1 
215 1 360 1 361 1 41 4 107 1 335 1 221 1 129 1 111 1 76 4 226 1 316 1 133 4 
81 1 360 1 1 1 238 1 41 2 64 1 221 1 129 1 111 2 291 1 76 2 156 1 327 1 133 2 
129 1 102 1 111 1 207 1 255 1 41 1 76 1 193 1 107 1 133 1 
360 1 4 1 41 2 191 1 335 1 221 1 129 1 111 1 50 1 76 2 133 2 
215 1 339 1 360 2 1 1 361 1 41 5 191 1 107 1 335 1 221 3 129 2 111 2 76 4 226 1 122 1 133 5 
215 1 360 2 1 1 361 1 41 5 191 1 107 1 335 1 221 3 129 2 111 2 76 4 226 1 122 1 133 5 157 1 
232 1 360 1 64 1 41 1 127 1 241 1 107 1 322 2 221 1 129 1 111 1 142 1 280 1 314 1 182 2 76 1 77 1 133 1 
360 1 1 1 352 1 266 1 41 1 64 1 221 1 129 1 111 2 291 1 76 1 327 1 133 1 
297 1 279 1 77 1 79 1 31 1 
158 1 91 1 328 1 145 1 353 1 340 1 297 1 276 1 31 1 93 1 267 2 138 2 286 1 346 1 260 1 279 1 178 1 179 1 326 1 79 1 
297 1 137 1 241 1 31 1 322 1 182 1 230 1 271 1 79 1 
340 1 353 1 31 1 
198 1 263 1 24 1 89 1 
198 1 263 1 254 1 188 1 153 1 347 1 89 1 
254 1 275 1 106 1 
216 1 263 1 254 3 188 1 240 1 65 2 69 1 198 1 153 1 347 3 89 1 338 1 
263 1 53 1 254 2 188 1 17 1 311 1 198 1 153 1 347 2 89 1 
254 1 188 1 102 1 151 1 193 1 198 1 285 1 153 1 347 1 338 1 294 1 
198 1 254 1 188 1 153 1 347 1 89 1 338 1 
263 1 254 1 188 1 153 1 347 1 89 2 338 1 
197 1 13 1 198 1 254 2 188 2 153 2 347 2 89 1 231 1 338 1 
263 1 254 3 187 1 188 1 3 1 151 1 311 2 198 2 258 1 153 1 347 3 89 1 338 1 
263 1 254 2 188 1 102 2 147 1 207 1 355 1 193 1 311 1 198 1 285 1 153 1 347 2 89 1 338 1 
263 1 53 1 254 3 188 1 205 1 151 1 17 1 311 2 198 2 258 1 153 1 347 3 89 1 338 1 
198 1 263 1 254 1 188 1 153 1 347 1 89 1 338 1 
216 1 263 2 53 1 254 4 188 1 151 1 65 1 240 1 311 2 198 3 258 1 153 1 347 4 89 2 
263 1 254 2 188 1 56 1 311 1 198 1 324 1 153 1 7 1 347 2 89 1 338 1 
216 1 263 1 254 3 188 1 240 2 65 2 198 1 153 1 347 3 290 1 89 1 338 1 
108 1 198 2 344 1 57 2 
254 1 188 1 282 1 153 1 347 1 338 1 
311 1 198 1 263 1 254 2 188 1 153 1 347 2 3 1 89 1 338 1 
243 1 
198 1 263 1 254 1 188 1 153 1 347 1 89 1 338 1 
311 1 198 1 263 1 254 3 188 1 153 1 347 3 3 1 65 1 89 1 338 1 
198 1 53 1 258 1 151 1 
198 1 89 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (54,246) (54,246) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (54,246) (54,246) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (54,246) (54,246) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (54,246) (54,246) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 211 190 234 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 211 190 234 74 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 211 190 234 (2,129) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 211 190 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 127 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 93 (24,192,273) (183,196,299) (183,196,299) (183,196,299) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 22 68 140 67 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 22 68 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 68 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 22 272 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 22 68 140 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 22 68 140 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 76 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 239 251 16 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 239 251 16 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 239 251 16 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 239 251 16 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 239 251 16 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 211 1 36 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 93 (24,192,273) (24,192,273) (24,192,273) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 80 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 127 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 55 61 252 160 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 211 190 234 74 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 103 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 211 275 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 211 275 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 211 275 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 211 275 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 211 190 234 (2,129) (2,129) 127 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 211 275 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 201 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
70 1 220 1 298 1 44 1 6 1 134 1 246 1 263 1 301 1 248 1 31 1 213 1 54 1 
70 1 220 1 298 1 44 1 6 1 134 1 246 1 263 1 301 1 248 1 31 1 213 1 54 1 
70 1 220 1 298 1 44 1 6 1 134 1 246 1 263 1 301 1 248 1 31 1 213 1 54 1 
70 1 220 1 298 1 44 1 6 1 134 1 246 1 263 1 301 1 248 1 31 1 213 1 54 1 
215 1 70 1 10 2 220 4 79 1 298 1 112 3 130 1 6 1 134 1 28 1 282 1 301 1 63 1 93 1 31 4 171 2 116 3 
220 1 298 1 6 1 23 1 134 1 28 1 51 1 282 1 135 1 301 1 248 1 30 1 93 1 31 1 213 1 
215 1 220 3 297 1 298 1 112 2 6 2 134 2 28 1 282 1 31 3 171 1 213 1 116 1 
70 1 79 1 206 1 130 1 6 2 165 1 134 2 282 1 93 1 171 4 285 1 213 1 215 3 10 2 220 9 107 1 297 1 298 1 112 5 28 1 63 1 301 1 31 9 116 7 
70 1 79 1 206 1 130 1 6 2 165 1 134 2 282 1 93 1 171 4 285 1 213 1 215 3 10 2 220 9 107 1 297 1 298 1 112 5 28 1 63 1 301 1 31 9 116 7 
201 1 
151 1 
234 1 211 1 190 1 
234 1 74 1 211 1 190 1 
129 1 234 1 211 1 190 1 
142 1 143 1 221 1 182 1 159 1 81 1 161 1 257 1 271 1 47 1 90 1 136 1 52 1 198 1 
211 1 190 1 
250 1 120 1 81 1 108 1 257 1 
234 1 120 1 2 1 81 2 17 1 108 1 190 1 257 2 256 1 129 1 271 1 136 1 211 1 
81 1 108 1 257 1 
129 1 234 1 120 1 2 1 211 1 81 1 190 1 257 1 
136 1 
234 1 120 1 2 1 81 2 17 1 108 1 190 1 257 2 129 1 271 1 208 1 136 1 211 1 
155 2 234 1 73 2 120 2 39 1 2 1 240 2 81 5 205 1 84 1 127 1 129 1 45 1 271 2 133 1 136 2 283 2 211 1 53 1 100 1 141 3 186 2 17 1 108 2 190 1 257 5 193 4 113 1 62 1 304 1 267 1 
105 1 125 1 
105 1 125 1 
12 1 224 1 
12 1 224 1 
12 1 224 1 
105 1 172 1 125 1 
105 2 12 1 224 1 284 1 125 2 189 1 
300 1 105 1 125 1 
300 1 105 1 125 1 
300 1 105 1 125 1 
105 1 286 1 125 1 
105 1 286 1 125 1 
105 1 286 1 125 1 
290 2 72 1 200 1 217 1 105 2 40 2 125 2 81 2 189 1 257 2 85 1 194 2 89 1 114 2 136 1 152 1 210 2 97 3 306 1 
194 1 105 1 114 1 40 1 210 1 211 1 97 1 125 1 81 1 257 1 85 1 
70 1 301 1 93 1 
301 1 135 1 93 1 
70 2 132 1 301 3 135 1 3 1 32 1 
70 1 301 2 135 1 3 1 32 1 175 1 
70 1 301 2 135 1 3 2 32 1 
69 1 73 1 120 4 240 1 123 1 81 5 205 1 271 1 276 2 87 1 50 2 168 1 136 2 283 1 139 2 141 2 180 1 144 1 219 1 296 1 186 1 17 1 187 1 108 1 111 1 257 5 227 1 193 3 26 1 151 3 34 1 267 1 
250 1 234 1 120 2 2 1 81 2 108 1 190 1 257 2 129 1 271 1 86 1 48 1 136 1 211 1 212 1 
73 1 120 2 240 1 81 3 205 1 271 1 87 1 276 2 168 1 50 1 136 3 283 1 139 2 141 2 144 1 219 1 296 2 186 1 187 1 257 3 111 1 193 3 227 1 113 1 151 4 34 1 
73 1 235 1 119 1 120 3 240 2 81 4 205 2 271 1 276 4 87 1 168 1 50 2 136 4 283 1 139 4 178 1 141 4 144 2 219 1 296 3 186 1 187 1 257 4 111 2 193 5 227 2 113 1 151 7 34 2 
49 1 218 1 201 1 
145 1 110 1 
291 1 
145 1 242 1 
20 1 5 1 25 2 145 3 104 1 242 1 
20 1 145 1 242 1 
145 1 64 1 
0 3 292 1 199 2 39 1 38 1 222 1 240 1 204 1 205 1 226 1 4 2 258 4 128 1 247 3 266 7 304 1 53 1 
0 3 292 1 199 2 39 1 38 1 222 1 240 1 204 1 205 1 226 1 4 2 258 4 128 1 247 3 266 7 304 1 53 1 
0 3 292 1 199 2 39 1 38 1 222 1 240 1 204 1 205 1 226 1 4 2 258 4 128 1 261 1 247 3 266 7 304 1 53 1 
156 1 0 10 199 5 39 1 38 1 202 1 122 3 204 2 240 4 41 1 126 2 205 4 4 3 128 1 131 1 277 1 280 1 247 15 137 1 92 1 7 1 53 2 101 1 292 1 144 3 222 2 106 1 15 4 111 3 226 5 258 16 227 3 266 31 304 2 
0 4 268 1 199 3 39 1 240 1 204 1 126 4 205 1 4 2 128 1 131 2 277 2 280 2 247 4 92 1 7 2 53 1 292 1 222 1 58 1 226 1 258 5 266 9 304 1 
70 1 157 1 270 1 6 1 273 1 132 1 134 1 167 1 135 1 93 1 169 1 95 1 96 1 213 1 99 1 55 2 56 1 220 1 183 1 298 1 18 2 61 2 299 1 230 1 301 2 196 1 31 1 
70 1 157 1 270 1 6 1 273 1 132 1 134 1 167 1 209 1 51 1 282 1 135 1 93 1 169 1 95 1 96 1 213 1 55 1 56 1 220 3 183 1 18 1 112 1 61 1 299 1 28 1 301 2 31 3 231 1 65 1 116 2 
70 1 157 1 270 1 273 1 132 1 167 1 209 1 51 1 282 1 135 1 93 1 169 1 95 1 96 1 213 1 55 1 220 2 18 1 112 1 61 1 299 1 28 1 301 2 31 2 65 1 116 2 
294 1 55 1 252 1 145 1 157 2 220 1 270 1 242 1 18 1 59 1 6 1 61 1 229 1 88 1 134 1 167 2 115 1 231 1 31 1 169 2 96 1 289 1 213 2 
70 1 157 1 270 1 6 1 273 1 132 1 134 1 167 1 209 1 135 1 93 1 169 1 95 1 96 1 213 1 55 1 56 1 220 1 183 1 298 1 18 1 61 1 299 1 301 2 196 1 31 1 
245 1 
73 1 37 1 237 1 77 1 270 3 81 2 242 2 160 1 88 1 168 1 283 1 96 2 289 1 141 1 293 1 55 2 252 2 145 2 186 1 255 1 18 2 17 1 108 2 257 2 193 1 20 1 61 2 66 1 267 1 
238 1 241 2 159 1 81 3 161 1 164 1 208 1 47 1 90 1 166 1 52 1 142 1 143 1 181 1 221 1 13 1 182 1 17 1 108 2 257 3 147 1 198 1 
238 1 241 3 159 1 81 3 161 1 164 1 271 1 208 1 47 1 90 1 166 1 138 1 136 1 52 1 142 1 143 1 181 1 221 1 182 1 17 1 108 1 257 3 147 1 198 1 
238 1 241 3 159 1 81 3 161 1 164 1 208 1 47 1 90 1 166 1 138 1 52 1 9 1 142 1 143 1 181 1 221 1 13 1 182 1 17 1 108 2 257 3 147 1 198 1 
73 1 238 1 241 2 159 1 81 3 161 1 164 1 208 1 47 1 166 1 90 1 283 1 52 1 173 1 140 1 9 2 141 1 142 1 143 1 181 1 221 1 13 2 182 1 186 1 17 1 19 1 108 3 257 3 193 1 22 1 147 1 67 1 68 1 198 1 267 1 
234 1 73 1 71 2 76 1 238 1 2 1 241 4 159 1 81 4 161 1 164 1 90 1 166 1 170 2 173 1 179 2 9 2 181 1 13 2 182 1 186 1 17 2 108 4 190 1 257 4 193 1 195 1 198 1 267 1 129 1 271 1 47 1 138 2 136 1 52 1 283 1 211 1 142 1 141 1 143 1 221 1 296 2 147 1 149 2 151 2 
73 1 238 1 241 2 159 1 81 2 161 1 164 1 47 1 90 1 166 1 52 1 283 1 173 1 141 1 142 1 143 1 181 1 221 1 182 1 186 1 19 1 257 2 193 1 22 1 147 1 198 1 68 1 267 1 
73 1 238 1 241 2 159 1 81 2 161 1 164 1 47 1 90 1 166 1 52 1 283 1 173 1 141 1 142 1 143 1 181 1 221 1 182 1 186 1 19 1 257 2 193 1 22 1 147 1 198 1 68 1 267 1 
73 1 238 1 241 2 159 1 81 2 161 1 164 1 272 1 47 1 90 1 166 1 52 1 283 1 141 1 142 1 143 1 181 1 254 1 221 1 182 1 186 1 257 2 193 1 22 1 147 1 154 1 198 1 267 1 
73 1 238 1 241 3 159 1 81 2 161 1 164 1 47 1 90 1 166 1 138 1 283 1 52 1 173 1 140 1 9 1 141 1 142 1 143 1 181 1 221 1 13 1 182 1 186 1 19 1 108 1 257 2 193 1 22 1 147 1 198 1 68 1 267 1 
73 1 238 1 241 3 159 1 81 2 161 1 164 1 47 1 90 1 166 1 138 1 283 1 52 1 173 1 140 1 9 1 141 1 142 1 143 1 181 1 221 1 13 1 182 1 186 1 19 1 108 1 257 2 193 1 22 1 147 1 198 1 68 1 267 1 
73 1 76 1 238 1 241 2 159 1 81 2 161 1 164 1 47 1 166 1 90 1 283 1 52 1 179 1 141 1 142 1 143 1 181 1 221 1 254 1 182 1 186 1 257 2 193 1 147 1 149 1 198 1 267 1 
60 1 131 1 251 1 277 1 280 1 239 1 7 1 58 1 16 1 126 2 
60 1 131 1 251 1 277 1 280 1 239 1 7 1 58 1 16 1 126 2 
60 1 131 1 251 1 277 1 280 1 239 1 7 1 58 1 16 1 126 2 
60 1 131 1 251 1 277 1 280 1 239 1 7 1 58 1 16 1 126 2 
60 1 131 1 251 1 277 1 280 1 239 1 7 1 58 1 16 1 126 2 
191 1 194 1 72 1 89 1 105 1 114 1 40 1 210 1 125 1 189 1 
194 1 105 1 114 1 40 1 303 1 302 1 210 1 174 1 125 1 
94 1 172 1 
290 1 72 1 217 1 105 1 40 1 81 1 125 1 189 1 85 1 257 1 194 1 89 1 114 1 136 1 152 1 210 1 97 2 306 1 
290 1 72 1 217 1 105 1 40 1 81 1 125 1 189 1 85 1 257 1 194 1 89 1 114 1 136 1 152 1 210 1 97 2 306 1 
290 1 72 1 217 1 105 1 40 1 81 1 125 1 189 1 85 1 257 1 194 1 89 1 114 1 136 1 152 1 210 1 97 2 306 1 
300 1 284 1 185 1 
300 1 284 1 185 1 
148 1 286 1 
148 1 284 1 286 1 
102 1 262 1 
290 1 102 1 180 1 120 1 105 1 40 1 1 1 123 1 125 1 81 1 257 1 194 1 262 1 114 1 94 1 210 1 172 1 211 1 34 1 36 1 97 1 306 1 
300 1 185 1 
148 1 284 1 286 1 
90 1 221 1 78 1 198 1 
70 1 55 2 56 1 157 1 270 1 18 2 192 1 163 1 61 2 273 1 230 1 132 1 24 1 209 1 301 2 135 1 93 1 95 1 96 1 
70 1 55 1 56 1 157 1 270 1 18 1 146 1 61 1 273 1 132 1 24 1 209 1 301 2 135 1 93 1 95 1 96 1 
55 1 294 1 252 1 145 1 157 1 270 1 242 1 18 1 162 1 163 1 61 1 88 1 96 1 289 1 
70 1 55 1 56 1 157 1 270 1 18 1 192 1 163 1 61 1 273 1 132 1 24 1 209 1 301 2 135 1 93 1 95 1 96 1 
117 1 
201 1 
234 1 73 1 71 1 2 1 81 1 129 1 271 1 136 1 170 1 283 1 173 1 211 1 141 1 296 1 186 1 17 1 108 1 190 1 257 1 193 1 151 1 267 1 
73 1 55 1 252 1 145 2 270 2 186 1 80 1 242 1 18 1 188 1 110 1 20 1 5 1 61 1 283 1 96 1 267 1 
155 2 73 2 234 1 2 1 240 2 82 1 81 1 168 1 177 1 98 1 101 1 15 1 186 2 17 1 108 1 111 2 257 1 190 1 193 8 259 1 265 1 197 1 267 2 122 1 205 2 129 1 271 2 46 1 276 5 136 5 283 2 139 5 211 1 141 5 144 2 296 3 225 1 227 2 151 6 66 1 
155 2 234 1 141 1 73 1 39 1 2 1 240 1 186 1 81 1 205 1 19 1 190 1 257 1 127 1 129 1 193 2 283 1 211 1 304 1 53 1 267 1 
100 1 73 1 141 1 186 1 193 1 271 1 133 1 136 1 283 1 267 1 
155 2 141 5 144 2 158 1 296 5 240 2 225 1 205 2 111 2 227 2 193 5 276 5 151 10 136 5 139 5 
234 1 2 1 17 1 81 1 108 1 190 1 257 1 129 1 271 1 136 1 211 1 
141 1 73 1 55 2 252 2 186 1 255 1 81 1 17 1 18 2 108 2 109 1 160 1 257 1 193 1 61 2 168 1 283 1 66 1 267 1 
234 1 74 1 211 1 190 1 
141 2 73 1 296 2 186 1 4 1 193 1 271 2 276 2 168 1 151 4 136 4 283 1 139 2 66 1 267 1 
194 1 72 1 102 1 278 1 40 1 
194 1 40 1 232 1 
194 1 40 1 232 1 
194 1 40 1 232 1 
194 1 27 1 40 1 
194 1 27 1 40 1 
194 1 27 1 40 1 
194 1 40 1 
105 1 125 1 
0 2 199 2 39 1 202 1 240 1 122 1 126 2 205 2 4 1 128 1 46 1 131 1 277 1 280 1 247 5 7 1 53 1 101 1 292 1 15 2 58 1 111 1 258 6 227 1 266 11 304 1 
0 3 199 2 39 1 202 1 240 1 122 1 126 4 205 2 4 1 128 1 46 1 131 2 277 2 280 2 247 5 7 2 53 1 101 1 292 1 11 1 15 2 58 1 111 1 226 1 258 6 227 1 266 11 304 1 
0 4 199 3 39 1 122 1 240 3 126 6 82 1 205 3 4 1 128 1 46 1 131 3 277 3 280 3 247 10 92 1 7 3 53 1 177 1 98 1 101 1 292 1 11 1 144 2 15 1 58 1 226 1 111 2 258 9 227 2 197 1 266 19 304 1 
0 5 199 3 39 1 122 1 240 2 126 6 82 1 205 3 4 1 128 1 46 1 131 3 277 3 280 3 247 7 92 1 7 3 53 1 177 1 98 1 101 1 292 1 11 1 144 1 15 1 58 1 226 2 111 2 258 10 227 2 197 1 266 17 304 1 
0 2 199 2 39 1 202 1 240 1 122 1 126 2 205 2 4 1 128 1 46 1 131 1 277 1 280 1 247 5 7 1 53 1 101 1 292 1 15 2 58 1 111 1 258 6 227 1 266 11 304 1 
0 2 199 1 122 1 240 2 126 2 82 1 205 2 46 1 131 1 277 1 280 1 247 6 7 1 177 1 98 1 101 1 144 2 15 1 58 1 226 1 111 2 258 6 227 2 197 1 266 12 
0 5 199 3 39 1 122 1 240 2 126 8 82 1 205 3 4 1 128 1 46 1 131 4 277 4 280 4 247 8 92 2 7 4 53 1 98 1 177 1 101 1 292 1 11 1 144 1 15 1 58 1 226 2 111 2 258 10 227 2 197 1 266 18 304 1 
0 6 199 3 121 1 122 1 240 2 126 8 82 1 205 3 46 1 131 4 277 4 280 4 247 7 92 2 7 4 98 1 177 1 101 1 144 2 15 1 58 1 226 3 111 3 258 9 227 3 197 1 266 16 
292 2 0 6 199 3 39 1 240 1 205 1 226 3 128 1 258 3 247 4 266 7 304 3 53 3 
0 4 199 3 39 1 121 1 122 1 240 2 126 8 82 1 205 3 4 1 128 1 46 1 131 4 277 4 280 4 247 8 92 2 7 4 53 1 98 1 177 1 101 1 292 1 144 1 15 1 58 1 226 1 111 2 258 10 227 2 197 1 266 18 304 1 
0 3 292 1 199 2 39 1 240 1 126 4 205 1 4 1 226 1 258 4 128 1 131 2 277 2 280 2 247 4 92 1 7 2 266 8 304 1 53 1 
201 1 
0 2 199 1 144 1 11 1 240 1 126 2 205 1 111 1 226 1 227 1 258 2 131 1 277 1 280 1 247 2 7 1 266 4 
101 1 0 2 199 1 144 1 202 1 240 1 15 2 122 1 205 1 111 1 226 1 258 3 227 1 247 4 266 7 
0 9 199 5 39 1 202 1 122 2 203 1 240 3 126 4 205 3 4 1 128 1 131 2 277 2 280 2 247 12 92 2 249 1 7 2 53 2 292 1 144 2 15 2 226 4 111 2 227 2 258 11 266 23 153 1 304 2 
247 1 15 1 266 1 
258 1 122 1 266 1 
0 3 199 2 11 1 144 1 158 1 240 1 126 2 205 1 111 1 226 1 227 1 258 3 131 1 277 1 280 1 247 3 7 1 266 6 
0 2 199 1 122 1 240 2 126 2 82 1 205 2 46 1 131 1 277 1 280 1 247 6 7 1 177 1 98 1 101 1 144 2 15 1 58 1 226 1 111 2 258 6 227 2 197 1 266 12 
0 2 199 1 39 1 240 1 205 1 226 1 258 3 247 3 266 6 304 1 53 1 
0 2 292 1 199 1 126 2 226 1 258 1 128 1 131 1 277 1 280 1 247 2 249 1 92 1 7 1 266 3 304 1 53 1 
0 5 199 3 39 1 240 2 58 1 126 2 205 2 127 1 226 2 258 5 131 1 277 1 280 1 247 5 7 1 266 10 304 2 53 2 
0 1 58 1 126 2 205 1 226 1 227 1 258 2 131 1 277 1 280 1 7 1 266 2 
0 2 199 1 144 1 240 1 58 1 126 2 205 1 111 1 226 1 227 1 258 2 131 1 277 1 280 1 247 2 7 1 266 4 
0 2 199 1 121 1 58 1 126 6 226 1 258 1 131 3 277 3 280 3 247 2 92 1 249 1 7 3 266 3 304 1 53 1 
0 12 199 7 39 2 202 1 41 1 121 1 122 3 240 5 126 10 205 5 4 1 128 1 131 5 277 5 280 5 247 18 249 1 92 2 137 1 7 5 53 3 101 1 292 1 11 1 144 3 106 1 15 4 58 1 111 3 226 5 258 16 227 3 266 34 304 3 
221 1 182 1 43 1 244 1 260 1 90 1 29 1 52 1 198 1 
8 1 103 1 150 1 35 1 214 1 
61 1 55 1 252 1 201 1 18 1 
275 1 211 1 
275 1 211 1 
275 1 211 1 
234 1 55 1 75 1 145 2 2 1 81 2 18 1 108 1 161 1 190 1 257 2 110 1 129 1 271 1 61 1 25 1 91 1 136 1 211 1 
234 1 236 1 75 1 2 1 270 1 81 2 242 1 161 1 129 1 271 1 136 1 211 1 96 1 55 1 145 4 18 1 108 1 190 1 110 1 257 2 21 1 20 1 61 1 25 1 64 1 
55 1 270 1 18 1 243 1 61 1 96 1 
55 1 252 1 37 1 77 1 145 1 270 2 18 1 242 1 5 1 20 1 61 1 96 1 288 1 
275 1 211 1 
155 2 234 1 73 1 120 1 39 1 2 1 240 2 81 1 205 1 127 1 129 1 271 1 133 1 136 1 283 1 211 1 53 1 100 1 141 2 55 1 216 1 252 1 186 1 18 1 109 1 190 1 257 1 193 4 61 1 304 1 267 1 
291 1 55 1 145 2 270 2 18 1 188 1 242 1 243 1 5 1 20 1 61 1 25 1 96 1 
293 1 55 2 37 1 237 1 252 1 77 1 145 2 270 3 18 2 242 2 20 1 61 2 230 1 88 1 96 2 289 1 
55 1 293 1 237 1 37 1 77 1 145 1 270 2 18 1 242 1 20 1 61 1 96 1 233 1 
55 1 252 1 270 1 18 1 61 1 135 1 301 1 93 1 95 1 96 1 
55 2 145 1 270 1 184 1 18 2 242 1 61 2 230 1 209 1 176 1 96 1 
269 1 237 1 37 1 77 1 270 4 242 3 124 1 88 1 96 3 176 1 289 1 55 3 293 1 252 1 145 4 18 3 20 1 61 2 230 1 
269 1 237 1 37 1 77 1 270 4 242 3 88 1 96 3 176 1 289 1 55 3 293 1 57 1 252 1 145 4 18 3 20 1 61 2 230 1 
275 1 211 1 
55 1 37 1 77 1 75 1 145 1 270 2 18 1 242 1 5 1 20 1 61 1 96 1 288 1 
201 1 
6 1 134 1 28 1 220 1 282 1 31 1 112 1 
167 1 220 1 213 1 
295 1 220 2 298 1 112 1 6 1 134 1 281 1 28 1 51 1 282 1 31 2 264 1 305 1 
6 1 10 1 134 1 28 1 220 2 282 1 31 2 116 1 112 1 
70 1 220 1 298 1 112 1 6 1 134 1 63 1 301 1 93 1 31 1 171 1 
6 1 134 1 28 1 220 1 31 1 298 1 112 1 
6 1 134 1 28 2 220 1 282 1 31 1 298 1 
253 1 220 2 14 1 298 1 83 1 112 1 6 2 134 2 28 1 31 2 
215 1 220 3 107 1 298 1 112 2 6 1 165 1 134 1 28 1 282 1 31 3 171 1 116 2 
70 1 220 2 298 1 112 1 6 1 207 1 132 1 134 1 28 1 282 1 135 1 301 2 93 1 31 2 116 1 
215 1 10 1 220 4 298 1 112 2 130 1 6 2 134 2 28 1 282 1 31 4 171 1 116 2 
6 1 134 1 28 1 220 1 282 1 31 1 298 1 112 1 
215 1 295 1 220 4 112 3 6 1 134 1 28 2 282 2 51 1 264 1 31 4 171 1 305 1 116 2 
220 2 298 1 42 1 112 1 6 1 134 1 28 1 282 1 31 2 285 1 287 1 116 1 
295 2 220 3 298 1 112 1 6 1 228 1 134 1 28 1 282 1 264 1 31 3 305 2 
274 1 223 2 33 1 112 2 
6 1 134 1 279 1 220 1 31 1 298 1 
6 1 134 1 28 1 220 2 282 1 107 1 31 2 298 1 116 1 112 1 
118 1 
6 1 134 1 28 1 220 1 282 1 31 1 298 1 112 1 
6 1 295 1 134 1 28 1 220 3 282 1 107 1 31 3 298 1 116 1 112 1 
215 1 51 1 171 1 112 1 
28 1 112 1 

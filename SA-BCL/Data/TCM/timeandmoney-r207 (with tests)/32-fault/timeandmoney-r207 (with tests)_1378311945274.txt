#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (202,334) 264 (41,70) (41,70) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (202,334) 264 (41,70) (41,70) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (202,334) 264 (41,70) (41,70) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (202,334) 264 (41,70) (41,70) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (66,178) (106,243) (106,243) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 358 333 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 274 225 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 358 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (66,178) (66,178) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 362 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (66,178) (106,243) (106,243) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (66,178) (106,243) (106,243) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (66,178) (106,243) (106,243) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 362 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 362 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 358 333 240 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 272 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 272 330 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 56 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
323 1 29 1 202 1 264 1 137 1 177 1 126 1 70 1 41 1 50 1 192 1 
323 1 29 1 202 1 264 1 137 1 177 1 126 1 70 1 41 1 50 1 192 1 
323 1 29 1 202 1 264 1 137 1 177 1 126 1 70 1 41 1 50 1 192 1 
323 1 29 1 202 1 264 1 137 1 177 1 126 1 70 1 41 1 50 1 192 1 
323 4 176 1 0 1 265 1 266 2 345 1 198 1 50 1 29 1 360 3 200 3 317 2 137 1 16 1 147 1 54 1 192 4 278 1 
323 2 0 1 265 1 242 1 345 1 354 1 89 1 177 1 50 1 29 1 200 1 137 1 126 1 16 1 206 1 192 2 
323 9 0 1 345 1 146 1 16 1 147 3 192 9 176 1 266 2 265 1 177 1 68 1 69 1 196 1 50 2 198 1 29 2 334 1 360 7 200 5 317 4 137 1 54 1 278 1 
323 9 0 1 345 1 146 1 16 1 147 3 192 9 176 1 266 2 265 1 177 1 68 1 69 1 196 1 50 2 198 1 29 2 334 1 360 7 200 5 317 4 137 1 54 1 278 1 
323 3 0 1 177 1 50 2 29 2 334 1 200 2 360 1 317 1 137 1 16 1 147 1 192 3 
56 1 101 1 246 1 
186 1 217 2 246 1 
285 2 256 2 257 2 298 1 75 2 363 2 6 1 129 2 
208 2 298 1 75 2 167 1 252 2 77 1 6 1 184 1 120 1 81 2 256 2 255 1 257 3 169 2 304 1 236 1 103 1 173 1 129 3 310 1 285 2 45 1 288 1 134 2 244 1 357 1 135 1 290 1 223 1 179 1 180 1 363 2 336 1 337 1 227 1 321 1 163 1 
285 1 256 1 257 1 75 1 363 1 6 1 314 1 129 1 
285 1 325 1 40 1 118 1 246 1 271 1 257 1 101 1 219 1 94 1 15 1 205 1 190 1 129 1 
285 1 325 1 75 1 40 1 118 1 246 1 271 1 256 1 257 1 101 1 219 1 363 1 15 2 205 2 129 1 
31 1 161 1 15 1 205 1 51 1 
303 1 101 1 161 1 4 1 15 2 205 2 246 1 51 1 
161 1 15 1 205 1 
285 1 75 1 342 1 6 1 314 1 51 1 256 1 257 1 363 1 15 1 205 1 129 1 
246 1 
101 1 161 1 4 1 15 2 205 2 183 1 246 1 51 1 
75 1 342 1 4 1 6 1 300 2 43 2 7 2 253 4 256 1 257 1 235 1 101 1 62 1 351 4 15 5 129 1 285 1 239 1 151 1 46 2 23 2 331 1 332 1 314 1 356 1 246 1 51 2 275 1 161 2 363 1 162 2 205 5 71 1 320 1 72 1 366 1 
56 1 298 1 
285 2 75 1 298 1 42 1 271 1 111 1 256 1 257 2 145 1 363 1 129 2 
285 5 75 4 298 1 241 1 291 1 111 1 256 4 257 5 168 1 363 1 293 1 190 1 308 2 129 5 
271 1 285 1 256 1 257 1 75 1 3 1 129 1 
285 1 38 1 208 1 45 1 75 1 134 1 252 1 77 1 184 1 256 1 257 2 304 1 293 1 336 1 337 1 227 1 173 1 308 1 129 2 163 1 
38 1 139 1 269 1 
208 1 298 1 45 1 134 1 252 1 77 1 184 1 257 1 304 1 336 1 337 1 227 1 129 1 173 1 262 1 163 1 
285 3 256 3 257 3 298 1 75 3 363 1 308 1 129 3 
271 1 285 1 256 1 257 1 75 1 3 1 129 1 
285 1 75 1 271 1 111 1 256 1 257 1 145 1 363 1 129 1 
325 1 6 1 184 1 236 1 103 1 15 1 285 3 244 1 111 1 293 1 336 1 337 1 205 1 163 1 340 1 208 1 75 3 298 1 167 1 40 1 252 1 118 1 77 1 42 1 120 1 256 3 81 2 257 4 169 1 304 1 219 1 308 1 129 4 173 1 310 1 45 1 134 1 357 1 223 1 271 2 179 1 224 1 363 2 227 1 321 1 
285 2 75 1 298 1 42 1 271 1 291 1 256 1 257 2 190 1 308 1 129 2 
285 3 325 1 75 3 40 1 118 1 246 1 271 1 111 1 256 3 302 1 257 3 219 1 224 1 363 1 293 1 15 1 205 1 308 2 129 3 
285 2 38 1 75 2 111 1 256 2 257 2 139 1 363 1 308 1 129 2 
208 1 298 1 45 1 134 1 252 1 77 1 184 1 257 1 304 1 336 1 337 1 227 1 129 1 163 1 173 1 
208 1 298 1 45 1 134 1 252 1 77 1 184 1 257 1 283 1 304 1 350 1 337 1 129 1 163 1 173 1 
38 2 326 1 120 1 58 1 81 2 169 3 61 1 236 1 149 1 310 1 152 1 49 1 244 1 269 2 90 1 357 1 290 2 315 1 274 1 179 1 139 2 162 1 321 1 
285 1 325 1 75 1 271 1 256 1 257 1 148 1 129 1 
65 1 232 1 
65 1 232 1 
85 1 12 1 
85 1 12 1 
85 1 12 1 
65 1 171 1 232 1 
85 1 65 2 113 1 12 1 232 2 128 1 
65 1 232 1 226 1 
65 1 171 1 232 1 
65 1 171 1 232 1 
65 1 232 1 5 1 
65 1 232 1 5 1 
65 1 232 1 5 1 
193 2 106 1 86 2 117 2 165 1 133 1 195 1 243 1 246 1 178 1 138 2 15 2 205 2 18 2 
193 1 86 1 285 1 165 1 117 1 75 1 98 1 213 1 333 1 222 1 358 1 256 1 257 1 138 1 15 1 205 1 18 1 129 1 
265 1 345 1 278 1 
265 1 345 1 242 1 
348 1 297 1 345 3 242 1 245 1 278 2 
297 1 345 2 242 1 245 1 309 1 278 1 
297 2 345 2 242 1 245 1 278 1 
39 2 98 1 213 1 4 1 346 2 300 1 43 1 7 1 253 2 280 1 186 1 11 2 217 3 101 1 351 2 15 5 312 1 152 1 151 1 25 1 51 4 246 2 222 1 274 1 92 1 161 1 162 1 225 1 205 5 35 1 229 1 
75 1 342 1 98 1 4 1 346 1 6 1 300 1 43 1 7 1 253 2 234 1 256 1 11 1 257 1 217 1 101 1 351 1 15 5 129 1 312 1 285 1 152 1 151 1 24 2 314 1 51 4 246 1 27 1 31 2 92 1 161 3 363 1 162 1 225 1 205 5 229 1 
39 1 98 1 346 2 300 1 43 1 7 1 280 1 253 2 186 2 11 2 101 1 217 4 351 2 15 3 312 1 152 1 25 1 356 1 246 3 51 2 274 1 225 1 162 1 205 3 229 1 
39 2 98 2 346 4 300 1 43 1 7 1 280 1 253 4 186 3 11 4 101 1 217 7 125 1 351 3 15 4 307 1 312 1 152 2 25 1 356 1 246 4 51 3 316 1 274 2 225 2 162 2 205 4 229 1 
56 1 173 1 19 1 
185 1 173 1 
188 1 
337 1 77 1 173 1 
249 1 173 1 
337 1 173 1 
60 1 337 1 77 1 108 1 19 2 173 3 
209 2 46 1 230 1 289 1 197 1 290 4 122 1 281 1 235 1 169 7 179 3 61 2 62 1 162 1 95 1 320 1 149 3 
209 2 46 1 230 1 289 1 197 1 290 4 122 1 281 1 235 1 169 7 179 3 61 2 62 1 162 1 95 1 320 1 149 3 
286 1 209 2 46 1 289 1 230 1 197 1 290 4 122 1 281 1 235 1 169 7 179 3 61 2 62 1 162 1 95 1 320 1 149 3 
209 1 99 1 120 1 80 1 122 2 81 2 281 1 169 6 61 1 236 1 62 1 149 2 21 1 175 1 67 1 244 1 197 1 290 3 179 3 95 1 276 1 320 1 228 1 321 1 
209 2 46 1 289 1 230 1 244 2 290 5 120 2 122 1 112 1 281 1 136 1 81 4 235 1 169 9 61 3 179 4 62 1 236 2 162 1 95 1 320 1 276 1 149 4 321 2 
323 2 208 1 327 1 0 1 345 2 252 1 2 1 214 1 233 1 10 1 348 1 102 1 304 1 63 1 16 1 237 1 192 2 238 1 45 1 265 1 134 1 242 1 177 1 50 1 29 1 200 1 360 1 359 1 137 1 278 1 
323 3 208 1 327 1 0 1 345 2 252 1 1 1 2 1 214 1 233 1 348 1 102 1 304 1 63 1 127 1 16 1 237 1 192 3 238 1 45 1 265 1 134 1 242 1 177 1 50 1 158 1 29 1 200 1 360 2 278 1 
323 2 208 1 327 1 0 1 345 2 252 1 1 1 214 1 233 1 348 1 102 1 304 1 16 1 237 1 192 2 238 1 45 1 265 1 134 1 242 1 177 1 158 1 200 1 360 2 278 1 
323 1 207 1 208 1 327 2 212 1 252 1 142 1 77 1 79 1 258 1 304 2 170 1 127 1 64 1 104 1 237 2 192 1 191 1 173 2 238 2 174 1 45 1 134 1 177 2 50 1 270 1 29 1 292 1 337 2 163 1 
323 1 238 1 208 1 45 1 327 1 265 1 345 2 242 1 134 1 2 1 252 1 177 1 214 1 50 1 233 1 158 1 29 1 348 1 359 1 304 1 102 1 63 1 137 1 237 1 192 1 278 1 
84 1 
208 2 212 1 252 2 4 1 77 1 300 1 79 1 43 1 7 1 253 1 304 2 170 1 349 1 351 1 15 2 64 1 173 2 191 1 174 1 45 1 151 1 134 2 48 1 107 1 161 2 337 2 205 2 163 2 229 1 
296 1 324 1 325 1 40 1 4 1 118 1 216 1 183 1 257 1 219 1 15 3 190 1 129 1 285 1 150 2 26 1 271 1 93 1 94 1 161 2 204 1 205 3 
296 1 324 1 325 1 40 1 118 1 4 1 216 1 183 1 257 1 101 1 219 1 15 3 190 1 129 1 285 1 150 3 26 1 246 1 271 1 93 1 161 1 94 1 364 1 205 3 
296 1 324 1 325 1 57 1 40 1 4 1 118 1 183 1 216 1 257 1 101 1 219 1 15 3 190 1 129 1 285 1 150 3 26 1 246 1 271 1 93 1 94 1 161 2 204 1 364 1 205 3 
296 1 324 1 325 1 75 1 57 1 342 1 40 1 4 1 118 1 6 1 216 1 183 1 256 1 257 2 101 1 219 1 15 3 190 1 129 2 285 2 150 2 26 1 156 1 314 1 246 1 271 1 93 1 94 1 161 2 363 1 204 1 205 3 
296 1 324 1 325 1 40 1 299 1 118 1 216 1 300 1 43 1 7 1 253 1 257 1 219 1 351 1 15 2 190 1 129 1 311 1 285 1 150 2 22 1 151 1 26 1 109 1 271 1 93 1 94 1 205 2 
296 1 324 1 325 1 75 1 342 1 40 1 118 1 6 1 215 1 216 1 300 1 43 1 7 1 253 1 256 1 257 2 101 1 219 1 351 1 15 2 190 1 129 2 311 1 285 2 150 2 151 1 26 1 314 1 246 1 271 1 93 1 94 1 363 1 205 2 248 1 
296 1 324 1 325 1 75 1 342 1 40 1 118 1 6 1 215 1 216 1 300 1 43 1 7 1 253 1 256 1 257 2 101 1 219 1 351 1 15 2 190 1 129 2 311 1 285 2 150 2 151 1 26 1 314 1 246 1 271 1 93 1 94 1 363 1 205 2 248 1 
325 1 324 1 57 2 4 2 6 1 7 1 101 1 14 1 15 4 17 1 190 1 285 2 150 4 151 1 22 1 26 1 246 1 109 2 201 2 161 4 204 2 205 4 296 1 75 1 342 1 40 1 299 2 118 1 300 1 216 1 43 1 253 1 121 2 256 1 257 2 217 2 219 1 351 1 129 2 267 1 314 1 271 1 93 1 94 1 363 1 364 2 141 1 
296 1 324 1 325 1 75 1 57 1 342 1 40 1 118 1 6 1 215 1 300 1 216 1 43 1 7 1 253 1 256 1 257 2 101 1 219 1 351 1 15 2 190 1 129 2 311 1 285 2 150 3 151 1 26 1 314 1 246 1 271 1 93 1 203 1 94 1 161 1 363 1 204 1 364 1 205 2 248 1 
296 1 324 1 325 1 75 1 57 1 342 1 40 1 118 1 6 1 215 1 300 1 216 1 43 1 7 1 253 1 256 1 257 2 101 1 219 1 351 1 15 2 190 1 129 2 311 1 285 2 150 3 151 1 26 1 314 1 246 1 271 1 93 1 203 1 94 1 161 1 363 1 204 1 364 1 205 2 248 1 
325 1 324 1 57 2 4 2 7 1 101 1 15 4 17 1 190 1 285 1 150 4 151 1 22 1 26 1 246 1 109 2 201 2 161 4 204 2 205 4 296 1 40 1 299 2 118 1 300 1 216 1 119 1 43 1 253 1 121 2 257 1 217 2 219 1 351 1 129 1 271 1 93 1 94 1 364 2 
38 1 209 1 56 1 298 2 46 1 230 1 289 1 244 1 269 1 357 1 290 3 120 1 315 1 81 2 235 1 169 6 179 3 61 2 236 1 62 1 139 1 162 1 320 1 149 2 321 1 310 1 
38 16 298 1 99 1 120 2 347 1 281 2 81 4 169 20 259 1 61 2 236 2 103 1 352 1 149 4 310 2 21 4 152 4 288 1 67 4 244 2 269 16 357 1 290 13 160 1 274 2 179 7 139 6 140 2 225 4 162 4 321 2 36 2 
208 1 298 1 75 1 252 1 77 1 184 1 78 1 120 1 256 1 81 2 257 2 169 2 304 1 259 1 236 1 103 1 173 1 262 1 129 2 308 1 310 1 285 1 45 1 132 1 288 1 134 1 244 1 357 1 290 1 159 1 179 1 336 1 139 1 293 1 337 1 227 1 163 1 321 1 
208 1 210 1 75 1 167 1 343 1 252 1 77 1 184 1 120 2 256 1 81 4 257 2 169 1 304 1 259 1 236 2 305 1 103 1 173 1 129 2 308 1 310 2 285 1 87 1 45 1 134 1 244 2 357 2 179 1 336 1 293 1 337 1 227 1 321 2 163 1 
38 1 75 1 120 1 81 2 256 1 257 1 169 2 61 1 259 1 236 1 260 1 149 1 129 1 310 1 285 1 152 1 244 1 269 1 357 1 290 1 111 1 274 1 179 1 139 1 363 1 225 1 162 1 321 1 
208 2 212 1 252 2 77 1 79 1 120 1 81 2 169 2 304 2 170 1 236 1 103 1 64 1 173 2 191 1 310 1 174 1 45 1 288 1 134 2 244 1 357 1 135 1 290 1 114 1 361 1 179 1 337 2 163 1 321 1 
38 1 152 1 244 1 269 1 90 1 357 1 120 1 290 2 315 1 281 1 81 2 169 2 236 1 139 1 162 1 149 1 321 1 310 1 
38 1 244 1 49 1 269 1 357 1 120 1 315 1 81 2 274 1 169 1 61 1 179 1 236 1 139 1 149 1 321 1 310 1 
38 2 152 1 244 1 269 2 357 1 120 1 290 2 315 1 281 1 81 2 274 1 169 3 61 1 179 1 236 1 139 2 225 1 162 1 149 2 321 1 310 1 
38 1 152 1 244 1 269 1 90 1 357 1 120 1 290 2 281 1 81 2 169 2 361 1 236 1 139 1 162 1 149 1 321 1 310 1 
38 1 244 1 49 1 269 1 357 1 120 1 81 2 274 1 169 1 61 1 361 1 179 1 236 1 139 1 149 1 321 1 310 1 
38 2 152 1 244 1 269 2 357 1 120 1 290 2 281 1 81 2 274 1 169 3 61 1 179 1 361 1 236 1 139 2 225 1 162 1 149 2 321 1 310 1 
38 2 152 1 244 1 269 2 357 1 120 1 290 2 281 1 81 2 274 1 169 3 61 1 179 1 236 1 139 2 225 1 162 1 149 2 321 1 310 1 
208 1 298 1 167 1 252 1 77 1 184 1 120 1 81 2 257 1 169 2 304 1 236 1 103 1 173 1 129 1 310 1 45 1 288 1 134 1 244 1 357 1 290 1 179 1 336 1 337 1 227 1 163 1 321 1 
208 1 298 1 252 1 77 1 184 1 120 1 81 2 283 1 257 1 169 2 304 1 236 1 103 1 350 1 173 1 129 1 310 1 130 1 45 1 288 1 134 1 244 1 357 1 290 1 179 1 337 1 163 1 321 1 
38 2 152 1 244 1 269 2 357 1 120 1 290 2 281 1 81 2 274 1 169 3 61 1 179 1 259 1 236 1 139 2 225 1 162 1 149 2 321 1 310 1 
38 2 208 1 210 1 167 1 252 1 77 1 184 1 120 1 281 1 10 1 81 2 257 1 169 3 61 1 304 1 236 1 149 2 173 1 129 1 310 1 152 1 45 1 134 1 244 1 269 2 357 1 290 2 274 1 179 1 139 2 336 1 162 1 337 1 225 1 227 1 321 1 
38 1 75 1 120 1 81 2 256 1 257 1 169 3 259 1 236 1 129 1 310 1 285 1 152 1 244 1 269 1 357 1 157 1 290 2 111 1 274 1 179 1 363 1 139 1 225 1 162 1 321 1 
37 1 209 1 230 1 328 3 99 2 120 4 143 1 144 1 254 1 281 3 81 8 187 1 83 1 235 1 59 1 169 30 61 3 62 1 236 4 13 1 149 6 21 2 44 1 152 3 46 1 289 1 194 1 67 2 244 4 290 17 136 1 274 3 179 13 365 1 225 3 162 4 319 1 320 1 276 2 321 4 73 1 
37 1 328 4 99 2 120 3 143 1 254 1 281 4 81 6 187 1 83 1 59 2 169 40 61 4 236 3 13 1 261 1 149 8 21 4 44 1 152 7 194 1 67 4 244 3 290 24 136 1 274 6 179 16 365 1 140 2 225 7 162 7 276 2 321 3 73 2 36 2 
230 2 328 4 99 3 143 1 144 1 9 1 281 7 187 1 59 1 235 2 61 6 236 4 62 2 13 1 149 13 21 5 152 7 194 1 289 2 67 5 244 4 290 33 162 9 36 2 73 2 37 1 209 2 120 4 254 1 81 8 83 1 169 55 261 1 44 1 46 2 136 1 274 5 179 22 140 2 225 7 365 1 276 2 320 2 321 4 
37 1 209 1 230 1 328 4 99 2 120 4 143 1 144 1 254 1 281 3 81 8 187 1 83 1 235 1 59 1 169 32 61 2 62 1 236 4 13 1 261 1 149 5 21 2 44 1 152 3 46 1 289 1 194 1 67 2 244 4 290 18 136 1 274 3 179 14 365 1 225 3 162 4 320 1 276 2 321 4 73 1 
37 1 209 1 230 1 328 4 99 2 120 3 143 1 254 1 281 3 81 6 187 1 83 1 235 1 59 1 169 38 61 5 62 1 236 3 13 1 261 1 149 8 21 3 44 1 152 5 46 1 289 1 194 1 67 3 244 3 290 22 136 1 274 4 179 16 365 1 225 5 162 6 140 1 320 1 276 2 321 3 73 1 36 1 
358 1 
193 1 86 1 117 1 189 1 138 1 
193 1 86 1 117 1 66 1 178 1 138 1 
322 1 
362 1 
193 1 106 1 86 1 165 1 117 1 133 1 195 1 243 1 246 1 178 1 138 1 15 1 205 1 18 2 
193 1 106 1 86 1 165 1 117 1 133 1 195 1 243 1 246 1 178 1 138 1 15 1 205 1 18 2 
193 1 106 1 86 1 165 1 117 1 133 1 195 1 243 1 246 1 178 1 138 1 15 1 205 1 18 2 
322 1 
322 1 
362 1 
362 1 
341 1 220 1 
193 1 86 1 117 1 240 1 98 1 133 1 195 1 213 1 51 1 333 1 222 1 358 1 138 1 15 1 205 1 18 1 
208 2 279 1 251 1 252 2 120 1 8 1 81 2 257 2 169 2 304 1 259 1 236 1 103 1 173 1 129 2 310 1 285 2 45 1 131 1 288 1 134 2 244 1 357 1 135 2 290 1 52 1 115 1 114 1 179 1 337 1 321 1 
238 1 208 2 45 1 265 1 345 2 242 1 134 2 313 1 252 2 231 1 158 1 233 1 10 1 348 1 304 1 102 1 63 1 116 1 278 1 
238 1 208 1 45 1 265 1 345 2 242 1 134 1 252 1 231 1 158 1 233 1 348 1 102 1 304 1 63 1 278 1 221 1 
208 1 212 1 252 1 77 1 79 1 282 1 304 2 170 1 64 1 191 1 173 2 238 1 174 1 45 1 134 1 270 1 116 1 292 1 337 2 163 1 
238 1 208 1 45 1 265 1 345 2 242 1 134 1 313 1 252 1 231 1 158 1 233 1 348 1 304 1 102 1 63 1 116 1 278 1 
339 1 
56 1 71 1 72 1 
151 1 351 1 300 1 43 1 7 1 253 1 311 1 
208 1 45 1 151 1 134 1 252 1 77 1 300 1 7 1 43 1 110 1 185 1 60 1 304 2 351 1 337 1 353 1 173 2 163 1 229 1 
4 1 99 1 346 8 300 2 301 1 43 2 7 2 253 8 254 1 186 5 11 8 101 2 217 10 13 1 351 9 15 1 21 2 44 1 151 2 152 4 23 3 194 1 67 2 332 1 107 1 246 7 274 4 161 1 365 1 225 4 162 4 140 1 205 1 96 1 229 1 36 1 
75 1 342 1 215 1 6 1 300 1 43 1 7 1 253 2 256 1 257 1 235 1 62 1 351 2 15 1 129 1 285 1 151 1 23 2 46 1 331 1 332 1 314 1 363 1 162 2 320 1 205 1 
151 1 72 1 300 1 43 1 7 1 
152 2 23 2 332 1 346 5 246 5 253 5 186 5 273 1 11 5 217 10 274 2 351 3 225 2 162 2 
101 1 161 1 4 1 15 1 205 1 246 1 
208 2 212 1 252 2 4 1 77 1 300 1 79 1 43 1 7 1 253 1 82 1 304 2 170 1 349 1 351 1 15 1 64 1 173 2 191 1 174 1 45 1 151 1 134 2 48 1 107 1 161 2 337 2 205 1 163 2 229 1 
208 1 298 1 75 2 167 1 252 1 6 1 77 1 184 1 120 1 81 2 256 2 257 3 169 1 304 1 236 1 103 1 129 3 173 1 310 1 285 2 45 1 134 1 244 1 357 1 223 1 179 1 363 2 336 1 337 1 227 1 321 1 163 1 
209 1 151 1 346 2 300 1 107 1 7 1 43 1 246 4 253 2 186 2 11 2 217 4 101 2 351 1 229 1 
193 1 117 1 20 1 
193 1 55 1 117 1 218 1 220 1 
193 1 117 1 20 1 
193 1 117 1 20 1 
193 1 117 1 295 1 
193 1 117 1 295 1 
193 1 117 1 295 1 
193 1 117 1 
65 1 232 1 
209 1 46 1 230 1 289 1 244 2 290 4 120 2 281 1 81 4 235 1 169 8 179 4 61 2 236 2 62 1 162 1 276 1 320 1 149 3 321 2 
209 1 56 1 46 1 230 1 289 1 290 3 235 1 169 6 179 3 61 2 62 1 162 1 320 1 149 2 
152 1 329 1 244 1 120 1 290 2 81 2 281 1 274 1 169 3 61 1 179 1 236 1 225 1 162 1 149 2 321 1 
21 2 152 2 67 2 99 1 290 6 281 1 169 10 274 2 179 4 61 1 140 1 225 2 162 2 149 2 36 1 
209 1 230 1 120 2 281 4 81 4 235 1 169 21 61 5 62 2 236 2 149 9 21 2 175 1 152 2 46 1 289 1 67 2 244 2 290 11 160 1 274 2 179 10 162 3 225 2 140 1 320 2 276 2 321 2 36 1 
21 1 169 1 179 1 
169 1 67 1 290 1 
152 1 329 1 244 1 120 1 290 3 81 2 281 1 273 1 169 5 274 1 179 2 61 1 236 1 225 1 162 1 321 1 149 2 
99 1 120 1 254 1 81 2 281 2 169 18 61 2 236 1 13 1 149 4 21 2 44 1 152 4 194 1 67 2 244 1 290 11 136 1 274 4 179 7 365 1 225 4 162 4 140 1 321 1 36 1 
46 1 290 3 281 1 235 1 169 6 179 3 61 1 62 1 162 1 320 1 149 2 
175 1 289 1 230 1 244 1 290 1 120 1 281 1 81 2 169 3 61 1 179 2 62 1 236 1 320 1 276 1 149 2 321 1 
46 2 331 1 244 1 120 1 290 5 81 2 136 1 281 2 235 1 169 10 61 3 179 5 236 1 62 2 162 2 320 2 321 1 149 5 
152 1 244 1 120 1 290 2 136 1 81 2 281 1 169 2 236 1 162 1 321 1 149 1 
152 1 244 1 120 1 290 2 136 1 81 2 281 1 274 1 169 3 61 1 179 1 236 1 225 1 162 1 149 2 321 1 
175 1 244 3 120 3 290 1 144 1 136 1 81 6 281 1 169 3 179 2 61 1 236 3 62 1 276 1 320 1 321 3 149 2 
230 1 99 1 329 1 120 4 80 1 144 1 281 3 81 8 235 1 169 15 61 3 236 4 62 2 149 6 21 1 175 1 46 2 289 1 67 1 331 1 244 4 290 7 136 1 179 8 162 2 276 1 320 2 321 4 
209 1 230 1 99 1 120 2 254 1 81 4 281 4 235 2 169 24 61 5 62 2 236 2 13 1 149 9 21 1 44 1 152 2 46 3 289 1 194 1 67 1 331 1 244 2 290 14 136 1 274 1 179 10 365 1 225 2 162 5 320 2 276 1 321 2 
209 1 230 1 99 1 329 1 120 3 254 1 281 1 81 6 235 1 169 16 61 3 62 1 236 3 13 1 149 4 21 1 44 1 152 2 46 1 289 1 194 1 67 1 244 3 290 10 136 1 274 1 179 6 365 1 225 2 162 3 320 1 276 1 321 3 
209 1 230 1 329 1 99 1 120 3 254 1 81 6 281 2 235 1 169 25 61 4 62 1 236 3 13 1 149 6 21 2 44 1 152 4 46 1 289 1 194 1 67 2 244 3 290 14 136 1 274 4 179 11 365 1 225 4 162 5 140 1 320 1 276 1 321 3 36 1 
209 1 230 1 329 1 99 1 120 3 254 1 81 6 281 3 235 1 169 24 61 4 62 1 236 3 13 1 149 7 21 2 44 1 152 4 46 1 289 1 194 1 67 2 244 3 290 15 136 1 274 3 179 9 365 1 225 4 162 5 140 1 320 1 276 1 321 3 36 1 
209 1 230 1 99 1 120 2 254 1 81 4 281 4 235 2 169 24 61 5 62 2 236 2 13 1 149 9 21 1 44 1 152 2 46 3 289 1 194 1 67 1 331 1 244 2 290 14 136 1 274 1 179 10 365 1 225 2 162 5 320 2 276 1 321 2 
99 1 120 1 254 1 81 2 281 2 169 18 61 2 236 1 13 1 149 4 21 2 44 1 152 4 194 1 67 2 244 1 290 11 136 1 274 4 179 7 365 1 225 4 162 4 140 1 321 1 36 1 
209 1 230 1 99 1 329 1 120 4 254 1 81 8 281 3 235 1 169 25 61 4 62 1 236 4 13 1 149 7 21 2 44 1 152 4 46 1 289 1 194 1 67 2 244 4 290 15 136 1 274 3 179 10 365 1 225 4 162 5 140 1 320 1 276 2 321 4 36 1 
99 1 120 2 144 1 81 4 169 6 61 1 236 2 149 1 21 2 152 1 67 1 244 2 290 3 136 1 274 1 179 3 365 1 225 1 162 1 321 2 36 1 
46 1 230 1 289 2 290 3 281 3 235 1 169 7 179 4 61 3 62 3 162 1 320 3 149 6 
99 1 120 2 144 1 81 4 169 6 61 1 236 2 149 1 21 2 152 1 67 1 244 2 290 3 136 1 274 1 179 3 365 1 225 1 162 1 321 2 36 1 
272 1 
272 1 100 1 335 1 263 1 344 1 330 1 
174 1 208 1 56 1 134 1 252 1 337 1 173 1 191 1 163 1 
285 1 208 1 298 1 75 1 45 1 134 1 252 1 77 1 184 1 256 1 257 2 304 1 337 1 227 1 173 1 308 1 129 2 163 1 
74 1 249 1 208 1 325 1 298 1 75 1 252 1 77 2 42 1 184 1 256 2 257 2 304 1 219 1 129 2 308 1 173 3 285 2 45 1 134 1 91 1 271 2 337 2 227 1 
74 1 249 1 208 1 325 1 298 1 75 1 252 1 77 2 42 1 184 1 256 2 257 2 304 1 219 1 350 1 129 2 308 1 173 3 285 2 45 1 134 1 91 1 271 2 337 2 
208 1 75 1 342 1 252 1 6 1 185 1 256 1 257 1 101 1 15 1 173 1 284 1 129 1 285 1 134 1 91 1 314 1 246 1 363 1 205 1 
74 1 249 1 208 2 75 1 342 1 40 1 252 2 6 1 77 1 256 1 185 1 257 1 101 1 304 1 15 2 129 1 19 1 173 4 285 1 45 1 134 2 314 1 91 1 246 1 161 1 247 1 363 1 337 1 205 2 163 1 
199 1 208 1 45 1 304 1 134 1 252 1 
287 1 208 6 45 2 212 1 134 6 251 1 252 5 77 1 135 1 199 1 10 1 30 1 60 1 304 3 170 1 33 1 337 2 105 1 163 2 173 3 
230 1 184 1 10 1 235 1 61 2 236 2 62 1 149 2 285 1 289 1 244 2 290 3 336 1 337 1 162 1 208 1 38 1 209 1 210 1 75 1 298 2 167 1 343 1 252 1 77 1 120 2 81 4 256 1 257 2 169 6 259 1 304 1 308 1 129 2 173 1 310 2 131 1 45 1 46 1 134 1 269 1 357 2 179 3 139 1 227 1 320 1 321 2 
4 1 6 1 7 2 185 1 235 1 101 1 62 1 15 2 285 1 151 2 23 2 331 1 332 1 246 1 28 1 161 1 247 1 338 1 162 2 71 1 205 2 72 1 163 1 208 1 75 1 342 1 252 1 300 2 43 2 253 4 256 1 82 1 257 1 351 4 173 1 129 1 46 2 268 1 134 1 314 1 51 1 363 1 320 1 
208 1 45 1 134 1 252 1 77 1 199 1 188 1 60 1 304 2 337 1 353 1 19 1 173 2 
208 2 174 1 45 1 212 1 134 2 252 2 77 1 79 1 10 1 304 2 170 1 337 2 64 1 163 1 191 1 173 2 
208 2 45 1 212 1 134 2 252 2 77 1 91 1 79 1 124 1 304 2 170 1 337 1 64 1 173 1 
233 1 208 1 45 1 265 1 304 1 345 1 242 1 134 1 252 1 163 1 
208 2 45 1 134 2 252 2 251 1 8 1 158 1 10 1 304 1 337 1 173 1 
285 1 208 1 298 1 75 1 45 1 134 1 252 1 77 1 184 1 256 1 257 2 304 1 350 1 337 1 173 1 308 1 129 2 163 1 
208 1 45 1 212 1 134 1 252 1 77 1 91 1 60 1 304 2 170 1 33 1 337 1 173 1 
208 3 212 1 251 1 252 2 77 1 79 1 10 1 304 3 170 1 64 1 105 1 173 4 191 1 174 1 45 2 134 3 30 1 337 3 163 1 
208 3 212 1 251 1 252 2 77 1 79 1 10 1 304 3 170 1 64 1 173 4 191 1 174 1 45 2 134 3 30 1 318 1 337 3 163 1 
285 1 298 1 279 1 250 1 76 1 42 1 271 1 52 1 257 1 115 1 294 2 129 1 
325 1 75 1 342 1 279 1 250 1 182 1 40 1 76 1 118 1 6 1 256 1 257 2 101 1 219 1 15 2 306 1 129 2 285 2 153 1 314 1 246 1 51 1 271 1 52 1 115 1 224 1 363 1 205 2 294 2 
250 1 76 1 
182 1 153 1 294 1 
200 1 56 1 0 1 16 1 
323 1 29 1 200 1 0 1 16 1 50 1 192 1 
327 1 177 1 192 1 
323 3 181 1 0 1 355 1 50 1 29 1 200 1 137 1 32 1 16 1 192 3 206 2 
323 2 29 1 200 1 360 1 0 1 266 1 16 1 50 1 192 2 
323 1 176 1 265 1 345 1 50 1 29 1 200 1 317 1 137 1 192 1 278 1 
323 1 29 1 200 1 0 1 137 1 50 1 192 1 
323 1 29 1 0 2 137 1 16 1 50 1 192 1 
323 2 88 1 0 1 154 1 155 1 50 2 29 2 200 1 137 1 192 2 
323 3 0 1 69 1 196 1 50 1 29 1 360 2 200 2 317 1 137 1 16 1 147 1 192 3 
323 2 97 1 0 1 265 1 242 1 345 2 50 1 29 1 200 1 348 1 360 1 137 1 16 1 192 2 278 1 
323 4 0 1 266 1 50 2 198 1 29 2 360 2 200 2 317 1 137 1 16 1 147 1 192 4 
323 1 29 1 200 1 0 1 137 1 16 1 50 1 192 1 
323 3 0 1 196 1 50 1 29 1 360 1 200 1 137 1 16 1 192 3 206 1 
200 1 317 1 172 1 147 1 
200 1 0 1 
323 4 181 1 0 2 50 1 29 1 360 2 200 3 317 1 172 1 32 1 16 2 147 1 206 1 192 4 
323 2 0 1 68 1 50 1 29 1 200 1 360 1 53 1 137 1 16 1 192 2 164 1 
323 3 181 1 0 1 50 1 29 1 200 1 137 1 32 2 34 1 16 1 192 3 206 2 
123 1 200 2 47 2 277 1 
323 1 29 1 166 1 137 1 50 1 192 1 
323 2 29 1 200 1 360 1 0 1 137 1 196 1 16 1 50 1 192 2 
211 1 
323 1 29 1 200 1 0 1 137 1 16 1 50 1 192 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 6 (27,176,331) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 6 94 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 6 94 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 6 (27,176,331) 330 114 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 6 94 22 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 6 94 22 129 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
262 1 265 2 238 1 5 1 268 9 96 2 200 1 318 2 100 2 320 1 29 1 31 2 37 1 322 1 117 2 324 1 186 1 249 9 306 2 353 5 14 6 213 4 42 1 61 3 256 1 145 1 124 1 86 1 
262 1 265 2 238 1 96 2 5 1 268 9 200 1 318 2 100 2 320 1 29 1 31 2 37 1 322 1 117 2 324 1 186 1 249 9 306 2 353 5 14 6 213 4 42 1 61 3 256 1 145 1 124 1 86 1 
262 1 265 2 238 1 96 2 5 1 268 10 200 1 318 2 100 2 320 1 29 1 31 2 37 1 322 1 117 2 324 1 186 1 249 10 306 2 353 6 14 7 213 5 42 1 61 4 256 1 145 1 124 1 86 1 
262 1 265 1 238 1 96 2 5 1 268 7 200 1 318 2 100 2 320 1 29 1 31 2 37 1 322 1 117 2 324 1 186 1 249 7 306 2 353 4 14 4 213 3 42 1 61 2 145 1 124 1 86 1 
322 1 117 1 265 2 324 1 249 4 306 1 268 4 200 1 353 3 96 1 14 3 213 2 61 1 256 1 124 1 100 1 31 1 37 1 
322 1 117 1 238 1 249 2 353 1 268 2 306 1 283 1 202 1 318 1 124 1 100 1 320 1 31 1 37 1 36 1 
213 1 322 1 318 1 61 1 124 1 249 3 100 2 29 1 31 2 353 2 268 3 14 1 37 1 
332 1 262 1 322 1 117 1 265 2 324 1 249 9 306 1 96 1 200 1 353 5 268 9 14 7 213 4 15 1 42 1 318 1 61 3 256 1 124 1 100 2 29 1 31 2 37 1 
332 1 262 1 322 1 117 1 265 2 324 1 249 9 306 1 96 1 200 1 353 5 268 9 14 7 213 4 15 1 42 1 318 1 61 3 256 1 124 1 100 2 29 1 31 2 37 1 
134 1 343 1 269 1 
134 1 107 1 126 2 
44 2 45 1 187 2 236 2 13 2 141 2 242 1 361 2 
89 2 170 1 108 2 25 1 242 1 270 1 7 1 51 2 203 1 244 2 224 1 319 1 205 1 321 1 245 1 206 1 277 1 184 1 187 3 189 1 211 1 163 1 13 3 141 2 190 1 356 1 253 1 143 1 44 2 45 1 257 1 123 1 19 1 83 1 236 2 361 2 219 2 
44 1 45 1 179 1 187 1 162 1 236 1 13 1 354 1 141 1 361 1 
331 1 6 1 
261 1 278 1 118 1 187 1 13 1 141 1 27 1 354 1 343 1 301 2 134 1 176 2 44 1 236 1 361 1 
102 1 345 1 301 1 176 1 267 1 
160 1 102 1 301 2 134 1 176 2 168 1 267 1 343 1 
102 1 301 1 176 1 
187 1 162 1 267 1 13 1 354 1 141 1 301 1 176 1 45 1 44 1 357 1 179 1 236 1 361 1 
134 1 
102 1 301 2 134 1 176 2 307 1 168 1 267 1 343 1 
207 2 102 2 49 1 263 2 240 1 323 1 328 1 267 2 229 1 343 1 301 5 134 1 176 5 110 2 168 1 125 1 32 1 72 1 87 1 
242 1 269 1 
65 1 187 2 13 2 141 1 242 2 44 2 360 1 236 1 361 1 
28 1 115 1 93 1 
170 1 184 1 187 1 108 1 13 1 67 1 242 1 190 1 143 1 7 1 51 1 123 1 319 1 205 1 83 1 219 1 
184 1 170 1 187 2 108 1 93 1 13 2 190 1 143 1 144 1 7 1 51 1 223 1 44 1 123 1 319 1 205 1 83 1 236 1 361 1 219 1 
187 4 94 1 13 4 6 1 141 1 242 1 144 2 223 1 44 4 52 1 236 4 360 1 150 1 361 4 
279 1 44 2 179 1 187 2 236 2 13 2 354 1 361 2 
144 1 44 3 187 3 236 3 13 3 141 1 242 1 361 3 
44 1 179 1 187 1 236 1 13 1 354 1 361 1 
65 1 44 1 187 1 236 1 360 1 13 1 354 1 141 1 361 1 
261 1 89 2 170 1 108 1 25 1 27 1 242 1 301 1 270 1 176 1 7 1 51 1 203 1 223 1 244 1 224 1 319 1 205 1 278 1 184 1 185 1 118 1 187 4 189 1 211 1 163 1 13 4 141 2 354 1 190 1 356 1 253 1 143 1 144 1 44 3 45 1 123 1 19 1 308 1 83 1 360 1 236 3 361 3 219 1 
144 1 44 1 187 1 94 1 236 1 13 1 6 1 361 1 
261 1 278 1 185 1 118 1 187 3 13 3 141 1 354 1 27 1 301 1 134 1 176 1 144 2 223 1 44 3 360 1 236 3 33 1 361 3 
187 2 93 1 13 2 141 1 28 1 144 1 44 2 360 1 236 2 361 2 
170 1 184 1 187 1 108 1 13 1 242 1 190 1 143 1 51 1 7 1 123 1 319 1 205 1 83 1 219 1 
237 1 170 1 184 1 187 1 108 1 13 1 242 1 143 1 51 1 255 1 7 1 123 1 319 1 205 1 219 1 
89 2 25 1 93 2 341 1 314 1 28 2 133 1 270 1 203 2 347 1 244 4 158 1 276 1 115 2 208 1 327 1 189 1 211 1 163 1 41 1 18 1 257 2 19 1 147 1 
261 1 44 1 279 1 187 1 236 1 13 1 354 1 361 1 
338 1 177 1 
338 1 177 1 
138 1 258 1 
138 1 258 1 
138 1 258 1 
338 1 177 1 136 1 
338 1 177 1 136 1 
338 1 177 1 53 1 
138 1 293 1 294 1 338 2 177 2 258 1 
338 1 177 1 136 1 
246 1 338 1 177 1 
246 1 338 1 177 1 
246 1 338 1 177 1 
309 1 333 1 220 1 1 1 338 1 266 1 242 1 301 1 176 1 177 1 71 1 53 1 226 1 75 1 187 2 13 2 284 1 44 2 167 1 47 1 84 1 236 2 361 2 290 1 
0 1 1 2 294 1 338 2 75 1 50 1 212 1 228 1 282 2 301 2 134 1 216 1 176 2 284 3 177 2 167 2 358 1 47 2 71 2 
117 1 306 1 96 1 
117 1 306 1 36 1 
214 1 172 1 130 1 96 2 306 3 36 1 
214 1 130 1 96 1 9 1 306 2 36 1 
214 1 130 2 96 1 306 2 36 1 
291 2 309 1 263 1 266 1 107 1 91 1 240 3 298 1 341 1 95 2 267 4 343 1 133 1 301 5 317 1 176 5 134 2 110 1 207 1 102 1 226 1 325 1 327 1 120 2 328 1 60 1 329 1 215 1 41 1 168 1 126 3 87 2 
291 6 309 4 49 1 263 2 24 1 152 1 107 3 91 1 240 8 298 2 341 3 95 6 267 7 343 1 131 1 133 3 345 5 97 5 301 9 176 9 134 5 110 2 302 1 207 2 102 6 327 3 328 1 329 2 215 3 41 3 168 1 126 9 85 1 148 1 87 6 
309 1 291 2 263 1 49 1 107 2 240 3 298 1 341 1 95 2 267 2 343 1 317 1 301 3 133 1 134 3 176 3 110 1 207 1 325 1 327 1 120 1 329 1 215 1 41 1 126 4 87 2 
291 4 309 2 263 1 49 1 107 3 240 5 298 1 341 2 95 4 267 3 343 1 131 1 301 4 317 1 133 2 134 4 176 4 110 1 207 1 325 1 327 2 120 2 329 1 215 2 41 2 126 7 85 1 148 1 87 4 
7 1 233 1 269 1 
7 1 140 1 
334 1 
7 1 123 1 205 1 
217 1 7 1 
7 1 123 1 
80 1 7 3 233 2 39 1 123 1 205 1 
208 2 264 1 12 1 2 1 221 1 313 1 341 1 340 2 133 1 203 3 347 3 122 1 192 1 257 4 244 7 273 1 182 1 
208 2 264 1 12 1 2 1 221 1 313 1 341 1 340 2 133 1 203 3 347 3 122 1 192 1 257 4 244 7 273 1 182 1 
208 2 264 1 12 1 2 1 55 1 221 1 313 1 341 1 340 2 133 1 203 3 347 3 122 1 192 1 257 4 244 7 273 1 182 1 
264 2 2 1 89 2 197 1 221 1 313 1 199 3 315 1 340 3 341 4 133 4 270 1 203 15 347 10 244 31 273 2 182 5 183 4 352 1 208 5 12 1 209 1 327 3 189 1 211 1 250 1 163 1 215 3 41 3 122 2 257 16 192 2 169 1 362 1 
264 1 2 1 89 4 197 1 221 1 92 1 341 1 340 2 133 1 270 2 203 4 347 4 244 9 273 1 112 1 182 1 208 3 12 1 189 2 211 2 163 2 122 1 257 5 192 1 
23 1 172 1 108 1 96 1 268 2 26 1 109 1 157 1 51 1 318 1 272 1 178 1 100 1 31 1 101 1 37 1 36 1 322 1 117 1 184 1 249 2 353 1 306 2 14 1 165 1 143 1 82 1 124 1 62 1 219 1 
337 1 23 1 172 1 108 1 96 1 268 3 26 1 109 1 157 1 51 1 318 1 178 1 100 1 31 1 101 1 36 1 322 1 117 1 184 1 249 3 353 1 306 2 14 2 143 1 82 1 124 1 234 1 62 1 20 1 219 1 
337 1 23 1 172 1 108 1 268 2 96 1 26 1 109 1 157 1 318 1 51 1 101 1 36 1 322 1 117 1 184 1 249 2 353 1 306 2 14 2 143 1 124 1 234 1 62 1 219 1 
304 1 184 1 170 1 198 1 248 1 153 1 249 1 108 1 268 1 26 2 251 1 157 2 16 1 143 1 7 1 318 2 51 1 123 1 100 1 20 1 31 1 101 2 219 1 
23 1 172 1 108 1 96 1 268 1 26 1 109 1 157 1 51 1 318 1 272 1 178 1 100 1 31 1 101 1 37 1 36 1 117 1 184 1 249 1 306 2 143 1 82 1 234 1 62 1 219 1 
351 1 
263 1 170 2 198 1 240 1 297 1 108 2 298 1 6 1 301 2 346 1 176 2 7 1 51 2 110 1 114 1 207 1 102 2 184 1 40 1 328 1 78 1 251 1 330 1 331 1 143 1 123 1 168 1 287 1 219 2 87 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 102 1 301 2 331 1 176 2 307 1 297 1 40 1 168 1 6 1 114 1 
207 1 330 1 301 1 331 1 263 1 176 1 110 1 297 1 40 1 328 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
330 1 301 1 331 1 176 1 297 1 40 1 6 1 114 1 
207 1 330 1 301 1 331 1 263 1 176 1 110 1 297 1 40 1 328 1 6 1 114 1 
264 1 2 1 89 2 221 1 93 1 25 1 341 1 340 1 269 1 242 2 28 1 133 1 270 1 203 3 347 2 244 6 115 1 208 2 12 1 189 1 211 1 163 1 122 1 257 3 19 1 147 1 
66 1 89 4 295 1 199 3 25 2 93 13 315 1 341 1 242 1 28 4 133 3 270 2 203 7 347 2 244 17 224 1 182 1 206 1 183 4 10 1 115 13 208 1 209 2 281 1 327 3 189 2 211 2 119 1 163 2 215 3 41 1 257 10 19 1 
66 1 170 1 89 2 108 1 25 1 67 1 174 1 242 1 28 1 270 1 7 1 51 1 223 1 203 1 244 2 319 1 224 1 205 1 206 1 184 1 187 2 211 1 189 1 13 2 163 1 164 1 190 1 143 1 144 1 44 1 285 1 123 1 257 1 19 1 83 1 236 1 219 1 361 1 
264 1 2 1 170 1 89 6 221 1 93 7 133 3 270 3 51 3 7 2 223 1 224 1 319 2 137 2 182 4 12 1 184 2 187 3 327 2 189 3 13 3 190 2 144 1 143 2 234 1 19 3 236 1 194 1 66 1 108 3 25 3 340 1 341 3 242 2 28 7 70 1 203 10 347 8 244 20 205 2 73 2 35 2 206 1 115 7 208 4 116 2 211 3 163 3 79 1 356 2 215 2 41 2 44 1 122 1 123 2 257 10 83 2 219 3 361 1 
196 1 170 2 89 4 198 1 296 1 339 1 108 7 25 2 222 1 344 1 270 2 7 3 51 8 203 1 244 2 224 1 206 1 277 2 103 1 184 2 187 1 189 2 211 2 13 1 163 2 251 1 165 1 144 1 143 2 218 1 44 1 234 1 257 1 123 2 147 1 19 2 236 1 361 1 219 8 
66 1 89 2 93 1 25 1 341 1 28 1 133 1 270 1 203 2 99 1 347 1 244 3 115 1 208 1 187 1 327 1 189 1 211 1 163 1 13 1 141 1 215 1 41 1 44 1 257 1 19 1 360 1 236 1 361 1 
115 1 89 2 93 1 25 1 327 1 211 1 189 1 163 1 28 1 133 1 270 1 347 1 244 2 257 2 147 1 19 1 182 1 276 1 
115 1 208 1 89 2 93 1 25 1 211 1 189 1 341 1 163 1 28 1 270 1 41 1 203 2 347 1 18 1 244 2 147 1 19 1 
89 2 25 1 93 2 341 1 28 2 133 1 270 1 203 2 347 2 244 4 182 1 115 2 208 1 327 1 189 1 211 1 163 1 215 1 41 1 257 2 19 1 147 1 
115 1 89 2 93 1 25 1 327 1 211 1 189 1 163 1 28 1 344 1 133 1 270 1 347 1 244 2 257 2 19 1 182 1 276 1 
115 1 208 1 89 2 93 1 25 1 211 1 189 1 341 1 163 1 28 1 344 1 270 1 41 1 203 2 347 1 18 1 244 2 19 1 
89 2 25 1 93 2 341 1 344 1 28 2 133 1 270 1 203 2 347 2 244 4 182 1 115 2 208 1 327 1 189 1 211 1 163 1 215 1 41 1 257 2 19 1 
89 2 25 1 93 2 341 1 28 2 133 1 270 1 203 2 347 2 244 4 182 1 115 2 208 1 327 1 189 1 211 1 163 1 215 1 41 1 257 2 19 1 
170 1 89 2 108 1 25 1 242 1 270 1 51 1 7 1 203 1 244 2 319 1 224 1 205 1 206 1 184 1 187 1 211 1 189 1 13 1 163 1 190 1 356 1 143 1 257 1 123 1 19 1 83 1 219 1 
237 1 170 1 89 2 108 1 25 1 242 1 270 1 51 1 7 1 203 1 244 2 319 1 224 1 205 1 159 1 206 1 184 1 187 1 211 1 189 1 13 1 163 1 143 1 255 1 257 1 123 1 19 1 219 1 
66 1 89 2 25 1 93 2 341 1 28 2 133 1 270 1 203 2 347 2 244 4 182 1 115 2 208 1 327 1 189 1 211 1 163 1 215 1 41 1 257 2 19 1 
89 2 108 1 93 2 25 1 341 1 28 2 133 1 270 1 51 1 7 1 203 2 347 2 244 4 319 1 205 1 182 1 115 2 208 1 116 1 184 1 187 1 327 1 211 1 189 1 13 1 163 1 190 1 356 1 165 1 215 1 41 1 143 1 257 2 123 1 19 1 83 1 219 1 
66 1 89 2 25 1 93 1 341 1 28 1 133 1 270 1 203 1 347 1 244 3 182 1 115 1 187 1 327 1 189 1 211 1 163 1 13 1 141 1 230 1 215 1 41 1 44 1 257 2 19 1 360 1 236 1 361 1 
335 1 106 1 89 4 199 1 92 1 300 1 315 1 341 3 133 3 270 2 135 1 203 10 347 6 244 19 182 3 183 2 208 3 209 1 280 1 104 2 327 3 189 2 211 2 163 2 215 3 41 3 17 1 46 1 257 9 359 2 
151 1 335 2 197 2 89 6 199 2 92 1 341 2 315 2 155 1 133 3 270 3 203 12 135 1 347 4 244 26 182 2 183 2 208 2 247 1 280 2 104 1 326 1 327 3 189 3 211 3 56 1 163 3 215 3 41 2 17 1 46 1 257 14 359 4 289 1 
264 1 2 1 89 6 221 1 92 1 315 3 133 6 270 3 135 1 182 4 183 5 12 1 280 2 326 1 104 1 327 5 189 3 56 1 17 1 289 1 151 1 335 1 197 1 199 3 341 5 340 1 300 1 155 1 203 22 347 8 244 44 208 4 209 2 247 1 211 3 163 3 215 5 41 4 81 1 122 1 46 1 257 22 359 4 
151 1 335 1 264 1 2 1 197 2 89 8 221 1 199 3 92 1 300 1 340 1 315 3 341 5 155 1 133 6 270 4 135 1 203 21 347 8 244 43 182 3 183 5 208 5 12 1 247 1 209 2 280 2 104 1 326 1 327 5 189 4 211 4 56 1 163 4 215 5 81 1 41 4 17 1 46 1 122 1 257 22 359 4 289 1 
151 1 335 1 264 1 2 1 197 1 89 4 221 1 199 4 92 1 340 1 315 2 341 8 155 1 133 8 270 2 135 1 203 25 347 14 244 52 182 7 183 4 208 7 12 1 247 1 209 2 280 1 104 1 326 1 281 2 327 7 189 2 211 2 56 1 163 2 215 7 41 7 17 1 46 1 122 1 257 27 359 4 289 1 
69 1 0 1 1 1 294 1 338 1 177 1 167 1 47 1 71 1 228 1 
333 1 53 1 
1 1 338 1 177 1 167 1 76 1 47 1 71 1 57 1 201 1 
136 1 127 1 
293 1 246 1 303 1 
0 1 1 1 294 1 338 1 75 1 212 1 228 1 282 1 301 1 134 1 216 1 176 1 284 2 177 1 167 1 358 1 47 1 71 1 
0 1 1 1 294 1 338 1 75 1 212 1 228 1 282 1 301 1 134 1 216 1 176 1 284 2 177 1 167 1 358 1 47 1 71 1 
0 1 1 1 294 1 338 1 75 1 212 1 228 1 282 1 301 1 134 1 216 1 176 1 284 2 177 1 167 1 358 1 47 1 71 1 
293 1 136 1 127 1 
293 1 136 1 127 1 
246 1 303 1 
293 1 246 1 303 1 
220 1 84 1 
309 1 333 1 220 1 1 1 338 1 266 1 267 1 242 1 301 1 176 1 177 1 71 1 53 1 226 1 187 2 13 2 282 1 284 1 44 2 167 1 358 1 146 1 47 1 84 1 236 2 290 1 361 2 
66 1 89 2 171 1 339 1 108 2 25 1 270 1 7 1 51 2 203 1 244 2 224 1 206 1 277 2 103 1 184 1 187 2 211 1 189 1 13 2 163 1 58 1 355 1 143 1 121 1 44 2 123 1 257 1 19 1 48 1 219 2 
139 1 195 1 117 1 23 1 184 1 172 1 108 2 154 1 96 1 306 2 157 1 165 1 143 1 51 2 178 1 234 1 62 1 36 1 219 2 
195 1 117 1 23 1 184 1 172 1 108 1 96 1 306 2 68 1 157 1 143 1 51 1 178 1 234 1 62 1 36 1 219 1 
139 1 184 1 170 1 248 1 198 1 108 1 299 1 251 1 157 1 143 1 7 1 51 1 123 1 219 1 
139 1 195 1 117 1 23 1 184 1 172 1 108 1 154 1 96 1 306 2 157 1 143 1 51 1 178 1 234 1 62 1 36 1 219 1 
166 1 
134 1 240 1 323 1 32 1 343 1 87 1 269 1 
310 1 263 1 107 1 240 1 173 1 343 1 301 1 134 2 176 1 110 1 275 1 207 1 102 1 328 1 168 1 126 1 87 1 
263 4 3 1 170 1 90 1 4 2 95 6 133 2 176 5 134 8 7 10 51 3 8 2 137 2 102 5 184 3 323 1 227 2 327 2 140 3 328 4 143 4 233 2 291 6 240 9 107 6 298 2 108 3 241 2 341 2 342 1 343 2 243 1 301 5 110 4 348 1 205 3 32 1 113 2 207 4 350 2 118 2 78 1 305 2 165 1 80 1 215 2 217 2 41 2 123 3 168 3 126 12 128 2 219 3 87 8 
291 5 151 1 263 2 240 8 107 3 298 1 199 1 95 5 315 1 341 2 155 1 343 2 301 1 133 2 176 1 134 5 110 2 113 1 183 1 207 2 102 1 247 1 326 1 227 2 327 2 78 1 328 2 215 2 41 2 191 1 168 1 126 6 288 1 289 1 87 5 
264 1 263 1 221 1 240 2 341 1 301 1 133 2 176 1 110 1 179 1 34 1 113 1 207 1 187 1 227 2 162 1 13 1 328 1 354 1 141 1 45 1 44 1 122 1 357 1 193 1 236 1 87 2 361 1 
207 1 263 1 323 1 240 1 328 1 343 1 134 1 110 1 32 1 87 1 
291 5 107 5 240 5 227 2 327 2 95 5 341 2 215 2 133 2 134 5 41 2 126 10 137 1 113 1 87 5 
301 1 102 1 134 1 176 1 168 1 343 1 
292 1 49 1 263 2 311 1 3 1 170 2 198 1 240 2 108 4 298 2 243 2 301 3 346 1 176 3 7 1 51 4 110 2 207 2 102 4 184 1 328 1 78 2 251 1 143 1 123 1 168 2 287 1 219 4 87 2 
89 2 170 1 108 1 25 1 242 1 270 1 51 1 7 1 203 1 244 1 224 1 319 1 205 1 184 1 187 3 189 1 211 1 163 1 13 3 141 2 190 1 356 1 253 1 143 1 44 2 45 1 123 1 19 1 83 1 236 2 219 1 361 2 
291 2 207 1 263 1 107 2 240 1 298 1 340 1 95 2 328 1 78 1 343 2 134 4 110 1 126 4 87 2 
1 1 167 1 274 1 
1 1 167 1 274 1 
0 1 220 1 1 1 239 1 167 1 
1 1 167 1 274 1 
225 1 1 1 167 1 
225 1 1 1 167 1 
225 1 1 1 167 1 
1 1 167 1 
338 1 177 1 
208 2 264 1 12 1 2 1 89 4 197 1 221 1 211 2 189 2 340 1 341 1 163 2 133 1 270 2 203 4 347 3 122 1 244 8 257 4 182 1 
264 1 208 2 12 1 2 1 221 1 340 1 341 1 269 1 133 1 203 3 122 1 347 2 257 3 244 6 
208 1 89 2 327 1 211 1 189 1 341 1 163 1 215 1 133 1 41 1 270 1 203 2 347 2 257 2 244 4 181 1 182 1 
183 2 208 1 209 1 199 1 327 1 341 1 315 1 215 1 133 1 41 1 203 4 347 2 244 7 257 3 182 1 
264 2 2 1 197 2 89 4 221 1 199 2 340 1 341 3 133 3 270 2 203 12 347 9 244 23 182 4 183 2 208 5 12 1 209 1 281 1 327 2 211 2 189 2 119 1 163 2 105 1 215 2 41 2 122 2 257 11 
183 1 203 1 244 1 
244 1 257 1 199 1 
208 2 89 2 327 1 189 1 211 1 341 1 163 1 215 1 133 1 270 1 41 1 203 3 347 3 244 6 257 3 137 1 181 1 182 1 
151 1 89 2 199 1 92 1 315 1 341 2 155 1 133 2 270 1 203 6 347 2 244 12 182 1 183 1 208 1 247 1 326 1 327 2 189 1 211 1 163 1 215 2 41 2 257 6 289 1 
264 1 208 1 221 1 341 1 133 1 203 3 122 1 347 2 257 3 244 6 182 1 
208 1 264 1 12 1 2 1 197 1 89 2 211 1 189 1 163 1 105 1 270 1 203 2 347 2 122 1 257 1 244 3 182 1 
264 2 208 3 89 2 221 1 92 1 189 1 211 1 341 2 163 1 133 2 270 1 203 5 122 2 347 5 257 5 244 10 193 1 182 2 
89 2 92 1 327 1 211 1 189 1 163 1 133 1 270 1 347 1 257 2 244 2 182 1 
208 1 89 2 92 1 327 1 211 1 189 1 341 1 163 1 215 1 133 1 41 1 270 1 203 2 347 2 257 2 244 4 182 1 
264 1 208 1 197 1 89 6 92 1 211 3 189 3 300 1 163 3 105 1 270 3 203 2 122 1 347 2 244 3 257 1 182 1 
264 3 2 1 197 2 89 10 221 2 199 3 92 1 340 1 315 1 300 1 341 5 133 5 270 5 203 18 347 12 244 34 181 1 182 5 183 4 208 7 12 1 209 1 327 3 189 5 211 5 250 1 163 5 105 1 215 3 41 3 122 3 257 16 169 1 362 1 
264 1 2 1 89 2 221 1 199 1 92 1 340 1 341 1 315 1 133 2 270 1 203 5 347 2 244 11 183 2 208 2 12 1 209 1 327 1 189 1 211 1 163 1 215 1 122 1 257 6 289 1 
264 1 2 1 89 4 221 1 199 1 92 1 340 1 341 1 315 1 133 2 270 2 203 5 347 3 244 11 181 1 182 1 183 2 208 2 12 1 209 1 327 1 189 2 211 2 163 2 215 1 122 1 257 6 289 1 
151 1 264 1 2 1 89 6 197 1 221 1 199 1 92 1 340 1 315 1 341 3 155 1 133 3 270 3 203 10 347 4 244 19 181 1 182 1 183 1 208 3 12 1 247 1 326 1 327 2 189 3 211 3 163 3 215 2 41 2 122 1 257 9 289 1 
151 1 264 1 2 1 197 1 89 6 221 1 199 1 92 1 340 1 315 1 341 2 155 1 133 3 270 3 203 7 347 5 244 17 181 1 182 2 183 1 208 3 12 1 247 1 326 1 327 2 189 3 211 3 163 3 215 2 41 1 122 1 257 10 289 1 
264 1 2 1 89 2 221 1 199 1 92 1 340 1 341 1 315 1 133 2 270 1 203 5 347 2 244 11 183 2 208 2 12 1 209 1 327 1 189 1 211 1 163 1 215 1 122 1 257 6 289 1 
151 1 89 2 199 1 92 1 315 1 341 2 155 1 133 2 270 1 203 6 347 2 244 12 182 1 183 1 208 1 247 1 326 1 327 2 189 1 211 1 163 1 215 2 41 2 257 6 289 1 
151 1 264 1 2 1 89 8 197 2 221 1 199 1 92 1 340 1 315 1 341 2 155 1 133 3 270 4 203 8 347 5 244 18 182 2 181 1 183 1 208 3 12 1 247 1 326 1 327 2 189 4 211 4 163 4 215 2 41 1 122 1 257 10 289 1 
151 1 89 8 197 2 199 1 92 1 315 1 300 1 341 2 155 1 133 3 270 4 203 7 347 6 244 16 182 3 183 1 208 3 247 1 326 1 327 3 189 4 211 4 163 4 215 3 41 2 257 9 289 1 
264 3 208 3 12 1 2 2 221 1 341 1 133 1 203 4 122 3 347 6 244 7 257 3 182 3 
151 1 264 1 2 1 89 8 197 2 221 1 199 1 92 1 340 1 315 1 300 1 341 2 155 1 133 3 270 4 203 8 347 4 244 18 182 1 183 1 208 3 12 1 247 1 326 1 327 2 189 4 211 4 163 4 215 2 41 1 122 1 257 10 289 1 
94 1 22 1 6 1 
260 1 129 1 286 1 94 1 111 1 22 1 6 1 64 1 
143 1 7 1 51 1 184 1 170 1 198 1 123 1 108 1 251 1 269 1 219 1 
170 1 184 1 187 2 108 1 13 2 242 1 143 1 144 1 7 1 51 1 44 1 123 1 319 1 205 1 83 1 236 1 361 1 219 1 
261 1 108 1 242 1 243 1 51 1 7 3 319 1 205 2 350 1 278 1 184 1 187 2 13 2 354 1 144 1 143 1 217 1 44 2 123 2 83 1 236 2 219 1 361 1 
237 1 261 1 108 2 242 1 243 1 51 2 7 3 204 1 319 1 205 2 350 1 278 1 184 1 187 2 13 2 354 1 144 1 143 1 217 1 44 2 123 2 236 2 219 2 361 1 
350 1 102 1 170 1 184 1 118 1 108 3 140 1 59 1 343 1 243 1 301 2 134 1 217 1 143 1 176 2 51 3 7 4 233 1 123 1 204 1 205 1 21 1 219 3 
350 1 102 1 170 1 184 1 118 1 108 3 140 1 343 1 243 1 301 2 134 1 217 1 143 1 176 2 51 3 7 4 233 1 8 1 123 1 204 1 205 1 219 3 
143 1 51 1 184 1 218 1 108 1 219 1 
277 1 11 1 196 1 170 2 184 2 312 1 296 1 339 1 108 6 222 1 165 1 80 1 143 3 51 7 7 3 218 1 234 1 123 2 63 1 205 1 219 7 
66 1 264 1 2 1 89 4 171 1 221 1 108 1 93 1 25 2 340 1 341 1 242 2 28 1 133 1 270 2 7 1 51 1 203 3 347 2 244 6 319 1 205 1 73 1 115 1 208 2 116 1 12 1 184 1 187 2 211 2 189 2 13 2 163 2 190 1 356 1 165 1 143 1 144 1 44 1 122 1 257 3 123 1 19 2 83 1 236 1 361 1 219 1 
263 2 3 1 170 1 240 1 4 1 108 1 267 1 343 1 301 3 134 1 176 3 51 1 7 2 110 2 8 1 32 1 207 2 102 2 323 1 118 1 140 1 328 2 305 1 233 1 168 1 128 1 87 1 219 1 
184 1 108 2 342 1 165 1 80 1 143 2 51 2 7 2 233 1 218 1 123 1 205 1 219 2 
170 1 184 1 198 1 108 4 251 1 165 1 143 1 51 4 7 1 43 1 123 1 204 1 219 4 
11 1 184 1 108 2 243 1 132 1 143 2 51 2 7 1 70 1 123 1 63 1 205 1 54 1 219 2 
143 1 117 1 51 1 184 1 170 1 62 1 108 1 306 1 36 1 219 1 
184 1 108 2 339 1 165 1 143 1 51 2 7 1 234 1 123 1 48 1 219 2 
196 1 170 1 184 2 198 1 108 4 339 1 222 1 251 1 243 1 165 1 143 2 51 5 7 3 43 1 123 2 219 5 
170 1 184 2 198 1 108 4 339 1 222 1 251 1 243 1 165 1 143 2 51 5 7 3 43 1 123 2 149 1 219 5 
237 1 170 1 184 1 187 2 108 1 13 2 242 1 143 1 144 1 7 1 51 1 44 1 123 1 319 1 205 1 236 1 361 1 219 1 
11 1 184 1 312 1 108 1 243 1 80 1 143 2 51 1 7 1 123 1 63 1 205 1 219 1 
142 1 231 1 98 1 259 1 242 1 
261 1 38 1 278 1 185 1 118 1 267 1 354 1 27 1 242 1 343 1 142 2 231 2 301 2 134 1 98 1 176 2 235 1 180 1 259 2 
187 1 13 1 58 1 142 1 355 1 98 1 121 1 44 1 259 1 
98 1 235 1 180 1 
322 1 124 1 353 1 269 1 
322 1 124 1 249 1 100 1 31 1 353 1 268 1 
318 1 268 1 101 1 
322 1 210 1 249 3 353 1 268 3 156 1 254 1 124 1 100 1 320 2 31 1 37 1 
322 1 265 1 124 1 249 2 100 1 31 1 353 1 268 2 14 1 
213 1 117 1 324 1 249 1 100 1 31 1 306 1 96 1 353 1 268 1 37 1 
124 1 249 1 100 1 31 1 353 1 268 1 37 1 
322 1 124 2 249 1 100 1 31 1 268 1 37 1 
336 1 161 1 249 2 77 1 353 1 268 2 124 1 100 2 31 2 37 1 
262 1 322 1 249 3 268 3 353 2 14 2 213 1 42 1 61 1 124 1 100 1 31 1 37 1 
322 1 117 1 172 1 249 2 353 1 306 2 268 2 96 1 14 1 124 1 100 1 30 1 31 1 36 1 37 1 
213 1 322 1 265 1 61 1 256 1 124 1 249 4 100 2 31 2 353 2 268 4 14 2 37 1 
322 1 124 1 249 1 100 1 31 1 353 1 268 1 37 1 
322 2 249 4 268 4 353 3 156 1 14 2 213 1 254 1 61 1 124 2 100 1 320 1 31 1 349 1 
74 1 322 1 249 2 353 1 268 2 14 1 15 1 271 1 124 1 100 1 31 1 37 1 
322 1 249 3 353 1 268 3 156 2 254 1 232 1 124 1 100 1 320 2 31 1 37 1 
316 1 175 1 188 2 353 2 
88 1 249 1 100 1 31 1 268 1 37 1 
322 1 42 1 124 1 249 2 100 1 31 1 353 1 268 2 14 1 37 1 
252 1 
322 1 124 1 249 1 100 1 31 1 353 1 268 1 37 1 
322 1 42 1 124 1 249 3 100 1 320 1 31 1 353 1 268 3 14 1 37 1 
213 1 61 1 349 1 353 1 
124 1 353 1 

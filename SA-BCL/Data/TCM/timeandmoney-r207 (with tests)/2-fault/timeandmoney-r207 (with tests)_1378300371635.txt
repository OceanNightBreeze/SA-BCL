#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
322 1 54 5 3 1 179 2 133 1 90 1 369 2 106 1 64 6 66 2 114 1 349 1 204 2 91 9 310 1 168 1 40 1 15 1 354 1 242 2 73 4 189 1 75 1 44 3 282 1 343 9 192 2 81 2 
322 1 54 5 3 1 179 2 133 1 90 1 369 2 106 1 64 6 66 2 114 1 349 1 204 2 91 9 310 1 168 1 40 1 15 1 354 1 242 2 73 4 189 1 75 1 44 3 282 1 343 9 192 2 81 2 
322 1 54 6 3 1 179 2 133 1 90 1 369 2 106 1 64 7 66 2 114 1 349 1 204 2 91 10 310 1 168 1 40 1 15 1 354 1 242 2 73 5 189 1 75 1 44 4 282 1 343 10 192 2 81 2 
322 1 54 4 3 1 179 1 133 1 90 1 369 2 106 1 64 4 66 2 114 1 349 1 204 2 91 7 168 1 40 1 15 1 354 1 242 2 73 3 189 1 75 1 44 2 282 1 343 7 192 2 81 2 
204 1 322 1 91 4 310 1 168 1 54 3 3 1 179 2 40 1 90 1 242 1 73 2 44 1 64 3 343 4 192 1 66 1 81 1 
204 1 288 1 322 1 91 2 54 1 3 1 133 1 90 1 369 1 242 1 75 1 62 1 343 2 192 1 184 1 81 1 
204 2 322 1 91 3 54 2 3 1 90 1 369 1 242 2 73 1 189 1 44 1 64 1 343 3 
322 1 52 1 195 1 54 5 3 1 179 2 90 1 369 1 106 1 64 7 66 1 204 2 91 9 168 1 310 1 40 1 15 1 73 4 242 2 189 1 44 3 343 9 192 1 81 1 
322 1 52 1 195 1 54 5 3 1 179 2 90 1 369 1 106 1 64 7 66 1 204 2 91 9 168 1 310 1 40 1 15 1 73 4 242 2 189 1 44 3 343 9 192 1 81 1 
265 1 98 1 59 1 
265 1 94 2 356 1 
365 2 139 2 34 1 154 2 23 2 65 2 241 2 25 1 
344 2 1 1 321 1 101 1 365 2 251 2 28 1 347 1 331 1 373 1 63 1 139 3 34 1 348 1 164 1 65 2 235 1 185 2 165 1 143 1 307 1 166 1 205 1 350 1 187 1 207 1 336 2 241 2 172 1 150 1 77 1 318 2 97 1 283 1 154 3 23 2 25 1 
365 1 47 1 139 1 154 1 23 1 65 1 88 1 159 1 241 1 25 1 
26 1 265 1 222 1 365 1 37 1 59 1 30 1 329 1 298 1 190 1 47 1 139 1 154 1 51 1 
26 1 265 1 222 2 365 1 37 1 59 1 241 1 329 1 298 2 47 1 139 1 65 1 23 1 154 1 51 1 
339 1 222 1 298 1 104 1 209 1 
256 1 265 1 222 2 298 2 104 1 24 1 59 1 209 1 
222 1 298 1 104 1 
222 1 365 1 230 1 88 1 159 1 209 1 241 1 298 1 47 1 139 1 65 1 23 1 154 1 25 1 
265 1 
265 1 222 2 61 1 298 2 104 1 24 1 59 1 209 1 
249 1 265 1 222 5 267 1 53 1 104 2 335 1 271 2 59 1 209 2 60 1 328 1 298 5 330 2 32 1 375 2 234 1 320 1 24 1 
98 1 34 1 
365 2 241 1 45 1 139 2 34 2 154 2 65 1 23 1 381 1 
41 1 202 1 332 1 
344 1 321 1 143 1 307 1 101 1 205 1 351 1 251 1 336 1 207 1 28 1 172 1 139 1 283 1 34 1 154 1 
363 1 289 1 365 5 241 4 30 1 123 1 302 2 139 5 34 1 23 4 154 5 65 1 381 1 304 1 
365 2 47 1 139 2 311 1 154 2 23 2 159 1 241 2 
344 1 321 1 143 1 307 1 205 1 101 1 365 1 251 1 207 1 336 1 41 1 28 1 241 1 172 1 283 1 302 1 139 2 23 1 154 2 304 1 
365 3 302 1 139 3 34 1 65 1 154 3 23 3 241 3 
365 1 47 1 139 1 154 1 23 1 159 1 241 1 
365 1 45 1 47 1 139 1 154 1 23 1 65 1 381 1 241 1 
26 1 344 1 1 1 321 1 101 1 131 1 365 3 251 1 28 1 255 1 329 1 298 1 331 1 373 1 139 4 302 1 34 1 348 1 164 1 65 2 185 1 304 1 143 1 307 1 222 1 166 1 205 1 350 1 37 1 187 1 207 1 336 1 241 3 172 1 77 1 318 2 47 1 97 1 283 1 154 4 23 3 381 1 25 1 51 1 
30 1 123 1 365 2 139 2 302 1 34 1 154 2 23 1 241 1 
26 1 265 1 222 1 36 1 131 1 365 3 37 1 241 3 298 1 329 1 47 1 302 2 139 3 65 1 23 3 154 3 381 1 304 1 51 1 
365 2 41 1 241 2 302 1 139 2 65 1 23 2 154 2 381 1 332 1 
344 1 321 1 143 1 307 1 101 1 205 1 251 1 336 1 207 1 28 1 172 1 139 1 283 1 34 1 154 1 
344 1 321 1 143 1 307 1 101 1 205 1 251 1 336 1 207 1 275 1 172 1 212 1 139 1 34 1 154 1 
287 1 1 1 373 1 348 1 164 2 202 2 235 2 185 4 332 2 237 1 166 1 11 1 70 1 186 1 187 1 42 1 41 2 276 1 359 1 378 1 318 2 317 1 97 1 80 1 
365 1 37 1 47 1 139 1 154 1 23 1 311 1 241 1 
224 1 210 1 
224 1 210 1 
82 1 127 1 
82 1 127 1 
82 1 127 1 
107 1 224 1 210 1 
107 1 224 1 210 1 
171 1 224 1 210 1 
82 1 127 1 99 1 146 1 224 2 210 2 
107 1 224 1 210 1 
13 1 224 1 210 1 
13 1 224 1 210 1 
13 1 224 1 210 1 
365 2 292 1 161 1 298 1 232 1 301 1 139 2 34 1 9 1 141 1 222 1 171 1 241 2 313 1 224 1 210 1 211 1 122 1 340 1 341 1 244 1 21 1 23 2 154 2 
176 1 265 1 222 2 193 2 93 1 224 2 313 2 210 2 161 2 211 2 122 1 74 1 341 2 298 2 181 1 21 3 126 1 99 1 247 1 
192 1 66 1 81 1 
288 1 192 1 81 1 
288 1 342 1 259 1 192 3 66 2 219 1 
5 1 288 1 342 1 192 2 66 1 219 1 
288 1 342 2 192 2 66 1 219 1 
287 1 104 1 59 1 60 1 372 2 298 5 232 1 330 1 138 1 375 1 220 1 112 1 141 1 222 5 265 2 267 2 269 2 69 1 70 1 71 1 94 3 271 1 352 1 335 3 356 1 209 4 340 1 281 1 378 1 78 2 24 1 80 1 
249 1 287 3 27 1 178 1 104 6 59 1 29 1 60 1 232 4 298 9 330 2 258 1 375 2 220 1 222 9 265 5 267 6 269 6 69 2 70 3 71 3 238 5 94 9 271 2 352 2 335 8 356 3 209 7 339 5 378 3 78 6 153 1 191 1 24 1 80 3 
249 1 287 1 59 1 372 1 298 3 232 1 330 1 138 1 375 1 112 1 265 3 222 3 267 2 69 1 269 2 70 1 71 1 94 4 271 1 352 1 335 3 356 2 209 2 378 1 78 2 80 1 
249 1 287 2 27 1 178 1 59 1 372 2 298 4 232 2 330 1 258 1 138 1 375 1 112 1 265 4 222 4 267 4 269 4 69 1 70 2 71 2 94 7 271 1 352 1 335 5 356 3 209 3 378 2 78 4 80 2 
143 1 102 1 98 1 
143 1 319 1 
245 1 
321 1 143 1 207 1 
143 1 142 1 
143 1 207 1 
321 1 143 3 102 2 207 1 229 1 121 1 
287 1 11 2 324 2 323 1 70 1 120 1 56 1 273 1 57 1 338 1 294 1 359 3 164 3 49 1 128 1 235 4 185 7 
287 1 11 2 324 2 323 1 70 1 120 1 56 1 273 1 57 1 338 1 294 1 359 3 164 3 49 1 128 1 235 4 185 7 
287 1 11 2 324 2 323 1 70 1 56 1 120 1 273 1 57 1 338 1 294 1 359 3 198 1 164 3 49 1 128 1 235 4 185 7 
286 1 1 1 287 4 323 1 158 1 324 3 132 1 56 1 293 1 253 1 57 2 294 2 135 1 164 15 235 16 185 31 67 1 11 5 166 1 71 3 70 4 240 3 169 4 187 1 120 1 273 2 338 2 359 10 378 3 318 2 97 1 49 1 128 5 80 3 
287 1 1 2 324 2 132 1 56 1 4 1 57 1 294 1 164 4 235 5 185 9 166 2 11 3 70 1 187 2 120 1 273 1 274 1 338 1 359 4 318 4 97 2 128 1 49 1 
344 1 345 1 288 1 322 1 101 1 54 1 3 1 367 1 251 1 366 1 90 1 134 1 369 1 370 1 299 1 200 1 64 1 259 1 66 1 204 1 91 2 205 1 308 1 336 1 242 1 22 1 343 2 192 2 226 1 81 1 
344 1 84 1 345 1 288 1 101 1 54 1 3 1 367 1 251 1 366 1 90 1 134 1 369 1 137 1 299 1 64 2 259 1 66 1 204 1 91 3 205 1 308 1 336 1 242 1 314 1 22 1 343 3 192 2 226 1 81 1 
344 1 345 1 288 1 101 1 54 1 3 1 367 1 251 1 90 1 369 1 134 1 137 1 299 1 64 2 259 1 66 1 91 2 205 1 336 1 314 1 22 1 343 2 192 2 226 1 81 1 
344 1 84 1 101 1 367 2 251 1 134 2 369 2 6 1 299 2 204 1 143 1 91 1 205 1 145 1 336 1 207 1 272 1 172 1 242 1 18 1 343 1 125 1 284 1 
344 1 288 1 345 1 204 1 322 1 91 1 205 1 101 1 308 1 366 1 251 1 367 1 336 1 369 1 134 1 242 1 370 1 137 1 299 1 22 1 343 1 259 1 192 2 66 1 226 1 81 1 
39 1 
344 2 157 1 101 1 346 1 103 2 104 6 59 1 60 1 298 5 205 1 167 2 207 1 352 1 355 1 312 1 356 2 172 2 243 1 358 1 361 1 316 1 24 3 26 1 129 1 365 1 217 2 251 2 252 2 30 1 329 1 330 1 374 2 139 1 375 1 262 1 143 1 35 4 265 2 333 2 222 5 267 2 37 1 145 1 94 2 335 2 271 1 336 2 280 1 190 1 47 1 284 1 285 1 154 1 50 2 51 1 
26 1 365 1 104 2 30 1 329 1 298 3 61 1 374 1 139 1 262 1 35 2 222 3 37 1 312 1 355 1 358 1 280 1 190 1 47 1 154 1 24 1 51 1 
26 1 365 1 217 1 104 1 59 1 30 1 329 1 298 3 61 1 139 1 262 1 35 3 222 3 265 1 37 1 312 1 355 1 358 1 280 1 190 1 47 1 154 1 24 1 51 1 
26 1 365 1 103 1 217 1 104 2 59 1 30 1 61 1 329 1 298 3 374 1 139 1 262 1 35 3 222 3 265 1 37 1 312 1 355 1 358 1 280 1 190 1 47 1 154 1 24 1 51 1 
103 4 104 7 59 5 60 1 298 5 61 1 8 1 167 2 14 1 355 1 312 1 356 2 358 1 361 1 24 3 26 1 129 1 365 1 217 4 252 2 30 1 329 1 330 1 374 4 139 1 375 1 262 1 35 6 222 5 265 5 333 2 267 1 37 1 271 1 335 1 225 1 280 1 47 1 190 1 154 1 100 1 50 2 155 1 51 1 
346 1 103 2 104 4 59 1 60 1 298 4 167 2 355 1 312 1 356 2 358 1 361 1 24 2 129 1 26 1 365 1 217 2 252 2 30 1 329 1 330 1 374 2 139 1 375 1 262 1 35 4 222 4 333 2 265 2 267 1 37 1 94 2 271 1 335 1 280 1 47 1 190 1 154 1 50 2 51 1 
129 1 26 1 365 1 217 2 103 2 104 4 252 2 59 1 60 1 30 1 329 1 298 4 330 1 374 2 139 1 8 1 375 1 262 1 35 4 265 1 333 2 222 4 267 1 167 2 37 1 335 1 271 1 312 1 355 1 356 2 225 1 358 1 361 1 280 1 190 1 47 1 154 1 24 2 50 2 155 1 51 1 
129 1 26 1 365 1 217 2 103 2 104 4 252 2 59 1 60 1 30 1 329 1 298 4 330 1 374 2 139 1 8 1 375 1 262 1 35 4 265 1 333 2 222 4 267 1 167 2 37 1 335 1 271 1 312 1 355 1 356 2 225 1 358 1 361 1 280 1 190 1 47 1 154 1 24 2 50 2 155 1 51 1 
26 1 365 1 194 1 217 2 103 2 104 4 252 2 59 1 60 1 30 1 329 1 298 4 330 1 374 2 163 2 139 1 375 1 260 1 262 1 68 1 35 4 265 1 222 4 267 1 37 1 94 2 335 1 271 1 312 1 355 1 358 1 361 1 280 1 380 2 190 1 47 1 154 1 24 2 50 2 155 1 51 1 
129 1 26 1 365 1 103 3 217 3 104 5 252 2 59 1 60 1 30 1 329 1 298 4 330 1 374 3 8 1 139 1 375 1 262 1 35 5 265 1 333 2 222 4 267 1 167 2 37 1 335 1 271 1 312 1 355 1 356 2 225 1 358 1 361 1 280 1 190 1 47 1 154 1 24 2 50 2 100 1 155 1 51 1 
129 1 26 1 365 1 103 3 217 3 104 5 252 2 59 1 60 1 30 1 329 1 298 4 330 1 374 3 8 1 139 1 375 1 262 1 35 5 265 1 333 2 222 4 267 1 167 2 37 1 335 1 271 1 312 1 355 1 356 2 225 1 358 1 361 1 280 1 190 1 47 1 154 1 24 2 50 2 100 1 155 1 51 1 
346 1 103 2 104 4 59 1 60 1 298 4 163 2 68 1 355 1 312 1 358 1 361 1 24 2 26 1 365 1 217 2 252 2 30 1 329 1 330 1 374 2 139 1 375 1 262 1 35 4 222 4 265 1 267 1 37 1 94 2 271 1 335 1 280 1 47 1 190 1 380 2 154 1 50 2 51 1 
1 1 287 1 324 1 56 1 373 1 348 1 34 2 164 3 202 1 235 3 185 6 332 1 166 1 11 2 70 1 187 1 120 1 41 1 273 1 42 1 338 1 359 2 318 2 98 1 97 1 49 1 
1 2 287 2 215 1 253 1 135 1 331 1 373 1 34 1 33 1 348 2 164 6 202 11 235 8 113 1 185 14 332 4 165 1 11 1 166 2 71 2 70 1 169 3 240 3 187 2 41 11 359 2 124 1 46 1 378 1 318 4 97 2 128 1 80 2 
344 1 321 1 1 1 101 1 365 1 291 1 251 1 28 1 110 1 373 1 331 1 139 2 302 1 34 1 348 1 164 1 235 1 304 1 185 2 332 1 143 1 165 1 307 1 205 1 166 1 187 1 351 1 207 1 336 1 241 1 172 1 277 1 46 1 318 2 283 1 97 1 154 2 23 1 
344 3 1 3 287 3 101 2 56 1 105 1 302 1 348 3 164 10 202 7 235 10 304 1 165 1 307 2 11 4 166 3 205 2 115 1 350 2 70 3 71 2 117 1 120 1 207 2 241 1 172 1 359 8 318 6 23 1 128 4 246 2 248 2 80 2 321 2 324 1 365 1 251 3 28 2 327 2 137 1 257 2 331 1 373 3 139 3 34 2 185 20 332 7 143 2 187 3 336 3 273 1 41 7 338 1 46 1 378 2 97 3 283 2 49 1 154 3 
156 1 344 6 321 1 1 2 101 3 365 1 325 1 251 7 368 1 58 1 160 1 371 1 297 1 347 2 373 2 331 1 200 1 139 1 302 1 348 2 164 1 303 1 235 1 185 2 221 1 236 1 143 4 165 1 205 4 166 2 116 1 187 2 145 1 336 7 207 3 42 1 241 1 172 2 318 4 97 2 284 1 154 1 23 1 
1 1 287 1 365 1 373 1 139 1 348 1 202 1 65 1 164 2 235 1 185 3 332 1 11 1 166 1 71 1 70 1 187 1 41 1 95 1 241 1 359 1 46 1 378 1 318 2 97 1 23 1 154 1 381 1 80 1 
1 1 287 1 166 1 187 1 41 1 42 1 359 1 373 1 318 2 317 1 97 1 348 1 128 1 202 1 235 2 185 2 332 1 80 1 
1 1 11 1 166 1 70 1 186 1 187 1 41 1 42 1 359 1 373 1 378 1 318 2 97 1 348 1 202 1 164 2 185 2 332 1 
287 1 1 1 373 1 348 1 202 2 164 2 235 2 185 4 332 2 166 1 11 1 71 1 70 1 187 1 42 1 41 2 359 2 378 1 318 2 97 1 128 1 80 1 
1 1 287 1 166 1 187 1 41 1 160 1 359 1 373 1 318 2 317 1 97 1 348 1 128 1 202 1 235 2 185 2 332 1 80 1 
1 1 11 1 166 1 70 1 186 1 187 1 41 1 160 1 359 1 373 1 378 1 318 2 97 1 348 1 202 1 164 2 185 2 332 1 
287 1 1 1 160 1 373 1 348 1 202 2 164 2 235 2 185 4 332 2 166 1 11 1 71 1 70 1 187 1 41 2 359 2 378 1 318 2 97 1 128 1 80 1 
1 1 287 1 11 1 166 1 70 1 71 1 187 1 41 2 359 2 378 1 373 1 318 2 97 1 348 1 164 2 128 1 202 2 235 2 185 4 332 2 80 1 
344 1 321 1 1 1 101 1 251 1 28 1 373 1 331 1 139 1 34 1 348 1 164 1 235 1 185 2 165 1 143 1 307 1 205 1 166 1 350 1 187 1 207 1 336 1 172 1 318 2 283 1 97 1 154 1 
344 1 321 1 1 1 101 1 251 1 373 1 331 1 139 1 34 1 348 1 164 1 235 1 185 2 165 1 264 1 143 1 307 1 205 1 166 1 187 1 207 1 336 1 275 1 172 1 212 1 318 2 97 1 154 1 
287 1 1 1 373 1 348 1 202 2 164 2 235 2 185 4 332 2 166 1 11 1 71 1 70 1 187 1 41 2 359 2 46 1 378 1 318 2 97 1 128 1 80 1 
344 1 287 1 321 1 1 1 101 1 251 1 28 1 327 1 373 1 200 1 139 1 348 1 164 2 202 2 235 2 185 4 332 2 143 1 307 1 11 1 205 1 166 1 350 1 70 1 71 1 187 1 336 1 207 1 41 2 359 2 378 1 318 2 283 1 97 1 128 1 154 1 80 1 
1 1 287 1 365 1 87 1 373 1 139 1 348 1 164 1 65 1 202 1 235 2 185 3 332 1 166 1 70 1 71 1 187 1 41 1 241 1 359 1 378 1 46 1 318 2 97 1 128 1 23 1 154 1 381 1 80 1 
1 2 287 3 177 1 86 1 216 2 218 1 253 1 89 1 4 1 135 1 164 10 235 9 185 19 305 1 11 3 166 2 71 3 70 3 169 2 239 1 240 1 187 2 377 2 359 6 378 3 20 1 318 4 97 2 128 3 80 3 
1 3 287 3 83 1 177 2 216 4 132 2 218 2 89 1 4 1 253 2 164 12 235 14 185 26 11 2 166 3 70 2 71 3 239 1 169 2 240 2 187 3 270 1 278 1 377 1 43 1 359 4 174 1 76 1 378 2 20 1 318 6 97 3 128 2 80 3 
287 5 1 3 56 1 4 1 164 21 235 20 166 3 11 4 70 5 71 4 240 3 239 1 169 4 120 1 359 8 174 1 76 1 318 6 20 1 128 4 80 4 177 2 83 1 86 1 324 1 216 4 132 1 218 1 89 1 253 3 135 1 185 41 187 3 270 1 273 1 147 1 338 1 278 1 43 1 377 1 378 4 97 3 49 1 
1 4 287 5 83 1 177 2 86 1 324 1 216 4 132 2 56 1 218 1 253 3 89 1 4 1 135 1 164 18 235 20 185 38 11 4 166 4 71 4 70 4 169 4 239 1 240 3 187 4 270 1 120 1 273 1 147 1 338 1 278 1 377 1 43 1 359 7 174 1 76 1 378 3 20 1 318 8 97 4 49 1 128 3 80 4 
1 2 287 8 83 1 177 1 324 1 216 4 132 1 56 1 218 1 253 2 89 1 4 1 135 2 33 2 164 25 235 27 185 52 11 7 166 2 71 7 70 8 169 4 239 1 240 4 187 2 270 1 120 1 273 1 338 1 278 1 377 1 43 1 359 14 174 1 76 1 378 7 20 1 318 4 97 2 49 1 128 7 80 7 
161 1 176 1 211 1 74 1 341 1 92 1 99 1 313 1 224 1 210 1 
244 1 171 1 
161 1 148 1 211 1 341 1 364 1 223 1 313 1 224 1 210 1 
107 1 296 1 
13 1 201 1 146 1 
176 1 265 1 222 1 193 1 93 1 224 1 313 1 210 1 161 1 122 1 211 1 74 1 298 1 341 1 181 1 21 2 99 1 247 1 
176 1 265 1 222 1 193 1 93 1 224 1 313 1 210 1 161 1 122 1 211 1 74 1 298 1 341 1 181 1 21 2 99 1 247 1 
176 1 265 1 222 1 193 1 93 1 224 1 313 1 210 1 161 1 122 1 211 1 74 1 298 1 341 1 181 1 21 2 99 1 247 1 
107 1 296 1 146 1 
107 1 296 1 146 1 
13 1 201 1 
13 1 201 1 146 1 
292 1 9 1 
193 1 365 2 292 1 161 1 298 1 232 1 181 1 301 1 139 2 34 1 9 1 141 1 222 1 206 1 171 1 209 1 313 1 224 1 241 2 210 1 211 1 340 1 341 1 244 1 21 1 154 2 23 2 
344 2 1 1 101 1 365 2 251 2 297 1 347 2 373 1 182 1 331 1 139 2 348 1 261 1 164 1 235 1 185 2 140 1 143 1 236 1 165 1 205 1 166 1 187 1 207 1 336 2 337 1 72 1 46 1 318 2 97 1 154 2 
344 2 288 1 345 1 205 1 101 1 227 1 308 1 251 2 336 2 231 1 137 1 299 1 213 1 200 1 259 1 192 2 66 1 226 1 81 1 
344 1 288 1 345 1 227 1 101 1 205 1 308 1 118 1 251 1 336 1 137 1 299 1 259 1 192 2 66 1 226 1 81 1 
344 1 143 1 205 1 101 1 145 1 251 1 207 1 336 1 208 1 272 1 172 1 231 1 299 1 284 1 
344 1 288 1 345 1 205 1 227 1 101 1 308 1 251 1 336 1 231 1 137 1 299 1 213 1 259 1 192 2 66 1 226 1 81 1 
7 1 
265 1 267 1 98 1 335 1 234 1 320 1 59 1 
129 1 104 1 59 1 60 1 298 1 330 1 375 1 333 1 265 2 222 1 267 1 167 1 94 1 335 1 271 1 356 1 24 1 
344 3 287 2 157 1 101 3 102 2 2 1 104 5 59 2 60 4 298 5 200 1 233 2 111 1 234 1 306 2 205 4 71 2 70 2 352 2 207 3 121 1 356 6 17 2 172 1 78 6 79 2 319 3 320 1 24 3 246 2 80 2 26 2 130 1 321 3 214 2 251 3 326 1 330 4 375 4 142 2 376 2 143 10 222 5 266 2 265 8 267 8 269 6 94 12 188 2 335 9 271 4 336 3 378 2 152 1 
287 2 83 1 157 1 104 1 253 1 59 2 60 2 298 1 330 2 375 2 144 1 222 1 265 5 267 5 269 5 71 2 70 2 169 1 240 1 334 1 94 6 270 1 352 1 188 2 335 8 271 2 17 1 356 3 278 1 174 1 76 1 378 2 78 5 24 1 80 2 
287 2 365 1 230 1 88 1 159 1 254 1 60 1 298 1 330 1 139 1 8 1 375 1 65 1 222 1 267 2 70 1 188 2 271 1 335 2 273 1 17 1 241 1 338 1 47 1 154 1 49 1 23 1 25 1 
265 1 267 1 271 1 335 1 59 1 60 1 330 1 375 1 234 1 320 1 
287 2 265 5 267 5 269 5 71 2 70 2 94 10 188 2 335 5 17 1 356 5 378 2 78 5 246 1 80 2 
265 1 222 1 298 1 104 1 24 1 59 1 
249 1 344 4 130 2 101 1 157 2 251 4 104 4 326 1 60 1 298 3 330 2 375 2 143 1 222 3 205 1 267 2 145 1 207 1 271 2 336 4 352 2 335 2 172 2 96 1 243 1 284 1 285 1 175 1 24 2 
344 1 1 1 321 1 101 1 365 2 251 1 28 1 331 1 373 1 139 3 34 1 348 1 164 1 65 2 185 1 143 1 307 1 205 1 166 1 350 1 187 1 336 1 207 1 241 2 172 1 77 1 318 2 97 1 283 1 154 3 23 2 25 1 
265 4 324 1 267 2 157 1 269 2 94 4 271 1 352 1 335 1 356 2 59 2 60 1 330 1 78 2 375 1 
341 1 48 1 313 1 
341 1 48 1 313 1 
74 1 268 1 341 1 9 1 313 1 
341 1 48 1 313 1 
341 1 55 1 313 1 
341 1 55 1 313 1 
341 1 55 1 313 1 
341 1 313 1 
224 1 210 1 
287 1 1 2 324 1 11 2 166 2 70 1 187 2 132 1 120 1 56 1 273 1 338 1 359 3 318 4 97 2 49 1 164 4 128 1 235 4 185 8 
287 1 324 1 11 2 70 1 120 1 56 1 273 1 338 1 359 2 98 1 164 3 49 1 235 3 185 6 
1 1 287 1 11 1 166 1 70 1 71 1 187 1 359 2 199 1 378 1 318 2 97 1 164 2 128 1 235 2 185 4 80 1 
287 1 11 1 70 1 71 1 169 2 240 1 253 1 135 1 359 2 378 1 164 4 128 1 235 3 185 7 80 1 
287 3 1 2 324 1 132 2 56 1 135 1 33 1 164 12 235 11 185 23 11 5 166 2 71 2 70 3 240 2 169 2 187 2 120 1 273 2 338 2 359 9 124 1 378 2 318 4 151 1 97 2 49 1 128 4 80 2 
169 1 164 1 185 1 
240 1 235 1 185 1 
1 1 287 1 166 1 11 2 71 1 70 1 187 1 359 3 199 1 378 1 318 2 97 1 164 3 128 1 246 1 235 3 185 6 80 1 
1 1 287 2 83 1 253 1 4 1 164 6 235 6 185 12 166 1 11 1 71 2 70 2 240 1 169 1 187 1 270 1 278 1 359 2 174 1 76 1 378 2 318 2 97 1 128 1 80 2 
287 1 11 1 70 1 273 1 338 1 359 2 49 1 164 3 128 1 235 3 185 6 
1 1 11 1 166 1 187 1 132 1 56 1 120 1 273 1 338 1 359 2 151 1 318 2 97 1 128 1 164 2 235 1 185 3 
1 1 287 2 166 1 11 3 70 2 187 1 273 2 4 1 254 1 338 2 359 5 318 2 97 1 128 2 164 5 49 1 235 5 185 10 
1 1 287 1 166 1 187 1 4 1 359 1 318 2 97 1 128 1 235 2 185 2 80 1 
1 1 287 1 11 1 166 1 70 1 71 1 187 1 4 1 359 2 378 1 318 2 97 1 164 2 128 1 235 2 185 4 80 1 
1 3 86 1 166 3 11 1 187 3 132 1 273 1 4 1 338 1 359 2 151 1 318 6 97 3 164 2 128 1 235 1 185 3 
286 1 1 5 287 5 86 1 324 1 132 2 56 1 293 1 253 1 4 1 135 1 199 1 164 18 235 16 185 34 67 1 166 5 11 7 71 3 70 5 169 4 240 3 187 5 120 1 273 3 338 3 359 12 378 3 151 1 318 10 97 5 49 2 128 5 80 3 
287 1 1 1 324 1 56 1 253 1 4 1 164 4 235 4 185 8 166 1 11 2 70 1 240 1 169 1 187 1 120 1 273 1 338 1 359 2 76 1 318 2 97 1 49 1 
1 2 287 2 324 1 56 1 253 1 4 1 135 1 199 1 164 5 235 6 185 11 11 2 166 2 70 1 71 1 169 2 240 1 187 2 120 1 273 1 338 1 359 3 76 1 318 4 97 2 49 1 128 1 80 1 
1 3 287 3 83 1 324 1 132 1 56 1 253 1 4 1 199 1 164 10 235 9 185 19 166 3 11 3 71 2 70 3 240 1 169 1 187 3 270 1 120 1 273 1 338 1 278 1 359 4 174 1 76 1 378 2 318 6 97 3 49 1 128 1 80 2 
1 3 287 3 83 1 324 1 132 1 56 1 253 1 4 1 199 1 164 7 235 10 185 17 166 3 11 3 71 2 70 2 240 1 169 1 187 3 270 1 120 1 273 1 338 1 278 1 359 5 174 1 76 1 378 1 318 6 97 3 49 1 128 2 80 2 
287 1 1 1 324 1 56 1 253 1 4 1 164 4 235 4 185 8 166 1 11 2 70 1 240 1 169 1 187 1 120 1 273 1 338 1 359 2 76 1 318 2 97 1 49 1 
1 1 287 2 83 1 253 1 4 1 164 6 235 6 185 12 166 1 11 1 71 2 70 2 240 1 169 1 187 1 270 1 278 1 359 2 174 1 76 1 378 2 318 2 97 1 128 1 80 2 
1 4 287 3 83 1 324 1 132 2 56 1 253 1 4 1 199 1 164 8 235 10 185 18 166 4 11 3 71 2 70 2 169 1 240 1 187 4 270 1 120 1 273 1 338 1 278 1 359 5 174 1 76 1 378 1 318 8 97 4 49 1 128 2 80 2 
1 4 287 3 83 1 86 1 132 2 253 1 4 1 164 7 235 9 185 16 166 4 11 3 71 3 70 2 169 1 240 1 187 4 270 1 278 1 359 6 174 1 76 1 378 2 318 8 97 4 128 3 80 3 
287 1 11 3 70 1 120 1 56 2 273 3 338 3 359 6 164 4 128 3 49 1 235 3 185 7 
1 4 287 3 83 1 86 1 324 1 132 2 56 1 253 1 4 1 164 8 235 10 185 18 166 4 11 3 71 2 70 2 169 1 240 1 187 4 270 1 120 1 273 1 338 1 278 1 359 4 174 1 76 1 378 1 318 8 97 4 49 1 128 1 80 2 
30 1 123 1 365 1 139 1 34 1 154 1 16 1 
365 1 196 1 12 1 16 1 123 1 30 1 197 1 279 1 300 1 139 1 34 1 154 1 
344 1 172 1 143 1 205 1 101 1 145 1 284 1 98 1 251 1 207 1 336 1 
344 1 321 1 143 1 307 1 205 1 101 1 365 1 251 1 207 1 336 1 241 1 172 1 302 1 139 2 283 1 34 1 23 1 154 2 
344 1 321 2 130 1 143 3 266 1 307 1 205 1 101 1 365 2 37 1 251 1 207 2 336 1 241 1 47 1 302 1 139 2 283 1 34 1 23 2 154 2 142 1 51 1 
344 2 130 1 321 2 85 1 101 1 365 2 251 2 139 2 302 1 34 1 142 1 143 3 307 1 266 1 205 1 37 1 336 2 207 2 241 1 275 1 47 1 154 2 23 2 51 1 
344 2 26 1 130 1 321 1 101 1 365 1 102 1 104 1 251 2 88 1 230 1 159 1 59 1 298 2 136 1 139 1 65 1 142 1 143 4 222 2 266 1 265 1 205 1 336 2 207 1 241 1 172 1 360 1 47 1 319 1 154 1 23 1 25 1 
26 1 344 3 321 1 130 1 143 4 85 1 265 1 266 1 222 2 205 1 101 1 102 1 251 3 104 1 207 1 336 3 59 1 172 1 298 2 233 1 319 1 142 1 
344 1 205 1 101 1 325 1 251 1 336 1 
156 1 344 5 321 1 236 1 143 3 101 2 205 3 116 1 325 1 251 6 336 6 207 2 368 1 58 1 121 1 172 2 315 1 347 1 200 1 303 1 
344 1 287 1 321 1 1 2 324 1 101 1 365 1 251 1 56 1 28 1 327 1 257 1 373 2 182 1 200 1 139 2 302 1 34 2 348 2 202 1 164 3 235 3 185 6 332 1 143 1 307 1 11 2 205 1 166 2 350 1 70 1 187 2 120 1 207 1 336 1 41 1 273 1 241 1 338 1 359 2 46 1 318 4 97 2 283 1 49 1 154 2 23 1 
344 1 26 1 214 1 102 1 251 1 104 2 326 1 59 1 60 2 298 3 330 2 233 1 375 2 234 1 376 1 143 2 265 1 222 3 267 1 335 1 336 1 271 2 209 1 172 1 79 1 319 1 320 1 24 1 
344 2 321 1 143 2 101 1 205 2 102 1 2 1 325 1 251 2 336 2 207 1 121 1 200 1 
344 4 143 1 85 1 205 1 101 1 145 1 251 4 336 4 207 1 172 1 173 1 200 1 284 1 
344 2 130 1 321 1 143 1 101 1 205 2 115 1 116 1 251 2 336 2 207 1 371 1 303 1 221 1 
344 1 172 1 288 1 345 1 205 1 101 1 251 1 192 1 336 1 81 1 
344 2 236 1 143 1 101 1 205 1 251 2 336 2 207 1 72 1 137 1 200 1 
344 4 156 1 130 1 236 1 143 3 101 2 205 2 145 1 251 5 336 5 207 2 368 1 172 1 173 1 200 1 284 1 
344 4 130 1 236 1 143 3 101 2 205 2 145 1 251 5 336 5 207 2 368 1 172 1 109 1 173 1 200 1 284 1 
344 1 321 1 143 1 307 1 205 1 101 1 365 1 251 1 207 1 336 1 241 1 275 1 172 1 302 1 139 2 34 1 23 1 154 2 
344 1 130 1 321 1 143 1 101 1 205 2 116 1 251 1 336 1 207 1 121 1 315 1 303 1 
162 1 38 1 34 1 353 1 180 1 
26 1 265 1 222 2 131 1 228 1 37 1 38 1 353 2 59 1 209 1 180 2 162 2 295 1 298 2 329 1 31 1 47 1 34 1 51 1 
365 1 38 1 353 1 337 1 162 1 139 1 261 1 154 1 140 1 
295 1 228 1 38 1 
54 1 3 1 98 1 90 1 
242 1 204 1 91 1 54 1 3 1 343 1 90 1 
91 1 367 1 369 1 
242 1 108 1 204 1 91 3 322 1 75 2 309 1 54 1 3 1 343 3 10 1 90 1 
242 1 204 1 91 2 54 1 3 1 64 1 179 1 343 2 90 1 
73 1 242 1 204 1 91 1 322 1 168 1 54 1 343 1 192 1 66 1 81 1 
242 1 204 1 91 1 322 1 54 1 3 1 343 1 
242 1 204 1 91 1 322 1 3 2 343 1 90 1 
0 1 204 2 322 1 91 2 54 1 3 1 170 1 242 2 379 1 343 2 
204 1 322 1 91 3 54 2 3 1 15 1 90 1 242 1 106 1 73 1 44 1 64 2 343 3 
203 1 288 1 204 1 322 1 91 2 54 1 3 1 90 1 242 1 64 1 343 2 192 2 259 1 66 1 81 1 
204 2 322 1 91 4 310 1 54 2 3 1 179 1 90 1 242 2 73 1 44 1 64 2 343 4 
242 1 204 1 91 1 322 1 54 1 3 1 343 1 90 1 
204 1 91 4 54 3 3 2 90 2 242 1 73 1 108 1 357 1 75 1 44 1 64 2 343 4 10 1 
204 1 322 1 91 2 52 1 54 1 119 1 3 1 90 1 242 1 183 1 64 1 343 2 
204 1 322 1 91 3 54 1 290 1 3 1 90 1 242 1 108 1 75 2 343 3 10 2 
149 2 362 1 19 1 54 2 
242 1 263 1 204 1 91 1 322 1 343 1 
106 1 242 1 204 1 91 2 322 1 54 1 3 1 64 1 343 2 90 1 
250 1 
242 1 204 1 91 1 322 1 54 1 3 1 343 1 90 1 
204 1 322 1 91 3 54 1 3 1 90 1 242 1 106 1 75 1 64 1 343 3 
73 1 357 1 44 1 54 1 
54 1 3 1 

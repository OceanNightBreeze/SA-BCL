#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
16 1 95 1 342 1 153 1 195 2 296 2 359 2 284 1 65 1 208 3 79 3 9 1 50 1 
167 2 58 1 212 1 128 1 342 2 153 6 195 5 345 1 154 2 284 4 65 1 372 1 285 1 68 1 9 3 176 1 220 1 267 1 16 1 95 1 357 2 359 2 296 2 270 2 229 1 79 9 208 9 50 1 
167 2 58 1 212 1 128 1 342 2 153 6 195 5 345 1 154 2 284 4 65 1 372 1 285 1 68 1 9 3 176 1 220 1 267 1 16 1 95 1 357 2 359 2 296 2 270 2 229 1 79 9 208 9 50 1 
167 2 58 1 212 1 128 1 342 2 153 7 195 6 345 1 154 2 284 5 65 1 372 1 285 1 68 1 9 4 176 1 220 1 267 1 16 1 95 1 357 2 359 2 296 2 270 2 229 1 79 10 208 10 50 1 
167 2 58 1 212 1 128 1 342 2 153 4 195 4 345 1 154 1 284 3 65 1 372 1 68 1 9 2 176 1 220 1 267 1 16 1 95 1 357 2 359 2 296 2 270 2 229 1 79 7 208 7 50 1 
167 1 16 1 128 1 153 3 195 3 357 1 345 1 296 1 359 1 270 1 154 2 284 2 65 1 285 1 9 1 208 4 79 4 50 1 
167 1 255 1 267 1 351 1 16 1 342 1 195 1 33 1 296 1 359 1 270 1 65 1 68 1 208 2 79 2 50 1 
167 1 212 1 128 1 190 1 342 1 153 7 195 5 345 1 154 2 284 4 317 1 65 1 285 1 9 3 16 1 95 1 357 1 359 2 296 2 270 1 229 1 79 9 208 9 50 1 
167 1 212 1 128 1 190 1 342 1 153 7 195 5 345 1 154 2 284 4 317 1 65 1 285 1 9 3 16 1 95 1 357 1 359 2 296 2 270 1 229 1 79 9 208 9 50 1 
113 1 273 1 210 1 268 1 222 1 40 1 311 1 282 1 197 1 198 1 92 1 173 1 134 1 288 1 
188 1 
273 1 104 1 197 2 266 1 316 1 188 1 268 2 67 1 
83 5 125 5 232 1 210 1 1 2 273 2 188 2 340 1 366 1 168 1 311 1 282 1 198 1 197 5 316 2 92 1 173 1 134 1 67 1 288 1 157 1 264 1 113 1 290 2 291 1 93 1 266 2 94 2 222 1 268 5 40 1 204 1 180 1 75 1 182 2 228 2 80 1 271 2 
85 1 316 1 188 1 
361 1 188 1 39 2 
40 2 311 2 210 2 282 1 198 2 92 2 26 1 134 2 
100 1 0 1 210 2 304 1 127 1 130 1 368 2 311 2 343 2 62 1 314 1 312 1 132 1 282 1 172 1 105 1 198 3 92 2 134 3 349 2 70 1 36 1 71 1 13 1 353 1 224 1 377 1 40 2 327 1 141 1 43 1 97 1 78 2 48 2 26 1 334 1 335 1 
40 1 113 1 311 1 210 1 282 1 198 1 92 1 173 1 134 1 288 1 
113 1 38 1 188 1 268 1 162 1 4 1 358 1 198 1 197 1 107 1 316 1 92 1 145 1 134 1 
113 1 210 1 38 1 188 1 268 2 162 1 40 1 311 1 4 1 358 1 197 2 198 1 316 1 92 1 134 1 
139 1 273 1 197 1 266 1 268 1 
273 1 197 2 266 1 276 1 316 1 188 1 268 2 67 1 
197 1 266 1 268 1 
210 1 221 1 169 1 40 1 311 1 198 2 92 2 26 2 134 2 
292 1 303 1 186 1 
0 1 374 1 224 1 368 1 312 1 43 1 97 1 172 1 198 1 105 1 48 1 26 1 334 1 134 1 349 1 36 1 
0 1 301 1 292 1 210 1 224 1 40 1 368 1 312 1 43 1 97 1 172 1 105 1 198 2 92 1 48 1 251 1 334 1 134 2 349 1 36 1 
85 1 26 1 
301 1 210 4 221 1 40 4 311 1 216 1 198 5 92 5 145 1 251 2 26 1 111 1 134 5 27 1 
40 2 320 1 113 1 210 2 198 2 92 2 134 2 288 1 
40 3 311 1 210 3 198 3 92 3 251 1 26 1 134 3 
40 1 113 1 210 1 198 1 92 1 134 1 288 1 
40 1 113 1 311 1 210 1 198 1 92 1 221 1 134 1 169 1 
100 1 0 1 301 1 210 3 306 1 127 1 367 1 130 1 368 1 311 2 4 1 343 1 62 1 312 1 132 1 172 1 282 1 105 1 198 4 197 1 92 3 134 4 349 1 36 1 71 1 113 1 13 1 38 1 221 1 268 1 224 1 377 1 162 1 40 3 327 1 141 1 43 1 97 1 358 1 78 2 48 1 251 1 26 1 334 1 
40 1 210 1 198 2 92 2 145 1 251 1 26 1 111 1 134 2 
113 1 301 1 210 3 38 1 306 1 188 1 221 1 268 1 162 1 40 3 193 1 311 1 4 1 358 1 197 1 198 3 92 3 251 2 134 3 
210 2 292 1 303 1 221 1 40 2 311 1 198 2 92 2 251 1 134 2 
0 1 224 1 368 1 312 1 43 1 172 1 97 1 198 1 105 1 48 1 26 1 334 1 134 1 349 1 36 1 
219 1 209 1 0 1 224 1 368 1 172 1 97 1 198 1 105 1 48 1 26 1 334 1 134 1 349 1 36 1 
100 1 337 1 274 1 186 2 303 2 127 1 55 1 88 1 130 1 343 4 348 1 175 1 71 2 13 1 292 2 202 1 377 1 295 1 141 1 182 1 78 2 335 2 271 1 299 1 
40 1 113 1 320 1 210 1 198 1 92 1 134 1 162 1 
246 1 66 1 223 1 
123 1 196 1 76 1 364 1 66 2 223 2 
66 1 223 1 
66 1 223 1 
196 1 76 1 
196 1 76 1 
196 1 76 1 
66 1 223 1 225 1 
66 1 223 1 225 1 
66 1 223 1 225 1 
280 1 66 1 223 1 
280 1 66 1 223 1 
280 1 66 1 223 1 
210 2 126 1 363 1 256 1 257 1 235 1 239 1 197 1 198 2 133 1 92 2 241 1 66 1 134 2 11 1 14 1 246 1 323 1 268 1 223 1 40 2 118 1 360 1 26 1 
28 1 336 1 14 2 363 3 364 1 138 2 188 1 213 1 323 2 268 2 223 2 235 1 21 1 118 2 181 1 96 1 197 2 360 2 66 2 
357 1 33 1 167 2 376 2 110 1 
357 1 167 1 270 1 
33 1 167 1 270 1 
357 2 33 1 167 3 376 1 147 1 110 1 
357 1 33 1 167 2 354 1 376 1 110 1 
361 1 81 1 83 2 125 3 53 2 54 1 1 1 273 4 84 1 253 2 256 1 55 1 188 2 194 1 239 1 197 5 316 1 67 1 217 2 264 1 158 1 11 1 266 1 202 1 94 1 39 3 268 5 331 1 182 1 228 1 49 1 271 1 
361 3 81 1 83 6 125 8 53 6 273 7 1 2 233 1 307 1 55 3 188 5 192 5 279 1 90 1 131 1 197 9 346 1 316 1 67 1 217 6 264 1 11 4 158 2 266 6 202 3 94 2 39 9 268 9 139 5 75 1 331 3 182 3 228 2 49 2 271 3 
361 2 83 2 125 3 273 2 84 1 54 1 1 1 253 1 53 2 188 3 55 1 197 3 316 1 217 2 158 1 11 1 202 1 94 1 39 4 268 3 75 1 331 1 182 1 228 1 49 1 271 1 
361 3 83 4 125 5 53 4 1 1 84 1 54 1 253 2 273 3 233 1 188 4 55 2 90 1 197 4 346 1 316 1 217 4 158 1 11 2 202 2 94 1 39 7 268 4 75 1 331 2 182 2 228 1 49 1 271 2 
3 1 
97 1 143 1 85 1 
12 1 97 1 
97 1 105 1 224 1 
97 1 44 1 
97 1 224 1 
362 1 143 2 97 3 105 1 148 1 224 1 
71 3 51 1 159 2 72 1 274 2 211 1 339 1 340 1 366 1 355 1 226 1 204 1 343 7 182 1 77 1 348 3 271 1 335 4 
51 1 211 1 274 5 187 3 339 5 305 1 55 3 127 1 340 1 366 2 103 1 130 1 343 31 32 1 344 1 348 10 135 1 71 15 159 3 202 3 355 2 377 1 226 1 204 2 330 1 141 1 331 3 332 4 182 4 250 1 77 2 78 2 335 16 271 4 
274 3 211 1 339 1 127 2 340 1 366 1 130 2 343 9 32 1 348 4 71 4 159 2 355 1 377 2 226 1 204 1 141 2 182 1 77 1 78 4 24 1 333 1 271 1 335 5 
71 3 51 1 159 2 274 2 211 1 339 1 340 1 366 1 355 1 226 1 204 1 343 7 182 1 77 1 348 3 271 1 335 4 
71 3 51 1 159 2 274 2 211 1 339 1 340 1 366 1 355 1 226 1 204 1 343 7 182 1 77 1 348 3 271 1 335 4 
0 1 114 1 258 1 342 2 224 1 60 2 161 1 368 1 329 1 248 1 171 2 172 1 97 1 296 1 359 1 371 2 106 1 48 1 334 1 149 1 208 1 79 1 349 1 
124 1 0 1 167 2 191 1 342 1 60 1 368 1 33 1 171 1 172 1 371 1 347 1 349 1 242 1 244 1 321 1 16 1 357 1 359 1 296 1 270 1 121 1 48 1 147 1 79 1 208 1 
124 1 0 1 167 2 342 1 236 1 60 1 153 1 368 1 195 1 33 1 171 1 172 1 371 1 65 1 347 1 349 1 242 1 244 1 321 1 16 1 357 1 359 1 296 1 270 1 121 1 48 1 147 1 79 2 208 2 50 1 
124 1 0 1 167 2 191 1 342 1 60 1 153 2 368 1 195 1 33 1 171 1 172 1 371 1 65 1 347 1 349 1 242 1 321 1 161 1 22 1 357 1 359 1 296 1 270 1 121 1 48 1 147 1 79 3 208 3 50 1 
124 1 0 1 167 2 191 1 342 1 60 1 153 2 368 1 195 1 33 1 171 1 172 1 371 1 65 1 347 1 349 1 242 1 22 1 357 1 270 1 48 1 147 1 79 2 208 2 50 1 
56 1 
52 1 99 4 0 1 1 1 275 2 188 2 5 1 4 1 63 1 197 5 198 1 106 1 107 1 64 2 108 2 67 3 349 2 112 1 113 1 158 1 114 1 162 1 119 1 358 1 205 1 163 1 166 2 300 2 361 2 83 2 125 2 30 1 31 1 214 2 368 2 172 1 316 1 92 1 134 1 218 1 264 1 373 1 38 1 266 6 94 1 39 2 268 5 224 1 142 2 97 1 228 1 48 2 145 1 334 2 379 1 
300 1 99 2 113 1 373 1 38 1 266 2 268 3 162 1 4 1 5 1 119 1 104 1 63 1 358 1 197 3 198 1 107 1 205 1 92 1 145 1 67 1 134 1 
99 3 113 1 373 1 38 1 266 1 188 1 268 3 162 1 4 1 5 1 119 1 104 1 142 1 63 1 358 1 197 3 198 1 107 1 316 1 205 1 92 1 145 1 67 1 134 1 
300 1 99 3 188 1 5 1 4 1 104 1 63 1 198 1 197 3 107 1 316 1 92 1 108 1 67 1 134 1 113 1 373 1 38 1 266 2 268 3 162 1 119 1 358 1 142 1 205 1 145 1 
52 1 99 6 1 1 275 2 188 5 4 1 5 1 104 1 63 1 198 1 197 5 107 1 283 1 64 2 108 4 67 3 243 1 113 1 73 1 18 1 162 1 119 1 358 1 297 1 205 1 166 2 300 4 361 2 83 1 125 1 31 1 214 2 316 5 92 1 134 1 264 1 373 1 38 1 266 7 94 1 268 5 142 4 228 1 145 1 
52 1 99 4 1 1 275 2 188 2 4 1 5 1 63 1 198 1 197 4 107 1 64 2 108 2 67 2 113 1 162 1 119 1 358 1 205 1 163 1 166 2 361 2 300 2 83 1 125 1 31 1 214 2 316 1 92 1 134 1 264 1 373 1 38 1 266 4 94 1 39 2 268 4 142 2 228 1 145 1 
300 2 361 2 52 1 99 4 83 1 125 1 1 1 275 2 188 1 31 1 214 2 5 1 4 1 63 1 198 1 197 4 107 1 316 1 64 2 92 1 108 2 67 2 134 1 243 1 264 1 113 1 373 1 38 1 266 4 94 1 18 1 268 4 162 1 119 1 142 2 358 1 297 1 228 1 205 1 145 1 166 2 
300 2 361 2 52 1 99 4 83 1 125 1 1 1 275 2 188 1 31 1 214 2 5 1 4 1 63 1 198 1 197 4 107 1 316 1 64 2 92 1 108 2 67 2 134 1 243 1 264 1 113 1 373 1 38 1 266 4 94 1 18 1 268 4 162 1 119 1 142 2 358 1 297 1 228 1 205 1 145 1 166 2 
300 2 52 1 99 4 83 1 125 1 1 1 188 1 214 2 5 1 4 1 313 2 63 1 198 1 197 4 107 1 316 1 92 1 108 2 67 2 134 1 286 1 243 1 264 1 113 1 373 1 38 1 266 4 94 1 15 2 39 2 268 4 117 1 162 1 203 1 119 1 142 2 358 1 228 1 205 1 145 1 166 2 
361 2 300 3 52 1 99 5 83 1 125 1 1 1 275 2 188 1 31 1 214 2 5 1 4 1 63 1 198 1 197 4 107 1 316 1 64 2 92 1 108 3 67 2 134 1 243 1 264 1 113 1 373 1 38 1 73 1 266 5 94 1 18 1 268 4 162 1 119 1 358 1 142 3 297 1 228 1 205 1 145 1 166 2 
361 2 300 3 52 1 99 5 83 1 125 1 1 1 275 2 188 1 31 1 214 2 5 1 4 1 63 1 198 1 197 4 107 1 316 1 64 2 92 1 108 3 67 2 134 1 243 1 264 1 113 1 373 1 38 1 73 1 266 5 94 1 18 1 268 4 162 1 119 1 358 1 142 3 297 1 228 1 205 1 145 1 166 2 
52 1 99 4 1 1 188 1 4 1 5 1 63 1 198 1 197 4 107 1 108 2 67 2 113 1 15 2 117 1 162 1 119 1 358 1 205 1 163 1 166 2 300 2 83 1 125 1 214 2 313 2 316 1 92 1 134 1 264 1 373 1 38 1 266 4 94 1 39 2 268 4 142 2 228 1 145 1 
100 2 0 2 338 1 337 1 210 1 127 2 191 1 129 1 236 1 368 7 130 2 343 2 315 1 172 2 132 1 198 1 106 1 92 1 134 1 349 8 200 1 10 1 70 1 71 1 136 1 13 2 114 1 353 2 224 2 377 2 40 1 141 2 97 3 78 4 48 8 251 1 334 2 380 1 335 1 
100 1 210 1 274 1 303 1 186 1 127 1 55 1 130 1 311 1 343 3 198 1 92 1 348 1 134 1 71 2 13 1 292 1 115 1 202 1 221 1 377 1 40 1 141 1 331 1 182 1 78 2 47 1 335 1 271 1 
100 1 337 1 211 1 274 2 303 1 85 1 186 1 127 1 340 1 366 1 130 1 343 6 348 2 71 3 13 1 159 1 292 1 377 1 226 1 204 1 141 1 182 1 78 2 26 2 335 3 271 1 
100 2 274 1 186 11 187 3 303 4 339 1 127 2 55 2 309 1 130 2 281 1 343 14 132 1 348 2 135 1 70 1 71 6 13 1 292 11 178 1 202 1 17 1 377 2 141 2 331 2 332 3 182 2 250 1 78 4 47 1 26 1 335 8 271 1 
100 1 0 1 301 1 210 1 86 1 303 1 127 1 87 1 368 1 130 1 343 2 312 1 91 1 172 1 132 1 105 1 198 2 92 1 349 1 134 2 36 1 70 1 71 1 13 1 374 1 224 1 377 1 40 1 43 1 141 1 97 1 47 1 78 2 48 1 251 1 26 1 334 1 335 1 
100 3 0 2 274 4 186 7 339 4 189 2 55 2 191 1 340 1 277 1 343 20 198 3 105 2 8 1 348 8 349 3 70 1 71 10 159 1 13 3 292 7 202 2 19 2 204 1 78 6 251 1 298 2 26 2 301 1 210 1 211 1 303 7 127 3 366 1 368 3 130 3 312 2 132 1 172 2 92 1 134 3 36 2 265 2 224 2 377 3 226 1 40 1 327 2 141 3 43 2 331 2 97 2 182 3 47 1 48 3 146 1 334 1 271 3 335 10 
100 1 337 1 13 1 292 1 303 1 186 1 339 1 127 1 55 1 377 1 130 1 343 2 141 1 182 1 78 2 348 1 175 1 335 2 
71 2 100 1 337 1 13 1 292 1 274 1 303 1 186 1 202 1 127 1 377 1 88 1 130 1 343 2 141 1 78 2 348 1 271 1 
71 2 100 1 337 1 13 1 292 2 274 1 303 2 186 2 339 1 202 1 127 1 55 1 377 1 130 1 343 4 141 1 331 1 182 1 78 2 348 2 271 1 335 2 
100 1 13 1 292 1 303 1 186 1 339 1 127 1 55 1 129 1 377 1 130 1 343 2 141 1 182 1 78 2 348 1 175 1 335 2 
71 2 100 1 13 1 292 1 274 1 303 1 186 1 202 1 127 1 129 1 377 1 88 1 130 1 343 2 141 1 78 2 348 1 271 1 
100 1 274 1 186 2 303 2 339 1 55 1 127 1 129 1 130 1 343 4 348 2 71 2 13 1 292 2 202 1 377 1 331 1 141 1 182 1 78 2 335 2 271 1 
71 2 100 1 13 1 292 2 274 1 303 2 186 2 339 1 202 1 127 1 55 1 377 1 130 1 343 4 141 1 331 1 182 1 78 2 348 2 271 1 335 2 
100 1 0 1 127 1 368 1 130 1 343 2 312 1 172 1 132 1 105 1 198 1 349 1 134 1 70 1 36 1 71 1 13 1 224 1 377 1 327 1 43 1 141 1 97 1 78 2 48 1 26 1 334 1 335 1 
100 1 0 1 209 1 127 1 368 1 130 1 343 2 172 1 132 1 105 1 198 1 349 1 134 1 70 1 36 1 71 1 219 1 13 1 224 1 377 1 42 1 141 1 97 1 78 2 48 1 26 1 334 1 335 1 
71 2 100 1 13 1 292 2 274 1 303 2 186 2 339 1 202 1 127 1 55 1 377 1 130 1 343 4 141 1 331 1 182 1 47 1 78 2 348 2 271 1 335 2 
100 1 0 1 274 1 303 2 186 2 339 1 55 1 127 1 236 1 368 1 130 1 343 4 312 1 172 1 105 1 198 1 348 2 349 1 134 1 36 1 71 2 13 1 292 2 265 1 202 1 224 1 377 1 327 1 43 1 141 1 331 1 97 1 182 1 78 2 48 1 271 1 335 2 
100 1 210 1 186 1 303 1 339 1 102 1 127 1 55 1 130 1 311 1 343 3 198 1 92 1 348 1 134 1 71 1 13 1 292 1 202 1 221 1 377 1 40 1 141 1 331 1 182 1 78 2 47 1 271 1 335 2 
185 1 274 1 187 1 339 1 308 1 127 2 55 1 130 2 238 1 261 1 343 9 215 1 348 2 287 1 289 1 135 1 71 5 202 1 377 2 141 2 331 1 332 2 46 1 182 1 250 1 78 4 24 1 335 4 271 1 
185 2 29 1 274 1 187 2 339 1 127 3 55 2 130 3 238 1 89 1 32 2 261 2 343 20 215 1 370 1 348 2 287 3 135 2 71 9 202 1 74 1 20 1 377 3 140 1 141 3 331 2 332 2 46 1 182 2 78 6 24 1 184 1 271 1 335 11 
185 1 274 1 187 1 339 1 308 1 127 2 55 1 130 2 238 1 261 1 343 9 215 1 348 2 287 1 135 1 71 5 202 1 74 1 377 2 141 2 331 1 332 2 46 1 182 1 250 1 78 4 24 1 335 4 271 1 
185 1 274 1 187 1 339 1 308 1 127 2 55 1 130 2 238 1 261 1 343 9 215 1 348 2 287 1 135 1 71 5 202 1 74 1 377 2 141 2 331 1 332 2 46 1 182 1 250 1 78 4 24 1 335 4 271 1 
185 1 211 1 29 1 274 6 187 4 339 6 127 2 55 6 340 1 366 1 130 2 238 1 89 1 32 1 261 1 343 46 215 1 370 1 348 12 287 3 135 2 71 22 159 1 202 6 17 2 74 1 20 1 377 2 226 1 204 1 140 1 141 2 331 6 332 4 46 1 182 7 250 2 78 4 24 1 184 1 335 24 271 7 
118 1 181 1 14 1 364 1 323 1 360 1 66 1 109 1 223 1 21 1 
126 1 246 1 
318 1 118 1 14 1 45 1 144 1 323 1 360 1 66 1 223 1 
150 1 225 1 
280 1 137 1 123 1 
336 1 14 1 363 2 364 1 138 1 188 1 213 1 323 1 268 1 235 1 223 1 21 1 118 1 181 1 96 1 197 1 360 1 66 1 
336 1 14 1 363 2 364 1 138 1 188 1 213 1 323 1 268 1 235 1 223 1 21 1 118 1 181 1 96 1 197 1 360 1 66 1 
336 1 14 1 363 2 364 1 138 1 188 1 213 1 323 1 268 1 235 1 223 1 21 1 118 1 181 1 96 1 197 1 360 1 66 1 
150 1 123 1 225 1 
150 1 123 1 225 1 
280 1 137 1 
280 1 137 1 123 1 
133 1 241 1 
273 1 210 2 126 1 363 1 256 1 257 1 239 1 198 2 197 1 133 1 92 2 241 1 66 1 134 2 11 1 14 1 246 1 138 1 323 1 268 1 324 1 223 1 40 2 118 1 96 1 360 1 26 1 
100 1 0 1 127 1 130 1 368 2 343 2 172 1 132 1 198 2 92 2 349 2 134 2 10 1 70 1 71 1 13 1 353 2 224 1 325 1 377 1 356 1 141 1 97 1 227 1 23 1 249 1 47 1 78 2 48 2 380 1 335 1 
0 1 114 1 322 1 224 1 60 1 368 1 269 1 248 1 172 1 97 1 106 1 48 1 334 1 349 1 
82 1 0 1 272 1 124 1 321 1 167 2 322 1 191 1 60 1 368 1 357 1 33 1 172 1 270 1 48 1 347 1 147 1 349 1 
82 1 0 1 272 1 124 1 321 1 167 2 322 1 191 1 236 1 60 1 368 2 357 1 33 1 172 1 270 1 48 2 347 1 147 1 349 2 
272 1 124 1 0 1 321 1 167 2 259 1 191 1 60 1 368 1 357 1 33 1 172 1 270 1 48 1 347 1 147 1 349 1 
369 1 
264 1 291 1 83 1 125 1 1 1 94 1 188 1 228 1 316 1 80 1 
361 5 290 2 83 5 125 5 232 1 53 5 202 2 55 2 188 5 39 10 331 2 182 2 298 1 217 5 271 2 
197 1 266 1 316 1 188 1 268 1 67 1 
0 1 83 2 125 2 1 2 2 1 368 4 172 1 197 3 106 1 174 1 349 4 67 2 264 1 218 2 112 1 158 2 114 1 266 4 94 2 268 3 224 1 41 2 75 1 97 1 228 2 48 4 207 1 334 2 379 1 
291 1 83 1 125 1 85 1 316 1 188 1 80 1 
361 1 83 1 125 1 1 1 275 1 188 2 31 1 197 1 316 1 64 1 67 1 264 1 266 1 94 1 39 1 268 1 228 1 
101 2 0 4 1 4 53 6 232 2 188 8 55 2 59 2 236 1 105 3 197 5 349 3 67 3 291 1 290 2 158 2 12 3 160 2 116 1 202 2 352 2 298 2 80 1 361 6 302 1 83 8 125 9 368 3 172 3 316 2 263 2 174 1 217 6 218 1 264 4 38 2 375 1 266 5 94 4 39 12 268 5 224 3 326 2 41 1 331 2 97 10 143 2 44 2 182 2 228 4 48 3 334 1 148 1 271 2 
361 3 83 5 125 8 232 1 53 5 1 2 29 1 187 1 188 5 55 2 341 1 89 1 370 1 197 1 316 2 67 1 217 5 135 1 218 1 264 2 290 2 158 1 266 1 94 2 202 2 39 6 268 1 140 1 331 2 332 1 182 2 228 2 183 1 184 1 271 2 
83 2 125 2 232 1 1 1 210 1 340 1 366 1 311 1 282 1 198 1 197 1 92 1 173 1 134 1 288 1 157 1 264 1 113 1 290 2 94 1 268 1 222 1 40 1 204 1 297 1 182 2 228 1 271 1 
100 1 0 1 210 2 127 1 130 1 368 1 311 2 343 1 62 1 312 1 132 1 282 1 172 1 198 3 105 1 92 2 349 1 134 3 36 1 71 1 13 1 224 1 377 1 40 2 327 1 141 1 43 1 97 1 78 2 48 1 26 1 334 1 
361 2 264 1 218 1 83 2 158 1 159 1 125 1 53 2 1 1 94 1 188 4 39 4 228 1 316 2 217 2 
181 1 14 1 35 1 360 1 241 1 
254 1 14 1 360 1 
254 1 14 1 360 1 
254 1 14 1 360 1 
14 1 34 1 360 1 
14 1 34 1 360 1 
14 1 34 1 360 1 
14 1 360 1 
66 1 223 1 
71 5 157 1 274 3 339 2 127 1 340 1 366 2 377 1 130 1 204 2 343 10 141 1 182 2 78 2 24 1 348 5 335 5 271 2 
339 1 127 1 55 1 377 1 130 1 343 2 141 1 182 1 24 1 78 2 348 1 335 2 
71 2 274 1 339 1 202 1 127 1 55 1 377 1 130 1 343 4 141 1 331 1 182 1 24 1 78 2 348 2 271 1 335 2 
71 2 274 1 339 1 308 1 57 1 127 3 366 1 377 3 130 3 204 1 32 1 343 3 141 3 24 1 78 6 348 2 335 1 
211 1 274 7 187 3 305 1 339 5 308 1 57 1 127 5 55 3 340 2 366 3 310 1 103 1 130 5 32 2 343 34 348 12 135 1 71 18 159 1 202 3 377 5 226 1 204 3 330 1 141 5 331 3 332 4 182 5 250 1 78 10 24 1 335 16 271 5 
71 4 159 1 274 2 211 1 339 1 127 2 340 1 366 1 377 2 226 1 130 2 204 1 343 8 32 1 141 2 182 1 78 4 348 3 271 1 335 4 
71 3 159 1 211 1 274 2 85 1 340 1 366 1 226 1 204 1 343 6 182 1 348 2 335 3 271 1 
71 2 274 1 339 1 202 1 127 1 55 1 310 1 377 1 130 1 343 4 141 1 331 1 182 1 78 2 348 2 271 1 335 2 
71 4 274 1 187 1 339 1 202 1 55 1 343 7 331 1 332 2 182 1 250 1 348 2 271 1 135 1 335 3 
211 1 274 5 187 2 339 4 55 2 127 2 57 1 340 1 366 2 130 2 343 23 32 2 348 9 71 12 159 1 178 1 202 2 17 1 377 2 226 1 204 2 331 2 141 2 332 2 182 3 250 1 78 4 335 11 271 3 
71 1 343 1 332 1 
343 1 187 1 335 1 
71 3 274 2 339 1 202 1 127 1 55 1 310 1 377 1 130 1 343 6 141 1 331 1 182 1 78 2 298 1 348 3 335 3 271 1 
274 1 29 1 187 1 339 1 127 1 55 2 130 1 89 1 343 12 370 1 348 2 135 1 71 6 202 2 377 1 140 1 141 1 331 2 332 1 182 2 78 2 24 1 184 1 335 6 271 2 
71 3 274 1 339 1 340 1 366 1 204 1 343 6 182 1 348 2 335 3 271 1 
71 2 274 1 211 1 339 1 57 1 127 1 366 1 377 1 226 1 204 1 130 1 343 3 32 1 141 1 78 2 348 2 335 1 
211 1 274 2 187 1 127 1 340 1 366 1 130 1 89 1 343 8 348 2 135 1 71 4 159 1 377 1 226 1 204 1 141 1 332 1 182 1 78 2 24 1 271 1 335 4 
274 2 211 1 187 1 339 1 127 2 55 1 340 1 366 1 310 1 130 2 89 1 343 11 348 3 135 1 71 5 159 1 377 2 226 1 204 1 141 2 331 1 332 2 182 2 250 1 24 1 78 4 271 1 335 6 
211 1 29 1 274 3 187 1 339 1 127 3 55 2 340 1 366 1 310 1 130 3 89 1 343 19 32 1 370 1 348 4 135 1 71 10 159 1 202 2 377 3 226 1 204 1 140 1 141 3 331 2 332 1 182 3 78 6 24 1 184 1 335 9 271 3 
211 1 274 3 29 1 187 1 339 2 127 3 55 2 340 1 366 1 310 1 130 3 89 1 32 1 343 17 370 1 348 5 135 1 71 7 159 1 202 1 377 3 226 1 204 1 140 1 141 3 331 2 332 1 182 3 78 6 24 1 184 1 335 10 271 2 
211 1 274 2 187 1 127 1 340 1 366 1 130 1 89 1 343 8 348 2 135 1 71 4 159 1 377 1 226 1 204 1 141 1 332 1 182 1 78 2 24 1 271 1 335 4 
274 1 29 1 187 1 339 1 127 1 55 2 130 1 89 1 343 12 370 1 348 2 135 1 71 6 202 2 377 1 140 1 141 1 331 2 332 1 182 2 78 2 24 1 184 1 335 6 271 2 
211 1 29 1 274 3 187 1 339 2 127 4 55 2 340 1 366 1 310 1 130 4 89 1 343 18 32 2 370 1 348 5 135 1 71 8 159 1 202 1 377 4 226 1 204 1 140 1 141 4 331 2 332 1 182 3 78 8 24 1 184 1 335 10 271 2 
29 1 274 3 187 1 339 3 308 1 127 4 55 3 130 4 89 1 343 16 32 2 370 1 348 6 135 1 71 7 202 2 377 4 140 1 141 4 331 3 332 1 182 3 24 1 78 8 184 1 335 9 271 2 
71 4 211 2 274 3 339 3 340 1 366 3 226 1 204 3 343 7 182 1 348 6 271 1 335 3 
211 1 29 1 274 3 187 1 339 1 308 1 127 4 55 2 340 1 366 1 130 4 89 1 343 18 32 2 370 1 348 4 135 1 71 8 159 1 202 1 377 4 226 1 204 1 140 1 141 4 331 2 332 1 182 3 24 1 78 8 184 1 335 10 271 2 
262 1 198 1 92 1 145 1 26 1 134 1 111 1 
201 1 260 1 328 1 262 1 378 1 198 1 92 1 145 1 26 1 111 1 134 1 230 1 
0 1 114 1 236 1 224 1 368 4 120 1 97 1 172 1 106 1 48 4 206 1 334 1 349 4 
0 2 151 1 245 1 224 1 61 1 41 1 368 2 97 1 172 1 105 1 7 1 8 1 48 2 349 2 
368 1 33 1 0 1 172 1 167 1 270 1 48 1 347 1 334 1 349 1 
0 1 191 1 236 1 224 1 325 1 368 2 97 1 172 1 48 2 349 2 10 1 
0 2 338 1 114 1 236 1 224 2 41 1 368 4 97 3 172 2 106 1 48 5 206 1 334 1 349 5 10 1 200 1 
0 2 114 1 236 1 224 2 41 1 368 4 170 1 97 3 172 2 106 1 48 5 206 1 334 1 349 5 10 1 200 1 
368 1 0 1 114 1 172 1 97 1 85 1 106 1 48 1 334 1 224 1 349 1 
0 1 210 1 224 1 40 1 368 1 312 1 97 1 172 1 105 1 198 2 92 1 48 1 251 1 26 1 334 1 134 2 349 1 36 1 
113 1 0 1 210 1 224 2 162 1 40 2 41 1 368 1 4 1 312 1 44 1 97 3 172 1 105 2 198 2 263 1 92 2 48 1 251 1 26 1 134 2 349 1 36 1 
0 1 210 1 368 2 4 1 172 1 198 2 105 2 263 1 92 2 349 2 134 2 36 1 219 1 113 1 224 2 162 1 40 2 41 1 120 1 97 3 44 1 48 2 251 1 26 1 
0 1 188 1 368 3 172 1 197 2 105 1 199 1 263 1 316 1 349 3 12 1 38 1 266 1 268 2 224 1 41 1 120 1 143 1 97 4 44 1 48 3 164 1 334 1 
0 1 12 1 38 1 266 1 188 1 352 1 268 2 224 1 41 1 368 3 120 1 44 1 97 4 143 1 172 1 105 1 197 2 316 1 263 1 48 3 334 1 349 3 
368 1 136 1 0 1 172 1 48 1 349 1 
136 1 0 3 338 1 245 1 353 1 191 1 236 1 224 2 294 1 368 6 315 1 97 3 172 2 105 1 7 1 48 7 334 2 148 1 349 7 200 1 10 1 
100 2 0 1 274 2 186 1 189 1 340 1 236 1 343 6 198 2 105 1 348 2 349 1 71 3 13 2 159 1 292 1 204 1 78 4 251 1 26 2 210 1 211 1 303 1 127 2 366 1 368 1 130 2 312 1 172 1 92 1 134 2 36 1 265 1 224 1 377 2 40 1 226 1 327 1 43 1 141 2 227 1 97 1 182 1 47 1 48 1 335 3 271 1 
83 1 101 1 125 1 1 2 273 1 188 1 368 1 197 3 316 1 174 1 349 1 67 1 264 2 291 1 12 1 160 1 38 1 266 2 94 2 352 1 268 3 326 1 97 2 143 1 228 2 48 1 334 1 80 1 
136 1 302 1 0 2 236 1 224 1 368 2 143 1 97 2 172 1 105 1 48 2 148 1 349 2 
219 1 0 1 210 1 224 1 40 1 368 1 97 1 172 1 105 1 198 2 92 1 48 1 251 1 26 1 334 1 134 2 349 1 36 1 
0 2 245 1 224 1 294 1 41 1 368 1 97 1 172 1 105 1 7 1 48 1 148 1 349 1 
231 1 319 1 6 1 26 1 237 1 
231 2 37 1 319 2 113 1 273 1 38 1 306 1 179 1 188 1 268 2 162 1 237 1 278 1 4 1 6 2 358 1 197 2 316 1 26 1 
231 1 319 1 237 1 356 1 23 1 198 1 249 1 92 1 134 1 
179 1 278 1 237 1 
195 1 359 1 296 1 16 1 65 1 79 1 208 1 50 1 
365 1 247 1 153 2 195 3 296 1 359 1 98 1 284 1 65 2 68 1 208 4 79 4 9 1 50 2 
16 1 190 1 152 1 153 1 195 1 296 1 359 1 240 1 65 1 208 2 79 2 50 1 
350 1 16 1 247 1 195 1 296 1 359 1 98 2 65 1 208 3 79 3 68 2 50 1 
195 2 177 1 155 2 156 1 
359 1 296 1 122 1 16 1 79 1 208 1 
153 1 195 1 359 1 296 1 212 1 16 1 65 1 79 2 208 2 50 1 
293 1 
195 1 359 1 296 1 16 1 65 1 79 1 208 1 50 1 
195 1 85 1 65 1 50 1 
195 1 359 1 296 1 65 1 79 1 208 1 50 1 
171 1 342 1 79 1 
16 1 234 1 247 1 195 1 296 1 359 1 98 1 65 1 208 3 79 3 68 2 50 1 
153 1 195 1 359 1 296 1 154 1 65 1 79 2 208 2 50 1 
167 1 16 1 195 1 357 1 345 1 296 1 359 1 270 1 284 1 208 1 79 1 
195 1 359 1 296 1 16 1 79 1 208 1 50 1 
359 1 296 1 16 1 65 1 79 1 208 1 50 2 
195 1 252 1 359 2 296 2 16 1 165 1 69 1 79 2 208 2 50 1 
16 1 212 1 153 2 195 2 296 1 359 1 284 1 65 1 229 1 208 3 79 3 9 1 50 1 
167 2 16 1 153 1 195 1 357 1 33 1 296 1 359 1 270 1 65 1 25 1 147 1 208 2 79 2 50 1 
16 1 153 2 195 2 296 2 359 2 154 1 284 1 65 1 285 1 208 4 79 4 9 1 50 1 
153 1 195 1 359 1 296 1 212 1 16 1 65 1 68 1 79 3 208 3 50 1 
195 1 284 1 365 1 9 1 
195 1 50 1 

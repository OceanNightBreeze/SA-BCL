#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
238 1 188 1 168 1 56 2 364 1 307 2 306 1 38 2 243 9 368 6 221 1 102 1 267 3 249 9 153 2 200 4 156 1 317 1 274 1 343 1 50 2 323 1 278 1 299 1 163 2 113 2 144 1 31 5 
238 1 188 1 168 1 56 2 364 1 307 2 306 1 38 2 243 9 368 6 221 1 102 1 267 3 249 9 153 2 200 4 156 1 317 1 274 1 343 1 50 2 323 1 278 1 299 1 163 2 113 2 144 1 31 5 
238 1 188 1 168 1 56 2 364 1 307 2 306 1 38 2 243 10 368 7 221 1 102 1 267 4 249 10 153 2 200 5 156 1 317 1 274 1 343 1 50 2 323 1 278 1 299 1 163 2 113 2 144 1 31 6 
238 1 188 1 168 1 56 2 364 1 307 2 306 1 38 2 243 7 368 4 221 1 102 1 267 2 249 7 153 1 200 3 156 1 317 1 274 1 343 1 50 2 323 1 278 1 299 1 163 2 113 2 31 4 
249 4 238 1 188 1 153 2 200 2 56 1 156 1 307 1 38 1 243 4 368 3 221 1 163 1 113 1 102 1 267 1 144 1 31 3 
249 2 188 1 226 1 56 1 156 1 306 1 38 1 243 2 352 1 323 1 50 1 163 1 113 1 223 1 102 1 31 1 
249 3 188 1 200 1 56 2 156 1 274 1 243 3 50 1 368 1 113 2 102 1 267 1 31 2 
238 1 188 1 168 1 56 2 307 1 38 1 243 9 368 7 93 1 221 1 102 1 267 3 249 9 153 2 200 4 156 1 274 1 343 1 50 1 111 1 163 1 113 2 31 5 144 1 
238 1 188 1 168 1 56 2 307 1 38 1 243 9 368 7 93 1 221 1 102 1 267 3 249 9 153 2 200 4 156 1 274 1 343 1 50 1 111 1 163 1 113 2 31 5 144 1 
192 1 360 1 186 1 
192 1 95 2 224 1 
279 2 332 2 341 1 142 2 75 2 164 2 356 1 10 2 
120 1 279 2 1 1 3 1 363 1 37 2 9 1 10 3 265 1 332 2 96 1 130 2 100 1 247 1 45 1 374 1 341 1 176 1 21 2 178 1 75 3 208 1 356 1 377 1 49 1 108 2 110 1 22 1 255 2 256 1 275 1 361 1 297 1 296 1 142 2 164 2 346 1 
279 1 332 1 333 1 338 1 341 1 142 1 75 1 164 1 39 1 10 1 
338 1 88 1 75 1 209 1 62 1 10 1 192 1 91 1 332 1 161 1 335 1 235 1 114 1 186 1 
279 1 338 1 88 1 75 1 209 1 62 2 10 1 192 1 91 1 332 1 161 2 142 1 335 1 164 1 186 1 
127 1 199 1 225 1 161 1 62 1 
192 1 199 1 79 1 225 1 161 2 136 1 186 1 62 2 
199 1 161 1 62 1 
279 1 225 1 336 1 338 1 341 1 75 1 39 1 62 1 10 1 333 1 332 1 161 1 142 1 164 1 
192 1 
192 1 199 1 337 1 225 1 161 2 136 1 186 1 62 2 
326 2 225 2 199 2 214 1 262 1 272 1 205 1 89 1 136 1 62 5 126 2 192 1 358 1 309 1 161 5 245 1 175 2 27 1 186 1 
360 1 356 1 
279 1 72 1 375 1 75 2 356 2 10 2 332 2 142 1 164 1 
244 1 99 1 184 1 
120 1 45 1 374 1 340 1 178 1 75 1 208 1 356 1 9 1 10 1 108 1 255 1 275 1 296 1 96 1 130 1 
120 1 279 1 45 1 44 1 374 1 178 1 208 1 75 2 9 1 10 2 108 1 332 1 255 1 275 1 296 1 96 1 298 1 130 1 142 1 99 1 
279 3 332 3 298 1 142 3 164 1 75 3 356 1 10 3 
279 1 332 1 338 1 142 1 75 1 39 1 10 1 
279 1 332 1 338 1 72 1 375 1 142 1 75 1 164 1 10 1 
120 1 279 3 1 1 34 1 3 1 88 1 37 2 9 1 62 1 10 4 265 1 91 1 332 3 96 1 130 1 335 1 247 1 45 1 44 1 374 1 338 1 375 1 341 1 176 1 21 1 178 1 208 1 75 4 209 1 356 1 377 1 253 1 49 1 108 1 22 1 255 1 275 1 297 1 296 1 298 1 161 1 142 3 164 2 346 1 
121 1 279 1 332 2 298 1 142 1 75 2 114 1 356 1 10 2 
279 3 44 1 34 1 338 1 375 1 88 1 75 3 209 1 62 1 10 3 192 1 91 1 332 3 161 1 298 2 142 3 183 1 335 1 164 1 
279 2 375 1 75 2 10 2 332 2 298 1 142 2 99 1 164 1 184 1 
120 1 45 1 374 1 178 1 75 1 208 1 356 1 9 1 10 1 108 1 255 1 275 1 96 1 296 1 130 1 
120 1 45 1 178 1 75 1 208 1 356 1 9 1 10 1 108 1 322 1 255 1 275 1 219 1 296 1 130 1 
236 1 1 1 263 1 37 2 284 1 244 2 334 1 99 2 247 1 101 1 197 1 373 1 268 1 176 1 21 4 377 1 49 2 22 1 256 2 53 1 346 1 184 2 116 1 347 1 
279 1 332 1 338 1 88 1 142 1 75 1 67 1 10 1 
121 1 279 4 44 1 375 1 75 5 356 1 10 5 332 5 181 1 298 2 142 4 234 1 164 1 114 1 
279 2 332 2 338 1 142 2 67 1 75 2 39 1 10 2 
28 1 165 1 
28 1 165 1 
367 1 117 1 
367 1 117 1 
367 1 117 1 
28 1 170 1 165 1 
74 1 28 1 165 1 
367 1 157 1 28 2 61 1 165 2 117 1 
28 1 170 1 165 1 
28 1 170 1 165 1 
314 1 28 1 165 1 
314 1 28 1 165 1 
314 1 28 1 165 1 
123 1 303 2 292 1 87 1 157 1 20 1 342 1 62 2 192 1 77 2 254 2 353 3 161 2 162 1 259 1 28 2 14 2 165 2 187 2 
279 2 303 1 6 1 87 1 62 1 10 2 332 2 287 1 353 1 14 1 17 1 74 1 318 1 75 2 356 1 77 1 258 1 161 1 142 2 28 1 29 1 165 1 166 1 187 1 
163 1 307 1 38 1 
352 1 163 1 38 1 
139 1 352 1 355 1 51 1 307 2 163 3 
139 1 352 1 51 1 307 1 232 1 163 2 
139 2 352 1 51 1 307 1 163 2 
326 1 214 2 6 1 365 1 126 1 62 5 192 2 287 1 334 1 369 1 309 3 94 2 310 1 95 3 175 1 245 1 196 2 354 2 101 1 373 1 224 1 268 1 17 1 199 1 225 4 207 1 136 1 252 1 378 1 257 1 161 5 186 1 
32 1 326 2 124 1 214 6 62 9 126 2 127 5 192 5 334 3 309 8 94 6 310 1 95 9 245 1 175 2 354 6 101 3 373 3 224 3 268 3 17 4 198 1 199 6 225 7 205 1 136 1 252 3 159 1 378 2 180 1 23 5 257 2 161 9 380 1 186 1 
326 1 214 2 365 1 126 1 62 3 192 3 369 1 309 3 334 1 94 2 95 4 175 1 196 1 354 2 101 1 373 1 224 2 268 1 17 1 225 2 205 1 252 1 378 1 257 1 161 3 186 1 
32 1 326 1 214 4 365 1 126 1 62 4 192 4 369 1 309 5 334 2 94 4 95 7 175 1 196 2 354 4 101 2 373 2 224 3 268 2 17 2 225 3 205 1 252 2 378 1 180 1 257 1 161 4 380 1 186 1 
360 1 35 1 296 1 
296 1 220 1 
213 1 
120 1 296 1 
120 1 250 1 35 2 275 1 296 3 26 1 
120 1 275 1 296 1 
296 1 40 1 
280 1 33 1 201 1 47 1 21 7 76 1 228 1 49 3 284 2 48 1 334 1 256 4 160 2 324 1 83 1 373 1 347 3 
280 1 33 1 201 1 47 1 21 7 76 1 228 1 49 3 284 2 48 1 334 1 256 4 160 2 324 1 83 1 373 1 347 3 
280 1 33 1 201 1 47 1 21 7 76 1 8 1 228 1 49 3 284 2 48 1 334 1 256 4 160 2 324 1 83 1 373 1 347 3 
280 2 33 1 1 1 2 1 5 1 350 1 37 2 328 1 284 5 334 4 131 4 247 1 101 3 373 4 268 3 152 1 201 1 204 1 176 1 47 5 21 31 252 3 228 2 76 2 48 1 210 3 49 15 140 1 256 16 160 3 324 1 83 2 346 1 347 10 
280 1 33 1 1 2 5 1 37 4 284 3 334 1 247 2 68 1 373 1 201 1 176 2 47 1 21 9 228 1 76 1 49 4 48 1 256 5 160 2 25 1 83 1 346 2 347 4 
188 1 189 1 56 1 307 1 90 1 38 1 366 1 9 1 243 2 368 1 352 1 130 1 102 1 249 2 355 1 156 1 105 1 179 1 208 1 320 1 108 1 359 1 50 1 255 1 379 1 233 1 163 2 82 1 113 1 31 1 
56 1 57 1 307 1 90 1 38 1 366 1 9 1 243 3 368 2 352 1 130 1 102 1 15 1 249 3 355 1 156 1 105 1 179 1 208 1 320 1 108 1 50 1 255 1 182 1 379 1 233 1 163 2 82 1 113 1 31 1 
307 1 90 1 38 1 366 1 9 1 243 2 368 2 352 1 130 1 102 1 15 1 249 2 355 1 156 1 105 1 179 1 208 1 108 1 50 1 255 1 182 1 379 1 233 1 163 2 31 1 
120 1 56 1 57 1 9 1 243 1 130 1 246 1 289 1 249 1 105 2 158 1 178 1 208 1 179 2 106 1 108 1 50 2 295 1 255 1 296 1 233 2 113 1 185 1 
188 1 56 1 307 1 90 1 38 1 366 1 9 1 243 1 352 1 130 1 15 1 249 1 355 1 105 1 179 1 208 1 320 1 108 1 359 1 50 1 255 1 379 1 233 1 163 2 82 1 113 1 
41 1 
122 2 120 1 214 2 349 2 217 2 62 5 126 1 9 1 10 1 309 2 175 1 130 2 132 2 224 2 71 1 270 1 316 1 19 1 319 1 136 3 178 2 75 1 276 1 24 1 141 2 143 2 235 1 185 1 186 1 237 1 326 1 240 1 88 1 192 2 91 1 332 1 97 2 95 2 245 1 335 1 289 1 199 6 290 1 338 1 202 4 155 1 208 1 209 1 378 1 294 1 108 2 255 2 296 1 161 5 114 1 
240 1 88 1 62 3 10 1 91 1 332 1 335 1 290 1 199 2 337 1 338 1 202 2 316 1 19 1 136 1 75 1 209 1 294 1 161 3 141 1 235 1 114 1 
240 1 88 1 217 1 62 3 10 1 91 1 192 1 332 1 335 1 199 1 290 1 337 1 338 1 202 3 316 1 19 1 136 1 75 1 209 1 294 1 161 3 235 1 114 1 186 1 
240 1 88 1 217 1 62 3 10 1 91 1 192 1 332 1 97 1 335 1 337 1 290 1 199 2 338 1 202 3 316 1 19 1 136 1 75 1 209 1 294 1 161 3 141 1 235 1 114 1 186 1 
122 2 214 1 349 2 217 4 62 5 126 1 10 1 309 1 175 1 66 1 224 2 132 2 316 1 19 1 136 3 75 1 321 1 276 1 141 4 143 2 235 1 186 5 326 1 240 1 36 1 88 1 91 1 192 5 332 1 97 4 42 1 245 1 335 1 372 1 337 1 199 7 290 1 338 1 202 6 155 1 209 1 294 1 161 5 114 1 
237 1 122 2 326 1 240 1 214 1 349 2 88 1 217 2 126 1 62 4 10 1 192 2 91 1 332 1 309 1 97 2 95 2 175 1 245 1 335 1 132 2 224 2 199 4 290 1 338 1 202 4 316 1 155 1 19 1 136 2 75 1 209 1 294 1 276 1 161 4 141 2 143 2 235 1 114 1 186 1 
122 2 326 1 240 1 214 1 36 1 349 2 88 1 217 2 62 4 126 1 10 1 192 1 91 1 332 1 309 1 97 2 42 1 245 1 175 1 335 1 66 1 132 2 224 2 199 4 290 1 338 1 202 4 316 1 155 1 19 1 136 2 75 1 209 1 294 1 276 1 161 4 141 2 143 2 235 1 114 1 186 1 
122 2 326 1 240 1 214 1 36 1 349 2 88 1 217 2 62 4 126 1 10 1 192 1 91 1 332 1 309 1 97 2 42 1 245 1 175 1 335 1 66 1 132 2 224 2 199 4 290 1 338 1 202 4 316 1 155 1 19 1 136 2 75 1 209 1 294 1 276 1 161 4 141 2 143 2 235 1 114 1 186 1 
122 2 301 2 326 1 240 1 214 1 36 1 86 1 88 1 60 1 264 2 217 2 62 4 126 1 10 1 192 1 91 1 332 1 309 1 97 2 95 2 245 1 175 1 335 1 199 4 290 1 338 1 202 4 316 1 227 1 19 1 136 2 75 1 209 1 294 1 276 1 161 4 141 2 143 2 235 1 114 1 186 1 
122 2 326 1 240 1 214 1 36 1 349 2 88 1 217 3 126 1 62 4 10 1 192 1 91 1 332 1 309 1 97 3 175 1 245 1 42 1 335 1 66 1 132 2 224 2 290 1 199 5 338 1 202 5 316 1 155 1 19 1 136 2 75 1 209 1 294 1 321 1 276 1 161 4 141 3 143 2 235 1 114 1 186 1 
122 2 326 1 240 1 214 1 36 1 349 2 88 1 217 3 126 1 62 4 10 1 192 1 91 1 332 1 309 1 97 3 175 1 245 1 42 1 335 1 66 1 132 2 224 2 290 1 199 5 338 1 202 5 316 1 155 1 19 1 136 2 75 1 209 1 294 1 321 1 276 1 161 4 141 3 143 2 235 1 114 1 186 1 
237 1 122 2 301 2 326 1 240 1 214 1 88 1 264 2 217 2 126 1 62 4 10 1 192 1 91 1 332 1 309 1 97 2 95 2 175 1 245 1 335 1 199 4 290 1 338 1 202 4 316 1 227 1 19 1 136 2 75 1 209 1 294 1 276 1 161 4 141 2 143 2 235 1 114 1 186 1 
280 1 33 1 1 1 37 2 284 2 244 1 334 1 99 1 247 1 197 1 373 1 201 1 176 1 21 6 377 1 356 2 48 1 49 3 360 1 22 1 256 3 160 1 83 1 184 1 346 1 347 2 
1 2 2 1 147 1 328 1 37 4 150 1 331 1 284 1 244 11 334 2 131 3 99 11 100 1 247 2 101 1 373 1 268 2 47 1 176 2 21 14 252 2 356 1 377 1 49 6 210 3 78 1 22 2 256 8 297 1 346 2 184 4 347 2 118 1 
120 1 279 1 261 1 1 1 37 2 9 1 331 1 10 2 332 1 96 1 266 1 130 1 247 1 100 1 45 1 44 1 374 1 340 1 176 1 21 2 178 1 208 1 75 2 356 1 377 1 108 1 49 1 255 1 22 1 275 1 256 1 296 1 297 1 298 1 142 1 212 1 184 1 346 1 
120 2 1 3 9 2 10 3 265 2 65 2 12 1 130 3 15 1 268 2 134 2 176 3 21 20 178 1 75 3 356 2 22 3 275 2 142 1 83 1 184 7 280 1 279 1 33 1 282 1 241 1 37 6 331 1 191 2 284 4 332 1 244 7 334 3 96 2 99 7 100 1 247 3 101 2 373 3 44 1 45 2 374 2 201 1 206 2 47 4 208 2 252 2 377 3 48 1 49 10 108 3 255 3 256 10 160 1 297 1 296 2 298 1 346 3 347 8 
279 1 120 2 1 2 281 1 189 1 149 1 37 4 216 1 9 2 10 1 283 1 332 1 130 8 247 2 100 1 197 1 289 1 15 1 133 1 176 2 21 2 178 2 75 1 208 2 377 2 108 8 49 1 344 1 110 2 255 7 22 2 256 1 296 3 297 1 298 1 112 1 142 1 346 2 185 1 
279 1 1 1 37 2 331 1 10 1 284 1 244 1 332 1 334 1 99 1 247 1 101 1 373 1 268 1 375 1 176 1 21 3 251 1 75 1 252 1 377 1 49 2 22 1 256 1 142 1 164 1 184 1 346 1 347 1 
236 1 1 1 47 1 176 1 21 2 37 2 377 1 244 1 22 1 334 1 256 2 99 1 247 1 184 1 197 1 346 1 347 1 268 1 
1 1 176 1 21 2 263 1 37 2 377 1 284 1 49 2 244 1 22 1 99 1 247 1 184 1 197 1 346 1 101 1 373 1 347 1 
1 1 37 2 284 1 244 2 334 1 99 2 247 1 197 1 101 1 373 1 268 1 176 1 47 1 21 4 252 1 377 1 49 2 22 1 256 2 346 1 184 2 347 2 
236 1 1 1 281 1 47 1 176 1 21 2 37 2 377 1 244 1 22 1 334 1 256 2 99 1 247 1 184 1 346 1 347 1 268 1 
1 1 281 1 176 1 21 2 263 1 37 2 377 1 284 1 49 2 244 1 22 1 99 1 247 1 184 1 346 1 101 1 373 1 347 1 
1 1 281 1 37 2 284 1 244 2 334 1 99 2 247 1 101 1 373 1 268 1 176 1 47 1 21 4 252 1 377 1 49 2 22 1 256 2 346 1 184 2 347 2 
1 1 37 2 284 1 244 2 334 1 99 2 247 1 101 1 373 1 268 1 176 1 47 1 21 4 252 1 377 1 49 2 22 1 256 2 346 1 184 2 347 2 
120 1 1 1 37 2 9 1 10 1 265 1 96 1 130 1 100 1 247 1 45 1 374 1 176 1 21 2 178 1 208 1 75 1 356 1 377 1 108 1 49 1 255 1 22 1 256 1 275 1 296 1 297 1 346 1 
120 1 1 1 37 2 9 1 10 1 128 1 219 1 130 1 100 1 247 1 45 1 176 1 21 2 178 1 208 1 75 1 356 1 377 1 108 1 49 1 322 1 255 1 22 1 256 1 275 1 296 1 297 1 346 1 
1 1 37 2 331 1 284 1 244 2 334 1 99 2 247 1 101 1 373 1 268 1 176 1 47 1 21 4 252 1 377 1 49 2 22 1 256 2 346 1 184 2 347 2 
120 1 1 1 189 1 37 2 9 1 10 1 284 1 265 1 244 2 334 1 96 1 130 1 99 2 247 1 101 1 373 1 268 1 45 1 374 1 206 1 47 1 176 1 21 4 208 1 75 1 252 1 377 1 49 2 108 1 255 1 22 1 256 2 275 1 296 1 184 2 346 1 347 2 
279 1 1 1 37 2 331 1 10 1 332 1 244 1 334 1 99 1 247 1 101 1 373 1 268 1 375 1 47 1 176 1 21 3 75 1 252 1 377 1 49 1 22 1 345 1 256 2 142 1 164 1 346 1 184 1 347 1 
1 2 2 1 55 2 305 1 328 1 190 1 37 4 284 3 194 2 334 3 311 1 151 1 131 2 312 1 247 2 101 3 373 3 268 3 70 1 176 2 47 3 21 19 252 3 229 1 49 10 210 1 256 9 25 1 346 2 347 6 
1 3 5 2 55 1 190 2 37 6 328 2 330 1 284 2 288 1 194 4 334 3 311 1 151 1 312 2 131 2 247 3 101 2 373 2 268 3 70 1 154 1 135 1 47 2 176 3 177 1 21 26 252 3 49 12 210 2 109 1 256 14 25 1 346 3 347 4 
2 1 1 3 5 1 55 1 305 1 311 1 312 2 131 4 268 4 70 1 176 3 177 1 135 1 21 41 25 1 83 1 280 1 33 1 37 6 190 1 328 3 330 1 284 4 334 5 194 4 288 1 151 1 247 3 101 4 373 5 201 1 154 1 47 4 252 4 107 1 210 3 49 21 109 1 48 1 256 20 160 1 346 3 347 8 
280 1 33 1 1 4 2 1 5 2 55 1 305 1 328 3 190 1 37 8 330 1 284 4 288 1 194 4 334 5 311 1 151 1 131 4 312 2 247 4 101 3 373 4 268 4 70 1 201 1 154 1 135 1 177 1 176 4 47 3 21 38 252 4 107 1 48 1 109 1 49 18 210 3 256 20 160 1 25 1 83 1 346 4 347 7 
280 1 33 1 1 2 2 2 5 1 55 1 328 2 190 1 37 4 150 2 330 1 284 7 288 1 194 4 334 8 311 1 151 1 131 4 312 1 247 2 101 7 373 8 268 7 70 1 201 1 154 1 135 1 177 1 176 2 47 7 21 52 252 7 48 1 109 1 49 25 210 4 256 27 160 1 25 1 83 1 346 2 347 14 
77 1 123 1 303 1 157 1 20 1 14 1 28 1 165 1 115 1 187 1 
74 1 318 1 
285 1 18 1 77 1 303 1 43 1 14 1 28 1 165 1 187 1 
123 1 303 1 292 1 87 1 157 1 20 1 342 1 62 1 192 1 77 1 254 1 353 2 161 1 259 1 28 1 14 1 165 1 187 1 
123 1 303 1 292 1 87 1 157 1 20 1 342 1 62 1 192 1 77 1 254 1 353 2 161 1 259 1 28 1 14 1 165 1 187 1 
123 1 303 1 292 1 87 1 157 1 20 1 342 1 62 1 192 1 77 1 254 1 353 2 161 1 259 1 28 1 14 1 165 1 187 1 
170 1 61 1 7 1 
170 1 61 1 7 1 
314 1 148 1 
314 1 148 1 61 1 
29 1 166 1 
279 2 303 1 6 1 62 1 10 2 332 2 287 1 353 1 14 1 17 1 225 1 292 1 73 1 74 1 318 1 75 2 356 1 254 1 77 1 258 1 161 1 142 2 28 1 29 1 165 1 166 1 187 1 
170 1 7 1 
314 1 148 1 61 1 
120 1 1 1 327 1 37 2 171 1 9 1 63 1 331 1 10 2 283 1 332 2 351 1 130 2 313 1 247 1 100 1 133 1 176 1 21 2 208 1 75 2 377 1 108 2 49 1 110 2 22 1 255 2 256 1 296 1 297 1 346 1 
355 1 189 1 293 1 307 1 90 1 208 1 38 1 9 1 366 1 172 1 108 2 92 1 352 1 255 2 130 2 163 2 233 1 82 1 15 1 
355 1 307 1 90 1 208 1 38 1 366 1 9 1 172 1 108 1 352 1 255 1 230 1 130 1 163 2 233 1 82 1 15 1 
120 1 302 1 178 1 208 1 9 1 108 1 92 1 295 1 255 1 296 1 130 1 233 1 185 1 289 1 
355 1 293 1 307 1 90 1 208 1 38 1 366 1 9 1 172 1 108 1 92 1 352 1 255 1 130 1 163 2 233 1 82 1 15 1 
325 1 
192 1 358 1 360 1 309 1 214 1 272 1 186 1 
326 1 214 1 349 1 126 1 62 1 192 2 309 1 95 1 175 1 245 1 224 1 132 1 199 1 155 1 136 1 161 1 186 1 
120 3 214 8 59 1 9 3 126 4 62 5 64 2 309 9 65 2 174 2 220 3 175 4 130 3 354 6 222 1 224 6 69 2 268 2 269 1 270 1 272 1 273 2 178 1 136 3 357 1 358 1 275 3 277 2 186 2 85 2 239 1 326 4 35 2 189 1 145 2 40 2 192 8 334 2 94 6 95 12 245 4 101 2 373 2 250 1 199 5 208 4 252 2 209 2 378 2 108 3 255 3 296 10 161 5 381 2 
326 2 214 5 328 1 62 1 126 2 330 1 192 5 288 1 309 8 334 2 94 5 174 1 95 6 175 2 245 2 131 1 354 5 101 2 224 3 373 2 69 2 268 2 199 1 270 1 154 1 177 1 136 1 252 2 138 1 378 1 210 1 109 1 52 1 161 1 186 2 
280 1 279 1 326 1 214 2 39 1 126 1 62 1 10 1 333 1 332 1 334 2 309 2 174 1 98 1 175 1 245 1 42 1 373 1 69 2 336 1 338 1 201 1 341 1 75 1 161 1 142 1 83 1 164 1 
326 1 214 1 272 1 126 1 358 1 192 1 309 1 245 1 175 1 186 1 
214 5 252 2 192 5 334 2 309 5 65 1 94 5 174 1 95 10 354 5 101 2 224 5 373 2 69 2 268 2 
192 1 199 1 161 1 136 1 186 1 62 1 
120 1 326 2 214 2 304 1 9 1 126 2 62 3 309 2 175 2 245 1 130 4 222 2 289 1 269 1 199 4 71 1 270 2 205 1 178 2 136 2 208 1 378 2 108 4 255 4 296 1 24 1 161 3 30 1 185 1 
279 2 120 1 1 1 3 1 37 2 9 1 10 3 265 1 332 2 96 1 130 1 247 1 45 1 374 1 341 1 176 1 21 1 178 1 75 3 208 1 356 1 377 1 49 1 108 1 255 1 22 1 275 1 297 1 296 1 142 2 164 2 346 1 
326 1 214 2 270 1 126 1 378 1 192 4 309 1 94 2 160 1 95 4 245 1 175 1 354 2 224 2 186 2 
260 1 303 1 14 1 
123 1 129 1 303 1 14 1 166 1 
260 1 303 1 14 1 
260 1 303 1 14 1 
303 1 169 1 14 1 
303 1 169 1 14 1 
303 1 169 1 14 1 
303 1 14 1 
28 1 165 1 
280 1 33 1 1 2 201 1 5 1 47 1 176 2 21 8 37 4 49 4 284 2 48 1 334 1 256 4 160 1 247 2 83 1 346 2 373 1 347 3 
280 1 33 1 201 1 21 6 49 3 48 1 284 2 360 1 334 1 256 3 160 1 83 1 373 1 347 2 
1 1 176 1 47 1 21 4 37 2 252 1 284 1 49 2 334 1 256 2 211 1 247 1 101 1 346 1 373 1 347 2 268 1 
2 1 47 1 21 7 328 1 252 1 284 1 49 4 210 1 334 1 256 3 131 2 101 1 373 1 268 1 347 2 
280 2 33 1 2 1 1 2 5 2 37 4 150 1 284 5 334 3 131 2 247 2 101 2 315 1 373 3 268 2 201 1 47 4 176 2 21 23 252 2 48 1 210 2 49 12 256 11 160 1 83 2 346 2 347 9 118 1 
49 1 131 1 21 1 
210 1 256 1 21 1 
1 1 176 1 47 1 21 6 37 2 252 1 49 3 284 2 334 1 65 1 256 3 211 1 247 1 346 1 101 1 373 1 268 1 347 3 
1 1 328 1 37 2 330 1 284 1 334 2 288 1 131 1 247 1 101 2 373 2 268 2 154 1 47 1 176 1 177 1 21 12 252 2 210 1 49 6 109 1 256 6 25 1 346 1 347 2 
280 1 201 1 47 1 21 6 49 3 284 1 334 1 256 3 83 1 373 1 347 2 
280 1 33 1 1 1 5 1 47 1 176 1 21 3 37 2 284 1 49 2 48 1 256 1 83 1 247 1 315 1 346 1 347 2 
280 2 201 1 47 3 21 12 284 3 49 6 334 2 256 6 98 1 83 2 373 2 347 6 
1 1 176 1 47 1 21 2 37 2 334 1 256 2 25 1 247 1 346 1 268 1 347 1 
1 1 176 1 47 1 21 4 37 2 252 1 284 1 49 2 334 1 256 2 25 1 247 1 101 1 346 1 373 1 347 2 268 1 
280 1 1 3 5 1 305 1 176 3 47 1 21 3 37 6 49 2 284 1 256 1 25 1 247 3 83 1 315 1 346 3 347 2 
280 3 33 1 1 5 2 1 5 2 305 1 328 1 37 10 284 7 334 5 131 4 247 5 315 1 101 3 373 5 152 1 268 3 201 2 204 1 176 5 47 5 21 34 252 3 48 1 49 18 210 3 140 1 256 16 160 1 25 1 211 1 83 3 346 5 347 12 
280 1 33 1 1 1 328 1 37 2 284 2 334 1 131 1 247 1 373 1 201 1 154 1 176 1 21 8 210 1 49 4 48 1 256 4 160 1 25 1 83 1 346 1 347 2 
280 1 33 1 1 2 2 1 328 1 37 4 284 2 334 2 131 2 247 2 373 1 268 1 201 1 154 1 176 2 47 1 21 11 252 1 48 1 49 5 210 1 256 6 160 1 25 1 211 1 83 1 346 2 347 3 
280 1 33 1 1 3 5 1 328 1 37 6 330 1 284 3 334 3 288 1 131 1 247 3 101 2 373 3 268 2 201 1 154 1 47 1 176 3 177 1 21 19 252 2 48 1 210 1 49 10 109 1 256 9 160 1 25 1 211 1 83 1 346 3 347 4 
280 1 33 1 1 3 5 1 328 1 37 6 330 1 284 3 334 3 288 1 131 1 247 3 101 1 373 2 268 2 201 1 154 1 47 2 176 3 177 1 21 17 252 2 48 1 210 1 49 7 109 1 256 10 160 1 25 1 211 1 83 1 346 3 347 5 
280 1 33 1 1 1 328 1 37 2 284 2 334 1 131 1 247 1 373 1 201 1 154 1 176 1 21 8 210 1 49 4 48 1 256 4 160 1 25 1 83 1 346 1 347 2 
1 1 328 1 37 2 330 1 284 1 334 2 288 1 131 1 247 1 101 2 373 2 268 2 154 1 47 1 176 1 177 1 21 12 252 2 210 1 49 6 109 1 256 6 25 1 346 1 347 2 
280 1 33 1 1 4 5 2 328 1 37 8 330 1 284 3 288 1 334 3 131 1 247 4 101 1 373 2 268 2 201 1 154 1 47 2 176 4 177 1 21 18 252 2 48 1 49 8 210 1 109 1 256 10 160 1 25 1 211 1 83 1 346 4 347 5 
1 4 5 2 305 1 328 1 37 8 330 1 284 3 288 1 334 3 131 1 247 4 101 2 373 2 268 3 154 1 47 3 176 4 177 1 21 16 252 3 49 7 210 1 109 1 256 9 25 1 346 4 347 6 
280 3 33 2 201 1 47 3 21 7 49 4 48 1 284 3 334 1 256 3 83 3 373 1 347 6 
280 1 33 1 1 4 5 2 305 1 328 1 37 8 330 1 284 3 288 1 334 3 131 1 247 4 101 1 373 2 268 2 201 1 154 1 47 1 176 4 177 1 21 18 252 2 48 1 49 8 210 1 109 1 256 10 160 1 25 1 83 1 346 4 347 4 
121 1 332 1 104 1 75 1 114 1 356 1 10 1 
119 1 121 1 339 1 104 1 75 1 308 1 356 1 10 1 332 1 173 1 370 1 114 1 
120 1 108 1 360 1 255 1 296 1 130 1 178 1 208 1 289 1 185 1 9 1 
120 1 279 1 45 1 178 1 208 1 75 2 356 1 9 1 10 2 108 1 332 1 255 1 275 1 296 1 96 1 298 1 130 1 142 1 
279 2 120 2 85 1 88 1 9 1 40 1 10 2 91 1 332 2 96 1 130 1 222 1 45 1 338 1 75 2 208 1 356 1 108 1 255 1 275 2 296 3 298 1 142 1 
279 2 120 2 85 1 88 1 125 1 9 1 40 1 10 2 91 1 332 2 130 2 222 1 45 1 338 1 75 2 208 1 356 1 108 2 322 1 255 2 275 2 296 3 298 1 142 1 
120 1 85 1 0 1 199 1 35 1 291 1 125 1 178 1 208 1 209 1 40 1 62 2 9 1 192 1 108 3 255 3 275 1 220 1 296 4 161 2 130 3 222 1 186 1 
120 1 85 1 199 1 35 1 273 1 125 1 178 1 208 1 209 1 40 1 62 2 9 1 192 1 108 3 255 3 275 1 220 1 296 4 161 2 130 3 222 1 186 1 
108 1 255 1 130 1 208 1 216 1 9 1 
120 2 250 1 133 1 103 1 189 1 203 1 149 1 178 2 216 1 208 3 9 2 108 7 110 1 344 1 255 6 81 1 275 1 296 3 130 7 112 1 15 1 
120 1 1 2 9 1 10 2 265 1 130 1 313 1 176 2 21 6 75 2 356 2 22 2 275 1 142 1 83 1 184 1 279 1 280 1 33 1 189 1 37 4 191 1 331 1 284 2 332 1 244 1 334 1 96 1 99 1 247 2 373 1 45 1 374 1 201 1 206 1 208 1 377 2 108 1 48 1 49 3 255 1 256 3 296 1 160 1 298 1 346 2 347 2 
326 2 35 1 214 1 126 2 62 3 192 1 64 1 309 1 220 1 130 1 175 2 245 2 269 1 225 1 199 2 272 1 273 1 178 1 136 1 209 1 358 1 108 1 255 1 277 1 296 2 161 3 186 1 381 1 
120 1 250 1 35 1 189 1 216 1 208 2 9 1 357 1 108 2 255 2 275 1 296 2 130 2 
120 1 189 1 271 1 125 1 178 1 208 1 9 1 108 4 255 4 296 1 130 4 185 1 289 1 
120 1 103 1 203 1 329 1 208 2 9 1 108 2 255 2 275 1 12 1 296 1 195 1 130 2 222 1 
108 1 352 1 255 1 130 1 163 1 90 1 178 1 208 1 38 1 9 1 
120 1 133 1 189 1 208 1 9 1 63 1 108 2 255 2 296 1 130 2 15 1 
120 2 133 1 189 1 271 1 178 1 149 1 208 2 9 2 108 5 255 4 296 3 130 5 112 1 222 1 289 1 185 1 
120 2 133 1 189 1 271 1 178 1 149 1 208 2 9 2 108 5 286 1 255 4 296 3 130 5 222 1 289 1 185 1 
120 1 279 1 45 1 178 1 208 1 75 2 356 1 9 1 10 2 108 1 332 1 322 1 255 1 275 1 296 1 298 1 130 1 142 1 
120 1 250 1 103 1 203 1 208 2 9 1 108 1 255 1 81 1 275 1 296 1 130 1 222 1 
332 1 351 1 11 1 13 1 327 1 146 1 75 1 171 1 10 1 
146 1 84 1 218 1 
11 1 13 1 146 1 54 1 356 1 
167 1 225 1 34 1 338 1 88 1 146 1 209 1 356 1 62 2 218 1 192 1 91 1 11 2 161 2 13 2 335 1 54 2 186 1 84 1 
360 1 156 1 102 1 31 1 
249 1 56 1 156 1 113 1 102 1 31 1 243 1 
249 1 50 1 105 1 
249 3 188 1 46 1 4 1 56 1 156 1 306 2 243 3 371 1 113 1 102 1 31 1 
249 2 368 1 153 1 56 1 156 1 113 1 102 1 31 1 243 2 
238 1 249 1 188 1 200 1 56 1 163 1 307 1 113 1 38 1 31 1 243 1 
249 1 188 1 56 1 113 1 102 1 31 1 243 1 
249 1 188 1 56 1 156 1 113 1 102 2 243 1 
249 2 188 1 348 1 56 2 376 1 137 1 243 2 113 2 102 1 31 1 
249 3 188 1 168 1 200 1 56 1 156 1 343 1 243 3 368 2 113 1 102 1 267 1 31 2 
249 2 188 1 355 1 56 1 156 1 307 1 38 1 243 2 352 1 368 1 193 1 163 2 113 1 102 1 31 1 
249 4 188 1 153 1 200 1 56 2 156 1 243 4 368 2 113 2 102 1 267 1 144 1 31 2 
249 1 188 1 56 1 156 1 113 1 102 1 31 1 243 1 
249 4 46 1 4 1 200 1 56 1 156 2 306 1 243 4 368 2 231 1 113 1 102 2 267 1 31 3 
249 2 188 1 56 1 242 1 156 1 243 2 368 1 362 1 111 1 113 1 102 1 31 1 
249 3 188 1 46 1 4 2 215 1 56 1 156 1 306 2 243 3 113 1 102 1 31 1 
300 1 80 1 58 2 31 2 
249 1 188 1 56 1 113 1 16 1 243 1 
249 2 368 1 168 1 188 1 56 1 156 1 113 1 102 1 31 1 243 2 
248 1 
249 1 188 1 56 1 156 1 113 1 102 1 31 1 243 1 
249 3 188 1 168 1 56 1 156 1 306 1 243 3 368 1 113 1 102 1 31 1 
200 1 231 1 267 1 31 1 
102 1 31 1 

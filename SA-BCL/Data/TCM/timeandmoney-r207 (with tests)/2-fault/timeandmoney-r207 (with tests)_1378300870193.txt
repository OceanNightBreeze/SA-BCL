#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 3 66 1 339 1 258 2 147 1 123 1 69 9 26 2 50 2 210 1 346 1 32 1 242 1 318 1 218 5 267 1 269 9 244 1 198 1 11 1 248 6 253 2 176 2 37 2 327 4 20 2 229 1 308 1 
42 3 66 1 339 1 258 2 147 1 123 1 69 9 26 2 50 2 210 1 346 1 32 1 242 1 318 1 218 5 267 1 269 9 244 1 198 1 11 1 248 6 253 2 176 2 37 2 327 4 20 2 229 1 308 1 
42 4 66 1 339 1 258 2 147 1 123 1 69 10 26 2 50 2 210 1 346 1 32 1 242 1 318 1 218 6 267 1 269 10 244 1 198 1 11 1 248 7 253 2 176 2 37 2 327 5 20 2 229 1 308 1 
42 2 66 1 339 1 258 2 147 1 123 1 69 7 26 2 50 2 210 1 346 1 32 1 242 1 318 1 218 4 267 1 269 7 198 1 11 1 248 4 253 2 176 2 37 1 327 3 20 2 229 1 308 1 
42 1 66 1 339 1 258 1 248 3 69 4 26 1 176 1 50 1 37 2 327 2 210 1 346 1 267 1 218 3 20 1 269 4 244 1 
66 1 339 1 258 1 69 2 26 1 176 1 253 1 85 1 50 1 210 1 182 1 242 1 318 1 218 1 269 2 130 1 
42 1 66 1 11 1 339 1 258 2 248 1 69 3 26 2 253 1 327 1 210 1 218 2 269 3 
42 3 66 1 339 1 258 2 123 1 69 9 26 2 48 1 50 1 210 1 346 1 218 5 267 1 269 9 244 1 11 1 248 7 251 1 253 1 176 1 37 2 327 4 20 1 308 1 
42 3 66 1 339 1 258 2 123 1 69 9 26 2 48 1 50 1 210 1 346 1 218 5 267 1 269 9 244 1 11 1 248 7 251 1 253 1 176 1 37 2 327 4 20 1 308 1 
5 1 245 1 159 1 
5 1 160 1 169 2 
38 2 171 2 315 1 111 2 223 2 194 2 296 2 364 1 
334 1 94 2 205 1 257 2 97 1 166 1 237 1 28 2 171 2 315 1 213 1 215 1 31 2 264 1 316 1 194 2 127 1 193 1 243 1 220 1 296 3 221 1 298 1 9 1 223 2 276 1 38 2 87 1 111 3 280 1 305 2 141 1 114 1 364 1 93 1 284 1 365 1 
38 1 171 1 315 1 111 1 362 1 223 1 148 1 194 1 347 1 296 1 
245 1 206 1 273 1 45 1 148 1 81 1 108 1 5 1 72 1 171 1 378 1 111 1 217 1 296 1 
245 1 206 1 223 1 273 2 45 2 148 1 108 1 5 1 38 1 72 1 171 1 378 1 111 1 194 1 296 1 
152 1 109 1 273 1 45 1 320 1 
109 1 5 1 245 1 25 1 273 2 236 1 45 2 320 1 
273 1 45 1 320 1 
273 1 223 1 45 1 148 1 109 1 38 1 315 1 171 1 111 1 362 1 61 1 194 1 347 1 296 1 
5 1 
109 1 5 1 245 1 25 1 179 1 273 2 45 2 320 1 
245 1 40 2 25 1 273 5 45 5 67 1 170 2 109 2 5 1 238 1 211 1 173 1 266 1 156 1 92 1 373 1 374 1 163 2 320 2 
159 1 364 1 
223 1 209 1 83 1 38 1 171 2 111 2 194 1 296 2 364 2 
189 1 80 1 63 1 
334 1 94 1 257 1 166 1 28 1 111 1 280 1 141 1 213 1 127 1 193 1 114 1 296 1 364 1 285 1 9 1 
334 1 94 1 189 1 257 1 166 1 223 1 28 1 38 1 171 1 101 1 111 2 280 1 6 1 213 1 141 1 114 1 193 1 127 1 296 2 9 1 
299 1 223 4 81 1 277 1 83 1 38 4 171 5 101 2 111 5 6 1 194 1 195 1 296 5 364 1 
38 2 171 2 111 2 362 1 223 2 148 1 368 1 296 2 
38 3 171 3 101 1 111 3 223 3 194 1 296 3 364 1 
38 1 171 1 111 1 362 1 223 1 148 1 296 1 
38 1 171 1 111 1 223 1 148 1 194 1 296 1 209 1 83 1 
334 1 233 1 94 1 206 1 257 1 97 1 166 1 45 1 46 1 148 1 237 1 28 1 72 1 171 3 315 1 101 1 6 1 213 1 31 1 264 1 193 1 127 1 194 2 220 1 296 4 221 1 298 1 9 1 223 3 273 1 276 1 83 1 108 1 38 3 378 1 87 1 111 4 280 1 305 2 141 1 114 1 364 1 284 1 365 1 
38 1 171 2 111 2 101 1 223 1 81 1 195 1 296 2 364 1 
233 1 120 1 206 1 273 1 223 3 45 1 148 1 83 1 108 1 5 1 38 3 72 1 171 3 378 1 101 2 111 3 6 1 194 1 296 3 
189 1 223 2 80 1 83 1 38 2 171 2 101 1 111 2 194 1 296 2 
334 1 94 1 111 1 280 1 213 1 257 1 141 1 166 1 114 1 193 1 127 1 296 1 364 1 9 1 28 1 
94 1 334 1 257 1 200 1 166 1 28 1 111 1 141 1 213 1 193 1 114 1 296 1 364 1 91 1 9 1 
24 1 189 2 3 1 97 1 149 1 344 1 263 1 31 4 264 1 317 1 243 2 129 1 220 1 221 1 246 1 272 1 80 2 276 1 224 1 87 1 305 2 63 2 64 1 365 2 
38 1 171 1 111 1 206 1 223 1 148 1 368 1 296 1 
164 1 62 1 
164 1 62 1 
377 1 356 1 
377 1 356 1 
377 1 356 1 
164 1 65 1 62 1 
164 1 65 1 62 1 
164 1 281 1 62 1 
377 1 164 2 288 1 62 2 14 1 356 1 
164 1 65 1 62 1 
164 1 361 1 62 1 
164 1 361 1 62 1 
164 1 361 1 62 1 
164 1 43 1 337 1 366 1 45 1 71 1 171 2 54 1 196 1 296 2 78 1 79 1 223 2 273 1 137 1 302 1 38 2 111 2 379 1 281 1 62 1 381 1 364 1 232 1 
164 2 58 1 247 1 43 2 132 1 273 2 366 1 45 2 341 2 14 1 302 2 225 1 5 1 228 1 62 2 112 1 381 2 196 2 232 3 
50 1 20 1 176 1 
50 1 176 1 130 1 
363 1 98 1 20 2 219 1 176 3 130 1 
363 1 98 1 20 1 372 1 176 2 130 1 
98 1 363 2 20 1 176 2 130 1 
287 1 204 1 40 1 337 1 24 1 25 1 122 1 44 1 45 5 292 1 169 3 170 1 153 2 5 2 238 1 295 1 241 2 266 2 129 1 197 2 320 1 78 1 245 1 246 1 272 1 273 5 158 1 137 1 109 4 160 1 92 3 163 1 
186 1 0 1 204 3 40 2 24 3 234 1 25 1 44 1 67 1 45 9 292 2 169 9 170 2 191 1 153 6 152 5 5 5 238 1 295 2 266 6 129 3 197 6 78 4 320 6 245 1 246 3 272 3 273 9 353 1 109 7 282 5 160 3 92 8 202 1 163 2 
287 1 40 1 204 1 24 1 122 1 45 3 67 1 292 1 169 4 170 1 153 2 5 3 295 1 241 1 266 2 129 1 197 2 78 1 245 1 246 1 272 1 273 3 109 2 160 2 92 3 163 1 
287 1 0 1 40 1 204 2 24 2 122 1 45 4 67 1 292 1 169 7 170 1 191 1 153 4 5 4 295 1 241 2 266 4 129 2 197 4 78 2 245 1 246 2 272 2 273 4 353 1 109 3 160 3 92 5 163 1 
334 1 89 1 159 1 
334 1 107 1 
369 1 
334 1 166 1 9 1 
334 1 324 1 
334 1 9 1 
334 3 89 2 166 1 330 1 293 1 9 1 
24 1 246 1 3 2 235 1 355 2 167 1 15 1 313 1 314 1 325 1 344 3 31 7 243 4 283 1 118 1 21 1 365 3 
24 1 246 1 3 2 235 1 355 2 167 1 15 1 313 1 314 1 325 1 344 3 31 7 243 4 283 1 118 1 21 1 365 3 
105 1 24 1 246 1 3 2 235 1 355 2 167 1 15 1 313 1 314 1 325 1 344 3 31 7 243 4 283 1 118 1 21 1 365 3 
204 3 335 1 1 4 24 4 3 5 235 1 97 1 167 1 313 1 312 1 314 2 344 10 370 1 31 31 264 1 220 1 243 16 129 3 57 1 246 4 272 3 301 1 355 3 276 1 15 5 325 1 305 2 256 3 183 1 283 2 118 2 21 2 365 15 203 1 
24 1 3 3 97 2 235 1 312 1 313 1 314 1 344 4 172 1 31 9 264 2 220 2 243 5 246 1 355 2 276 2 15 1 325 1 305 4 142 1 283 1 21 1 118 1 365 4 
94 1 2 1 96 1 66 1 257 1 339 1 258 1 69 2 26 1 28 1 151 1 50 1 210 1 213 1 193 1 218 1 34 1 219 1 269 2 130 1 10 1 131 1 248 1 135 1 13 1 250 1 175 1 253 1 176 2 20 1 
94 1 2 1 96 1 66 1 257 1 339 1 258 1 69 3 190 1 26 1 28 1 50 1 213 1 128 1 193 1 218 1 219 1 34 1 269 3 130 1 10 1 131 1 248 2 135 1 250 1 175 1 253 1 176 2 86 1 20 1 
94 1 96 1 66 1 257 1 339 1 69 2 28 1 50 1 213 1 128 1 193 1 218 1 34 1 219 1 269 2 130 1 10 1 248 2 135 1 250 1 175 1 253 1 176 2 86 1 20 1 
334 1 94 1 257 1 258 1 135 2 250 2 175 2 310 1 69 1 99 1 190 1 26 1 253 2 28 1 227 1 326 1 154 1 213 1 141 1 193 1 117 1 269 1 9 1 
94 1 2 1 96 1 257 1 258 1 69 1 26 1 28 1 151 1 50 1 210 1 213 1 128 1 193 1 34 1 219 1 269 1 130 1 10 1 131 1 135 1 250 1 175 1 253 1 176 2 20 1 
68 1 
41 2 40 1 94 2 334 1 290 1 45 5 148 1 99 1 5 2 238 1 154 1 295 1 193 1 55 1 296 1 9 1 245 1 60 1 108 1 111 1 113 1 306 2 160 2 163 1 119 1 25 3 257 2 206 1 260 1 208 2 168 2 169 2 170 1 261 1 28 2 72 1 171 1 213 1 265 4 216 2 217 1 266 2 319 1 320 6 273 5 134 2 323 1 81 1 378 1 278 1 141 2 39 2 332 1 92 2 185 1 
119 1 25 1 206 1 45 3 148 1 72 1 171 1 265 2 55 1 216 1 217 1 296 1 320 2 273 3 323 1 81 1 108 1 378 1 111 1 278 1 179 1 185 1 
119 1 25 1 206 1 45 3 148 1 72 1 5 1 171 1 265 3 55 1 217 1 296 1 320 1 245 1 273 3 323 1 81 1 108 1 378 1 111 1 278 1 179 1 306 1 185 1 
119 1 25 1 206 1 45 3 148 1 168 1 72 1 5 1 171 1 265 3 55 1 216 1 217 1 296 1 320 2 245 1 273 3 323 1 81 1 108 1 378 1 111 1 278 1 179 1 306 1 185 1 
40 1 41 2 338 1 45 5 148 1 5 5 239 1 238 1 55 1 296 1 245 5 201 1 108 1 111 1 306 4 160 2 163 1 119 1 25 3 206 1 260 1 207 1 208 2 168 4 170 1 261 1 72 1 171 1 265 6 216 4 217 1 174 1 266 1 320 7 273 5 323 1 134 2 81 1 378 1 278 1 179 1 39 2 92 1 185 1 
40 1 41 2 45 4 148 1 5 2 238 1 55 1 296 1 245 1 108 1 111 1 113 1 306 2 160 2 163 1 119 1 25 2 206 1 260 1 208 2 168 2 169 2 170 1 261 1 72 1 171 1 265 4 216 2 217 1 266 1 320 4 273 4 323 1 134 2 81 1 378 1 278 1 39 2 92 1 185 1 
41 2 40 1 338 1 119 1 25 2 206 1 45 4 148 1 260 1 208 2 168 2 170 1 261 1 5 1 72 1 171 1 239 1 238 1 265 4 216 2 55 1 217 1 266 1 296 1 320 4 245 1 273 4 134 2 323 1 81 1 201 1 108 1 378 1 111 1 278 1 306 2 39 2 160 2 92 1 185 1 163 1 
41 2 40 1 338 1 119 1 25 2 206 1 45 4 148 1 260 1 208 2 168 2 170 1 261 1 5 1 72 1 171 1 239 1 238 1 265 4 216 2 55 1 217 1 266 1 296 1 320 4 245 1 273 4 134 2 323 1 81 1 201 1 108 1 378 1 111 1 278 1 306 2 39 2 160 2 92 1 185 1 163 1 
41 2 40 1 338 1 119 1 25 2 206 1 45 4 148 1 208 2 168 2 169 2 70 1 170 1 261 1 5 1 72 1 171 1 238 1 265 4 216 2 55 1 217 1 266 1 296 1 320 4 245 1 273 4 323 1 133 1 81 1 108 1 110 2 140 2 378 1 359 1 111 1 278 1 306 2 92 1 185 1 163 1 
41 2 40 1 338 1 119 1 25 2 206 1 45 4 148 1 260 1 208 2 207 1 168 3 170 1 261 1 5 1 72 1 238 1 239 1 171 1 265 5 55 1 216 3 217 1 266 1 296 1 320 5 245 1 273 4 134 2 323 1 81 1 201 1 108 1 378 1 111 1 278 1 39 2 306 3 160 2 92 1 163 1 185 1 
41 2 40 1 338 1 119 1 25 2 206 1 45 4 148 1 260 1 208 2 207 1 168 3 170 1 261 1 5 1 72 1 238 1 239 1 171 1 265 5 55 1 216 3 217 1 266 1 296 1 320 5 245 1 273 4 134 2 323 1 81 1 201 1 108 1 378 1 111 1 278 1 39 2 306 3 160 2 92 1 163 1 185 1 
40 1 41 2 45 4 148 1 5 1 238 1 55 1 296 1 245 1 108 1 110 2 111 1 113 1 306 2 163 1 119 1 25 2 206 1 208 2 168 2 169 2 70 1 170 1 261 1 72 1 171 1 265 4 216 2 217 1 266 1 320 4 273 4 323 1 81 1 140 2 378 1 278 1 92 1 185 1 
24 1 189 1 3 2 235 1 97 1 313 1 314 1 344 2 31 6 264 1 317 1 220 1 243 3 221 1 246 1 80 1 159 1 355 1 276 1 325 1 87 1 305 2 63 1 364 2 118 1 365 3 
309 1 204 2 1 3 335 1 24 1 3 1 189 11 97 2 344 2 125 1 215 1 31 14 264 2 220 2 243 8 129 1 221 1 57 1 298 1 106 1 246 2 272 2 80 4 276 2 15 1 87 2 279 1 180 1 305 4 256 3 63 11 364 1 365 6 
334 1 94 1 257 1 166 1 97 1 28 1 171 1 101 1 6 1 213 1 31 2 215 1 264 1 193 1 127 1 296 2 220 1 243 1 221 1 9 1 298 1 223 1 80 1 274 1 276 1 139 1 38 1 87 1 279 1 111 2 380 1 280 1 141 1 305 2 114 1 364 1 285 1 365 1 
94 3 334 2 3 4 189 7 235 1 97 3 344 8 345 1 101 1 6 1 7 2 193 2 296 3 243 10 103 2 298 1 9 2 246 3 355 1 15 4 111 3 255 2 305 6 114 2 63 7 364 2 118 1 365 10 204 2 24 3 257 3 166 2 311 1 313 1 314 1 28 3 262 1 171 1 213 2 215 1 31 20 264 3 128 1 127 2 220 3 129 2 221 3 322 2 272 2 223 1 80 7 276 3 325 1 38 1 279 1 87 3 280 2 141 1 284 2 
334 3 94 8 257 8 146 1 97 2 124 1 99 1 28 7 171 1 73 1 101 1 52 1 154 1 213 2 215 1 31 2 264 2 128 1 193 2 317 1 296 1 220 2 243 1 221 2 298 1 9 2 270 1 223 1 13 1 276 2 38 1 111 1 87 2 141 2 305 4 115 1 93 2 22 1 365 1 
204 1 24 1 3 1 189 1 97 1 344 1 171 1 31 3 264 1 194 1 220 1 296 1 243 1 129 1 221 1 246 1 272 1 223 1 80 1 276 1 83 1 38 1 303 1 87 1 279 1 111 1 305 2 63 1 365 2 
246 1 189 1 272 1 97 1 80 1 276 1 15 1 344 1 87 1 305 2 31 2 264 1 63 1 317 1 220 1 64 1 243 2 221 1 
24 1 3 1 189 1 97 1 80 1 276 1 344 1 263 1 87 1 305 2 31 2 264 1 63 1 317 1 220 1 129 1 221 1 365 2 
204 1 24 1 189 2 3 1 97 1 344 2 31 4 264 1 317 1 243 2 220 1 129 1 221 1 246 1 272 1 80 2 276 1 15 1 87 1 305 2 63 2 365 2 
246 1 189 1 146 1 272 1 97 1 80 1 276 1 15 1 344 1 87 1 305 2 31 2 264 1 63 1 220 1 64 1 243 2 221 1 
24 1 3 1 189 1 146 1 97 1 80 1 276 1 344 1 263 1 87 1 305 2 31 2 264 1 63 1 220 1 129 1 221 1 365 2 
204 1 24 1 146 1 189 2 3 1 97 1 344 2 31 4 264 1 243 2 220 1 129 1 221 1 246 1 272 1 80 2 276 1 15 1 87 1 305 2 63 2 365 2 
204 1 24 1 189 2 3 1 97 1 344 2 31 4 264 1 243 2 220 1 129 1 221 1 246 1 272 1 80 2 276 1 15 1 87 1 305 2 63 2 365 2 
94 1 334 1 257 1 166 1 97 1 28 1 213 1 215 1 31 2 264 1 193 1 127 1 243 1 296 1 220 1 221 1 9 1 298 1 276 1 111 1 87 1 280 1 141 1 305 2 114 1 364 1 284 1 365 1 
94 1 334 1 257 1 166 1 97 1 28 1 213 1 215 1 31 2 264 1 193 1 243 1 296 1 220 1 221 1 9 1 298 1 200 1 199 1 276 1 111 1 87 1 141 1 305 2 114 1 364 1 91 1 365 1 
204 1 24 1 189 2 3 1 97 1 344 2 31 4 264 1 243 2 220 1 129 1 221 1 246 1 272 1 80 2 276 1 15 1 87 1 279 1 305 2 63 2 365 2 
94 1 334 1 204 1 24 1 3 1 189 2 257 1 166 1 97 1 28 1 344 2 213 1 31 4 264 1 193 1 127 1 129 1 243 2 296 1 220 1 221 1 9 1 246 1 322 1 272 1 80 2 13 1 276 1 15 1 111 1 87 1 280 1 305 2 63 2 114 1 284 1 365 2 
204 1 24 1 189 1 97 1 4 1 344 1 171 1 31 3 264 1 194 1 129 1 220 1 296 1 243 2 221 1 246 1 272 1 223 1 80 1 276 1 15 1 83 1 38 1 87 1 279 1 111 1 305 2 63 1 365 1 
204 3 1 2 335 1 187 2 144 1 24 3 3 3 97 2 150 1 294 1 344 6 31 19 264 2 56 1 220 2 243 9 129 3 57 1 246 3 272 3 59 2 276 2 15 3 17 1 177 1 305 4 256 1 307 1 142 1 365 10 
204 3 1 2 24 2 187 4 144 2 165 1 3 2 97 3 312 2 150 1 342 1 294 2 51 1 344 4 31 26 264 3 33 1 220 3 243 14 129 2 57 2 246 3 376 1 272 3 59 1 276 3 15 2 177 1 360 1 305 6 256 2 307 1 142 1 365 12 
335 1 1 4 144 1 187 4 3 4 97 3 235 1 150 1 342 1 294 2 344 8 51 1 243 20 57 3 246 5 59 1 249 1 355 1 15 4 17 1 360 1 305 6 256 3 307 1 118 1 365 21 204 4 24 5 165 1 312 1 313 1 314 1 31 41 264 3 33 1 129 4 220 3 376 1 272 4 276 3 325 1 177 1 142 1 
204 4 1 4 335 1 187 4 144 1 24 4 165 1 3 4 235 1 97 4 313 1 312 2 150 1 314 1 342 1 294 2 51 1 344 7 31 38 264 4 33 1 220 4 243 20 129 3 57 3 246 5 376 1 272 4 249 1 59 1 355 1 276 4 15 3 325 1 17 1 177 1 360 1 305 8 256 3 307 1 142 1 118 1 365 18 
204 7 1 4 335 2 187 4 144 1 24 8 165 1 3 7 235 1 97 2 313 1 312 1 150 1 314 1 342 1 294 1 51 1 344 14 31 52 264 2 33 1 220 2 243 27 129 7 57 2 246 8 376 1 272 7 59 1 355 1 276 2 15 7 325 1 177 1 360 1 180 2 305 4 256 4 307 1 142 1 118 1 365 25 
164 1 247 1 43 1 145 1 132 1 62 1 14 1 302 1 381 1 196 1 
79 1 281 1 
164 1 29 1 43 1 62 1 302 1 381 1 196 1 357 1 162 1 
65 1 226 1 
288 1 361 1 47 1 
164 1 58 1 247 1 43 1 132 1 366 1 273 1 45 1 341 1 14 1 302 1 225 1 5 1 228 1 62 1 381 1 196 1 232 2 
164 1 58 1 247 1 43 1 132 1 366 1 273 1 45 1 341 1 14 1 302 1 225 1 5 1 228 1 62 1 381 1 196 1 232 2 
164 1 58 1 247 1 43 1 132 1 366 1 273 1 45 1 341 1 14 1 302 1 225 1 5 1 228 1 62 1 381 1 196 1 232 2 
288 1 65 1 226 1 
288 1 65 1 226 1 
361 1 47 1 
288 1 361 1 47 1 
379 1 54 1 
164 1 43 1 337 1 45 1 341 1 71 1 171 2 54 1 296 2 196 1 78 1 79 1 58 1 273 1 223 2 137 1 302 1 109 1 38 2 111 2 379 1 281 1 62 1 161 1 381 1 364 1 232 1 
334 1 94 2 257 2 97 1 28 2 171 2 52 1 213 1 212 1 30 1 215 1 31 2 264 1 193 1 8 1 296 2 220 1 243 1 221 1 9 1 298 1 104 1 351 1 276 1 87 1 279 1 111 2 305 2 93 2 22 1 365 1 
94 2 10 1 271 1 131 1 96 1 257 2 121 1 136 1 13 1 175 1 176 2 28 2 50 1 213 1 193 1 128 1 20 1 219 1 130 1 
94 1 10 1 271 1 131 1 96 1 257 1 175 1 176 2 28 1 50 1 214 1 213 1 128 1 193 1 20 1 219 1 130 1 
334 1 94 1 143 1 257 1 136 1 175 1 99 1 28 1 326 1 154 1 213 1 141 1 193 1 9 1 
94 1 10 1 271 1 131 1 96 1 257 1 121 1 136 1 175 1 176 2 28 1 50 1 213 1 193 1 128 1 20 1 219 1 130 1 
321 1 
5 1 245 1 159 1 173 1 266 1 92 1 373 1 
40 1 25 1 45 1 260 1 169 1 170 1 5 2 238 1 266 1 320 1 245 1 273 1 134 1 39 1 160 1 92 1 163 1 
334 10 40 4 94 3 289 1 188 1 45 5 153 6 5 8 238 4 295 2 193 4 155 2 103 2 197 6 349 2 9 3 245 2 107 3 246 2 13 1 108 2 254 1 160 6 163 4 204 2 23 2 24 2 25 3 257 3 166 3 367 1 169 12 27 2 170 4 28 3 213 3 74 1 76 2 173 1 266 8 268 2 129 2 373 1 320 5 272 2 273 5 82 2 324 2 141 1 89 2 330 1 331 2 332 1 92 9 
40 2 204 2 1 1 24 2 25 1 165 1 291 1 45 1 169 6 27 2 170 2 342 1 153 5 51 1 5 5 238 2 295 1 33 1 266 5 129 2 349 1 197 5 57 1 320 1 245 2 246 2 272 2 273 1 360 1 178 1 256 1 332 1 160 3 92 8 163 2 
40 1 24 1 45 1 148 1 27 2 170 1 313 1 314 1 238 1 239 1 315 1 171 1 194 1 266 2 347 1 296 1 349 1 246 2 273 1 223 1 84 1 38 1 111 1 362 1 61 1 92 2 118 1 163 1 
40 1 245 1 170 1 5 1 238 1 173 1 266 1 373 1 92 1 163 1 
204 2 246 2 24 2 272 2 169 10 27 2 153 5 5 5 160 5 266 5 129 2 103 1 92 5 349 1 197 5 
5 1 245 1 25 1 273 1 45 1 320 1 
334 2 40 2 94 4 25 2 257 4 166 1 67 1 45 3 340 1 99 1 170 2 28 4 238 1 295 2 154 1 213 2 74 2 126 1 193 3 266 2 348 1 319 1 9 2 320 4 60 1 273 3 358 1 254 1 141 2 332 2 90 1 116 1 92 2 163 2 
94 1 334 1 257 1 97 1 166 1 237 1 28 1 171 2 315 1 213 1 31 1 264 1 194 2 127 1 193 1 220 1 296 3 221 1 298 1 9 1 223 2 276 1 38 2 111 3 87 1 280 1 305 2 141 1 114 1 364 1 284 1 365 1 
40 1 245 2 355 1 169 4 170 1 153 2 5 4 238 1 295 1 160 2 332 1 266 2 92 1 197 2 163 1 
100 1 302 1 196 1 
100 1 302 1 196 1 
247 1 379 1 53 1 302 1 196 1 
100 1 302 1 196 1 
302 1 196 1 138 1 
302 1 196 1 138 1 
302 1 196 1 138 1 
302 1 196 1 
164 1 62 1 
24 1 246 1 3 2 97 2 235 1 355 1 276 2 15 1 313 1 312 1 314 1 325 1 344 3 305 4 31 8 264 2 243 4 220 2 118 1 365 4 
246 1 24 1 3 2 235 1 159 1 355 1 313 1 314 1 325 1 344 2 31 6 243 3 118 1 365 3 
204 1 24 1 246 1 3 1 272 1 97 1 276 1 15 1 344 2 305 2 31 4 264 1 129 1 220 1 243 2 230 1 365 2 
204 1 1 2 335 1 24 1 246 1 3 1 272 1 15 1 344 2 31 7 256 1 129 1 243 3 57 1 365 4 
204 2 335 1 1 2 24 3 3 5 235 1 97 2 313 1 312 2 314 2 344 9 31 23 264 2 243 11 129 2 220 2 297 1 106 1 246 3 272 2 355 1 276 2 15 4 325 1 180 1 305 4 256 2 118 2 365 12 
1 1 31 1 365 1 
31 1 256 1 243 1 
204 1 246 1 24 1 272 1 3 2 97 1 276 1 15 1 344 3 305 2 31 6 264 1 220 1 243 3 129 1 230 1 103 1 365 3 
204 2 1 1 24 2 3 1 165 1 97 1 342 1 344 2 51 1 31 12 264 1 33 1 220 1 243 6 129 2 57 1 246 2 272 2 276 1 15 1 360 1 305 2 256 1 142 1 365 6 
246 1 24 1 3 1 15 1 313 1 314 1 344 2 31 6 243 3 118 1 365 3 
3 1 235 1 97 1 276 1 15 1 312 1 314 1 325 1 344 2 305 2 31 3 264 1 243 1 297 1 220 1 118 1 365 2 
246 2 24 2 3 3 97 1 276 1 15 2 313 1 314 2 84 1 344 5 305 2 31 10 264 1 220 1 243 5 142 1 118 2 365 5 
246 1 272 1 97 1 276 1 15 1 344 1 305 2 31 2 264 1 220 1 243 2 142 1 
204 1 24 1 246 1 3 1 272 1 97 1 276 1 15 1 344 2 305 2 31 4 264 1 129 1 220 1 243 2 142 1 365 2 
3 1 97 3 276 3 15 1 312 1 314 1 17 1 344 2 305 6 31 3 264 3 297 1 220 3 243 1 142 1 118 1 365 2 
204 3 1 4 335 1 24 5 3 7 235 1 97 5 313 2 312 2 314 3 344 12 370 1 31 34 264 5 297 1 220 5 243 16 129 3 57 1 246 5 272 3 355 1 276 5 15 5 325 1 17 1 305 10 256 3 183 1 230 1 142 1 118 3 365 18 203 1 
1 1 24 1 3 2 97 1 235 1 313 1 314 1 344 2 31 8 264 1 220 1 243 4 57 1 246 1 355 1 276 1 325 1 360 1 305 2 256 1 142 1 118 1 365 4 
204 1 1 2 335 1 24 1 3 2 235 1 97 2 313 1 314 1 344 3 31 11 264 2 220 2 243 6 57 1 246 2 272 1 355 1 276 2 15 1 325 1 360 1 305 4 256 1 230 1 142 1 118 1 365 5 
204 2 1 1 24 3 165 1 3 3 235 1 97 3 313 1 312 1 314 1 342 1 344 4 51 1 31 19 264 3 33 1 220 3 243 9 129 2 57 1 246 3 272 2 355 1 276 3 15 1 325 1 360 1 305 6 256 1 230 1 142 1 118 1 365 10 
204 2 1 1 24 2 3 3 165 1 235 1 97 3 313 1 312 1 314 1 342 1 344 5 51 1 31 17 264 3 33 1 220 3 243 10 129 1 57 1 246 3 272 2 355 1 276 3 15 2 325 1 360 1 305 6 256 1 230 1 142 1 118 1 365 7 
1 1 24 1 3 2 97 1 235 1 313 1 314 1 344 2 31 8 264 1 220 1 243 4 57 1 246 1 355 1 276 1 325 1 360 1 305 2 256 1 142 1 118 1 365 4 
204 2 1 1 24 2 3 1 165 1 97 1 342 1 344 2 51 1 31 12 264 1 33 1 220 1 243 6 129 2 57 1 246 2 272 2 276 1 15 1 360 1 305 2 256 1 142 1 365 6 
204 2 1 1 24 2 165 1 3 3 235 1 97 4 313 1 312 2 314 1 342 1 51 1 344 5 31 18 264 4 33 1 220 4 243 10 129 1 57 1 246 3 272 2 355 1 276 4 15 2 325 1 360 1 305 8 256 1 230 1 142 1 118 1 365 8 
204 3 1 1 24 2 165 1 3 3 97 4 312 2 342 1 51 1 344 6 31 16 264 4 33 1 220 4 243 9 129 2 57 1 246 3 272 3 276 4 15 3 17 1 360 1 305 8 256 1 142 1 365 7 
24 1 246 1 3 3 235 2 15 3 313 1 314 3 325 1 344 6 31 7 243 3 118 3 365 4 
204 2 1 1 24 2 165 1 3 3 235 1 97 4 313 1 312 2 314 1 342 1 51 1 344 4 31 18 264 4 33 1 220 4 243 10 129 1 57 1 246 3 272 2 355 1 276 4 15 1 325 1 17 1 360 1 305 8 256 1 142 1 118 1 365 8 
171 1 111 1 354 1 81 1 195 1 296 1 364 1 
286 1 95 1 354 1 81 1 171 1 111 1 195 1 184 1 296 1 364 1 333 1 222 1 
334 1 94 1 154 1 213 1 257 1 141 1 193 1 159 1 99 1 9 1 28 1 
334 1 94 1 257 1 166 1 223 1 28 1 38 1 171 1 101 1 111 2 280 1 141 1 213 1 114 1 193 1 296 2 364 1 9 1 
334 3 94 1 206 1 257 1 166 2 223 2 148 1 324 1 28 1 38 1 378 1 171 2 101 1 111 2 280 1 213 1 74 1 76 1 114 1 193 1 296 2 364 1 9 2 
94 2 334 3 257 2 206 1 166 2 148 1 28 2 171 2 101 1 213 1 74 1 193 1 76 1 296 2 9 2 352 1 223 2 324 1 38 1 378 1 111 2 114 1 364 1 91 1 
334 4 94 3 257 3 166 1 45 2 28 3 5 1 213 1 74 1 193 1 102 1 76 1 9 1 320 1 107 1 245 1 352 1 273 2 324 1 108 1 18 1 89 1 141 1 
245 1 94 3 107 1 334 4 352 1 257 3 166 1 273 2 45 2 108 1 324 1 28 3 5 1 141 1 89 1 213 1 74 1 76 1 193 1 268 1 9 1 320 1 
94 1 73 1 213 1 257 1 193 1 28 1 
270 1 94 7 334 3 257 7 166 1 13 1 124 1 358 1 28 6 73 1 192 1 141 2 213 2 330 1 126 1 128 1 193 3 115 1 93 1 9 2 22 1 
94 1 334 1 3 2 189 1 97 2 235 1 344 2 101 1 193 1 296 2 243 3 9 1 246 1 351 1 13 1 355 1 111 2 255 1 305 4 114 1 63 1 364 2 118 1 365 3 24 1 257 1 166 1 313 1 28 1 314 1 171 1 213 1 31 6 264 2 127 1 220 2 221 2 322 1 223 1 80 1 276 2 325 1 38 1 279 1 87 2 280 1 284 1 
94 1 40 2 334 2 25 1 257 1 45 3 170 2 28 1 5 1 238 2 155 1 173 1 266 1 268 1 373 1 320 2 245 1 107 1 273 3 82 1 108 1 109 1 254 1 141 1 89 1 331 1 92 1 163 2 
94 2 334 2 188 1 257 2 166 1 13 1 28 2 73 1 89 1 213 1 330 1 193 2 9 1 
94 4 334 1 352 1 257 4 13 1 99 1 343 1 28 4 154 1 141 1 213 1 193 1 9 1 
94 2 334 1 257 2 166 1 358 1 28 2 345 1 213 1 74 1 126 1 193 2 90 1 348 1 9 1 
50 1 94 1 96 1 213 1 257 1 141 1 193 1 176 1 130 1 28 1 
334 1 94 2 213 1 212 1 257 2 193 1 128 1 13 1 9 1 22 1 28 2 
270 1 94 5 334 3 257 5 13 1 99 1 343 1 28 4 154 1 141 1 213 2 74 1 193 2 115 1 9 2 22 1 
270 1 94 5 334 3 36 1 257 5 13 1 99 1 343 1 28 4 154 1 141 1 213 2 74 1 193 2 9 2 22 1 
334 1 94 1 257 1 166 1 223 1 28 1 38 1 171 1 101 1 111 2 141 1 213 1 114 1 193 1 296 2 364 1 91 1 9 1 
94 1 334 1 257 1 166 1 358 1 28 1 192 1 213 1 74 1 330 1 126 1 193 2 9 1 
35 1 350 1 12 1 364 1 231 1 
245 1 375 1 35 2 233 1 350 2 206 1 273 2 45 2 12 2 148 1 108 1 109 1 5 1 49 1 72 1 378 1 88 1 364 1 231 1 
35 1 12 1 171 1 111 1 30 1 8 1 296 1 231 1 104 1 
49 1 88 1 231 1 
66 1 339 1 159 1 218 1 
66 1 339 1 258 1 218 1 69 1 269 1 26 1 
250 1 69 1 253 1 
66 1 258 1 339 1 259 1 69 3 26 1 210 1 181 1 75 1 242 2 218 1 269 3 
37 1 66 1 339 1 248 1 258 1 218 1 69 2 269 2 26 1 
258 1 69 1 26 1 176 1 50 1 327 1 210 1 346 1 218 1 20 1 269 1 
210 1 66 1 258 1 218 1 69 1 269 1 26 1 
210 1 66 2 339 1 258 1 69 1 269 1 26 1 
300 1 66 1 258 2 275 1 69 2 26 2 328 1 210 1 218 1 269 2 
42 1 66 1 339 1 258 1 248 2 123 1 69 3 26 1 327 1 210 1 218 2 269 3 308 1 
66 1 339 1 258 1 248 1 69 2 252 1 26 1 176 2 50 1 210 1 218 1 219 1 20 1 269 2 130 1 
42 1 66 1 339 1 258 2 248 2 69 4 26 2 37 1 327 1 210 1 218 2 269 4 244 1 
210 1 66 1 339 1 258 1 218 1 69 1 269 1 26 1 
42 1 66 2 339 2 248 2 258 1 259 1 69 4 26 1 327 1 181 1 371 1 242 1 218 3 269 4 
66 1 258 1 248 1 339 1 69 2 251 1 26 1 16 1 210 1 218 1 19 1 269 2 
66 1 258 1 339 1 259 2 69 3 26 1 210 1 181 1 304 1 242 2 218 1 269 3 
329 1 218 2 77 2 157 1 
336 1 210 1 258 1 69 1 269 1 26 1 
210 1 66 1 339 1 248 1 258 1 123 1 218 1 69 2 269 2 26 1 
240 1 
210 1 66 1 339 1 258 1 218 1 69 1 269 1 26 1 
66 1 248 1 258 1 339 1 123 1 69 3 26 1 210 1 242 1 218 1 269 3 
327 1 42 1 371 1 218 1 
66 1 218 1 

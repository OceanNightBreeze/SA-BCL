#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (323,356) (323,356) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 274 78 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (323,356) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 27 13 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 2 211 9 235 2 213 5 5 1 188 1 166 2 238 1 281 1 90 3 151 6 172 2 287 4 174 1 314 1 198 1 97 1 154 1 317 1 156 1 229 2 293 1 250 1 201 2 135 9 182 2 74 1 51 1 
52 2 211 9 235 2 213 5 5 1 188 1 166 2 238 1 281 1 90 3 151 6 172 2 287 4 174 1 314 1 198 1 97 1 154 1 317 1 156 1 229 2 293 1 250 1 201 2 135 9 182 2 74 1 51 1 
52 2 211 10 235 2 213 6 5 1 188 1 166 2 238 1 281 1 90 4 151 7 172 2 287 5 174 1 314 1 198 1 97 1 154 1 317 1 156 1 229 2 293 1 250 1 201 2 135 10 182 2 74 1 51 1 
52 2 211 7 235 2 213 4 5 1 188 1 166 2 238 1 281 1 90 2 151 4 172 2 287 3 174 1 198 1 97 1 154 1 317 1 156 1 229 2 293 1 250 1 201 2 135 7 182 1 74 1 51 1 
287 2 314 1 52 1 235 1 211 4 213 3 154 1 188 1 166 1 229 1 293 1 201 1 281 1 135 4 182 2 90 1 151 3 51 1 
52 1 211 2 235 1 213 1 97 1 154 1 317 1 319 1 188 1 166 1 293 1 201 1 135 2 372 1 376 1 172 1 
287 1 201 2 135 3 52 2 211 3 213 2 90 1 154 1 151 1 188 1 172 1 238 1 293 1 
255 1 287 4 314 1 52 2 235 1 211 9 198 1 213 5 154 1 188 1 166 1 229 1 238 1 293 1 281 1 201 2 135 9 182 2 183 1 90 3 74 1 151 7 172 1 51 1 
255 1 287 4 314 1 52 2 235 1 211 9 198 1 213 5 154 1 188 1 166 1 229 1 238 1 293 1 281 1 201 2 135 9 182 2 183 1 90 3 74 1 151 7 172 1 51 1 
49 1 304 1 138 1 
345 1 304 1 189 2 
43 2 159 2 354 2 278 2 226 1 106 2 91 2 344 1 
159 3 256 1 278 3 7 1 187 1 236 1 306 1 353 2 354 2 241 2 118 2 242 1 91 2 43 2 30 1 94 1 266 2 361 1 363 1 11 1 224 2 247 1 340 1 199 1 226 1 155 1 177 1 344 1 179 1 180 1 249 1 70 1 34 1 71 1 205 1 106 2 232 1 
233 1 43 1 159 1 39 1 354 1 53 1 278 1 226 1 106 1 91 1 
43 1 233 1 159 1 288 1 95 1 278 1 304 1 33 1 22 1 149 1 23 1 190 1 49 1 325 1 
43 1 233 1 159 1 288 1 95 2 278 1 304 1 33 1 23 2 149 1 354 1 49 1 325 1 106 1 91 1 
23 1 95 1 32 1 87 1 139 1 
142 1 23 2 95 2 49 1 304 1 32 1 87 1 29 1 
23 1 95 1 87 1 
233 1 43 1 159 1 39 1 95 1 53 1 278 1 226 1 32 1 23 1 354 1 335 1 106 1 91 1 
304 1 
202 1 142 1 23 2 95 2 49 1 304 1 32 1 87 1 
142 1 95 5 225 1 175 1 110 1 341 1 304 1 32 2 87 2 148 1 114 2 23 5 8 2 323 1 356 1 49 1 42 1 358 2 377 1 
344 1 138 1 
43 2 159 2 349 1 278 2 344 2 354 1 50 1 106 1 91 1 
16 1 25 1 6 1 
94 1 159 1 363 1 256 1 224 1 278 1 56 1 155 1 177 1 344 1 236 1 180 1 205 1 241 1 118 1 232 1 
43 1 94 1 159 2 363 1 256 1 364 1 224 1 278 2 155 1 177 1 236 1 180 1 205 1 25 1 241 1 118 1 106 1 91 1 232 1 66 1 
43 5 159 5 364 2 278 5 344 1 305 1 133 1 22 1 309 1 354 1 106 4 50 1 91 4 66 1 
233 1 43 2 159 2 39 1 278 2 106 2 91 2 329 1 
43 3 159 3 364 1 354 1 278 3 106 3 91 3 344 1 
233 1 43 1 159 1 39 1 278 1 106 1 91 1 
233 1 43 1 159 1 349 1 354 1 278 1 106 1 50 1 91 1 
233 1 159 4 256 1 278 4 7 1 236 1 306 1 149 1 23 1 353 2 354 2 241 1 118 1 242 1 91 3 66 1 43 3 30 1 94 1 266 1 363 1 288 1 95 1 31 1 364 1 224 1 247 1 340 1 199 1 226 1 155 1 177 1 344 1 179 1 180 1 33 1 34 1 71 1 184 1 205 1 325 1 50 1 106 3 232 1 
43 2 22 1 159 2 364 1 309 1 278 2 106 1 91 1 344 1 
233 1 43 3 159 3 95 1 288 1 364 2 31 1 278 3 350 1 304 1 33 1 23 1 149 1 354 1 325 1 50 1 106 3 91 3 66 1 
43 2 159 2 364 1 278 2 6 1 25 1 354 1 50 1 106 2 91 2 
94 1 159 1 363 1 256 1 224 1 278 1 155 1 177 1 344 1 236 1 180 1 205 1 241 1 118 1 232 1 
94 1 159 1 363 1 256 1 224 1 278 1 155 1 177 1 344 1 180 1 307 1 205 1 241 1 118 1 82 1 
209 1 161 1 144 1 6 2 187 2 353 2 25 2 218 1 119 1 242 1 30 1 266 4 247 2 340 1 199 1 179 1 34 1 16 2 299 1 105 1 324 1 374 1 19 1 276 1 
233 1 43 1 159 1 325 1 278 1 106 1 91 1 329 1 
267 1 292 1 
267 1 292 1 
0 1 89 1 
0 1 89 1 
0 1 89 1 
267 1 3 1 292 1 
267 1 3 1 292 1 
267 1 137 1 292 1 
0 1 89 1 267 2 192 1 193 1 292 2 
267 1 3 1 292 1 
9 1 267 1 292 1 
9 1 267 1 292 1 
9 1 267 1 292 1 
159 2 278 2 58 1 85 1 165 1 23 1 24 1 91 2 43 2 125 1 222 1 95 1 267 1 290 1 268 1 365 1 344 1 318 1 292 1 181 1 101 1 137 1 17 1 106 2 
125 1 95 2 267 2 268 2 290 3 318 2 58 2 132 2 304 1 165 2 292 2 203 1 61 1 23 2 35 1 192 1 79 1 197 1 359 1 
235 1 166 1 229 1 
235 1 319 1 166 1 
55 1 194 1 319 1 92 1 229 2 166 3 
328 1 194 1 319 1 92 1 229 1 166 2 
194 1 319 1 92 2 229 1 166 2 
142 1 110 2 302 1 304 2 87 1 189 3 114 1 23 5 8 1 24 1 239 1 263 2 358 1 121 2 95 5 126 2 175 1 365 1 343 1 178 1 32 4 296 1 297 1 105 1 17 1 324 1 49 1 345 1 274 1 377 3 276 1 19 1 
233 1 142 1 39 1 278 1 87 4 189 3 8 1 191 1 239 1 335 1 91 1 43 1 95 6 296 1 105 1 49 1 345 1 106 1 19 1 159 1 53 1 302 1 110 2 304 3 114 1 23 6 24 2 354 1 358 1 263 2 121 2 315 3 316 1 129 1 175 1 226 1 32 5 324 1 274 1 377 3 276 1 139 3 
95 2 343 1 178 1 32 1 114 1 23 2 8 1 239 1 42 1 358 1 274 1 377 1 
95 1 343 1 178 1 114 1 23 1 8 1 239 1 42 1 358 1 78 1 274 1 377 1 
363 1 128 1 138 1 
363 1 196 1 
347 1 
94 1 363 1 180 1 
363 1 59 1 
363 1 180 1 
94 1 363 3 109 1 128 2 112 1 180 1 
266 7 38 1 247 3 164 1 187 4 215 1 333 1 282 1 217 1 218 3 299 2 120 1 310 2 171 1 276 1 19 1 275 1 
266 7 38 1 247 3 164 1 187 4 215 1 333 1 282 1 217 1 218 3 299 2 120 1 310 2 171 1 276 1 19 1 275 1 
266 7 38 1 247 3 164 1 187 4 215 1 333 1 282 1 217 1 218 3 299 2 120 1 310 2 171 1 276 1 19 1 275 1 312 1 
20 1 38 1 210 1 302 3 164 1 57 1 187 16 215 2 333 1 282 2 217 1 353 2 218 10 120 2 310 3 171 2 266 31 247 15 340 1 199 1 179 1 45 1 271 1 34 1 103 1 185 3 105 3 299 5 158 1 324 3 231 4 19 4 275 5 276 4 
38 1 164 1 187 5 215 1 282 1 353 4 218 4 217 1 26 1 240 1 310 2 120 1 171 1 266 9 247 4 340 2 199 2 179 2 34 2 271 1 299 3 276 1 19 1 275 1 
141 1 52 1 235 1 211 2 213 1 256 1 55 1 188 1 166 2 241 1 117 1 118 1 195 1 151 1 172 1 93 1 224 1 154 1 130 1 155 1 319 1 229 1 368 1 293 1 201 1 135 2 15 1 48 1 36 1 18 1 
141 1 52 1 235 1 211 3 213 1 256 1 55 1 188 1 86 1 166 2 241 1 117 1 118 1 195 1 151 2 172 1 96 1 224 1 154 1 130 1 155 1 319 1 229 1 368 1 320 1 201 1 135 3 15 1 36 1 18 1 
141 1 211 2 235 1 213 1 256 1 55 1 188 1 86 1 166 2 241 1 117 1 118 1 151 2 172 1 96 1 224 1 154 1 155 1 319 1 368 1 229 1 135 2 15 1 36 1 18 1 
124 1 52 1 363 1 211 1 256 1 224 1 155 1 180 1 69 1 368 2 369 1 320 1 201 1 135 1 205 1 251 1 241 1 262 1 118 1 244 1 36 2 18 2 172 2 
141 1 52 1 235 1 211 1 256 1 55 1 166 2 241 1 117 1 118 1 195 1 172 1 93 1 96 1 224 1 130 1 155 1 319 1 229 1 368 1 293 1 201 1 135 1 15 1 36 1 18 1 
88 1 
233 1 142 3 37 1 278 1 279 1 147 1 87 6 189 2 149 1 190 1 8 1 239 1 241 2 244 1 337 1 43 1 95 5 288 1 98 2 155 1 291 1 13 1 102 4 204 2 47 2 205 2 251 1 49 1 345 2 159 1 256 1 110 2 21 2 304 2 114 1 351 1 308 1 22 1 23 5 260 2 216 2 27 1 118 2 358 1 362 2 363 1 127 1 224 2 175 1 68 1 180 1 33 1 73 1 325 1 377 2 
233 1 43 1 142 1 159 1 362 1 288 1 95 3 278 1 68 1 279 1 87 2 202 1 33 1 351 1 308 1 22 1 102 2 23 3 149 1 190 1 73 1 325 1 
233 1 43 1 142 1 159 1 288 1 95 3 278 1 68 1 279 1 304 1 87 1 202 1 33 1 351 1 308 1 22 1 102 3 23 3 149 1 190 1 260 1 73 1 49 1 325 1 
233 1 142 1 159 1 278 1 21 1 279 1 304 1 87 2 22 1 308 1 351 1 149 1 23 3 190 1 260 1 43 1 95 3 288 1 362 1 68 1 202 1 33 1 102 3 73 1 325 1 49 1 
233 1 142 3 159 1 110 1 111 1 278 1 21 4 279 1 147 1 304 5 87 7 114 1 22 1 308 1 351 1 23 5 149 1 190 1 216 2 8 1 260 4 358 1 311 1 43 1 95 5 288 1 362 4 127 1 175 1 269 1 98 2 68 1 12 1 202 1 33 1 100 1 102 6 204 2 47 2 73 1 49 5 325 1 345 2 377 1 
233 1 142 2 278 1 279 1 147 1 87 4 189 2 149 1 190 1 8 1 43 1 288 1 95 4 98 2 291 1 102 4 47 2 204 2 49 1 345 2 159 1 110 1 21 2 304 2 22 1 114 1 351 1 308 1 23 4 216 2 260 2 358 1 362 2 127 1 175 1 68 1 33 1 73 1 325 1 377 1 
233 1 142 2 159 1 110 1 278 1 21 2 279 1 304 1 147 1 87 4 22 1 308 1 351 1 114 1 149 1 23 4 190 1 260 2 216 2 8 1 358 1 311 1 43 1 362 2 95 4 288 1 127 1 175 1 269 1 98 2 68 1 12 1 33 1 102 4 204 2 47 2 73 1 49 1 325 1 345 2 377 1 
233 1 142 2 159 1 110 1 278 1 21 2 279 1 304 1 147 1 87 4 22 1 308 1 351 1 114 1 149 1 23 4 190 1 260 2 216 2 8 1 358 1 311 1 43 1 362 2 95 4 288 1 127 1 175 1 269 1 98 2 68 1 12 1 33 1 102 4 204 2 47 2 73 1 49 1 325 1 345 2 377 1 
233 1 142 2 159 1 145 1 110 1 278 1 21 2 163 2 279 1 304 1 87 4 189 2 22 1 308 1 351 1 114 1 149 1 23 4 190 1 260 2 8 1 334 1 336 2 358 1 311 1 43 1 362 2 95 4 288 1 127 1 175 1 68 1 33 1 102 4 204 2 47 2 206 1 73 1 49 1 325 1 377 1 
233 1 142 2 159 1 110 1 278 1 111 1 21 3 279 1 304 1 147 1 87 5 114 1 22 1 308 1 351 1 149 1 23 4 190 1 216 2 8 1 260 3 358 1 311 1 43 1 95 4 288 1 362 3 127 1 175 1 269 1 98 2 68 1 12 1 33 1 102 5 204 2 47 2 73 1 49 1 325 1 345 2 377 1 
233 1 142 2 159 1 110 1 278 1 111 1 21 3 279 1 304 1 147 1 87 5 114 1 22 1 308 1 351 1 149 1 23 4 190 1 216 2 8 1 260 3 358 1 311 1 43 1 95 4 288 1 362 3 127 1 175 1 269 1 98 2 68 1 12 1 33 1 102 5 204 2 47 2 73 1 49 1 325 1 345 2 377 1 
233 1 142 2 159 1 110 1 278 1 21 2 163 2 279 1 304 1 87 4 189 2 308 1 351 1 114 1 22 1 23 4 149 1 190 1 260 2 8 1 336 2 358 1 43 1 362 2 95 4 288 1 127 1 175 1 68 1 291 1 33 1 102 4 204 2 47 2 73 1 206 1 49 1 325 1 377 1 
38 1 144 1 6 1 164 1 187 3 215 1 25 1 353 2 218 2 217 1 242 1 120 1 310 1 30 1 266 6 247 3 340 1 199 1 344 2 179 1 34 1 16 1 299 2 138 1 19 1 276 1 
20 1 160 1 302 2 6 4 57 1 187 8 150 1 218 2 353 4 25 11 355 1 242 2 30 1 266 14 67 1 247 6 340 2 199 2 344 1 179 2 70 1 34 2 71 1 321 1 16 11 299 1 185 3 105 2 324 1 231 3 275 1 19 2 276 1 
159 2 256 1 278 2 6 1 56 1 236 1 187 1 150 1 353 2 241 1 118 1 242 1 91 1 10 1 66 1 43 1 94 1 30 1 266 2 363 1 224 1 364 1 247 1 340 1 199 1 155 1 177 1 344 1 228 1 179 1 180 1 34 1 272 1 70 1 71 1 205 1 106 1 232 1 
38 1 278 3 6 7 237 1 236 2 187 10 150 1 241 3 242 3 91 1 243 2 43 1 94 2 96 1 247 10 340 3 199 3 155 2 344 2 205 1 16 7 299 4 105 2 106 1 300 2 19 3 159 3 256 2 302 2 164 1 215 1 306 2 116 1 217 1 353 6 261 2 25 7 218 8 118 3 219 2 310 1 120 1 264 1 66 1 30 3 266 20 363 2 224 3 364 1 177 2 179 3 180 2 70 1 34 3 71 1 324 2 232 2 276 3 275 4 
159 1 144 1 256 2 278 1 40 1 258 1 187 1 168 1 284 1 353 4 241 7 118 8 242 2 91 1 244 1 286 1 43 1 30 2 266 2 96 1 363 3 364 1 224 8 247 1 340 2 199 2 155 2 179 2 180 2 249 2 34 2 70 1 71 1 205 2 48 1 273 1 251 1 106 1 253 1 
159 1 278 1 302 1 6 1 146 1 187 1 150 1 218 1 25 1 353 2 354 1 242 1 91 1 43 1 30 1 266 3 247 2 340 1 199 1 179 1 34 1 16 1 299 1 105 1 324 1 106 1 50 1 19 1 276 1 
209 1 30 1 266 2 144 1 340 1 6 1 199 1 187 2 179 1 34 1 16 1 218 1 25 1 353 2 105 1 242 1 275 1 19 1 
30 1 266 2 144 1 247 2 340 1 6 1 199 1 179 1 34 1 16 1 218 1 299 1 25 1 353 2 324 1 119 1 242 1 276 1 
30 1 266 4 144 1 247 2 340 1 302 1 6 2 199 1 187 2 179 1 34 1 16 2 299 1 218 2 25 2 353 2 105 1 324 1 242 1 276 1 275 1 19 1 
209 1 30 1 266 2 340 1 6 1 199 1 187 2 179 1 34 1 16 1 218 1 25 1 273 1 353 2 105 1 242 1 275 1 19 1 
30 1 266 2 247 2 340 1 6 1 199 1 179 1 34 1 16 1 218 1 299 1 25 1 273 1 353 2 324 1 119 1 242 1 276 1 
30 1 266 4 247 2 340 1 302 1 6 2 199 1 187 2 179 1 34 1 16 2 299 1 218 2 25 2 273 1 353 2 105 1 324 1 242 1 276 1 275 1 19 1 
30 1 266 4 247 2 340 1 302 1 6 2 199 1 187 2 179 1 34 1 16 2 299 1 218 2 25 2 353 2 105 1 324 1 242 1 276 1 275 1 19 1 
159 1 256 1 278 1 187 1 236 1 306 1 353 2 241 1 118 1 242 1 94 1 30 1 266 2 363 1 224 1 247 1 340 1 199 1 155 1 177 1 344 1 179 1 180 1 70 1 34 1 71 1 205 1 232 1 
159 1 256 1 278 1 187 1 307 1 353 2 241 1 118 1 242 1 94 1 30 1 266 2 363 1 224 1 247 1 340 1 199 1 155 1 177 1 344 1 200 1 179 1 180 1 70 1 34 1 71 1 205 1 82 1 
30 1 266 4 247 2 340 1 302 1 6 2 199 1 187 2 179 1 34 1 150 1 16 2 299 1 218 2 25 2 353 2 105 1 324 1 242 1 276 1 275 1 19 1 
159 1 256 1 278 1 302 1 6 2 187 2 236 1 306 1 218 2 25 2 261 1 353 2 241 1 118 1 242 1 94 1 30 1 266 4 363 1 224 1 247 2 340 1 199 1 155 1 177 1 179 1 180 1 34 1 16 2 299 1 105 1 48 1 324 1 232 1 276 1 275 1 19 1 
143 1 159 1 278 1 302 1 6 1 187 2 150 1 218 1 353 2 25 1 354 1 242 1 91 1 43 1 30 1 266 3 247 1 340 1 199 1 179 1 34 1 16 1 105 1 324 1 106 1 50 1 276 1 275 1 19 1 
20 1 327 1 234 1 302 3 57 1 187 9 115 1 353 4 218 6 240 1 266 19 44 2 247 10 340 2 199 2 179 2 34 2 104 1 72 1 299 3 185 1 105 3 75 1 324 3 207 2 346 1 231 2 19 3 275 3 276 3 
234 1 302 3 187 14 57 2 259 1 115 2 218 4 353 6 240 1 28 1 221 1 245 1 266 26 44 4 246 1 247 12 340 3 199 3 227 1 179 3 271 2 34 3 104 1 299 2 185 2 105 3 75 1 324 2 207 1 346 2 231 2 275 2 276 2 19 3 
20 1 234 1 38 1 302 4 164 1 57 3 187 20 259 1 215 1 115 2 217 1 353 6 218 8 240 1 310 1 120 1 28 1 221 1 245 1 266 41 44 4 246 1 247 21 340 3 199 3 227 1 179 3 99 1 271 1 34 3 104 1 72 1 299 4 185 3 105 4 75 1 324 4 207 1 346 1 231 4 19 5 275 4 276 5 
20 1 234 1 38 1 302 4 164 1 57 3 187 20 259 1 215 1 115 2 217 1 353 8 218 7 240 1 310 1 120 1 28 1 221 1 245 1 266 38 44 4 246 1 247 18 340 4 199 4 227 1 179 4 99 1 271 2 34 4 104 1 72 1 299 4 185 3 105 4 75 1 324 3 207 1 346 1 231 4 19 5 275 3 276 4 
20 2 234 1 38 1 302 7 164 1 57 2 187 27 259 1 215 1 115 1 217 1 353 4 218 14 355 2 240 1 310 1 120 1 28 1 221 1 245 1 266 52 44 4 246 1 247 25 340 2 199 2 227 1 179 2 271 1 34 2 104 1 299 7 185 4 105 7 75 1 324 7 207 1 346 1 231 4 19 8 275 7 276 8 
61 1 35 1 267 1 192 1 268 1 366 1 58 1 318 1 165 1 292 1 
137 1 85 1 
267 1 268 1 54 1 58 1 318 1 14 1 165 1 280 1 292 1 
136 1 3 1 
9 1 193 1 170 1 
125 1 95 1 267 1 268 1 290 2 318 1 58 1 132 1 304 1 165 1 292 1 61 1 23 1 35 1 192 1 79 1 197 1 359 1 
125 1 95 1 267 1 268 1 290 2 318 1 58 1 132 1 304 1 165 1 292 1 61 1 23 1 35 1 192 1 79 1 197 1 359 1 
125 1 95 1 267 1 268 1 290 2 318 1 58 1 132 1 304 1 165 1 292 1 61 1 23 1 35 1 192 1 79 1 197 1 359 1 
136 1 193 1 3 1 
136 1 193 1 3 1 
9 1 170 1 
9 1 193 1 170 1 
101 1 181 1 
159 2 278 2 58 1 85 1 165 1 23 1 24 1 91 2 197 1 43 2 313 1 222 1 95 1 267 1 268 1 290 1 365 1 344 1 132 1 318 1 32 1 292 1 181 1 101 1 137 1 17 1 106 2 
159 2 2 1 256 1 278 2 331 1 187 1 150 1 353 2 65 1 241 2 118 2 242 1 286 1 43 2 30 1 266 2 363 1 224 2 247 1 340 1 199 1 155 1 179 1 180 1 294 1 249 2 34 1 70 1 71 1 252 1 253 1 
141 1 235 1 96 1 256 1 224 2 55 1 155 1 319 1 229 1 166 2 60 1 370 1 48 1 241 2 117 1 118 2 357 1 195 1 36 1 
141 1 235 1 96 1 256 1 224 1 55 1 155 1 319 1 229 1 166 2 241 1 117 1 118 1 357 1 220 1 195 1 36 1 
363 1 256 1 224 1 155 1 270 1 180 1 370 1 205 1 251 1 241 1 118 1 262 1 36 1 244 1 
141 1 235 1 96 1 256 1 224 1 55 1 155 1 319 1 229 1 166 2 60 1 370 1 241 1 117 1 118 1 357 1 195 1 36 1 
176 1 
323 1 356 1 49 1 110 1 304 1 138 1 377 1 
142 1 110 1 147 1 304 2 87 1 189 1 114 1 23 1 8 1 216 1 358 1 95 1 175 1 98 1 49 1 345 1 377 1 
142 3 37 1 41 2 87 5 189 12 8 4 239 2 241 3 196 3 243 2 285 2 338 1 339 2 94 3 288 2 95 5 289 2 155 3 298 2 205 1 48 1 105 2 49 2 345 6 108 2 19 2 109 1 256 4 348 2 302 2 110 8 304 8 59 2 114 4 23 5 356 1 118 3 358 4 263 6 121 6 265 2 360 1 363 10 224 3 175 4 128 2 180 3 323 1 230 1 324 2 80 1 377 9 81 1 276 2 
142 1 37 1 110 5 302 2 57 1 259 1 304 5 87 1 189 6 114 2 23 1 283 1 8 2 239 1 263 5 358 2 28 1 285 1 221 1 121 5 245 1 95 1 175 2 227 1 185 1 105 2 324 2 49 2 345 3 107 1 231 1 377 8 108 2 19 2 276 2 
233 1 159 1 39 1 53 1 278 1 110 2 215 1 114 1 23 1 8 1 217 1 354 1 335 1 358 1 120 1 91 1 285 1 43 1 95 1 175 1 131 1 226 1 12 1 106 1 377 2 108 2 19 2 276 1 
114 1 8 1 323 1 175 1 49 1 110 1 358 1 304 1 377 1 
302 1 110 2 304 1 189 2 105 1 324 1 345 1 263 1 377 1 19 1 121 1 276 1 
23 1 142 1 95 1 49 1 304 1 87 1 
142 1 37 1 256 1 110 1 87 2 114 2 23 2 8 2 27 1 239 1 241 2 42 1 118 2 358 2 244 1 363 1 95 2 224 2 175 1 155 1 13 1 180 1 205 2 251 1 230 1 377 1 
159 3 256 1 278 3 7 1 236 1 306 1 353 2 354 2 241 1 118 1 242 1 91 2 43 2 94 1 30 1 266 1 363 1 224 1 247 1 340 1 199 1 226 1 155 1 177 1 344 1 179 1 180 1 34 1 71 1 205 1 106 2 232 1 
37 1 175 1 110 2 304 4 189 4 114 1 8 1 239 1 49 2 345 2 263 2 358 1 310 1 377 1 121 2 
62 1 268 1 165 1 
62 1 268 1 165 1 
101 1 35 1 268 1 64 1 165 1 
62 1 268 1 165 1 
268 1 162 1 165 1 
268 1 162 1 165 1 
268 1 162 1 165 1 
268 1 165 1 
267 1 292 1 
266 8 38 1 247 4 340 2 199 2 164 1 187 4 179 2 215 1 34 2 271 1 217 1 218 3 299 2 353 4 310 1 120 1 276 1 19 1 275 1 
38 1 266 6 247 3 164 1 187 3 215 1 299 2 218 2 217 1 310 1 120 1 138 1 19 1 276 1 
266 4 247 2 4 1 340 1 302 1 199 1 187 2 179 1 34 1 299 1 218 2 353 2 105 1 324 1 276 1 19 1 275 1 
20 1 266 7 247 4 302 1 57 1 187 3 299 1 185 1 105 1 218 2 324 1 231 2 276 1 19 1 275 1 
20 1 38 1 302 2 164 1 187 11 215 2 352 1 217 1 218 9 353 4 355 1 310 1 120 2 266 23 247 12 340 2 199 2 179 2 271 2 34 2 321 1 105 2 185 2 299 5 324 2 231 2 275 4 19 3 276 3 
266 1 247 1 231 1 
266 1 185 1 187 1 
266 6 247 3 340 1 4 1 302 1 199 1 187 3 179 1 34 1 353 2 105 1 218 3 299 2 324 1 243 1 19 1 275 1 276 1 
302 2 57 1 187 6 259 1 353 2 218 2 240 1 28 1 221 1 245 1 266 12 247 6 340 1 199 1 227 1 179 1 34 1 185 1 105 2 299 1 324 2 231 1 275 1 19 2 276 2 
266 6 247 3 187 3 215 1 217 1 299 1 218 2 120 1 19 1 276 1 275 1 
266 3 38 1 247 2 340 1 199 1 164 1 187 1 179 1 215 1 271 1 34 1 352 1 218 2 299 1 353 2 120 1 275 1 
266 10 247 5 340 1 199 1 131 1 187 5 179 1 215 2 34 1 353 2 299 3 218 5 217 1 240 1 120 2 275 2 19 2 276 2 
266 2 340 1 199 1 187 2 179 1 34 1 353 2 105 1 218 1 240 1 19 1 275 1 
266 4 247 2 340 1 302 1 199 1 187 2 179 1 34 1 299 1 218 2 353 2 105 1 324 1 240 1 276 1 19 1 275 1 
266 3 247 2 340 3 199 3 187 1 179 3 215 1 271 1 34 3 352 1 72 1 353 6 299 1 218 2 240 1 120 1 275 1 
20 1 38 1 210 1 4 1 302 3 164 1 57 1 187 16 215 3 352 1 217 2 353 10 218 12 240 1 310 1 120 3 266 34 247 18 340 5 199 5 179 5 45 1 271 2 34 5 72 1 185 3 105 3 299 7 158 1 324 3 231 4 19 5 275 5 276 5 
38 1 164 1 57 1 187 4 259 1 215 1 353 2 218 2 217 1 240 1 310 1 120 1 266 8 247 4 340 1 199 1 179 1 34 1 185 1 299 2 231 1 276 1 19 1 
20 1 38 1 4 1 302 1 164 1 57 1 187 6 259 1 215 1 217 1 353 4 218 3 240 1 310 1 120 1 266 11 247 5 340 2 199 2 179 2 34 2 299 2 185 1 105 1 231 2 276 1 19 2 275 1 
38 1 4 1 302 2 164 1 57 1 187 9 259 1 215 1 217 1 353 6 218 4 240 1 310 1 120 1 28 1 221 1 245 1 266 19 247 10 340 3 199 3 227 1 179 3 34 3 271 1 185 1 105 2 299 3 324 2 231 1 275 1 19 3 276 3 
38 1 4 1 302 2 164 1 57 1 187 10 259 1 215 1 217 1 353 6 218 5 240 1 310 1 120 1 28 1 221 1 245 1 266 17 247 7 340 3 199 3 227 1 179 3 271 1 34 3 185 1 105 2 299 3 324 1 231 1 275 2 19 3 276 2 
38 1 164 1 57 1 187 4 259 1 215 1 353 2 218 2 217 1 240 1 310 1 120 1 266 8 247 4 340 1 199 1 179 1 34 1 185 1 299 2 231 1 276 1 19 1 
302 2 57 1 187 6 259 1 353 2 218 2 240 1 28 1 221 1 245 1 266 12 247 6 340 1 199 1 227 1 179 1 34 1 185 1 105 2 299 1 324 2 231 1 275 1 19 2 276 2 
38 1 4 1 302 2 164 1 57 1 187 10 259 1 215 1 217 1 353 8 218 5 240 1 310 1 120 1 28 1 221 1 245 1 266 18 247 8 340 4 199 4 227 1 179 4 34 4 271 2 185 1 105 2 299 3 324 1 231 1 275 2 19 3 276 2 
302 3 57 1 187 9 259 1 353 8 218 6 240 1 28 1 221 1 245 1 266 16 247 7 340 4 199 4 227 1 179 4 34 4 271 2 72 1 185 1 105 3 299 3 324 2 231 1 275 3 19 3 276 2 
266 7 38 1 247 4 164 2 187 3 215 3 299 3 218 6 217 1 120 3 276 1 275 3 19 1 
38 1 302 2 164 1 57 1 187 10 259 1 215 1 217 1 353 8 218 4 240 1 310 1 120 1 28 1 221 1 245 1 266 18 247 8 340 4 199 4 227 1 179 4 34 4 271 2 72 1 185 1 105 2 299 3 324 1 231 1 275 1 19 3 276 2 
43 1 295 1 22 1 159 1 309 1 278 1 344 1 
123 1 43 1 186 1 159 1 278 1 344 1 330 1 134 1 295 1 22 1 309 1 173 1 
363 1 256 1 205 1 224 1 251 1 241 1 118 1 155 1 244 1 138 1 180 1 
43 1 94 1 159 2 363 1 256 1 364 1 224 1 278 2 155 1 177 1 344 1 236 1 180 1 205 1 241 1 118 1 106 1 91 1 
233 1 159 2 256 1 278 2 236 1 59 1 241 1 118 1 91 2 43 2 94 2 363 3 289 1 224 1 364 1 155 1 177 1 344 1 180 2 33 1 325 1 106 1 80 1 
233 1 159 2 256 1 278 2 59 1 241 2 118 2 91 2 43 2 94 2 363 3 289 1 224 2 364 1 155 1 177 1 367 1 344 1 180 2 33 1 325 1 106 1 80 1 82 1 
94 1 223 1 288 1 95 2 363 4 289 1 256 1 224 3 277 1 128 1 155 1 367 1 304 1 59 1 180 1 87 1 23 2 205 1 49 1 241 3 118 3 80 1 196 1 
94 1 288 1 95 2 363 4 289 1 256 1 224 3 128 1 155 1 367 1 304 1 59 1 180 1 87 1 23 2 298 1 205 1 49 1 241 3 118 3 80 1 196 1 
256 1 168 1 224 1 241 1 118 1 155 1 
94 1 96 1 109 1 363 3 256 3 224 7 40 1 258 1 155 2 342 1 180 2 249 1 168 1 205 2 284 1 48 1 241 6 118 7 375 1 253 1 254 1 
38 1 159 2 256 1 278 2 6 1 164 1 187 3 236 1 215 1 306 1 150 1 25 1 217 1 218 2 353 4 261 1 65 1 241 1 118 1 242 2 310 1 120 1 91 1 43 1 94 1 30 2 266 6 363 1 364 1 224 1 247 3 340 2 199 2 155 1 177 1 344 2 179 2 180 1 34 2 16 1 299 2 48 1 106 1 300 1 232 1 276 1 19 1 
142 1 348 1 110 1 41 1 304 1 87 2 114 2 23 3 8 2 356 1 241 1 118 1 358 2 196 1 339 1 95 3 363 2 288 1 224 1 175 2 128 1 32 1 298 1 205 1 323 1 49 1 230 1 377 1 
360 1 94 1 109 1 363 2 256 2 224 2 128 1 155 1 180 1 168 1 48 1 241 2 118 2 
363 1 256 1 224 4 155 1 367 1 180 1 46 1 205 1 48 1 251 1 241 4 118 4 244 1 
94 1 363 1 256 2 224 2 155 1 237 1 180 1 373 1 241 2 118 2 80 1 375 1 153 1 254 1 
141 1 235 1 256 1 205 1 224 1 241 1 118 1 155 1 319 1 166 1 
363 1 2 1 96 1 256 1 224 2 48 1 241 2 118 2 155 1 180 1 253 1 
363 3 256 2 224 5 40 1 155 2 180 2 46 1 205 1 48 1 284 1 251 1 241 4 118 5 80 1 244 1 253 1 
140 1 363 3 256 2 224 5 155 2 180 2 46 1 205 1 48 1 284 1 251 1 241 4 118 5 80 1 244 1 253 1 
43 1 94 1 159 2 363 1 256 1 364 1 224 1 278 2 155 1 177 1 344 1 180 1 205 1 241 1 118 1 106 1 91 1 82 1 
94 1 109 1 363 1 256 2 224 1 155 1 342 1 180 1 241 1 118 1 80 1 375 1 254 1 
301 1 344 1 152 1 113 1 122 1 
233 1 301 2 288 1 95 2 31 1 257 1 344 1 304 1 113 1 32 1 33 1 23 2 149 1 322 1 49 1 325 1 326 1 152 2 122 2 
43 1 301 1 159 1 278 1 331 1 113 1 294 1 252 1 122 1 
322 1 326 1 113 1 
213 1 154 1 188 1 138 1 
201 1 135 1 52 1 211 1 213 1 154 1 188 1 
135 1 18 1 172 1 
52 1 211 3 213 1 154 1 317 2 248 1 332 1 188 1 293 1 201 1 167 1 135 3 
201 1 135 2 182 1 52 1 211 2 213 1 154 1 151 1 188 1 
287 1 201 1 135 1 52 1 235 1 211 1 213 1 166 1 229 1 51 1 293 1 
201 1 135 1 52 1 211 1 213 1 154 1 293 1 
201 1 135 1 52 1 211 1 154 2 188 1 293 1 
201 2 1 1 135 2 52 2 211 2 213 1 169 1 63 1 154 1 293 1 
287 1 201 1 135 3 52 1 211 3 213 2 90 1 198 1 74 1 154 1 151 2 188 1 293 1 
52 1 211 2 235 1 213 1 55 1 154 1 83 1 319 1 188 1 166 2 229 1 293 1 201 1 135 2 151 1 
287 1 201 2 135 4 182 1 314 1 52 2 211 4 213 2 90 1 154 1 151 2 188 1 293 1 
201 1 135 1 52 1 211 1 213 1 154 1 188 1 293 1 
287 1 52 1 211 4 213 3 154 2 317 1 248 1 188 2 167 1 201 1 135 4 90 1 208 1 151 2 
52 1 211 2 213 1 154 1 214 1 84 1 188 1 293 1 201 1 135 2 183 1 151 1 
52 1 211 3 213 1 212 1 154 1 317 2 248 1 188 1 293 1 201 1 167 2 135 3 
213 2 303 1 77 1 157 2 
201 1 135 1 52 1 211 1 76 1 293 1 
201 1 135 2 52 1 211 2 213 1 198 1 154 1 151 1 188 1 293 1 
371 1 
201 1 135 1 52 1 211 1 213 1 154 1 188 1 293 1 
201 1 135 3 52 1 211 3 198 1 213 1 154 1 317 1 151 1 188 1 293 1 
287 1 213 1 90 1 208 1 
213 1 154 1 

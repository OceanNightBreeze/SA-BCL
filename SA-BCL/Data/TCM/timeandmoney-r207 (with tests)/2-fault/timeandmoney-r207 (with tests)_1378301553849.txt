#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (67,160) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (67,160) 107 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (67,160) 107 204 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 339 1 201 1 130 1 21 4 234 2 134 1 136 1 327 1 110 1 329 2 140 1 210 6 212 9 94 3 309 2 241 1 31 1 349 1 194 1 80 2 65 9 222 2 37 1 174 2 293 5 355 1 230 2 
127 1 339 1 201 1 130 1 21 4 234 2 134 1 136 1 327 1 110 1 329 2 140 1 210 6 212 9 94 3 309 2 241 1 31 1 349 1 194 1 80 2 65 9 222 2 37 1 174 2 293 5 355 1 230 2 
127 1 339 1 201 1 130 1 21 5 234 2 134 1 136 1 327 1 110 1 329 2 140 1 210 7 212 10 94 4 309 2 241 1 31 1 349 1 194 1 80 2 65 10 222 2 37 1 174 2 293 6 355 1 230 2 
127 1 339 1 201 1 130 1 21 3 234 2 134 1 136 1 327 1 110 1 329 2 140 1 210 4 212 7 94 2 309 2 241 1 31 1 349 1 80 1 65 7 222 2 37 1 174 2 293 4 355 1 230 2 
339 1 31 1 21 2 194 1 234 1 80 2 222 1 65 4 174 1 327 1 293 3 329 1 140 1 210 3 355 1 94 1 212 4 230 1 
127 1 309 1 234 1 244 1 171 1 65 2 151 1 222 1 110 1 327 1 293 1 329 1 140 1 355 1 212 2 230 1 
309 1 349 1 21 1 234 2 65 3 327 1 293 2 329 2 140 1 210 1 355 1 212 3 94 1 
339 1 21 4 234 2 134 1 327 1 329 2 140 1 210 7 260 1 94 3 212 9 309 1 349 1 31 1 168 1 194 1 80 2 65 9 37 1 222 1 174 1 293 5 355 1 230 1 
339 1 21 4 234 2 134 1 327 1 329 2 140 1 210 7 260 1 94 3 212 9 309 1 349 1 31 1 168 1 194 1 80 2 65 9 37 1 222 1 174 1 293 5 355 1 230 1 
317 1 249 1 2 1 
284 1 169 2 2 1 
290 2 246 2 226 2 235 2 337 2 217 1 56 2 258 1 
131 1 252 1 253 1 71 1 325 1 258 1 279 1 235 2 261 1 189 1 92 1 190 1 56 3 163 1 9 1 32 1 269 2 115 1 217 1 286 2 285 1 102 1 333 2 150 1 117 2 290 3 246 2 40 2 198 1 226 2 119 1 153 1 337 2 318 1 199 1 319 1 251 1 
290 1 246 1 226 1 235 1 337 1 217 1 183 1 56 1 301 1 1 1 
98 1 48 1 2 1 273 1 196 1 1 1 290 1 246 1 138 1 197 1 317 1 56 1 276 1 359 1 
98 2 48 1 2 1 273 1 196 1 1 1 290 1 246 1 197 1 226 1 235 1 317 1 337 1 56 1 359 2 
98 1 139 1 228 1 255 1 359 1 
164 1 98 2 317 1 228 1 2 1 255 1 326 1 359 2 
98 1 228 1 359 1 
98 1 75 1 217 1 183 1 301 1 1 1 255 1 290 1 246 1 226 1 235 1 337 1 56 1 359 1 
2 1 
164 1 98 2 317 1 228 1 2 1 255 1 161 1 359 2 
268 1 164 1 98 5 202 1 184 1 2 1 255 2 342 2 288 2 172 1 133 1 335 1 259 1 317 1 228 2 357 1 141 1 229 2 359 5 
249 1 258 1 
49 1 258 2 290 2 246 2 226 1 235 1 345 1 337 1 56 2 
0 1 24 1 214 1 
269 1 115 1 253 1 285 1 286 1 258 1 150 1 290 1 40 1 198 1 153 1 209 1 318 1 56 1 319 1 251 1 
269 1 115 1 253 1 24 1 285 1 286 1 150 1 290 2 224 1 137 1 246 1 198 1 40 1 235 1 153 1 337 1 318 1 56 2 319 1 251 1 
290 3 137 1 246 3 226 1 235 3 337 3 56 3 258 1 
290 1 246 1 235 1 337 1 183 1 56 1 1 1 
290 1 246 1 226 1 235 1 337 1 345 1 56 1 49 1 1 1 
131 1 253 1 48 1 1 1 258 1 137 1 279 1 235 3 345 1 261 1 189 1 92 1 190 1 56 4 9 1 191 1 98 1 269 1 115 1 217 1 285 1 286 1 273 1 196 1 102 1 333 2 150 1 36 1 117 1 290 4 246 3 224 1 198 1 197 1 40 1 226 2 119 1 153 1 337 3 318 1 199 1 319 1 251 1 359 1 
290 2 246 2 137 1 142 1 235 1 337 1 56 2 276 1 258 1 
98 1 48 1 2 1 1 1 273 1 196 1 36 1 290 3 224 1 137 2 246 3 197 1 226 1 235 3 345 1 337 3 56 3 179 1 359 1 
24 1 290 2 137 1 246 2 226 1 235 2 345 1 337 2 56 2 214 1 
269 1 115 1 253 1 285 1 286 1 258 1 150 1 290 1 40 1 198 1 153 1 318 1 56 1 319 1 251 1 
269 1 115 1 253 1 285 1 286 1 258 1 353 1 290 1 40 1 198 1 153 1 318 1 346 1 56 1 251 1 
232 1 0 2 131 1 24 2 325 2 279 1 261 2 92 1 214 2 332 1 95 1 162 1 267 1 9 1 242 1 243 1 352 1 333 2 117 4 176 1 292 1 119 1 199 1 320 1 
290 1 246 1 314 1 235 1 337 1 48 1 56 1 1 1 
20 1 142 1 258 1 290 5 137 2 246 5 224 1 226 1 235 4 337 4 345 1 56 5 276 1 61 1 
290 2 314 1 246 2 235 2 337 2 183 1 56 2 1 1 
81 1 67 1 
81 1 67 1 
122 1 160 1 
122 1 160 1 
122 1 160 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 
81 1 67 1 10 1 107 1 
81 1 67 1 98 1 10 1 107 1 204 1 359 1 
174 1 230 1 222 1 
230 1 222 1 151 1 
174 2 330 1 220 1 123 1 222 3 151 1 
174 1 28 1 330 1 220 1 222 2 151 1 
174 1 330 1 220 2 222 2 151 1 
277 2 232 1 47 1 50 2 184 2 256 1 255 4 25 2 2 2 342 1 4 1 133 1 135 1 159 1 95 1 164 1 98 5 242 1 243 1 284 1 270 1 144 1 169 3 288 1 315 1 228 1 317 1 357 3 338 1 229 1 84 1 359 5 
277 6 232 3 47 2 50 6 184 6 256 3 255 7 2 5 4 4 342 2 133 1 139 5 159 2 58 1 141 1 95 3 348 1 98 9 164 1 33 1 242 3 243 3 284 3 169 9 100 5 287 1 288 2 149 1 228 6 317 1 357 8 84 1 229 2 359 9 125 1 
232 1 277 2 47 1 184 2 50 2 2 3 255 2 25 1 256 1 342 1 4 1 159 1 141 1 95 1 98 3 242 1 243 1 284 2 270 1 169 4 288 1 317 1 357 3 338 1 229 1 359 3 
277 4 232 2 47 1 50 4 184 4 2 4 25 2 255 3 256 2 342 1 4 2 159 1 141 1 95 2 98 4 33 1 242 2 243 2 284 3 270 1 169 7 287 1 288 1 149 1 317 1 357 5 229 1 338 1 359 4 
153 1 249 1 8 1 
153 1 16 1 
188 1 
153 1 251 1 
153 3 115 1 236 1 8 2 59 1 251 1 
153 1 115 1 251 1 
45 1 153 1 
232 1 85 1 243 1 323 1 63 1 325 4 117 7 68 1 104 1 247 2 261 3 211 1 54 1 57 1 356 1 320 3 332 2 
232 1 85 1 243 1 323 1 63 1 325 4 117 7 68 1 104 1 247 2 261 3 211 1 54 1 57 1 356 1 320 3 332 2 
232 1 85 1 243 1 323 1 22 1 63 1 325 4 117 7 68 1 104 1 247 2 261 3 211 1 54 1 57 1 356 1 320 3 332 2 
85 2 232 4 86 1 233 1 321 1 131 1 300 1 323 1 256 3 325 16 89 3 261 15 92 1 54 2 211 5 57 1 30 1 95 3 332 5 9 1 242 3 243 4 271 1 63 2 333 2 117 31 223 4 336 1 68 1 104 1 247 3 356 2 199 1 320 10 
232 1 85 1 131 2 300 1 132 1 323 1 325 5 261 4 92 2 54 1 211 1 57 1 112 1 332 3 9 2 243 1 63 1 333 4 117 9 68 1 247 2 356 1 199 2 320 4 
234 1 253 1 23 1 327 1 329 1 140 1 210 1 212 2 263 1 237 1 347 1 113 1 309 1 269 1 35 1 143 1 195 1 286 1 221 1 148 1 65 2 151 1 222 2 174 1 293 1 40 1 198 1 355 1 123 1 230 1 
234 1 253 1 23 1 254 1 73 1 329 1 140 1 210 2 212 3 29 1 263 1 237 1 347 1 309 1 269 1 143 1 195 1 286 1 221 1 148 1 65 3 151 1 222 2 174 1 293 1 40 1 198 1 355 1 123 1 230 1 
253 1 23 1 254 1 73 1 140 1 210 2 212 2 263 1 347 1 309 1 269 1 143 1 195 1 286 1 148 1 65 2 151 1 222 2 174 1 293 1 40 1 198 1 355 1 123 1 230 1 
18 1 200 1 234 1 253 1 23 2 329 1 212 1 29 1 263 2 309 2 269 1 116 1 195 2 286 1 285 1 65 1 198 1 40 1 316 1 153 1 70 1 178 1 251 1 
309 1 269 1 143 1 253 1 234 1 195 1 254 1 286 1 23 1 221 1 148 1 222 2 151 1 65 1 174 1 327 1 198 1 40 1 329 1 212 1 237 1 263 1 123 1 347 1 230 1 113 1 
5 1 
47 1 48 1 184 2 2 2 1 1 133 1 52 1 138 1 6 1 56 1 60 1 98 5 284 2 193 1 285 2 286 2 245 2 196 1 288 1 101 4 289 1 290 1 246 1 198 1 197 1 153 1 15 1 251 1 296 2 200 1 156 2 299 1 253 1 342 1 26 2 208 1 213 1 164 3 269 2 166 1 350 2 116 1 169 2 273 1 311 1 40 2 82 2 317 1 228 6 41 1 276 1 357 2 229 1 231 2 359 5 
299 1 48 1 1 1 208 1 138 1 6 1 56 1 161 1 98 3 164 1 166 1 273 1 196 1 245 1 101 2 289 1 290 1 246 1 197 1 228 2 276 1 359 3 
299 1 48 1 1 1 2 1 26 1 208 1 138 1 6 1 56 1 161 1 98 3 164 1 166 1 273 1 196 1 101 3 289 1 290 1 246 1 197 1 228 1 317 1 276 1 359 3 
299 1 48 1 1 1 2 1 26 1 208 1 138 1 6 1 56 1 161 1 164 1 98 3 166 1 273 1 196 1 245 1 101 3 289 1 290 1 246 1 197 1 228 2 317 1 276 1 359 3 231 1 
182 1 278 1 48 1 184 1 1 1 2 5 133 1 138 1 6 1 56 1 238 1 60 1 98 5 284 2 245 4 196 1 101 6 288 1 289 1 290 1 246 1 197 1 296 2 156 2 299 1 342 1 26 4 208 1 262 1 161 1 164 3 166 1 350 2 273 1 82 2 228 7 317 5 41 1 276 1 357 1 229 1 231 4 359 5 126 1 
48 1 184 1 1 1 2 2 133 1 138 1 6 1 56 1 60 1 98 4 284 2 196 1 245 2 101 4 288 1 289 1 290 1 246 1 197 1 296 2 156 2 299 1 342 1 26 2 208 1 213 1 164 2 166 1 350 2 169 2 273 1 82 2 228 4 317 1 41 1 276 1 357 1 229 1 359 4 231 2 
296 2 182 1 156 2 299 1 48 1 184 1 2 1 1 1 342 1 133 1 26 2 208 1 138 1 6 1 262 1 56 1 238 1 60 1 164 2 98 4 166 1 350 2 284 2 245 2 273 1 196 1 101 4 288 1 289 1 290 1 246 1 197 1 82 2 317 1 228 4 41 1 276 1 357 1 229 1 231 2 359 4 
296 2 182 1 156 2 299 1 48 1 184 1 2 1 1 1 342 1 133 1 26 2 208 1 138 1 6 1 262 1 56 1 238 1 60 1 164 2 98 4 166 1 350 2 284 2 245 2 273 1 196 1 101 4 288 1 289 1 290 1 246 1 197 1 82 2 317 1 228 4 41 1 276 1 357 1 229 1 231 2 359 4 
156 2 299 1 48 1 184 1 2 1 1 1 342 1 90 1 133 1 26 2 208 1 138 1 328 1 6 1 262 1 56 1 74 1 60 1 164 2 98 4 166 1 169 2 245 2 273 1 196 1 101 4 288 1 289 1 118 2 290 1 246 1 197 1 82 2 294 2 317 1 228 4 276 1 357 1 229 1 231 2 359 4 
296 2 182 1 156 2 299 1 48 1 184 1 2 1 1 1 342 1 133 1 26 3 208 1 138 1 6 1 262 1 56 1 238 1 60 1 164 2 98 4 166 1 350 2 284 2 273 1 196 1 245 3 288 1 101 5 289 1 290 1 246 1 197 1 82 2 317 1 228 5 41 1 276 1 357 1 229 1 359 4 126 1 231 3 
296 2 182 1 156 2 299 1 48 1 184 1 2 1 1 1 342 1 133 1 26 3 208 1 138 1 6 1 262 1 56 1 238 1 60 1 164 2 98 4 166 1 350 2 284 2 273 1 196 1 245 3 288 1 101 5 289 1 290 1 246 1 197 1 82 2 317 1 228 5 41 1 276 1 357 1 229 1 359 4 126 1 231 3 
48 1 184 1 1 1 2 1 133 1 138 1 6 1 56 1 60 1 98 4 196 1 245 2 101 4 288 1 289 1 290 1 246 1 197 1 294 2 156 2 299 1 342 1 26 2 208 1 74 1 213 1 164 2 166 1 169 2 273 1 118 2 82 2 228 4 317 1 276 1 357 1 229 1 359 4 231 2 
85 1 232 1 0 1 131 1 323 1 24 1 325 3 258 2 279 1 261 3 92 1 57 1 214 1 332 2 9 1 243 1 352 1 63 1 333 2 117 6 68 1 119 1 247 1 249 1 199 1 320 2 
232 2 233 1 0 11 321 1 131 2 302 1 24 11 256 2 325 8 258 1 89 3 303 1 279 2 261 6 211 1 92 2 332 1 266 1 95 2 214 4 9 2 32 1 242 1 243 1 218 1 102 1 333 4 117 14 39 1 223 3 119 1 199 2 320 2 
87 1 131 1 253 1 302 1 325 1 258 1 137 1 279 1 235 1 209 1 261 1 92 1 56 2 214 1 9 1 62 1 269 1 32 1 115 1 286 1 285 1 150 1 333 2 102 1 290 2 38 1 117 2 246 1 224 1 198 1 40 1 119 1 153 1 337 1 318 1 199 1 319 1 251 1 
85 1 232 3 0 7 131 3 323 1 325 10 137 1 279 3 235 1 189 2 93 1 92 3 56 3 57 1 332 4 95 2 9 3 242 2 243 3 286 3 285 1 63 1 102 1 333 6 150 2 290 3 246 1 198 2 68 1 247 1 337 1 153 2 199 3 251 2 302 1 253 2 254 1 205 2 24 7 341 2 256 2 258 2 72 1 27 1 261 10 211 4 264 2 214 7 32 1 269 3 115 2 79 2 117 20 224 1 40 3 119 3 318 2 319 2 320 8 
19 1 200 1 322 1 131 2 252 2 253 2 254 1 185 1 325 1 137 1 279 2 235 1 261 1 92 2 56 1 281 1 9 2 165 1 269 7 32 1 35 1 116 1 352 1 286 8 285 2 333 4 102 1 290 1 117 2 246 1 198 2 40 8 119 2 337 1 153 3 199 2 295 1 17 1 251 2 
232 1 297 1 0 1 131 1 302 1 24 1 256 1 325 1 279 1 235 1 345 1 261 2 92 1 56 1 332 1 214 1 95 1 9 1 242 1 243 1 333 2 290 1 117 3 246 1 226 1 119 1 337 1 199 1 320 1 
232 1 267 1 9 1 0 1 131 1 24 1 352 1 325 2 333 2 117 2 279 1 119 1 211 1 92 1 199 1 320 1 214 1 95 1 
9 1 0 1 242 1 131 1 243 1 24 1 352 1 333 2 117 2 176 1 279 1 119 1 261 2 92 1 199 1 320 1 332 1 214 1 
232 1 0 2 131 1 24 2 256 1 325 2 279 1 261 2 92 1 211 1 95 1 214 2 332 1 9 1 242 1 243 1 352 1 333 2 117 4 119 1 199 1 320 2 
232 1 267 1 9 1 0 1 131 1 24 1 185 1 325 2 333 2 117 2 279 1 119 1 211 1 92 1 199 1 320 1 214 1 95 1 
9 1 0 1 242 1 131 1 243 1 24 1 185 1 333 2 117 2 176 1 279 1 119 1 261 2 92 1 199 1 320 1 332 1 214 1 
232 1 0 2 131 1 24 2 256 1 185 1 325 2 279 1 261 2 92 1 211 1 95 1 214 2 332 1 9 1 242 1 243 1 333 2 117 4 119 1 199 1 320 2 
232 1 0 2 131 1 24 2 256 1 325 2 279 1 261 2 92 1 211 1 95 1 214 2 332 1 9 1 242 1 243 1 333 2 117 4 119 1 199 1 320 2 
131 1 253 1 325 1 258 1 279 1 189 1 261 1 92 1 56 1 9 1 32 1 269 1 115 1 286 1 285 1 150 1 333 2 102 1 117 2 290 1 198 1 40 1 119 1 153 1 318 1 199 1 319 1 251 1 
131 1 253 1 325 1 258 1 53 1 279 1 261 1 346 1 92 1 56 1 9 1 32 1 269 1 115 1 286 1 285 1 333 2 102 1 353 1 117 2 290 1 198 1 40 1 119 1 153 1 318 1 199 1 251 1 
232 1 0 2 131 1 302 1 24 2 256 1 325 2 279 1 261 2 92 1 211 1 95 1 214 2 332 1 9 1 242 1 243 1 333 2 117 4 119 1 199 1 320 2 
232 1 0 2 131 1 253 1 24 2 341 1 256 1 325 2 279 1 261 2 189 1 211 1 92 1 56 1 332 1 214 2 95 1 9 1 269 1 242 1 115 1 35 1 243 1 286 1 150 1 333 2 117 4 290 1 198 1 40 1 119 1 153 1 318 1 199 1 320 2 319 1 251 1 
232 1 0 1 131 1 302 1 24 1 256 1 325 2 279 1 235 1 345 1 261 1 211 1 92 1 56 1 95 1 214 1 9 1 242 1 243 1 333 2 313 1 290 1 117 3 246 1 226 1 119 1 337 1 199 1 320 1 
232 3 233 1 46 1 321 1 131 2 108 1 256 3 325 9 89 1 261 10 55 1 280 1 92 2 211 3 112 1 332 3 95 3 9 2 310 1 192 2 242 3 99 2 243 3 333 4 117 19 223 2 83 1 199 2 320 6 43 1 
232 3 233 2 46 1 131 3 300 2 108 2 256 3 325 14 89 2 306 1 261 12 305 1 211 2 280 2 92 3 112 1 332 2 95 3 240 1 9 3 310 1 192 4 167 1 242 2 99 1 243 2 333 6 117 26 173 1 223 2 199 3 320 4 124 1 43 1 
85 1 232 5 233 3 46 1 321 1 131 3 300 1 108 2 323 1 256 4 325 20 89 3 306 1 305 1 261 21 280 1 92 3 211 4 57 1 112 1 332 4 95 4 240 1 9 3 310 1 167 1 192 4 242 4 99 1 243 5 63 1 333 6 173 1 117 41 223 4 68 1 83 1 247 1 199 3 320 8 124 1 181 1 43 1 
85 1 232 5 233 3 46 1 321 1 131 4 300 2 108 2 323 1 256 4 325 20 89 3 306 1 305 1 261 18 280 1 92 4 211 3 57 1 112 1 332 4 95 4 240 1 9 4 310 1 167 1 192 4 242 3 99 1 243 4 63 1 333 8 173 1 117 38 223 4 68 1 83 1 247 1 199 4 320 7 124 1 181 1 43 1 
85 1 232 8 233 2 46 1 321 2 131 2 300 1 108 1 323 1 256 7 325 27 89 4 303 2 306 1 305 1 261 25 280 1 92 2 211 7 57 1 112 1 332 7 95 7 240 1 9 2 310 1 167 1 192 4 242 7 99 1 243 8 63 1 333 4 173 1 117 52 223 4 68 1 247 1 199 2 320 14 124 1 43 1 
131 1 252 2 253 1 302 1 325 1 343 1 279 1 261 1 92 1 56 2 281 1 9 1 32 1 269 2 219 1 286 2 333 2 102 1 290 2 117 2 246 2 198 1 225 1 40 2 119 1 153 1 177 1 120 1 199 1 17 1 251 1 
269 2 35 1 143 1 253 1 351 1 195 1 254 1 286 2 221 1 222 2 151 1 174 1 291 1 198 1 40 2 248 1 123 1 347 1 230 1 
269 1 143 1 253 1 195 1 254 1 286 1 109 1 221 1 222 2 151 1 174 1 291 1 40 1 198 1 123 1 347 1 230 1 
200 1 269 1 203 1 116 1 253 1 195 1 285 1 286 1 198 1 40 1 316 1 153 1 248 1 251 1 
269 1 143 1 351 1 253 1 195 1 254 1 286 1 221 1 222 2 151 1 174 1 291 1 198 1 40 1 248 1 123 1 347 1 230 1 
152 1 
335 1 202 1 317 1 184 1 249 1 357 1 2 1 
296 1 184 1 2 2 342 1 133 1 164 1 98 1 284 1 350 1 169 1 288 1 228 1 317 1 41 1 357 1 229 1 359 1 
277 6 232 2 45 2 47 2 88 2 50 6 184 8 2 8 133 4 236 1 8 2 95 2 96 2 98 5 283 1 242 2 284 6 243 2 285 1 286 3 288 4 335 1 198 4 197 2 153 10 15 1 16 3 251 3 155 2 202 1 157 2 253 3 256 2 342 4 207 2 111 1 304 2 164 3 269 3 76 2 34 1 115 3 35 1 169 12 79 2 272 1 40 3 275 2 317 2 228 5 121 1 357 9 229 4 359 5 
277 5 232 2 233 1 47 1 50 5 184 5 2 5 256 2 342 2 133 2 89 1 304 2 305 1 95 2 240 1 98 1 164 1 76 1 167 1 242 2 284 3 243 2 169 6 288 2 173 1 223 1 228 1 317 2 69 1 15 1 357 8 229 2 105 1 124 1 359 1 
85 1 232 2 182 1 183 1 301 1 184 2 1 1 342 1 133 1 235 1 304 2 56 1 57 1 98 1 75 1 76 1 217 1 243 1 63 1 170 1 288 1 290 1 246 1 226 1 337 1 357 2 229 1 359 1 
202 1 184 1 2 1 342 1 288 1 133 1 335 1 317 1 357 1 229 1 
232 2 277 5 76 1 242 2 284 5 243 2 169 10 79 1 184 5 50 5 256 2 2 5 304 2 357 5 95 2 
98 1 164 1 317 1 228 1 2 1 359 1 
200 1 47 2 253 1 184 2 186 1 342 2 133 1 111 2 52 1 141 1 216 1 164 2 98 3 269 4 34 1 193 1 116 1 286 4 285 2 288 2 198 1 40 4 153 1 228 4 15 2 357 2 229 2 251 1 359 3 
131 1 253 1 258 1 279 1 235 2 261 1 189 1 92 1 190 1 56 3 9 1 269 1 217 1 115 1 286 1 285 1 102 1 333 2 150 1 117 1 290 3 246 2 40 1 198 1 226 2 119 1 337 2 153 1 318 1 199 1 319 1 251 1 
277 2 47 1 284 2 169 4 50 2 184 2 2 4 342 1 288 1 133 1 247 1 317 2 15 1 357 1 229 1 
66 1 77 1 340 1 
13 1 44 1 14 1 77 1 340 1 
66 1 77 1 340 1 
66 1 77 1 340 1 
77 1 340 1 358 1 
77 1 340 1 358 1 
77 1 340 1 358 1 
77 1 340 1 
81 1 67 1 
232 1 85 1 9 2 131 2 243 1 300 1 323 1 325 4 63 1 333 4 117 8 68 1 247 1 261 4 211 1 92 2 57 1 199 2 320 3 332 2 
117 6 232 1 85 1 68 1 247 1 261 3 243 1 57 1 323 1 249 1 325 3 320 2 63 1 332 2 
232 1 9 1 242 1 131 1 243 1 324 1 256 1 325 2 333 2 117 4 261 2 92 1 211 1 199 1 320 2 332 1 95 1 
232 1 233 1 242 1 321 1 243 1 256 1 325 3 89 1 117 7 223 2 261 4 211 1 320 2 332 1 95 1 
85 2 232 3 321 1 131 2 300 2 323 1 256 2 325 11 89 2 303 1 261 12 211 4 92 2 57 1 95 2 266 1 332 5 9 2 242 2 243 3 63 2 333 4 117 23 312 1 223 2 68 1 247 1 199 2 320 9 
117 1 223 1 261 1 
117 1 325 1 89 1 
232 1 9 1 242 1 131 1 243 1 79 1 324 1 256 1 325 3 333 2 117 6 261 3 92 1 211 1 199 1 320 3 95 1 332 2 
232 2 233 1 131 1 256 2 325 6 89 1 261 6 305 1 211 1 92 1 112 1 95 2 332 1 240 1 9 1 167 1 242 2 243 2 333 2 117 12 173 1 223 1 199 1 320 2 124 1 
85 1 117 6 232 1 261 3 211 1 243 1 57 1 320 2 63 1 325 3 332 1 
85 1 9 1 131 1 300 1 323 1 325 1 63 1 333 2 312 1 117 3 68 1 261 2 211 1 92 1 199 1 320 2 332 1 
85 2 232 2 9 1 131 1 243 2 170 1 63 2 325 5 333 2 117 10 261 5 92 1 211 2 57 1 199 1 112 1 320 5 332 3 
232 1 9 1 131 1 325 2 333 2 117 2 92 1 211 1 199 1 112 1 320 1 95 1 
232 1 9 1 242 1 131 1 243 1 256 1 325 2 333 2 117 4 261 2 92 1 211 1 199 1 112 1 320 2 332 1 95 1 
85 1 9 3 131 3 300 1 63 1 325 1 333 6 312 1 117 3 83 1 261 2 92 3 211 1 199 3 112 1 320 2 332 1 
85 3 232 5 86 1 233 1 321 1 131 5 300 2 323 1 324 1 256 3 325 16 89 3 261 18 92 5 211 5 57 2 112 1 95 3 332 7 9 5 242 3 243 5 271 1 63 3 333 10 312 1 117 34 223 4 336 1 68 1 247 1 83 1 199 5 320 12 
232 1 85 1 233 1 131 1 323 1 325 4 89 1 261 4 92 1 57 1 112 1 332 2 9 1 243 1 63 1 333 2 117 8 173 1 223 1 68 1 247 1 199 1 320 2 
85 1 232 2 233 1 321 1 131 2 323 1 324 1 256 1 325 6 89 1 261 5 92 2 211 1 57 1 112 1 332 2 95 1 9 2 243 1 63 1 333 4 117 11 173 1 223 2 68 1 247 1 199 2 320 3 
85 1 232 3 233 1 131 3 300 1 323 1 324 1 256 2 325 9 89 1 261 10 305 1 211 1 92 3 57 1 112 1 95 2 332 3 240 1 9 3 167 1 242 2 243 3 63 1 333 6 117 19 173 1 223 1 68 1 247 1 199 3 320 4 124 1 
85 1 232 3 233 1 131 3 300 1 323 1 324 1 256 2 325 10 89 1 261 7 305 1 211 2 92 3 57 1 112 1 95 2 332 3 240 1 9 3 167 1 242 1 243 2 63 1 333 6 117 17 173 1 223 1 68 1 247 1 199 3 320 5 124 1 
232 1 85 1 233 1 131 1 323 1 325 4 89 1 261 4 92 1 57 1 112 1 332 2 9 1 243 1 63 1 333 2 117 8 173 1 223 1 68 1 247 1 199 1 320 2 
232 2 233 1 131 1 256 2 325 6 89 1 261 6 305 1 211 1 92 1 112 1 95 2 332 1 240 1 9 1 167 1 242 2 243 2 333 2 117 12 173 1 223 1 199 1 320 2 124 1 
85 1 232 3 233 1 131 4 300 2 323 1 324 1 256 2 325 10 89 1 261 8 305 1 211 2 92 4 57 1 112 1 95 2 332 3 240 1 9 4 167 1 242 1 243 2 63 1 333 8 117 18 173 1 223 1 68 1 247 1 199 4 320 5 124 1 
232 3 233 1 131 4 300 2 256 3 325 9 89 1 261 7 305 1 211 3 92 4 112 1 95 3 332 3 240 1 9 4 167 1 242 2 243 2 333 8 117 16 173 1 223 1 83 1 199 4 320 6 124 1 
85 3 232 1 243 1 323 2 63 3 325 3 117 7 68 1 261 4 211 3 57 1 320 6 332 3 
85 1 232 3 233 1 131 4 300 2 323 1 256 2 325 10 89 1 261 8 305 1 211 1 92 4 57 1 112 1 95 2 332 3 240 1 9 4 167 1 242 1 243 2 63 1 333 8 117 18 173 1 223 1 68 1 247 1 83 1 199 4 320 4 124 1 
290 1 246 1 142 1 56 1 276 1 258 1 64 1 
128 1 142 1 187 1 258 1 64 1 290 1 246 1 56 1 154 1 276 1 180 1 239 1 
198 1 200 1 40 1 269 1 153 1 116 1 253 1 249 1 286 1 285 1 251 1 
269 1 115 1 253 1 285 1 286 1 258 1 150 1 290 2 137 1 246 1 198 1 40 1 235 1 153 1 337 1 318 1 56 2 251 1 
45 1 253 1 48 1 1 1 258 1 137 1 111 1 235 2 56 2 96 1 269 1 115 2 286 1 196 1 150 1 290 2 246 2 40 1 198 1 337 1 153 3 318 1 251 2 
45 1 269 2 115 2 48 1 253 1 286 2 1 1 196 1 258 1 290 2 137 1 246 2 198 1 111 1 40 2 344 1 235 2 153 3 337 1 318 1 346 1 56 2 96 1 251 2 
98 2 45 1 269 3 115 1 253 1 285 1 286 3 206 1 2 1 197 1 198 1 111 1 40 3 344 1 227 1 317 1 153 4 228 1 16 1 8 1 251 1 96 1 359 2 
98 2 45 1 269 3 115 1 253 1 285 1 286 3 2 1 207 1 197 1 198 1 111 1 40 3 344 1 317 1 153 4 228 1 16 1 8 1 251 1 96 1 359 2 
198 1 40 1 269 1 165 1 253 1 286 1 
269 1 115 1 253 1 145 1 285 1 286 1 146 1 334 1 40 1 198 2 153 1 236 1 251 1 
85 1 232 1 0 1 131 2 323 1 325 3 137 1 279 2 235 1 189 1 92 2 56 2 57 1 332 2 9 2 243 1 286 1 63 1 150 1 333 4 290 2 246 1 198 1 68 1 337 1 153 1 247 1 199 2 251 1 302 1 253 1 205 1 24 1 341 1 258 2 261 3 214 1 269 1 115 1 35 1 117 6 40 1 119 2 177 1 318 1 319 1 320 2 
202 1 88 1 157 1 184 1 2 1 255 1 342 2 133 2 207 1 8 1 98 3 164 1 269 1 34 1 286 1 285 1 288 2 335 1 40 1 197 1 275 1 317 1 153 2 228 2 16 1 357 1 229 2 359 3 
165 1 269 2 283 1 115 1 35 1 253 1 286 2 40 2 198 2 153 2 236 1 8 1 251 1 
200 1 269 4 35 1 116 1 253 1 285 1 286 4 158 1 198 1 40 4 344 1 153 1 251 1 
269 1 115 1 253 1 145 1 286 1 147 1 334 1 40 1 198 2 153 1 93 1 265 1 251 1 
198 1 40 1 269 1 143 1 253 1 286 1 285 1 230 1 222 1 151 1 
269 2 35 1 253 1 286 2 254 1 40 2 225 1 198 1 153 1 281 1 251 1 
200 1 19 1 269 4 322 1 35 1 116 1 253 2 285 1 286 5 158 1 111 1 40 5 198 2 153 3 281 1 251 2 
200 1 269 4 322 1 35 1 116 1 253 2 285 1 286 5 12 1 158 1 111 1 40 5 198 2 153 3 281 1 251 2 
269 1 115 1 253 1 285 1 286 1 258 1 290 2 137 1 246 1 198 1 40 1 235 1 153 1 337 1 318 1 346 1 56 2 251 1 
269 1 115 1 253 1 145 1 286 1 146 1 334 1 111 1 40 1 198 2 153 1 236 1 251 1 
282 1 91 1 42 1 7 1 258 1 
114 1 282 1 98 2 106 1 48 1 2 1 1 1 196 1 255 1 273 1 258 1 36 1 175 1 197 1 91 2 317 1 42 2 7 2 359 2 
282 1 219 1 343 1 290 1 246 1 91 1 120 1 56 1 7 1 
175 1 106 1 282 1 
293 1 140 1 355 1 249 1 
293 1 329 1 140 1 355 1 212 1 234 1 65 1 
309 1 212 1 23 1 
110 2 327 1 293 1 329 1 140 1 355 1 212 3 78 1 234 1 307 1 274 1 65 3 
293 1 329 1 140 1 210 1 355 1 212 2 234 1 80 1 65 2 
31 1 21 1 234 1 65 1 222 1 174 1 327 1 293 1 329 1 212 1 230 1 
327 1 293 1 329 1 140 1 212 1 234 1 65 1 
327 1 329 1 140 2 355 1 212 1 234 1 65 1 
215 1 129 1 234 2 11 1 65 2 327 1 293 1 329 2 140 1 212 2 
21 1 234 1 65 3 134 1 37 1 327 1 293 2 329 1 140 1 210 2 355 1 212 3 94 1 
298 1 234 1 151 1 222 2 65 2 174 1 327 1 293 1 329 1 140 1 210 1 355 1 212 2 123 1 230 1 
21 1 234 2 194 1 80 1 65 4 327 1 293 2 329 2 140 1 210 2 355 1 212 4 94 1 
327 1 293 1 329 1 140 1 355 1 212 1 234 1 65 1 
21 1 78 1 234 1 65 4 110 1 293 3 329 1 140 2 210 2 355 2 212 4 94 1 307 1 331 1 
234 1 257 1 65 2 327 1 354 1 293 1 329 1 140 1 260 1 210 1 212 2 355 1 
78 1 234 1 3 1 65 3 327 1 110 2 293 1 329 1 140 1 212 3 355 1 307 2 
293 2 51 1 250 1 103 2 
97 1 327 1 329 1 212 1 234 1 65 1 
327 1 293 1 329 1 140 1 210 1 355 1 212 2 234 1 37 1 65 2 
308 1 
327 1 293 1 329 1 140 1 355 1 212 1 234 1 65 1 
234 1 65 3 37 1 327 1 110 1 293 1 329 1 210 1 140 1 212 3 355 1 
293 1 21 1 94 1 331 1 
293 1 140 1 

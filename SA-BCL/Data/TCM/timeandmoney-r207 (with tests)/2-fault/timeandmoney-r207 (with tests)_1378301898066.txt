#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
342 1 209 1 354 1 181 1 93 1 358 2 145 1 159 2 28 1 276 3 96 1 99 2 57 3 
263 2 24 1 342 6 25 1 311 1 71 2 93 3 197 1 145 4 28 2 96 1 318 2 99 5 57 9 78 1 176 1 209 1 354 1 181 1 236 1 358 2 159 2 276 9 380 1 16 1 20 2 305 1 166 1 
263 2 24 1 342 6 25 1 311 1 71 2 93 3 197 1 145 4 28 2 96 1 318 2 99 5 57 9 78 1 176 1 209 1 354 1 181 1 236 1 358 2 159 2 276 9 380 1 16 1 20 2 305 1 166 1 
263 2 24 1 342 7 25 1 311 1 71 2 93 4 197 1 145 5 28 2 96 1 318 2 99 6 57 10 78 1 176 1 209 1 354 1 181 1 236 1 358 2 159 2 276 10 380 1 16 1 20 2 305 1 166 1 
263 2 24 1 342 4 25 1 311 1 71 2 93 2 197 1 145 3 28 2 96 1 318 1 99 4 57 7 78 1 176 1 209 1 354 1 181 1 236 1 358 2 159 2 276 7 16 1 20 2 305 1 166 1 
263 1 342 3 209 1 354 1 181 1 71 1 93 1 197 1 358 1 145 2 159 1 276 4 380 1 318 2 99 3 20 1 57 4 166 1 
116 1 263 1 67 1 24 1 209 1 354 1 181 1 71 1 358 1 159 1 146 1 28 1 276 2 99 1 16 1 57 2 
0 1 263 1 342 7 311 1 71 1 93 3 197 1 145 4 28 1 96 1 98 1 318 2 99 5 57 9 176 1 209 1 354 1 181 1 358 2 159 2 276 9 380 1 20 1 166 1 
0 1 263 1 342 7 311 1 71 1 93 3 197 1 145 4 28 1 96 1 98 1 318 2 99 5 57 9 176 1 209 1 354 1 181 1 358 2 159 2 276 9 380 1 20 1 166 1 
252 1 117 1 34 1 68 1 47 1 2 1 365 1 289 1 147 1 198 1 56 1 6 1 32 1 273 1 
13 1 
130 1 205 1 198 2 117 1 13 1 244 1 68 2 30 1 
130 2 205 1 320 1 117 2 68 5 208 2 26 1 375 1 323 1 144 1 378 2 198 5 136 1 13 1 360 1 40 1 30 1 7 2 381 1 
205 1 13 1 218 1 
13 1 278 1 51 2 
252 2 34 2 47 2 2 2 365 2 32 2 288 1 273 1 
44 1 119 1 47 2 223 2 283 2 49 1 1 1 247 1 2 2 284 1 265 1 365 2 170 1 288 1 295 1 346 2 8 1 154 1 32 3 273 1 204 1 252 3 373 1 234 1 34 2 254 1 256 1 237 2 261 2 328 1 41 1 302 1 279 1 280 1 142 1 21 1 338 1 
252 1 147 1 34 1 47 1 56 1 6 1 2 1 365 1 32 1 273 1 
252 1 205 1 352 1 68 1 322 1 105 1 365 1 198 1 13 1 185 1 56 1 281 1 32 1 89 1 
252 1 205 1 352 1 34 1 68 2 47 1 2 1 322 1 365 1 198 2 13 1 56 1 281 1 32 1 89 1 
130 1 198 1 117 1 68 1 333 1 
130 1 205 1 198 2 117 1 13 1 68 2 30 1 268 1 
130 1 198 1 68 1 
204 1 44 1 252 2 373 1 34 1 264 1 47 1 223 1 283 1 49 1 254 1 365 1 240 1 328 1 369 1 302 1 346 1 280 1 154 1 32 2 
252 2 34 1 47 1 2 1 286 1 365 2 288 2 260 1 32 2 
369 1 163 1 257 1 
252 1 204 1 44 1 373 1 223 1 283 1 49 1 254 1 288 1 328 1 302 1 77 1 346 1 280 1 154 1 32 1 
218 1 288 1 
252 5 34 4 264 1 80 1 47 4 2 1 365 5 183 1 288 1 240 2 260 1 160 1 185 1 32 5 
252 2 147 1 125 1 34 2 47 2 56 1 365 2 32 2 
240 1 252 3 34 3 47 3 2 1 365 3 32 3 288 1 
252 1 147 1 34 1 47 1 56 1 365 1 32 1 
252 1 260 1 34 1 47 1 56 1 2 1 286 1 365 1 32 1 
44 1 264 1 119 1 47 3 68 1 223 1 49 1 283 1 247 1 2 2 265 1 365 3 366 1 288 1 198 1 56 1 295 1 346 1 8 1 154 1 32 4 273 1 204 1 252 4 373 1 352 1 234 1 34 3 254 1 322 1 256 1 237 1 260 1 240 1 83 1 261 2 328 1 41 1 302 1 279 1 280 1 281 1 89 1 338 1 
252 2 240 1 185 1 34 1 80 1 47 1 365 2 32 2 288 1 
252 3 352 1 34 3 264 1 68 1 47 3 2 1 322 1 365 3 366 1 260 1 240 2 198 1 13 1 126 1 56 1 281 1 32 3 89 1 
252 2 34 2 47 2 2 1 257 1 365 2 240 1 260 1 369 1 32 2 
252 1 44 1 204 1 373 1 223 1 283 1 49 1 254 1 288 1 328 1 302 1 346 1 280 1 154 1 32 1 
252 1 44 1 204 1 373 1 223 1 283 1 254 1 274 1 288 1 215 1 328 1 302 1 346 1 280 1 32 1 
193 1 119 1 247 2 265 1 345 1 170 2 369 2 317 1 153 1 234 1 256 1 257 2 237 4 324 1 258 1 325 1 261 2 161 1 329 1 41 1 163 2 87 1 279 1 189 1 
252 1 125 1 34 1 47 1 56 1 322 1 365 1 32 1 
316 1 94 1 377 1 
206 1 182 1 94 2 270 1 221 1 377 2 
94 1 377 1 
94 1 377 1 
206 1 270 1 
206 1 270 1 
206 1 270 1 
94 1 300 1 377 1 
94 1 300 1 377 1 
94 1 300 1 377 1 
332 1 94 1 377 1 
332 1 94 1 377 1 
332 1 94 1 377 1 
222 1 47 2 68 1 48 1 94 1 365 2 288 1 287 1 314 1 198 1 316 1 75 1 175 1 32 2 372 1 252 2 34 2 35 1 211 1 356 1 238 1 377 1 379 1 362 1 
372 2 131 1 68 2 35 3 182 1 94 2 356 2 238 1 377 2 85 1 198 2 13 1 97 1 292 1 75 2 370 1 175 2 336 2 115 1 
116 1 95 1 343 2 71 2 20 1 
263 1 71 1 20 1 
116 1 263 1 71 1 
116 1 95 1 29 1 343 1 71 3 20 2 
116 1 95 1 69 1 343 1 71 2 20 1 
307 1 117 4 340 1 193 1 68 5 26 2 51 3 92 2 345 1 287 1 198 5 123 1 127 1 30 1 7 1 201 1 153 1 130 1 205 1 208 1 374 2 323 1 210 1 211 1 82 2 214 1 378 1 13 2 136 3 379 1 278 1 87 1 
117 7 340 2 193 3 68 9 120 1 26 6 51 9 345 3 4 1 144 1 287 4 198 9 127 1 171 1 30 1 7 2 153 3 130 6 205 1 208 2 374 6 64 1 355 1 323 1 210 3 82 6 239 5 214 2 378 2 13 5 136 8 278 3 87 3 188 1 333 5 
117 2 340 1 193 1 68 3 26 2 51 4 92 1 345 1 144 1 287 1 123 1 198 3 7 1 201 1 153 1 205 1 208 1 374 2 210 1 82 2 214 1 378 1 13 3 136 3 278 2 87 1 
340 1 117 3 193 2 68 4 26 4 51 7 92 2 345 2 4 1 144 1 287 2 198 4 123 1 7 1 201 1 153 2 205 1 208 1 374 4 64 1 210 2 82 4 214 1 378 1 13 4 136 5 278 3 87 2 188 1 
72 1 
204 1 186 1 218 1 
204 1 23 1 
204 1 373 1 302 1 
204 1 195 1 
204 1 373 1 
204 3 373 1 186 2 301 1 302 1 180 1 
194 1 245 1 247 3 324 3 170 4 237 7 258 2 227 1 135 1 290 1 128 1 138 2 87 1 153 1 335 1 272 1 319 1 43 1 
45 1 193 3 194 1 119 1 245 5 247 18 246 1 265 1 345 3 196 1 169 1 170 19 227 2 5 4 150 1 128 5 174 1 153 6 319 1 203 3 272 2 234 1 298 1 210 3 237 37 324 17 258 8 135 1 261 2 41 1 138 2 187 1 87 6 335 9 43 2 
234 2 194 1 119 2 245 1 298 1 247 4 265 2 324 4 170 5 237 9 258 3 184 1 227 1 135 1 261 4 55 1 41 2 128 1 138 2 87 1 153 1 335 1 272 1 43 1 
194 1 245 1 247 3 324 3 170 4 237 7 258 2 227 1 135 1 128 1 138 2 87 1 153 1 335 1 272 1 319 1 43 1 
194 1 245 1 247 3 324 3 170 4 237 7 258 2 227 1 135 1 128 1 138 2 87 1 153 1 335 1 272 1 319 1 43 1 
339 2 223 1 91 1 283 1 344 1 266 2 28 2 346 1 229 2 57 1 204 1 373 1 103 1 62 1 254 1 358 1 159 1 328 1 276 1 14 1 280 1 19 1 243 1 
116 1 339 1 263 1 223 1 354 1 283 1 254 1 71 2 312 1 266 1 358 1 159 1 315 1 28 1 328 1 276 1 327 1 29 1 346 1 65 1 229 1 20 1 57 1 269 1 251 1 220 1 
116 1 339 1 263 1 342 1 223 1 283 1 71 2 312 1 266 1 248 1 28 1 315 1 29 1 346 1 99 1 229 1 57 2 251 1 269 1 209 1 354 1 181 1 254 1 358 1 159 1 276 2 328 1 65 1 20 1 220 1 
116 1 339 1 263 1 223 1 342 2 283 1 71 2 312 1 266 1 28 1 315 1 29 1 346 1 99 1 229 1 57 3 251 1 269 1 103 1 209 1 181 1 254 1 157 1 358 1 159 1 327 1 276 3 328 1 65 1 20 1 
116 1 339 1 263 1 223 1 342 2 283 1 71 2 266 1 28 1 315 1 29 1 346 1 99 1 229 1 57 2 251 1 269 1 209 1 181 1 254 1 157 1 327 1 276 2 328 1 20 1 
250 1 
191 1 91 1 283 2 51 2 50 1 53 2 198 5 56 1 200 1 346 2 7 1 204 1 252 1 205 1 352 1 208 1 155 1 254 1 255 1 105 1 357 1 214 1 158 1 107 1 13 2 361 2 14 1 112 2 114 2 306 1 308 2 22 2 68 5 223 2 26 2 365 1 122 2 124 4 30 3 32 1 130 6 373 1 178 1 322 1 323 1 378 1 136 2 185 1 328 1 241 1 278 2 277 1 280 2 281 1 89 1 
306 1 252 1 130 2 352 1 244 1 68 3 155 1 322 1 255 1 105 1 365 1 53 1 158 1 107 1 124 2 198 3 185 1 56 1 30 1 281 1 89 1 32 1 
306 1 252 1 130 1 205 1 352 1 244 1 68 3 155 1 322 1 255 1 105 1 365 1 158 1 107 1 124 3 198 3 13 1 185 1 56 1 30 1 114 1 281 1 89 1 32 1 
306 1 244 1 68 3 365 1 53 1 122 1 198 3 124 3 56 1 30 1 32 1 252 1 130 2 352 1 205 1 155 1 255 1 322 1 105 1 158 1 107 1 185 1 13 1 281 1 114 1 89 1 
191 1 244 1 53 4 198 5 291 1 56 1 294 1 7 1 152 1 252 1 352 1 205 5 208 1 155 1 255 1 105 1 158 1 107 1 13 5 303 1 361 2 112 2 114 4 306 1 308 2 22 2 68 5 26 1 365 1 168 1 122 4 124 6 30 3 32 1 130 7 322 1 323 1 378 1 185 1 136 1 277 1 278 2 281 1 89 1 
306 1 308 2 191 1 22 2 68 4 26 1 51 2 365 1 53 2 122 2 198 4 124 4 56 1 30 2 7 1 32 1 252 1 130 4 205 1 352 1 208 1 178 1 155 1 255 1 322 1 105 1 323 1 158 1 107 1 378 1 13 2 136 1 185 1 361 2 278 2 277 1 112 2 114 2 281 1 89 1 
306 1 308 2 191 1 22 2 68 4 26 1 365 1 53 2 122 2 198 4 124 4 56 1 294 1 30 2 152 1 7 1 32 1 252 1 130 4 205 1 352 1 208 1 155 1 255 1 322 1 105 1 323 1 158 1 107 1 378 1 13 1 136 1 185 1 361 2 303 1 278 2 277 1 112 2 114 2 281 1 89 1 
306 1 308 2 191 1 22 2 68 4 26 1 365 1 53 2 122 2 198 4 124 4 56 1 294 1 30 2 152 1 7 1 32 1 252 1 130 4 205 1 352 1 208 1 155 1 255 1 322 1 105 1 323 1 158 1 107 1 378 1 13 1 136 1 185 1 361 2 303 1 278 2 277 1 112 2 114 2 281 1 89 1 
306 1 308 2 68 4 26 1 167 1 51 2 365 1 53 2 122 2 198 4 124 4 56 1 30 2 152 1 7 1 32 1 252 1 130 4 205 1 352 1 102 2 353 1 208 1 155 1 255 1 322 1 105 1 323 1 158 1 107 1 378 1 13 1 136 1 185 1 109 2 361 2 277 1 114 2 281 1 190 1 89 1 
306 1 308 2 191 1 22 2 68 4 26 1 365 1 168 1 53 3 122 3 198 4 124 5 56 1 294 1 30 2 152 1 7 1 32 1 252 1 130 5 205 1 352 1 208 1 155 1 255 1 322 1 323 1 105 1 158 1 378 1 107 1 13 1 136 1 185 1 361 2 303 1 278 2 277 1 112 2 281 1 114 3 89 1 
306 1 308 2 191 1 22 2 68 4 26 1 365 1 168 1 53 3 122 3 198 4 124 5 56 1 294 1 30 2 152 1 7 1 32 1 252 1 130 5 205 1 352 1 208 1 155 1 255 1 322 1 323 1 105 1 158 1 378 1 107 1 13 1 136 1 185 1 361 2 303 1 278 2 277 1 112 2 281 1 114 3 89 1 
51 2 53 2 198 4 56 1 7 1 252 1 352 1 205 1 102 2 208 1 155 1 255 1 105 1 158 1 107 1 13 1 109 2 361 2 114 2 306 1 308 2 68 4 167 1 26 1 365 1 122 2 124 4 30 2 32 1 130 4 178 1 322 1 323 1 378 1 185 1 136 1 277 1 281 1 89 1 
282 1 47 1 223 8 119 2 91 1 283 8 1 1 247 1 3 1 265 2 365 1 248 1 170 1 346 7 295 1 231 1 32 1 252 1 204 3 9 1 373 2 34 1 234 2 254 2 256 2 237 2 240 1 325 1 86 1 261 4 327 1 328 2 41 2 14 1 111 1 279 2 164 1 280 2 21 2 
193 1 119 1 47 1 2 1 247 2 265 1 52 1 365 1 345 1 170 1 369 1 153 1 32 1 252 1 34 1 234 1 256 1 257 1 210 1 324 1 237 3 258 1 260 1 261 2 41 1 163 1 279 1 87 1 165 1 
194 1 119 1 245 1 247 3 265 1 170 3 288 2 227 1 369 1 128 1 153 1 234 1 256 1 257 1 324 2 237 6 258 2 325 1 135 1 261 2 41 1 138 1 218 1 163 1 279 1 87 1 
45 1 193 2 119 2 1 1 247 6 70 1 265 2 52 1 345 1 170 8 288 1 5 3 369 11 267 1 295 1 371 1 153 2 203 3 234 2 321 1 256 2 210 2 257 4 324 2 237 14 258 1 261 4 41 2 187 1 163 11 279 1 87 1 335 1 
44 1 264 1 223 1 119 1 47 1 49 1 283 1 1 1 247 1 265 1 52 1 365 1 170 1 288 1 346 1 77 1 295 1 154 1 32 2 204 1 252 2 373 1 10 1 34 1 234 1 254 1 256 1 257 1 237 2 37 1 240 1 261 2 328 1 162 1 41 1 302 1 279 1 280 1 
44 2 193 2 194 1 47 1 245 1 283 3 49 2 1 1 247 10 52 1 345 2 288 2 295 1 346 3 8 2 153 3 154 2 297 1 252 3 204 2 254 2 256 3 257 7 210 2 299 1 258 4 261 6 302 2 304 2 163 7 264 1 223 3 119 3 265 3 365 1 170 10 227 1 128 1 369 7 230 1 32 3 373 2 234 3 34 1 235 2 237 20 324 8 240 1 84 2 135 1 327 1 328 2 41 3 138 1 242 2 87 3 279 3 280 1 335 4 
234 1 193 1 119 1 256 1 265 1 257 1 324 1 237 2 170 2 325 1 261 2 161 1 41 1 369 1 163 1 279 1 153 1 335 1 
234 1 119 1 247 2 256 1 265 1 257 1 345 1 324 1 237 2 258 1 325 1 261 2 329 1 41 1 369 1 163 1 279 1 87 1 
234 1 193 1 119 1 247 2 256 1 265 1 345 1 257 2 210 1 324 2 237 4 170 2 258 1 325 1 261 2 41 1 369 2 163 2 87 1 279 1 153 1 335 1 
234 1 193 1 119 1 256 1 265 1 257 1 324 1 237 2 170 2 261 2 161 1 41 1 369 1 111 1 163 1 279 1 153 1 335 1 
234 1 119 1 247 2 256 1 265 1 257 1 345 1 324 1 237 2 258 1 261 2 329 1 41 1 369 1 111 1 163 1 279 1 87 1 
234 1 193 1 119 1 247 2 256 1 265 1 345 1 257 2 210 1 324 2 237 4 170 2 258 1 261 2 41 1 369 2 111 1 163 2 87 1 279 1 153 1 335 1 
234 1 193 1 119 1 247 2 256 1 265 1 345 1 257 2 210 1 324 2 170 2 237 4 258 1 261 2 41 1 369 2 163 2 87 1 279 1 153 1 335 1 
44 1 223 1 119 1 49 1 283 1 1 1 247 1 265 1 170 1 288 1 346 1 295 1 8 1 154 1 32 1 204 1 252 1 373 1 234 1 254 1 256 1 237 2 261 2 328 1 41 1 302 1 279 1 280 1 
44 1 223 1 119 1 283 1 1 1 247 1 265 1 170 1 288 1 346 1 295 1 32 1 204 1 252 1 373 1 234 1 81 1 254 1 274 1 256 1 237 2 261 2 328 1 215 1 41 1 302 1 279 1 280 1 
234 1 193 1 119 1 247 2 256 1 265 1 345 1 257 2 52 1 210 1 324 2 237 4 170 2 258 1 261 2 41 1 369 2 163 2 87 1 279 1 153 1 335 1 
44 1 193 1 223 1 119 1 49 1 283 1 247 2 265 1 345 1 170 2 248 1 369 2 346 1 8 1 153 1 154 1 32 1 204 1 252 1 373 1 234 1 254 1 256 1 257 2 210 1 324 2 237 4 258 1 261 2 328 1 41 1 302 1 163 2 242 1 87 1 279 1 335 1 
193 1 119 1 47 1 247 1 2 1 265 1 345 1 52 1 365 1 170 2 369 1 153 1 32 1 252 1 34 1 234 1 256 1 210 1 257 1 324 1 237 3 260 1 261 2 216 1 41 1 163 1 87 1 279 1 335 1 
193 4 45 1 194 1 245 1 247 21 285 1 345 4 5 4 149 2 199 1 153 5 296 1 203 3 207 1 61 1 298 1 210 4 258 4 261 6 18 4 219 1 309 1 119 3 224 1 265 3 170 20 227 1 128 1 79 1 271 1 177 1 234 3 324 8 237 41 184 1 135 1 41 3 330 1 138 1 187 3 87 5 88 1 335 4 
309 1 45 1 193 4 194 1 119 4 245 1 224 1 247 18 285 1 265 4 345 3 170 20 227 1 5 4 149 2 199 1 128 1 153 5 296 1 271 1 79 1 203 3 177 1 234 4 61 1 207 1 298 2 210 4 237 38 324 7 258 4 184 1 135 1 261 8 330 1 41 4 138 1 187 3 88 1 18 4 87 4 219 1 335 3 
309 1 45 2 193 7 194 1 119 2 245 1 224 1 247 25 285 1 265 2 345 7 170 27 227 1 5 4 149 1 199 1 128 1 371 2 153 8 296 1 79 1 203 4 234 2 61 1 207 1 298 1 210 7 237 52 324 14 258 7 184 1 135 1 261 4 330 1 41 2 138 1 187 2 88 1 18 4 87 8 219 1 335 7 
45 1 193 3 119 2 247 10 285 1 265 2 345 3 170 9 74 1 5 2 149 1 153 3 296 1 79 2 203 1 177 1 234 2 210 3 237 19 324 6 258 3 184 1 261 4 330 1 41 2 187 1 18 2 87 3 219 1 335 3 
309 1 193 3 119 3 224 1 247 12 285 1 265 3 345 2 170 14 5 2 149 2 199 1 153 3 296 1 79 1 203 2 234 3 207 1 61 1 298 2 210 3 324 4 237 26 258 2 184 1 261 6 330 2 41 3 187 2 87 2 18 4 88 1 219 1 335 2 
372 1 132 1 292 1 75 1 182 1 94 1 175 1 115 1 356 1 377 1 
316 1 362 1 
372 1 262 1 75 1 347 1 12 1 94 1 175 1 356 1 377 1 
134 1 300 1 
332 1 11 1 221 1 
372 1 131 1 68 1 35 2 182 1 94 1 238 1 356 1 377 1 85 1 198 1 13 1 292 1 75 1 370 1 175 1 336 1 115 1 
372 1 131 1 68 1 35 2 182 1 94 1 238 1 356 1 377 1 85 1 198 1 13 1 292 1 75 1 370 1 175 1 336 1 115 1 
372 1 131 1 68 1 35 2 182 1 94 1 238 1 356 1 377 1 85 1 198 1 13 1 292 1 75 1 370 1 175 1 336 1 115 1 
134 1 221 1 300 1 
134 1 221 1 300 1 
332 1 11 1 
332 1 11 1 221 1 
48 1 314 1 
222 1 117 1 68 1 47 2 48 1 94 1 365 2 288 1 287 1 314 1 198 1 316 1 75 1 175 1 32 2 252 2 372 1 131 1 34 2 35 1 211 1 356 1 377 1 139 1 379 1 336 1 362 1 
223 2 119 1 283 2 1 1 247 1 3 1 265 1 52 1 365 2 170 1 249 1 295 1 346 2 129 1 32 2 204 1 252 2 373 1 9 1 234 1 104 1 254 1 256 1 237 2 326 1 261 2 328 1 41 1 15 1 279 1 21 2 
204 1 373 1 223 1 91 1 283 1 254 1 106 1 27 1 328 1 14 1 346 1 229 1 280 1 19 1 
116 1 263 1 133 1 223 1 283 1 254 1 71 2 121 1 106 1 315 1 328 1 327 1 29 1 346 1 229 1 65 1 20 1 269 1 
116 1 263 1 133 1 223 2 283 2 254 1 71 2 121 1 106 1 248 1 315 1 328 1 327 1 29 1 346 2 229 1 65 1 20 1 269 1 
116 1 263 1 133 1 223 1 283 1 254 1 71 2 156 1 315 1 327 1 328 1 29 1 346 1 229 1 65 1 20 1 269 1 
202 1 
320 1 205 1 208 1 26 1 323 1 378 1 360 1 13 1 136 1 7 1 
193 2 26 5 374 5 51 10 210 2 345 2 82 5 84 1 39 2 13 5 136 5 151 1 278 5 87 2 153 2 
130 1 205 1 198 1 13 1 68 1 30 1 
223 4 68 3 91 1 283 4 26 2 50 1 144 1 226 1 198 3 200 1 346 4 30 2 7 2 348 1 204 1 130 4 373 1 208 2 254 1 323 1 214 2 378 2 359 2 136 2 328 1 241 2 14 1 110 1 280 2 
205 1 320 1 136 1 13 1 360 1 218 1 26 1 
191 1 22 1 68 1 26 1 51 1 198 1 30 1 7 1 130 1 205 1 208 1 323 1 378 1 136 1 13 2 278 1 112 1 
193 2 283 3 51 12 195 2 345 2 248 1 198 5 151 2 346 3 7 4 153 2 350 1 204 10 59 2 205 2 352 2 208 4 254 3 210 2 214 2 359 1 360 1 13 8 302 3 17 1 23 3 223 3 68 5 26 8 73 2 226 1 30 3 173 2 130 5 320 1 373 3 179 1 180 1 374 6 323 4 36 2 376 2 82 6 378 4 84 2 39 2 136 9 328 4 186 2 241 1 331 2 278 6 87 2 280 1 
90 1 193 2 68 1 224 1 26 5 51 6 345 2 5 1 198 1 199 1 151 1 30 1 7 2 153 2 203 1 130 1 253 1 205 2 207 1 208 2 61 1 374 5 323 2 210 2 82 5 214 1 378 2 39 2 136 8 13 5 241 1 187 1 278 3 88 1 87 2 
68 1 47 1 245 1 26 2 2 1 365 1 169 1 227 1 289 1 147 1 198 1 151 1 56 1 128 1 6 1 7 1 153 2 32 1 273 1 252 1 34 1 208 1 323 1 378 1 39 2 136 2 303 1 87 1 
44 1 223 1 47 2 119 1 283 1 49 1 247 1 2 2 265 1 365 2 288 1 295 1 346 1 8 1 154 1 32 3 273 1 252 3 204 1 373 1 234 1 34 2 254 1 256 1 237 1 261 2 328 1 41 1 302 1 279 1 280 1 338 1 
205 2 208 1 26 2 51 4 374 2 323 1 82 2 214 1 378 1 136 1 13 4 241 1 138 1 278 2 7 1 
372 1 192 1 75 1 115 1 314 1 
372 1 75 1 334 1 
372 1 75 1 334 1 
372 1 75 1 334 1 
372 1 75 1 140 1 
372 1 75 1 140 1 
372 1 75 1 140 1 
372 1 75 1 
94 1 377 1 
119 1 194 1 245 1 247 4 265 1 170 4 227 1 5 1 128 1 153 1 203 1 234 1 207 1 237 8 324 2 184 1 258 2 261 2 135 1 41 1 138 1 187 1 87 1 
45 1 193 1 194 1 119 2 245 1 247 5 265 2 170 6 227 1 5 2 128 1 172 1 153 2 203 1 234 2 207 1 210 1 237 11 324 3 258 2 184 1 135 1 261 4 41 2 138 1 187 1 87 1 335 1 
193 2 194 1 119 3 245 1 224 1 247 10 265 3 345 2 170 9 227 1 5 1 199 1 128 1 172 1 153 3 203 1 234 3 207 1 61 1 298 1 210 2 237 19 324 4 184 1 258 3 135 1 261 6 41 3 138 1 187 1 88 1 87 3 335 1 
193 2 194 1 119 3 245 1 224 1 247 7 265 3 345 1 170 10 227 1 5 1 199 1 128 1 172 1 153 3 203 1 234 3 207 1 61 1 298 1 210 2 237 17 324 5 184 1 258 3 135 1 261 6 41 3 138 1 187 1 88 1 87 2 335 2 
119 1 194 1 245 1 247 4 265 1 170 4 227 1 5 1 128 1 153 1 203 1 234 1 207 1 237 8 324 2 184 1 258 2 261 2 135 1 41 1 138 1 187 1 87 1 
193 2 119 1 224 1 247 6 265 1 345 2 170 6 5 1 199 1 153 2 203 1 234 1 207 1 61 1 210 2 237 12 324 2 184 1 258 1 261 2 41 1 187 1 88 1 87 2 335 1 
193 2 194 1 119 4 245 1 224 1 247 8 265 4 345 1 170 10 227 1 5 1 199 1 128 1 172 1 153 3 203 1 234 4 207 1 61 1 298 2 210 2 237 18 324 5 184 1 258 3 135 1 261 8 41 4 138 1 187 1 88 1 87 2 335 2 
193 3 119 4 224 1 247 7 265 4 345 2 170 9 5 1 199 1 153 3 203 1 177 1 234 4 207 1 61 1 298 2 210 3 237 16 324 6 184 1 258 3 261 8 41 4 187 1 88 1 87 2 335 3 
194 1 245 3 247 4 237 7 324 6 170 3 258 3 227 1 135 2 128 3 87 1 153 1 335 3 
193 2 194 1 119 4 245 1 224 1 247 8 265 4 345 1 170 10 227 1 5 1 199 1 128 1 153 3 203 1 177 1 234 4 207 1 61 1 298 2 210 2 237 18 324 4 184 1 258 3 135 1 261 8 41 4 138 1 187 1 88 1 87 2 335 1 
234 1 119 1 245 2 247 5 265 1 169 1 324 5 170 5 237 10 184 1 258 3 227 1 261 2 41 1 128 2 87 2 153 2 335 2 
234 1 193 1 119 1 265 1 170 2 237 2 324 1 184 1 261 2 41 1 153 1 335 1 
234 1 193 1 119 1 247 2 265 1 345 1 210 1 324 2 170 2 237 4 258 1 184 1 261 2 41 1 87 1 153 1 335 1 
177 1 234 3 119 3 298 1 245 1 247 2 265 3 237 3 324 2 170 1 184 1 258 1 261 6 41 3 128 1 113 1 335 1 
45 1 193 3 194 1 119 4 245 2 246 1 247 14 265 4 196 1 345 3 170 13 227 1 5 4 128 2 172 1 174 1 153 4 203 3 177 1 234 4 298 1 210 3 237 27 324 10 184 1 258 5 135 1 261 8 41 4 138 1 187 1 87 4 335 5 
234 2 119 2 194 1 298 1 245 1 247 4 265 2 237 8 170 4 324 3 258 2 227 1 261 4 135 1 41 2 138 1 128 1 87 1 153 1 335 1 
194 1 245 1 247 3 324 2 170 3 237 6 258 2 227 1 135 1 138 1 128 1 218 1 87 1 153 1 
234 1 193 1 119 1 247 2 265 1 345 1 210 1 324 2 170 2 237 4 258 1 261 2 41 1 172 1 87 1 153 1 335 1 
45 1 193 1 247 4 345 1 210 1 237 7 170 3 324 2 258 1 5 2 187 1 87 1 153 1 335 1 203 1 
193 2 45 1 194 1 119 2 245 2 247 12 265 2 345 2 170 11 227 1 5 2 128 2 371 1 153 3 203 2 234 2 321 1 298 2 210 2 324 9 237 23 258 5 135 1 261 4 41 2 138 1 87 3 335 4 113 1 
5 1 247 1 237 1 
237 1 170 1 203 1 
234 1 193 1 119 1 247 3 265 1 210 1 345 1 237 6 170 3 324 3 258 2 84 1 261 2 41 1 172 1 87 1 153 1 335 1 
193 2 119 1 224 1 247 6 265 1 345 2 170 6 5 1 199 1 153 2 203 1 234 1 207 1 61 1 210 2 237 12 324 2 184 1 258 1 261 2 41 1 187 1 88 1 87 2 335 1 
245 1 247 3 170 3 237 6 324 2 258 1 227 1 128 1 87 1 153 1 335 1 
234 1 119 1 194 1 245 1 298 1 247 2 265 1 170 1 324 2 237 3 258 1 135 1 261 2 41 1 128 1 335 1 113 1 
252 1 185 1 80 1 365 1 32 1 288 1 337 1 
252 1 46 1 80 1 365 1 288 1 148 1 185 1 217 1 66 1 31 1 32 1 337 1 
204 1 368 1 373 1 328 1 91 1 223 4 14 1 283 4 346 4 254 1 280 1 248 1 367 1 
204 1 373 1 223 2 310 1 283 2 254 1 299 1 259 1 359 1 108 1 328 2 302 1 346 2 363 1 
116 1 263 1 315 1 328 1 223 1 283 1 346 1 254 1 71 1 280 1 
204 1 373 1 328 1 327 1 223 2 283 2 346 2 254 1 15 1 3 1 248 1 
204 3 282 1 373 2 91 1 223 5 283 5 254 2 3 1 248 1 368 1 359 1 328 2 14 1 346 4 280 1 164 1 
58 1 204 3 282 1 373 2 91 1 223 5 283 5 254 2 3 1 248 1 368 1 359 1 328 2 14 1 346 4 280 1 
204 1 373 1 328 1 91 1 223 1 14 1 218 1 283 1 346 1 254 1 280 1 
204 1 44 1 252 2 373 1 34 1 47 1 223 1 283 1 254 1 365 1 288 1 240 1 328 1 302 1 346 1 280 1 154 1 32 2 
204 3 44 1 252 2 373 2 34 1 47 2 223 1 283 1 254 1 195 1 322 1 365 2 73 1 288 1 240 1 359 1 328 1 56 1 302 2 346 1 154 1 89 1 32 2 
44 1 223 2 47 2 283 2 195 1 365 2 73 1 367 1 288 1 56 1 346 2 32 2 252 2 204 3 373 2 34 1 254 1 322 1 274 1 240 1 359 1 328 1 302 2 89 1 
204 4 130 1 205 1 352 1 373 1 23 1 68 2 223 3 283 3 254 1 195 1 73 1 367 1 198 2 13 1 359 1 328 1 186 1 302 1 346 3 228 1 280 1 364 1 
204 4 59 1 130 1 205 1 352 1 373 1 23 1 68 2 223 3 283 3 254 1 195 1 73 1 367 1 198 2 13 1 359 1 328 1 186 1 302 1 346 3 280 1 
328 1 223 1 283 1 346 1 254 1 231 1 
282 1 204 3 373 2 223 7 283 7 180 1 254 2 3 1 248 1 86 1 108 1 327 1 328 3 302 1 346 6 231 1 164 1 280 2 363 1 233 1 21 1 
44 1 194 1 119 2 47 1 223 1 245 1 283 1 49 1 247 3 265 2 52 1 365 1 170 3 248 1 288 2 227 1 369 1 128 1 346 1 8 1 153 1 154 1 32 2 204 1 252 2 373 1 34 1 234 2 254 1 256 2 257 1 237 6 324 2 258 2 240 1 326 1 135 1 261 4 328 1 41 2 138 1 302 1 304 1 163 1 242 1 87 1 279 2 
117 1 23 1 223 1 68 3 283 1 26 1 226 1 198 3 346 1 30 1 7 2 173 1 204 2 59 1 130 2 205 1 320 1 352 1 208 2 323 2 376 1 378 2 136 1 13 1 360 1 186 1 331 1 280 1 
204 2 373 1 223 2 283 2 179 1 180 1 254 1 248 1 186 1 328 2 302 1 346 2 231 1 
204 1 44 1 252 2 373 1 34 1 47 1 223 1 283 1 254 1 274 1 365 1 288 1 240 1 328 1 302 1 346 1 280 1 32 2 
204 1 373 1 223 1 283 1 180 1 254 1 108 1 359 1 328 2 302 1 346 1 363 1 233 1 
60 1 232 1 42 1 288 1 213 1 
205 1 352 1 117 1 60 2 68 2 322 1 313 1 366 1 288 1 213 1 198 2 13 1 137 1 56 1 232 2 349 1 281 1 89 1 42 2 
252 1 60 1 104 1 249 1 129 1 365 1 32 1 42 1 213 1 
137 1 349 1 213 1 
358 1 159 1 276 1 209 1 354 1 99 1 181 1 57 1 
342 2 209 2 181 2 93 1 54 1 358 1 145 1 159 1 276 4 293 1 16 1 99 3 57 4 101 1 
143 1 342 1 209 1 354 1 181 1 358 1 159 1 276 2 98 1 99 1 141 1 57 2 
209 1 354 1 181 1 54 2 358 1 159 1 276 3 293 1 99 1 100 1 16 2 57 3 
38 1 118 2 99 2 212 1 
358 1 159 1 276 1 76 1 354 1 57 1 
358 1 159 1 276 2 342 1 209 1 354 1 99 1 181 1 311 1 57 2 
351 1 
358 1 159 1 276 1 209 1 354 1 99 1 181 1 57 1 
209 1 218 1 99 1 181 1 
358 1 159 1 276 1 209 1 99 1 181 1 57 1 
28 1 276 1 266 1 
341 1 209 1 354 1 181 1 54 1 358 1 159 1 276 3 293 1 99 1 16 2 57 3 
358 1 159 1 276 2 342 1 209 1 318 1 99 1 181 1 57 2 
263 1 354 1 71 1 358 1 145 1 159 1 276 1 99 1 20 1 57 1 166 1 
358 1 159 1 276 1 354 1 99 1 181 1 57 1 
358 1 159 1 276 1 209 1 354 1 181 2 57 1 
354 1 181 1 63 1 225 1 358 2 159 2 275 1 276 2 99 1 57 2 
176 1 342 2 209 1 354 1 181 1 311 1 93 1 358 1 145 1 159 1 276 3 99 2 57 3 
116 1 33 1 263 1 342 1 209 1 354 1 181 1 71 2 358 1 159 1 276 2 29 1 99 1 20 1 57 2 
342 2 209 1 354 1 181 1 93 1 358 2 145 1 159 2 276 4 380 1 318 1 99 2 57 4 
358 1 159 1 276 3 342 1 209 1 354 1 311 1 99 1 181 1 16 1 57 3 
145 1 99 1 93 1 101 1 
99 1 181 1 

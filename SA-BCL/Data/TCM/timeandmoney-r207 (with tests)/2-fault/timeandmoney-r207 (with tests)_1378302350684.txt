#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 164 222 89 325 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 1 50 2 232 1 142 1 52 1 7 2 31 9 144 1 330 6 57 1 335 2 193 5 101 1 175 4 150 9 364 2 284 2 16 2 105 3 313 1 178 2 18 1 225 1 244 1 290 1 47 1 69 1 21 1 
49 1 50 2 232 1 142 1 52 1 7 2 31 9 144 1 330 6 57 1 335 2 193 5 101 1 175 4 364 2 150 9 284 2 16 2 105 3 313 1 178 2 18 1 225 1 244 1 290 1 47 1 69 1 21 1 
49 1 50 2 232 1 142 1 52 1 7 2 31 10 144 1 330 7 57 1 335 2 193 6 101 1 175 5 364 2 150 10 284 2 16 2 105 4 313 1 178 2 18 1 225 1 244 1 290 1 47 1 69 1 21 1 
49 1 50 1 232 1 52 1 7 2 31 7 144 1 330 4 57 1 335 2 193 4 101 1 175 3 364 2 150 7 284 2 16 2 105 2 313 1 178 2 18 1 225 1 244 1 290 1 47 1 69 1 21 1 
175 2 150 4 364 1 284 1 50 2 16 1 105 1 142 1 7 1 31 4 18 1 225 1 330 3 244 1 47 1 335 1 101 1 193 3 
150 2 284 1 232 1 16 1 178 1 7 1 52 1 233 1 31 2 18 1 201 1 225 1 122 1 47 1 193 1 335 1 
175 1 150 3 105 1 313 1 178 1 7 2 31 3 18 1 225 1 330 1 47 1 335 2 193 2 
50 2 142 1 7 2 28 1 31 9 330 7 335 2 193 5 101 1 175 4 150 9 364 1 284 1 16 1 105 3 313 1 178 1 18 1 225 1 290 1 244 1 47 1 204 1 21 1 
50 2 142 1 7 2 28 1 31 9 330 7 335 2 193 5 101 1 175 4 150 9 364 1 284 1 16 1 105 3 313 1 178 1 18 1 225 1 290 1 244 1 47 1 204 1 21 1 
149 1 257 1 171 1 
153 2 257 1 133 1 
274 2 255 1 323 2 111 2 276 1 59 2 92 2 113 2 
274 2 72 1 158 1 207 2 275 1 74 1 323 3 163 2 276 1 76 1 27 1 252 1 168 1 302 1 33 1 254 1 303 1 169 1 255 1 34 1 333 1 59 2 100 1 60 1 236 2 305 1 363 1 309 1 17 1 243 2 344 2 111 2 91 1 291 1 92 3 113 2 22 1 
274 1 120 1 66 1 221 1 255 1 323 1 111 1 59 1 92 1 113 1 
261 1 323 1 341 1 248 1 299 1 368 1 109 1 120 1 257 1 171 1 281 1 292 1 92 1 113 1 
274 1 323 1 341 1 248 2 299 1 368 1 109 1 120 1 111 1 257 1 171 1 281 2 59 1 92 1 113 1 
248 1 289 1 281 1 317 1 249 1 
248 2 289 1 257 1 171 1 361 1 281 2 259 1 317 1 
248 1 289 1 281 1 
274 1 93 1 323 1 248 1 120 1 66 1 221 1 255 1 111 1 281 1 59 1 92 1 317 1 113 1 
257 1 
45 1 248 2 289 1 257 1 171 1 361 1 281 2 317 1 
137 1 24 2 298 1 248 5 104 1 87 1 200 2 287 1 369 1 131 1 268 1 271 2 289 2 257 1 171 1 361 1 281 5 317 2 36 1 
274 1 309 1 275 1 323 2 163 1 27 1 252 1 168 1 302 1 212 1 344 1 83 1 333 1 59 1 100 1 234 1 92 2 236 1 22 1 113 1 
149 1 276 1 
274 1 263 1 323 2 276 2 143 1 111 1 59 1 92 2 113 2 
14 1 83 1 145 1 
275 1 309 1 323 1 163 1 276 1 27 1 252 1 168 1 302 1 344 1 333 1 100 1 92 1 236 1 22 1 62 1 
274 4 261 1 323 5 276 1 143 1 355 1 267 1 212 2 192 1 111 1 59 4 92 5 234 1 113 5 
274 2 120 1 66 1 170 1 323 2 59 2 92 2 113 2 
274 3 212 1 323 3 111 1 276 1 59 3 92 3 113 3 
274 1 120 1 66 1 323 1 59 1 92 1 113 1 
274 1 120 1 263 1 323 1 111 1 59 1 92 1 143 1 113 1 
274 3 72 1 349 1 158 1 207 2 275 1 74 1 323 4 163 1 248 1 276 1 299 1 27 1 143 1 252 1 168 1 302 1 212 1 254 1 120 1 303 1 169 1 255 1 333 1 281 1 100 1 59 3 234 1 236 1 305 1 363 1 309 1 341 1 17 1 243 1 368 1 109 1 110 1 344 1 111 2 291 1 92 4 22 1 113 3 
274 1 212 1 261 1 323 2 276 1 59 1 92 2 355 1 113 2 
274 3 349 1 323 3 341 1 248 1 299 1 143 1 130 1 368 1 212 2 120 1 109 1 111 1 257 1 281 1 59 3 234 1 92 3 113 3 
274 2 14 1 323 2 143 1 212 1 111 1 83 1 59 2 92 2 113 2 
275 1 309 1 323 1 163 1 276 1 27 1 252 1 168 1 302 1 344 1 333 1 100 1 92 1 236 1 22 1 
275 1 309 1 323 1 163 1 94 1 276 1 27 1 252 1 168 1 302 1 344 1 333 1 92 1 236 1 296 1 
14 2 207 2 158 1 366 1 74 1 164 1 354 1 177 1 17 1 243 4 303 2 169 1 82 1 331 1 83 2 346 1 145 2 91 2 291 1 156 1 230 1 136 1 305 1 13 1 
368 1 274 1 120 1 323 1 170 1 59 1 92 1 113 1 
223 1 78 1 
223 1 78 1 
332 1 184 1 
332 1 184 1 
332 1 184 1 
80 1 223 1 78 1 
80 1 223 1 78 1 
262 1 223 2 332 1 184 1 374 1 78 2 
223 1 372 1 78 1 
80 1 223 1 78 1 
337 1 223 1 78 1 
337 1 223 1 78 1 
337 1 223 1 78 1 
274 2 323 2 2 1 248 1 276 1 141 1 167 1 279 1 78 1 77 1 281 1 59 2 147 1 237 1 124 1 214 1 195 1 103 1 266 1 223 1 372 1 46 1 92 2 113 2 
73 1 214 3 195 2 320 1 340 1 248 2 103 2 167 2 301 1 279 2 78 2 223 2 226 1 257 1 281 2 294 2 70 1 237 1 374 1 
364 1 284 1 16 1 
284 1 201 1 16 1 
364 2 284 3 201 1 152 1 224 1 180 1 
157 1 364 1 284 2 201 1 224 1 180 1 
364 1 284 2 201 1 224 2 180 1 
137 1 24 1 248 5 164 1 139 2 166 1 141 1 82 1 361 1 281 5 171 1 257 2 213 1 147 1 13 1 36 2 148 1 124 1 153 3 366 1 65 2 87 3 88 1 200 1 222 1 271 1 289 1 228 1 133 1 19 1 112 2 317 4 
319 1 137 1 24 2 248 9 164 3 139 6 210 1 117 1 249 5 82 3 281 9 171 1 257 5 361 1 213 2 13 3 36 6 124 4 283 1 153 9 366 3 63 1 108 1 367 5 87 8 88 1 200 2 369 1 222 3 289 6 271 2 133 3 19 2 112 6 317 7 
24 1 248 3 164 1 166 1 139 2 82 1 171 1 257 3 281 3 213 1 13 1 148 1 124 1 36 2 366 1 153 4 65 1 87 3 200 1 369 1 222 1 271 1 133 2 19 1 112 2 317 2 
24 1 248 4 164 2 139 4 166 1 210 1 82 2 171 1 257 4 281 4 213 1 13 2 148 1 124 2 36 4 283 1 153 7 366 2 108 1 65 2 87 5 200 1 369 1 222 2 271 1 133 3 19 1 112 4 317 3 
302 1 149 1 75 1 
302 1 81 1 
116 1 
302 1 333 1 27 1 
302 1 362 1 
302 1 333 1 
302 3 75 2 191 1 333 1 27 1 197 1 
114 1 350 2 366 1 8 1 243 7 357 1 288 1 303 3 82 1 371 1 91 4 316 1 194 1 230 3 20 1 136 2 238 1 
114 1 350 2 366 1 8 1 243 7 357 1 288 1 303 3 82 1 371 1 91 4 316 1 194 1 230 3 20 1 136 2 238 1 
114 1 350 2 366 1 8 1 243 7 357 1 288 1 303 3 82 1 371 1 91 4 316 1 194 1 230 3 20 1 206 1 136 2 238 1 
114 1 350 3 158 1 207 2 160 1 324 1 164 3 8 1 9 1 357 2 303 15 169 1 82 4 194 1 305 1 238 5 13 3 125 3 366 4 216 1 217 4 312 1 17 1 243 31 288 2 222 3 371 2 202 1 91 16 316 1 245 1 20 2 230 10 136 5 
114 1 350 2 158 2 207 4 8 1 9 1 357 1 169 2 303 4 82 1 305 2 238 1 366 1 310 1 17 2 243 9 41 1 288 1 371 1 91 5 316 1 230 4 20 1 136 3 
275 1 163 1 7 1 278 1 252 1 356 1 31 2 304 1 330 1 193 1 335 1 336 1 61 1 174 1 236 1 364 1 150 2 284 2 152 1 16 1 64 1 178 1 18 1 201 1 225 1 344 1 345 1 270 1 47 1 90 1 
297 1 275 1 163 1 7 1 278 1 252 1 31 3 304 1 330 2 193 1 173 1 335 1 61 1 174 1 236 1 364 1 150 3 284 2 152 1 16 1 64 1 107 1 178 1 201 1 225 1 344 1 345 1 270 1 47 1 90 1 
275 1 163 1 278 1 252 1 31 2 330 2 193 1 173 1 61 1 174 1 236 1 150 2 364 1 284 2 152 1 16 1 64 1 107 1 178 1 201 1 225 1 344 1 345 1 270 1 47 1 
297 1 150 1 246 1 275 1 51 1 163 1 162 1 64 2 178 2 7 1 252 1 168 1 302 1 31 1 344 1 345 2 270 2 333 1 203 1 335 1 236 1 231 1 123 1 
275 1 163 1 7 1 278 1 252 1 356 1 31 1 304 1 173 1 335 1 61 1 174 1 236 1 364 1 150 1 284 2 152 1 16 1 64 1 178 1 18 1 201 1 344 1 345 1 270 1 90 1 
293 1 
48 1 137 1 275 1 323 1 326 1 188 1 333 1 280 1 334 2 281 5 102 2 236 2 153 2 341 1 106 1 285 2 200 1 109 1 344 2 289 6 67 1 203 1 292 1 113 1 246 1 24 1 163 2 248 5 299 1 119 2 252 1 29 2 168 2 302 1 253 1 120 1 360 1 171 1 257 2 361 3 213 1 36 2 307 2 261 1 38 1 84 1 127 4 128 1 218 2 87 2 314 1 368 1 271 1 133 2 92 1 
323 1 248 3 299 1 119 1 188 1 120 1 281 3 361 1 261 1 38 1 341 1 127 2 106 1 314 1 368 1 109 1 45 1 67 1 289 2 92 1 292 1 113 1 
323 1 248 3 299 1 188 1 120 1 281 3 334 1 171 1 257 1 361 1 261 1 38 1 341 1 127 3 106 1 314 1 368 1 109 1 45 1 289 1 67 1 92 1 292 1 113 1 
323 1 248 3 299 1 119 1 188 1 120 1 361 1 281 3 334 1 171 1 257 1 307 1 261 1 38 1 341 1 127 3 106 1 314 1 368 1 109 1 45 1 67 1 289 2 92 1 292 1 113 1 
48 1 182 1 137 1 321 1 323 1 183 1 188 1 98 1 280 1 281 5 334 4 102 2 341 1 106 1 200 1 285 2 109 1 289 7 67 1 292 1 113 1 24 1 25 1 248 5 299 1 119 4 29 2 120 1 361 3 171 5 257 5 36 1 307 4 38 1 261 1 127 6 218 2 87 1 314 1 368 1 45 1 271 1 133 2 92 1 
48 1 137 1 24 1 323 1 248 4 299 1 119 2 29 2 253 1 188 1 120 1 280 1 171 1 257 2 334 2 361 2 281 4 102 2 36 1 307 2 261 1 38 1 153 2 341 1 127 4 106 1 218 2 87 1 314 1 285 2 200 1 368 1 109 1 289 4 67 1 271 1 133 2 292 1 92 1 113 1 
48 1 182 1 137 1 24 1 321 1 323 1 248 4 183 1 299 1 119 2 29 2 188 1 120 1 280 1 257 1 171 1 334 2 361 2 281 4 102 2 36 1 307 2 261 1 38 1 341 1 127 4 106 1 218 2 87 1 314 1 285 2 200 1 368 1 109 1 289 4 67 1 271 1 133 2 92 1 292 1 113 1 
48 1 182 1 137 1 24 1 321 1 323 1 248 4 183 1 299 1 119 2 29 2 188 1 120 1 280 1 257 1 171 1 334 2 361 2 281 4 102 2 36 1 307 2 261 1 38 1 341 1 127 4 106 1 218 2 87 1 314 1 285 2 200 1 368 1 109 1 289 4 67 1 271 1 133 2 92 1 292 1 113 1 
48 1 137 1 24 1 323 1 248 4 183 1 299 1 119 2 29 2 188 1 120 1 189 1 257 1 171 1 334 2 361 2 35 1 281 4 36 1 307 2 261 1 38 1 153 2 341 1 127 4 176 2 106 1 87 1 314 1 285 2 200 1 368 1 109 1 289 4 67 1 227 1 271 1 92 1 292 1 272 2 113 1 
48 1 137 1 182 1 24 1 321 1 323 1 248 4 183 1 299 1 119 3 29 2 188 1 120 1 98 1 280 1 257 1 171 1 361 2 281 4 334 3 102 2 36 1 307 3 261 1 38 1 341 1 127 5 106 1 218 2 87 1 314 1 285 2 200 1 368 1 109 1 271 1 67 1 289 5 133 2 92 1 292 1 113 1 
48 1 137 1 182 1 24 1 321 1 323 1 248 4 183 1 299 1 119 3 29 2 188 1 120 1 98 1 280 1 257 1 171 1 361 2 281 4 334 3 102 2 36 1 307 3 261 1 38 1 341 1 127 5 106 1 218 2 87 1 314 1 285 2 200 1 368 1 109 1 271 1 67 1 289 5 133 2 92 1 292 1 113 1 
48 1 137 1 24 1 323 1 248 4 299 1 119 2 29 2 253 1 188 1 120 1 257 1 171 1 334 2 361 2 281 4 35 1 36 1 307 2 261 1 38 1 153 2 341 1 127 4 176 2 106 1 87 1 314 1 285 2 200 1 368 1 109 1 289 4 67 1 271 1 292 1 92 1 272 2 113 1 
114 1 350 1 158 1 207 2 74 1 276 2 8 1 169 1 303 3 82 1 331 1 83 1 145 1 305 1 14 1 149 1 366 1 17 1 243 6 288 1 91 3 316 1 291 1 20 1 230 2 136 2 
158 2 207 4 74 1 324 1 164 2 276 1 300 1 33 1 254 1 303 6 169 2 82 1 83 11 145 11 305 2 238 1 13 1 125 3 14 4 366 2 217 3 17 2 243 14 342 1 370 1 222 2 132 1 91 8 291 2 245 1 318 1 230 2 136 1 
274 1 207 2 158 1 275 1 74 1 163 1 323 2 276 1 300 1 27 1 252 1 168 1 302 1 212 1 254 1 33 1 169 1 303 1 359 1 333 1 100 1 59 1 235 1 234 1 236 1 305 1 62 1 14 1 309 1 17 1 198 1 243 2 344 1 91 1 291 1 92 2 22 1 113 1 
274 1 275 2 323 3 276 2 8 1 11 1 333 2 145 7 59 1 100 2 234 1 146 2 236 3 238 4 13 2 338 2 14 7 151 1 17 3 243 20 288 1 344 3 291 3 20 1 113 1 22 2 114 1 72 2 350 1 351 2 159 1 158 3 207 6 74 3 163 3 164 2 300 1 27 2 250 2 252 2 168 1 212 1 302 2 33 1 254 1 303 10 169 3 82 3 83 7 173 1 305 3 309 2 366 3 222 2 91 10 316 1 92 3 230 8 136 4 
274 1 246 1 158 2 207 4 275 2 74 2 323 1 163 8 3 1 251 1 252 2 168 2 212 1 302 3 33 1 254 1 169 2 303 1 56 1 358 1 331 1 333 2 59 1 173 1 172 1 60 2 336 1 236 7 305 2 37 1 17 2 243 2 344 8 91 1 203 1 92 1 291 2 348 1 113 1 
274 1 158 1 207 2 74 1 323 1 164 1 300 1 143 1 169 1 303 2 82 1 83 1 145 1 59 1 305 1 13 1 14 1 366 1 17 1 199 1 243 3 222 1 111 1 91 1 291 1 92 1 230 1 136 1 113 1 
14 1 207 2 158 1 366 1 74 1 164 1 177 1 17 1 243 2 169 1 331 1 83 1 145 1 91 2 291 1 230 1 305 1 238 1 
14 1 207 2 158 1 74 1 17 1 243 2 169 1 303 2 82 1 331 1 83 1 346 1 145 1 291 1 230 1 136 1 305 1 13 1 
158 1 207 2 74 1 164 1 169 1 303 2 82 1 331 1 83 2 145 2 305 1 238 1 13 1 14 2 366 1 17 1 243 4 222 1 91 2 291 1 230 2 136 1 
14 1 207 2 158 1 366 1 74 1 164 1 177 1 17 1 251 1 243 2 169 1 83 1 145 1 91 2 291 1 230 1 305 1 238 1 
14 1 207 2 158 1 74 1 17 1 251 1 243 2 169 1 303 2 82 1 83 1 346 1 145 1 291 1 230 1 136 1 305 1 13 1 
158 1 207 2 74 1 164 1 251 1 169 1 303 2 82 1 83 2 145 2 305 1 238 1 13 1 14 2 366 1 17 1 243 4 222 1 91 2 291 1 230 2 136 1 
158 1 207 2 74 1 164 1 169 1 303 2 82 1 83 2 145 2 305 1 238 1 13 1 14 2 366 1 17 1 243 4 222 1 91 2 291 1 230 2 136 1 
72 1 207 2 158 1 275 1 74 1 163 1 323 1 276 1 27 1 252 1 168 1 302 1 33 1 254 1 169 1 303 1 333 1 100 1 236 1 305 1 309 1 17 1 243 2 344 1 91 1 92 1 291 1 22 1 
207 2 158 1 275 1 74 1 163 1 323 1 94 1 276 1 27 1 252 1 168 1 302 1 33 1 254 1 169 1 303 1 333 1 236 1 305 1 309 1 126 1 17 1 243 2 344 1 91 1 92 1 291 1 296 1 
158 1 207 2 74 1 164 1 300 1 169 1 303 2 82 1 83 2 145 2 305 1 238 1 13 1 14 2 366 1 17 1 243 4 222 1 91 2 291 1 230 2 136 1 
72 1 207 2 158 1 275 1 74 1 163 1 323 1 164 1 27 1 252 1 302 1 303 2 169 1 82 1 83 2 333 1 145 2 100 1 146 1 336 1 236 1 305 1 13 1 238 1 14 2 366 1 309 1 17 1 243 4 222 1 344 1 91 2 92 1 291 1 230 2 136 1 22 1 
274 1 158 1 207 2 74 1 323 1 164 1 97 1 300 1 143 1 303 1 169 1 82 1 83 1 145 1 59 1 305 1 13 1 238 1 14 1 366 1 17 1 243 3 222 1 111 1 91 2 291 1 92 1 230 1 113 1 
158 2 207 4 325 1 324 1 164 2 6 1 185 1 30 1 32 1 169 2 303 7 82 2 305 2 238 2 13 2 125 1 366 2 264 1 86 1 217 2 17 2 243 13 41 1 222 2 89 1 91 6 245 1 230 4 136 2 
0 1 158 3 207 6 208 1 324 2 164 3 6 2 327 1 185 1 9 2 30 4 32 1 303 12 169 3 82 2 305 3 238 2 13 2 125 2 15 1 366 3 311 1 86 2 217 2 17 3 243 26 41 1 222 3 89 1 91 14 179 1 230 4 295 1 136 2 
114 1 0 1 350 1 158 3 207 6 208 1 324 3 164 4 327 1 6 2 185 1 8 1 9 1 30 4 32 1 169 3 303 21 55 1 82 5 305 3 238 4 13 4 125 3 15 1 366 5 264 1 311 1 86 1 217 4 17 3 243 41 41 1 288 1 222 4 89 1 91 20 179 1 316 1 245 1 20 1 230 8 295 1 136 4 
114 1 0 1 350 1 158 4 207 8 208 1 324 3 164 4 327 1 6 2 185 1 8 1 9 2 30 4 32 1 169 4 303 18 55 1 82 4 305 4 238 3 13 3 125 3 15 1 366 5 264 1 311 1 86 1 217 4 17 4 243 38 41 1 288 1 222 4 89 1 91 20 179 1 316 1 245 1 20 1 230 7 295 1 136 4 
114 1 0 1 350 1 158 2 207 4 208 1 324 2 164 7 327 1 6 1 185 1 8 1 9 1 30 4 32 1 169 2 303 25 82 8 305 2 238 7 13 7 125 4 15 1 366 8 311 1 86 1 217 4 17 2 243 52 370 2 41 1 288 1 222 7 89 1 91 27 179 1 316 1 245 2 20 1 230 14 295 1 136 7 
207 2 158 1 275 1 74 1 163 2 323 2 300 1 252 1 302 1 33 1 254 1 169 1 303 1 56 1 333 1 172 1 60 2 236 2 305 1 308 1 240 1 241 1 17 1 243 2 43 1 344 2 91 1 291 1 92 2 273 1 113 2 
364 1 284 2 1 1 196 1 152 1 275 1 163 2 16 1 252 1 343 1 201 1 344 2 304 1 345 1 173 1 336 1 61 1 174 1 236 2 
364 1 284 2 152 1 275 1 163 1 16 1 252 1 343 1 201 1 344 1 304 1 345 1 173 1 61 1 174 1 236 1 135 1 
246 1 1 1 275 1 163 1 252 1 168 1 40 1 302 1 344 1 345 1 333 1 203 1 236 1 123 1 
364 1 284 2 1 1 196 1 152 1 275 1 163 1 16 1 252 1 343 1 201 1 344 1 304 1 345 1 173 1 61 1 174 1 236 1 
365 1 
149 1 268 1 257 1 171 1 104 1 87 1 36 1 
137 1 24 1 248 1 280 1 257 2 361 1 281 1 171 1 102 1 36 1 153 1 218 1 87 1 200 1 271 1 289 1 133 1 
275 4 137 4 138 2 5 2 139 6 190 2 191 1 333 3 99 1 281 5 336 1 236 3 13 2 153 12 239 1 104 1 200 4 344 3 68 1 289 5 112 6 205 2 351 2 247 2 24 4 163 3 75 2 248 5 164 2 299 2 115 2 27 3 118 1 252 3 168 1 302 10 81 3 82 2 171 2 213 2 361 3 257 8 362 2 36 8 366 2 128 1 39 1 87 9 42 2 268 1 269 2 222 2 271 4 133 6 
0 1 137 2 24 2 208 1 248 1 324 1 164 2 165 1 139 5 327 1 82 2 213 1 281 1 361 1 257 5 171 2 36 5 13 2 125 1 153 6 366 2 265 1 311 1 128 1 217 1 87 8 200 2 42 2 222 2 289 1 271 2 133 3 205 1 112 5 295 1 
274 1 93 1 137 1 182 1 24 1 323 1 248 1 8 1 120 1 255 1 82 1 281 1 59 1 36 2 366 2 87 2 129 1 200 1 42 2 66 1 288 1 221 1 111 1 271 1 205 1 92 1 20 1 113 1 
268 1 137 1 24 1 271 1 257 1 171 1 104 1 87 1 36 1 200 1 
351 1 366 2 153 10 164 2 139 5 87 5 42 2 222 2 82 2 257 5 133 5 205 1 112 5 36 5 13 2 
248 1 289 1 257 1 171 1 281 1 361 1 
246 1 275 1 137 1 24 2 163 4 248 3 140 1 252 1 168 2 302 1 360 1 333 1 213 2 361 2 281 3 260 1 236 4 36 2 84 1 128 2 39 1 87 2 200 2 369 1 344 4 68 2 271 2 289 4 203 1 
274 2 72 1 158 1 207 2 275 1 74 1 163 1 323 3 276 1 27 1 252 1 168 1 302 1 254 1 303 1 169 1 255 1 333 1 59 2 100 1 236 1 305 1 363 1 309 1 17 1 243 1 344 1 111 2 92 3 291 1 113 2 22 1 
350 1 153 4 137 1 24 1 128 1 139 2 87 1 200 1 271 1 213 1 171 2 257 4 133 2 112 2 36 2 
103 1 219 1 167 1 
103 1 219 1 167 1 
322 1 226 1 46 1 103 1 167 1 
103 1 219 1 167 1 
154 1 103 1 167 1 
154 1 103 1 167 1 
154 1 103 1 167 1 
103 1 167 1 
223 1 78 1 
114 1 350 1 207 4 158 2 366 1 17 2 8 1 243 8 9 1 288 1 303 4 169 2 82 1 91 4 316 1 230 3 20 1 136 2 305 2 238 1 
114 1 149 1 350 1 366 1 8 1 243 6 288 1 303 3 82 1 91 3 316 1 20 1 230 2 136 2 
207 2 158 1 366 1 164 1 26 1 17 1 243 4 303 2 169 1 222 1 82 1 91 2 230 2 136 1 305 1 13 1 238 1 
125 1 366 1 324 1 164 1 217 2 243 7 303 4 222 1 82 1 91 3 245 1 230 2 136 1 13 1 238 1 
114 1 350 1 207 4 158 2 164 2 8 1 9 2 303 12 169 2 82 3 305 2 238 4 13 2 125 2 366 3 217 2 17 2 243 23 342 1 370 1 288 2 222 2 347 1 91 11 316 1 245 1 20 2 230 9 136 5 
303 1 217 1 243 1 
125 1 91 1 243 1 
351 1 158 1 207 2 366 1 164 1 26 1 17 1 243 6 169 1 303 3 222 1 82 1 91 3 230 3 305 1 136 2 238 1 13 1 
0 1 158 1 207 2 324 1 208 1 164 2 327 1 303 6 169 1 82 2 305 1 238 1 13 2 125 1 366 2 311 1 217 1 17 1 243 12 41 1 222 2 91 6 230 2 136 1 295 1 
366 1 8 1 243 6 288 1 303 3 82 1 91 3 20 1 230 2 136 1 238 1 
114 1 207 2 158 1 17 1 243 3 9 1 288 1 303 2 169 1 347 1 91 1 316 1 230 2 20 1 136 1 305 1 238 1 
158 1 207 2 366 2 17 1 129 1 8 1 243 10 41 1 288 2 169 1 303 5 82 2 91 5 20 2 230 5 305 1 136 3 238 2 
207 2 158 1 366 1 164 1 17 1 243 2 41 1 169 1 91 2 230 1 305 1 238 1 
207 2 158 1 366 1 164 1 17 1 243 4 41 1 303 2 169 1 222 1 82 1 91 2 230 2 136 1 305 1 13 1 238 1 
207 6 158 3 264 1 17 3 9 1 243 3 41 1 288 1 303 2 169 3 347 1 91 1 20 1 230 2 305 3 136 1 238 1 
114 1 350 1 158 5 207 10 160 1 324 1 164 3 26 1 8 2 9 2 303 18 169 5 82 5 305 5 238 5 13 3 125 3 366 5 264 1 216 1 217 4 312 1 17 5 243 34 41 1 288 3 222 3 347 1 91 16 316 1 245 1 20 3 230 12 136 7 
114 1 0 1 125 1 350 1 207 2 158 1 366 1 324 1 217 1 17 1 8 1 243 8 41 1 288 1 169 1 303 4 82 1 91 4 316 1 230 2 20 1 136 2 305 1 
114 1 0 1 350 1 158 2 207 4 324 1 164 1 26 1 8 1 303 5 169 2 82 1 305 2 238 1 125 1 366 2 217 2 17 2 243 11 41 1 288 1 222 1 91 6 316 1 245 1 20 1 230 3 136 2 
114 1 0 1 350 1 158 3 207 6 208 1 324 1 164 2 26 1 327 1 8 1 9 1 303 10 169 3 82 3 305 3 238 1 13 2 125 1 366 3 311 1 217 1 17 3 243 19 41 1 288 1 222 2 91 9 316 1 20 1 230 4 136 3 295 1 
114 1 0 1 350 1 158 3 207 6 324 1 208 1 164 2 26 1 327 1 8 1 9 1 303 7 169 3 82 2 305 3 238 2 13 1 125 1 366 3 311 1 217 1 17 3 243 17 41 1 288 1 222 2 91 10 316 1 20 1 230 5 136 3 295 1 
114 1 0 1 125 1 350 1 207 2 158 1 366 1 324 1 217 1 17 1 8 1 243 8 41 1 288 1 169 1 303 4 82 1 91 4 316 1 230 2 20 1 136 2 305 1 
0 1 158 1 207 2 324 1 208 1 164 2 327 1 303 6 169 1 82 2 305 1 238 1 13 2 125 1 366 2 311 1 217 1 17 1 243 12 41 1 222 2 91 6 230 2 136 1 295 1 
114 1 0 1 350 1 158 4 207 8 208 1 324 1 164 2 26 1 327 1 8 1 9 2 303 8 169 4 82 2 305 4 238 2 13 1 125 1 366 3 311 1 217 1 17 4 243 18 41 1 288 1 222 2 91 10 316 1 20 1 230 5 295 1 136 3 
0 1 158 4 207 8 208 1 324 1 164 3 327 1 9 2 303 7 169 4 82 2 305 4 238 3 13 2 125 1 366 3 264 1 311 1 217 1 17 4 243 16 41 1 222 3 91 9 230 6 295 1 136 3 
114 2 366 1 8 1 243 7 288 3 303 4 82 1 91 3 316 1 20 3 230 6 136 3 238 3 
114 1 0 1 350 1 158 4 207 8 208 1 324 1 164 2 327 1 8 1 9 2 303 8 169 4 82 2 305 4 238 1 13 1 125 1 366 3 264 1 311 1 217 1 17 4 243 18 41 1 288 1 222 2 91 10 316 1 20 1 230 4 295 1 136 3 
261 1 215 1 323 1 276 1 92 1 113 1 355 1 
215 1 261 1 323 1 276 1 355 1 286 1 53 1 54 1 258 1 92 1 113 1 181 1 
168 1 302 1 149 1 246 1 275 1 344 1 163 1 333 1 203 1 236 1 252 1 
274 1 309 1 275 1 323 2 163 1 276 1 27 1 252 1 168 1 302 1 212 1 344 1 333 1 59 1 92 2 236 1 113 1 22 1 
274 2 247 1 309 1 275 1 323 2 163 1 276 1 27 2 252 1 368 1 302 3 212 1 120 1 109 1 344 1 333 2 68 1 59 1 92 2 362 1 236 1 113 2 22 1 
274 2 247 1 161 1 275 1 163 2 323 2 276 1 27 2 252 1 212 1 302 3 120 1 333 2 59 1 362 1 236 2 309 1 368 1 109 1 344 2 68 1 92 2 113 2 296 1 
247 1 161 1 275 1 75 1 163 3 248 2 209 1 299 1 27 1 252 1 168 1 302 4 81 1 333 1 281 2 171 1 257 1 362 1 236 3 220 1 344 3 289 1 68 1 
247 1 161 1 275 1 163 3 75 1 248 2 299 1 27 1 252 1 168 1 302 4 190 1 344 3 81 1 333 1 68 1 289 1 257 1 171 1 281 2 362 1 236 3 
37 1 275 1 344 1 163 1 236 1 252 1 
37 1 275 3 163 7 3 1 27 1 252 2 168 2 302 3 315 1 56 1 358 1 344 7 191 1 333 2 282 1 60 1 173 1 336 1 348 1 236 6 134 1 
114 1 274 1 72 1 350 1 207 4 158 2 275 1 74 2 323 2 163 1 276 2 300 1 27 1 8 1 250 1 252 1 302 1 212 1 303 3 169 2 82 1 83 1 333 1 145 1 59 1 100 1 336 1 146 1 236 1 305 2 14 1 308 1 366 1 309 1 17 2 243 6 288 1 344 1 91 3 316 1 291 2 92 2 230 2 20 1 136 2 113 1 22 1 
137 2 24 2 138 1 163 1 75 1 248 3 299 1 115 1 168 1 302 2 190 1 81 1 257 1 171 1 281 3 361 1 236 1 36 1 104 1 39 1 87 1 200 2 268 1 269 1 344 1 271 2 289 2 317 1 
37 1 275 2 75 1 163 2 239 1 27 1 252 1 302 2 344 2 191 1 333 1 336 1 236 2 
246 1 161 1 275 1 163 4 85 1 252 1 168 1 302 1 344 4 333 1 203 1 336 1 236 4 
275 2 163 2 27 1 252 1 302 1 328 1 121 1 11 1 344 2 68 1 333 1 282 1 236 2 134 1 
168 1 284 1 201 1 275 1 344 1 163 1 16 1 174 1 236 1 252 1 
302 1 275 1 56 1 344 2 163 2 333 1 240 1 173 1 336 1 236 2 252 1 
246 1 275 2 163 5 85 1 3 1 252 2 168 1 302 3 56 1 344 5 68 1 333 2 203 1 336 1 236 4 348 1 
246 1 275 2 163 5 85 1 252 2 168 1 302 3 56 1 344 5 68 1 333 2 203 1 336 1 236 4 348 1 23 1 
274 1 309 1 275 1 323 2 163 1 276 1 27 1 252 1 168 1 302 1 212 1 344 1 333 1 59 1 92 2 236 1 113 1 296 1 
275 2 163 1 27 1 252 1 302 1 315 1 344 1 191 1 68 1 333 1 282 1 236 1 134 1 
79 1 155 1 10 1 276 1 242 1 
349 1 341 1 248 2 4 1 276 1 299 1 242 1 186 1 368 1 120 1 109 1 79 2 10 2 155 2 257 1 171 1 281 2 317 1 306 1 
43 1 79 1 10 1 323 1 92 1 241 1 242 1 113 1 273 1 
4 1 242 1 306 1 
149 1 225 1 47 1 193 1 
31 1 150 1 225 1 47 1 193 1 335 1 7 1 
31 1 64 1 178 1 
150 3 232 2 7 1 31 3 18 1 256 1 225 1 58 1 47 1 193 1 335 1 71 1 
31 2 150 2 225 1 50 1 330 1 47 1 193 1 335 1 7 1 
175 1 364 1 31 1 150 1 18 1 284 1 16 1 244 1 193 1 335 1 7 1 
31 1 150 1 18 1 47 1 193 1 335 1 7 1 
31 1 150 1 18 1 225 1 47 2 335 1 7 1 
150 2 352 1 7 2 211 1 31 2 18 1 47 1 373 1 193 1 335 2 
175 1 150 3 105 1 7 1 31 3 18 1 225 1 330 2 290 1 47 1 335 1 193 2 21 1 
150 2 364 1 284 2 152 1 95 1 16 1 7 1 31 2 18 1 201 1 225 1 330 1 47 1 193 1 335 1 
175 1 150 4 50 1 105 1 142 1 7 2 31 4 18 1 225 1 330 2 47 1 335 2 193 2 
31 1 150 1 18 1 225 1 47 1 193 1 335 1 7 1 
175 1 150 4 232 1 105 1 7 1 31 4 329 1 256 1 225 2 330 2 47 2 335 1 193 3 71 1 
150 2 277 1 7 1 31 2 187 1 18 1 225 1 330 1 47 1 193 1 335 1 204 1 
150 3 96 1 232 2 7 1 31 3 18 1 256 2 225 1 47 1 193 1 335 1 71 1 
339 1 193 2 229 2 12 1 
31 1 150 1 44 1 18 1 335 1 7 1 
31 2 150 2 18 1 225 1 330 1 290 1 47 1 193 1 335 1 7 1 
353 1 
31 1 150 1 18 1 225 1 47 1 193 1 335 1 7 1 
31 3 150 3 18 1 225 1 330 1 290 1 232 1 47 1 193 1 335 1 7 1 
175 1 329 1 105 1 193 1 
47 1 193 1 

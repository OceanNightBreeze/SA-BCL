#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 24 110 73 173 159 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 24 110 73 173 159 344 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 24 110 73 173 159 344 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 24 110 73 173 159 344 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 259 73 173 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 24 110 73 173 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 2 151 3 133 1 168 1 72 2 128 1 235 1 253 2 323 1 304 1 185 3 80 1 224 1 
151 9 133 1 62 1 235 1 291 1 93 2 185 9 365 1 161 2 345 1 143 2 27 2 28 2 168 1 72 2 219 1 247 1 128 6 104 1 252 1 253 5 323 3 304 4 80 1 224 2 55 1 83 1 356 1 
151 9 133 1 62 1 235 1 291 1 93 2 185 9 365 1 161 2 345 1 143 2 27 2 28 2 168 1 72 2 219 1 247 1 128 6 104 1 252 1 253 5 323 3 304 4 80 1 224 2 55 1 83 1 356 1 
151 10 133 1 62 1 235 1 291 1 93 2 185 10 365 1 161 2 345 1 143 2 27 2 28 2 168 1 72 2 219 1 247 1 128 7 104 1 252 1 253 6 323 4 304 5 80 1 224 2 55 1 83 1 356 1 
151 7 133 1 62 1 235 1 291 1 93 2 185 7 365 1 161 1 143 2 27 2 28 2 168 1 72 2 219 1 247 1 128 4 104 1 252 1 253 4 323 2 304 3 80 1 224 2 55 1 83 1 356 1 
345 1 143 1 151 4 133 1 27 1 28 1 168 1 72 1 247 1 104 1 128 3 93 1 253 3 323 1 304 2 185 4 161 2 80 1 
143 1 151 2 133 1 333 1 27 1 168 1 72 1 219 1 138 1 93 1 253 1 221 1 185 2 80 1 224 1 83 1 
345 1 143 2 151 9 98 1 39 1 133 1 27 1 28 1 168 1 72 2 247 1 104 1 128 7 235 1 93 1 253 5 323 3 304 4 185 9 161 2 80 1 55 1 224 1 356 1 
345 1 143 2 151 9 98 1 39 1 133 1 27 1 28 1 168 1 72 2 247 1 104 1 128 7 235 1 93 1 253 5 323 3 304 4 185 9 161 2 80 1 55 1 224 1 356 1 
296 1 134 1 118 1 61 1 102 1 310 1 322 1 77 1 184 1 44 1 379 1 149 1 8 1 69 1 
340 1 
339 1 340 1 20 1 
273 2 340 1 155 1 
184 2 118 2 44 2 102 2 149 2 8 2 310 1 41 1 
58 1 308 2 205 1 336 1 118 2 120 2 310 1 41 1 208 1 90 1 122 1 210 1 234 1 139 1 212 1 4 1 184 3 44 2 8 2 142 1 46 1 369 1 297 1 274 1 188 1 71 1 101 1 299 2 349 1 102 3 103 2 76 2 147 1 175 1 149 2 82 1 56 1 
296 1 322 1 184 1 134 1 118 1 44 1 102 1 149 1 8 1 310 1 
116 1 240 1 339 1 340 1 322 1 184 1 200 1 191 1 102 1 379 1 149 1 69 1 14 1 226 1 
240 1 339 1 340 1 322 1 184 1 118 1 200 1 44 1 102 1 379 2 149 1 8 1 69 2 14 1 226 1 
180 1 77 1 342 1 379 1 69 1 
180 1 339 1 340 1 77 1 29 1 379 2 69 2 327 1 
180 1 379 1 69 1 
180 1 339 1 340 1 77 1 186 1 379 2 69 2 327 1 
214 1 257 2 57 2 40 1 60 1 337 1 300 1 105 1 109 1 180 2 339 1 340 1 77 2 43 1 256 2 379 5 316 1 69 5 327 1 
46 1 369 1 297 1 308 1 188 1 298 1 349 1 118 1 102 2 373 1 103 1 208 1 76 1 139 1 4 1 184 2 343 1 149 1 8 1 142 1 
158 1 178 1 343 1 
20 1 41 1 
298 1 184 3 118 3 44 1 102 3 149 3 8 3 41 1 
322 1 184 1 134 1 118 1 102 1 149 1 8 1 
132 1 322 1 313 1 184 1 118 1 44 1 102 1 149 1 8 1 
58 1 331 1 308 1 336 1 118 3 120 2 310 1 41 1 208 1 90 1 210 1 234 1 139 1 4 1 212 1 313 1 184 4 44 2 8 3 142 1 69 1 240 1 46 1 369 1 297 1 274 1 188 1 101 1 298 1 299 1 349 1 102 4 373 1 103 1 281 1 76 1 322 1 147 1 200 1 149 3 379 1 82 1 226 1 14 1 
184 2 298 1 118 1 191 1 271 1 102 2 149 2 8 1 41 1 
240 1 298 2 118 3 102 3 373 1 375 1 281 1 340 1 313 1 322 1 184 3 44 1 200 1 379 1 149 3 8 3 69 1 14 1 226 1 
298 1 118 2 178 1 102 2 313 1 184 2 44 1 343 1 149 2 8 2 
46 1 297 1 369 1 308 1 188 1 349 1 102 1 103 1 41 1 208 1 76 1 139 1 4 1 184 1 142 1 
46 1 369 1 308 1 188 1 288 1 349 1 102 1 103 1 41 1 208 1 51 1 76 1 139 1 4 1 184 1 
58 1 0 1 336 1 178 2 120 2 122 2 210 2 234 1 158 2 24 1 7 1 343 2 242 1 274 1 244 1 101 1 299 4 170 1 107 1 146 1 147 1 198 1 283 1 305 1 
322 1 184 1 118 1 102 1 149 1 8 1 81 1 226 1 
358 1 298 2 118 4 191 1 102 5 373 1 41 1 351 1 313 1 184 5 44 1 271 1 149 5 8 4 
322 1 184 2 134 1 118 2 102 2 149 2 8 2 81 1 
132 1 118 1 102 2 41 2 313 1 184 2 44 1 149 2 8 1 
46 1 297 1 369 1 216 1 308 1 188 1 349 1 102 1 103 1 41 1 208 1 76 1 139 1 4 1 184 1 142 1 
172 1 315 1 
172 1 315 1 
153 1 278 1 
153 1 278 1 
153 1 278 1 
209 1 172 1 315 1 
209 1 172 1 315 1 
209 1 172 1 315 1 
10 1 172 1 315 1 
10 1 172 1 315 1 
10 1 172 1 315 1 
363 1 267 1 153 1 172 2 315 2 278 1 
195 1 172 1 315 1 
215 1 307 1 70 1 9 1 374 3 154 1 248 2 363 1 34 2 340 1 211 2 129 2 172 2 66 1 315 2 364 2 379 2 141 1 69 2 
118 2 41 1 63 1 64 1 211 1 341 1 184 2 315 1 8 2 69 1 96 1 9 1 102 2 374 1 248 1 195 1 34 1 196 1 302 1 129 1 172 1 379 1 149 2 284 1 
93 1 27 1 28 1 
93 1 27 1 221 1 
286 1 140 1 27 3 221 1 28 2 119 1 
15 1 286 1 140 1 27 2 221 1 28 1 
286 1 140 2 27 2 221 1 28 1 
84 1 57 1 257 1 40 3 0 1 337 2 136 1 155 1 180 1 24 1 339 1 340 2 7 1 366 2 69 5 96 1 97 1 273 3 370 1 11 1 145 1 109 1 196 1 110 1 321 2 77 4 111 2 256 1 283 1 379 5 284 1 327 1 
84 2 257 2 57 2 86 5 40 8 0 3 260 1 337 6 136 2 155 3 180 6 24 3 92 1 339 1 340 5 342 5 7 3 162 1 366 6 96 4 69 9 367 1 273 9 189 1 145 1 105 1 109 1 52 1 110 3 77 7 111 6 256 2 283 3 379 9 327 1 
84 1 57 1 257 1 40 3 0 1 337 2 136 1 155 2 339 1 24 1 340 3 7 1 366 2 69 3 96 1 273 4 370 1 11 1 105 1 110 1 321 1 77 2 111 2 256 1 379 3 283 1 
84 1 57 1 257 1 40 5 0 2 337 4 136 1 155 3 339 1 24 2 340 4 7 2 366 4 69 4 96 2 367 1 273 7 370 1 189 1 11 1 105 1 52 1 110 2 321 2 77 3 111 4 256 1 379 4 283 2 
95 1 
139 1 183 1 20 1 
139 1 35 1 
369 1 139 1 
91 1 46 1 369 1 85 1 183 2 139 3 
46 1 369 1 139 1 
139 1 372 1 
227 1 272 1 99 1 0 1 371 1 299 7 170 3 1 1 233 1 210 3 122 4 146 2 222 1 164 1 223 1 283 1 294 2 295 1 
329 3 227 2 58 1 0 4 336 1 120 2 1 1 233 1 210 15 122 16 24 3 94 1 268 1 7 3 164 5 294 3 293 1 295 2 123 1 272 1 99 1 101 1 371 2 299 31 190 1 170 10 33 1 376 4 353 1 110 3 146 5 147 1 223 2 283 4 
227 1 58 2 0 1 336 2 120 4 1 1 233 1 122 5 210 4 164 1 294 2 293 1 295 1 166 1 272 1 346 1 101 2 299 9 371 1 170 4 146 3 147 2 223 1 283 1 
227 1 272 1 99 1 0 1 371 1 299 7 170 3 1 1 233 1 210 3 122 4 146 2 164 1 223 1 283 1 294 2 295 1 
227 1 272 1 99 1 0 1 371 1 299 7 170 3 1 1 233 1 210 3 122 4 146 2 164 1 223 1 283 1 294 2 295 1 
151 1 308 1 133 1 88 1 119 1 207 1 89 1 312 1 93 1 314 1 185 1 143 1 241 1 188 1 27 2 28 1 144 1 349 1 72 1 103 1 76 1 221 1 224 1 325 1 326 1 115 1 
151 2 308 1 133 1 335 1 88 1 119 1 207 1 89 1 312 1 93 1 314 1 185 2 143 1 188 1 27 2 28 1 144 1 349 1 168 1 72 1 103 1 128 1 76 1 253 1 221 1 80 1 224 1 325 1 326 1 115 1 
151 3 308 1 88 1 119 1 207 1 89 1 312 1 93 1 185 3 143 1 239 1 241 1 188 1 27 2 28 1 144 1 349 1 168 1 72 1 103 1 128 2 76 1 253 1 221 1 79 1 80 1 224 1 325 1 326 1 115 1 
151 2 241 1 308 1 27 2 188 1 88 1 28 1 349 1 144 1 168 1 119 1 207 1 103 1 128 2 312 1 76 1 93 1 253 1 221 1 185 2 79 1 80 1 224 1 325 1 326 1 
151 1 359 1 308 1 289 1 290 1 208 1 2 1 312 2 139 1 185 1 143 1 239 1 124 1 319 1 369 1 188 1 349 1 144 2 72 1 103 1 76 1 224 2 325 2 
38 1 
177 1 84 1 228 4 40 2 334 2 337 2 231 2 290 1 232 2 180 6 339 1 139 1 340 2 184 1 187 1 240 1 188 1 349 1 191 1 102 1 103 2 194 1 301 1 12 2 109 1 254 1 255 1 200 1 256 1 149 1 14 1 116 1 257 1 57 1 18 2 308 2 19 1 361 1 155 2 208 2 269 1 69 5 213 1 319 1 125 1 273 2 369 1 280 2 76 2 322 1 324 2 378 1 379 5 327 3 226 1 
213 1 116 1 240 1 228 2 19 1 191 1 102 1 194 1 301 1 180 2 322 1 324 1 184 1 200 1 269 1 186 1 379 3 149 1 69 3 327 1 14 1 226 1 
213 1 116 1 240 1 228 3 19 1 334 1 191 1 102 1 194 1 301 1 180 1 339 1 340 1 322 1 184 1 200 1 269 1 186 1 379 3 149 1 69 3 327 1 14 1 226 1 
116 1 228 3 19 1 18 1 334 1 180 2 339 1 340 1 184 1 269 1 186 1 69 3 213 1 240 1 191 1 102 1 194 1 301 1 322 1 324 1 200 1 149 1 379 3 327 1 226 1 14 1 
116 1 57 1 257 1 228 6 40 1 332 1 19 1 18 4 334 4 337 1 135 1 231 2 155 2 232 2 180 7 339 5 340 5 184 1 269 1 186 1 69 5 213 1 240 1 191 1 102 1 194 1 280 2 301 1 12 2 109 1 251 1 75 1 322 1 324 4 254 1 255 1 355 1 200 1 256 1 149 1 379 5 327 3 226 1 14 1 
228 4 40 1 334 2 337 1 231 2 232 2 180 4 339 1 340 2 184 1 240 1 191 1 102 1 194 1 301 1 109 1 12 2 254 1 255 1 200 1 256 1 149 1 14 1 116 1 257 1 57 1 19 1 18 2 155 2 361 1 269 1 69 4 213 1 273 2 280 2 322 1 324 2 379 4 226 1 327 2 
116 1 228 4 257 1 57 1 18 2 40 1 19 1 332 1 334 2 337 1 231 2 155 2 232 2 180 4 339 1 340 1 184 1 269 1 69 4 213 1 240 1 191 1 102 1 194 1 280 2 301 1 12 2 109 1 251 1 322 1 324 2 254 1 255 1 355 1 200 1 256 1 149 1 379 4 327 2 226 1 14 1 
116 1 228 4 257 1 57 1 18 2 40 1 19 1 332 1 334 2 337 1 231 2 155 2 232 2 180 4 339 1 340 1 184 1 269 1 69 4 213 1 240 1 191 1 102 1 194 1 280 2 301 1 12 2 109 1 251 1 322 1 324 2 254 1 255 1 355 1 200 1 256 1 149 1 379 4 327 2 226 1 14 1 
116 1 228 4 257 1 57 1 18 2 40 1 19 1 334 2 204 2 337 1 231 2 180 4 181 1 339 1 340 1 184 1 269 1 69 4 213 1 240 1 273 2 47 1 191 1 102 1 194 1 280 2 301 1 32 1 109 1 322 1 324 2 255 1 355 1 200 1 256 1 149 1 379 4 114 2 327 2 226 1 14 1 
116 1 57 1 257 1 228 5 40 1 332 1 19 1 18 3 334 3 337 1 135 1 231 2 155 2 232 2 180 5 339 1 340 1 184 1 269 1 69 4 213 1 240 1 191 1 102 1 194 1 280 2 301 1 12 2 109 1 251 1 322 1 324 3 254 1 255 1 355 1 200 1 256 1 149 1 379 4 327 2 226 1 14 1 
116 1 57 1 257 1 228 5 40 1 332 1 19 1 18 3 334 3 337 1 135 1 231 2 155 2 232 2 180 5 339 1 340 1 184 1 269 1 69 4 213 1 240 1 191 1 102 1 194 1 280 2 301 1 12 2 109 1 251 1 322 1 324 3 254 1 255 1 355 1 200 1 256 1 149 1 379 4 327 2 226 1 14 1 
228 4 40 1 334 2 337 1 231 2 180 4 339 1 340 1 184 1 240 1 191 1 102 1 194 1 301 1 109 1 255 1 200 1 256 1 149 1 114 2 14 1 116 1 257 1 57 1 19 1 18 2 204 2 361 1 269 1 69 4 213 1 273 2 280 2 32 1 322 1 324 2 379 4 226 1 327 2 
58 1 0 1 336 1 118 1 178 1 120 2 122 1 210 2 158 1 234 1 24 1 313 1 184 1 7 1 44 1 343 1 8 1 274 1 101 1 299 3 276 1 102 1 170 1 279 1 110 1 146 1 147 1 149 1 283 1 
272 1 58 1 274 1 0 1 244 1 20 1 101 1 336 1 299 6 371 1 178 1 120 2 170 2 1 1 41 2 233 1 210 3 122 3 158 1 234 1 146 2 147 1 343 1 294 1 283 1 295 1 
329 3 58 2 0 1 336 2 178 4 120 4 41 1 90 1 210 6 122 8 234 1 158 11 24 2 94 1 7 1 164 1 343 11 237 1 238 1 274 2 71 1 101 2 299 14 170 2 279 1 106 1 376 3 353 1 110 2 146 1 112 1 147 2 283 2 
152 1 58 1 308 1 336 1 118 1 178 1 120 2 41 1 208 1 90 1 210 1 122 1 234 1 139 1 4 1 184 2 292 1 8 1 142 1 46 1 369 1 297 1 216 1 274 1 188 1 167 1 101 1 298 1 71 1 349 1 299 2 102 2 373 1 103 1 279 1 76 1 147 1 149 1 
0 3 336 3 178 7 1 1 41 2 233 1 90 1 234 3 42 2 139 2 4 2 184 3 7 2 343 7 294 1 295 1 8 1 142 2 241 1 46 2 297 2 188 2 298 1 101 3 299 20 349 2 102 3 103 3 110 2 146 4 147 3 149 1 58 3 308 3 118 1 120 6 208 1 210 10 122 10 158 7 24 2 212 2 65 1 164 4 317 1 272 1 369 2 274 3 71 1 371 1 126 1 31 2 373 1 279 1 170 8 76 3 171 2 78 2 283 3 
58 1 274 1 244 1 101 1 336 1 299 2 178 1 120 2 170 1 122 2 158 1 234 1 24 1 147 1 164 1 343 1 283 1 305 1 
58 1 274 1 244 1 0 1 101 1 336 1 299 2 178 1 120 2 170 1 107 1 210 2 158 1 234 1 146 1 147 1 7 1 343 1 
58 1 0 1 336 1 178 2 120 2 122 2 210 2 234 1 158 2 24 1 7 1 343 2 164 1 274 1 244 1 101 1 299 4 170 2 110 1 146 1 147 1 283 1 
58 1 274 1 101 1 336 1 299 2 178 1 120 2 170 1 157 1 122 2 158 1 234 1 24 1 147 1 164 1 343 1 283 1 305 1 
58 1 274 1 0 1 101 1 336 1 299 2 178 1 120 2 170 1 107 1 157 1 210 2 158 1 234 1 146 1 147 1 7 1 343 1 
58 1 0 1 336 1 178 2 120 2 157 1 122 2 210 2 234 1 158 2 24 1 7 1 343 2 164 1 274 1 101 1 299 4 170 2 110 1 146 1 147 1 283 1 
58 1 0 1 336 1 178 2 120 2 122 2 210 2 234 1 158 2 24 1 7 1 343 2 164 1 274 1 101 1 299 4 170 2 110 1 146 1 147 1 283 1 
58 1 308 1 336 1 120 2 41 1 208 1 90 1 122 1 210 1 234 1 139 1 4 1 212 1 184 1 142 1 46 1 369 1 297 1 274 1 188 1 71 1 101 1 299 2 349 1 102 1 103 1 76 1 147 1 
58 1 308 1 288 1 336 1 120 2 41 1 208 1 90 1 122 1 210 1 234 1 139 1 4 1 184 1 46 1 369 1 274 1 188 1 71 1 101 1 299 2 349 1 102 1 103 1 51 1 76 1 303 1 147 1 
58 1 0 1 336 1 178 2 120 2 122 2 210 2 234 1 158 2 24 1 7 1 343 2 164 1 274 1 101 1 299 4 279 1 170 2 110 1 146 1 147 1 283 1 
58 1 308 1 0 1 335 1 336 1 178 2 120 2 210 2 122 2 158 2 234 1 24 1 139 1 4 1 212 1 184 1 7 1 164 1 343 2 142 1 46 1 297 1 369 1 274 1 188 1 101 1 299 4 349 1 102 1 170 2 103 1 171 1 76 1 110 1 146 1 147 1 283 1 
58 1 0 1 336 1 118 1 178 1 120 2 210 1 122 2 234 1 158 1 24 1 313 1 184 1 7 1 44 1 164 1 343 1 8 1 274 1 101 1 299 3 246 1 102 1 170 1 279 1 110 1 147 1 149 1 283 1 
150 1 58 2 308 8 335 1 205 2 336 2 263 1 118 1 290 1 120 4 121 1 265 1 208 2 90 1 157 1 122 1 210 1 234 2 139 3 184 1 8 1 319 1 241 1 369 2 274 2 244 1 188 2 298 1 101 2 71 1 349 2 299 2 102 1 127 1 103 8 76 7 147 2 197 1 149 1 
329 1 58 2 0 3 336 2 338 1 120 4 210 10 122 9 24 3 159 1 94 1 6 1 7 3 163 2 164 3 344 1 346 1 368 1 348 1 101 2 299 19 170 6 376 2 352 2 353 1 110 3 53 1 146 3 147 2 283 3 
329 2 58 2 0 1 259 1 336 2 120 4 210 8 122 9 24 2 159 2 6 2 7 1 293 1 344 1 346 1 368 1 101 2 299 17 192 1 170 1 50 1 73 1 376 2 352 2 353 2 110 2 146 1 147 2 173 1 283 2 
329 3 58 3 0 3 259 1 336 3 338 1 120 6 311 1 210 15 122 15 24 4 159 1 94 1 6 2 7 3 163 1 164 2 293 1 344 1 346 1 368 1 101 3 299 30 192 1 170 4 50 1 73 1 376 4 352 3 353 3 110 4 53 1 146 2 173 1 147 3 283 4 
329 3 58 3 0 3 259 1 336 3 338 1 120 6 311 1 210 15 122 15 24 4 159 1 94 1 6 2 7 3 163 1 164 2 293 1 344 1 346 1 368 1 101 3 299 30 192 1 170 5 50 1 73 1 376 4 352 3 353 3 110 4 53 1 146 3 173 1 147 3 283 4 
329 4 58 1 0 6 259 1 336 1 120 2 1 1 233 1 210 19 122 22 24 6 159 1 94 2 6 1 7 5 164 4 294 1 295 1 344 1 272 1 346 1 368 1 101 1 371 1 299 41 192 1 170 10 50 1 106 2 73 1 376 4 352 2 353 2 110 6 146 6 173 1 147 1 283 7 
215 1 307 1 70 1 9 1 374 2 248 1 363 1 34 1 340 1 211 1 129 1 172 1 66 1 315 1 364 1 379 1 141 1 69 1 
215 1 307 1 70 1 9 1 374 2 248 1 363 1 34 1 340 1 211 1 129 1 172 1 66 1 315 1 364 1 379 1 141 1 69 1 
215 1 307 1 70 1 9 1 374 2 248 1 363 1 34 1 340 1 211 1 129 1 172 1 66 1 315 1 364 1 379 1 141 1 69 1 
209 1 267 1 179 1 
209 1 267 1 179 1 
354 1 10 1 
267 1 354 1 10 1 
64 1 302 1 
118 2 41 1 63 1 64 1 211 1 341 1 184 2 66 1 364 1 315 1 8 2 69 1 96 1 245 1 102 2 374 1 248 1 195 1 34 1 196 1 302 1 129 1 77 1 172 1 379 1 149 2 284 1 
195 1 341 1 
249 1 34 1 87 1 129 1 211 1 172 1 270 1 315 1 248 1 
209 1 179 1 
267 1 354 1 10 1 
363 1 307 1 34 1 70 1 129 1 211 1 172 1 315 1 318 1 248 1 
58 1 308 2 203 1 205 2 336 1 120 2 90 1 122 1 210 1 234 1 139 1 184 2 369 1 274 1 188 1 101 1 71 1 349 1 299 2 102 2 127 1 103 2 279 1 250 1 76 2 174 1 147 1 197 1 13 1 282 1 149 2 
241 1 308 1 26 1 27 2 188 1 217 1 262 1 28 1 349 1 119 1 103 1 207 1 89 1 76 1 93 1 221 1 325 1 326 1 
241 1 308 2 26 1 27 2 188 1 335 1 217 1 262 1 28 1 349 1 119 1 103 2 207 1 89 1 76 2 93 1 221 1 325 1 326 1 
241 1 308 1 27 2 188 1 262 1 28 1 349 1 119 1 103 1 207 1 89 1 76 1 93 1 221 1 68 1 325 1 326 1 
319 1 369 1 308 1 188 1 59 1 217 1 349 1 289 1 290 1 103 1 208 1 76 1 139 1 325 1 
201 1 
273 10 40 5 0 2 337 5 218 2 155 5 110 2 24 2 340 5 111 5 130 1 7 2 78 1 366 5 283 2 
214 1 339 1 40 1 340 1 20 1 337 1 43 1 
57 1 257 1 40 1 337 1 155 1 232 1 180 1 339 1 340 2 69 1 273 1 12 1 109 1 254 1 256 1 379 1 327 1 
177 1 84 2 40 9 335 1 0 2 287 1 230 2 337 8 137 2 91 1 180 5 339 2 139 10 183 2 340 8 43 1 7 2 46 3 188 3 100 1 349 4 103 3 109 4 110 2 111 6 256 4 148 1 14 2 257 4 57 4 308 3 202 1 155 6 208 1 24 2 366 6 69 5 214 1 369 3 273 12 218 2 30 2 372 2 169 2 74 2 76 3 35 3 130 2 78 2 131 2 379 5 283 2 285 1 327 3 
329 1 57 2 257 2 40 5 0 1 259 1 337 3 155 3 180 1 24 1 339 1 340 4 7 1 67 1 366 4 69 1 273 6 218 1 192 1 50 1 109 2 73 1 376 1 353 1 110 1 111 4 173 1 256 2 379 1 283 1 327 1 
57 1 257 1 17 1 332 1 40 2 0 1 134 1 337 2 118 1 61 1 310 1 184 1 44 1 295 1 8 1 69 1 296 1 272 1 371 1 218 2 102 1 109 1 322 1 130 1 256 1 379 1 283 2 149 1 
214 1 257 1 57 1 40 1 337 1 109 1 339 1 340 1 43 1 256 1 
58 1 308 1 336 1 118 2 120 2 310 1 41 1 208 1 90 1 210 1 234 1 139 1 212 1 4 1 184 3 44 2 8 2 142 1 46 1 297 1 369 1 274 1 188 1 101 1 299 1 349 1 102 3 103 1 76 1 147 1 149 2 82 1 
84 1 177 1 257 1 57 1 273 4 40 1 337 2 155 2 109 1 339 2 340 4 111 2 366 2 256 1 294 1 
180 1 339 1 340 1 379 1 69 1 327 1 
84 2 177 2 57 2 257 2 308 4 40 2 287 1 337 2 290 1 208 2 180 4 139 1 187 1 165 1 69 3 45 1 125 1 319 1 369 1 188 1 349 1 103 4 105 1 109 1 76 4 256 2 379 3 285 2 327 2 
64 1 34 1 70 1 129 1 5 1 
347 1 34 1 129 1 
347 1 34 1 129 1 
347 1 34 1 129 1 
34 1 129 1 277 1 
34 1 129 1 277 1 
34 1 129 1 277 1 
34 1 129 1 
172 1 315 1 
272 1 346 1 58 1 17 1 0 2 336 1 101 1 371 2 299 10 120 2 170 5 122 5 210 5 146 3 147 1 164 2 283 2 295 2 
346 1 58 1 101 1 336 1 299 2 120 2 170 1 122 2 24 1 147 1 164 1 283 1 
346 1 58 1 0 1 101 1 336 1 299 4 120 2 170 2 210 2 122 2 110 1 24 1 146 1 147 1 7 1 164 1 283 1 
346 1 58 3 48 1 101 3 336 3 299 3 371 1 120 6 170 2 210 2 122 1 53 1 146 1 147 3 164 1 293 1 295 1 
329 3 58 5 0 5 336 5 120 10 1 1 233 1 210 18 122 16 24 3 94 1 7 3 164 5 294 1 293 2 295 3 123 1 272 2 346 1 243 1 48 1 101 5 371 3 190 1 299 34 170 12 33 1 376 4 353 1 110 3 53 1 146 7 147 5 283 5 
272 1 58 2 0 1 101 2 336 2 299 8 371 1 120 4 170 3 1 1 233 1 210 4 122 4 146 2 147 2 164 1 294 1 283 1 293 1 295 1 
272 1 0 1 20 1 371 1 299 6 1 1 170 2 233 1 210 3 122 3 146 2 294 1 283 1 295 1 
58 1 243 1 0 1 101 1 336 1 299 4 120 2 170 2 210 2 122 2 110 1 24 1 146 1 147 1 7 1 164 1 283 1 
329 1 0 1 299 7 170 2 210 4 122 3 376 2 353 1 110 1 24 1 146 1 94 1 7 1 164 1 283 1 
329 2 58 2 0 3 336 2 120 4 1 1 233 1 122 11 210 12 24 2 94 1 7 2 164 4 294 1 293 2 295 2 238 1 272 1 48 1 101 2 371 2 299 23 170 9 106 1 376 2 110 2 146 5 147 2 283 3 
210 1 376 1 299 1 
329 1 122 1 299 1 
58 1 243 1 0 1 336 1 101 1 299 6 120 2 170 3 210 3 122 3 110 1 24 1 146 2 147 1 7 1 78 1 164 1 283 1 
329 1 346 1 58 1 0 1 259 1 101 1 336 1 299 10 192 1 120 2 170 1 50 1 73 1 122 6 210 4 376 1 24 2 110 2 353 1 146 1 147 1 173 1 7 1 283 2 
272 1 0 1 299 6 371 1 170 2 122 3 210 3 146 1 164 1 283 1 295 1 
58 1 48 1 101 1 336 1 371 1 299 3 120 2 170 2 1 1 233 1 122 1 210 2 146 1 147 1 164 1 293 1 295 1 
329 1 58 1 0 1 336 1 120 2 1 1 233 1 210 4 122 4 294 1 295 1 272 1 346 1 101 1 299 8 371 1 170 2 376 1 353 1 146 2 173 1 147 1 283 1 
329 1 58 2 0 1 336 2 120 4 1 1 233 1 210 5 122 6 24 1 94 1 164 1 294 1 295 1 272 1 346 1 243 1 101 2 371 1 299 11 170 3 376 2 353 1 110 1 146 2 173 1 147 2 283 2 
329 1 346 1 58 2 0 1 259 1 101 2 336 2 299 11 192 1 120 4 170 1 50 1 73 1 122 6 210 5 376 1 24 2 110 2 353 1 146 1 147 2 173 1 7 1 293 1 283 2 
329 1 346 1 58 1 0 1 259 1 101 1 336 1 299 10 192 1 120 2 170 1 50 1 73 1 122 6 210 4 376 1 24 2 110 2 353 1 146 1 147 1 173 1 7 1 283 2 
329 1 58 1 0 1 336 1 120 2 1 1 233 1 210 4 122 4 294 1 295 1 272 1 346 1 101 1 299 8 371 1 170 2 376 1 353 1 146 2 173 1 147 1 283 1 
329 1 346 1 58 1 0 1 259 1 101 1 336 1 299 10 192 1 120 2 170 1 50 1 73 1 122 6 210 4 376 1 24 2 110 2 353 1 146 1 147 1 173 1 7 1 283 2 
329 1 58 3 0 1 259 1 336 3 120 6 210 5 122 6 24 2 7 1 293 1 346 1 243 1 101 3 299 11 192 1 170 1 50 1 73 1 376 1 353 1 110 2 146 1 173 1 147 3 283 2 
329 1 58 3 0 1 259 1 336 3 120 6 210 5 122 6 24 2 7 1 293 1 346 1 101 3 299 11 192 1 170 2 50 1 73 1 376 1 353 1 110 2 53 1 146 2 173 1 147 3 283 2 
272 1 0 1 299 7 371 3 1 1 170 6 233 2 210 4 122 3 146 3 164 3 283 1 295 3 
329 1 58 3 0 1 259 1 336 3 120 6 210 5 122 6 24 2 7 1 293 1 346 1 101 3 299 11 192 1 170 1 50 1 73 1 376 1 353 1 110 2 53 1 146 1 173 1 147 3 283 2 
54 1 184 1 191 1 102 1 271 1 149 1 41 1 
191 1 102 1 264 1 23 1 41 1 182 1 3 1 54 1 184 1 271 1 149 1 25 1 
46 1 369 1 308 2 275 1 188 1 261 1 21 1 360 1 349 2 126 1 103 2 76 2 139 1 285 1 
76 1 93 1 308 1 27 1 221 1 188 1 349 1 326 1 103 1 208 1 
241 1 369 1 308 2 335 1 188 1 349 1 127 1 103 2 76 2 139 1 174 1 
319 1 369 1 76 1 139 1 308 1 188 1 20 1 349 1 290 1 103 1 208 1 
46 1 369 1 308 1 188 1 298 1 349 1 118 1 102 2 103 1 41 1 208 1 76 1 139 1 4 1 184 2 149 1 8 1 142 1 
46 2 369 2 308 1 188 1 298 1 349 1 118 1 372 1 102 2 103 1 41 1 74 1 76 1 139 3 322 1 4 1 184 2 200 1 149 2 8 2 142 1 226 1 285 1 
308 2 288 1 118 1 41 1 139 3 4 1 184 2 8 2 46 2 369 2 188 1 298 1 349 1 102 2 372 1 103 2 74 1 76 2 377 1 322 1 200 1 149 2 285 1 226 1 
308 3 117 1 208 1 180 1 183 1 139 4 339 1 340 1 69 2 46 1 369 1 188 1 349 1 372 1 193 1 103 3 74 1 76 3 377 1 35 1 379 2 285 1 14 1 
46 1 369 1 308 3 188 1 230 1 349 1 372 1 103 3 208 1 180 1 74 1 76 3 377 1 339 1 139 4 183 1 340 1 35 1 379 2 69 2 14 1 285 1 
76 1 308 1 188 1 349 1 103 1 121 1 
150 1 241 1 46 1 369 2 308 7 335 1 275 1 188 2 205 1 263 1 21 1 349 3 127 1 121 1 103 7 265 1 208 2 91 1 76 6 139 3 199 1 
58 2 308 1 0 1 335 1 336 2 118 1 178 1 120 4 1 1 41 2 233 1 210 3 122 3 158 1 234 2 139 1 4 1 212 1 184 2 343 1 294 1 295 1 8 1 142 1 272 1 46 1 369 1 297 1 274 2 188 1 101 2 298 1 299 6 371 1 349 1 102 2 31 1 170 2 279 1 103 1 250 1 76 1 171 1 146 2 147 2 283 1 149 1 
57 2 257 2 40 1 308 1 287 1 230 1 337 1 137 1 208 1 180 2 339 1 139 2 183 1 340 1 43 1 69 3 214 1 30 1 103 1 109 2 76 1 35 1 77 1 256 2 131 1 379 3 14 1 327 1 
46 1 369 1 308 2 335 1 188 1 349 2 121 1 103 2 91 1 76 2 183 1 139 2 148 1 
46 1 369 1 308 1 188 1 288 1 298 1 349 1 118 1 102 2 103 1 41 1 208 1 76 1 139 1 4 1 184 2 149 1 8 1 
46 1 369 1 308 1 275 1 188 1 21 1 349 2 103 1 91 1 76 1 139 1 199 1 285 1 
319 1 369 1 258 1 308 4 335 1 188 1 349 1 290 1 103 4 208 1 76 4 377 1 139 1 
319 1 150 1 369 2 258 1 308 5 335 1 188 2 349 2 263 1 290 1 127 1 103 5 208 1 76 4 139 3 285 1 
319 1 369 2 258 1 308 5 335 1 188 2 349 2 263 1 290 1 127 1 103 5 208 1 76 4 139 3 160 1 285 1 
330 1 203 1 184 1 13 1 282 1 350 1 102 1 149 1 362 1 
330 1 37 1 220 1 
330 1 350 1 225 1 41 1 362 1 
328 1 240 1 330 1 350 2 41 1 220 1 362 2 281 1 339 1 340 1 322 1 77 1 200 1 37 1 379 2 69 2 225 2 14 1 226 1 
151 4 143 1 168 2 72 1 219 1 206 1 128 2 108 1 253 3 323 1 304 1 36 1 185 4 80 2 
357 1 143 1 151 2 39 1 133 1 168 1 72 1 128 1 253 1 185 2 80 1 176 1 
143 1 151 3 133 1 168 1 72 1 320 1 219 2 108 2 253 1 36 1 185 3 80 1 
306 1 253 2 229 2 113 1 
16 1 151 1 143 1 133 1 185 1 72 1 
151 2 143 1 253 1 133 1 185 2 168 1 80 1 72 1 55 1 128 1 
156 1 
151 1 143 1 253 1 133 1 185 1 168 1 80 1 72 1 
253 1 20 1 168 1 80 1 
151 1 143 1 253 1 185 1 168 1 80 1 72 1 
312 1 151 1 224 1 
143 1 151 3 133 1 22 1 168 1 72 1 219 2 108 1 253 1 185 3 36 1 80 1 
151 2 143 1 253 1 185 2 168 1 161 1 80 1 72 1 128 1 
151 1 143 1 93 1 253 1 133 1 27 1 304 1 28 1 185 1 72 1 247 1 
151 1 143 1 253 1 133 1 185 1 80 1 72 1 
151 1 143 1 133 1 185 1 168 1 80 2 72 1 
143 2 151 2 133 1 309 1 49 1 72 2 253 1 185 2 80 1 236 1 
143 1 151 3 133 1 168 1 72 1 128 2 253 2 323 1 304 1 185 3 80 1 55 1 356 1 
143 1 151 2 133 1 27 2 28 1 168 1 72 1 119 1 128 1 266 1 93 1 253 1 221 1 185 2 80 1 
143 2 151 4 345 1 133 1 168 1 72 2 128 2 253 2 323 1 304 1 185 4 161 1 80 1 
151 1 143 1 253 1 133 1 185 1 168 1 80 1 72 1 
151 3 143 1 253 1 133 1 185 3 168 1 80 1 72 1 55 1 219 1 128 1 
253 1 323 1 304 1 206 1 
253 1 80 1 

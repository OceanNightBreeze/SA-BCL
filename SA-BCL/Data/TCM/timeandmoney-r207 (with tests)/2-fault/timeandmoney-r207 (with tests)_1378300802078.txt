#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (92,271) (285,362) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (92,271) (285,362) (285,362) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (92,271) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (92,271) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (92,271) (285,362) (285,362) 45 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 1 279 1 105 2 256 1 65 1 361 1 262 1 299 1 190 5 66 1 283 1 264 2 191 9 192 4 334 1 30 9 217 3 197 2 313 2 169 2 170 2 295 1 148 6 59 1 37 1 126 1 228 1 207 2 
62 1 279 1 105 2 256 1 65 1 361 1 262 1 299 1 190 5 66 1 283 1 264 2 191 9 192 4 334 1 30 9 217 3 197 2 313 2 169 2 170 2 295 1 148 6 59 1 37 1 126 1 228 1 207 2 
62 1 279 1 105 2 256 1 65 1 361 1 262 1 299 1 190 6 66 1 283 1 264 2 191 10 192 5 334 1 30 10 217 4 197 2 313 2 169 2 170 2 295 1 148 7 59 1 37 1 126 1 228 1 207 2 
62 1 279 1 105 2 256 1 65 1 361 1 262 1 299 1 190 4 66 1 283 1 264 2 191 7 192 3 334 1 30 7 217 2 197 1 313 2 169 2 170 2 148 4 59 1 37 1 126 1 228 1 207 2 
62 1 313 1 361 1 169 1 66 1 190 3 170 1 264 1 191 4 192 2 295 1 334 1 148 3 37 1 207 1 30 4 217 1 197 2 
105 1 313 1 361 1 190 1 262 1 169 1 264 1 191 2 334 1 335 1 37 1 228 1 30 2 15 1 207 1 218 1 
105 1 148 1 313 2 334 1 37 1 361 1 190 2 299 1 30 3 217 1 264 2 192 1 191 3 
62 1 105 1 256 1 313 2 361 1 169 1 66 1 190 5 299 1 170 1 2 1 264 2 191 9 192 4 295 1 265 1 334 1 148 7 59 1 37 1 207 1 30 9 217 3 197 2 
62 1 105 1 256 1 313 2 361 1 169 1 66 1 190 5 299 1 170 1 2 1 264 2 191 9 192 4 295 1 265 1 334 1 148 7 59 1 37 1 207 1 30 9 217 3 197 2 
303 1 189 1 267 1 
214 2 189 1 158 1 
28 2 307 2 60 2 338 2 129 1 122 2 82 1 131 2 
357 1 108 2 257 1 110 1 70 1 24 1 1 1 138 1 47 1 28 2 139 1 307 3 77 1 338 2 339 1 239 2 287 1 371 1 9 1 122 2 82 1 291 1 171 2 350 2 175 1 60 3 129 1 325 1 131 2 181 1 41 1 17 1 208 2 134 1 326 1 183 1 154 1 
28 1 307 1 60 1 338 1 129 1 122 1 362 1 131 1 92 1 
200 1 189 1 22 1 98 1 247 1 147 1 284 1 60 1 307 1 249 1 338 1 341 1 267 1 343 1 
189 1 22 1 122 1 98 1 147 1 28 1 284 1 60 1 307 1 249 1 338 1 131 1 341 2 267 1 343 2 
187 1 115 1 341 1 372 1 343 1 
187 1 189 1 330 1 115 1 341 2 267 1 343 2 286 1 
187 1 341 1 343 1 
362 1 122 1 28 1 285 1 60 1 307 1 115 1 338 1 129 1 131 1 92 1 341 1 343 1 
189 1 
71 1 187 1 189 1 330 1 115 1 341 2 267 1 343 2 
187 2 221 1 244 1 189 1 330 1 26 1 194 1 115 2 296 2 16 1 152 1 341 5 240 1 50 1 267 1 380 1 343 5 342 2 182 2 
303 1 82 1 
209 1 271 1 36 1 122 1 82 1 28 1 284 1 60 2 307 2 338 2 131 1 
245 1 76 1 69 1 
257 1 110 1 21 1 9 1 70 1 82 1 171 1 1 1 350 1 47 1 307 1 60 1 239 1 339 1 183 1 154 1 
271 1 122 1 82 1 28 3 284 1 60 3 307 3 338 3 151 1 131 3 
28 1 307 1 60 1 338 1 131 1 92 1 
209 1 36 1 122 1 28 1 284 1 60 1 307 1 338 1 131 1 
357 1 108 2 257 1 110 1 22 1 70 1 24 1 1 1 138 1 47 1 28 3 284 1 307 4 338 3 339 1 239 1 341 1 343 1 79 1 371 1 9 1 36 1 122 2 82 1 291 1 171 1 98 1 350 1 11 1 147 1 175 1 60 4 249 1 151 1 129 1 131 3 181 1 41 1 17 1 208 1 356 1 183 1 326 1 154 1 
28 1 307 2 60 2 261 1 338 2 151 1 82 1 131 1 247 1 
210 1 189 1 36 1 22 1 122 1 98 1 147 1 28 3 284 1 60 3 307 3 249 1 338 3 151 2 131 3 341 1 343 1 356 1 79 1 
245 1 36 1 122 1 28 2 60 2 307 2 76 1 338 2 151 1 131 2 
257 1 110 1 9 1 70 1 82 1 171 1 1 1 350 1 47 1 307 1 60 1 239 1 339 1 183 1 154 1 
110 1 314 1 9 1 281 1 70 1 82 1 171 1 1 1 350 1 307 1 60 1 239 1 339 1 183 1 154 1 
357 1 106 1 108 2 136 1 69 2 331 1 24 1 77 2 76 2 118 1 312 1 78 1 167 1 371 1 245 2 56 1 55 1 291 2 223 1 375 1 175 1 181 1 41 1 208 4 
28 1 284 1 307 1 60 1 95 1 338 1 131 1 98 1 
257 1 110 1 9 1 70 1 171 1 1 1 350 1 47 1 28 1 60 2 307 2 76 1 338 1 339 1 151 1 239 1 131 1 183 1 154 1 79 1 
271 1 36 1 122 1 82 1 28 2 284 1 60 2 307 2 338 2 151 1 131 2 
28 1 307 1 60 1 338 1 131 1 92 1 
176 1 88 1 
176 1 88 1 
109 1 165 1 
109 1 165 1 
109 1 165 1 
203 1 176 1 88 1 
203 1 176 1 88 1 
176 1 101 1 88 1 
199 1 109 1 176 2 84 1 165 1 88 2 
203 1 176 1 88 1 
370 1 176 1 88 1 
370 1 176 1 88 1 
370 1 176 1 88 1 
219 1 119 2 270 1 199 1 189 1 81 1 113 1 27 1 12 2 226 3 273 1 176 2 38 2 324 1 251 2 341 2 343 2 88 2 254 2 
143 1 270 1 135 1 33 1 82 1 12 1 226 1 28 2 176 1 337 1 38 1 307 2 60 2 164 1 338 2 101 1 116 1 131 2 341 1 251 1 4 1 343 1 88 1 254 1 
169 1 170 1 207 1 
335 1 169 1 207 1 
335 1 232 1 29 1 170 2 207 3 103 1 
335 1 124 1 232 1 170 1 207 2 103 1 
335 1 232 2 170 1 207 2 103 1 
187 1 330 1 189 2 331 1 158 1 214 3 115 4 164 1 116 1 118 1 341 5 342 1 343 5 267 1 50 3 143 1 345 2 221 2 244 1 317 1 56 1 348 1 223 1 318 1 227 1 83 1 296 1 206 1 102 2 229 2 297 1 182 1 
187 6 189 5 330 1 331 3 301 1 158 3 212 5 26 1 161 1 214 9 115 7 164 4 118 3 341 9 343 9 267 1 342 2 50 8 269 1 242 1 221 6 244 1 317 2 56 3 223 3 372 5 174 1 227 2 83 3 206 1 296 2 102 6 229 6 42 1 182 2 
189 3 331 1 158 2 26 1 214 4 115 2 164 1 118 1 341 3 267 1 342 1 343 3 50 3 345 1 317 1 221 2 56 1 223 1 318 1 227 1 83 1 296 1 102 2 229 2 297 1 182 1 
189 4 331 2 301 1 158 3 26 1 161 1 214 7 115 3 164 2 118 2 341 4 267 1 342 1 343 4 50 5 345 2 317 1 221 4 56 2 223 2 318 1 174 1 227 1 83 2 296 1 102 4 229 4 297 1 182 1 
303 1 70 1 252 1 
89 1 70 1 
304 1 
339 1 70 1 
18 1 9 1 339 1 275 1 70 3 252 2 
9 1 339 1 70 1 
70 1 10 1 
185 1 106 3 260 1 121 2 56 1 331 1 291 3 112 1 373 1 374 1 237 1 375 2 77 4 150 1 178 1 180 1 208 7 
185 1 106 3 260 1 121 2 56 1 331 1 291 3 112 1 373 1 374 1 237 1 375 2 77 4 150 1 178 1 180 1 208 7 
185 1 106 3 260 1 121 2 56 1 331 1 291 3 112 1 373 1 374 1 237 1 375 2 77 4 150 1 128 1 178 1 180 1 208 7 
185 2 357 1 106 10 108 2 260 1 331 4 24 1 112 2 237 1 305 3 75 4 77 16 118 3 368 1 140 1 243 1 121 3 56 4 291 15 223 3 373 2 374 1 375 5 175 1 83 3 353 1 150 2 178 1 180 5 153 1 181 1 132 1 208 31 133 1 
185 1 357 2 106 4 108 4 260 1 331 1 24 2 112 1 237 1 73 1 77 5 121 2 56 1 291 4 373 1 375 3 175 2 353 1 177 1 150 1 178 1 180 1 181 2 208 9 
105 1 211 1 361 1 188 1 190 1 157 1 282 1 264 1 333 1 191 2 334 1 335 1 29 1 239 1 30 2 313 1 32 1 290 1 169 1 170 1 171 1 350 1 148 1 204 1 37 1 39 1 207 2 230 1 183 1 154 1 
105 1 211 1 361 1 188 1 137 1 190 1 157 1 264 1 333 1 191 3 335 1 29 1 239 1 30 3 313 1 32 1 169 1 170 1 171 1 350 1 204 1 148 2 37 1 100 1 39 1 14 1 207 2 230 1 183 1 154 1 
105 1 361 1 188 1 190 1 157 1 333 1 191 2 335 1 29 1 239 1 30 2 32 1 169 1 170 1 171 1 350 1 204 1 148 2 37 1 100 1 14 1 207 2 230 1 183 1 154 1 
105 2 110 1 137 1 300 1 70 1 264 1 333 2 191 1 74 1 309 1 239 1 30 1 339 1 313 1 32 2 171 1 350 1 204 2 274 1 85 1 183 1 253 1 154 1 
105 1 313 1 211 1 32 1 188 1 290 1 169 1 170 1 157 1 171 1 350 1 264 1 191 1 333 1 335 1 334 1 204 1 29 1 39 1 207 2 30 1 14 1 239 1 230 1 183 1 154 1 
246 1 
186 2 187 6 189 2 330 3 44 1 284 1 338 1 339 1 239 2 341 5 50 2 343 5 342 1 142 1 53 1 288 4 7 2 244 1 200 1 347 2 97 1 98 1 350 2 146 2 247 1 147 1 60 1 296 1 249 1 250 1 154 1 110 2 22 1 70 1 158 2 365 2 214 2 307 1 308 1 267 1 369 1 221 2 317 1 80 1 171 2 173 1 274 1 125 1 321 2 377 1 85 1 277 2 182 1 278 1 183 1 
187 2 330 1 22 1 44 1 71 1 284 1 307 1 338 1 341 3 343 3 369 1 142 1 53 1 288 2 200 1 173 1 98 1 247 1 147 1 60 1 249 1 277 1 
187 1 189 1 330 1 22 1 44 1 71 1 284 1 307 1 338 1 341 3 343 3 267 1 369 1 142 1 53 1 288 3 200 1 173 1 98 1 247 1 147 1 321 1 60 1 249 1 
187 2 330 1 189 1 22 1 44 1 365 1 71 1 284 1 307 1 338 1 341 3 343 3 267 1 369 1 142 1 53 1 288 3 200 1 173 1 98 1 247 1 147 1 321 1 60 1 249 1 277 1 
107 1 186 2 187 7 189 5 330 3 67 1 44 1 22 1 23 1 158 2 365 4 71 1 367 1 284 1 307 1 308 1 338 1 340 1 341 5 50 1 342 1 267 5 343 5 369 1 142 1 53 1 288 6 7 2 221 1 244 1 200 1 347 2 173 1 98 1 146 2 247 1 147 1 321 4 60 1 296 1 249 1 277 4 182 1 278 1 
186 2 187 4 189 2 330 2 44 1 22 1 158 2 365 2 214 2 284 1 307 1 308 1 338 1 341 4 267 1 50 1 342 1 343 4 369 1 142 1 53 1 288 4 7 2 221 1 200 1 244 1 347 2 97 1 173 1 98 1 146 2 247 1 147 1 321 2 60 1 296 1 249 1 277 2 182 1 278 1 
107 1 186 2 187 4 189 1 330 2 22 1 44 1 23 1 158 2 365 2 284 1 307 1 308 1 338 1 340 1 341 4 267 1 50 1 343 4 342 1 369 1 142 1 53 1 288 4 7 2 221 1 200 1 244 1 347 2 173 1 98 1 146 2 247 1 147 1 321 2 60 1 296 1 249 1 277 2 182 1 278 1 
107 1 186 2 187 4 189 1 330 2 22 1 44 1 23 1 158 2 365 2 284 1 307 1 308 1 338 1 340 1 341 4 267 1 50 1 343 4 342 1 369 1 142 1 53 1 288 4 7 2 221 1 200 1 244 1 347 2 173 1 98 1 146 2 247 1 147 1 321 2 60 1 296 1 249 1 277 2 182 1 278 1 
63 1 19 1 186 2 187 4 189 1 330 2 22 1 44 1 23 1 365 2 214 2 284 1 307 1 338 1 163 1 341 4 267 1 50 1 343 4 342 1 369 1 142 1 53 1 120 2 288 4 221 1 200 1 244 1 347 2 173 1 98 1 351 2 247 1 147 1 321 2 60 1 296 1 249 1 277 2 182 1 278 1 
107 1 186 2 187 5 189 1 330 2 22 1 44 1 23 1 158 2 365 3 367 1 284 1 307 1 308 1 338 1 340 1 341 4 267 1 50 1 342 1 343 4 369 1 142 1 53 1 288 5 7 2 221 1 244 1 200 1 347 2 173 1 98 1 146 2 247 1 147 1 321 3 60 1 296 1 249 1 277 3 182 1 278 1 
107 1 186 2 187 5 189 1 330 2 22 1 44 1 23 1 158 2 365 3 367 1 284 1 307 1 308 1 338 1 340 1 341 4 267 1 50 1 342 1 343 4 369 1 142 1 53 1 288 5 7 2 221 1 244 1 200 1 347 2 173 1 98 1 146 2 247 1 147 1 321 3 60 1 296 1 249 1 277 3 182 1 278 1 
19 1 186 2 187 4 189 1 330 2 44 1 22 1 365 2 214 2 284 1 307 1 338 1 341 4 267 1 50 1 342 1 343 4 369 1 142 1 53 1 120 2 288 4 221 1 200 1 244 1 347 2 97 1 173 1 98 1 351 2 247 1 147 1 321 2 60 1 296 1 249 1 277 2 182 1 278 1 
357 1 106 2 108 2 260 1 69 1 331 1 24 1 112 1 237 1 303 1 76 1 77 3 312 1 371 1 245 1 121 1 56 1 291 3 82 2 375 2 175 1 150 1 178 1 181 1 41 1 208 6 
0 1 106 2 357 2 108 4 111 1 69 11 331 2 24 2 138 1 305 3 90 1 75 3 76 11 77 8 118 1 287 1 371 1 245 4 56 1 82 1 291 6 223 2 375 1 175 2 83 2 86 1 180 1 153 1 181 2 41 2 208 14 132 1 231 1 
357 1 108 2 257 1 110 1 329 1 21 1 111 1 68 1 70 1 1 1 24 1 138 1 47 1 28 1 307 2 77 1 338 1 339 1 239 1 79 1 287 1 371 1 9 1 245 1 82 1 171 1 291 1 350 1 175 1 60 2 151 1 131 1 355 1 181 1 41 1 208 2 183 1 154 1 
327 2 331 3 1 2 138 1 46 2 47 2 237 1 338 1 195 1 239 3 339 2 287 1 9 2 245 7 56 3 291 10 350 3 248 2 60 3 150 1 14 1 151 1 208 20 154 2 357 3 106 8 108 6 257 2 110 1 260 1 111 1 69 7 70 2 24 3 112 1 28 1 307 3 76 7 77 10 118 2 79 1 220 1 371 3 121 1 82 2 171 3 223 2 375 4 175 3 83 2 127 2 178 1 179 1 131 1 180 4 41 3 181 3 326 2 183 2 
298 1 357 2 108 4 110 2 233 1 70 3 282 1 24 2 25 1 364 1 138 1 28 1 307 1 77 1 338 1 239 8 339 2 312 1 241 1 144 1 287 1 371 2 171 7 291 1 350 8 175 2 274 1 60 1 14 1 378 1 151 1 85 1 131 1 325 2 181 2 41 2 208 2 183 2 154 2 
106 1 357 1 108 2 111 1 69 1 331 1 24 1 28 1 48 1 307 1 76 1 77 1 338 1 118 1 371 1 245 1 36 1 56 1 122 1 291 2 223 1 375 1 175 1 83 1 60 1 131 1 181 1 41 1 208 3 
106 1 357 1 108 2 371 1 136 1 245 1 69 1 331 1 24 1 223 1 175 1 76 1 77 2 180 1 312 1 41 1 181 1 208 2 
106 1 357 1 108 2 371 1 245 1 69 1 55 1 56 1 291 2 24 1 375 1 175 1 76 1 118 1 312 1 41 1 181 1 208 2 
106 2 357 1 108 2 371 1 245 2 56 1 69 2 331 1 291 2 24 1 223 1 375 1 175 1 83 1 76 2 77 2 118 1 180 1 312 1 41 1 181 1 208 4 
106 1 357 1 108 2 371 1 136 1 245 1 69 1 331 1 24 1 223 1 175 1 76 1 77 2 180 1 41 1 181 1 208 2 241 1 
106 1 357 1 108 2 371 1 245 1 69 1 55 1 56 1 291 2 24 1 375 1 175 1 76 1 118 1 41 1 181 1 208 2 241 1 
106 2 357 1 108 2 371 1 245 2 56 1 69 2 331 1 291 2 24 1 223 1 375 1 175 1 83 1 76 2 77 2 118 1 180 1 41 1 181 1 208 4 241 1 
106 2 357 1 108 2 371 1 245 2 56 1 69 2 331 1 291 2 24 1 223 1 375 1 175 1 83 1 76 2 77 2 118 1 180 1 41 1 181 1 208 4 
357 1 108 2 257 1 110 1 70 1 1 1 24 1 138 1 47 1 307 1 77 1 339 1 239 1 287 1 371 1 9 1 82 1 171 1 291 1 350 1 175 1 60 1 41 1 181 1 208 2 183 1 326 1 154 1 
357 1 108 2 110 1 281 1 70 1 363 1 1 1 24 1 138 1 307 1 77 1 339 1 239 1 287 1 314 1 371 1 9 1 82 1 171 1 291 1 350 1 175 1 60 1 41 1 181 1 208 2 183 1 154 1 
106 2 357 1 108 2 371 1 245 2 111 1 56 1 69 2 331 1 291 2 24 1 223 1 375 1 175 1 83 1 76 2 77 2 118 1 180 1 41 1 181 1 208 4 
106 2 327 1 357 1 108 2 257 1 69 2 331 1 70 1 1 1 282 1 24 1 47 1 307 1 76 2 77 2 239 1 339 1 118 1 371 1 9 1 245 2 56 1 291 2 171 1 223 1 350 1 375 1 175 1 83 1 60 1 180 1 41 1 181 1 208 4 183 1 326 1 154 1 
106 1 357 1 108 2 111 1 69 1 331 1 24 1 28 1 307 1 77 2 76 1 338 1 118 1 311 1 371 1 245 1 36 1 56 1 122 1 291 1 223 1 175 1 83 1 60 1 180 1 131 1 181 1 41 1 208 3 
357 2 106 6 108 4 258 2 331 3 24 2 235 1 305 1 75 2 91 1 77 9 49 1 118 3 315 1 56 3 291 10 223 3 202 1 375 3 175 2 83 3 323 2 177 1 130 1 180 3 153 1 181 2 208 19 132 1 184 1 
106 4 357 3 108 6 328 1 258 4 263 1 331 3 24 3 235 2 305 2 75 2 162 1 77 14 49 1 118 2 94 1 56 2 291 12 292 1 223 3 202 2 375 2 175 3 83 3 40 1 323 1 353 2 177 1 130 1 180 2 181 3 153 2 208 26 184 1 
357 3 106 8 328 1 108 6 258 4 260 1 263 1 331 5 24 3 112 1 235 2 237 1 305 3 75 4 91 1 162 1 77 20 49 1 118 4 94 1 121 1 56 5 291 21 292 1 223 4 202 1 375 4 175 3 83 4 40 1 323 1 353 1 150 1 177 1 178 1 130 1 180 4 153 3 181 3 208 41 132 1 155 1 184 1 
357 4 106 7 328 1 108 8 258 4 260 1 263 1 331 5 24 4 112 1 235 2 237 1 305 3 75 4 91 1 162 1 77 20 49 1 118 3 94 1 121 1 56 4 291 18 292 1 223 4 202 1 375 4 175 4 83 4 40 1 323 1 353 2 150 1 177 1 178 1 130 1 180 3 153 3 181 4 208 38 132 1 155 1 184 1 
0 2 357 2 106 14 328 1 108 4 258 4 260 1 263 1 331 8 24 2 112 1 235 1 237 1 305 4 75 4 162 1 77 27 49 1 118 7 94 1 121 1 56 8 291 25 292 1 223 7 202 1 375 7 175 2 83 7 40 1 323 1 353 1 150 1 177 1 178 1 130 1 180 7 153 2 181 2 208 52 132 2 184 1 
219 1 199 1 176 1 38 1 322 1 251 1 27 1 254 1 12 1 88 1 
33 1 101 1 
104 1 213 1 176 1 38 1 379 1 251 1 254 1 12 1 88 1 
219 1 119 1 270 1 199 1 189 1 81 1 113 1 27 1 12 1 226 2 176 1 38 1 324 1 341 1 251 1 343 1 88 1 254 1 
219 1 119 1 270 1 199 1 189 1 81 1 113 1 27 1 12 1 226 2 176 1 38 1 324 1 341 1 251 1 343 1 88 1 254 1 
219 1 119 1 270 1 199 1 189 1 81 1 113 1 27 1 12 1 226 2 176 1 38 1 324 1 341 1 251 1 343 1 88 1 254 1 
203 1 280 1 84 1 
203 1 280 1 84 1 
370 1 272 1 
370 1 84 1 272 1 
135 1 4 1 
135 1 113 1 28 2 337 1 307 2 115 1 164 1 338 2 116 1 341 1 343 1 4 1 51 1 119 1 143 1 33 1 82 1 12 1 226 1 176 1 38 1 60 2 101 1 131 2 251 1 254 1 88 1 
203 1 280 1 
370 1 84 1 272 1 
357 1 108 2 233 1 111 1 70 1 24 1 364 1 138 1 114 1 193 1 307 2 77 1 238 1 338 2 339 1 239 2 215 1 93 1 287 1 371 1 291 1 171 2 350 2 175 1 60 2 325 2 181 1 41 1 208 2 183 1 154 1 
156 1 32 1 289 1 188 1 169 1 170 1 201 1 171 2 282 1 350 2 335 1 29 1 39 1 207 2 14 1 239 2 230 1 183 1 154 1 
32 1 358 1 188 1 169 1 170 1 201 1 171 1 350 1 335 1 29 1 39 1 207 2 14 1 239 1 230 1 183 1 154 1 
156 1 32 1 110 1 300 1 70 1 171 1 172 1 350 1 274 1 339 1 239 1 85 1 183 1 154 1 
156 1 32 1 289 1 188 1 169 1 170 1 201 1 171 1 350 1 335 1 29 1 39 1 207 2 14 1 239 1 230 1 183 1 154 1 
198 1 
303 1 221 1 189 1 152 1 50 1 267 1 380 1 
187 1 7 1 244 1 221 1 330 1 189 2 158 1 146 1 214 1 296 1 308 1 341 1 267 1 343 1 342 1 182 1 50 1 
89 3 187 5 43 2 330 3 189 8 331 2 282 1 339 3 239 3 341 5 50 9 342 4 343 5 5 1 52 2 6 2 346 2 244 4 9 3 56 2 350 3 10 2 352 2 296 4 249 2 102 6 152 1 252 2 154 3 359 2 110 1 70 10 158 6 72 1 366 1 214 12 310 1 118 2 267 2 268 1 317 2 221 8 171 3 123 2 223 2 376 2 377 1 83 2 127 2 275 1 229 6 380 1 182 4 183 4 
20 1 328 1 187 1 43 2 330 1 189 5 263 1 331 2 158 3 214 6 305 1 75 1 118 2 341 1 343 1 50 8 342 2 267 2 94 1 317 1 244 2 221 5 56 2 292 1 223 2 377 1 352 1 83 2 40 1 61 1 296 2 102 5 229 5 153 1 182 2 
43 2 331 1 362 1 45 1 112 1 237 1 28 1 307 1 285 1 338 1 340 1 92 1 341 1 342 1 343 1 50 2 244 1 221 1 56 1 122 1 60 1 296 1 150 1 129 1 131 1 182 1 
221 1 244 1 189 1 296 1 152 1 50 1 267 1 380 1 182 1 342 1 
221 5 43 2 189 5 56 2 331 2 223 2 158 5 352 1 214 10 83 2 127 1 102 5 118 2 229 5 50 5 
187 1 189 1 330 1 341 1 267 1 343 1 
187 4 110 2 330 2 70 1 26 1 72 2 339 1 310 1 239 4 341 3 342 2 50 2 343 3 344 1 244 1 317 2 221 2 80 1 171 4 57 1 350 4 274 1 377 2 296 2 250 1 85 1 182 2 183 1 154 1 
357 1 108 2 257 1 110 1 70 1 24 1 1 1 138 1 47 1 28 2 307 3 338 2 239 1 339 1 371 1 9 1 122 2 82 1 291 1 171 1 350 1 175 1 60 3 129 1 131 2 17 1 41 1 181 1 208 1 326 1 183 1 154 1 
221 2 244 1 317 1 189 4 121 1 158 2 214 4 377 1 296 1 102 2 229 2 342 1 182 1 50 1 267 2 
266 1 254 1 12 1 
266 1 254 1 12 1 
219 1 135 1 216 1 254 1 12 1 
266 1 254 1 12 1 
8 1 254 1 12 1 
8 1 254 1 12 1 
8 1 254 1 12 1 
254 1 12 1 
176 1 88 1 
106 3 357 2 108 4 260 1 121 1 56 1 331 1 291 4 24 2 112 1 237 1 375 2 175 2 77 4 353 1 150 1 178 1 180 1 181 2 208 8 
106 2 260 1 121 1 56 1 331 1 291 3 112 1 375 2 237 1 303 1 77 3 150 1 178 1 208 6 
106 2 357 1 108 2 56 1 331 1 291 2 24 1 223 1 320 1 375 1 175 1 83 1 77 2 118 1 180 1 181 1 208 4 
106 2 56 1 331 1 291 4 223 1 375 1 305 1 83 1 75 2 77 3 118 1 180 1 153 1 208 7 132 1 
106 9 0 1 357 2 108 4 260 1 331 3 24 2 112 2 237 1 305 2 75 2 77 11 118 2 121 1 56 3 291 12 223 2 99 1 375 5 175 2 83 2 353 2 150 2 178 1 180 4 181 2 132 1 208 23 231 1 
75 1 291 1 208 1 
305 1 77 1 208 1 
357 1 106 3 108 2 56 1 331 1 291 3 24 1 223 1 320 1 375 2 175 1 83 1 127 1 77 3 118 1 180 1 181 1 208 6 
106 2 357 1 328 1 108 2 94 1 263 1 56 2 331 2 291 6 292 1 223 2 24 1 375 1 175 1 83 2 305 1 40 1 75 1 77 6 177 1 118 2 180 1 181 1 153 1 208 12 
106 2 56 1 331 1 291 3 112 1 237 1 375 1 77 3 150 1 180 1 208 6 
106 2 357 1 108 2 260 1 291 2 24 1 112 1 99 1 375 1 175 1 77 1 353 1 150 1 178 1 180 1 181 1 208 3 
357 1 106 5 108 2 56 2 331 2 291 5 24 1 45 1 112 2 375 3 237 1 175 1 77 5 177 1 150 2 180 2 181 1 208 10 
357 1 106 1 108 2 331 1 24 1 223 1 175 1 77 2 177 1 180 1 181 1 208 2 
106 2 357 1 108 2 56 1 331 1 291 2 24 1 223 1 375 1 175 1 83 1 77 2 177 1 118 1 180 1 181 1 208 4 
357 3 106 2 108 6 291 2 24 3 112 1 99 1 375 1 175 3 353 1 91 1 77 1 177 1 150 1 180 1 181 3 208 3 
357 5 106 12 108 10 260 1 331 5 24 5 112 3 237 2 305 3 75 4 91 1 77 16 368 1 118 3 243 1 121 1 56 5 291 18 223 3 99 1 320 1 375 7 175 5 83 3 353 2 150 3 177 1 178 1 180 5 153 1 181 5 133 1 208 34 132 1 
357 1 106 2 108 2 260 1 331 1 24 1 112 1 237 1 305 1 75 1 77 4 94 1 121 1 56 1 291 4 375 2 175 1 177 1 150 1 178 1 153 1 181 1 208 8 
357 2 106 3 108 4 260 1 331 2 24 2 112 1 237 1 305 1 75 2 77 6 94 1 121 1 56 1 291 5 223 1 320 1 375 2 175 2 83 1 150 1 177 1 178 1 180 1 153 1 181 2 208 11 132 1 
357 3 106 4 108 6 328 1 260 1 263 1 331 3 24 3 112 1 237 1 305 1 75 1 77 9 118 2 94 1 121 1 56 3 291 10 223 2 292 1 320 1 375 3 175 3 83 2 40 1 353 1 150 1 177 1 178 1 180 1 153 1 181 3 208 19 
357 3 106 5 108 6 328 1 260 1 263 1 331 3 24 3 112 1 237 1 305 1 75 1 77 10 118 1 94 1 121 1 56 2 291 7 223 2 292 1 320 1 375 3 175 3 83 2 40 1 353 1 150 1 177 1 178 1 180 2 153 1 181 3 208 17 
357 1 106 2 108 2 260 1 331 1 24 1 112 1 237 1 305 1 75 1 77 4 94 1 121 1 56 1 291 4 375 2 175 1 177 1 150 1 178 1 153 1 181 1 208 8 
106 2 357 1 328 1 108 2 94 1 263 1 56 2 331 2 291 6 292 1 223 2 24 1 375 1 175 1 83 2 305 1 40 1 75 1 77 6 177 1 118 2 180 1 181 1 153 1 208 12 
357 4 106 5 108 8 328 1 260 1 263 1 331 3 24 4 112 1 237 1 305 1 75 1 77 10 118 1 94 1 121 1 56 2 291 8 292 1 223 2 320 1 375 3 175 4 83 2 40 1 353 2 150 1 177 1 178 1 180 2 153 1 181 4 208 18 
357 4 106 6 108 8 328 1 263 1 331 3 24 4 305 1 75 1 91 1 77 9 118 2 94 1 56 2 291 7 292 1 223 3 375 3 175 4 83 3 40 1 353 2 177 1 180 3 153 1 181 4 208 16 
106 6 260 2 56 1 331 1 291 4 112 3 375 3 237 1 77 3 150 3 178 1 180 3 208 7 
357 4 106 4 108 8 328 1 260 1 263 1 331 3 24 4 112 1 237 1 305 1 75 1 91 1 77 10 118 1 94 1 121 1 56 2 291 8 292 1 223 2 375 3 175 4 83 2 40 1 353 2 150 1 177 1 178 1 180 1 153 1 181 4 208 18 
307 1 60 1 261 1 338 1 82 1 247 1 294 1 
259 1 261 1 96 1 82 1 332 1 294 1 247 1 60 1 307 1 338 1 196 1 255 1 
274 1 303 1 110 1 339 1 85 1 239 1 70 1 171 1 350 1 183 1 154 1 
257 1 110 1 9 1 70 1 82 1 171 1 1 1 350 1 28 1 60 2 307 2 338 1 339 1 151 1 239 1 131 1 183 1 154 1 
257 1 70 3 1 1 72 1 28 1 284 1 307 2 338 2 239 1 339 2 9 2 82 1 171 1 123 1 98 1 350 1 10 1 147 1 60 2 151 1 131 2 183 1 154 1 
281 1 70 3 1 1 72 1 28 1 284 1 307 2 338 2 239 2 339 2 9 2 82 1 171 2 123 1 98 1 224 1 350 2 10 1 147 1 60 2 151 1 131 2 183 1 154 1 
187 1 89 1 110 1 189 1 70 4 72 1 160 1 239 3 339 1 341 2 343 2 267 1 9 1 171 3 123 1 224 1 350 3 10 1 249 1 87 1 252 1 183 1 154 1 
89 1 187 1 110 1 9 1 189 1 70 4 123 1 171 3 224 1 350 3 10 1 72 1 376 1 249 1 339 1 239 3 341 2 267 1 343 2 183 1 252 1 154 1 
239 1 171 1 350 1 25 1 183 1 154 1 
298 1 144 1 110 2 9 1 70 3 171 6 282 1 25 1 364 1 350 7 58 1 149 1 336 1 14 1 378 1 239 7 275 1 339 2 325 1 183 3 154 2 
106 2 357 2 327 1 108 4 257 1 260 1 111 1 69 1 331 1 70 1 1 1 24 2 282 1 112 1 46 1 193 1 47 1 237 1 28 1 307 2 76 1 77 3 338 1 339 1 239 1 371 2 9 1 245 1 121 1 56 1 82 2 291 3 171 1 350 1 375 2 175 2 60 2 150 1 178 1 151 1 131 1 181 2 41 2 208 6 183 1 326 1 154 1 
359 1 89 1 187 2 110 1 189 1 330 1 70 2 115 1 239 1 310 1 341 3 50 1 267 1 342 2 343 3 52 1 6 1 221 1 244 2 171 1 350 1 376 1 296 2 249 1 152 1 380 1 182 2 252 1 
9 1 70 2 171 2 282 1 25 1 350 2 239 2 275 1 339 1 268 1 252 1 183 2 154 1 
110 1 70 1 171 4 282 1 224 1 350 4 274 1 3 1 239 4 85 1 339 1 183 1 154 1 
220 1 9 1 145 1 70 1 171 2 350 2 72 1 58 1 336 1 239 2 339 1 117 1 183 2 154 1 
335 1 188 1 110 1 169 1 207 1 239 1 171 1 350 1 183 1 154 1 
70 1 171 2 282 1 350 2 364 1 238 1 239 2 14 1 339 1 183 1 154 1 
298 1 144 1 110 1 70 3 171 4 282 1 350 5 364 1 72 1 274 1 3 1 85 1 239 5 339 2 183 2 154 2 
298 1 110 1 168 1 70 3 171 4 282 1 350 5 364 1 72 1 274 1 3 1 85 1 239 5 339 2 183 2 154 2 
110 1 9 1 281 1 70 1 82 1 171 1 1 1 350 1 28 1 60 2 307 2 338 1 339 1 151 1 239 1 131 1 183 1 154 1 
9 1 70 1 171 1 350 1 58 1 72 1 149 1 336 1 239 1 275 1 339 1 183 2 154 1 
64 1 35 1 114 1 60 1 307 1 338 1 215 1 141 1 93 1 
306 1 35 1 159 1 
64 1 34 1 35 1 82 1 141 1 
64 2 34 2 189 1 35 1 22 1 82 1 98 1 159 1 225 1 147 1 284 1 306 1 249 1 115 1 341 2 267 1 343 2 141 2 356 1 
37 1 303 1 361 1 190 1 
313 1 37 1 361 1 190 1 30 1 264 1 191 1 
105 1 204 1 30 1 
31 1 313 1 361 1 190 1 262 2 349 1 264 1 236 1 191 3 334 1 37 1 30 3 
148 1 313 1 37 1 361 1 190 1 30 2 197 1 264 1 191 2 
62 1 313 1 334 1 169 1 190 1 170 1 207 1 30 1 264 1 192 1 191 1 
313 1 334 1 37 1 190 1 30 1 264 1 191 1 
313 1 334 1 37 2 361 1 30 1 264 1 191 1 
313 2 222 1 190 1 264 2 191 2 334 1 37 1 205 1 30 2 276 1 
148 2 256 1 313 1 334 1 59 1 37 1 361 1 190 2 30 3 217 1 264 1 192 1 191 3 
313 1 361 1 190 1 169 1 170 1 234 1 264 1 191 2 335 1 334 1 148 1 37 1 29 1 207 2 30 2 
295 1 148 2 313 2 334 1 37 1 361 1 190 2 30 4 217 1 197 1 264 2 192 1 191 4 
313 1 334 1 37 1 361 1 190 1 30 1 264 1 191 1 
31 1 166 1 313 1 361 2 262 1 190 3 349 1 264 1 191 4 192 1 148 2 37 2 30 4 217 1 
265 1 13 1 148 1 313 1 334 1 37 1 361 1 316 1 190 1 30 2 264 1 191 2 
31 2 313 1 361 1 190 1 262 2 349 1 264 1 319 1 191 3 334 1 37 1 30 3 
190 2 54 1 302 1 293 2 
313 1 334 1 360 1 30 1 264 1 191 1 
148 1 256 1 313 1 334 1 37 1 361 1 190 1 30 2 264 1 191 2 
354 1 
313 1 334 1 37 1 361 1 190 1 30 1 264 1 191 1 
313 1 256 1 361 1 262 1 190 1 264 1 191 3 148 1 334 1 37 1 30 3 
166 1 190 1 217 1 192 1 
37 1 190 1 

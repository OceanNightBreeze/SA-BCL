#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (154,274,303,355) (154,274,303,355) (7,248,261) (7,248,261) (7,248,261) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (154,274,303,355) (154,274,303,355) (7,248,261) (7,248,261) (7,248,261) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (154,274,303,355) (154,274,303,355) (7,248,261) (7,248,261) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (154,274,303,355) (154,274,303,355) (7,248,261) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 380 221 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 2 287 1 355 2 274 3 41 1 277 1 88 1 228 3 10 2 198 1 154 1 313 1 112 1 
331 2 303 2 30 2 355 2 274 9 277 1 79 2 228 9 10 5 142 1 99 1 313 1 362 1 342 1 234 1 287 2 370 2 174 1 41 1 290 1 88 3 19 1 198 1 154 6 109 1 130 1 112 4 200 1 
331 2 303 2 30 2 355 2 274 9 277 1 79 2 228 9 10 5 142 1 99 1 313 1 362 1 342 1 234 1 287 2 370 2 174 1 41 1 290 1 88 3 19 1 198 1 154 6 109 1 130 1 112 4 200 1 
331 2 303 2 30 2 355 2 274 10 277 1 79 2 228 10 10 6 142 1 99 1 313 1 362 1 342 1 234 1 287 2 370 2 174 1 41 1 290 1 88 4 19 1 198 1 154 7 109 1 130 1 112 5 200 1 
331 2 303 2 30 2 355 2 274 7 277 1 79 2 228 7 10 4 142 1 99 1 313 1 362 1 342 1 234 1 287 2 370 1 174 1 41 1 290 1 88 2 19 1 198 1 154 4 109 1 112 3 200 1 
30 1 303 1 331 1 355 1 370 2 274 4 174 1 41 1 88 1 79 1 228 4 10 3 198 1 154 3 313 1 130 1 234 1 112 2 
303 1 30 1 287 1 355 1 274 2 41 1 251 1 79 1 308 1 18 1 10 1 19 1 228 2 198 1 313 1 342 1 
303 2 331 1 30 1 355 2 274 9 277 1 79 1 204 1 228 9 10 5 142 1 313 1 234 1 285 1 287 1 370 2 174 1 41 1 88 3 198 1 154 7 109 1 130 1 112 4 
303 2 331 1 30 1 355 2 274 9 277 1 79 1 204 1 228 9 10 5 142 1 313 1 234 1 285 1 287 1 370 2 174 1 41 1 88 3 198 1 154 7 109 1 130 1 112 4 
324 1 70 1 140 1 337 1 186 1 374 1 295 1 191 1 284 1 102 1 379 1 235 1 352 1 36 1 
298 1 
38 1 74 1 295 1 24 1 298 1 365 1 70 2 140 2 
38 1 74 1 137 1 289 1 164 1 276 1 214 2 252 1 278 2 70 5 71 2 140 5 295 2 298 1 48 1 365 2 27 1 317 1 61 1 
38 1 298 1 356 1 
212 2 298 1 49 1 
337 2 186 2 374 1 191 2 102 2 284 2 379 2 350 1 
50 2 76 1 53 1 115 2 203 1 4 1 166 1 337 2 281 1 229 1 186 2 58 2 315 2 191 3 282 1 102 3 284 2 170 1 343 1 259 1 86 1 171 1 373 1 107 2 291 1 176 1 350 1 20 1 158 1 157 1 374 1 296 1 46 1 131 1 47 1 379 2 202 1 
337 1 186 1 374 1 191 1 324 1 102 1 284 1 379 1 235 1 352 1 
38 1 346 1 309 1 70 1 140 1 123 1 337 1 191 1 298 1 210 1 102 1 84 1 124 1 235 1 
38 1 346 1 70 2 309 1 140 2 337 1 186 1 191 1 298 1 284 1 102 1 379 1 84 1 124 1 235 1 
257 1 295 1 365 1 70 1 140 1 
38 1 74 1 295 1 322 1 298 1 365 1 70 2 140 2 
365 1 70 1 140 1 
345 1 350 2 337 2 186 1 231 1 191 2 102 2 284 1 379 1 
156 1 211 1 13 1 
259 1 86 1 31 1 76 1 115 1 373 1 107 1 291 1 350 1 20 1 131 1 315 1 191 1 282 1 102 1 47 1 
350 1 356 1 
259 1 86 1 67 1 76 1 115 1 373 1 291 1 107 1 337 1 20 1 186 1 131 1 315 1 191 2 282 1 47 1 102 2 379 1 327 1 13 1 
337 3 186 3 191 3 284 1 102 3 379 3 327 1 350 1 
337 1 186 1 191 1 102 1 379 1 235 1 352 1 
337 1 186 1 345 1 231 1 191 1 102 1 284 1 379 1 235 1 
50 2 76 1 203 1 53 1 115 1 4 1 205 1 309 1 140 1 337 3 229 1 186 3 58 1 315 1 191 4 282 1 284 2 102 4 84 1 124 1 235 1 170 1 343 1 259 1 86 1 67 1 345 1 346 1 373 1 291 1 107 1 176 1 70 1 89 1 350 1 20 1 158 1 157 1 374 1 46 1 131 1 47 1 379 3 327 1 
337 2 186 1 191 2 102 2 279 1 379 1 327 1 350 1 123 1 
67 1 345 1 346 1 77 1 70 1 309 1 89 1 140 1 337 3 186 3 191 3 298 1 284 1 102 3 84 1 379 3 235 1 124 1 327 2 
345 1 337 2 156 1 186 2 191 2 284 1 102 2 379 2 327 1 13 1 
259 1 86 1 76 1 115 1 373 1 107 1 291 1 350 1 20 1 315 1 131 1 191 1 282 1 102 1 47 1 
145 1 259 1 86 1 115 1 306 1 373 1 107 1 350 1 20 1 315 1 131 1 191 1 282 1 102 1 47 1 
50 2 329 1 136 1 97 1 4 1 225 1 229 1 58 4 170 2 13 2 260 1 211 2 292 1 176 1 153 1 156 2 158 1 157 1 129 1 296 2 46 1 179 1 134 1 28 1 
337 1 186 1 320 1 191 1 102 1 379 1 235 1 309 1 
302 1 67 1 345 1 279 1 123 1 350 1 337 5 186 4 11 1 191 5 102 5 284 1 379 4 327 2 
337 2 186 2 320 1 191 2 102 2 379 2 235 1 352 1 
177 1 242 1 318 1 
103 1 29 1 177 2 195 1 68 1 318 2 
177 1 318 1 
177 1 318 1 
103 1 29 1 
103 1 29 1 
103 1 29 1 
177 1 288 1 318 1 
177 1 288 1 318 1 
177 1 288 1 318 1 
238 1 177 1 318 1 
238 1 177 1 318 1 
238 1 177 1 318 1 
304 2 195 1 138 1 196 2 173 2 254 1 70 2 140 2 280 1 177 2 57 1 230 2 341 3 360 1 377 2 298 1 60 1 193 1 318 2 
32 1 226 1 140 1 280 1 337 2 186 2 230 1 341 1 191 2 233 1 102 2 144 1 318 1 65 1 173 1 196 1 372 1 70 1 242 1 350 1 177 1 377 1 25 1 379 2 
331 1 72 1 30 2 316 2 18 1 
30 1 331 1 79 1 
30 1 79 1 18 1 
72 1 331 2 30 3 316 1 283 1 18 1 
72 1 331 1 30 2 12 1 316 1 18 1 
329 1 74 1 162 1 97 1 114 2 32 1 278 1 252 1 225 1 140 5 358 1 363 2 233 1 365 1 61 2 38 1 146 1 319 1 212 3 289 3 372 1 214 1 39 1 348 2 216 1 70 5 71 1 128 1 295 4 298 2 49 1 28 1 
329 3 74 1 97 3 114 6 182 1 252 1 278 2 225 3 140 9 55 1 257 5 233 4 365 6 317 1 61 6 38 1 319 3 212 9 289 8 213 1 321 1 214 2 39 1 348 6 216 2 70 9 71 2 128 2 295 7 110 1 111 1 298 5 49 3 201 5 28 3 
329 1 162 1 97 1 114 2 278 1 225 1 140 3 363 1 233 1 317 1 61 2 38 1 146 1 319 1 289 3 212 4 214 1 348 2 216 1 70 3 71 1 128 1 295 2 298 3 49 2 28 1 
329 2 162 1 97 2 114 4 278 1 225 2 140 4 55 1 363 2 233 2 317 1 61 4 38 1 146 1 319 2 212 7 289 5 213 1 214 1 348 4 216 1 70 4 71 1 128 1 295 3 110 1 298 4 49 3 28 2 
262 1 
258 1 131 1 356 1 
131 1 323 1 
86 1 131 1 
86 1 340 1 21 1 258 2 131 3 282 1 
86 1 131 1 282 1 
106 1 131 1 
329 1 136 2 75 1 240 1 69 2 241 1 255 1 153 3 270 1 361 1 296 3 58 4 100 1 364 1 170 1 380 1 135 1 
354 1 50 2 75 2 329 4 136 5 97 3 307 1 225 3 141 1 255 5 229 1 361 1 58 28 364 1 170 13 105 1 319 3 263 1 69 3 240 2 241 2 42 1 176 1 153 10 270 1 158 1 157 1 220 1 296 15 73 4 246 3 380 1 135 2 28 3 
50 4 329 1 136 3 75 1 255 1 339 1 229 2 58 6 361 1 170 2 66 1 105 1 69 2 240 1 241 1 176 2 153 4 270 1 158 2 157 2 296 4 135 1 380 1 
329 1 136 2 75 1 240 1 69 2 241 1 255 1 153 3 270 1 296 3 58 4 361 1 364 1 170 1 380 1 135 1 
329 1 136 2 75 1 240 1 69 2 241 1 255 1 153 3 270 1 296 3 58 4 361 1 364 1 170 1 380 1 135 1 
301 2 259 1 86 1 287 2 303 1 355 1 274 1 115 1 373 1 183 1 107 1 336 2 228 1 20 1 187 1 326 1 375 2 131 1 315 1 159 1 95 1 59 1 64 1 
301 1 287 1 303 1 261 1 355 1 274 2 115 1 264 1 7 1 107 1 336 1 311 1 228 1 154 1 219 1 313 1 375 1 315 1 248 1 
301 1 287 1 303 1 261 1 355 1 274 2 115 1 7 1 175 1 107 1 336 1 311 1 228 1 154 1 219 1 313 1 375 1 315 1 248 1 
301 1 287 1 303 1 261 1 355 1 274 3 115 1 264 1 7 1 107 1 120 1 336 1 311 1 228 2 219 1 154 2 375 1 315 1 95 1 
301 1 287 1 261 1 274 2 115 1 264 1 107 1 120 1 336 1 228 1 219 1 154 2 375 1 315 1 
181 1 
328 1 333 1 278 1 335 2 140 5 337 1 143 2 101 1 191 1 102 1 235 1 61 2 286 4 289 2 346 1 107 2 70 5 71 1 152 1 20 2 155 1 298 2 159 1 113 1 300 2 160 1 74 3 115 2 116 1 252 1 80 1 81 2 309 1 123 1 359 1 315 2 210 1 365 6 84 1 124 1 38 1 259 1 86 1 212 2 214 1 215 2 40 2 266 2 373 1 216 1 91 1 326 1 131 1 93 1 49 2 
328 1 74 1 116 1 80 1 309 1 140 3 123 1 337 1 359 1 191 1 102 1 210 1 84 1 365 2 124 1 235 1 286 2 346 1 215 1 70 3 24 1 93 1 
328 1 74 1 116 1 80 1 309 1 140 3 335 1 123 1 337 1 359 1 191 1 102 1 210 1 365 1 84 1 124 1 235 1 286 3 38 1 346 1 70 3 24 1 93 1 298 1 
328 1 74 1 116 1 80 1 309 1 140 3 335 1 123 1 337 1 359 1 143 1 191 1 102 1 210 1 84 1 365 2 124 1 235 1 286 3 38 1 346 1 215 1 70 3 24 1 93 1 298 1 
328 1 333 1 278 1 140 5 335 4 337 1 143 4 191 1 102 1 235 1 62 1 61 1 286 6 346 1 289 1 70 5 71 1 155 1 24 1 298 5 300 2 74 3 116 1 80 1 252 1 117 1 309 1 119 1 81 2 207 1 123 1 359 1 210 1 84 1 365 7 124 1 38 5 214 1 215 4 40 2 266 2 93 1 272 1 49 2 
328 1 333 1 278 1 140 4 335 2 337 1 143 2 191 1 102 1 235 1 61 1 286 4 346 1 289 1 70 4 71 1 155 1 298 2 113 1 300 2 74 2 116 1 252 1 80 1 309 1 81 2 123 1 359 1 210 1 84 1 365 4 124 1 38 1 212 2 214 1 40 2 215 2 266 2 93 1 49 2 
328 1 74 2 116 1 333 1 117 1 278 1 80 1 252 1 81 2 309 1 119 1 335 2 140 4 207 1 123 1 337 1 359 1 143 2 191 1 102 1 210 1 365 4 84 1 124 1 235 1 61 1 38 1 286 4 289 1 346 1 214 1 215 2 40 2 266 2 70 4 71 1 155 1 93 1 298 1 49 2 300 2 
328 1 74 2 116 1 333 1 117 1 278 1 80 1 252 1 81 2 309 1 119 1 335 2 140 4 207 1 123 1 337 1 359 1 143 2 191 1 102 1 210 1 365 4 84 1 124 1 235 1 61 1 38 1 286 4 289 1 346 1 214 1 215 2 40 2 266 2 70 4 71 1 155 1 93 1 298 1 49 2 300 2 
328 1 74 2 116 1 333 1 117 1 278 1 80 1 252 1 81 2 309 1 335 2 140 4 184 2 82 1 123 1 337 1 359 1 143 2 191 1 102 1 210 1 365 4 84 1 124 1 235 1 61 1 38 1 286 4 237 1 149 2 212 2 289 1 346 1 214 1 215 2 70 4 71 1 293 1 93 1 298 1 300 2 
328 1 74 2 116 1 333 1 117 1 278 1 252 1 80 1 81 2 309 1 119 1 207 1 140 4 335 3 123 1 337 1 359 1 143 3 191 1 102 1 210 1 84 1 365 5 124 1 235 1 61 1 38 1 286 5 289 1 346 1 214 1 40 2 215 3 266 2 70 4 71 1 155 1 93 1 298 1 272 1 49 2 300 2 
328 1 74 2 116 1 333 1 117 1 278 1 252 1 80 1 81 2 309 1 119 1 207 1 140 4 335 3 123 1 337 1 359 1 143 3 191 1 102 1 210 1 84 1 365 5 124 1 235 1 61 1 38 1 286 5 289 1 346 1 214 1 40 2 215 3 266 2 70 4 71 1 155 1 93 1 298 1 272 1 49 2 300 2 
328 1 333 1 278 1 140 4 335 2 184 2 337 1 143 2 191 1 102 1 235 1 61 1 286 4 149 2 346 1 289 1 70 4 71 1 298 1 113 1 300 2 74 2 116 1 252 1 80 1 309 1 81 2 82 1 123 1 359 1 210 1 84 1 365 4 124 1 38 1 212 2 214 1 215 2 93 1 
96 1 50 4 115 8 4 2 78 1 166 1 118 1 122 1 337 1 186 1 229 2 58 2 315 7 191 1 102 1 170 1 259 2 343 1 86 2 171 2 264 1 373 2 175 1 107 8 176 2 20 2 129 1 158 2 157 2 296 1 46 2 326 1 131 3 94 1 132 1 133 1 159 1 379 1 327 1 
249 1 50 2 136 1 329 1 97 1 332 1 4 1 225 1 337 1 229 1 186 1 58 3 191 1 284 1 102 1 170 2 13 1 211 1 319 1 345 1 176 1 153 1 156 1 158 1 157 1 296 1 46 1 379 1 28 1 
50 2 75 1 136 2 329 1 4 1 356 1 229 1 361 1 58 3 170 1 13 1 211 1 69 1 176 1 350 1 153 2 156 1 270 1 158 1 157 1 129 1 296 2 46 1 135 1 380 1 
50 4 136 1 329 2 97 1 332 1 4 2 166 1 167 1 225 1 141 1 255 1 229 2 58 14 83 1 170 6 13 11 85 1 343 1 211 11 319 2 42 1 176 2 350 1 243 1 153 2 156 4 158 2 157 2 296 8 46 1 73 3 246 3 28 2 
50 2 76 1 31 1 115 1 332 1 4 1 165 1 166 1 337 1 186 1 229 1 58 2 315 1 191 2 282 1 102 2 170 1 259 1 343 1 86 1 67 1 373 1 291 1 107 1 176 1 350 1 20 1 156 1 157 1 158 1 296 1 46 1 131 1 47 1 379 1 327 1 273 1 381 1 
50 6 136 4 329 3 97 2 332 1 4 3 334 2 225 2 227 1 337 1 229 3 186 1 58 17 191 3 282 2 102 3 13 7 343 1 67 1 69 1 107 3 291 2 350 1 20 1 153 8 156 7 158 3 157 3 296 9 297 1 299 2 28 2 75 1 161 1 76 2 115 3 203 2 166 1 255 4 361 1 315 3 170 8 259 2 86 2 211 7 319 2 264 1 373 2 176 3 126 2 218 2 270 1 46 3 131 2 47 2 379 1 380 1 135 1 327 1 
50 2 329 1 211 1 4 1 176 1 255 1 153 1 156 1 229 1 129 1 157 1 158 1 58 2 296 2 46 1 134 1 28 1 13 1 
50 2 136 1 211 1 97 1 4 1 292 1 176 1 225 1 153 1 156 1 229 1 129 1 157 1 158 1 58 2 46 1 170 2 13 1 
50 2 329 1 136 1 97 1 4 1 225 1 255 1 229 1 58 4 170 2 13 2 319 1 211 2 176 1 153 2 156 2 158 1 157 1 129 1 296 2 46 1 28 1 
50 2 329 1 211 1 4 1 176 1 122 1 255 1 153 1 156 1 229 1 157 1 158 1 58 2 296 2 46 1 134 1 28 1 13 1 
50 2 136 1 211 1 97 1 4 1 292 1 176 1 225 1 122 1 153 1 156 1 229 1 157 1 158 1 58 2 46 1 170 2 13 1 
50 2 329 1 136 1 97 1 4 1 225 1 122 1 255 1 229 1 58 4 170 2 13 2 319 1 211 2 176 1 153 2 156 2 158 1 157 1 296 2 46 1 28 1 
50 2 329 1 136 1 97 1 4 1 225 1 255 1 229 1 58 4 170 2 13 2 319 1 211 2 176 1 153 2 156 2 158 1 157 1 296 2 46 1 28 1 
50 2 76 1 203 1 115 1 4 1 166 1 229 1 58 2 315 1 191 1 282 1 102 1 170 1 259 1 343 1 86 1 373 1 291 1 107 1 176 1 350 1 20 1 157 1 158 1 296 1 46 1 131 1 47 1 
50 2 115 1 306 1 4 1 166 1 229 1 58 2 315 1 191 1 282 1 102 1 170 1 145 1 259 1 343 1 86 1 373 1 107 1 150 1 176 1 350 1 20 1 157 1 158 1 296 1 46 1 131 1 47 1 
50 2 329 1 136 1 97 1 332 1 4 1 225 1 255 1 229 1 58 4 170 2 13 2 319 1 211 2 176 1 153 2 156 2 158 1 157 1 296 2 46 1 28 1 
50 2 136 1 329 1 76 1 97 1 203 1 115 1 4 1 225 1 255 1 229 1 58 4 315 1 191 1 282 1 102 1 170 2 13 2 259 1 86 1 211 2 319 1 373 1 291 1 107 1 175 1 176 1 218 1 153 2 156 2 157 1 158 1 296 2 46 1 131 1 47 1 28 1 
50 2 329 1 97 1 332 1 4 1 225 1 255 1 337 1 256 1 229 1 186 1 58 3 191 1 284 1 102 1 170 1 13 1 319 1 211 1 345 1 176 1 153 1 156 1 158 1 157 1 296 2 46 1 379 1 28 1 
50 4 136 3 1 1 329 3 97 3 3 1 224 1 225 3 141 1 255 3 229 2 58 19 209 1 170 10 66 1 319 3 265 1 42 1 176 2 127 2 294 2 153 6 158 2 157 2 296 9 378 1 73 2 246 1 247 1 28 3 
50 6 136 2 1 1 329 3 2 1 97 2 3 2 225 2 121 1 310 1 255 2 141 2 229 3 58 26 209 2 190 1 170 12 66 1 105 2 319 3 265 1 267 1 197 1 176 3 127 1 153 4 294 4 158 3 157 3 296 14 378 1 73 2 246 2 28 3 
50 6 329 5 1 1 136 4 97 4 2 1 52 1 3 2 224 1 225 4 141 3 229 3 58 38 190 1 66 1 105 1 69 1 197 1 153 8 294 4 157 3 158 3 296 19 73 4 246 3 28 4 75 1 310 1 121 1 255 4 361 1 209 1 170 19 319 4 265 1 267 1 42 1 176 3 127 1 270 1 378 1 135 1 380 1 
50 8 75 1 136 4 1 1 329 5 2 1 97 3 52 1 3 2 224 1 225 3 121 1 310 1 141 3 255 3 229 4 361 1 58 35 209 1 190 1 170 16 66 1 105 2 319 4 265 1 69 1 267 1 197 1 42 1 176 4 127 1 294 4 153 7 270 1 158 4 157 4 296 19 378 1 73 4 246 3 380 1 135 1 28 4 
50 4 75 1 136 7 1 1 329 8 2 1 97 7 3 1 167 2 225 7 121 1 310 1 141 2 255 7 229 2 361 1 58 49 209 1 190 1 170 23 66 1 105 1 319 7 265 1 69 1 267 1 197 1 42 2 176 2 127 1 294 4 153 14 270 1 158 2 157 2 296 26 378 1 73 4 246 4 380 1 135 1 28 7 
177 1 230 1 195 1 173 1 196 1 223 1 377 1 60 1 254 1 318 1 
144 1 242 1 
104 1 177 1 230 1 271 1 173 1 196 1 377 1 37 1 318 1 
304 1 195 1 138 1 196 1 173 1 254 1 70 1 140 1 280 1 177 1 230 1 341 2 360 1 377 1 298 1 60 1 193 1 318 1 
304 1 195 1 138 1 196 1 173 1 254 1 70 1 140 1 280 1 177 1 230 1 341 2 360 1 377 1 298 1 60 1 193 1 318 1 
304 1 195 1 138 1 196 1 173 1 254 1 70 1 140 1 280 1 177 1 230 1 341 2 360 1 377 1 298 1 60 1 193 1 318 1 
312 1 288 1 68 1 
312 1 288 1 68 1 
238 1 139 1 
238 1 68 1 139 1 
65 1 226 1 
304 1 32 1 250 1 226 1 140 1 337 2 230 1 186 2 360 1 341 1 191 2 233 1 102 2 144 1 318 1 65 1 173 1 196 1 372 1 70 1 242 1 350 1 177 1 295 1 377 1 25 1 379 2 
312 1 288 1 
238 1 68 1 139 1 
96 1 50 2 115 2 332 1 4 1 166 1 8 1 337 2 208 1 229 1 58 2 315 2 191 2 102 2 170 1 236 1 259 1 343 1 86 1 171 2 373 1 17 1 107 2 176 1 157 1 158 1 296 1 46 1 131 1 26 1 132 1 
301 1 259 1 86 1 115 1 347 1 6 1 373 1 107 1 20 1 187 1 326 1 131 1 315 1 159 1 
311 1 301 1 219 1 0 1 115 1 188 1 264 1 315 1 347 1 107 1 
301 1 0 1 115 2 264 1 347 1 107 2 175 1 311 1 219 1 188 1 315 2 
301 1 115 1 264 1 107 1 311 1 219 1 188 1 315 1 376 1 
206 1 
38 1 137 1 289 1 276 1 214 1 252 1 278 1 71 1 298 1 61 1 
329 2 319 2 163 2 114 5 97 2 212 10 289 5 348 5 334 1 225 2 90 1 298 5 49 5 28 2 61 5 
38 1 74 1 298 1 365 1 70 1 140 1 
74 2 115 4 253 2 278 2 252 1 140 3 54 1 101 1 315 4 365 4 317 1 61 2 259 1 86 1 289 2 214 2 373 1 216 2 107 4 70 3 71 2 152 1 20 2 91 2 178 1 326 1 131 1 244 1 159 1 
38 1 137 1 289 1 276 1 298 1 61 1 356 1 
38 1 74 1 212 1 289 1 214 1 40 1 266 1 252 1 278 1 70 1 71 1 140 1 155 1 298 2 365 1 49 1 61 1 
329 2 137 1 97 2 276 1 5 2 278 4 334 2 225 2 140 5 56 2 282 3 61 8 289 9 106 2 348 6 107 3 70 5 71 4 20 1 21 1 23 2 244 1 298 8 353 1 28 2 74 3 305 1 163 2 114 6 115 3 253 1 252 4 33 2 258 2 35 1 315 3 365 5 84 2 368 2 38 2 259 4 86 3 369 2 319 2 212 12 214 4 323 3 373 3 216 2 175 1 90 2 91 1 131 10 49 6 
74 1 329 2 163 2 114 5 97 2 278 2 252 2 225 2 121 1 140 1 310 1 141 1 34 1 190 1 365 1 61 5 38 2 319 2 212 6 289 8 87 1 214 2 267 1 348 5 197 1 216 1 70 1 71 2 90 1 91 1 73 1 298 5 246 1 49 3 28 2 
329 1 75 1 163 1 289 2 214 1 252 1 278 1 225 1 70 1 71 1 140 1 207 1 221 1 380 1 135 1 61 2 
50 2 76 1 115 1 53 1 203 1 4 1 337 2 229 1 186 2 58 1 315 1 191 3 282 1 102 3 284 2 170 1 343 1 259 1 86 1 373 1 107 1 291 1 176 1 350 1 20 1 158 1 157 1 374 1 46 1 131 1 47 1 379 2 
38 2 114 2 212 4 289 1 214 1 69 1 348 2 252 1 278 1 216 1 71 1 91 1 298 4 49 2 61 2 
230 1 173 1 314 1 60 1 226 1 
230 1 173 1 189 1 
230 1 173 1 189 1 
230 1 173 1 189 1 
44 1 230 1 173 1 
44 1 230 1 173 1 
44 1 230 1 173 1 
230 1 173 1 
177 1 318 1 
50 2 66 1 75 1 136 2 329 2 176 1 225 1 255 2 153 4 229 1 158 1 157 1 296 4 58 7 221 1 135 1 170 3 380 1 
66 1 50 2 329 1 176 1 255 1 153 1 229 1 157 1 158 1 296 2 58 2 28 1 
66 1 50 2 136 1 329 1 319 1 97 1 225 1 176 1 255 1 153 2 229 1 157 1 158 1 296 2 58 4 170 2 28 1 
66 1 50 6 105 1 75 1 136 1 224 1 217 1 176 3 255 1 153 2 229 3 157 3 158 3 58 3 296 1 170 2 135 1 
50 10 75 2 329 5 136 6 97 3 307 1 224 1 225 3 141 1 255 5 229 5 361 1 58 28 170 14 66 1 105 2 319 3 263 1 69 1 349 1 42 1 217 1 176 5 153 11 270 1 220 1 158 5 157 5 296 14 73 4 246 3 380 2 135 2 28 3 
50 2 329 1 75 1 136 2 141 1 229 1 58 5 361 1 190 1 170 2 66 1 69 1 176 1 153 2 270 1 158 1 157 1 296 3 73 1 246 1 135 1 380 1 
50 4 136 2 75 1 329 2 141 1 255 1 229 2 361 1 58 8 190 1 170 3 66 1 319 1 69 1 349 1 42 1 176 2 153 3 270 1 158 2 157 2 296 5 73 2 246 1 380 1 135 1 28 1 
50 6 75 1 329 3 136 3 97 2 225 2 121 1 310 1 255 1 141 1 229 3 361 1 58 16 190 1 170 8 66 1 105 1 319 2 69 1 197 1 267 1 349 1 176 3 153 4 270 1 158 3 157 3 296 8 73 1 246 1 380 1 135 1 28 2 
50 6 75 1 329 3 136 3 97 1 225 1 310 1 121 1 255 2 141 1 229 3 361 1 58 14 190 1 170 5 66 1 105 1 319 2 69 1 197 1 267 1 349 1 176 3 153 5 270 1 158 3 157 3 296 9 73 1 246 1 380 1 135 1 28 2 
50 2 329 1 75 1 136 2 141 1 229 1 58 5 361 1 190 1 170 2 66 1 69 1 176 1 153 2 270 1 158 1 157 1 296 3 73 1 246 1 135 1 380 1 
50 2 329 2 136 1 97 2 225 2 310 1 121 1 255 1 141 1 229 1 58 12 190 1 170 6 66 1 319 2 197 1 267 1 176 1 153 2 158 1 157 1 296 6 73 1 246 1 28 2 
50 8 75 1 329 3 136 3 97 1 225 1 121 1 310 1 255 2 141 1 229 4 361 1 58 15 190 1 170 6 66 1 105 2 319 2 69 1 267 1 197 1 349 1 176 4 153 5 270 1 158 4 157 4 296 9 73 1 246 1 380 1 135 1 28 2 
50 8 329 3 136 3 97 2 224 1 225 2 121 1 310 1 255 3 141 1 229 4 58 16 190 1 170 7 66 1 105 2 319 3 267 1 197 1 176 4 153 6 158 4 157 4 296 9 73 1 246 1 28 3 
75 2 136 4 329 3 69 1 225 1 255 3 153 7 270 1 58 7 361 1 296 5 221 1 170 2 135 2 380 2 
50 8 75 1 329 3 136 3 97 1 224 1 225 1 121 1 310 1 255 1 141 1 229 4 361 1 58 15 190 1 170 6 66 1 105 2 319 2 69 1 267 1 197 1 176 4 153 4 270 1 158 4 157 4 296 9 73 1 246 1 380 1 135 1 28 2 
50 4 329 1 136 2 105 1 75 1 69 1 176 2 255 1 153 3 229 2 270 1 157 2 158 2 58 5 296 3 361 1 380 1 170 2 135 1 
75 1 136 2 329 1 69 1 356 1 153 2 270 1 361 1 296 2 58 3 170 1 135 1 380 1 
50 2 136 1 329 1 319 1 97 1 349 1 225 1 176 1 255 1 153 2 229 1 157 1 158 1 296 2 58 4 170 2 28 1 
136 1 329 1 319 1 97 1 42 1 225 1 141 1 255 1 153 2 58 7 296 3 73 2 246 1 170 4 28 1 
50 4 75 2 329 3 136 5 97 2 167 1 225 2 255 4 229 2 361 1 58 20 83 1 170 10 105 2 319 2 69 1 42 1 176 2 217 1 153 9 270 1 157 2 158 2 296 10 73 2 246 2 380 1 135 2 28 2 
58 1 73 1 170 1 
58 1 296 1 246 1 
50 2 329 1 136 2 319 1 97 1 349 1 334 1 176 1 225 1 255 1 153 3 229 1 158 1 157 1 58 6 296 3 170 3 28 1 
50 2 329 2 136 1 97 2 225 2 310 1 121 1 255 1 141 1 229 1 58 12 190 1 170 6 66 1 319 2 197 1 267 1 176 1 153 2 158 1 157 1 296 6 73 1 246 1 28 2 
329 1 58 1 296 1 380 1 
50 2 136 1 75 1 105 1 217 1 176 1 255 1 153 2 229 1 270 1 157 1 158 1 296 1 361 1 58 3 135 1 170 2 
337 1 191 1 102 1 279 1 268 1 350 1 123 1 
147 1 330 1 371 1 268 1 279 1 350 1 123 1 337 1 357 1 338 1 191 1 102 1 
259 1 86 1 115 4 373 1 107 4 175 1 20 1 326 1 315 4 131 1 192 1 159 1 366 1 
259 2 86 1 115 2 15 1 373 1 253 1 107 2 108 1 325 1 297 1 315 2 131 1 92 1 282 1 
259 1 20 1 30 1 172 1 115 1 315 1 79 1 373 1 107 1 18 1 
259 1 96 1 86 1 208 1 115 2 264 1 131 1 315 2 373 1 107 2 175 1 
96 1 259 2 86 2 115 5 373 2 78 1 253 1 107 5 175 1 118 1 20 1 326 1 315 4 131 3 192 1 159 1 
96 1 259 2 86 2 115 5 373 2 78 1 253 1 107 5 175 1 20 1 326 1 315 4 131 3 192 1 159 1 194 1 
259 1 20 1 86 1 115 1 326 1 131 1 315 1 373 1 159 1 107 1 356 1 
259 1 86 1 115 1 373 1 107 1 291 1 350 1 337 1 20 1 186 1 131 1 315 1 191 2 282 1 47 1 102 2 379 1 327 1 
259 1 86 2 346 1 115 1 106 1 373 1 253 1 107 1 291 1 309 1 350 1 337 2 186 2 131 3 315 1 191 2 282 2 47 1 102 2 379 1 235 1 327 1 368 1 
115 2 253 1 309 1 337 2 186 2 315 2 191 2 282 2 102 2 235 1 366 1 368 1 145 1 259 1 86 2 346 1 106 1 373 1 107 2 350 1 131 3 47 1 379 1 327 1 
38 1 259 1 86 1 115 3 106 1 323 1 373 1 253 1 107 3 151 1 70 2 140 2 20 1 269 1 258 1 315 3 131 4 298 1 282 1 84 1 365 1 366 1 368 1 
38 1 259 1 86 1 115 3 106 1 323 1 373 1 253 1 107 3 70 2 140 2 20 1 56 1 258 1 315 3 131 4 298 1 282 1 84 1 365 1 366 1 368 1 
259 1 115 1 315 1 373 1 94 1 107 1 
96 1 259 3 86 2 171 1 115 7 264 1 78 1 373 2 118 1 175 1 107 7 325 1 20 2 21 1 315 6 131 3 92 1 94 1 282 1 133 1 125 1 
50 4 329 1 136 2 75 1 76 1 332 1 115 1 203 1 4 2 337 1 186 1 229 2 58 3 361 1 315 1 191 2 282 1 102 2 170 1 13 1 259 1 86 1 211 1 69 1 373 1 175 1 107 1 291 1 176 2 126 1 218 1 350 1 153 2 156 1 270 1 157 2 158 2 296 2 46 2 131 1 26 1 47 1 379 1 380 1 135 1 327 1 
74 1 137 1 115 1 276 1 5 1 278 2 252 2 140 3 56 1 258 1 315 1 365 2 84 1 61 1 38 1 369 1 289 1 214 2 323 1 107 1 70 3 71 2 20 1 295 1 23 1 244 1 131 2 298 1 
259 2 86 1 115 2 373 1 175 1 107 2 21 1 258 1 315 2 131 2 94 1 282 1 353 1 
145 1 259 1 86 1 115 1 373 1 107 1 350 1 337 1 20 1 186 1 131 1 315 1 191 2 282 1 47 1 102 2 379 1 327 1 
259 2 86 1 115 1 373 1 253 1 107 1 325 1 21 1 315 1 131 1 92 1 282 1 125 1 
168 1 43 1 344 1 275 1 350 1 
38 1 344 2 346 1 275 1 309 1 70 2 89 1 140 2 350 1 168 2 185 1 43 2 295 1 298 1 351 1 84 1 235 1 124 1 367 1 
337 1 168 1 344 1 275 1 191 1 102 1 17 1 8 1 236 1 
185 1 275 1 367 1 
10 1 228 1 198 1 303 1 355 1 313 1 274 1 41 1 
303 1 355 1 274 4 41 2 88 1 16 1 9 1 19 1 228 4 10 3 198 2 154 2 112 1 222 1 
303 1 355 1 51 1 274 2 41 1 204 1 10 1 228 2 198 1 154 1 313 1 199 1 
303 1 355 1 274 3 41 1 16 2 10 1 228 3 19 2 198 1 313 1 232 1 222 1 
98 2 10 2 239 1 245 1 
14 1 228 1 303 1 355 1 313 1 274 1 
10 1 228 2 198 1 154 1 109 1 303 1 355 1 313 1 274 2 41 1 
169 1 
10 1 228 1 198 1 303 1 355 1 313 1 274 1 41 1 
10 1 198 1 41 1 356 1 
10 1 228 1 198 1 303 1 355 1 274 1 41 1 
228 1 287 1 375 1 
303 1 355 1 274 3 41 1 16 1 10 1 228 3 19 2 198 1 45 1 313 1 222 1 
10 1 228 2 198 1 154 1 303 1 370 1 355 1 274 2 41 1 
10 1 228 1 30 1 331 1 303 1 355 1 313 1 274 1 79 1 234 1 112 1 
10 1 228 1 198 1 303 1 355 1 313 1 274 1 
228 1 198 2 303 1 355 1 313 1 274 1 41 1 
303 2 355 2 148 1 274 2 10 1 228 2 198 1 313 1 180 1 63 1 
303 1 355 1 274 3 41 1 88 1 228 3 10 2 198 1 142 1 109 1 154 2 313 1 112 1 
30 2 303 1 331 1 355 1 274 2 41 1 79 1 18 1 10 1 228 2 198 1 154 1 313 1 22 1 283 1 
303 2 355 2 370 1 274 4 41 1 88 1 228 4 10 2 198 1 154 2 313 1 130 1 112 1 
303 1 355 1 274 3 41 1 228 3 19 1 10 1 154 1 198 1 109 1 313 1 
9 1 10 1 88 1 112 1 
10 1 198 1 

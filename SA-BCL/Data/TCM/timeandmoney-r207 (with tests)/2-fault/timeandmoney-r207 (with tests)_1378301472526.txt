#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (245,288,373) (245,288,373) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (245,288,373) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (245,288,373) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (40,220) (40,220) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (245,288,373) (245,288,373) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 2 79 2 179 1 276 1 309 2 153 1 155 1 234 1 9 1 318 5 43 1 257 9 188 1 211 6 241 1 242 2 117 2 297 2 299 1 328 1 17 1 282 1 50 3 102 4 69 1 198 1 28 2 337 9 
149 2 79 2 179 1 276 1 309 2 153 1 155 1 234 1 9 1 318 5 43 1 257 9 188 1 211 6 241 1 117 2 242 2 297 2 299 1 328 1 17 1 282 1 50 3 102 4 69 1 198 1 28 2 337 9 
149 2 79 2 179 1 276 1 309 2 153 1 155 1 234 1 9 1 318 6 43 1 257 10 188 1 211 7 241 1 117 2 242 2 297 2 299 1 328 1 17 1 282 1 50 4 102 5 69 1 198 1 28 2 337 10 
149 2 79 2 179 1 276 1 309 2 153 1 155 1 234 1 9 1 318 4 43 1 257 7 188 1 211 4 241 1 117 2 242 1 297 2 299 1 328 1 282 1 50 2 102 3 69 1 198 1 28 2 337 7 
149 1 257 4 211 3 241 1 179 1 79 1 242 2 297 1 309 1 153 1 328 1 17 1 234 1 50 1 102 2 28 1 337 4 318 3 
257 1 149 1 241 1 179 1 79 1 117 1 297 1 351 1 134 1 155 1 234 1 366 1 28 1 337 1 225 1 
257 3 211 1 241 1 179 1 79 2 117 1 297 2 276 1 234 1 50 1 102 1 337 3 318 2 
149 1 79 2 179 1 276 1 309 1 153 1 234 1 58 1 318 5 257 9 188 1 211 7 241 1 117 1 242 2 297 2 328 1 17 1 50 3 102 4 198 1 28 1 29 1 337 9 
149 1 79 2 179 1 276 1 309 1 153 1 234 1 58 1 318 5 257 9 188 1 211 7 241 1 117 1 242 2 297 2 328 1 17 1 50 3 102 4 198 1 28 1 29 1 337 9 
172 1 250 1 232 1 
157 1 172 1 42 2 
206 2 350 2 289 1 334 1 247 2 48 2 338 2 101 2 
151 1 81 1 82 1 247 3 135 2 233 1 41 1 206 3 289 1 142 1 59 2 116 1 13 1 347 1 350 2 145 1 16 2 352 1 94 1 324 1 372 1 120 1 261 2 355 1 48 2 262 1 217 1 101 2 70 1 127 1 219 1 334 1 106 2 284 1 359 1 338 2 52 1 
206 1 350 1 334 1 185 1 247 1 230 1 48 1 338 1 231 1 101 1 
176 1 131 1 322 1 247 1 232 1 101 1 172 1 206 1 379 1 185 1 25 1 273 1 240 1 256 1 
322 1 350 1 247 1 48 1 232 1 101 1 172 1 206 1 379 1 185 1 25 1 273 2 338 1 240 2 256 1 
93 1 273 1 240 1 61 1 18 1 
172 1 123 1 235 1 93 1 273 2 240 2 232 1 61 1 
273 1 240 1 61 1 
93 1 118 1 350 1 247 1 230 1 48 1 231 1 101 1 206 1 334 1 185 1 273 1 338 1 240 1 
172 1 
172 1 123 1 93 1 252 1 273 2 240 2 232 1 61 1 
45 2 294 1 348 1 0 1 93 2 244 1 2 1 63 2 232 1 172 1 123 1 125 1 358 2 290 1 273 5 316 1 75 1 240 5 61 2 
250 1 289 1 
350 1 247 2 48 1 101 2 206 2 289 2 306 1 222 1 338 1 
6 1 168 1 321 1 
13 1 16 1 81 1 324 1 247 1 261 1 262 1 217 1 233 1 268 1 206 1 127 1 289 1 142 1 59 1 52 1 
13 1 81 1 16 1 324 1 247 2 261 1 48 1 262 1 168 1 217 1 101 1 233 1 206 2 127 1 142 1 59 1 254 1 338 1 52 1 76 1 
350 1 206 3 289 1 247 3 48 3 338 3 76 1 101 3 
206 1 185 1 247 1 230 1 48 1 338 1 101 1 
206 1 350 1 185 1 247 1 306 1 48 1 222 1 338 1 101 1 
81 1 82 1 181 1 247 4 135 2 233 1 206 4 289 1 142 1 185 1 59 1 254 1 240 1 256 1 116 1 13 1 322 1 350 2 145 1 16 1 324 1 94 1 120 1 261 1 355 1 262 1 48 3 217 1 101 3 70 1 127 1 219 1 379 1 334 1 106 1 306 1 25 1 273 1 284 1 359 1 338 3 51 1 52 1 76 1 
176 1 206 2 289 1 133 1 247 2 48 1 338 1 76 1 101 2 
226 1 322 1 350 1 247 3 48 3 101 3 172 1 206 3 379 1 185 1 306 1 273 1 25 1 254 1 338 3 51 1 240 1 76 2 256 1 
350 1 247 2 48 2 168 1 101 2 6 1 206 2 306 1 338 2 76 1 
13 1 16 1 81 1 324 1 247 1 261 1 262 1 217 1 233 1 206 1 127 1 289 1 142 1 59 1 52 1 
13 1 16 1 81 1 247 1 261 1 217 1 233 1 206 1 127 1 289 1 142 1 59 1 360 1 362 1 52 1 
151 2 82 1 154 1 135 2 136 1 85 1 6 2 208 1 321 2 116 1 191 1 145 1 195 1 120 1 355 1 216 1 168 2 100 1 70 2 173 1 71 1 106 4 200 1 284 1 
322 1 57 1 206 1 185 1 247 1 48 1 338 1 101 1 
176 1 350 1 133 1 247 5 48 4 101 5 237 1 206 5 22 1 289 1 306 1 254 1 338 4 76 2 
57 1 206 2 185 1 247 2 230 1 48 2 338 2 101 2 
286 1 186 1 
286 1 186 1 
213 1 302 1 
213 1 302 1 
213 1 302 1 
236 1 286 1 186 1 
236 1 286 1 186 1 
78 1 286 1 186 1 
213 1 286 2 186 2 98 1 137 1 302 1 
236 1 286 1 186 1 
286 1 380 1 186 1 
286 1 380 1 186 1 
286 1 380 1 186 1 
370 1 33 1 34 2 286 2 182 2 264 2 263 1 55 2 137 1 172 1 68 2 207 1 8 1 186 2 273 2 163 1 240 2 346 1 44 3 
178 1 78 1 285 1 286 1 182 1 247 2 55 1 249 1 251 1 206 2 289 1 186 1 240 1 44 1 165 1 48 2 264 1 263 1 101 2 68 1 332 1 273 1 201 1 338 2 
149 1 309 1 28 1 
149 1 351 1 28 1 
296 1 351 1 139 1 309 2 109 1 28 3 
296 1 351 1 309 1 109 1 354 1 28 2 
296 1 351 1 309 1 109 2 28 2 
285 1 156 1 232 1 157 1 251 1 115 1 141 1 314 1 342 2 42 3 290 3 317 2 240 5 61 1 45 1 165 1 348 2 144 2 93 4 195 1 63 1 100 1 121 1 19 1 123 1 172 2 173 1 333 1 71 1 358 1 273 5 75 1 
150 1 132 1 232 1 157 3 140 1 115 2 141 1 314 2 42 9 290 8 317 6 255 1 240 9 61 6 165 4 45 2 348 6 371 5 144 6 93 7 244 1 195 3 47 1 63 2 100 3 121 3 18 5 172 5 123 1 173 3 71 3 358 2 27 1 273 9 75 1 
232 1 156 1 157 2 115 1 314 1 342 1 290 3 42 4 317 2 240 3 45 1 165 1 348 2 93 2 144 2 244 1 195 1 63 1 100 1 121 1 19 1 172 3 173 1 358 1 71 1 273 3 
150 1 232 1 156 1 157 3 115 1 314 1 342 2 42 7 290 5 317 4 240 4 45 1 165 2 348 4 144 4 93 3 244 1 195 2 47 1 63 1 100 2 121 2 19 1 172 4 173 2 358 1 71 2 27 1 273 4 
233 1 250 1 364 1 
233 1 274 1 
148 1 
233 1 52 1 
233 3 212 1 88 1 364 2 52 1 217 1 
233 1 52 1 217 1 
233 1 92 1 
129 1 91 1 151 4 180 1 275 1 111 2 203 1 216 2 171 1 87 1 70 3 173 1 71 1 106 7 208 3 344 1 90 1 
129 1 91 1 151 4 180 1 275 1 111 2 203 1 216 2 171 1 87 1 70 3 173 1 71 1 106 7 208 3 344 1 90 1 
129 1 91 1 151 4 180 1 275 1 110 1 111 2 203 1 216 2 171 1 87 1 70 3 173 1 71 1 106 7 208 3 344 1 90 1 
129 2 151 16 180 1 82 1 275 1 111 3 203 5 135 2 87 1 365 1 341 3 343 4 208 10 344 2 210 1 90 2 91 2 120 1 96 1 195 3 300 1 355 1 216 5 356 1 100 3 121 3 171 1 70 15 173 4 71 4 72 1 106 31 284 1 175 1 
129 1 151 5 180 1 82 2 275 1 111 2 203 1 135 4 87 1 208 4 344 1 60 1 210 1 90 1 91 1 120 2 355 2 146 1 216 3 70 4 173 1 71 1 106 9 284 2 
257 1 117 1 79 1 179 1 297 1 238 1 16 1 245 1 36 1 59 1 261 1 373 1 337 1 
257 2 14 1 211 1 117 1 79 1 103 1 297 1 238 1 16 1 245 1 59 1 261 1 337 2 74 1 
257 1 211 1 117 1 103 1 238 1 16 1 59 1 261 1 337 1 74 1 288 1 
14 1 257 1 79 1 117 2 297 1 16 1 261 1 53 1 40 1 127 1 238 2 220 1 59 1 337 1 
257 1 117 1 79 1 179 1 297 1 238 1 16 1 245 1 59 1 261 1 373 1 337 1 74 1 
99 1 
247 1 112 2 204 1 157 2 206 1 290 2 59 2 292 1 61 6 256 1 13 1 348 2 16 2 261 2 63 1 64 1 20 2 172 2 124 2 123 3 127 2 270 2 23 2 358 1 24 2 273 5 25 1 128 1 75 1 224 1 176 1 131 1 307 1 81 1 229 1 38 1 232 1 233 1 314 1 185 1 42 2 240 5 189 1 45 1 322 1 97 1 101 1 376 4 197 2 104 1 379 1 336 1 107 1 52 1 339 1 
176 1 322 1 131 1 307 1 247 1 97 1 38 1 101 1 123 1 376 2 206 1 379 1 24 1 185 1 252 1 25 1 273 3 240 3 292 1 61 2 339 1 256 1 
176 1 131 1 307 1 247 1 38 1 232 1 206 1 185 1 252 1 240 3 292 1 61 1 256 1 322 1 97 1 101 1 20 1 376 3 172 1 123 1 379 1 273 3 25 1 339 1 
176 1 131 1 307 1 247 1 38 1 232 1 206 1 185 1 252 1 240 3 292 1 256 1 61 2 322 1 97 1 101 1 20 1 123 1 376 3 172 1 379 1 23 1 24 1 273 3 25 1 339 1 
247 1 112 2 56 1 157 2 113 1 206 1 160 1 252 1 290 1 292 1 256 1 61 7 348 1 15 1 63 1 20 4 123 3 172 5 124 2 270 2 23 4 358 1 24 4 25 1 273 5 75 1 128 1 224 1 176 1 131 1 307 1 38 1 232 5 315 1 185 1 240 5 45 1 322 1 97 1 101 1 376 6 197 2 379 1 339 1 
176 1 131 1 307 1 247 1 38 1 112 2 232 1 204 1 157 2 206 1 185 1 42 2 290 1 240 4 292 1 61 4 256 1 45 1 348 1 322 1 97 1 63 1 101 1 20 2 172 2 123 2 124 2 376 4 197 2 270 2 23 2 358 1 379 1 24 2 273 4 25 1 128 1 75 1 224 1 339 1 
176 1 131 1 307 1 247 1 38 1 112 2 232 1 56 1 157 2 113 1 206 1 160 1 185 1 290 1 240 4 292 1 61 4 256 1 45 1 348 1 322 1 97 1 63 1 101 1 20 2 172 1 123 2 124 2 376 4 197 2 270 2 23 2 379 1 358 1 24 2 273 4 25 1 128 1 75 1 224 1 339 1 
176 1 131 1 307 1 247 1 38 1 112 2 232 1 56 1 157 2 113 1 206 1 160 1 185 1 290 1 240 4 292 1 61 4 256 1 45 1 348 1 322 1 97 1 63 1 101 1 20 2 172 1 123 2 124 2 376 4 197 2 270 2 23 2 379 1 358 1 24 2 273 4 25 1 128 1 75 1 224 1 339 1 
176 1 131 1 307 1 247 1 310 2 38 1 232 1 113 1 5 2 206 1 185 1 42 2 290 1 240 4 292 1 61 4 256 1 45 1 348 1 322 1 353 1 97 1 196 1 63 1 101 1 20 2 172 1 123 2 124 2 376 4 122 1 197 2 23 2 379 1 358 1 24 2 273 4 25 1 128 1 75 1 339 1 
176 1 131 1 307 1 247 1 38 1 112 2 232 1 56 1 157 2 113 1 206 1 160 1 185 1 290 1 240 4 292 1 256 1 61 5 45 1 348 1 322 1 15 1 97 1 63 1 101 1 20 3 172 1 123 2 124 2 376 5 197 2 270 2 358 1 379 1 23 3 24 3 273 4 25 1 128 1 75 1 224 1 339 1 
176 1 131 1 307 1 247 1 38 1 112 2 232 1 56 1 157 2 113 1 206 1 160 1 185 1 290 1 240 4 292 1 256 1 61 5 45 1 348 1 322 1 15 1 97 1 63 1 101 1 20 3 172 1 123 2 124 2 376 5 197 2 270 2 358 1 379 1 23 3 24 3 273 4 25 1 128 1 75 1 224 1 339 1 
176 1 131 1 307 1 247 1 310 2 38 1 232 1 204 1 5 2 206 1 185 1 42 2 290 1 240 4 292 1 61 4 256 1 45 1 348 1 322 1 353 1 97 1 63 1 101 1 20 2 172 1 123 2 124 2 376 4 197 2 23 2 358 1 379 1 24 2 273 4 25 1 128 1 75 1 339 1 
129 1 116 1 151 3 145 1 180 1 82 1 275 1 120 1 111 1 355 1 216 2 168 1 135 2 85 1 87 1 250 1 70 3 6 1 289 2 173 1 71 1 106 6 208 2 284 1 321 1 90 1 
151 8 82 2 203 1 54 1 135 4 41 1 341 3 6 4 138 1 289 1 343 3 208 2 187 1 164 1 321 11 116 2 259 1 145 1 120 2 96 1 195 1 355 2 216 1 168 11 100 2 121 2 70 6 219 1 173 1 71 2 72 1 106 14 284 2 
151 1 81 1 82 1 247 2 135 2 233 1 41 1 6 1 206 2 138 1 289 1 142 1 59 1 254 1 13 1 116 1 16 1 145 1 324 1 261 1 120 1 262 1 48 1 355 1 217 1 101 1 375 1 268 1 70 1 127 1 219 1 106 2 246 1 73 1 284 1 338 1 52 1 76 1 
151 10 247 3 248 2 111 1 203 4 206 3 6 7 289 2 59 3 208 8 254 1 116 3 13 2 16 3 261 3 120 3 355 3 262 2 216 4 168 7 217 2 121 2 70 10 127 1 219 1 173 3 71 3 74 1 76 1 129 1 81 2 180 1 82 3 275 1 37 2 311 1 135 6 233 2 87 1 41 1 138 1 142 2 367 2 90 1 321 7 145 3 94 2 324 2 195 2 48 1 100 2 49 1 101 1 331 2 199 1 106 20 284 3 338 1 52 2 
108 1 151 1 81 2 82 2 36 1 247 1 229 1 135 4 85 1 233 3 41 1 206 1 59 8 10 1 13 2 116 2 189 1 16 7 145 2 352 2 193 1 261 8 120 2 48 1 355 2 279 1 327 1 267 1 101 1 70 1 127 2 219 1 335 1 106 2 284 2 74 1 338 1 52 2 76 1 
151 1 1 1 82 1 247 1 135 2 6 1 206 1 138 1 208 1 321 1 116 1 350 1 145 1 120 1 195 1 48 1 355 1 216 1 168 1 100 1 101 1 121 1 70 2 173 1 71 1 106 3 306 1 284 1 338 1 
116 1 151 2 145 1 82 1 120 1 355 1 203 1 168 1 100 1 135 2 85 1 6 1 71 1 106 2 200 1 208 1 284 1 321 1 
116 1 145 1 82 1 120 1 195 1 355 1 216 1 168 1 154 1 135 2 85 1 70 2 6 1 173 1 106 2 208 1 284 1 321 1 
151 2 82 1 203 1 135 2 85 1 6 2 208 2 321 2 116 1 145 1 120 1 195 1 355 1 216 1 168 2 100 1 121 1 70 2 173 1 71 1 106 4 284 1 
116 1 151 2 145 1 82 1 120 1 279 1 355 1 203 1 168 1 100 1 135 2 6 1 71 1 106 2 200 1 208 1 284 1 321 1 
116 1 145 1 82 1 120 1 195 1 279 1 355 1 216 1 168 1 154 1 135 2 70 2 6 1 173 1 106 2 208 1 284 1 321 1 
151 2 82 1 203 1 135 2 6 2 208 2 321 2 116 1 145 1 120 1 195 1 355 1 279 1 216 1 168 2 100 1 121 1 70 2 173 1 71 1 106 4 284 1 
151 2 82 1 203 1 135 2 6 2 208 2 321 2 116 1 145 1 120 1 195 1 355 1 216 1 168 2 100 1 121 1 70 2 173 1 71 1 106 4 284 1 
151 1 81 1 82 1 247 1 135 2 233 1 41 1 206 1 289 1 142 1 59 1 13 1 116 1 16 1 145 1 324 1 94 1 261 1 120 1 262 1 355 1 217 1 70 1 127 1 219 1 106 2 284 1 52 1 
151 1 81 1 82 1 247 1 135 2 233 1 41 1 206 1 289 1 142 1 59 1 293 1 13 1 116 1 16 1 145 1 261 1 120 1 355 1 217 1 70 1 127 1 219 1 106 2 284 1 360 1 52 1 362 1 
151 2 82 1 203 1 135 2 6 2 138 1 208 2 321 2 116 1 145 1 120 1 195 1 355 1 216 1 168 2 100 1 121 1 70 2 173 1 71 1 106 4 284 1 
151 2 81 1 82 1 36 1 248 1 247 1 203 1 135 2 233 1 6 2 206 1 142 1 208 2 59 1 321 2 13 1 116 1 16 1 145 1 324 1 94 1 195 1 261 1 120 1 262 1 355 1 216 1 168 2 100 1 217 1 121 1 70 2 173 1 71 1 106 4 284 1 52 1 
151 2 82 1 247 1 203 1 135 2 206 1 6 1 138 1 208 1 321 1 116 1 350 1 145 1 46 1 195 1 120 1 48 1 355 1 168 1 100 1 101 1 121 1 70 1 173 1 71 1 106 3 306 1 284 1 338 1 
151 9 82 2 312 2 203 3 84 1 135 4 158 1 341 1 239 1 343 2 208 6 258 1 95 2 120 2 96 1 195 3 326 1 355 2 146 1 216 3 280 1 100 3 170 1 121 3 70 10 173 3 71 3 72 1 106 19 284 2 
151 14 82 3 312 1 203 2 84 1 135 6 158 2 341 2 239 1 343 2 208 4 210 2 95 4 120 3 195 2 147 1 326 2 355 3 146 1 216 2 266 1 100 3 374 1 329 1 170 1 121 3 70 12 173 2 378 1 174 1 71 3 106 26 72 2 284 3 
151 20 202 1 111 1 203 4 158 2 341 3 343 4 208 8 210 1 120 3 355 3 216 4 266 1 121 4 170 1 70 21 173 5 71 5 174 1 72 3 129 1 180 1 82 3 275 1 312 1 84 1 135 6 87 1 239 1 90 1 95 4 195 4 96 1 146 1 326 1 147 1 280 1 100 4 329 1 374 1 378 1 106 41 284 3 
129 1 151 20 180 1 82 4 275 1 202 1 111 1 312 1 203 3 84 1 135 8 158 2 87 1 341 3 239 1 343 4 208 7 210 2 90 1 95 4 120 4 96 1 195 3 147 1 326 1 355 4 146 1 216 4 280 1 266 1 100 4 374 1 329 1 170 1 121 4 70 18 173 4 378 1 174 1 71 5 72 3 106 38 284 4 
129 1 151 27 180 1 82 2 275 1 111 1 312 1 203 7 84 1 135 4 158 1 87 1 341 4 239 1 343 4 208 14 210 1 187 2 90 1 95 4 120 2 96 2 195 7 147 1 326 1 355 2 146 1 216 7 266 1 100 7 374 1 329 1 170 1 121 7 70 25 173 8 378 1 174 1 71 8 72 2 106 52 284 2 
370 1 68 1 286 1 182 1 186 1 163 1 264 1 4 1 55 1 137 1 
78 1 178 1 
377 1 68 1 286 1 182 1 272 1 186 1 221 1 264 1 55 1 
370 1 33 1 34 1 286 1 182 1 263 1 264 1 55 1 137 1 172 1 68 1 207 1 273 1 186 1 163 1 240 1 346 1 44 2 
370 1 33 1 34 1 286 1 182 1 263 1 264 1 55 1 137 1 172 1 68 1 207 1 273 1 186 1 163 1 240 1 346 1 44 2 
370 1 33 1 34 1 286 1 182 1 263 1 264 1 55 1 137 1 172 1 68 1 207 1 273 1 186 1 163 1 240 1 346 1 44 2 
236 1 143 1 98 1 
236 1 143 1 98 1 
269 1 380 1 
269 1 380 1 98 1 
249 1 201 1 
33 1 178 1 78 1 34 1 285 1 286 1 247 2 182 1 55 1 249 1 251 1 206 2 289 1 186 1 240 1 44 1 165 1 93 1 264 1 48 2 101 2 218 1 68 1 332 1 273 1 201 1 338 2 
236 1 143 1 
269 1 380 1 98 1 
32 1 151 1 81 1 82 1 247 2 287 1 135 2 233 1 41 1 206 2 138 1 59 2 10 1 13 1 116 1 166 1 145 1 62 1 16 2 352 2 119 1 261 2 120 1 355 1 267 1 101 2 70 1 219 1 106 2 284 1 52 1 
149 1 13 1 351 1 81 1 16 2 36 1 309 1 261 2 277 1 66 1 21 1 139 1 313 1 28 2 59 2 26 1 74 1 363 1 77 1 
149 1 13 1 351 1 16 1 81 1 309 1 261 1 66 1 21 1 139 1 313 1 28 2 59 1 26 1 319 1 74 1 77 1 
13 1 189 1 81 1 16 1 229 1 261 1 233 1 66 1 127 1 183 1 59 1 381 1 52 1 363 1 
149 1 13 1 351 1 16 1 81 1 309 1 261 1 277 1 66 1 21 1 139 1 313 1 28 2 59 1 26 1 74 1 363 1 77 1 
167 1 
172 1 348 1 250 1 125 1 0 1 290 1 232 1 
45 1 348 1 63 1 112 1 232 1 157 1 123 1 172 2 270 1 358 1 273 1 42 1 290 1 75 1 240 1 224 1 61 1 
0 1 157 6 290 9 59 3 162 1 61 5 13 4 348 8 16 3 212 1 214 2 260 2 261 3 63 4 64 1 217 3 121 2 123 3 172 8 125 1 127 1 173 2 358 4 71 2 271 2 273 5 75 4 30 2 177 1 35 1 80 2 81 3 36 1 274 3 37 2 364 2 232 2 233 10 278 2 314 2 42 12 368 2 317 6 369 2 240 5 45 4 190 1 92 2 144 6 325 1 195 2 100 2 379 2 52 3 
232 2 157 3 341 1 7 1 314 1 343 1 42 6 290 8 317 5 240 1 61 1 45 2 348 5 144 5 214 2 195 2 147 1 63 2 64 1 100 2 374 1 329 1 121 2 123 1 172 5 305 1 173 2 378 1 271 1 358 2 174 1 71 2 72 1 273 1 75 2 
129 1 247 1 230 1 231 1 56 1 87 1 206 1 185 1 290 2 240 1 90 1 45 1 348 2 118 1 350 1 214 2 48 1 63 1 101 1 304 1 173 1 271 1 358 1 71 2 334 1 273 1 75 1 338 1 
45 1 348 1 0 1 63 1 232 1 172 1 125 1 358 1 290 1 75 1 
348 5 144 5 37 1 214 2 195 2 100 2 121 2 157 5 172 5 173 2 271 1 71 2 42 10 290 5 317 5 
172 1 123 1 273 1 240 1 232 1 61 1 
177 2 81 1 229 1 233 1 314 2 89 1 59 4 290 2 162 1 240 3 61 4 13 1 45 2 189 1 348 2 244 1 16 4 261 4 63 2 64 2 123 2 127 2 358 2 336 1 107 1 273 3 75 1 52 1 31 1 
81 1 82 1 247 3 135 2 233 1 206 3 289 1 142 1 59 1 13 1 116 1 350 2 16 1 145 1 94 1 324 1 120 1 261 1 355 1 48 2 262 1 101 2 217 1 70 1 127 1 219 1 334 1 106 1 284 1 359 1 338 2 52 1 
45 1 348 2 144 2 111 1 63 1 64 1 232 2 157 2 172 4 358 1 314 1 42 4 290 1 317 2 75 1 
126 1 68 1 55 1 
126 1 68 1 55 1 
370 1 68 1 201 1 55 1 169 1 
126 1 68 1 55 1 
68 1 253 1 55 1 
68 1 253 1 55 1 
68 1 253 1 55 1 
68 1 55 1 
286 1 186 1 
129 1 151 4 180 1 82 2 275 1 120 2 111 1 355 2 203 1 216 2 135 4 87 1 70 4 173 1 71 1 106 8 208 3 284 2 210 1 90 1 
129 1 151 3 180 1 275 1 111 1 216 2 250 1 87 1 70 3 173 1 71 1 106 6 208 2 90 1 
151 2 82 1 195 1 120 1 355 1 216 1 203 1 100 1 135 2 121 1 70 2 159 1 173 1 71 1 106 4 208 2 284 1 
151 3 195 1 96 1 216 1 203 1 100 1 121 1 70 4 341 1 173 1 71 1 72 1 343 2 106 7 208 2 
129 2 151 11 180 1 82 2 275 1 3 1 111 1 203 4 54 1 135 4 87 1 341 2 343 2 208 9 210 2 187 1 90 2 96 1 195 2 120 2 355 2 216 5 100 2 121 2 70 12 173 3 71 3 106 23 284 2 
70 1 106 1 343 1 
151 1 341 1 106 1 
151 3 82 1 37 1 120 1 195 1 355 1 203 1 216 2 100 1 135 2 121 1 159 1 70 3 173 1 71 1 106 6 208 3 284 1 
151 6 82 1 203 1 135 2 341 1 343 1 208 2 120 1 195 2 355 1 146 1 147 1 216 1 100 2 329 1 374 1 121 2 70 6 173 2 378 1 174 1 71 2 106 12 72 1 284 1 
129 1 151 3 216 1 203 1 87 1 70 3 173 1 71 1 106 6 208 2 90 1 
129 1 151 1 180 1 82 1 275 1 3 1 120 1 355 1 203 1 216 1 135 2 70 2 106 3 208 2 284 1 210 1 90 1 
129 2 151 5 82 1 120 1 355 1 146 1 216 3 203 2 135 2 87 1 70 5 304 1 173 2 71 2 106 10 208 5 284 1 90 2 
151 2 82 1 120 1 146 1 355 1 203 1 100 1 135 2 71 1 106 2 208 1 284 1 
151 2 82 1 195 1 120 1 146 1 355 1 216 1 203 1 100 1 135 2 121 1 70 2 173 1 71 1 106 4 208 2 284 1 
129 1 151 1 82 3 3 1 120 3 146 1 355 3 216 1 203 1 280 1 135 6 70 2 106 3 208 2 284 3 210 1 90 1 
129 3 151 16 180 1 82 5 275 1 3 1 111 1 203 5 135 10 87 2 365 1 159 1 341 3 343 4 208 12 210 2 90 3 300 1 120 5 96 1 195 3 355 5 146 1 216 7 280 1 100 3 121 3 70 18 173 5 71 5 72 1 106 34 284 5 175 1 
129 1 151 4 180 1 82 1 275 1 111 1 135 2 87 1 341 1 343 1 208 2 90 1 120 1 355 1 146 1 216 2 70 4 173 1 378 1 71 1 106 8 72 1 284 1 
129 1 151 6 180 1 82 2 275 1 111 1 203 1 135 4 87 1 159 1 341 1 343 2 208 3 90 1 120 2 96 1 146 1 355 2 216 2 100 1 121 1 70 5 173 1 378 1 71 2 106 11 72 1 284 2 
129 1 151 9 180 1 82 3 275 1 111 1 203 1 135 6 87 1 159 1 341 1 343 1 208 4 210 1 90 1 120 3 195 2 355 3 146 1 147 1 216 3 100 2 374 1 329 1 121 2 70 10 173 3 378 1 174 1 71 3 106 19 72 1 284 3 
129 1 151 10 180 1 82 3 275 1 111 1 203 2 135 6 87 1 159 1 341 1 343 1 208 5 210 1 90 1 120 3 195 1 355 3 146 1 147 1 216 3 100 2 329 1 374 1 121 2 70 7 173 2 378 1 174 1 71 3 106 17 72 1 284 3 
129 1 151 4 180 1 82 1 275 1 111 1 135 2 87 1 341 1 343 1 208 2 90 1 120 1 355 1 146 1 216 2 70 4 173 1 378 1 71 1 106 8 72 1 284 1 
151 6 82 1 203 1 135 2 341 1 343 1 208 2 120 1 195 2 355 1 146 1 147 1 216 1 100 2 329 1 374 1 121 2 70 6 173 2 378 1 174 1 71 2 106 12 72 1 284 1 
129 1 151 10 180 1 82 4 275 1 111 1 203 2 135 8 87 1 159 1 341 1 343 1 208 5 210 2 90 1 120 4 195 1 147 1 355 4 146 1 216 3 100 2 374 1 329 1 121 2 70 8 173 2 378 1 174 1 71 3 106 18 72 1 284 4 
151 9 82 4 203 3 135 8 341 1 343 1 208 6 210 2 120 4 195 2 147 1 146 1 355 4 216 3 280 1 100 3 374 1 329 1 121 3 70 7 173 2 378 1 174 1 71 3 106 16 72 1 284 4 
129 3 151 3 180 2 275 1 216 3 203 3 87 1 70 4 173 1 71 1 106 7 208 6 90 3 
129 1 151 10 180 1 82 4 275 1 111 1 203 1 135 8 87 1 341 1 343 1 208 4 210 2 90 1 120 4 195 1 147 1 146 1 355 4 216 3 280 1 100 2 374 1 329 1 121 2 70 8 173 2 378 1 174 1 71 3 106 18 72 1 284 4 
176 1 206 1 289 1 194 1 247 1 133 1 101 1 
176 1 227 1 194 1 133 1 247 1 39 1 101 1 86 1 303 1 206 1 289 1 223 1 
13 1 233 1 189 1 250 1 127 1 81 1 16 1 229 1 59 1 261 1 52 1 
13 1 16 1 81 1 324 1 247 2 261 1 48 1 217 1 101 1 233 1 206 2 127 1 289 1 142 1 59 1 338 1 52 1 76 1 
13 1 177 1 92 1 322 1 16 1 81 1 324 1 247 2 261 1 48 1 217 2 101 2 233 3 206 2 278 1 289 1 142 1 185 1 25 1 59 1 338 2 52 2 76 1 
177 1 81 1 247 2 233 3 206 2 278 1 289 1 142 1 185 1 59 2 13 1 322 1 92 1 16 2 261 2 48 1 65 1 101 2 217 2 25 1 338 2 360 1 52 2 76 1 
177 1 81 1 274 1 364 1 232 1 233 4 278 1 59 3 240 2 61 1 13 1 323 1 92 1 16 3 261 3 330 1 65 1 217 1 172 1 127 1 379 1 273 2 52 1 
13 1 177 1 92 1 80 1 16 3 81 1 274 1 261 3 364 1 65 1 232 1 217 1 233 4 172 1 127 1 278 1 379 1 273 2 59 3 52 1 240 2 61 1 
13 1 81 1 16 1 335 1 59 1 261 1 
13 3 130 1 108 1 16 6 212 1 81 2 352 1 193 1 36 1 261 7 215 1 327 1 267 1 217 1 233 3 127 2 105 1 335 1 59 7 74 1 52 2 
151 3 248 1 247 2 111 1 6 1 206 2 289 2 59 1 208 2 116 2 13 1 16 1 119 1 261 1 120 2 262 1 355 2 216 2 168 1 217 1 70 3 173 1 71 1 76 1 129 1 81 1 180 1 82 2 36 1 275 1 135 4 233 1 87 1 138 1 142 1 367 1 90 1 321 1 145 2 324 1 94 1 48 1 101 1 106 6 284 2 338 1 52 1 
0 1 80 1 274 1 364 1 232 1 233 2 290 1 59 1 162 1 368 1 369 1 240 3 61 2 45 2 348 1 93 1 16 1 261 1 260 1 63 2 172 1 123 1 125 1 127 1 358 2 379 1 273 3 75 2 
190 1 13 2 16 2 212 1 81 1 36 1 261 2 364 1 217 1 233 2 335 1 59 2 52 1 
13 1 189 1 16 4 81 1 298 1 36 1 229 1 261 4 65 1 233 1 127 1 59 4 52 1 
177 1 13 2 130 1 308 1 16 2 81 1 311 1 261 2 217 1 233 1 283 1 105 1 59 2 52 1 
149 1 13 1 351 1 127 1 81 1 16 1 28 1 59 1 261 1 77 1 
13 1 16 2 81 1 36 1 261 2 287 1 267 1 233 1 59 2 74 1 52 1 
177 1 189 1 13 2 16 4 81 2 298 1 193 1 36 1 229 1 261 5 327 1 267 1 233 3 127 1 59 5 52 2 
177 1 189 1 13 2 16 4 81 2 298 1 36 1 229 1 228 1 261 5 327 1 267 1 233 3 127 1 59 5 52 2 
13 1 16 1 81 1 247 2 261 1 48 1 217 1 101 1 233 1 206 2 127 1 289 1 142 1 59 1 338 1 360 1 52 1 76 1 
177 1 13 2 130 1 16 1 212 1 81 1 261 1 215 1 217 1 233 1 105 1 59 1 52 1 
289 1 184 1 281 1 320 1 301 1 
322 1 349 1 93 1 192 1 281 1 232 1 301 2 172 1 289 1 379 1 185 1 184 2 25 1 273 2 291 1 51 1 240 2 320 2 256 1 
32 1 166 1 206 1 62 1 247 1 281 1 320 1 101 1 301 1 
349 1 192 1 281 1 
234 1 250 1 241 1 318 1 
234 1 257 1 241 1 79 1 297 1 318 1 337 1 
257 1 117 1 357 1 
257 3 179 1 79 1 241 1 297 1 265 1 83 1 234 1 161 1 9 2 318 1 337 3 
234 1 257 2 211 1 241 1 242 1 79 1 297 1 318 1 337 2 
149 1 257 1 102 1 79 1 179 1 297 1 309 1 28 1 318 1 337 1 328 1 
234 1 257 1 79 1 179 1 297 1 318 1 337 1 
234 2 257 1 241 1 79 1 179 1 297 1 337 1 
257 2 179 1 79 2 297 2 243 1 234 1 318 1 337 2 11 1 12 1 
257 3 188 1 211 2 241 1 179 1 79 1 297 1 234 1 50 1 102 1 198 1 337 3 318 2 
257 2 149 1 211 1 241 1 179 1 79 1 351 1 297 1 309 1 234 1 67 1 139 1 28 2 318 1 337 2 
257 4 211 2 241 1 179 1 79 2 242 1 297 2 17 1 234 1 50 1 102 1 337 4 318 2 
234 1 257 1 241 1 79 1 179 1 297 1 318 1 337 1 
257 4 211 2 241 2 79 1 297 1 265 1 234 2 50 1 102 1 366 1 9 1 161 1 337 4 318 3 
257 2 211 1 179 1 79 1 241 1 297 1 234 1 340 1 318 1 337 2 29 1 345 1 
257 3 179 1 79 1 241 1 297 1 265 2 234 1 161 1 9 2 318 1 337 3 361 1 
152 1 114 2 318 2 209 1 
205 1 257 1 79 1 179 1 297 1 337 1 
234 1 188 1 257 2 211 1 241 1 79 1 179 1 297 1 318 1 337 2 
295 1 
234 1 257 1 241 1 79 1 179 1 297 1 318 1 337 1 
188 1 234 1 257 3 211 1 241 1 79 1 179 1 297 1 9 1 318 1 337 3 
50 1 102 1 366 1 318 1 
234 1 318 1 

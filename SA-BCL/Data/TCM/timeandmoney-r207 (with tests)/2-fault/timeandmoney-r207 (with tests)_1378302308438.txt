#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (118,225,310,373,374) (105,358) (105,358) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (118,225,310,373,374) (105,358) (105,358) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (118,225,310,373,374) (105,358) (105,358) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (118,225,310,373,374) (105,358) (105,358) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 378 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (118,225,310,373,374) (94,139) (94,139) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 378 321 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 378 321 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 14 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (41,73,123,126) (41,73,123,126) (81,119,174) (81,119,174) (81,119,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (41,73,123,126) (41,73,123,126) (81,119,174) (81,119,174) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (41,73,123,126) (41,73,123,126) (81,119,174) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (41,73,123,126) (41,73,123,126) (81,119,174) (81,119,174) (81,119,174) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (41,73,123,126) (41,73,123,126) 237 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 115 1 128 1 195 1 231 1 375 1 118 1 41 1 4 1 251 1 358 1 226 1 105 1 135 1 126 1 
73 1 115 1 128 1 195 1 231 1 375 1 118 1 41 1 4 1 251 1 358 1 226 1 105 1 135 1 126 1 
73 1 115 1 128 1 195 1 231 1 375 1 118 1 41 1 4 1 251 1 358 1 226 1 105 1 135 1 126 1 
73 1 115 1 128 1 195 1 231 1 375 1 118 1 41 1 4 1 251 1 358 1 226 1 105 1 135 1 126 1 
73 1 50 1 230 1 128 1 195 1 231 2 375 1 41 2 353 1 100 1 226 1 123 1 378 1 126 1 
73 1 139 1 337 1 115 1 128 1 231 1 195 1 118 1 41 1 4 1 226 1 94 1 126 1 
73 2 115 1 230 1 0 1 128 1 231 3 273 1 41 3 100 2 326 1 123 1 154 1 126 2 
50 1 73 2 114 1 270 1 115 1 230 3 128 1 195 1 231 7 375 1 353 1 41 7 321 1 100 3 218 1 226 1 123 5 326 2 154 1 378 1 126 2 
50 1 73 2 114 1 270 1 115 1 230 3 128 1 195 1 231 7 375 1 353 1 41 7 321 1 100 3 218 1 226 1 123 5 326 2 154 1 378 1 126 2 
51 1 64 1 356 1 
363 1 38 2 356 1 
58 2 288 2 76 2 20 2 272 2 122 1 62 2 56 1 
216 1 362 2 63 2 293 1 272 2 129 1 27 1 3 1 183 2 248 1 250 1 29 1 6 1 302 1 91 1 46 1 223 1 191 1 136 1 280 1 141 1 76 2 196 2 284 2 56 1 43 1 42 1 313 1 151 1 58 2 288 2 20 3 238 1 122 1 62 3 124 1 178 1 
169 1 58 1 288 1 76 1 20 1 272 1 34 1 122 1 62 1 318 1 
51 1 12 1 261 1 356 1 5 1 19 1 267 1 253 1 58 1 20 1 32 1 192 1 62 1 318 1 
51 1 261 2 76 1 272 1 356 1 5 1 267 1 253 1 288 1 58 1 20 1 192 2 32 1 62 1 318 1 
163 1 261 1 329 1 192 1 157 1 
163 1 51 1 282 1 261 2 171 1 192 2 356 1 157 1 
163 1 261 1 192 1 
261 1 169 1 194 1 76 1 272 1 157 1 288 1 58 1 20 1 34 1 192 1 122 1 62 1 318 1 
356 1 
163 1 51 1 304 1 282 1 261 2 192 2 356 1 157 1 
163 2 51 1 281 1 181 1 282 1 261 5 26 2 307 2 356 1 298 1 157 2 275 2 172 1 343 1 345 1 192 5 83 1 72 1 381 1 
64 1 56 1 
76 1 272 1 146 1 265 1 56 2 58 2 288 1 20 2 62 2 
319 1 350 1 286 1 
63 1 196 1 27 1 3 1 284 1 149 1 56 1 6 1 42 1 302 1 223 1 151 1 20 1 62 1 136 1 178 1 
350 1 63 1 27 1 272 1 196 1 3 1 284 1 6 1 42 1 302 1 151 1 223 1 288 1 58 1 20 2 136 1 62 2 213 1 178 1 370 1 
76 1 58 3 288 3 20 3 272 3 62 3 56 1 213 1 
58 1 288 1 20 1 272 1 34 1 62 1 318 1 
58 1 288 1 76 1 20 1 272 1 146 1 62 1 265 1 318 1 
362 1 63 1 293 1 27 1 272 3 3 1 183 2 248 1 250 1 29 1 5 1 6 1 302 1 91 1 253 1 46 1 223 1 67 1 256 1 32 1 192 1 136 1 280 1 370 1 261 1 141 1 76 2 196 1 284 1 146 1 56 1 43 1 267 1 42 1 151 1 58 3 288 3 20 4 238 1 122 1 62 4 213 1 318 1 178 1 
12 1 58 2 288 1 20 2 272 1 259 1 62 2 56 1 213 1 
261 1 37 1 76 1 272 3 146 1 356 1 5 1 267 1 253 1 288 3 58 3 20 3 67 1 192 1 32 1 62 3 213 2 318 1 370 1 
319 1 350 1 58 2 288 2 76 1 20 2 272 2 146 1 62 2 213 1 
63 1 196 1 27 1 3 1 284 1 56 1 42 1 6 1 302 1 223 1 151 1 20 1 62 1 136 1 178 1 
229 1 63 1 196 1 27 1 3 1 284 1 56 1 42 1 6 1 151 1 20 1 62 1 48 1 136 1 178 1 
319 2 84 1 180 1 362 4 217 1 293 1 183 2 250 2 131 1 29 1 91 1 46 1 69 1 95 1 164 1 350 2 141 1 53 1 43 1 286 2 208 1 120 1 268 1 124 2 
267 1 58 1 288 1 20 1 272 1 62 1 318 1 332 1 
12 1 168 1 76 1 197 1 272 4 146 1 56 1 288 4 58 5 20 5 259 1 62 5 213 2 370 1 
58 2 288 2 20 2 272 2 34 1 62 2 332 1 318 1 
161 1 315 1 
161 1 315 1 
257 1 17 1 
257 1 17 1 
257 1 17 1 
39 1 161 1 315 1 
39 1 161 1 315 1 
351 1 161 1 315 1 
52 1 116 1 257 1 161 2 315 2 17 1 
39 1 161 1 315 1 
305 1 161 1 315 1 
305 1 161 1 315 1 
305 1 161 1 315 1 
261 2 116 1 262 3 263 2 295 1 145 1 147 1 90 1 356 1 80 1 366 2 221 1 287 2 161 2 315 2 193 1 192 2 71 2 328 2 
244 1 272 2 366 1 161 1 192 1 71 1 137 1 328 1 261 1 351 1 262 1 147 1 56 1 266 1 287 1 288 2 58 2 152 1 20 2 315 1 104 1 62 2 241 1 291 1 
195 1 375 1 226 1 
337 1 195 1 226 1 
11 1 337 1 375 2 226 3 103 1 21 1 
11 1 337 1 375 1 224 1 226 2 103 1 
11 2 337 1 375 1 226 2 103 1 
84 1 363 1 106 2 25 2 26 1 275 1 157 4 343 2 301 1 345 1 133 1 192 5 137 1 163 1 164 1 51 1 166 1 282 1 261 5 97 1 38 3 307 1 53 1 355 2 55 1 309 1 356 2 266 1 172 3 312 1 120 1 291 1 
84 3 320 1 363 3 106 6 25 6 26 2 28 1 157 7 275 2 343 6 345 1 192 9 112 1 163 6 164 3 51 1 166 3 261 9 282 1 97 2 352 1 38 9 307 2 53 3 329 5 99 5 309 1 356 5 150 1 266 4 172 8 312 2 120 3 121 1 83 1 
84 1 363 2 26 1 25 2 106 2 157 2 275 1 301 1 343 2 133 1 192 3 51 1 164 1 261 3 97 1 166 1 307 1 38 4 53 1 355 1 356 3 266 1 172 3 312 1 120 1 83 1 
84 2 320 1 363 3 106 4 25 4 26 1 28 1 275 1 157 3 301 1 343 4 133 1 192 4 51 1 164 2 261 4 97 1 166 2 352 1 38 7 307 1 53 2 355 2 356 4 266 2 172 5 312 1 120 2 83 1 
64 1 6 1 18 1 
344 1 6 1 
334 1 
6 1 136 1 
205 1 6 3 3 1 170 1 136 1 18 2 
6 1 3 1 136 1 
6 1 348 1 
217 3 362 7 53 1 77 2 185 1 250 3 173 1 203 1 204 1 324 1 120 1 30 1 314 1 268 2 336 1 327 1 124 4 
217 3 362 7 53 1 77 2 185 1 250 3 173 1 203 1 204 1 324 1 120 1 30 1 314 1 268 2 336 1 327 1 124 4 
217 3 362 7 53 1 77 2 185 1 250 3 173 1 203 1 204 1 324 1 120 1 30 1 314 1 258 1 268 2 336 1 327 1 124 4 
84 3 362 31 217 10 156 1 293 1 183 2 185 1 250 15 324 1 91 1 46 1 30 2 278 1 327 1 164 3 166 3 141 1 283 1 53 4 40 1 77 3 308 1 15 1 79 1 173 1 203 2 204 2 120 4 314 2 175 3 289 4 268 5 336 5 124 16 
203 1 204 1 362 1 338 1 141 1 91 1 46 1 293 1 183 2 77 1 14 1 124 1 
22 1 63 1 337 1 128 1 364 1 27 1 365 1 8 1 226 2 73 1 165 1 115 1 195 1 231 1 375 1 196 1 41 2 284 1 119 1 174 1 151 1 81 1 61 1 123 1 240 1 126 1 21 1 
22 1 63 1 337 1 364 1 27 1 365 1 8 1 226 2 73 1 115 1 195 1 231 2 375 1 196 1 41 3 284 1 201 1 285 1 174 1 151 1 81 1 60 1 61 1 123 2 240 1 126 1 21 1 
337 1 63 1 22 1 115 1 364 1 195 1 231 1 375 1 27 1 196 1 41 2 284 1 365 1 201 1 285 1 174 1 151 1 8 1 61 1 226 2 123 2 21 1 
63 1 22 2 27 1 365 2 249 1 132 1 299 1 6 1 190 1 8 2 136 1 73 1 115 2 231 1 196 1 13 1 41 1 284 1 42 1 151 1 60 1 377 1 126 1 
22 1 63 1 337 1 128 1 364 1 27 1 365 1 8 1 226 2 73 1 115 1 195 1 231 1 375 1 196 1 41 2 284 1 119 1 285 1 174 1 151 1 81 1 61 1 123 1 240 1 126 1 21 1 
177 1 
88 2 130 1 249 1 297 1 5 1 343 2 188 1 345 1 6 1 346 2 253 1 190 1 134 2 303 1 192 5 136 1 51 1 10 4 261 5 12 1 142 1 307 1 196 2 54 1 356 2 311 2 19 1 312 1 267 1 151 1 58 1 20 1 155 2 317 2 62 1 318 1 363 2 63 2 26 1 27 1 274 1 275 1 65 1 160 1 325 2 32 1 369 1 163 6 371 1 282 3 38 2 284 2 172 2 42 2 82 1 
130 1 5 1 253 1 160 1 303 1 32 1 192 3 371 1 163 2 304 1 10 2 12 1 261 3 282 1 54 1 19 1 267 1 58 1 20 1 155 1 62 1 318 1 
130 1 5 1 253 1 160 1 303 1 134 1 32 1 192 3 163 1 371 1 51 1 304 1 10 3 12 1 261 3 282 1 54 1 356 1 19 1 267 1 58 1 20 1 62 1 318 1 
130 1 5 1 253 1 160 1 303 1 134 1 32 1 192 3 371 1 163 2 304 1 51 1 10 3 282 1 12 1 261 3 54 1 356 1 19 1 311 1 267 1 58 1 20 1 155 1 62 1 318 1 
88 2 130 1 297 1 5 1 343 1 345 1 346 2 253 1 303 1 134 4 192 5 304 1 51 5 260 1 10 6 261 5 12 1 307 1 142 1 54 1 356 5 102 1 311 4 19 1 267 1 58 1 20 1 155 4 317 2 62 1 318 1 363 2 26 1 275 1 159 1 160 1 325 2 32 1 279 1 36 1 371 1 163 7 282 3 172 1 
88 2 130 1 297 1 5 1 343 1 345 1 188 1 346 2 253 1 303 1 134 2 192 4 51 1 10 4 12 1 261 4 307 1 142 1 54 1 356 2 19 1 311 2 267 1 58 1 20 1 317 2 155 2 62 1 318 1 363 2 26 1 275 1 160 1 325 2 32 1 371 1 163 4 282 2 38 2 172 1 
363 2 26 1 88 2 130 1 297 1 5 1 275 1 343 1 345 1 346 2 253 1 159 1 160 1 134 2 303 1 325 2 32 1 192 4 279 1 163 4 371 1 51 1 10 4 282 2 12 1 261 4 142 1 307 1 54 1 356 1 102 1 172 1 311 2 19 1 267 1 58 1 20 1 155 2 317 2 62 1 318 1 
363 2 26 1 88 2 130 1 297 1 5 1 275 1 343 1 345 1 346 2 253 1 159 1 160 1 134 2 303 1 325 2 32 1 192 4 279 1 163 4 371 1 51 1 10 4 282 2 12 1 261 4 142 1 307 1 54 1 356 1 102 1 172 1 311 2 19 1 267 1 58 1 20 1 155 2 317 2 62 1 318 1 
26 1 88 2 130 1 5 1 342 2 275 1 343 1 345 1 45 1 253 1 93 2 160 1 134 2 303 1 325 2 32 1 192 4 163 4 371 1 113 1 51 1 10 4 282 2 12 1 261 4 38 2 142 1 307 1 54 1 356 1 102 1 172 1 311 2 19 1 267 1 58 1 20 1 153 1 155 2 62 1 318 1 
363 2 26 1 88 2 130 1 297 1 5 1 275 1 343 1 345 1 346 2 253 1 159 1 160 1 303 1 134 3 325 2 32 1 192 4 279 1 36 1 371 1 163 5 51 1 10 5 282 2 12 1 261 4 142 1 307 1 54 1 356 1 102 1 172 1 19 1 311 3 267 1 58 1 20 1 317 2 155 3 62 1 318 1 
363 2 26 1 88 2 130 1 297 1 5 1 275 1 343 1 345 1 346 2 253 1 159 1 160 1 303 1 134 3 325 2 32 1 192 4 279 1 36 1 371 1 163 5 51 1 10 5 282 2 12 1 261 4 142 1 307 1 54 1 356 1 102 1 172 1 19 1 311 3 267 1 58 1 20 1 317 2 155 3 62 1 318 1 
26 1 88 2 130 1 5 1 342 2 275 1 343 1 188 1 345 1 253 1 93 2 160 1 134 2 303 1 325 2 192 4 32 1 163 4 371 1 51 1 10 4 282 2 261 4 12 1 38 2 142 1 307 1 54 1 356 1 172 1 311 2 19 1 267 1 58 1 20 1 153 1 155 2 62 1 318 1 
319 1 217 2 362 6 293 1 183 2 185 1 250 3 29 1 64 1 91 1 46 1 30 1 327 1 350 1 141 1 53 1 77 1 56 2 173 1 43 1 286 1 208 1 120 1 314 1 268 2 124 3 
84 2 319 4 217 2 362 14 293 2 183 4 250 6 340 1 29 2 276 1 91 2 46 2 278 1 9 1 280 1 164 1 350 11 166 2 141 2 53 1 199 1 56 1 79 1 43 1 286 11 313 1 120 2 289 3 175 3 268 1 210 1 336 1 124 8 
319 1 362 2 63 1 293 1 27 1 272 1 3 1 183 2 250 1 29 1 6 1 302 1 91 1 223 1 46 1 136 1 280 1 370 1 141 1 306 1 196 1 284 1 199 1 149 1 56 1 357 1 42 1 43 1 151 1 313 1 58 1 288 1 20 2 316 1 62 2 213 1 124 1 178 1 
84 2 293 3 3 2 183 6 185 1 250 10 341 2 252 2 6 2 302 2 91 3 46 3 255 1 136 2 350 7 141 3 53 3 196 3 199 1 56 2 16 2 313 1 151 2 58 1 314 1 20 3 268 4 62 3 213 1 319 7 362 20 217 8 63 3 272 1 27 2 29 3 223 2 30 1 68 1 327 1 280 1 370 1 164 2 166 2 77 1 284 3 331 2 78 1 173 1 285 1 42 1 43 3 286 7 288 1 120 3 238 2 336 4 124 10 178 2 
216 2 362 2 63 7 293 2 272 1 27 2 247 1 183 4 250 1 249 1 29 2 6 3 91 2 46 2 190 1 136 2 280 1 228 1 138 1 165 1 141 2 198 1 196 8 284 8 285 1 207 1 235 1 42 2 43 2 208 1 151 2 313 1 58 1 288 1 20 1 62 1 213 1 124 1 127 1 
319 1 84 1 217 1 362 3 293 1 272 1 183 2 250 2 29 1 186 1 91 1 46 1 164 1 350 1 166 1 141 1 76 1 53 1 146 1 199 1 286 1 43 1 288 1 58 1 120 1 20 1 268 1 62 1 124 1 
319 1 84 1 217 1 350 1 362 2 141 1 293 1 183 2 29 1 286 1 43 1 91 1 208 1 46 1 120 1 336 1 124 2 95 1 
319 1 164 1 217 1 350 1 362 2 141 1 293 1 53 1 183 2 250 2 29 1 286 1 43 1 91 1 208 1 46 1 268 1 69 1 
84 1 319 2 362 4 217 2 293 1 183 2 250 2 29 1 91 1 46 1 164 1 350 2 166 1 141 1 53 1 43 1 286 2 208 1 120 1 268 1 336 1 124 2 
319 1 84 1 217 1 350 1 362 2 141 1 293 1 183 2 29 1 286 1 43 1 91 1 46 1 120 1 336 1 124 2 127 1 95 1 
319 1 164 1 217 1 350 1 362 2 141 1 293 1 53 1 183 2 250 2 29 1 286 1 43 1 91 1 46 1 268 1 69 1 127 1 
84 1 319 2 362 4 217 2 293 1 183 2 250 2 29 1 91 1 46 1 164 1 350 2 166 1 141 1 53 1 43 1 286 2 120 1 268 1 336 1 124 2 127 1 
319 2 84 1 164 1 217 2 350 2 362 4 166 1 141 1 293 1 53 1 183 2 250 2 29 1 286 2 43 1 91 1 46 1 120 1 268 1 336 1 124 2 
362 2 63 1 293 1 27 1 3 1 183 2 250 1 29 1 6 1 302 1 91 1 223 1 46 1 136 1 280 1 141 1 196 1 284 1 56 1 42 1 43 1 313 1 151 1 20 1 238 1 62 1 124 1 178 1 
362 2 63 1 293 1 27 1 3 1 183 2 322 1 250 1 29 1 6 1 91 1 46 1 136 1 48 1 280 1 229 1 141 1 196 1 284 1 56 1 42 1 43 1 313 1 151 1 20 1 62 1 124 1 178 1 
84 1 319 2 362 4 217 2 293 1 183 2 250 2 29 1 91 1 46 1 164 1 350 2 166 1 141 1 53 1 199 1 43 1 286 2 120 1 268 1 336 1 124 2 
319 2 84 1 217 2 362 4 63 1 293 1 27 1 3 1 183 2 250 2 29 1 6 1 302 1 91 1 223 1 46 1 136 1 164 1 350 2 165 1 166 1 141 1 53 1 196 1 284 1 331 1 286 2 43 1 151 1 120 1 20 1 238 1 268 1 336 1 62 1 124 2 178 1 
84 1 319 1 217 1 362 3 293 1 272 1 183 2 184 1 250 1 29 1 91 1 46 1 164 1 350 1 166 1 141 1 76 1 53 1 146 1 199 1 43 1 286 1 288 1 58 1 120 1 20 1 336 1 62 1 124 2 
84 3 362 19 217 6 338 1 271 1 293 2 183 4 250 10 300 2 219 1 92 1 91 2 46 2 278 1 164 3 74 1 166 3 141 2 53 3 101 1 79 1 236 2 120 3 289 2 175 1 268 3 212 1 336 3 125 1 124 9 
84 3 217 4 362 26 338 1 156 2 293 3 2 1 183 6 250 12 300 1 92 2 91 3 189 1 46 3 278 2 164 2 74 1 166 3 141 3 53 2 354 1 101 1 360 1 335 1 236 4 120 3 289 2 175 2 268 2 290 1 212 1 336 2 125 2 124 14 
84 4 362 41 217 8 338 1 156 1 293 3 2 1 183 6 185 1 250 21 300 1 219 1 189 1 92 2 91 3 46 3 30 1 278 3 327 1 164 4 74 1 166 4 141 3 53 5 354 1 77 1 101 1 79 1 173 1 206 1 360 1 335 1 236 4 120 5 314 1 289 4 175 3 268 4 290 1 212 1 336 4 125 1 124 20 
84 4 362 38 217 7 338 1 156 2 293 4 2 1 183 8 185 1 250 18 300 1 219 1 189 1 92 2 91 4 46 4 30 1 278 3 327 1 164 3 74 1 166 4 141 4 53 4 354 1 77 1 101 1 79 1 173 1 206 1 360 1 335 1 236 4 120 5 314 1 289 4 175 3 268 4 290 1 212 1 336 3 125 1 124 20 
84 7 362 52 217 14 338 1 156 1 293 2 2 1 183 4 185 1 250 25 300 1 189 1 92 1 91 2 46 2 30 1 278 2 9 2 327 1 164 7 74 1 166 7 141 2 53 8 354 1 77 1 101 1 79 2 173 1 360 1 335 1 236 4 120 8 314 1 289 4 175 4 268 7 290 1 212 1 336 7 125 1 124 27 
366 1 287 1 116 1 294 1 161 1 315 1 145 1 90 1 71 1 328 1 
351 1 104 1 
366 1 287 1 89 1 161 1 315 1 71 1 328 1 243 1 57 1 
261 1 116 1 262 2 263 1 145 1 147 1 90 1 356 1 80 1 366 1 221 1 287 1 161 1 315 1 193 1 192 1 71 1 328 1 
261 1 116 1 262 2 263 1 145 1 147 1 90 1 356 1 80 1 366 1 221 1 287 1 161 1 315 1 193 1 192 1 71 1 328 1 
261 1 116 1 262 2 263 1 145 1 147 1 90 1 356 1 80 1 366 1 221 1 287 1 161 1 315 1 193 1 192 1 71 1 328 1 
52 1 39 1 239 1 
52 1 39 1 239 1 
305 1 176 1 
52 1 305 1 176 1 
152 1 241 1 
244 1 272 2 157 1 366 1 221 1 161 1 192 1 71 1 137 1 328 1 261 1 351 1 262 1 263 1 144 1 56 1 266 1 287 1 152 1 288 2 58 2 20 2 315 1 104 1 62 2 241 1 291 1 
39 1 239 1 
52 1 305 1 176 1 
216 2 362 2 63 2 339 1 293 1 27 1 183 2 250 1 29 1 6 1 367 1 91 1 46 1 33 1 136 1 280 1 228 1 141 1 198 1 196 2 232 1 284 2 199 1 148 1 43 1 151 1 313 1 58 2 20 2 62 2 124 1 
165 1 337 1 63 2 22 1 23 1 364 1 195 1 375 1 27 1 196 2 284 2 285 1 277 1 151 1 47 1 61 1 226 2 240 1 21 1 
337 1 63 1 22 1 23 1 364 1 195 1 375 1 196 1 27 1 284 1 285 1 222 1 151 1 61 1 226 2 240 1 21 1 
63 1 22 1 167 1 27 1 196 1 13 1 284 1 249 1 6 1 42 1 277 1 151 1 190 1 136 1 
337 1 63 1 22 1 23 1 364 1 195 1 375 1 27 1 196 1 284 1 285 1 277 1 151 1 47 1 61 1 226 2 240 1 21 1 
35 1 
343 1 51 1 64 1 181 1 356 1 172 1 381 1 
363 1 26 1 297 1 275 1 343 1 345 1 346 1 192 1 163 1 51 1 282 1 261 1 307 1 38 1 356 2 172 1 317 1 
85 1 44 2 84 2 181 1 246 2 3 3 252 2 343 8 344 3 6 10 345 4 253 2 254 1 192 5 348 2 136 3 51 2 140 2 261 5 307 4 196 3 53 2 356 8 18 2 205 1 312 2 151 3 59 2 361 2 63 3 363 6 26 4 25 6 106 6 107 2 27 4 275 4 108 2 220 1 65 1 158 1 162 1 163 5 164 2 165 1 282 3 166 2 38 12 284 3 172 9 42 1 120 2 242 2 381 1 
84 2 361 2 363 3 106 5 25 5 26 2 2 1 275 2 343 5 345 2 65 1 189 1 278 1 192 1 163 1 164 2 51 2 261 1 282 1 166 2 38 6 307 2 53 2 354 1 356 5 172 8 312 1 335 1 120 2 289 1 175 1 211 1 290 1 242 1 214 1 
361 2 26 1 272 1 185 1 275 1 323 1 343 2 345 1 30 1 34 1 192 1 279 1 261 1 169 1 307 1 194 1 76 1 53 1 172 2 120 2 288 1 58 1 20 1 314 1 122 1 242 1 62 1 318 1 
51 1 181 1 26 1 307 1 356 1 275 1 172 1 343 1 345 1 381 1 
84 2 164 2 361 2 166 2 363 5 25 5 106 5 38 10 53 2 356 5 252 1 172 5 343 5 120 2 242 1 
163 1 51 1 261 1 282 1 192 1 356 1 
85 2 63 4 26 2 27 1 274 1 249 1 275 2 343 2 6 1 345 1 65 2 190 1 192 3 136 1 162 1 369 1 163 4 75 1 282 2 261 3 307 2 196 4 284 4 172 2 234 1 42 2 312 2 151 1 83 1 
362 1 63 1 293 1 272 2 27 1 3 1 183 2 248 1 250 1 29 1 6 1 302 1 91 1 223 1 46 1 136 1 280 1 141 1 76 2 196 1 284 1 56 1 42 1 43 1 151 1 58 2 288 2 20 3 238 1 122 1 62 3 178 1 
51 2 363 2 25 2 106 2 26 1 38 4 307 1 77 1 356 4 275 1 172 1 343 2 345 1 312 1 65 1 
366 1 328 1 200 1 
366 1 328 1 200 1 
366 1 152 1 330 1 145 1 328 1 
366 1 328 1 200 1 
366 1 372 1 328 1 
366 1 372 1 328 1 
366 1 372 1 328 1 
366 1 328 1 
161 1 315 1 
362 8 217 3 141 2 156 1 293 2 53 1 77 1 183 4 185 1 250 4 173 1 91 2 46 2 120 1 30 1 314 1 268 2 336 1 327 1 124 4 
217 2 362 6 53 1 77 1 185 1 250 3 173 1 64 1 30 1 120 1 314 1 268 2 327 1 124 3 
84 1 164 1 217 2 362 4 166 1 141 1 293 1 53 1 183 2 250 2 187 1 91 1 46 1 120 1 268 1 336 1 124 2 
84 1 164 1 362 7 217 2 166 1 53 1 250 4 79 1 120 1 278 1 289 2 175 1 268 1 336 1 124 3 
84 2 217 9 362 23 86 1 156 2 293 2 183 4 185 1 250 12 91 2 46 2 30 2 9 1 327 1 164 2 166 2 141 2 53 3 77 1 79 1 173 1 120 3 314 2 175 2 289 2 210 1 268 5 336 4 124 11 
362 1 289 1 250 1 
362 1 175 1 124 1 
84 1 164 1 362 6 217 3 166 1 141 1 293 1 53 1 183 2 250 3 252 1 187 1 91 1 46 1 120 1 268 2 336 1 124 3 
84 2 362 12 217 2 338 1 293 1 2 1 183 2 250 6 91 1 189 1 46 1 278 1 164 2 166 2 141 1 53 2 354 1 335 1 120 2 175 1 289 1 268 1 290 1 336 1 124 6 
362 6 217 2 53 1 185 1 250 3 120 1 30 1 314 1 268 1 336 1 124 3 
217 2 86 1 362 3 141 1 156 1 293 1 183 2 250 2 173 1 91 1 46 1 30 1 314 1 268 1 336 1 327 1 124 1 
217 5 362 10 338 1 141 1 293 1 53 2 183 2 185 1 250 5 323 1 91 1 46 1 30 2 120 2 314 2 268 3 336 2 124 5 
84 1 362 2 217 1 338 1 141 1 293 1 183 2 91 1 46 1 120 1 336 1 124 2 
84 1 164 1 217 2 362 4 338 1 166 1 141 1 293 1 53 1 183 2 250 2 91 1 46 1 120 1 268 1 336 1 124 2 
86 1 362 3 217 2 338 1 141 3 156 1 293 3 183 6 250 2 219 1 91 3 46 3 30 1 314 1 268 1 336 1 124 1 
84 3 86 1 362 34 217 12 338 1 156 2 293 5 183 10 185 2 250 18 187 1 219 1 91 5 46 5 30 3 278 1 327 1 164 3 166 3 283 1 141 5 53 5 77 1 308 1 15 1 79 1 173 1 120 5 314 3 289 4 175 3 268 7 336 5 124 16 
362 8 217 2 338 1 293 1 183 2 185 1 250 4 91 1 46 1 30 1 278 1 327 1 141 1 53 1 77 1 173 1 335 1 120 1 314 1 175 1 289 1 268 2 124 4 
84 1 362 11 217 3 338 1 293 2 183 4 185 1 250 5 187 1 91 2 46 2 30 1 278 1 327 1 166 1 141 2 53 1 77 1 79 1 173 1 335 1 120 2 314 1 289 2 175 1 268 2 336 1 124 6 
84 2 362 19 217 4 338 1 156 1 293 3 2 1 183 6 185 1 250 10 187 1 91 3 189 1 46 3 30 1 278 1 327 1 164 2 166 2 141 3 53 3 354 1 77 1 173 1 335 1 120 3 314 1 175 1 289 1 268 3 290 1 336 1 124 9 
84 2 362 17 217 5 338 1 156 1 293 3 2 1 183 6 185 1 250 7 187 1 91 3 189 1 46 3 30 1 278 1 327 1 164 1 166 2 141 3 53 2 354 1 77 1 173 1 335 1 120 3 314 1 175 1 289 1 268 3 290 1 336 2 124 10 
362 8 217 2 338 1 293 1 183 2 185 1 250 4 91 1 46 1 30 1 278 1 327 1 141 1 53 1 77 1 173 1 335 1 120 1 314 1 175 1 289 1 268 2 124 4 
84 2 362 12 217 2 338 1 293 1 2 1 183 2 250 6 91 1 189 1 46 1 278 1 164 2 166 2 141 1 53 2 354 1 335 1 120 2 175 1 289 1 268 1 290 1 336 1 124 6 
84 2 362 18 217 5 338 1 156 2 293 4 2 1 183 8 185 1 250 8 187 1 91 4 189 1 46 4 30 1 278 1 327 1 164 1 166 2 141 4 53 2 354 1 77 1 173 1 335 1 120 3 314 1 289 1 175 1 268 3 290 1 336 2 124 10 
84 3 362 16 217 6 338 1 156 2 293 4 2 1 183 8 250 7 219 1 91 4 189 1 46 4 278 1 164 2 166 3 141 4 53 2 354 1 335 1 120 3 289 1 175 1 268 3 290 1 336 3 124 9 
362 7 217 6 53 1 185 1 250 4 173 2 30 3 120 1 314 3 268 3 336 3 327 1 124 3 
84 2 362 18 217 4 338 1 156 2 293 4 2 1 183 8 185 1 250 8 219 1 91 4 189 1 46 4 30 1 278 1 327 1 164 1 166 2 141 4 53 2 354 1 77 1 173 1 335 1 120 3 314 1 289 1 175 1 268 3 290 1 336 1 124 10 
12 1 58 1 20 1 368 1 259 1 62 1 56 1 
349 1 12 1 264 1 56 1 359 1 58 1 20 1 368 1 259 1 62 1 227 1 380 1 
64 1 6 1 42 1 63 1 151 1 190 1 27 1 196 1 284 1 249 1 136 1 
63 1 27 1 272 1 196 1 3 1 284 1 56 1 6 1 42 1 223 1 151 1 288 1 58 1 20 2 136 1 62 2 213 1 178 1 
85 1 63 1 272 2 27 1 3 2 5 1 6 3 223 1 348 1 136 2 196 1 284 1 56 1 267 1 151 1 58 2 288 1 59 1 20 2 62 2 213 1 318 1 178 1 
85 1 63 2 272 2 27 1 3 2 5 1 6 3 348 1 136 2 229 1 196 2 284 2 56 1 267 1 151 1 58 2 288 1 59 1 20 2 62 2 213 1 379 1 318 1 178 1 
85 1 163 1 51 1 261 2 63 3 27 1 196 3 3 1 284 3 356 1 18 1 344 1 42 1 6 4 253 1 7 1 151 1 59 1 31 1 192 2 348 1 136 1 379 1 
85 1 44 1 163 1 51 1 261 2 63 3 27 1 196 3 3 1 284 3 356 1 18 1 344 1 42 1 6 4 253 1 151 1 59 1 192 2 348 1 136 1 379 1 
207 1 63 1 151 1 27 1 196 1 284 1 
216 1 138 1 165 1 63 6 198 1 196 7 27 3 3 1 247 1 296 1 284 7 285 1 205 1 207 1 235 1 42 2 6 3 66 1 151 2 136 2 269 1 
319 1 362 6 217 2 63 1 293 2 27 1 272 1 3 1 183 4 185 1 250 3 29 2 341 1 6 1 302 1 91 2 46 2 223 1 30 1 33 1 136 1 327 1 350 1 165 1 141 2 53 1 196 1 77 1 284 1 331 1 199 1 56 2 173 1 286 1 43 2 151 1 120 1 58 1 288 1 314 1 20 2 238 1 268 2 62 2 213 1 124 3 178 1 
44 1 181 1 63 1 26 2 246 1 107 1 275 2 157 1 343 1 344 1 345 2 6 2 253 1 192 3 162 1 163 2 51 1 140 1 261 3 282 1 307 2 196 1 284 1 356 1 172 1 18 1 42 1 381 1 
165 1 63 2 196 2 27 2 3 1 284 2 18 1 205 1 207 1 6 2 151 1 254 1 136 1 
165 1 63 4 98 1 27 1 196 4 284 4 249 1 42 1 6 1 151 1 190 1 136 1 379 1 
85 1 96 1 63 2 196 2 27 2 3 1 296 1 284 2 78 1 376 1 6 1 66 1 151 1 136 1 
63 1 337 1 195 1 196 1 27 1 284 1 42 1 151 1 61 1 226 1 
165 1 63 2 339 1 196 2 198 1 27 1 284 2 285 1 6 1 151 1 136 1 
85 1 165 1 63 4 98 1 196 5 198 1 27 2 284 5 247 1 249 1 42 1 235 1 6 3 151 2 190 1 136 2 
85 1 179 1 165 1 63 4 98 1 196 5 198 1 27 2 284 5 247 1 249 1 42 1 6 3 151 2 190 1 136 2 
229 1 63 1 27 1 272 1 196 1 3 1 284 1 56 1 6 1 42 1 151 1 288 1 58 1 20 2 136 1 62 2 213 1 178 1 
85 1 63 1 196 1 27 2 3 1 296 1 284 1 205 1 6 1 66 1 151 1 136 1 269 1 
87 1 117 1 347 1 56 1 49 1 
51 1 261 2 87 2 117 2 143 1 356 1 56 1 5 1 157 1 267 1 253 1 67 1 110 1 347 1 192 2 32 1 49 2 318 1 215 1 
87 1 232 1 148 1 367 1 58 1 20 1 347 1 62 1 49 1 
110 1 347 1 215 1 
64 1 0 1 273 1 100 1 
73 1 0 1 231 1 273 1 41 1 100 1 126 1 
115 1 231 1 365 1 
73 1 128 1 0 1 231 3 373 1 41 3 118 2 273 1 100 1 310 1 225 1 126 1 
73 1 0 1 231 2 273 1 353 1 41 2 123 1 100 1 126 1 
73 1 50 1 230 1 128 1 231 1 195 1 375 1 41 1 100 1 226 1 126 1 
73 1 0 1 128 1 231 1 41 1 100 1 126 1 
73 1 0 2 128 1 231 1 273 1 41 1 126 1 
73 2 245 1 0 1 128 1 231 2 41 2 100 1 202 1 111 1 126 2 
73 1 270 1 114 1 230 1 0 1 128 1 231 3 273 1 41 3 100 2 123 2 326 1 126 1 
73 1 337 1 128 1 195 1 231 1 375 1 237 1 41 2 123 1 226 2 126 1 21 1 
73 2 230 1 0 1 128 1 231 4 233 1 273 1 41 4 353 1 100 2 123 2 326 1 126 2 
73 1 0 1 128 1 231 1 273 1 41 1 100 1 126 1 
73 1 230 1 0 2 373 1 231 4 118 1 273 2 41 4 100 3 209 1 225 1 123 2 326 1 126 1 
73 1 0 1 128 1 24 1 231 2 41 2 182 1 273 1 100 1 218 1 123 1 126 1 
73 1 0 1 128 1 373 2 374 1 231 3 225 1 273 1 118 2 41 3 100 1 126 1 
292 2 1 1 70 1 100 2 
73 1 109 1 128 1 231 1 41 1 126 1 
73 1 114 1 0 1 128 1 231 2 273 1 41 2 123 1 100 1 126 1 
333 1 
73 1 0 1 128 1 231 1 273 1 41 1 100 1 126 1 
73 1 114 1 0 1 128 1 231 3 273 1 118 1 41 3 123 1 100 1 126 1 
230 1 209 1 326 1 100 1 
0 1 100 1 

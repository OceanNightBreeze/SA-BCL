#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 3 328 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 3 328 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 3 328 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 3 32 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 3 328 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 88 2 356 1 357 1 252 1 201 1 174 1 140 1 291 1 176 4 208 1 123 1 58 1 327 1 301 2 149 5 350 6 15 2 79 1 216 9 184 2 330 9 305 1 372 2 334 3 157 2 130 1 48 2 
87 1 88 2 356 1 357 1 252 1 201 1 174 1 140 1 291 1 176 4 208 1 123 1 58 1 327 1 149 5 301 2 350 6 15 2 79 1 216 9 184 2 330 9 305 1 372 2 334 3 157 2 130 1 48 2 
87 1 88 2 356 1 357 1 252 1 201 1 174 1 140 1 291 1 176 5 208 1 123 1 58 1 327 1 149 6 301 2 350 7 15 2 79 1 216 10 184 2 330 10 305 1 372 2 334 4 157 2 130 1 48 2 
87 1 88 2 356 1 357 1 252 1 201 1 174 1 291 1 176 3 208 1 123 1 58 1 327 1 149 4 301 1 350 4 15 2 79 1 216 7 184 2 330 7 305 1 372 2 334 2 157 2 130 1 48 2 
88 1 87 1 58 1 327 1 301 2 149 3 350 3 252 1 15 1 184 1 216 4 330 4 140 1 291 1 334 1 157 1 176 2 48 1 
88 1 223 1 123 1 58 1 178 1 149 1 252 1 216 2 184 1 330 2 45 1 372 1 291 1 157 1 130 1 48 1 
88 2 356 1 58 1 149 2 350 1 252 1 216 3 330 3 372 1 291 1 334 1 157 2 176 1 
309 1 356 1 88 2 87 1 357 1 252 1 291 1 140 1 176 4 208 1 121 1 58 1 327 1 149 5 301 2 350 7 15 1 216 9 184 1 330 9 372 1 334 3 157 2 48 1 
309 1 356 1 88 2 87 1 357 1 252 1 291 1 140 1 176 4 208 1 121 1 58 1 327 1 149 5 301 2 350 7 15 1 216 9 184 1 330 9 372 1 334 3 157 2 48 1 
343 1 225 1 72 1 
225 1 190 1 108 2 
217 2 243 2 237 1 249 2 317 2 60 2 97 1 16 2 
135 1 24 1 249 2 284 1 105 1 250 2 269 1 113 1 289 1 202 1 317 3 230 1 319 1 206 1 294 2 35 1 145 1 276 1 147 1 237 1 60 2 97 1 16 3 279 2 182 1 80 2 329 1 153 1 351 1 217 2 155 1 243 2 218 1 373 1 101 2 267 1 247 1 
217 1 243 1 196 1 237 1 249 1 317 1 60 1 94 1 191 1 16 1 
311 1 225 1 177 1 249 1 198 1 16 1 71 1 343 1 362 1 173 1 317 1 375 1 353 1 191 1 
311 2 225 1 249 1 60 1 198 1 16 1 71 1 343 1 217 1 243 1 173 2 317 1 375 1 353 1 191 1 
228 1 173 1 83 1 311 1 21 1 
228 1 343 1 173 2 83 1 311 2 225 1 203 1 175 1 
228 1 173 1 311 1 
196 1 311 1 237 1 249 1 226 1 60 1 16 1 217 1 83 1 173 1 243 1 317 1 94 1 191 1 
225 1 
228 1 343 1 361 1 173 2 83 1 311 2 225 1 203 1 
274 1 117 1 336 2 311 5 39 1 225 1 52 1 43 2 228 2 343 1 83 2 173 5 229 2 46 1 203 1 34 1 345 1 354 1 308 1 
24 1 249 1 284 1 60 1 151 1 182 1 16 2 279 1 370 1 80 1 70 1 217 1 202 1 373 1 317 2 319 1 267 1 294 1 35 1 247 1 
72 1 97 1 
249 2 60 1 97 2 16 2 217 1 243 1 317 2 318 1 378 1 
70 1 84 1 371 1 
24 1 284 1 97 1 16 1 279 1 182 1 80 1 167 1 202 1 373 1 317 1 319 1 267 1 294 1 247 1 35 1 
249 5 69 1 60 4 286 1 151 1 97 1 16 5 370 2 217 4 362 1 243 1 332 1 317 5 378 1 
217 2 122 1 196 1 249 2 317 2 60 2 191 1 16 2 
217 3 243 1 249 3 317 3 60 3 97 1 16 3 370 1 
217 1 196 1 249 1 317 1 60 1 191 1 16 1 
217 1 243 1 249 1 317 1 60 1 318 1 378 1 191 1 16 1 
24 1 135 1 311 1 249 3 284 1 250 2 198 1 269 1 71 1 173 1 202 1 344 1 317 4 230 1 319 1 206 1 294 1 35 1 145 1 276 1 147 1 237 1 41 1 60 3 151 1 97 1 182 1 16 4 279 1 370 1 80 1 351 1 217 3 155 1 243 2 218 1 373 1 375 1 353 1 101 1 378 1 191 1 267 1 247 1 
217 1 362 1 249 2 317 2 69 1 60 1 97 1 16 2 370 1 
311 1 225 1 249 3 60 3 151 1 198 1 16 3 370 2 71 1 217 3 243 1 173 1 317 3 344 1 375 1 128 1 353 1 378 1 191 1 
249 2 60 2 16 2 370 1 371 1 70 1 217 2 243 1 317 2 378 1 
24 1 284 1 97 1 16 1 279 1 182 1 80 1 373 1 202 1 317 1 319 1 267 1 294 1 247 1 35 1 
284 1 340 1 97 1 16 1 279 1 182 1 80 1 333 1 202 1 317 1 319 1 267 1 294 1 247 1 35 1 
310 1 250 2 199 1 269 1 70 2 30 1 316 1 230 1 55 1 206 1 296 1 145 1 115 1 147 1 238 1 62 1 371 2 153 2 155 1 218 2 84 2 101 4 158 1 381 1 
71 1 217 1 122 1 249 1 317 1 60 1 191 1 16 1 
38 1 264 1 
38 1 264 1 
259 1 109 1 
259 1 109 1 
259 1 109 1 
38 1 99 1 264 1 
38 1 264 1 271 1 
209 1 38 2 264 2 273 1 259 1 109 1 
38 1 99 1 264 1 
38 1 99 1 264 1 
322 1 38 1 264 1 
322 1 38 1 264 1 
322 1 38 1 264 1 
248 1 38 1 347 1 311 1 249 2 137 1 358 1 285 1 124 1 60 2 97 1 16 2 214 1 110 1 185 1 183 1 217 2 173 1 317 2 264 1 271 1 142 1 231 1 207 1 
22 2 234 1 161 1 248 2 38 2 337 1 311 2 225 1 137 3 124 2 6 1 214 2 110 2 173 2 264 2 273 1 73 1 231 1 256 1 
184 1 15 1 48 1 
184 1 45 1 48 1 
168 1 184 3 45 1 11 1 366 1 15 2 
168 1 63 1 184 2 45 1 11 1 15 1 
168 2 184 2 45 1 11 1 15 1 
310 1 102 1 336 1 311 5 49 1 163 1 225 2 108 3 93 1 228 1 343 1 316 1 229 1 173 5 203 1 142 1 345 1 207 1 274 2 117 3 347 1 238 1 302 2 215 1 43 1 83 4 189 2 190 1 47 1 381 1 134 2 355 1 
310 3 102 2 336 2 338 1 224 1 311 9 163 3 225 5 108 9 93 1 228 6 343 1 316 3 173 9 229 2 203 1 142 4 320 1 345 1 10 5 274 6 117 8 238 3 212 1 241 1 43 2 83 7 189 6 190 3 47 2 381 3 335 1 308 1 134 6 21 5 
102 1 310 1 336 1 49 1 311 3 225 3 163 1 108 4 343 1 229 1 173 3 316 1 142 1 274 2 117 3 238 1 302 1 43 1 83 2 189 2 190 2 47 1 381 1 355 1 308 1 134 2 
102 1 310 2 336 1 338 1 311 4 49 1 225 4 163 2 108 7 343 1 229 1 173 4 316 2 142 2 274 4 117 5 238 2 241 1 302 2 43 1 83 3 189 4 190 3 47 1 381 2 134 4 335 1 308 1 355 1 
202 1 72 1 152 1 
221 1 202 1 
50 1 
202 1 284 1 319 1 
202 1 314 1 
202 1 319 1 
160 1 323 1 202 3 284 1 319 1 152 2 
115 5 67 2 120 1 119 2 261 2 150 1 262 1 18 1 29 2 153 8 30 4 316 3 218 6 143 1 367 1 101 14 381 3 133 1 
115 7 67 2 120 1 119 2 261 2 150 1 262 1 18 1 29 2 153 8 30 4 316 3 218 6 143 1 367 3 101 14 381 3 133 1 
67 2 29 2 253 1 30 4 316 3 143 1 367 1 115 5 119 2 120 1 261 2 150 1 262 1 18 1 153 8 218 6 101 14 133 1 381 3 
67 3 310 3 163 3 250 2 341 1 269 1 29 3 171 1 8 1 30 7 316 6 143 1 230 1 367 7 206 1 145 1 115 14 299 1 120 1 119 2 348 1 261 3 42 4 238 3 300 1 150 2 61 1 262 1 18 2 153 21 218 19 101 40 133 1 381 6 159 3 
193 1 67 2 250 4 269 2 29 2 30 5 316 3 230 2 143 1 367 2 206 2 145 2 115 7 299 1 120 1 119 2 261 2 150 1 262 1 18 1 153 9 352 1 218 7 101 16 381 3 
1 1 88 1 5 1 252 1 291 1 366 1 368 1 294 1 74 1 116 1 210 1 58 1 149 1 148 1 239 1 350 1 15 1 279 1 182 1 80 1 216 2 184 2 330 2 186 1 45 1 372 1 157 1 265 1 48 1 247 1 
1 1 88 1 5 1 252 1 7 1 366 1 294 1 74 1 210 1 58 1 277 1 149 1 148 1 180 1 239 1 350 2 15 1 279 1 182 1 80 1 216 3 184 2 330 3 186 1 45 1 372 1 157 1 265 1 48 1 247 1 
1 1 252 1 7 1 366 1 294 1 74 1 210 1 58 1 149 1 148 1 180 1 350 2 15 1 279 1 182 1 80 1 216 2 184 2 330 2 186 1 45 1 372 1 265 1 247 1 48 1 
1 2 88 1 4 1 165 1 31 1 202 1 272 1 319 1 294 1 74 2 233 1 277 1 148 2 182 1 279 1 80 1 216 1 330 1 372 2 157 1 267 1 192 1 247 1 
1 1 88 1 5 1 7 1 291 1 366 1 294 1 74 1 116 1 210 1 148 1 239 1 15 1 279 1 182 1 80 1 216 1 184 2 330 1 186 1 45 1 372 1 157 1 265 1 48 1 247 1 
245 1 
336 1 4 1 249 1 138 1 198 1 343 1 202 1 9 1 203 3 53 1 54 1 292 1 345 1 294 2 211 2 14 1 16 1 303 1 156 2 353 1 267 2 102 1 25 2 311 5 225 2 108 2 228 6 172 2 71 1 173 5 229 1 362 1 364 1 31 1 270 2 317 1 319 1 232 2 36 4 274 2 75 2 117 2 236 1 325 1 177 1 279 2 182 1 80 2 43 1 82 1 190 2 375 1 85 1 191 1 247 1 
311 3 249 1 198 1 228 2 71 1 361 1 362 1 173 3 317 1 203 1 53 1 292 1 36 2 236 1 177 1 211 1 16 1 303 1 375 1 85 1 353 1 191 1 
311 3 249 1 225 1 198 1 228 1 71 1 343 1 361 1 362 1 173 3 270 1 317 1 203 1 53 1 292 1 36 3 236 1 177 1 16 1 303 1 375 1 85 1 353 1 191 1 
311 3 249 1 225 1 198 1 228 2 71 1 361 1 343 1 362 1 173 3 270 1 203 1 317 1 53 1 292 1 36 3 236 1 75 1 177 1 211 1 16 1 303 1 375 1 85 1 353 1 191 1 
194 1 336 1 249 1 198 1 343 5 203 3 53 1 292 1 345 1 211 4 14 1 16 1 303 1 156 2 353 1 266 1 25 2 311 5 225 5 227 1 228 7 71 1 172 2 361 1 173 5 362 1 229 1 270 4 317 1 232 2 36 6 274 1 275 1 75 4 118 1 236 1 117 1 325 1 177 1 43 1 375 1 190 2 85 1 191 1 
336 1 249 1 198 1 343 1 203 2 53 1 292 1 345 1 211 2 14 1 16 1 303 1 156 2 353 1 25 2 311 4 225 2 108 2 228 4 71 1 172 2 362 1 173 4 229 1 364 1 270 2 317 1 232 2 36 4 274 1 236 1 117 1 75 2 325 1 177 1 43 1 375 1 190 2 85 1 191 1 
194 1 25 2 336 1 311 4 225 1 249 1 227 1 198 1 228 4 172 2 71 1 343 1 362 1 173 4 229 1 270 2 203 2 317 1 53 1 292 1 345 1 232 2 36 4 274 1 275 1 75 2 117 1 236 1 325 1 177 1 211 2 14 1 16 1 303 1 43 1 156 2 190 2 375 1 85 1 353 1 191 1 
194 1 25 2 336 1 311 4 225 1 249 1 227 1 198 1 228 4 172 2 71 1 343 1 362 1 173 4 229 1 270 2 203 2 317 1 53 1 292 1 345 1 232 2 36 4 274 1 275 1 75 2 117 1 236 1 325 1 177 1 211 2 14 1 16 1 303 1 43 1 156 2 190 2 375 1 85 1 353 1 191 1 
103 1 336 1 311 4 225 1 249 1 312 2 227 1 359 1 198 1 108 2 228 4 71 1 343 1 362 1 173 4 229 1 290 1 270 2 203 2 317 1 53 1 292 1 345 1 232 2 36 4 274 1 75 2 117 1 236 1 177 1 211 2 14 1 16 1 303 1 19 2 43 1 156 2 375 1 85 1 353 1 191 1 
194 1 25 2 336 1 311 4 225 1 249 1 227 1 198 1 228 5 172 2 71 1 343 1 229 1 362 1 173 4 270 3 203 2 317 1 53 1 292 1 345 1 232 2 36 5 274 1 275 1 117 1 236 1 75 3 325 1 177 1 211 3 14 1 16 1 303 1 43 1 156 2 190 2 375 1 85 1 353 1 191 1 266 1 
194 1 25 2 336 1 311 4 225 1 249 1 227 1 198 1 228 5 172 2 71 1 343 1 229 1 362 1 173 4 270 3 203 2 317 1 53 1 292 1 345 1 232 2 36 5 274 1 275 1 117 1 236 1 75 3 325 1 177 1 211 3 14 1 16 1 303 1 43 1 156 2 190 2 375 1 85 1 353 1 191 1 266 1 
336 1 311 4 225 1 249 1 312 2 198 1 108 2 228 4 71 1 343 1 229 1 173 4 362 1 364 1 290 1 270 2 203 2 317 1 53 1 292 1 345 1 232 2 36 4 274 1 75 2 117 1 236 1 177 1 211 2 14 1 16 1 303 1 19 2 43 1 156 2 375 1 85 1 353 1 191 1 
67 1 115 2 145 1 119 1 147 1 261 1 250 2 97 2 262 1 269 1 29 1 153 3 30 2 316 1 155 1 218 2 230 1 143 1 55 1 72 1 101 5 206 1 381 1 
310 2 163 2 105 1 250 4 251 1 269 2 70 11 171 1 30 1 316 2 230 2 367 1 206 2 115 2 145 2 146 1 348 1 276 1 147 2 95 1 42 3 238 1 97 1 371 4 153 8 331 1 263 1 155 1 218 6 84 11 101 14 381 1 159 3 
24 1 249 1 284 1 105 1 250 2 287 1 167 1 269 1 202 1 317 2 230 1 319 1 206 1 294 1 35 1 145 1 276 1 147 1 95 1 60 1 151 1 97 1 182 1 279 1 16 2 80 1 371 1 370 1 281 1 153 1 217 1 155 1 218 1 373 1 377 1 101 2 267 1 247 1 
249 1 284 2 250 6 254 1 288 1 202 2 143 1 206 3 294 1 145 3 147 3 95 1 261 2 60 1 151 1 97 3 262 1 16 3 351 2 153 14 217 1 155 3 218 13 307 2 101 27 267 1 67 1 310 2 24 2 163 2 105 1 313 2 269 3 70 6 29 2 30 6 316 5 317 3 230 3 319 2 367 1 369 1 35 2 115 7 120 1 119 2 276 1 238 2 279 1 182 2 80 1 370 1 280 2 371 6 373 2 84 6 283 2 191 1 381 5 247 2 
222 1 162 1 249 1 4 1 90 1 105 1 250 4 7 1 269 2 28 1 31 1 202 3 317 1 230 2 55 1 319 2 368 1 206 2 294 8 145 2 298 1 276 1 147 2 60 1 125 1 16 1 182 2 279 8 370 1 80 7 329 2 304 1 153 1 217 1 155 2 218 1 101 2 267 2 247 2 
310 1 249 1 163 1 250 2 70 1 269 1 30 1 316 1 317 1 230 1 255 1 206 1 115 1 145 1 147 1 95 1 238 1 60 1 16 1 371 1 153 1 217 1 243 1 155 1 218 2 84 1 378 1 101 3 381 1 
115 1 145 1 310 1 147 1 250 2 62 1 371 1 70 1 269 1 153 2 155 1 316 1 84 1 230 1 55 1 367 1 101 2 206 1 
115 1 145 1 147 1 238 1 250 2 371 1 70 1 269 1 30 1 155 1 218 2 84 1 230 1 55 1 101 2 206 1 158 1 381 1 
115 2 145 1 310 1 147 1 163 1 238 1 250 2 371 2 70 2 269 1 153 2 30 1 155 1 316 1 218 2 84 2 230 1 55 1 367 1 101 4 206 1 381 1 
115 1 222 1 145 1 310 1 147 1 250 2 62 1 371 1 70 1 269 1 153 2 155 1 316 1 84 1 230 1 367 1 101 2 206 1 
115 1 222 1 145 1 147 1 238 1 250 2 371 1 70 1 269 1 30 1 155 1 218 2 84 1 230 1 101 2 206 1 158 1 381 1 
115 2 222 1 145 1 310 1 147 1 163 1 238 1 250 2 371 2 70 2 269 1 153 2 30 1 155 1 316 1 218 2 84 2 230 1 367 1 101 4 206 1 381 1 
115 2 145 1 310 1 147 1 163 1 238 1 250 2 371 2 70 2 269 1 153 2 30 1 155 1 316 1 218 2 84 2 230 1 367 1 206 1 101 4 381 1 
24 1 284 1 105 1 250 2 269 1 202 1 317 1 230 1 319 1 206 1 294 1 35 1 145 1 276 1 147 1 97 1 182 1 279 1 16 1 80 1 153 1 351 1 155 1 218 1 373 1 101 2 267 1 247 1 
284 1 105 1 250 2 340 1 269 1 202 1 317 1 230 1 319 1 206 1 294 1 35 1 145 1 276 1 147 1 97 1 182 1 279 1 16 1 80 1 153 1 155 1 218 1 333 1 220 1 101 2 267 1 247 1 
115 2 145 1 310 1 147 1 95 1 163 1 238 1 250 2 371 2 70 2 269 1 153 2 30 1 155 1 316 1 218 2 84 2 230 1 367 1 101 4 206 1 381 1 
310 1 24 1 163 1 284 1 250 2 70 2 269 1 30 1 316 1 202 1 317 1 230 1 319 1 367 1 368 1 206 1 294 1 35 1 115 2 145 1 147 1 238 1 182 1 279 1 16 1 371 2 80 1 153 2 351 1 155 1 218 2 373 1 84 2 307 1 101 4 381 1 247 1 
310 1 249 1 163 1 250 2 269 1 70 1 316 1 317 1 230 1 367 1 206 1 115 1 145 1 147 1 95 1 238 1 60 1 240 1 16 1 371 1 153 2 217 1 243 1 155 1 218 1 84 1 378 1 101 3 381 1 
23 1 310 1 3 1 163 1 250 4 269 2 171 1 30 1 360 1 316 1 230 2 367 1 206 2 145 2 115 2 348 1 42 2 238 1 12 1 328 1 153 4 352 1 282 1 218 5 127 1 101 9 132 1 381 1 159 1 
23 1 310 1 3 1 163 1 250 4 269 2 171 1 30 1 360 1 316 1 230 2 367 1 206 2 145 2 115 2 348 1 42 2 238 1 12 1 328 1 153 4 352 1 282 1 218 5 127 1 101 9 132 1 381 1 159 1 
23 3 67 1 104 1 310 6 3 1 163 6 250 4 107 1 269 2 29 1 171 2 30 6 360 1 316 7 143 1 230 2 367 6 206 2 145 2 115 12 299 1 119 1 348 2 326 1 40 1 261 1 42 4 238 6 12 1 262 1 181 1 328 1 153 24 331 2 352 1 282 1 218 22 127 1 65 1 101 46 381 7 159 4 
23 1 310 1 3 1 163 1 250 4 269 2 171 1 30 1 360 1 316 1 32 1 230 2 367 1 206 2 145 2 115 2 348 1 42 2 238 1 12 1 153 4 352 1 282 1 218 5 127 1 101 9 132 1 381 1 159 1 
23 3 104 1 310 2 3 1 163 2 250 6 107 1 269 3 30 1 360 2 316 2 230 3 367 1 206 3 115 2 145 3 299 2 348 2 326 1 40 1 42 2 238 1 12 1 181 1 328 1 153 11 352 1 282 1 218 9 127 2 65 1 101 20 381 1 159 2 
110 1 214 1 161 1 38 1 248 1 337 1 264 1 273 1 124 1 376 1 
271 1 358 1 
110 1 214 1 170 1 38 1 248 1 188 1 374 1 264 1 124 1 
99 1 78 1 
322 1 209 1 92 1 
22 1 234 1 161 1 248 1 38 1 337 1 311 1 225 1 137 2 124 1 6 1 214 1 110 1 173 1 264 1 273 1 73 1 231 1 
22 1 234 1 161 1 248 1 38 1 337 1 311 1 225 1 137 2 124 1 6 1 214 1 110 1 173 1 264 1 273 1 73 1 231 1 
22 1 234 1 161 1 248 1 38 1 337 1 311 1 225 1 137 2 124 1 6 1 214 1 110 1 173 1 264 1 273 1 73 1 231 1 
209 1 99 1 78 1 
209 1 99 1 78 1 
322 1 92 1 
322 1 209 1 92 1 
185 1 183 1 
22 1 248 1 311 1 249 2 137 1 358 1 285 1 110 1 173 1 317 2 142 1 271 1 73 1 207 1 260 1 38 1 347 1 124 1 60 2 97 1 16 2 214 1 183 1 185 1 217 2 83 1 264 1 
68 1 136 1 162 1 339 1 249 2 105 1 250 2 27 1 269 1 202 1 317 2 230 1 319 1 206 1 294 2 145 1 276 1 147 1 95 1 182 1 279 2 16 2 80 2 329 2 304 1 242 1 153 1 155 1 218 1 101 2 247 1 
210 1 5 1 148 1 15 1 182 1 279 2 7 1 80 2 17 1 184 2 81 1 45 1 186 1 366 1 368 1 294 2 258 1 48 1 247 1 
210 1 5 1 148 1 15 1 279 1 182 1 7 1 80 1 200 1 184 2 45 1 186 1 366 1 294 1 258 1 48 1 247 1 
4 1 148 1 182 1 279 1 80 1 81 1 31 1 202 1 272 1 319 1 246 1 267 1 294 1 247 1 
210 1 5 1 148 1 15 1 182 1 279 1 7 1 80 1 17 1 184 2 81 1 45 1 186 1 366 1 294 1 258 1 48 1 247 1 
77 1 
274 1 117 1 343 1 225 1 34 1 52 1 72 1 
25 1 336 1 311 1 225 2 108 1 228 1 172 1 343 1 229 1 173 1 203 1 345 1 274 1 117 1 325 1 43 1 190 1 
89 2 336 4 284 3 52 1 343 2 202 10 141 1 203 3 54 1 345 4 144 1 294 3 96 1 152 2 20 2 64 1 306 2 267 1 102 2 221 3 160 1 310 2 311 5 225 8 163 2 314 2 108 12 228 5 169 2 111 2 112 1 229 4 173 5 316 2 34 1 365 2 319 3 368 1 274 8 117 9 324 2 238 2 182 4 279 3 80 3 280 2 43 4 189 6 375 2 190 6 129 2 381 2 247 3 134 6 
102 1 104 1 310 2 336 2 311 1 225 5 163 2 164 1 107 1 108 6 111 1 228 1 343 2 173 1 229 2 316 2 203 1 54 1 345 2 274 5 117 8 348 1 326 1 42 1 238 2 181 1 126 1 43 2 189 5 190 3 306 2 65 1 381 2 134 5 159 1 
194 1 336 1 196 1 311 1 249 1 226 1 111 1 29 1 229 1 173 1 316 2 317 1 345 1 94 1 274 2 117 2 120 1 119 1 237 1 261 1 60 1 16 1 43 1 217 1 243 1 306 2 191 1 381 1 
274 1 336 1 117 1 225 1 52 1 43 1 343 1 229 1 34 1 345 1 
310 2 274 5 117 5 163 2 225 5 238 2 108 10 280 1 111 1 316 2 189 5 190 5 306 2 381 2 134 5 
228 1 343 1 173 1 311 1 225 1 203 1 
102 2 336 2 311 3 4 1 138 1 228 4 229 2 173 3 31 1 202 1 141 1 203 2 319 1 54 2 345 1 294 4 274 2 117 2 96 2 213 1 182 1 279 4 80 4 44 1 43 2 82 1 267 2 308 1 247 1 
135 1 24 1 249 2 284 1 250 2 269 1 202 1 317 3 230 1 319 1 206 1 294 1 35 1 145 1 276 1 237 1 147 1 60 2 97 1 279 1 16 3 182 1 80 1 351 1 217 2 243 2 155 1 218 1 373 1 101 1 267 1 247 1 
67 1 274 2 102 1 336 1 117 1 225 4 108 4 43 1 343 2 229 1 189 2 190 2 54 1 345 1 134 2 
110 1 124 1 204 1 
110 1 185 1 337 1 179 1 124 1 
110 1 124 1 204 1 
110 1 124 1 204 1 
110 1 124 1 13 1 
110 1 124 1 13 1 
110 1 124 1 13 1 
110 1 124 1 
38 1 264 1 
67 1 250 2 107 1 269 1 29 2 30 4 316 3 230 1 143 1 367 1 206 1 145 1 115 5 120 1 348 1 119 2 42 1 261 2 262 1 153 8 352 1 218 7 101 15 381 3 159 1 
67 1 310 1 163 1 250 4 107 1 269 2 29 2 171 1 30 4 316 4 143 1 230 2 367 2 206 2 145 2 115 6 120 1 119 2 348 1 261 2 42 2 262 1 153 10 352 1 218 8 101 18 380 1 381 3 159 1 
67 1 310 2 104 1 163 2 250 6 107 1 269 3 29 2 30 5 316 5 143 1 230 3 367 2 206 3 145 3 115 7 299 1 120 1 119 2 348 1 326 1 261 2 42 1 238 2 262 1 181 1 153 13 352 1 218 13 65 1 380 1 101 26 381 5 159 1 
67 1 310 2 104 1 163 2 250 6 107 1 269 3 29 2 30 5 316 5 143 1 230 3 367 4 206 3 145 3 115 9 299 1 120 1 119 2 348 1 326 1 261 2 42 1 238 1 262 1 181 1 153 14 352 1 218 10 65 1 380 1 101 24 381 4 159 1 
67 1 250 2 107 1 269 1 29 2 30 4 316 3 230 1 143 1 367 1 206 1 145 1 115 5 120 1 348 1 119 2 42 1 261 2 262 1 153 8 352 1 218 7 101 15 381 3 159 1 
310 2 104 1 163 2 250 2 107 1 269 1 30 1 316 2 230 1 367 1 206 1 145 1 115 2 348 1 326 1 42 1 238 2 181 1 153 6 352 1 218 6 65 1 101 12 381 2 159 1 
67 1 104 1 310 2 163 2 250 8 107 1 269 4 29 2 30 5 316 5 143 1 230 4 367 2 206 4 145 4 115 7 299 2 120 1 119 2 348 1 326 1 261 2 42 1 238 1 262 1 181 1 153 14 352 1 218 11 65 1 101 25 380 1 381 4 159 1 
104 1 310 3 163 3 250 8 107 1 269 4 30 3 316 3 230 4 367 3 206 4 145 4 115 6 299 2 348 1 326 1 42 1 238 2 181 1 153 9 352 1 218 7 65 1 101 16 132 1 381 2 159 1 
115 6 119 1 261 3 262 1 29 3 153 3 30 3 316 1 218 4 143 2 367 3 101 7 381 1 
67 1 104 1 310 2 163 2 250 8 107 1 269 4 29 2 30 5 316 5 143 1 230 4 367 2 206 4 145 4 115 7 299 2 120 1 119 2 348 1 326 1 261 2 42 1 238 1 262 1 181 1 153 14 352 1 218 11 65 1 101 25 132 1 381 4 159 1 
67 1 250 4 269 2 29 2 30 4 316 3 143 1 230 2 367 3 206 2 145 2 115 7 299 1 120 1 119 2 261 2 262 1 153 9 218 8 101 17 381 3 
67 1 115 2 119 1 261 1 262 1 29 1 153 3 30 2 316 1 218 2 143 1 72 1 101 5 381 1 
115 2 145 1 310 1 163 1 238 1 250 2 269 1 153 2 30 1 316 1 218 2 230 1 367 1 380 1 206 1 101 4 381 1 
310 1 115 2 348 1 163 1 238 1 42 2 153 3 171 1 30 1 316 1 218 4 367 1 101 7 381 1 159 1 
67 1 310 2 163 2 250 2 269 1 29 2 171 1 30 5 316 5 143 1 230 1 367 2 206 1 115 7 145 1 146 1 299 1 120 1 119 2 261 2 238 2 42 2 262 1 153 13 331 1 218 12 101 25 381 5 159 2 
218 1 42 1 101 1 
153 1 101 1 159 1 
145 1 310 1 115 3 163 1 238 1 250 2 280 1 269 1 153 3 30 2 316 1 218 3 230 1 367 1 206 1 380 1 101 6 381 1 
310 2 104 1 163 2 250 2 107 1 269 1 30 1 316 2 230 1 367 1 206 1 145 1 115 2 348 1 326 1 42 1 238 2 181 1 153 6 352 1 218 6 65 1 101 12 381 2 159 1 
115 2 119 1 261 1 29 1 153 3 30 1 316 1 218 3 367 1 101 6 381 1 
115 2 145 1 299 1 261 1 250 2 262 1 269 1 29 1 153 1 30 1 98 1 218 2 143 1 230 1 367 1 101 3 206 1 
145 1 115 5 120 1 119 1 261 2 250 2 269 1 29 2 153 5 352 1 30 3 316 2 218 5 230 1 367 2 206 1 101 10 381 2 
145 1 310 1 115 1 250 2 269 1 153 2 352 1 316 1 230 1 367 1 206 1 101 2 
115 2 145 1 310 1 163 1 238 1 250 2 269 1 153 2 30 1 352 1 316 1 218 2 230 1 367 1 206 1 101 4 381 1 
145 3 115 2 299 1 261 1 250 6 269 3 29 1 153 1 352 1 30 1 98 1 218 2 230 3 367 1 101 3 206 3 132 1 
67 1 310 2 163 2 250 8 341 1 269 4 29 2 30 5 316 5 143 1 230 4 367 4 206 4 145 4 115 9 299 1 120 1 119 2 348 1 261 2 42 3 238 2 300 1 61 1 262 1 153 16 352 1 218 15 380 1 101 31 132 1 381 5 159 3 
362 1 249 1 317 1 69 1 379 1 97 1 16 1 
26 1 249 1 69 1 97 1 16 1 362 1 317 1 131 1 293 1 379 1 257 1 297 1 
31 1 202 1 4 1 319 1 72 1 294 1 267 1 182 1 279 1 247 1 80 1 
249 1 284 1 60 1 97 1 182 1 16 2 279 1 370 1 80 1 217 1 202 1 373 1 317 2 319 1 267 1 294 1 35 1 247 1 
249 2 284 2 60 1 314 1 96 1 97 1 182 1 16 2 279 1 370 1 80 1 169 1 71 1 217 2 202 3 373 1 317 2 353 1 319 2 191 1 294 1 35 1 247 1 
249 2 51 1 284 2 340 1 314 1 169 1 71 1 202 3 317 2 319 2 294 2 35 1 60 1 96 1 97 1 279 2 16 2 182 1 80 2 370 1 217 2 353 1 191 1 247 1 
221 1 311 2 225 1 51 1 284 1 314 1 228 1 169 1 343 1 173 2 202 4 319 1 294 3 96 1 152 1 279 3 182 1 80 3 154 1 100 1 375 1 267 1 247 1 
221 1 311 2 225 1 51 1 284 1 314 1 96 1 182 1 279 3 152 1 80 3 169 1 228 1 343 1 173 2 202 4 375 1 365 1 319 1 267 1 294 3 247 1 
28 1 294 1 182 1 279 1 247 1 80 1 
0 1 160 1 298 1 90 1 284 1 125 1 279 7 182 3 7 1 80 6 329 1 28 1 304 1 202 3 319 2 368 1 267 2 294 7 295 1 346 1 247 2 
249 1 339 1 284 1 250 4 202 1 143 1 206 2 294 1 145 2 147 2 95 1 261 2 60 1 262 1 97 3 16 2 351 1 153 7 217 1 155 2 218 6 307 1 101 13 67 1 24 1 313 1 269 2 29 2 30 4 316 3 317 2 230 2 319 1 367 1 368 1 369 1 35 1 115 5 120 1 119 2 279 1 182 1 80 1 370 1 373 1 191 1 381 3 247 1 
221 1 336 2 89 1 311 3 225 1 52 1 228 2 343 1 229 2 173 3 202 2 141 1 203 1 34 1 365 1 345 2 294 1 274 1 117 1 279 1 152 1 80 1 43 2 20 1 83 1 375 1 129 1 267 1 
160 1 284 1 152 1 279 2 182 2 80 2 28 1 112 1 202 2 319 1 368 1 294 2 247 1 
268 1 4 1 51 1 182 1 279 4 80 4 31 1 202 1 319 1 368 1 267 1 294 4 247 1 
0 1 195 1 284 1 278 1 96 1 279 2 182 2 80 2 166 1 202 1 319 1 294 2 346 1 247 1 
184 1 45 1 210 1 294 1 267 1 182 1 279 1 48 1 247 1 80 1 
68 1 279 2 182 1 80 2 7 1 304 1 202 1 319 1 368 1 294 2 247 1 
268 1 298 1 4 1 90 1 96 1 279 5 182 2 80 4 304 1 31 1 202 3 319 2 368 1 267 1 294 5 247 2 
268 1 4 1 90 1 96 1 279 5 182 2 80 4 342 1 304 1 31 1 202 3 319 2 368 1 267 1 294 5 247 2 
249 1 284 1 60 1 340 1 97 1 182 1 16 2 279 1 370 1 80 1 217 1 202 1 317 2 319 1 267 1 294 1 35 1 247 1 
0 1 160 1 284 1 96 1 279 1 182 2 80 1 202 1 319 1 294 1 295 1 346 1 247 1 
315 1 349 1 91 1 97 1 66 1 
76 1 311 2 56 1 225 1 349 2 198 1 91 2 97 1 315 2 71 1 343 1 83 1 173 2 187 1 344 1 375 1 353 1 191 1 66 1 
136 1 249 1 349 1 27 1 91 1 16 1 242 1 317 1 66 1 
56 1 187 1 66 1 
58 1 149 1 72 1 252 1 
216 1 88 1 330 1 58 1 149 1 157 1 252 1 
1 1 216 1 372 1 
88 1 123 2 58 1 149 1 252 1 216 3 330 3 139 1 291 1 33 1 157 1 86 1 
216 2 88 1 330 2 58 1 149 1 301 1 157 1 350 1 252 1 
88 1 87 1 149 1 15 1 216 1 184 1 330 1 291 1 157 1 176 1 48 1 
216 1 88 1 330 1 58 1 291 1 149 1 157 1 
216 1 88 1 330 1 58 2 291 1 157 1 252 1 
88 2 37 1 58 1 57 1 149 1 59 1 216 2 330 2 291 1 157 2 
88 1 58 1 357 1 149 2 350 2 252 1 216 3 330 3 291 1 334 1 157 1 176 1 208 1 
88 1 58 1 149 1 350 1 252 1 15 1 184 2 216 2 330 2 45 1 219 1 291 1 157 1 366 1 48 1 
88 2 58 1 301 1 149 2 350 2 252 1 216 4 330 4 291 1 140 1 334 1 157 2 176 1 
216 1 88 1 330 1 58 1 291 1 149 1 157 1 252 1 
88 1 123 1 58 2 149 3 350 2 252 2 216 4 139 1 330 4 33 1 334 1 157 1 321 1 176 1 
88 1 2 1 121 1 58 1 149 1 350 1 252 1 216 2 330 2 291 1 244 1 157 1 
88 1 235 1 123 2 58 1 149 1 252 1 216 3 139 1 330 3 291 1 33 2 157 1 
114 2 363 1 197 1 149 2 
216 1 88 1 330 1 291 1 157 1 205 1 
216 2 88 1 330 2 58 1 291 1 149 1 157 1 350 1 252 1 208 1 
106 1 
216 1 88 1 330 1 58 1 291 1 149 1 157 1 252 1 
216 3 88 1 330 3 123 1 58 1 291 1 149 1 157 1 350 1 252 1 208 1 
149 1 334 1 321 1 176 1 
58 1 149 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
275 1 276 2 255 2 129 1 61 1 130 1 157 2 5 1 9 2 31 1 236 1 64 4 344 1 135 5 317 1 35 1 264 1 144 9 212 1 213 3 120 1 51 6 272 9 273 1 221 1 125 2 381 2 303 2 
275 1 276 2 255 2 129 1 61 1 130 1 157 2 5 1 31 1 236 1 9 2 64 4 344 1 135 5 317 1 35 1 264 1 144 9 212 1 213 3 120 1 51 6 272 9 273 1 221 1 125 2 381 2 303 2 
275 1 276 2 255 2 129 1 61 1 130 1 157 2 5 1 31 1 236 1 9 2 64 5 344 1 135 6 317 1 35 1 264 1 144 10 212 1 213 4 120 1 51 7 272 10 273 1 221 1 125 2 381 2 303 2 
275 1 276 2 255 2 129 1 61 1 130 1 157 2 5 1 31 1 236 1 9 1 64 3 344 1 135 4 35 1 264 1 144 7 212 1 213 2 120 1 51 4 272 7 273 1 221 1 125 2 381 2 303 2 
135 3 276 1 317 1 35 1 255 1 144 4 212 1 129 1 213 1 120 1 51 3 157 1 272 4 273 1 9 2 381 1 64 2 303 1 
135 1 276 1 238 1 35 1 293 1 255 1 144 2 212 1 129 1 62 1 272 2 31 1 125 1 381 1 303 1 344 1 
135 2 35 1 255 2 144 3 212 1 129 1 213 1 61 1 51 1 272 3 125 1 381 2 64 1 
356 1 276 1 84 1 255 2 129 1 61 1 157 1 236 1 9 2 64 4 135 5 317 1 35 1 264 1 144 9 212 1 213 3 120 1 51 7 272 9 273 1 125 1 381 2 303 1 
356 1 276 1 84 1 255 2 129 1 61 1 157 1 236 1 9 2 64 4 135 5 317 1 35 1 264 1 144 9 212 1 213 3 120 1 51 7 272 9 273 1 125 1 381 2 303 1 
243 1 247 1 182 1 
247 1 254 1 265 2 
269 2 216 2 218 2 315 2 138 2 318 2 170 1 203 1 
225 1 0 1 203 1 107 1 2 1 206 1 208 2 257 1 181 1 29 1 46 2 115 1 315 2 94 1 138 2 318 3 241 1 50 1 322 1 269 2 123 1 216 3 218 2 244 1 270 1 196 1 168 1 170 1 99 1 100 1 147 2 18 1 38 1 79 1 173 2 251 1 81 2 
269 1 211 1 216 1 218 1 315 1 138 1 318 1 170 1 172 1 11 1 
328 1 136 1 318 1 359 1 105 1 1 1 73 1 218 1 216 1 194 1 247 1 182 1 172 1 101 1 
136 1 315 1 138 1 359 2 318 1 1 1 73 1 269 1 218 1 216 1 194 2 247 1 182 1 172 1 101 1 
352 1 194 1 359 1 242 1 343 1 
194 2 247 1 359 2 182 1 6 1 200 1 242 1 343 1 
194 1 359 1 343 1 
211 1 315 1 138 1 359 1 318 1 242 1 269 1 218 1 216 1 194 1 170 1 172 1 367 1 11 1 
247 1 
194 2 158 1 247 1 359 2 182 1 6 1 242 1 343 1 
48 1 103 1 359 5 292 1 372 1 279 1 202 1 242 2 122 2 362 1 207 2 323 1 297 2 194 5 247 1 182 1 6 1 199 1 343 2 
243 1 203 1 
315 1 226 1 253 1 138 1 318 2 203 2 269 1 218 2 216 2 
25 1 95 1 289 1 
115 1 305 1 0 1 318 1 241 1 203 1 2 1 123 1 216 1 270 1 147 1 18 1 38 1 79 1 173 1 81 1 
115 1 315 1 0 1 138 1 318 2 240 1 241 1 2 1 123 1 218 1 216 2 270 1 353 1 147 1 79 1 38 1 18 1 173 1 289 1 81 1 
269 1 216 3 218 3 315 3 138 3 318 3 240 1 203 1 
211 1 216 1 218 1 315 1 138 1 318 1 172 1 
269 1 216 1 218 1 315 1 226 1 253 1 138 1 318 1 172 1 
225 1 152 1 253 1 0 1 359 1 334 1 1 1 203 1 107 1 2 1 206 1 208 2 257 1 181 1 46 1 136 1 115 1 315 3 94 1 138 3 318 4 240 1 241 1 73 1 50 1 123 1 269 2 216 4 218 3 270 1 194 1 353 1 170 1 99 1 100 1 172 1 147 1 79 1 38 1 18 1 173 1 251 1 101 1 81 1 
216 2 218 2 315 1 138 1 318 2 105 1 240 1 203 1 108 1 
136 1 315 3 253 1 138 3 359 1 318 3 240 2 1 1 334 1 73 1 269 1 218 3 216 3 194 1 353 1 247 1 172 1 197 1 101 1 
315 2 253 1 138 2 318 2 240 1 95 1 269 1 218 2 216 2 289 1 
115 1 0 1 318 1 241 1 203 1 2 1 123 1 216 1 270 1 147 1 18 1 38 1 79 1 173 1 81 1 
115 1 0 1 318 1 306 1 241 1 203 1 2 1 123 1 216 1 270 1 147 1 285 1 79 1 173 1 81 1 
252 1 225 1 59 1 43 1 204 1 107 1 208 2 311 1 4 1 337 1 25 2 257 2 181 1 46 4 366 1 289 2 266 1 95 2 50 1 268 1 196 2 354 1 100 1 251 1 
216 1 218 1 315 1 138 1 318 1 172 1 73 1 235 1 
315 4 253 1 138 4 318 5 105 1 240 2 203 1 108 1 269 1 218 5 216 5 54 1 353 1 150 1 
211 1 216 2 218 2 315 2 138 2 318 2 172 1 235 1 
142 1 140 1 
142 1 140 1 
57 1 259 1 
57 1 259 1 
57 1 259 1 
153 1 142 1 140 1 
249 1 142 1 140 1 
248 1 139 1 57 1 142 2 140 2 259 1 
153 1 142 1 140 1 
153 1 142 1 140 1 
174 1 142 1 140 1 
174 1 142 1 140 1 
174 1 142 1 140 1 
345 1 262 2 278 1 359 2 349 1 360 1 140 2 142 2 143 3 86 1 167 2 52 1 194 2 111 1 247 1 44 2 248 1 184 2 80 2 
154 1 359 1 228 1 203 1 111 1 44 1 26 1 63 1 67 1 315 2 262 1 138 2 318 2 143 1 142 1 140 1 167 1 218 2 216 2 194 1 76 1 249 1 301 1 80 1 
276 1 157 1 303 1 
276 1 293 1 303 1 
157 2 276 3 293 1 146 1 294 1 121 1 
157 1 291 1 276 2 293 1 294 1 121 1 
157 1 276 2 293 1 294 2 121 1 
58 2 154 1 359 5 254 1 228 1 43 1 362 2 207 1 337 1 4 1 182 1 6 1 112 1 314 1 63 1 343 1 347 1 372 1 266 1 265 3 96 1 242 4 122 1 323 3 53 1 297 1 194 5 247 2 299 1 250 1 39 2 148 2 
58 6 359 9 254 3 43 3 202 1 362 6 207 2 337 3 4 3 338 1 90 5 182 1 45 1 6 1 112 2 30 1 63 4 343 6 372 1 319 1 266 3 265 9 96 2 242 7 122 2 323 8 53 3 297 2 352 5 194 9 247 5 355 1 299 1 198 1 39 6 
58 2 359 3 254 2 43 1 202 1 362 2 207 1 337 1 4 1 182 1 112 1 314 1 63 1 266 1 265 4 96 1 242 2 122 1 323 3 297 1 53 1 194 3 247 3 250 1 148 1 39 2 
58 4 359 4 254 3 43 2 202 1 362 4 207 1 337 2 4 2 182 1 45 1 112 1 30 1 314 1 63 2 266 2 265 7 96 1 242 3 122 1 323 5 297 1 53 2 194 4 247 4 198 1 250 1 39 4 148 2 
329 1 115 1 243 1 
115 1 332 1 
33 1 
115 1 241 1 
329 2 115 3 0 1 241 1 300 1 326 1 
115 1 0 1 241 1 
115 1 24 1 
274 1 331 1 155 1 266 1 320 2 118 1 230 1 178 1 268 2 4 1 196 4 257 2 325 1 46 6 366 3 327 1 162 1 
274 1 331 1 155 1 266 1 320 2 118 1 230 1 178 1 268 2 4 1 196 4 257 3 325 1 46 7 366 3 327 1 162 1 
274 1 331 1 357 1 155 1 266 1 320 2 118 1 230 1 178 1 268 2 4 1 196 4 257 2 325 1 46 6 366 3 327 1 162 1 
274 1 225 1 331 2 175 1 155 3 201 3 43 2 128 1 230 5 107 1 178 3 208 2 4 5 337 2 257 19 181 1 366 13 46 38 162 2 188 1 165 1 320 3 266 5 117 1 50 1 118 2 295 1 268 8 375 3 53 2 196 19 380 1 325 1 327 1 
274 1 225 2 331 1 155 1 230 1 107 2 178 1 208 4 131 1 4 1 257 5 181 2 366 5 46 10 287 1 162 1 165 1 266 1 320 2 50 2 118 1 268 4 196 5 327 1 
276 2 255 1 129 1 156 1 157 1 109 1 282 1 91 1 28 1 133 1 135 1 35 1 293 1 144 2 212 1 123 1 51 1 270 1 271 1 379 1 272 2 171 1 146 1 147 1 125 1 173 1 381 1 302 1 303 1 81 1 
276 2 255 1 129 1 157 1 109 1 91 1 28 1 133 1 135 1 293 1 144 3 212 1 123 1 51 2 350 1 270 1 55 1 271 1 379 1 146 1 272 3 171 1 147 1 125 1 222 1 173 1 381 1 302 1 303 1 81 1 
135 1 276 2 293 1 144 2 212 1 129 1 123 1 51 2 157 1 270 1 109 1 55 1 379 1 271 1 146 1 171 1 272 2 147 1 222 1 133 1 125 1 302 1 173 1 303 1 81 1 
115 1 164 1 255 1 241 1 189 1 144 1 97 1 2 1 123 1 231 1 376 1 350 1 270 1 110 1 379 2 271 2 272 1 147 1 125 2 133 2 381 1 173 1 81 1 
276 2 255 1 156 1 157 1 109 1 91 1 28 1 133 1 35 1 293 1 144 1 123 1 270 1 55 1 271 1 379 1 272 1 171 1 146 1 147 1 125 1 173 1 381 1 302 1 303 1 81 1 
368 1 
224 1 328 1 42 1 1 1 176 1 177 2 2 2 88 1 231 1 180 2 182 1 6 3 8 2 10 1 343 6 12 1 136 1 346 2 241 1 297 1 351 1 194 5 246 1 247 2 56 4 147 2 304 1 101 1 359 5 254 2 105 1 361 1 362 2 207 1 363 1 112 1 68 2 115 1 164 1 318 1 372 1 265 2 73 1 122 1 123 1 323 2 218 1 216 1 219 2 270 1 378 2 172 1 126 1 173 2 81 2 
328 1 42 1 359 3 105 1 1 1 361 1 363 1 158 1 6 1 343 2 136 1 318 1 73 1 216 1 218 1 219 1 194 3 246 1 172 1 56 2 126 1 101 1 
328 1 42 1 359 3 105 1 1 1 361 1 363 1 158 1 182 1 6 1 343 1 68 1 136 1 318 1 73 1 216 1 218 1 194 3 246 1 247 1 172 1 56 3 126 1 101 1 
328 1 42 1 359 3 105 1 1 1 361 1 363 1 158 1 182 1 6 1 343 2 68 1 136 1 318 1 73 1 216 1 218 1 219 1 194 3 246 1 378 1 247 1 172 1 56 3 126 1 101 1 
328 1 42 1 1 1 85 1 177 2 88 1 179 1 180 2 182 5 6 3 8 2 10 1 343 7 136 1 346 2 239 1 297 1 194 5 246 1 247 5 56 6 101 1 359 5 105 1 254 2 361 1 362 1 363 1 207 1 158 1 68 4 371 1 318 1 372 1 116 1 73 1 122 1 216 1 218 1 323 1 219 4 378 4 172 1 126 1 
328 1 224 1 42 1 1 1 177 2 88 1 180 2 182 1 6 2 8 2 10 1 343 4 136 1 346 2 297 1 194 4 246 1 247 2 56 4 101 1 359 4 105 1 254 2 361 1 362 1 207 1 363 1 68 2 318 1 372 1 73 1 265 2 122 1 216 1 218 1 323 1 219 2 378 2 172 1 126 1 
328 1 42 1 359 4 254 2 105 1 1 1 361 1 177 2 85 1 362 1 363 1 207 1 88 1 180 2 182 1 6 2 8 2 10 1 68 2 343 4 136 1 371 1 346 2 318 1 372 1 116 1 73 1 122 1 323 1 216 1 218 1 219 2 297 1 194 4 378 2 246 1 247 1 172 1 56 4 126 1 101 1 
328 1 42 1 359 4 254 2 105 1 1 1 361 1 177 2 85 1 362 1 363 1 207 1 88 1 180 2 182 1 6 2 8 2 10 1 68 2 343 4 136 1 371 1 346 2 318 1 372 1 116 1 73 1 122 1 323 1 216 1 218 1 219 2 297 1 194 4 378 2 246 1 247 1 172 1 56 4 126 1 101 1 
330 2 328 1 42 1 359 4 105 1 1 1 361 1 85 1 362 1 363 1 207 1 88 1 281 1 182 1 6 2 8 2 68 2 343 4 136 1 346 2 187 1 318 1 372 1 190 1 265 2 73 1 122 1 323 1 216 1 218 1 219 2 297 1 194 4 378 2 246 1 247 1 172 1 56 4 126 1 149 2 101 1 
328 1 42 1 359 4 254 2 105 1 1 1 361 1 177 2 85 1 362 1 207 1 363 1 88 1 180 2 179 1 182 1 6 2 8 2 10 1 343 5 68 3 136 1 371 1 346 2 318 1 372 1 116 1 73 1 122 1 323 1 216 1 218 1 297 1 219 3 194 4 246 1 378 3 247 1 172 1 56 5 126 1 101 1 
328 1 42 1 359 4 254 2 105 1 1 1 361 1 177 2 85 1 362 1 207 1 363 1 88 1 180 2 179 1 182 1 6 2 8 2 10 1 343 5 68 3 136 1 371 1 346 2 318 1 372 1 116 1 73 1 122 1 323 1 216 1 218 1 297 1 219 3 194 4 246 1 378 3 247 1 172 1 56 5 126 1 101 1 
224 1 330 2 328 1 42 1 359 4 105 1 1 1 361 1 362 1 363 1 207 1 88 1 281 1 182 1 6 2 8 2 68 2 343 4 136 1 346 2 318 1 372 1 265 2 73 1 122 1 323 1 218 1 216 1 219 2 297 1 194 4 378 2 246 1 247 1 172 1 56 4 126 1 149 2 101 1 
274 1 225 1 155 1 203 2 107 1 178 1 208 2 311 1 4 1 25 1 257 2 181 1 366 1 46 5 289 1 95 1 266 1 320 1 50 1 118 1 268 1 243 1 196 3 100 1 327 1 251 1 
225 2 201 3 43 2 203 1 128 1 230 1 107 2 208 4 89 1 4 2 337 1 25 11 257 6 181 2 365 1 366 2 46 14 260 1 289 11 95 4 266 1 50 2 322 1 268 1 375 3 53 2 98 1 196 8 169 1 99 1 100 1 124 1 251 2 
225 1 0 1 305 1 60 1 203 1 2 1 107 1 208 2 233 1 257 1 181 1 365 1 46 2 210 1 115 1 315 1 138 1 318 2 240 1 241 1 95 1 50 1 322 1 123 1 216 2 218 1 270 1 353 1 196 1 100 1 99 1 147 1 79 1 38 1 18 1 173 1 251 1 81 1 
274 1 225 3 0 2 227 1 280 2 43 2 230 4 2 1 178 1 4 3 337 2 181 3 46 19 185 1 289 7 94 2 138 1 240 1 241 2 95 7 50 3 53 2 298 2 353 1 55 1 196 10 99 1 100 3 147 3 18 2 251 3 155 1 203 2 107 3 208 6 25 7 257 9 365 1 366 7 369 2 315 1 115 2 318 3 320 1 266 3 118 1 322 1 268 3 74 1 123 2 75 2 218 1 216 3 270 2 38 2 79 2 173 3 327 1 81 3 
225 2 2 2 107 2 208 4 311 1 231 1 282 1 256 1 257 1 181 2 183 1 46 2 237 1 315 1 115 3 316 1 138 1 164 1 318 1 240 1 36 1 241 2 50 2 322 1 123 2 216 1 218 1 270 2 244 2 55 1 196 1 220 1 100 2 99 1 78 1 147 8 173 8 251 2 81 7 
225 1 253 1 43 1 22 1 107 1 208 2 4 1 337 1 25 1 257 2 181 1 365 1 366 1 46 3 289 1 315 1 138 1 318 1 95 1 266 1 50 1 268 1 269 1 218 1 216 1 53 1 196 1 100 1 251 1 
225 1 59 1 43 1 95 1 50 1 230 1 107 1 208 2 311 1 4 1 25 1 196 2 100 1 181 1 366 1 46 2 251 1 289 1 
225 1 95 1 204 1 266 1 50 1 107 1 268 1 208 2 311 1 337 1 25 1 257 2 100 1 181 1 366 1 46 2 251 1 289 1 
225 1 43 1 230 1 107 1 208 2 311 1 4 1 337 1 25 2 257 2 181 1 46 4 366 2 289 2 95 2 266 1 50 1 268 1 53 1 196 2 100 1 251 1 
225 1 59 1 43 1 95 1 50 1 230 1 107 1 208 2 4 1 25 1 196 2 100 1 181 1 183 1 366 1 46 2 251 1 289 1 
225 1 95 1 204 1 266 1 50 1 107 1 268 1 208 2 337 1 25 1 257 2 100 1 181 1 183 1 366 1 46 2 251 1 289 1 
225 1 43 1 230 1 107 1 208 2 4 1 337 1 25 2 257 2 181 1 183 1 46 4 366 2 289 2 95 2 266 1 50 1 268 1 53 1 196 2 100 1 251 1 
225 1 43 1 230 1 107 1 208 2 4 1 337 1 25 2 257 2 181 1 46 4 366 2 289 2 95 2 266 1 50 1 268 1 53 1 196 2 100 1 251 1 
225 1 0 1 203 1 2 1 107 1 208 2 257 1 181 1 46 2 115 1 94 1 318 1 241 1 50 1 322 1 123 1 216 1 270 1 196 1 100 1 99 1 147 1 79 1 38 1 18 1 173 1 251 1 81 1 
225 1 0 1 306 1 203 1 335 1 2 1 107 1 208 2 257 1 181 1 46 2 285 1 115 1 318 1 241 1 50 1 322 1 123 1 216 1 270 1 196 1 100 1 99 1 147 1 79 1 173 1 251 1 81 1 
225 1 43 1 230 1 107 1 208 2 4 1 337 1 25 2 257 2 181 1 365 1 46 4 366 2 289 2 95 2 266 1 50 1 268 1 53 1 196 2 100 1 251 1 
225 1 0 1 43 1 230 1 107 1 208 2 337 1 4 1 25 2 282 1 257 2 181 1 366 2 46 4 289 2 369 1 115 1 94 1 318 1 241 1 266 1 95 2 50 1 268 1 123 1 216 1 53 1 270 1 196 2 100 1 147 1 79 1 38 1 18 1 173 1 251 1 81 1 
225 1 253 1 43 1 230 1 107 1 208 2 337 1 4 1 25 1 257 1 181 1 365 1 366 1 46 3 288 1 289 1 315 1 138 1 318 1 266 1 95 1 50 1 269 1 218 1 216 1 53 1 196 2 100 1 251 1 
225 2 102 1 201 2 43 3 229 1 128 1 230 3 107 2 3 1 208 4 4 3 337 3 234 2 257 10 181 2 46 19 366 6 287 1 290 2 266 3 50 2 192 1 268 3 375 1 217 1 53 3 17 1 196 9 37 1 124 1 
225 3 102 1 127 1 201 2 43 3 229 1 128 2 230 2 107 3 208 6 4 3 337 2 234 4 159 1 257 12 181 3 366 4 46 26 287 1 342 1 370 1 290 1 165 2 141 1 266 2 50 3 191 1 268 2 375 2 217 2 53 3 17 1 196 14 37 2 
274 1 225 3 127 1 43 4 229 1 128 3 230 4 178 1 337 4 4 5 234 4 181 3 46 41 287 1 342 1 290 1 47 1 141 1 50 3 191 1 192 1 53 4 196 20 17 1 102 1 201 4 155 1 107 3 208 6 257 21 159 1 366 9 370 1 165 1 266 5 320 1 118 1 268 5 375 3 217 2 37 1 124 1 327 1 
274 1 225 4 127 1 102 1 155 1 201 4 43 4 229 1 128 3 230 3 107 4 178 1 208 8 4 5 337 3 234 4 159 1 257 19 181 4 46 39 366 8 287 1 342 1 370 1 47 1 290 1 165 2 320 1 141 1 266 4 191 1 50 4 118 1 192 1 268 5 375 3 217 2 53 4 17 1 196 20 37 1 124 1 327 1 
274 1 225 2 127 1 102 1 155 1 201 4 43 7 229 1 128 2 230 7 107 2 178 1 208 4 89 2 4 8 337 7 234 4 159 1 257 26 181 2 46 53 366 15 287 1 342 1 370 1 290 1 165 1 320 1 141 1 266 8 191 1 50 2 118 1 268 8 375 4 217 1 53 7 17 1 196 27 37 1 124 2 327 1 
167 1 52 1 262 1 44 1 278 1 49 1 248 1 142 1 140 1 80 1 
76 1 249 1 
151 1 167 1 262 1 195 1 44 1 77 1 142 1 140 1 80 1 
262 1 278 1 359 1 349 1 360 1 140 1 142 1 143 2 86 1 167 1 52 1 194 1 111 1 247 1 44 1 248 1 184 1 80 1 
262 1 278 1 359 1 349 1 360 1 140 1 142 1 143 2 86 1 167 1 52 1 194 1 111 1 247 1 44 1 248 1 184 1 80 1 
262 1 278 1 359 1 349 1 360 1 140 1 142 1 143 2 86 1 167 1 52 1 194 1 111 1 247 1 44 1 248 1 184 1 80 1 
153 1 139 1 166 1 
153 1 139 1 166 1 
174 1 374 1 
174 1 139 1 374 1 
26 1 67 1 
154 1 359 1 228 1 203 1 86 1 44 1 26 1 184 1 63 1 67 1 315 2 262 1 138 2 318 2 373 1 142 1 140 1 143 1 242 1 216 2 167 1 218 2 194 1 76 1 249 1 301 1 80 1 
153 1 166 1 
174 1 139 1 374 1 
83 1 225 1 107 1 310 1 208 2 257 1 181 1 365 1 258 1 46 2 313 1 66 1 237 1 115 1 316 1 318 2 241 1 50 1 322 1 123 1 216 2 218 2 270 1 244 2 196 1 100 1 99 1 147 2 173 2 251 1 81 2 
276 2 293 1 123 1 157 1 270 1 109 1 55 1 282 1 91 1 339 1 146 1 171 1 147 2 133 1 340 1 173 2 303 1 134 1 81 2 
276 2 293 1 21 1 123 1 157 1 109 1 270 1 55 1 91 1 146 1 171 1 147 1 133 1 340 1 173 1 303 1 81 1 
115 1 164 1 241 1 2 1 123 1 231 1 376 1 270 1 339 1 147 1 133 1 173 1 41 1 81 1 
276 2 293 1 123 1 157 1 270 1 109 1 55 1 91 1 339 1 146 1 171 1 147 1 133 1 340 1 173 1 303 1 134 1 81 1 
341 1 
323 1 243 1 247 1 182 1 279 1 199 1 362 1 
359 1 254 1 177 1 362 1 207 1 180 1 182 1 6 1 10 1 343 1 372 1 265 1 122 1 323 1 297 1 194 1 247 2 
329 2 332 3 333 1 0 3 279 1 43 2 1 2 176 1 2 1 4 2 337 2 282 1 182 2 6 3 92 1 186 1 343 5 348 2 241 3 297 4 53 2 194 5 16 2 247 8 147 3 199 1 58 6 358 1 20 1 359 5 254 6 24 2 362 8 207 4 112 2 209 2 65 2 113 2 115 10 372 4 70 2 263 2 265 12 266 2 122 4 123 3 75 2 323 9 270 4 326 1 173 3 39 6 40 2 81 3 
58 5 127 1 359 1 201 1 254 3 43 2 176 1 128 1 362 5 207 2 4 2 337 2 182 2 6 1 112 1 65 1 342 1 343 1 370 1 372 2 70 2 141 1 265 6 266 2 191 1 267 1 122 2 193 1 375 1 323 8 297 2 53 2 194 1 247 5 39 5 
175 1 359 1 155 1 178 1 362 2 207 1 4 2 367 1 65 1 11 1 211 1 315 1 138 1 318 1 372 1 70 2 116 1 266 1 118 1 122 1 269 1 216 1 323 2 218 1 297 1 194 1 170 1 172 1 
372 1 279 1 122 1 362 1 207 1 323 1 297 1 247 1 182 1 199 1 
58 5 254 5 70 2 43 2 265 10 266 2 362 5 75 1 323 5 53 2 4 2 337 2 247 5 39 5 65 1 
194 1 247 1 359 1 182 1 6 1 343 1 
333 2 359 3 104 1 106 1 202 1 176 2 2 2 362 2 207 2 231 1 6 2 112 2 92 1 12 1 343 4 115 1 164 1 372 1 241 1 122 2 123 1 323 2 297 2 270 1 194 3 147 4 173 4 304 1 81 4 
225 1 0 1 203 1 107 1 2 1 206 1 208 2 257 1 181 1 46 1 315 2 115 1 94 1 138 2 318 3 241 1 50 1 269 2 123 1 216 3 218 2 270 1 170 1 99 1 100 1 147 1 18 1 38 1 79 1 173 1 251 1 81 1 
58 2 254 2 176 1 362 2 207 1 182 2 112 1 372 1 70 1 265 4 320 1 122 1 323 2 297 1 247 4 39 2 
167 1 80 1 15 1 
87 1 167 1 26 1 278 1 80 1 
167 1 80 1 15 1 
167 1 80 1 15 1 
167 1 27 1 80 1 
167 1 27 1 80 1 
167 1 27 1 80 1 
167 1 80 1 
142 1 140 1 
274 1 225 2 155 1 165 1 320 1 266 1 50 2 118 1 230 1 107 2 268 1 178 1 208 4 4 1 196 4 257 3 181 2 46 7 366 2 327 1 
274 1 155 1 320 1 266 1 118 1 178 1 268 1 243 1 4 1 196 3 257 2 366 1 46 5 327 1 
225 1 43 1 266 1 50 1 230 1 107 1 268 1 208 2 337 1 53 1 4 1 196 2 257 2 283 1 181 1 366 2 46 4 
201 2 43 1 266 1 128 1 230 1 268 1 375 1 337 1 53 1 4 1 196 3 257 4 46 7 124 1 366 2 
274 1 225 2 155 2 201 2 43 2 230 4 107 2 178 2 208 4 4 3 337 2 89 1 257 11 181 2 366 8 46 22 286 1 165 2 320 1 266 3 50 2 118 1 268 4 375 2 53 2 196 11 98 1 124 1 327 1 
257 1 201 1 46 1 
375 1 196 1 46 1 
225 1 43 1 266 1 50 1 230 1 107 1 268 2 208 2 75 1 53 1 4 1 337 1 196 3 283 1 257 3 181 1 46 6 366 3 
370 1 225 1 127 1 201 1 43 2 141 1 266 2 50 1 191 1 128 1 230 1 107 1 268 1 208 2 375 1 337 2 4 2 53 2 196 6 257 6 181 1 366 2 46 12 287 1 342 1 
155 1 266 1 118 1 230 1 178 1 268 1 4 1 196 3 257 3 46 6 366 2 
274 1 225 1 155 1 165 1 50 1 230 1 107 1 268 1 178 1 208 2 196 1 257 2 181 1 366 2 286 1 46 3 327 1 
225 1 175 1 155 2 266 2 50 1 230 2 118 1 107 1 178 2 268 3 208 2 4 2 196 5 257 5 181 1 366 5 46 10 287 1 
225 1 43 1 50 1 230 1 107 1 208 2 4 1 196 2 181 1 46 2 366 1 287 1 
225 1 43 1 266 1 50 1 230 1 107 1 268 1 208 2 337 1 53 1 4 1 196 2 257 2 181 1 366 2 46 4 287 1 
225 3 155 1 165 1 50 3 230 1 192 1 107 3 178 1 268 1 208 6 196 1 257 2 181 3 286 1 46 3 366 2 287 1 
274 1 225 5 155 3 201 4 43 3 128 1 230 5 107 5 178 3 208 10 4 5 337 3 257 17 283 1 181 5 286 1 46 33 366 11 287 1 188 1 165 2 320 1 266 5 117 1 50 5 118 2 192 1 268 6 375 3 53 3 196 16 380 1 124 1 327 1 
274 1 225 1 201 1 155 1 128 1 107 1 178 1 208 2 4 1 257 3 181 1 46 7 366 1 287 1 320 1 266 1 191 1 50 1 118 1 268 1 375 1 196 4 327 1 
274 1 225 2 155 1 201 2 43 1 128 1 230 1 107 2 178 1 208 4 4 2 257 4 283 1 181 2 46 10 366 2 287 1 320 1 266 1 191 1 50 2 118 1 268 1 375 1 53 1 196 6 124 1 327 1 
274 1 225 3 127 1 155 1 201 1 43 2 128 1 230 1 107 3 178 1 208 6 4 3 337 2 283 1 257 9 181 3 46 18 366 3 287 1 342 1 370 1 165 1 320 1 266 3 141 1 191 1 50 3 118 1 268 2 375 1 53 2 196 9 327 1 
274 1 225 3 127 1 155 1 201 1 43 2 128 1 230 2 107 3 178 1 208 6 4 3 337 1 283 1 257 6 181 3 46 16 366 4 287 1 342 1 370 1 165 1 320 1 266 2 141 1 191 1 50 3 118 1 268 2 375 1 53 2 196 10 327 1 
274 1 225 1 201 1 155 1 128 1 107 1 178 1 208 2 4 1 257 3 181 1 46 7 366 1 287 1 320 1 266 1 191 1 50 1 118 1 268 1 375 1 196 4 327 1 
370 1 225 1 127 1 201 1 43 2 141 1 266 2 50 1 191 1 128 1 230 1 107 1 268 1 208 2 375 1 337 2 4 2 53 2 196 6 257 6 181 1 366 2 46 12 287 1 342 1 
274 1 225 4 127 1 155 1 201 1 43 2 128 1 230 2 107 4 178 1 208 8 4 3 337 1 257 7 283 1 181 4 46 17 366 4 287 1 342 1 370 1 165 2 320 1 141 1 266 2 191 1 50 4 118 1 268 2 375 1 53 2 196 10 327 1 
225 4 127 1 201 1 43 3 128 1 230 3 107 4 208 8 4 3 337 2 257 7 181 4 46 16 366 6 287 1 342 1 370 1 165 2 141 1 266 2 191 1 50 4 192 1 268 3 375 1 53 3 196 9 
274 1 155 3 266 1 230 3 118 1 178 3 268 3 4 1 196 3 257 4 46 7 366 6 327 2 
274 1 225 4 127 1 155 1 201 1 43 2 128 1 230 1 107 4 178 1 208 8 4 3 337 1 257 7 181 4 46 17 366 3 287 1 342 1 370 1 165 2 320 1 141 1 266 2 191 1 50 4 118 1 192 1 268 2 375 1 53 2 196 10 327 1 
216 1 218 1 318 1 105 1 203 1 205 1 108 1 
261 1 318 1 105 1 203 1 205 1 321 1 108 1 218 1 216 1 324 1 132 1 284 1 
123 1 231 1 115 1 243 1 270 1 164 1 241 1 147 1 173 1 2 1 81 1 
115 1 315 1 0 1 138 1 318 2 240 1 241 1 203 1 2 1 123 1 218 1 216 2 270 1 147 1 79 1 38 1 173 1 81 1 
333 1 0 2 203 1 24 1 315 2 115 3 138 1 318 2 348 1 240 1 241 2 73 1 123 1 216 2 218 2 270 1 172 1 147 1 38 1 79 1 173 1 101 1 81 1 
333 1 0 2 306 1 203 1 24 1 7 1 315 2 115 3 138 1 318 2 348 1 240 1 241 2 73 1 123 1 216 2 218 2 270 1 172 1 147 2 79 1 173 2 101 1 81 2 
329 1 115 4 332 1 0 1 333 1 348 1 359 2 1 1 241 1 2 1 24 1 309 1 123 1 270 1 194 2 377 1 247 1 182 1 147 3 7 1 173 3 81 3 343 1 
329 1 115 4 332 1 0 1 333 1 348 1 359 2 1 1 241 1 2 1 24 1 123 1 270 1 194 2 247 1 182 1 147 3 7 1 173 3 40 1 81 3 343 1 
123 1 270 1 147 1 36 1 173 1 81 1 
237 1 115 3 19 1 0 1 36 1 241 2 2 2 123 2 232 1 244 1 270 3 55 1 282 1 256 1 220 1 78 1 147 7 326 1 173 7 114 1 81 6 
83 1 274 1 225 2 0 1 178 1 4 1 282 1 181 2 46 5 289 1 94 1 138 1 240 1 241 1 95 1 50 2 298 1 196 3 100 2 147 1 18 1 251 2 155 1 203 2 107 2 208 4 25 1 257 2 365 1 366 1 369 1 315 1 115 1 318 2 266 1 320 1 118 1 268 1 123 1 218 1 216 2 270 1 38 1 79 1 173 1 327 1 81 1 
329 1 332 1 359 3 279 1 1 1 2 1 362 1 207 2 182 1 6 1 92 1 113 1 343 2 115 2 372 2 263 1 242 1 122 2 323 1 297 2 194 3 16 1 247 1 147 1 199 1 173 1 40 1 81 1 
329 1 115 2 0 1 20 1 36 1 241 1 123 1 270 2 282 1 147 2 326 1 173 2 81 2 
123 1 231 1 115 1 270 1 164 1 282 1 241 1 147 4 7 1 307 1 173 4 2 1 81 4 
115 1 34 1 19 1 333 1 0 1 241 1 123 1 270 2 312 1 147 2 173 2 185 1 114 1 81 2 
123 1 276 1 270 1 293 1 171 1 147 1 173 1 303 1 2 1 81 1 
123 1 237 1 115 1 270 1 55 1 282 1 241 1 147 2 313 1 173 2 81 2 
237 1 115 3 333 1 164 1 241 2 307 1 2 1 123 2 231 1 270 2 282 1 256 1 220 1 147 5 173 5 81 4 
13 1 237 1 115 3 333 1 164 1 241 2 307 1 2 1 123 2 231 1 270 2 282 1 256 1 147 5 173 5 81 4 
115 1 315 1 0 1 138 1 318 2 240 1 306 1 241 1 203 1 2 1 123 1 218 1 216 2 270 1 147 1 79 1 173 1 81 1 
115 1 19 1 333 1 0 1 241 1 123 1 232 1 270 2 147 1 326 1 173 1 114 1 81 1 
71 1 72 1 203 1 214 1 296 1 
359 1 182 1 367 1 11 1 93 1 211 1 315 1 69 1 138 1 318 1 242 1 214 1 269 1 218 1 216 1 194 1 247 1 170 1 172 1 223 1 
318 1 72 1 214 1 296 1 310 1 218 1 216 1 258 1 66 1 
223 1 214 1 93 1 
135 1 243 1 212 1 129 1 
135 1 272 1 255 1 144 1 212 1 129 1 381 1 
271 1 144 1 125 1 
135 1 163 1 35 1 255 1 144 3 212 1 308 1 129 1 272 3 31 2 381 1 32 1 
135 1 51 1 272 2 255 1 144 2 212 1 9 1 129 1 381 1 
135 1 276 1 157 1 35 1 272 1 255 1 273 1 144 1 64 1 381 1 303 1 
135 1 35 1 272 1 255 1 144 1 212 1 381 1 
35 1 272 1 255 1 144 1 212 2 129 1 381 1 
135 1 364 1 245 1 14 1 35 1 272 2 255 2 144 2 212 1 381 2 
135 2 35 1 255 1 264 1 144 3 212 1 129 1 213 1 51 2 272 3 236 1 381 1 64 1 
135 1 276 2 35 1 293 1 255 1 144 2 212 1 129 1 336 1 51 1 157 1 272 2 146 1 381 1 303 1 
135 2 317 1 35 1 255 2 144 4 212 1 129 1 213 1 51 2 272 4 9 1 381 2 64 1 
135 1 35 1 272 1 255 1 144 1 212 1 129 1 381 1 
163 1 135 3 255 1 144 4 212 2 308 1 129 2 213 1 51 2 272 4 31 1 381 1 64 1 161 1 
135 1 82 1 356 1 137 1 35 1 255 1 144 2 212 1 129 1 51 1 272 2 381 1 
135 1 163 2 35 1 255 1 144 3 212 1 308 1 129 1 272 3 160 1 31 2 381 1 
135 2 145 1 277 2 119 1 
215 1 35 1 272 1 255 1 144 1 381 1 
135 1 51 1 35 1 272 2 255 1 264 1 144 2 212 1 129 1 381 1 
23 1 
135 1 35 1 272 1 255 1 144 1 212 1 129 1 381 1 
135 1 51 1 35 1 272 3 255 1 264 1 144 3 212 1 31 1 129 1 381 1 
135 1 64 1 213 1 161 1 
135 1 212 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 2 37 1 263 1 40 2 267 4 189 1 239 2 312 9 172 9 344 1 70 3 151 1 126 2 275 1 129 2 348 2 349 1 74 5 301 1 249 2 374 1 282 1 163 1 96 6 335 1 258 1 210 1 83 1 
288 2 37 1 263 1 40 2 267 4 189 1 312 9 239 2 172 9 344 1 70 3 151 1 126 2 275 1 129 2 348 2 349 1 74 5 301 1 249 2 374 1 282 1 163 1 96 6 335 1 258 1 210 1 83 1 
288 2 37 1 263 1 40 2 267 5 189 1 312 10 239 2 172 10 344 1 70 4 151 1 126 2 275 1 129 2 348 2 349 1 74 6 301 1 249 2 374 1 282 1 163 1 96 7 335 1 258 1 210 1 83 1 
288 2 37 1 263 1 40 2 267 3 189 1 312 7 239 1 172 7 344 1 70 2 151 1 126 2 275 1 129 2 348 2 349 1 74 4 301 1 249 2 374 1 163 1 96 4 335 1 258 1 210 1 83 1 
126 1 288 1 129 1 348 1 349 1 40 1 267 2 74 3 301 1 312 4 239 2 282 1 96 3 172 4 344 1 70 1 258 1 83 1 
297 1 126 1 288 1 106 1 274 1 129 1 37 1 74 1 40 1 301 1 312 2 249 1 163 1 172 2 258 1 83 1 
301 1 249 1 312 3 129 2 96 1 172 3 74 2 267 1 40 2 70 1 210 1 258 1 83 1 
126 1 288 1 275 1 356 1 129 2 348 1 349 1 263 1 73 1 74 5 40 2 267 4 301 1 239 2 312 9 249 1 282 1 96 7 172 9 344 1 258 1 210 1 70 3 83 1 
126 1 288 1 275 1 356 1 129 2 348 1 349 1 263 1 73 1 74 5 40 2 267 4 301 1 239 2 312 9 249 1 282 1 96 7 172 9 344 1 258 1 210 1 70 3 83 1 
113 1 38 1 345 1 
113 1 252 1 224 2 
308 2 191 2 315 1 244 2 123 2 332 2 296 2 91 1 
308 2 142 1 338 1 213 2 291 1 4 1 101 1 237 1 168 1 9 2 191 3 315 1 123 2 296 2 198 1 243 1 244 2 128 1 176 1 245 1 277 1 130 2 276 1 325 1 91 1 178 1 110 1 226 1 180 2 76 1 283 1 114 1 332 3 79 2 56 1 58 1 379 1 
308 1 191 1 314 1 244 1 201 1 123 1 332 1 296 1 91 1 137 1 
173 1 175 1 100 1 361 1 24 1 247 1 113 1 191 1 66 1 270 1 314 1 332 1 296 1 345 1 
308 1 244 1 175 1 100 1 361 2 24 1 113 1 191 1 66 2 270 1 314 1 123 1 332 1 296 1 345 1 
66 1 361 1 104 1 271 1 381 1 
113 1 105 1 66 2 45 1 361 2 345 1 104 1 271 1 
66 1 361 1 104 1 
308 1 244 1 201 1 361 1 91 1 119 1 137 1 191 1 66 1 314 1 123 1 332 1 296 1 271 1 
113 1 
127 1 113 1 66 2 45 1 361 2 345 1 104 1 271 1 
220 1 61 1 152 2 324 1 361 5 371 2 179 1 372 1 113 1 66 5 94 1 251 1 45 1 319 2 345 1 271 2 104 2 346 1 273 1 
315 1 38 1 
308 1 19 1 354 1 244 1 191 2 315 2 123 1 332 2 296 2 
304 1 182 1 97 1 
89 1 142 1 243 1 338 1 213 1 176 1 130 1 276 1 291 1 4 1 178 1 191 1 315 1 283 1 332 1 79 1 
142 1 243 1 338 1 244 1 176 1 213 1 291 1 276 1 130 1 4 1 178 1 191 2 283 1 253 1 123 1 332 2 79 1 296 1 97 1 260 1 
308 1 173 1 354 1 244 4 90 1 191 5 12 1 315 1 11 1 253 2 123 4 332 5 296 5 260 1 
191 2 314 1 244 2 201 1 123 2 332 2 296 2 60 1 
308 1 191 3 315 1 244 3 253 1 123 3 332 3 296 3 
191 1 314 1 244 1 201 1 123 1 332 1 296 1 
308 1 19 1 191 1 314 1 354 1 244 1 123 1 332 1 296 1 
308 2 142 1 354 1 338 1 213 1 291 1 100 1 361 1 4 1 101 1 237 1 168 1 9 2 191 4 66 1 315 1 270 1 314 1 44 1 123 3 296 3 198 1 243 1 244 3 176 1 175 1 245 1 276 1 130 1 91 1 178 1 24 1 110 1 226 1 180 1 76 1 283 1 253 1 332 4 79 1 58 1 379 1 82 1 260 1 
191 2 173 1 315 1 12 1 244 1 123 1 253 1 332 2 296 2 
308 1 50 1 354 1 244 3 175 1 100 1 361 1 24 1 113 1 191 3 66 1 314 1 270 1 253 2 123 3 44 1 332 3 296 3 260 1 
308 1 354 1 244 2 191 2 253 1 123 2 332 2 182 1 296 2 97 1 
142 1 243 1 338 1 213 1 176 1 130 1 276 1 291 1 4 1 178 1 191 1 315 1 283 1 332 1 79 1 
184 1 142 1 243 1 338 1 213 1 176 1 130 1 291 1 3 1 4 1 178 1 191 1 315 1 332 1 79 1 
117 1 216 1 268 1 65 1 101 2 237 1 9 2 365 1 194 1 240 1 198 1 325 2 51 1 160 1 226 1 180 4 373 1 76 1 304 2 182 2 58 1 379 1 97 2 98 1 
191 1 314 1 244 1 123 1 100 1 332 1 296 1 60 1 
143 1 54 1 
143 1 54 1 
71 1 318 1 
71 1 318 1 
71 1 318 1 
143 1 54 1 206 1 
143 1 54 1 206 1 
238 1 143 1 54 1 
143 2 71 1 54 2 318 1 33 1 103 1 
143 1 54 1 206 1 
87 1 143 1 54 1 
87 1 143 1 54 1 
87 1 143 1 54 1 
143 1 231 1 85 1 361 1 238 1 7 1 191 2 42 1 66 1 315 1 13 1 122 1 217 1 123 2 296 2 320 1 222 1 200 1 369 1 244 2 75 1 327 1 54 1 332 2 
200 2 143 2 369 2 72 2 361 2 75 1 113 1 7 2 66 2 208 1 13 2 54 2 122 3 77 1 171 1 256 1 30 1 18 1 33 1 
126 1 288 1 348 1 
126 1 288 1 106 1 
126 3 106 1 355 1 185 1 170 1 348 2 
126 2 106 1 355 1 170 1 359 1 348 1 
126 2 106 1 355 2 170 1 348 1 
61 2 117 1 85 1 167 2 361 5 216 1 292 1 65 1 41 1 42 1 66 5 43 1 45 1 319 1 147 1 345 1 104 1 271 4 346 3 152 1 224 3 133 1 51 1 371 1 372 1 327 1 113 2 252 1 329 2 255 1 59 2 229 1 
61 6 117 3 341 5 340 1 266 1 361 9 216 3 65 3 41 1 66 9 43 2 45 1 319 2 345 1 104 6 271 7 125 1 346 8 152 2 224 9 133 2 51 3 371 2 179 1 372 1 302 1 327 4 113 5 227 1 375 1 252 3 329 6 255 3 59 6 381 5 
61 2 117 1 167 1 361 3 292 1 216 1 65 1 66 3 43 1 147 1 319 1 345 1 271 2 346 3 152 1 224 4 133 1 371 1 51 1 179 1 327 1 113 3 252 2 255 1 329 2 59 2 
61 4 117 2 167 2 361 4 292 1 216 2 65 2 66 4 43 1 319 1 147 1 345 1 271 3 346 5 152 1 224 7 133 1 371 1 51 2 179 1 302 1 327 2 113 4 227 1 375 1 252 3 329 4 255 2 59 4 
242 1 38 1 4 1 
4 1 52 1 
34 1 
176 1 291 1 4 1 
303 1 4 1 
291 1 4 1 
242 2 176 1 291 1 4 3 241 1 280 1 
117 1 99 1 84 1 156 1 215 1 325 4 51 1 246 1 101 3 373 3 180 7 364 1 313 1 193 1 194 2 138 1 148 2 
117 1 99 1 84 1 156 1 215 1 325 4 51 1 246 1 101 3 373 3 180 7 364 1 313 1 193 1 194 2 138 1 148 2 
117 1 99 1 84 1 131 1 156 1 215 1 325 4 51 1 246 1 101 3 373 3 180 7 313 1 364 1 193 1 194 2 138 1 148 2 
62 3 99 1 117 4 84 2 215 5 216 3 101 15 65 3 313 1 9 2 364 2 192 1 193 2 194 5 196 1 148 3 49 1 156 2 325 16 246 1 23 1 51 4 279 4 226 1 180 31 373 10 93 1 76 1 138 1 255 3 58 1 285 1 353 1 379 1 
117 1 99 1 84 1 215 1 101 4 9 4 364 1 313 1 193 1 194 3 148 2 49 1 155 1 156 1 135 1 325 5 51 1 226 2 180 9 373 4 76 2 138 1 58 2 379 2 
140 1 288 1 142 1 1 1 185 1 213 1 235 1 40 1 64 1 236 1 146 1 312 2 172 2 126 2 243 1 106 1 129 1 348 1 130 1 74 1 108 1 301 1 249 1 162 1 28 1 96 1 79 1 31 1 258 1 83 1 
140 1 288 1 165 1 142 1 1 1 185 1 213 1 40 1 64 1 236 1 146 1 312 3 172 3 69 1 126 2 298 1 243 1 106 1 129 1 348 1 130 1 74 1 108 1 301 1 249 1 28 1 79 1 96 2 31 1 83 1 
126 2 140 1 288 1 142 1 165 1 106 1 243 1 185 1 213 1 348 1 130 1 74 1 236 1 64 1 146 1 108 1 301 1 312 2 249 1 28 1 96 2 79 1 69 1 172 2 83 1 
142 1 338 1 213 1 291 1 40 1 4 1 64 2 312 1 317 1 172 1 298 1 322 1 243 1 129 1 130 1 205 1 108 2 248 1 249 2 28 2 330 1 79 1 286 1 
140 1 288 1 165 1 142 1 1 1 185 1 213 1 235 1 40 1 64 1 236 1 146 1 312 1 172 1 126 2 243 1 106 1 129 1 348 1 130 1 108 1 249 1 28 1 79 1 31 1 258 1 
2 1 
61 2 142 1 338 2 232 1 291 1 100 1 342 1 4 1 293 1 6 2 190 2 8 2 191 1 10 2 66 5 295 2 296 1 345 1 104 6 346 2 152 1 243 1 24 1 247 1 113 2 252 2 254 1 79 2 305 1 307 1 164 2 212 1 213 2 360 2 264 1 361 5 363 1 270 1 314 1 317 1 45 3 319 1 47 1 322 1 321 4 173 1 175 1 224 2 130 2 133 1 371 1 372 1 53 1 332 1 377 1 
232 1 100 1 361 3 293 1 363 1 190 1 191 1 66 3 270 1 314 1 45 1 296 1 104 2 127 1 321 2 173 1 175 1 24 1 247 1 53 1 332 1 307 1 
232 1 100 1 360 1 361 3 293 1 363 1 191 1 66 3 270 1 314 1 45 1 296 1 345 1 104 1 127 1 321 3 173 1 175 1 24 1 247 1 53 1 113 1 332 1 307 1 
232 1 100 1 360 1 361 3 293 1 363 1 190 1 191 1 66 3 270 1 314 1 45 1 296 1 345 1 104 2 127 1 321 3 173 1 175 1 24 1 247 1 53 1 113 1 332 1 307 1 164 1 
61 1 232 1 100 1 234 1 342 1 293 1 6 2 190 4 191 1 8 2 66 5 10 2 296 1 295 2 345 5 104 7 346 1 152 1 24 1 247 1 113 5 161 1 252 2 306 1 305 1 32 1 307 1 164 4 360 4 361 5 363 1 314 1 270 1 45 3 319 1 367 1 127 1 321 6 173 1 175 1 371 1 372 1 53 1 332 1 
61 1 232 1 100 1 342 1 293 1 6 2 190 2 191 1 8 2 66 4 10 2 296 1 295 2 345 1 104 4 346 1 152 1 24 1 247 1 113 2 252 2 305 1 307 1 164 2 360 2 264 1 361 4 363 1 314 1 270 1 45 2 319 1 321 4 173 1 175 1 224 2 371 1 372 1 53 1 332 1 
61 1 232 1 100 1 234 1 360 2 342 1 361 4 293 1 363 1 6 2 190 2 8 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 367 1 319 1 345 1 104 4 346 1 152 1 321 4 173 1 175 1 371 1 24 1 247 1 372 1 113 1 53 1 252 2 305 1 332 1 306 1 307 1 164 2 
61 1 232 1 100 1 234 1 360 2 342 1 361 4 293 1 363 1 6 2 190 2 8 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 367 1 319 1 345 1 104 4 346 1 152 1 321 4 173 1 175 1 371 1 24 1 247 1 372 1 113 1 53 1 252 2 305 1 332 1 306 1 307 1 164 2 
0 2 61 1 232 1 100 1 360 2 342 1 361 4 293 1 363 1 190 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 367 1 319 1 345 1 104 4 346 1 152 1 321 4 173 1 154 1 175 1 224 2 132 1 22 2 371 1 24 1 247 1 372 1 113 1 53 1 332 1 139 1 307 1 164 2 
61 1 232 1 100 1 234 1 360 3 342 1 361 4 293 1 363 1 6 2 190 3 8 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 367 1 319 1 345 1 104 5 346 1 152 1 321 5 173 1 175 1 371 1 24 1 247 1 372 1 113 1 53 1 252 2 305 1 306 1 332 1 32 1 307 1 164 3 
61 1 232 1 100 1 234 1 360 3 342 1 361 4 293 1 363 1 6 2 190 3 8 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 367 1 319 1 345 1 104 5 346 1 152 1 321 5 173 1 175 1 371 1 24 1 247 1 372 1 113 1 53 1 252 2 305 1 306 1 332 1 32 1 307 1 164 3 
0 2 61 1 232 1 100 1 360 2 264 1 342 1 361 4 293 1 363 1 190 2 191 1 10 2 66 4 270 1 314 1 45 2 295 2 296 1 319 1 345 1 104 4 346 1 152 1 321 4 173 1 175 1 154 1 224 2 22 2 371 1 24 1 247 1 372 1 113 1 53 1 332 1 307 1 164 2 
198 1 117 1 99 1 84 1 38 1 156 1 325 3 51 1 101 3 226 1 237 1 180 6 373 2 9 2 76 1 313 1 315 2 194 2 365 1 138 1 304 1 182 1 58 1 148 1 379 1 97 1 
261 1 62 3 117 1 215 1 216 2 101 6 65 1 237 2 9 4 192 1 315 1 194 1 198 1 323 1 325 8 23 1 51 2 279 3 110 1 226 2 373 2 250 1 180 14 76 2 304 11 255 2 114 1 331 1 209 1 182 4 58 2 379 2 97 11 
142 1 261 1 338 1 213 1 291 1 4 1 86 1 101 1 237 1 191 2 9 2 315 1 123 1 296 1 198 1 89 1 243 1 244 1 176 1 276 1 130 1 203 1 325 1 178 1 226 1 110 1 180 2 76 1 283 1 253 1 79 1 332 2 114 1 182 1 58 1 228 1 379 1 260 1 
142 2 99 1 338 1 339 1 290 2 291 2 63 2 4 2 101 10 65 2 237 3 9 6 191 3 194 4 296 1 148 1 198 3 243 2 244 1 156 1 110 1 112 2 76 3 253 1 304 7 255 2 114 1 79 3 260 1 165 1 261 1 35 1 117 3 84 1 213 3 215 4 216 2 168 2 313 1 315 2 123 1 176 2 130 3 276 2 325 10 51 3 178 2 226 3 180 20 373 8 283 2 138 1 332 3 183 1 182 7 58 3 333 2 379 3 97 7 
211 1 165 1 142 2 262 1 338 2 187 1 213 7 291 2 4 3 101 1 237 2 191 1 9 4 365 1 123 1 317 1 88 1 296 1 198 2 322 1 243 2 244 1 130 8 277 2 325 1 136 1 26 1 226 2 110 1 180 2 76 2 162 1 55 1 253 1 332 1 79 8 114 1 58 2 379 2 
308 1 261 1 354 1 117 1 216 1 65 1 101 2 237 1 9 2 191 1 194 1 123 1 296 1 198 1 244 1 370 1 325 1 51 1 226 1 373 1 180 3 76 1 304 1 255 1 332 1 182 1 58 1 379 1 97 1 
198 1 215 1 325 2 216 1 51 1 226 1 237 1 373 1 180 2 9 2 76 1 365 1 304 1 182 1 58 1 379 1 97 1 98 1 
198 1 117 1 226 1 65 1 101 2 237 1 373 1 180 2 9 2 76 1 194 1 365 1 304 1 240 1 182 1 58 1 379 1 97 1 
117 1 215 1 216 1 65 1 101 2 237 1 9 2 365 1 194 1 198 1 325 2 51 1 226 1 180 4 373 2 76 1 255 1 304 2 182 2 58 1 379 1 97 2 
198 1 215 1 325 2 216 1 51 1 226 1 237 1 373 1 180 2 9 2 76 1 55 1 304 1 182 1 58 1 379 1 97 1 98 1 
198 1 117 1 226 1 65 1 101 2 237 1 373 1 180 2 9 2 76 1 194 1 55 1 304 1 240 1 182 1 58 1 379 1 97 1 
117 1 215 1 216 1 65 1 101 2 237 1 9 2 194 1 198 1 325 2 51 1 226 1 180 4 373 2 76 1 55 1 255 1 304 2 182 2 58 1 379 1 97 2 
117 1 215 1 216 1 65 1 101 2 237 1 9 2 194 1 198 1 325 2 51 1 226 1 180 4 373 2 76 1 255 1 304 2 182 2 58 1 379 1 97 2 
142 1 338 1 213 1 291 1 4 1 101 1 168 1 237 1 191 1 9 2 315 1 198 1 243 1 176 1 276 1 130 1 325 1 178 1 226 1 110 1 180 2 76 1 283 1 114 1 79 1 332 1 58 1 379 1 
142 1 184 1 338 1 213 1 291 1 3 1 4 1 101 1 237 1 191 1 9 2 315 1 198 1 243 1 176 1 130 1 325 1 178 1 226 1 110 1 180 2 76 1 114 1 79 1 332 1 57 1 58 1 379 1 
261 1 117 1 215 1 216 1 65 1 101 2 237 1 9 2 194 1 198 1 325 2 51 1 226 1 180 4 373 2 76 1 255 1 304 2 182 2 58 1 379 1 97 2 
142 1 117 1 213 1 291 1 215 1 216 1 4 1 101 2 65 1 168 1 237 1 191 1 9 2 194 1 198 1 243 1 176 1 276 1 130 1 325 2 51 1 178 1 226 1 373 2 180 4 112 1 76 1 283 1 162 1 304 2 255 1 79 1 332 1 182 2 58 1 379 1 97 2 
308 1 261 1 117 1 354 1 215 1 216 1 101 1 65 1 237 1 102 1 9 2 191 1 123 1 296 1 198 1 244 1 325 2 51 1 226 1 373 1 180 3 76 1 255 1 304 1 332 1 182 1 58 1 379 1 97 1 
62 1 166 1 117 3 215 3 216 3 188 2 101 10 65 3 9 4 192 1 194 3 294 1 218 1 221 2 155 1 202 1 325 9 204 1 23 1 51 3 25 1 279 2 226 2 180 19 373 6 76 2 255 3 58 2 81 1 379 2 
62 2 117 2 166 1 215 2 216 3 101 12 188 4 5 1 65 2 9 6 192 2 194 2 294 1 218 2 124 1 49 2 221 1 199 1 155 1 202 1 325 14 51 3 25 2 279 2 226 3 207 1 373 4 180 26 76 3 284 1 255 3 58 3 80 1 379 3 
62 3 99 1 65 4 101 21 188 4 5 1 9 6 192 3 194 4 294 1 148 1 199 1 155 1 156 1 202 1 23 1 204 1 25 1 207 1 76 3 255 4 80 1 117 5 166 1 84 1 310 1 215 4 216 4 313 1 218 2 124 1 49 1 221 1 325 20 51 5 279 4 226 3 373 8 180 41 284 1 138 1 58 3 379 3 
62 3 99 1 166 1 117 4 84 1 310 1 215 3 216 4 5 1 188 4 101 18 65 3 313 1 9 8 192 3 194 4 294 1 218 2 124 1 148 1 49 2 221 1 199 1 155 1 202 1 156 1 325 20 204 1 23 1 51 5 25 1 279 4 226 4 207 1 180 38 373 7 76 4 138 1 284 1 255 4 58 4 80 1 379 4 
62 4 99 1 166 1 117 8 84 1 215 7 216 7 5 1 188 4 101 25 65 7 313 1 9 4 192 2 194 7 294 1 218 1 124 1 148 1 49 1 221 1 199 1 155 1 202 1 156 1 325 27 23 2 51 8 25 1 279 4 226 2 207 1 180 52 373 14 76 2 138 1 284 1 255 7 331 2 58 2 80 1 379 2 
7 1 143 1 200 1 208 1 13 1 369 1 54 1 30 1 33 1 150 1 
238 1 222 1 
230 1 7 1 143 1 200 1 13 1 369 1 54 1 299 1 118 1 
46 1 206 1 
87 1 16 1 103 1 
200 1 143 1 369 1 72 1 361 1 75 1 113 1 7 1 66 1 208 1 13 1 54 1 122 2 77 1 256 1 30 1 18 1 33 1 
200 1 143 1 369 1 72 1 361 1 75 1 113 1 7 1 66 1 208 1 13 1 54 1 122 2 77 1 256 1 30 1 18 1 33 1 
200 1 143 1 369 1 72 1 361 1 75 1 113 1 7 1 66 1 208 1 13 1 54 1 122 2 77 1 256 1 30 1 18 1 33 1 
46 1 103 1 206 1 
46 1 103 1 206 1 
87 1 16 1 
87 1 16 1 103 1 
231 1 217 1 
143 1 231 1 358 1 85 1 361 1 238 1 191 2 7 1 42 1 66 1 315 1 13 1 122 1 217 1 123 2 296 2 271 1 320 1 222 1 200 1 369 1 72 1 244 2 327 1 54 1 77 1 332 2 
142 1 261 1 262 1 213 2 291 1 214 1 4 1 101 1 237 1 191 2 9 2 366 1 88 1 296 2 17 1 198 1 243 1 153 1 130 2 277 2 325 1 158 1 226 1 110 1 180 2 76 1 79 2 332 2 114 1 58 1 379 1 
126 2 140 1 288 1 142 1 165 1 106 1 243 1 1 1 185 1 213 2 348 1 130 2 352 1 236 1 281 1 162 1 28 1 79 2 259 1 
126 2 140 1 288 1 165 1 142 1 106 1 243 1 1 1 185 1 213 1 348 1 130 1 352 1 236 1 120 1 28 1 79 1 
142 1 322 1 243 1 338 1 213 1 291 1 130 1 39 1 4 1 205 1 281 1 28 1 317 1 79 1 
126 2 140 1 288 1 142 1 165 1 106 1 243 1 1 1 185 1 213 1 348 1 130 1 352 1 236 1 281 1 28 1 79 1 259 1 
378 1 
113 1 220 1 61 1 38 1 324 1 345 1 346 1 
61 1 361 1 6 1 8 1 66 1 45 1 319 1 345 1 104 1 346 1 152 1 224 1 371 1 372 1 113 2 252 1 305 1 
142 4 61 8 144 1 338 1 291 3 4 10 65 2 66 5 241 1 149 2 345 2 104 5 346 9 242 2 152 4 243 3 350 2 113 8 303 2 162 1 252 6 255 2 79 3 78 1 257 2 117 2 357 1 213 3 265 2 361 5 311 2 216 2 169 1 121 2 45 3 319 4 220 1 176 3 175 2 130 3 224 12 324 1 133 2 371 4 51 2 225 1 52 3 372 4 95 2 376 2 329 6 377 1 333 2 59 6 
61 5 62 1 117 2 265 1 361 1 216 2 5 1 65 2 66 1 192 1 121 2 45 1 319 2 124 1 345 2 104 1 346 8 199 1 152 2 107 1 224 6 133 1 157 1 371 2 51 2 279 1 372 2 113 5 252 3 284 1 329 5 255 2 377 1 80 1 59 5 
308 1 61 2 117 1 84 1 233 1 265 1 361 1 119 1 191 1 66 1 314 1 121 2 123 1 296 1 319 1 346 2 152 1 244 1 201 1 156 1 91 1 371 1 51 2 372 1 137 1 138 1 332 1 306 1 
220 1 152 1 61 1 324 1 371 1 372 1 113 1 319 1 345 1 346 1 
61 5 117 2 224 10 265 1 216 2 51 2 65 2 113 5 121 2 252 5 255 2 329 5 333 1 59 5 346 5 
113 1 66 1 45 1 361 1 345 1 104 1 
142 1 61 2 144 2 338 2 213 4 291 1 361 3 4 1 169 1 66 3 317 1 45 2 319 2 47 1 104 4 346 2 152 2 322 1 243 1 130 4 300 1 133 2 371 2 179 1 109 1 372 1 254 1 79 4 377 2 
308 2 142 1 338 1 213 1 291 1 4 1 101 1 168 1 237 1 9 2 191 3 315 1 123 2 296 2 198 1 243 1 244 2 245 1 176 1 130 1 276 1 91 1 178 1 110 1 226 1 180 1 76 1 283 1 79 1 332 3 58 1 379 1 
61 2 152 1 224 4 133 1 371 1 372 1 113 4 252 2 329 2 377 1 59 2 319 1 148 1 345 2 346 1 
7 1 13 1 29 1 
7 1 13 1 29 1 
7 1 231 1 13 1 316 1 30 1 
7 1 13 1 29 1 
7 1 269 1 13 1 
7 1 269 1 13 1 
7 1 269 1 13 1 
7 1 13 1 
143 1 54 1 
117 1 99 1 84 1 156 1 325 4 215 1 51 1 101 4 226 2 180 8 373 3 9 4 76 2 313 1 194 2 138 1 58 2 148 1 379 2 49 1 
99 1 117 1 84 1 38 1 156 1 325 3 51 1 101 3 373 2 180 6 313 1 194 2 138 1 148 1 
117 1 325 2 215 1 216 1 51 1 101 2 65 1 226 1 373 2 180 4 9 2 76 1 194 1 255 1 58 1 379 1 48 1 
62 1 117 1 325 3 215 1 23 1 216 1 51 1 279 2 65 1 101 4 180 7 373 2 192 1 194 1 255 1 
62 2 99 1 117 3 84 2 215 4 216 2 101 12 65 2 313 1 9 4 194 5 148 1 49 2 347 1 156 2 325 11 51 3 23 1 279 2 226 2 373 9 180 23 250 1 76 2 138 1 255 2 331 1 58 2 379 2 
180 1 279 1 101 1 
180 1 62 1 325 1 
117 1 325 3 215 1 216 1 51 1 226 1 101 3 65 1 180 6 373 3 76 1 9 2 194 2 255 1 58 1 333 1 379 1 48 1 
62 1 117 2 215 1 216 2 101 6 5 1 65 2 9 2 192 1 194 1 124 1 199 1 155 1 325 6 51 2 279 1 226 1 180 12 373 2 76 1 284 1 255 2 58 1 80 1 379 1 
117 1 84 1 156 1 325 3 215 1 51 1 101 3 180 6 373 2 194 1 138 1 
347 1 99 1 84 1 156 1 325 1 215 1 101 2 226 1 373 2 180 3 313 1 9 2 76 1 194 1 58 1 379 1 49 1 
117 2 233 1 84 2 155 1 156 2 215 2 325 5 51 2 226 1 101 5 373 5 180 10 76 1 9 2 194 3 138 1 58 1 379 1 
155 1 325 2 215 1 216 1 51 1 226 1 180 2 373 1 9 2 76 1 58 1 379 1 
117 1 155 1 325 2 215 1 216 1 51 1 101 2 65 1 226 1 373 2 180 4 9 2 76 1 194 1 255 1 58 1 379 1 
347 1 84 1 155 1 156 1 215 1 325 1 204 1 101 2 226 3 180 3 373 2 9 6 76 3 194 1 58 3 379 3 49 1 
62 3 99 1 117 5 84 3 215 5 216 3 101 18 65 3 313 1 9 10 192 1 194 7 148 1 48 1 49 2 347 1 155 1 156 3 325 16 204 1 23 1 51 5 279 4 226 5 93 1 180 34 373 12 76 5 138 2 255 3 285 1 58 5 353 1 379 5 
62 1 117 1 99 1 84 1 101 4 5 1 9 2 313 1 192 1 194 2 148 1 155 1 156 1 325 4 51 1 279 1 226 1 180 8 373 2 76 1 138 1 58 1 379 1 
62 1 117 1 99 1 84 1 215 1 216 1 101 5 5 1 313 1 9 4 192 1 194 2 148 1 48 1 155 1 156 1 325 6 23 1 51 2 279 2 226 2 180 11 373 3 76 2 138 1 255 1 58 2 379 2 
62 1 99 1 117 3 84 1 215 1 216 2 101 10 5 1 65 2 313 1 9 6 192 1 194 3 124 1 148 1 48 1 49 1 199 1 155 1 156 1 325 9 51 3 279 1 226 3 180 19 373 4 76 3 138 1 284 1 255 2 58 3 80 1 379 3 
62 1 99 1 117 2 84 1 215 2 216 2 101 7 5 1 65 1 313 1 9 6 192 1 194 3 124 1 148 1 48 1 49 1 199 1 155 1 156 1 325 10 51 3 279 1 226 3 180 17 373 5 76 3 138 1 284 1 255 2 58 3 80 1 379 3 
62 1 117 1 99 1 84 1 101 4 5 1 9 2 313 1 192 1 194 2 148 1 155 1 156 1 325 4 51 1 279 1 226 1 180 8 373 2 76 1 138 1 58 1 379 1 
62 1 117 2 215 1 216 2 101 6 5 1 65 2 9 2 192 1 194 1 124 1 199 1 155 1 325 6 51 2 279 1 226 1 180 12 373 2 76 1 284 1 255 2 58 1 80 1 379 1 
62 1 99 1 117 2 84 1 215 2 216 2 101 8 5 1 65 1 313 1 9 8 192 1 194 3 124 1 148 1 48 1 49 2 199 1 155 1 156 1 325 10 51 3 279 1 226 4 180 18 373 5 76 4 138 1 284 1 255 2 58 4 80 1 379 4 
62 1 117 2 215 3 216 3 101 7 5 1 65 2 9 8 192 1 194 3 124 1 49 2 199 1 155 1 325 9 204 1 51 3 279 1 226 4 180 16 373 6 76 4 284 1 255 3 58 4 80 1 379 4 
117 1 99 1 84 3 156 3 215 3 325 3 51 1 101 4 180 7 373 6 313 2 194 3 138 1 
62 1 99 1 117 2 84 1 215 1 216 2 101 8 5 1 65 1 313 1 9 8 192 1 194 3 124 1 148 1 49 2 199 1 155 1 156 1 325 10 204 1 51 3 279 1 226 4 180 18 373 4 76 4 138 1 284 1 255 2 58 4 80 1 379 4 
336 1 191 1 173 1 315 1 12 1 332 1 296 1 
336 1 287 1 289 1 368 1 173 1 337 1 223 1 191 1 315 1 12 1 332 1 296 1 
142 1 322 1 243 1 338 1 317 1 213 1 291 1 79 1 130 1 38 1 4 1 
142 1 243 1 338 1 244 1 176 1 213 1 291 1 130 1 276 1 4 1 178 1 191 2 315 1 253 1 123 1 332 2 79 1 296 1 
142 1 144 1 213 1 291 2 100 1 311 1 4 3 191 2 315 1 314 1 123 2 296 2 243 1 244 1 176 2 276 1 130 1 178 1 24 1 303 1 253 1 79 1 332 2 
142 1 144 1 213 2 291 2 100 1 311 1 3 1 4 3 343 1 191 2 315 1 314 1 123 2 296 2 243 1 244 1 176 2 130 2 178 1 24 1 303 1 253 1 79 2 332 2 
308 1 142 1 144 1 338 1 213 2 291 1 145 1 361 2 311 1 4 4 119 1 362 1 191 1 66 2 314 1 123 1 296 1 345 1 104 1 242 1 243 1 244 1 201 1 176 1 175 1 130 2 91 1 52 1 137 1 113 1 303 1 332 1 79 2 
242 1 142 1 243 1 144 1 338 1 175 1 176 1 213 3 291 1 130 3 350 1 311 1 361 2 4 4 52 1 343 1 113 1 303 1 66 2 79 3 345 1 104 1 
142 1 243 1 213 1 79 1 130 1 136 1 
211 1 165 1 142 3 243 2 116 1 338 2 187 1 213 6 176 1 277 1 130 7 21 1 291 2 136 1 4 3 26 1 162 1 79 7 88 1 241 1 334 1 
142 1 261 1 117 1 99 1 84 1 213 1 290 1 291 1 4 1 101 3 237 2 168 1 313 1 191 2 9 4 315 2 194 2 123 1 296 1 148 1 198 2 243 1 244 1 176 1 130 1 276 1 156 1 325 3 51 1 158 1 178 1 226 2 180 6 373 2 112 1 76 2 283 1 162 1 138 1 304 1 253 1 332 2 79 1 182 1 58 2 379 2 97 1 
61 1 338 1 213 1 361 3 4 2 169 1 66 3 45 1 319 2 149 1 345 1 271 1 104 2 346 1 242 1 220 1 152 2 175 1 130 1 324 1 350 1 371 2 52 1 372 2 113 1 95 1 376 1 79 1 
242 1 142 2 243 1 162 1 357 1 176 1 213 2 291 1 79 2 130 2 4 2 241 1 136 1 
142 1 322 1 243 1 338 1 213 4 130 4 291 1 4 1 351 1 343 1 162 1 317 1 79 4 
142 2 243 1 144 1 116 1 339 1 213 2 176 1 130 2 309 1 291 1 4 1 79 2 334 1 219 1 
126 1 288 1 142 1 106 1 243 1 338 1 213 1 79 1 130 1 236 1 
142 1 165 1 243 1 162 1 366 1 213 2 291 1 79 2 130 2 88 1 4 1 
211 1 322 1 142 2 243 2 144 1 338 1 213 4 130 5 291 2 4 3 351 1 26 1 162 1 317 1 79 5 88 1 
322 1 142 2 243 2 144 1 338 1 213 4 130 5 291 2 4 3 351 1 92 1 26 1 162 1 317 1 79 5 88 1 
142 1 243 1 338 1 244 1 176 1 213 1 291 1 130 1 4 1 3 1 178 1 191 2 315 1 253 1 123 1 332 2 79 1 296 1 
142 2 243 1 144 1 116 1 213 1 176 1 130 1 21 1 291 1 4 1 79 1 241 1 334 1 
315 1 186 1 177 1 134 1 159 1 
141 1 174 1 175 1 186 2 100 1 177 1 134 2 361 2 159 2 24 1 113 1 66 2 315 1 314 1 270 1 195 1 44 1 345 1 271 1 
153 1 177 1 214 1 134 1 159 1 191 1 332 1 296 1 17 1 
141 1 195 1 177 1 
301 1 38 1 74 1 83 1 
301 1 312 1 129 1 172 1 74 1 40 1 83 1 
249 1 312 1 108 1 
20 1 129 1 37 2 74 1 40 1 301 1 312 3 111 1 14 1 172 3 258 1 83 1 
301 1 239 1 312 2 129 1 96 1 172 2 74 1 40 1 83 1 
126 1 312 1 288 1 129 1 348 1 349 1 172 1 74 1 267 1 40 1 258 1 
312 1 129 1 172 1 74 1 40 1 258 1 83 1 
301 1 312 1 129 1 172 1 40 1 258 1 83 2 
129 2 278 1 74 1 40 2 312 2 27 1 172 2 258 1 83 1 272 1 
301 1 312 3 275 1 129 1 96 2 263 1 172 3 74 2 267 1 40 1 70 1 258 1 83 1 
126 2 288 1 106 1 185 1 129 1 348 1 74 1 40 1 301 1 312 2 96 1 172 2 380 1 258 1 83 1 
301 1 239 1 312 4 282 1 129 2 96 2 172 4 74 2 267 1 40 2 70 1 258 1 83 1 
301 1 312 1 129 1 172 1 74 1 40 1 258 1 83 1 
36 1 129 1 37 1 40 1 267 1 74 3 301 2 111 1 312 4 14 1 96 2 172 4 70 1 83 2 
129 1 73 1 74 1 40 1 326 1 301 1 312 2 197 1 96 1 172 2 258 1 83 1 
129 1 37 2 74 1 40 1 301 1 312 3 111 2 14 1 68 1 172 3 258 1 83 1 
115 1 328 1 15 2 74 2 
312 1 67 1 129 1 172 1 40 1 258 1 
301 1 312 2 275 1 129 1 96 1 172 2 74 1 40 1 258 1 83 1 
181 1 
301 1 312 1 129 1 172 1 74 1 40 1 258 1 83 1 
301 1 312 3 275 1 129 1 96 1 37 1 172 3 74 1 40 1 258 1 83 1 
36 1 74 1 267 1 70 1 
74 1 83 1 

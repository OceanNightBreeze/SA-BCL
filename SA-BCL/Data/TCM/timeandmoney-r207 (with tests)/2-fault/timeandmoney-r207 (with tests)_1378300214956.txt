#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 143 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 9 196 1 357 2 177 1 129 1 80 2 250 1 158 1 199 2 361 1 5 1 6 1 53 1 224 1 337 2 311 1 165 6 206 5 256 1 346 2 293 1 232 2 35 2 349 4 118 1 38 3 97 9 71 1 
152 9 196 1 357 2 177 1 129 1 80 2 250 1 158 1 199 2 361 1 5 1 6 1 53 1 224 1 337 2 311 1 165 6 206 5 256 1 346 2 293 1 232 2 35 2 349 4 118 1 38 3 97 9 71 1 
152 10 196 1 357 2 177 1 129 1 80 2 250 1 158 1 199 2 361 1 5 1 6 1 53 1 224 1 337 2 311 1 165 7 206 6 256 1 346 2 293 1 232 2 35 2 349 5 118 1 38 4 97 10 71 1 
152 7 196 1 357 2 177 1 129 1 80 1 158 1 199 2 361 1 5 1 6 1 53 1 224 1 337 2 311 1 165 4 206 4 256 1 346 2 293 1 232 2 35 2 349 3 118 1 38 2 97 7 71 1 
152 4 196 1 346 1 80 2 232 1 250 1 158 1 199 1 35 1 349 2 6 1 38 1 118 1 337 1 97 4 165 3 311 1 206 3 
114 1 1 1 152 2 196 1 357 1 346 1 232 1 293 1 35 1 6 1 118 1 224 1 309 1 337 1 97 2 206 1 
152 3 196 1 357 1 35 2 361 1 349 1 6 1 118 1 38 1 337 2 97 3 165 1 206 2 
152 9 196 1 357 1 129 1 80 2 250 1 48 1 158 1 199 1 361 1 6 1 53 1 337 2 165 7 311 1 206 5 346 1 232 1 349 4 35 2 38 3 295 1 118 1 97 9 
152 9 196 1 357 1 129 1 80 2 250 1 48 1 158 1 199 1 361 1 6 1 53 1 337 2 165 7 311 1 206 5 346 1 232 1 349 4 35 2 38 3 295 1 118 1 97 9 
323 1 25 1 369 1 
323 1 341 1 119 2 
104 2 343 2 303 2 2 2 96 2 336 2 154 1 314 1 
74 2 18 1 75 1 303 2 19 1 2 3 44 2 154 1 104 2 362 1 161 1 335 1 336 2 8 1 314 1 28 1 107 1 226 2 317 1 343 3 31 1 90 1 272 1 324 2 294 1 189 1 94 2 376 1 39 1 67 1 96 2 299 1 192 1 219 1 218 1 240 1 16 1 
316 1 104 1 245 1 343 1 303 1 2 1 96 1 336 1 154 1 27 1 
303 1 343 1 245 1 209 1 2 1 369 1 274 1 223 1 323 1 251 1 297 1 147 1 203 1 205 1 
303 1 343 1 245 1 209 2 2 1 369 1 223 1 323 1 104 1 251 1 147 2 96 1 336 1 203 1 205 1 
83 1 209 1 268 1 147 1 233 1 
323 1 243 1 209 2 268 1 147 2 3 1 369 1 233 1 
209 1 268 1 147 1 
316 1 245 1 209 1 303 1 343 1 2 1 154 1 233 1 104 1 276 1 147 1 96 1 336 1 27 1 
323 1 
323 1 146 1 209 2 268 1 147 2 3 1 369 1 233 1 
184 1 113 2 209 5 89 1 3 1 369 1 233 2 331 2 271 1 139 1 373 2 66 1 323 1 144 1 147 5 268 2 41 1 109 1 356 1 
25 1 314 1 
303 2 343 2 2 2 348 1 11 1 104 1 96 1 336 1 314 2 
132 1 50 1 33 1 
74 1 317 1 75 1 343 1 19 1 2 1 44 1 324 1 362 1 294 1 39 1 56 1 8 1 314 1 28 1 16 1 
74 1 317 1 75 1 303 1 343 2 19 1 2 2 44 1 32 1 169 1 132 1 104 1 324 1 362 1 294 1 39 1 96 1 8 1 28 1 16 1 
104 3 343 3 303 3 2 3 96 3 336 1 169 1 314 1 
316 1 104 1 245 1 343 1 303 1 2 1 96 1 
104 1 245 1 343 1 303 1 2 1 96 1 336 1 348 1 11 1 
74 1 18 1 75 1 303 3 245 1 19 1 2 4 44 1 154 1 223 1 104 3 251 1 362 1 161 1 333 1 335 1 336 2 203 1 8 1 205 1 314 1 28 1 226 1 317 1 343 4 209 1 169 1 32 1 90 1 11 1 324 1 294 1 189 1 375 1 94 2 39 1 67 1 96 3 147 1 299 1 219 1 218 1 240 1 16 1 
104 1 343 2 303 2 2 2 297 1 96 1 329 1 169 1 314 1 
318 1 209 1 245 1 303 3 343 3 2 3 32 1 169 2 11 1 223 1 323 1 104 3 251 1 333 1 147 1 96 3 336 1 203 1 205 1 
303 2 343 2 2 2 169 1 33 1 11 1 104 2 132 1 96 2 336 1 
74 1 317 1 75 1 343 1 19 1 2 1 44 1 324 1 362 1 294 1 39 1 8 1 314 1 28 1 16 1 
74 1 317 1 75 1 343 1 19 1 2 1 44 1 324 1 294 1 326 1 14 1 8 1 314 1 28 1 16 1 
18 1 128 1 263 1 222 1 132 2 133 1 50 2 285 1 85 1 54 1 55 1 207 1 226 4 31 2 33 2 90 1 189 1 94 2 236 1 67 1 299 1 354 1 218 1 219 2 
104 1 245 1 343 1 303 1 2 1 96 1 203 1 364 1 
303 5 343 5 2 5 329 1 169 2 32 1 155 1 11 1 104 4 297 1 96 4 336 1 314 1 87 1 
316 1 104 2 245 1 343 2 303 2 2 2 96 2 364 1 
111 1 334 1 
111 1 334 1 
291 1 26 1 
291 1 26 1 
291 1 26 1 
111 1 193 1 334 1 
111 1 193 1 334 1 
111 1 334 1 358 1 
171 1 111 2 264 1 291 1 334 2 26 1 
111 1 193 1 334 1 
111 1 334 1 220 1 
111 1 334 1 220 1 
111 1 334 1 220 1 
340 1 111 2 123 3 209 2 194 2 185 1 47 1 231 2 197 1 234 1 188 2 323 1 49 2 264 1 334 2 296 2 147 2 121 1 239 1 
111 1 123 1 343 2 303 2 209 1 229 1 2 2 127 1 358 1 321 1 47 1 231 1 188 1 275 1 49 1 104 2 334 1 296 1 147 1 96 2 238 1 314 1 15 1 269 1 
346 1 232 1 199 1 
1 1 346 1 232 1 
302 1 1 1 95 1 232 3 34 1 199 2 
1 1 95 1 164 1 232 2 34 1 199 1 
1 1 95 2 232 2 199 1 34 1 
124 1 245 1 303 1 2 1 128 1 154 1 3 1 330 1 331 1 222 1 104 1 200 2 285 1 268 1 336 1 225 2 57 2 27 1 207 1 365 1 316 1 341 1 289 1 113 1 184 1 343 1 209 5 233 4 369 1 271 2 373 1 275 1 323 2 276 1 144 3 119 3 96 1 147 5 298 1 42 1 
124 1 245 1 303 1 2 1 128 1 3 1 154 1 330 1 331 1 222 1 104 1 200 2 83 2 285 1 268 3 336 1 225 2 9 1 27 1 207 1 316 1 341 1 289 1 113 1 184 1 343 1 209 5 233 4 369 1 271 2 373 1 275 1 323 2 215 2 276 1 144 3 119 3 298 1 147 5 96 1 217 1 
245 1 303 1 124 1 2 1 128 1 154 1 330 1 331 1 222 1 104 1 200 2 285 1 336 1 225 2 27 1 57 1 207 1 365 1 316 1 341 1 289 1 113 1 343 1 209 3 369 1 233 2 271 2 373 1 275 1 323 2 276 1 144 3 119 3 96 1 147 3 41 1 42 1 
242 1 124 1 78 1 128 2 330 2 331 1 222 2 200 4 285 2 225 4 57 2 207 2 365 1 341 3 290 1 289 1 113 1 209 4 369 1 233 3 271 4 373 1 275 2 323 4 144 5 119 7 147 4 41 1 42 1 
25 1 28 1 300 1 
28 1 135 1 
253 1 
75 1 28 1 
317 1 75 1 159 1 79 1 28 3 300 2 
317 1 75 1 28 1 
28 1 338 1 
226 7 328 1 248 1 128 1 31 4 368 1 65 1 262 1 258 2 37 1 55 3 86 1 354 2 219 3 29 1 207 1 98 1 
226 7 328 1 248 1 128 1 31 4 368 1 65 1 262 1 258 2 37 1 55 3 86 1 354 2 219 3 29 1 207 1 98 1 
226 7 328 1 248 1 128 1 31 4 368 1 65 1 262 1 131 1 258 2 37 1 55 3 86 1 354 2 219 3 29 1 207 1 98 1 
100 1 328 2 18 1 248 1 128 4 176 1 330 3 262 1 157 1 222 3 181 1 201 1 285 3 55 10 86 1 29 1 207 4 288 1 226 31 112 1 62 4 31 16 368 2 90 1 65 2 258 3 189 1 37 2 94 2 299 1 354 5 219 15 173 3 98 5 
100 1 328 1 18 2 248 1 128 1 262 1 198 1 55 4 86 1 207 1 226 9 31 5 90 2 368 1 65 1 116 1 258 2 189 2 37 1 94 4 299 2 354 3 219 4 98 1 
122 1 74 1 1 1 302 1 44 1 247 1 152 2 102 1 196 1 357 1 199 1 103 1 105 1 6 1 337 1 165 1 166 1 286 1 206 1 345 1 346 1 30 1 232 2 92 1 324 1 35 1 294 1 118 1 97 2 16 1 
122 1 74 1 302 1 1 1 44 1 247 1 152 3 102 1 196 1 45 1 357 1 199 1 103 1 160 1 105 1 6 1 337 1 165 2 166 1 134 1 206 1 345 1 346 1 232 2 92 1 324 1 35 1 294 1 97 3 16 1 
122 1 74 1 1 1 302 1 44 1 247 1 152 2 102 1 196 1 357 1 103 1 199 1 160 1 6 1 165 2 166 1 134 1 206 1 346 1 232 2 92 1 324 1 294 1 97 2 16 1 
208 1 122 2 74 1 75 1 19 1 43 1 44 1 152 1 46 1 45 1 260 1 357 2 82 1 92 2 35 1 324 1 294 1 337 1 97 1 68 1 166 2 28 1 16 1 
122 1 74 1 1 1 302 1 44 1 247 1 152 1 102 1 357 1 199 1 103 1 105 1 337 1 166 1 134 1 345 1 346 1 30 1 232 2 92 1 324 1 35 1 294 1 118 1 97 1 16 1 
73 1 
245 1 44 2 2 1 46 1 3 3 156 2 331 1 251 1 162 1 203 1 204 2 205 1 341 2 113 1 209 5 343 1 257 1 292 1 64 1 294 1 352 2 13 2 119 2 297 1 16 1 74 2 75 1 76 1 124 1 19 2 303 1 260 1 223 1 268 6 28 1 88 2 184 1 320 2 136 1 367 1 137 1 369 1 271 2 372 1 373 1 274 1 323 2 324 2 145 2 144 2 190 1 191 1 278 4 147 5 149 1 
76 1 245 1 209 3 303 1 343 1 2 1 257 1 367 1 3 1 372 1 274 1 223 1 251 1 352 1 146 1 278 2 297 1 268 2 147 3 203 1 205 1 149 1 
76 1 303 1 245 1 2 1 3 1 223 1 251 1 268 1 203 1 205 1 343 1 209 3 257 1 367 1 369 1 372 1 274 1 323 1 146 1 278 3 297 1 13 1 147 3 149 1 
76 1 245 1 209 3 303 1 343 1 2 1 257 1 367 1 3 1 369 1 372 1 274 1 223 1 323 1 251 1 352 1 146 1 278 3 13 1 297 1 268 2 147 3 203 1 204 1 205 1 149 1 
245 1 2 1 3 3 283 1 331 1 156 2 251 1 203 1 204 4 205 1 341 2 113 1 343 1 209 5 257 1 63 1 115 1 214 1 352 4 297 1 13 4 76 1 303 1 223 1 268 7 88 2 184 1 320 2 136 1 367 1 369 5 271 1 372 1 274 1 373 1 323 5 277 1 144 1 145 2 146 1 190 1 278 6 147 5 149 1 
245 1 2 1 3 2 331 1 156 2 251 1 203 1 204 2 205 1 341 2 113 1 343 1 209 4 257 1 64 1 352 2 297 1 119 2 13 2 76 1 303 1 223 1 268 4 88 2 184 1 320 2 136 1 367 1 369 1 271 1 372 1 373 1 274 1 323 2 144 1 145 2 190 1 278 4 147 4 149 1 
76 1 303 1 245 1 2 1 3 2 156 2 331 1 223 1 251 1 268 4 203 1 204 2 205 1 341 2 88 2 184 1 113 1 320 2 343 1 209 4 136 1 257 1 367 1 63 1 369 1 271 1 372 1 274 1 373 1 323 1 214 1 352 2 145 2 144 1 277 1 190 1 278 4 13 2 297 1 147 4 149 1 
76 1 303 1 245 1 2 1 3 2 156 2 331 1 223 1 251 1 268 4 203 1 204 2 205 1 341 2 88 2 184 1 113 1 320 2 343 1 209 4 136 1 257 1 367 1 63 1 369 1 271 1 372 1 274 1 373 1 323 1 214 1 352 2 145 2 144 1 277 1 190 1 278 4 13 2 297 1 147 4 149 1 
76 1 303 1 245 1 2 1 3 2 156 2 331 1 179 2 223 1 251 1 24 2 268 4 203 1 204 2 313 1 205 1 339 1 184 1 113 1 343 1 209 4 136 1 257 1 367 1 369 1 271 1 372 1 274 1 373 1 323 1 214 1 352 2 145 2 144 1 117 1 278 4 13 2 119 2 297 1 147 4 149 1 
76 1 303 1 245 1 2 1 3 2 283 1 156 2 331 1 223 1 251 1 268 5 203 1 204 3 205 1 341 2 88 2 113 1 184 1 320 2 343 1 209 4 136 1 257 1 367 1 63 1 369 1 271 1 372 1 373 1 274 1 323 1 214 1 145 2 144 1 277 1 352 3 190 1 278 5 297 1 13 3 147 4 149 1 
76 1 303 1 245 1 2 1 3 2 283 1 156 2 331 1 223 1 251 1 268 5 203 1 204 3 205 1 341 2 88 2 113 1 184 1 320 2 343 1 209 4 136 1 257 1 367 1 63 1 369 1 271 1 372 1 373 1 274 1 323 1 214 1 145 2 144 1 277 1 352 3 190 1 278 5 297 1 13 3 147 4 149 1 
245 1 2 1 3 2 331 1 156 2 251 1 203 1 204 2 205 1 113 1 343 1 209 4 257 1 64 1 352 2 297 1 119 2 13 2 76 1 303 1 179 2 223 1 24 2 268 4 313 1 184 1 136 1 367 1 369 1 271 1 372 1 373 1 274 1 323 1 144 1 145 2 278 4 147 4 149 1 
226 6 18 1 248 1 128 1 31 3 33 1 90 1 368 1 65 1 262 1 258 1 132 1 50 1 189 1 94 2 55 2 54 1 67 1 86 1 299 1 25 1 354 2 314 2 219 3 218 1 207 1 
327 1 18 2 20 1 128 1 330 2 157 1 222 2 181 1 132 11 50 11 285 1 55 2 314 1 207 2 226 14 62 3 211 1 31 8 33 4 90 2 272 1 141 1 189 2 94 4 237 1 67 1 299 2 354 1 219 6 218 2 240 1 98 1 173 3 
74 1 75 1 18 1 19 1 303 1 246 1 44 1 2 2 104 1 362 1 8 1 56 1 314 1 28 1 226 2 317 1 343 2 211 1 31 1 33 1 169 1 32 1 90 1 170 1 272 1 324 1 294 1 189 1 94 2 39 1 67 1 96 1 299 1 69 1 218 1 219 1 240 1 16 1 
244 2 44 3 2 3 101 2 248 1 330 2 104 1 50 7 161 2 285 2 55 8 8 2 207 3 61 1 343 3 211 1 169 1 65 1 258 1 294 2 259 2 67 3 299 3 354 4 219 10 218 3 16 2 74 3 18 3 75 2 19 1 303 1 128 3 262 1 180 1 222 2 132 7 362 2 86 1 134 1 314 2 28 2 226 20 317 2 31 10 32 1 33 7 368 1 90 3 272 1 140 2 324 3 189 3 94 6 39 2 96 1 40 1 240 1 98 4 
74 8 18 2 75 2 303 1 19 2 175 1 2 1 44 7 46 1 260 1 305 1 104 1 284 1 308 1 54 1 134 1 58 1 286 1 28 3 107 2 226 2 343 1 186 1 31 1 169 1 90 2 272 1 324 8 294 2 189 2 94 4 96 1 67 2 299 2 218 2 219 1 240 1 241 1 16 2 
99 1 18 1 303 1 2 1 128 1 330 1 222 1 132 1 104 1 50 1 285 1 55 1 336 1 207 1 226 3 343 1 211 1 31 1 33 1 90 1 11 1 189 1 94 2 96 1 67 1 299 1 354 1 218 1 219 2 
226 2 18 1 31 2 33 1 90 1 222 1 132 1 50 1 189 1 94 2 236 1 55 1 54 1 67 1 299 1 218 1 98 1 207 1 
226 2 18 1 128 1 33 1 90 1 263 1 132 1 50 1 189 1 94 2 285 1 55 1 54 1 67 1 299 1 354 1 218 1 219 2 
18 1 128 1 330 1 222 1 132 2 50 2 285 1 54 1 55 2 207 1 226 4 31 2 33 2 90 1 189 1 94 2 67 1 299 1 354 1 218 1 219 2 98 1 
226 2 18 1 31 2 33 1 90 1 222 1 132 1 284 1 50 1 189 1 94 2 236 1 55 1 67 1 299 1 218 1 98 1 207 1 
226 2 18 1 128 1 33 1 90 1 263 1 132 1 284 1 50 1 189 1 94 2 285 1 55 1 67 1 299 1 354 1 218 1 219 2 
18 1 128 1 330 1 222 1 284 1 132 2 50 2 285 1 55 2 207 1 226 4 31 2 33 2 90 1 189 1 94 2 67 1 299 1 354 1 218 1 219 2 98 1 
18 1 128 1 330 1 222 1 132 2 50 2 285 1 55 2 207 1 226 4 31 2 33 2 90 1 189 1 94 2 67 1 299 1 354 1 218 1 219 2 98 1 
74 1 75 1 18 1 19 1 44 1 2 1 362 1 161 1 8 1 314 1 28 1 226 2 317 1 343 1 31 1 90 1 272 1 324 1 294 1 189 1 94 2 39 1 67 1 299 1 218 1 219 1 240 1 16 1 
74 1 75 1 18 1 19 1 44 1 2 1 8 1 314 1 28 1 226 2 317 1 10 1 343 1 31 1 90 1 272 1 324 1 294 1 189 1 94 2 326 1 67 1 299 1 14 1 218 1 219 1 240 1 16 1 
18 1 128 1 330 1 222 1 132 2 50 2 285 1 55 2 207 1 226 4 31 2 211 1 33 2 90 1 189 1 94 2 67 1 299 1 354 1 218 1 219 2 98 1 
74 1 75 1 18 1 101 1 44 1 2 1 128 1 330 1 222 1 132 2 362 1 50 2 161 1 285 1 55 2 8 1 286 1 28 1 207 1 226 4 317 1 343 1 31 2 33 2 90 1 324 1 294 1 189 1 94 2 39 1 67 1 299 1 354 1 219 2 218 1 98 1 16 1 
18 1 303 1 2 1 128 1 330 1 359 1 222 1 104 1 132 1 50 1 285 1 55 1 336 1 207 1 226 3 343 1 211 1 31 2 33 1 90 1 11 1 189 1 94 2 96 1 67 1 299 1 219 1 218 1 98 1 
18 2 77 1 128 3 330 3 21 1 157 1 222 3 181 1 51 2 52 1 285 3 55 6 207 3 366 2 226 19 110 1 344 1 210 1 62 2 31 9 90 2 116 1 235 1 189 2 94 4 299 2 354 3 219 10 173 1 98 3 
100 2 150 1 18 3 77 1 128 2 330 3 21 1 222 3 181 2 51 1 285 2 55 4 207 3 366 4 226 26 227 1 319 1 167 1 344 2 210 2 31 14 62 2 90 3 116 1 213 1 235 1 189 3 94 6 299 3 354 2 120 1 219 12 98 2 173 2 
100 1 150 1 248 1 330 4 157 1 332 1 51 1 285 4 55 8 207 5 110 1 167 1 344 1 210 2 62 4 65 1 116 1 258 1 213 1 299 3 354 4 120 1 219 21 173 3 18 3 77 1 128 5 21 1 262 1 222 4 181 3 86 1 226 41 366 4 227 1 319 1 31 20 90 3 368 1 235 1 189 3 94 6 98 4 
100 2 150 1 18 4 77 1 248 1 128 4 330 4 21 1 262 1 157 1 222 4 181 3 332 1 51 1 285 3 55 7 86 1 207 5 366 4 226 38 227 1 110 1 319 1 167 1 344 1 210 2 62 4 31 20 368 1 90 4 65 1 258 1 116 1 213 1 235 1 189 4 94 8 299 4 120 1 354 4 219 18 173 3 98 3 
100 1 150 1 18 2 77 1 248 1 128 8 330 7 21 1 262 1 157 2 222 7 181 2 51 1 285 7 55 14 86 1 207 8 366 4 226 52 227 1 319 1 167 1 344 1 210 1 62 4 31 27 368 1 90 2 65 1 258 1 116 1 213 1 235 1 141 2 189 2 94 4 299 2 120 1 354 7 219 25 173 4 98 7 
340 1 49 1 111 1 264 1 334 1 296 1 163 1 231 1 239 1 188 1 
358 1 238 1 
350 1 49 1 351 1 111 1 334 1 296 1 231 1 188 1 315 1 
340 1 111 1 123 2 209 1 194 1 185 1 47 1 231 1 197 1 234 1 188 1 323 1 49 1 264 1 334 1 296 1 147 1 239 1 
340 1 111 1 123 2 209 1 194 1 185 1 47 1 231 1 197 1 234 1 188 1 323 1 49 1 264 1 334 1 296 1 147 1 239 1 
340 1 111 1 123 2 209 1 194 1 185 1 47 1 231 1 197 1 234 1 188 1 323 1 49 1 264 1 334 1 296 1 147 1 239 1 
171 1 193 1 347 1 
171 1 193 1 347 1 
126 1 220 1 
171 1 126 1 220 1 
127 1 15 1 
123 1 194 1 303 2 2 2 127 1 358 1 197 1 49 1 104 2 334 1 314 1 269 1 60 1 111 1 343 2 209 1 229 1 321 1 231 1 233 1 188 1 275 1 296 1 147 1 96 2 238 1 15 1 
193 1 347 1 
171 1 126 1 220 1 
74 2 75 1 18 1 303 2 2 2 44 2 360 1 308 1 7 1 28 1 58 1 107 2 226 2 343 2 211 1 31 1 90 1 272 1 324 2 294 1 36 1 189 1 353 1 216 1 94 2 67 1 299 1 218 1 219 1 240 1 16 1 
122 1 74 2 302 1 1 1 44 2 247 1 102 1 346 1 304 1 232 2 91 1 199 1 324 2 294 1 105 1 134 1 286 1 59 1 16 1 
122 1 74 1 302 1 1 1 44 1 247 1 102 1 346 1 232 2 91 1 199 1 324 1 294 1 105 1 134 1 355 1 16 1 
122 1 208 1 74 1 75 1 19 1 44 1 46 1 260 1 322 1 324 1 294 1 28 1 59 1 16 1 
122 1 74 1 302 1 1 1 44 1 247 1 102 1 346 1 304 1 232 2 91 1 199 1 324 1 294 1 105 1 134 1 59 1 16 1 
23 1 
323 1 144 1 25 1 369 1 271 1 109 1 356 1 
88 1 341 1 184 1 113 1 209 1 320 1 3 1 369 1 331 1 271 1 373 1 323 2 144 1 190 1 119 1 147 1 268 1 
74 1 317 1 75 1 184 1 113 1 19 1 44 1 79 1 331 1 373 1 324 1 294 1 143 1 28 2 255 1 135 1 16 2 
150 1 124 1 282 1 128 2 3 1 249 1 330 2 331 2 222 2 181 1 200 5 285 2 268 1 312 2 225 5 207 2 341 3 227 1 113 2 184 2 209 1 167 1 62 1 369 2 271 5 373 2 213 1 323 5 144 8 191 1 119 6 147 1 120 1 172 1 173 1 
17 1 245 1 303 1 2 1 128 1 154 1 331 1 262 1 104 1 336 1 312 2 27 1 207 2 316 1 113 1 184 1 343 1 209 1 368 1 65 1 271 2 373 1 276 1 277 1 144 2 147 1 96 1 172 1 
184 1 113 1 331 1 369 1 271 1 373 1 323 1 144 1 356 1 109 1 
341 5 128 2 330 2 271 5 222 2 323 5 200 5 144 5 259 1 285 2 119 10 172 1 312 2 225 5 207 2 
323 1 209 1 147 1 268 1 3 1 369 1 
74 4 75 1 151 1 19 2 124 2 44 4 46 1 260 1 3 2 331 2 162 1 252 1 266 1 268 4 28 1 113 2 184 1 209 3 292 1 271 2 373 2 324 4 294 1 144 2 191 2 377 2 147 3 41 1 16 1 
74 1 75 1 18 1 19 1 303 2 44 1 2 3 154 1 104 2 362 1 161 1 335 1 336 2 8 1 314 1 28 1 226 1 317 1 343 3 90 1 324 1 294 1 189 1 94 2 39 1 96 2 67 1 299 1 219 1 218 1 240 1 16 1 
341 2 184 1 113 1 124 1 331 1 369 2 271 2 258 1 373 1 323 4 200 2 144 1 191 1 119 4 225 2 
49 1 148 1 231 1 
49 1 148 1 231 1 
340 1 49 1 231 1 15 1 182 1 
49 1 148 1 231 1 
49 1 231 1 212 1 
49 1 231 1 212 1 
49 1 231 1 212 1 
49 1 231 1 
111 1 334 1 
226 8 100 1 18 2 248 1 128 1 31 4 90 2 368 1 65 1 262 1 258 1 189 2 94 4 55 3 86 1 299 2 354 2 219 4 207 1 98 1 
226 6 248 1 128 1 31 3 368 1 65 1 262 1 258 1 55 2 86 1 25 1 354 2 219 3 207 1 
226 4 18 1 128 1 31 2 330 1 90 1 222 1 189 1 94 2 285 1 12 1 55 2 299 1 354 1 219 2 207 1 98 1 
226 7 128 1 62 2 31 3 330 1 157 1 222 1 181 1 285 1 55 2 354 1 219 4 173 1 207 1 98 1 
100 2 18 2 248 1 128 3 330 2 262 1 222 2 157 1 285 2 55 9 86 1 207 3 226 23 31 11 62 2 138 1 368 2 90 2 65 2 258 1 141 1 189 2 94 4 237 1 299 2 354 5 219 12 98 4 173 2 
226 1 62 1 219 1 
226 1 31 1 173 1 
226 6 18 1 128 1 31 3 330 1 90 1 222 1 189 1 259 1 94 2 12 1 285 1 55 3 299 1 354 2 219 3 207 1 98 1 
150 1 18 1 128 2 330 2 222 2 181 1 285 2 55 2 207 2 226 12 227 1 167 1 62 1 31 6 90 1 116 1 213 1 189 1 94 2 299 1 120 1 354 1 219 6 98 1 173 1 
226 6 128 1 31 3 368 1 65 1 262 1 55 2 354 1 219 3 207 1 98 1 
226 3 100 1 18 1 248 1 31 1 138 1 368 1 90 1 65 1 189 1 94 2 55 2 86 1 299 1 354 1 219 2 98 1 
226 10 17 1 18 1 128 2 31 5 90 1 368 2 65 2 262 1 116 1 189 1 94 2 55 5 299 1 354 3 219 5 98 2 207 2 
226 2 18 1 31 2 90 1 116 1 222 1 189 1 94 2 55 1 299 1 207 1 98 1 
226 4 18 1 128 1 31 2 330 1 90 1 116 1 222 1 189 1 94 2 285 1 55 2 299 1 354 1 219 2 207 1 98 1 
100 1 226 3 110 1 18 3 31 1 138 1 90 3 368 1 65 1 116 1 189 3 94 6 55 2 299 3 354 1 219 2 98 1 
100 2 18 5 248 1 176 1 128 5 330 3 262 2 157 1 222 3 181 1 201 1 285 3 55 12 86 1 207 5 288 1 226 34 110 1 62 4 31 16 138 1 368 3 90 5 65 3 258 1 116 1 189 5 94 10 12 1 299 5 354 7 219 18 173 3 98 5 
150 1 18 1 248 1 128 1 262 1 181 1 55 2 86 1 207 1 226 8 62 1 31 4 90 1 368 1 65 1 258 1 116 1 189 1 94 2 299 1 354 2 219 4 173 1 
150 1 18 2 248 1 128 1 330 1 262 1 157 1 222 1 181 1 55 3 86 1 207 2 226 11 62 2 31 6 368 1 90 2 65 1 258 1 116 1 189 2 94 4 12 1 299 2 354 2 219 5 173 1 98 1 
100 1 150 1 18 3 248 1 128 3 330 2 262 1 222 2 181 1 285 2 55 4 86 1 207 3 226 19 227 1 167 1 62 1 31 9 368 1 90 3 65 1 258 1 116 1 213 1 189 3 94 6 12 1 299 3 120 1 354 3 219 10 98 1 173 1 
100 1 150 1 18 3 248 1 128 2 330 2 262 1 222 2 181 1 285 1 55 5 86 1 207 3 226 17 227 1 167 1 62 1 31 10 368 1 90 3 65 1 258 1 116 1 213 1 189 3 94 6 12 1 299 3 120 1 354 3 219 7 98 2 173 1 
150 1 18 1 248 1 128 1 262 1 181 1 55 2 86 1 207 1 226 8 62 1 31 4 90 1 368 1 65 1 258 1 116 1 189 1 94 2 299 1 354 2 219 4 173 1 
150 1 18 1 128 2 330 2 222 2 181 1 285 2 55 2 207 2 226 12 227 1 167 1 62 1 31 6 90 1 116 1 213 1 189 1 94 2 299 1 120 1 354 1 219 6 98 1 173 1 
100 2 150 1 18 4 248 1 128 2 330 2 262 1 222 2 181 1 285 1 55 5 86 1 207 3 226 18 227 1 167 1 62 1 31 10 368 1 90 4 65 1 258 1 116 1 213 1 189 4 94 8 12 1 299 4 120 1 354 3 219 8 98 2 173 1 
100 2 150 1 18 4 128 2 330 3 222 3 181 1 285 2 55 6 207 3 226 16 227 1 110 1 167 1 62 1 31 9 90 4 116 1 213 1 189 4 94 8 299 4 120 1 354 3 219 7 98 3 173 1 
226 7 248 1 128 1 31 3 368 3 65 3 262 1 55 6 86 2 354 3 219 4 98 3 207 1 
100 2 150 1 18 4 248 1 128 2 330 2 262 1 222 2 181 1 285 1 55 4 86 1 207 3 226 18 227 1 110 1 167 1 62 1 31 10 368 1 90 4 65 1 258 1 116 1 213 1 189 4 94 8 299 4 120 1 354 3 219 8 98 1 173 1 
343 1 303 1 2 1 297 1 329 1 314 1 371 1 
303 1 343 1 2 1 329 1 371 1 22 1 374 1 142 1 202 1 297 1 254 1 314 1 
324 1 74 1 294 1 75 1 19 1 44 1 46 1 260 1 25 1 28 1 16 1 
74 1 317 1 75 1 303 1 343 2 19 1 2 2 44 1 169 1 104 1 324 1 294 1 39 1 96 1 8 1 314 1 28 1 16 1 
74 1 75 2 303 2 245 1 44 1 2 2 104 2 251 1 307 1 203 1 8 1 314 1 28 3 338 1 317 2 343 2 169 1 324 1 294 1 39 1 377 1 96 1 16 1 
74 2 75 2 303 2 245 1 44 2 2 2 104 2 251 1 307 1 203 1 8 1 314 1 28 3 338 1 317 2 343 2 169 1 273 1 324 2 294 1 326 1 377 1 96 1 16 1 
183 1 74 3 317 1 75 1 19 1 209 2 44 3 281 1 369 1 273 1 223 1 323 1 324 3 307 1 294 1 377 1 147 2 268 1 28 4 338 1 300 1 135 1 16 1 
74 3 317 1 75 1 19 1 209 2 44 3 369 1 273 1 223 1 323 1 324 3 307 1 294 1 377 1 147 2 268 1 28 4 338 1 287 1 300 1 135 1 16 1 
324 1 74 1 294 1 44 1 186 1 16 1 
0 1 74 7 317 1 75 2 280 1 19 2 175 1 44 6 186 1 79 1 305 1 324 7 294 2 267 1 134 1 107 1 58 1 286 1 28 3 241 1 16 3 
101 1 44 1 2 2 248 1 104 1 50 1 161 1 55 2 8 1 286 1 207 1 343 2 211 1 169 1 65 1 258 1 294 1 216 1 67 2 299 2 354 2 218 2 219 3 16 1 74 1 18 2 75 1 303 1 128 1 262 1 132 1 362 1 86 1 28 1 314 2 226 6 317 1 31 3 33 1 90 2 368 1 140 1 324 1 189 2 94 4 39 1 96 1 
74 1 19 1 151 1 44 1 3 1 331 2 178 1 223 1 268 2 28 2 287 1 135 1 109 1 113 2 184 2 209 3 187 1 369 1 233 1 271 1 373 2 323 1 324 1 325 1 144 1 147 3 300 1 356 1 
74 2 317 1 75 1 44 2 186 1 79 1 324 2 294 1 286 1 255 1 28 2 300 1 16 2 
324 4 74 4 294 1 75 1 19 1 44 4 46 1 260 1 310 1 28 1 286 1 273 1 16 1 
74 2 317 1 75 1 280 1 44 2 221 1 370 1 324 2 294 1 267 1 377 1 40 1 28 1 16 2 
324 1 74 1 294 1 1 1 19 1 247 1 44 1 346 1 232 1 16 1 
74 2 75 1 44 2 324 2 294 1 353 1 134 1 286 1 58 1 28 1 16 1 
74 5 75 2 19 1 44 4 46 1 260 1 305 1 324 5 294 2 377 1 310 1 286 1 58 1 28 3 16 2 241 1 
74 5 342 1 75 2 19 1 44 4 46 1 260 1 324 5 294 2 377 1 310 1 286 1 58 1 28 3 16 2 241 1 
74 1 317 1 75 1 303 1 343 2 19 1 2 2 44 1 169 1 104 1 324 1 294 1 326 1 96 1 8 1 314 1 28 1 16 1 
0 1 74 1 317 1 75 1 280 1 44 1 79 1 324 1 294 1 267 1 377 1 28 1 16 2 
174 1 106 1 70 1 314 1 108 1 
174 2 245 1 209 2 228 1 369 1 233 1 81 1 223 1 323 1 251 1 333 1 106 2 147 2 203 1 70 2 205 1 314 1 108 1 72 1 
36 1 174 1 343 1 303 1 2 1 106 1 7 1 360 1 108 1 
228 1 72 1 108 1 
6 1 196 1 25 1 206 1 
35 1 6 1 152 1 196 1 97 1 337 1 206 1 
357 1 97 1 92 1 
35 1 6 1 152 3 118 1 196 1 224 2 230 1 97 3 337 1 4 1 363 1 206 1 
35 1 6 1 152 2 196 1 97 2 337 1 165 1 80 1 206 1 
349 1 35 1 152 1 118 1 346 1 97 1 337 1 311 1 232 1 206 1 199 1 
35 1 6 1 152 1 118 1 97 1 337 1 206 1 
35 1 6 2 152 1 118 1 196 1 97 1 337 1 
195 1 152 2 130 1 35 2 84 1 6 1 118 1 337 2 97 2 206 1 
152 3 196 1 129 1 35 1 349 1 6 1 118 1 53 1 38 1 337 1 97 3 165 2 206 2 
1 1 302 1 152 2 196 1 346 1 168 1 232 2 199 1 35 1 6 1 118 1 337 1 97 2 165 1 206 1 
152 4 196 1 80 1 250 1 35 2 349 1 6 1 118 1 38 1 337 2 97 4 165 2 206 2 
35 1 6 1 152 1 118 1 196 1 97 1 337 1 206 1 
152 4 196 2 153 1 230 1 35 1 349 1 6 2 38 1 224 1 97 4 337 1 165 2 363 1 206 3 
301 1 152 2 196 1 48 1 35 1 93 1 6 1 118 1 337 1 97 2 165 1 206 1 
279 1 152 3 196 1 230 1 35 1 118 1 6 1 224 2 337 1 97 3 363 2 206 1 
265 2 125 1 206 2 270 1 
35 1 152 1 118 1 97 1 337 1 261 1 
35 1 6 1 53 1 152 2 118 1 196 1 97 2 337 1 165 1 206 1 
306 1 
35 1 6 1 152 1 118 1 196 1 97 1 337 1 206 1 
35 1 53 1 6 1 152 3 118 1 196 1 224 1 97 3 337 1 165 1 206 1 
349 1 38 1 153 1 206 1 
6 1 206 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (73,133,293) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (73,133,293) 265 331 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (73,133,293) 265 256 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (73,133,293) (73,133,293) 236 343 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 255 305 (76,199) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 255 305 (39,157) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (73,133,293) 265 164 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 2 57 1 18 1 20 9 59 2 84 1 335 1 257 2 38 6 110 5 140 9 353 2 310 1 169 2 222 2 70 1 148 2 149 4 11 1 296 1 177 1 123 1 201 1 249 1 32 1 360 1 184 3 101 1 
103 2 57 1 18 1 20 9 59 2 84 1 335 1 257 2 38 6 110 5 140 9 353 2 310 1 169 2 222 2 70 1 149 4 148 2 11 1 296 1 177 1 123 1 201 1 249 1 32 1 360 1 184 3 101 1 
103 2 57 1 18 1 20 10 59 2 84 1 335 1 257 2 38 7 110 6 140 10 353 2 310 1 169 2 222 2 70 1 149 5 148 2 11 1 296 1 177 1 123 1 201 1 249 1 32 1 360 1 184 4 101 1 
103 2 57 1 18 1 20 7 59 2 84 1 335 1 257 2 38 4 110 4 140 7 353 2 310 1 169 2 222 2 70 1 149 3 148 1 11 1 296 1 177 1 123 1 201 1 249 1 360 1 184 2 101 1 
222 1 103 1 59 1 20 4 148 2 149 2 335 1 296 1 257 1 177 1 38 3 201 1 249 1 110 3 140 4 184 1 32 1 169 1 
103 1 92 1 59 1 20 2 296 1 257 1 177 1 110 1 249 1 140 2 328 1 309 1 353 1 310 1 169 1 101 1 
59 2 20 3 149 1 11 1 296 1 257 2 177 1 38 1 249 1 110 2 140 3 184 1 353 1 
103 1 20 9 59 2 84 1 335 1 257 2 38 7 110 5 140 9 353 1 169 1 222 1 70 1 149 4 148 2 11 1 296 1 177 1 201 1 249 1 184 3 182 1 32 1 156 1 
103 1 20 9 59 2 84 1 335 1 257 2 38 7 110 5 140 9 353 1 169 1 222 1 70 1 149 4 148 2 11 1 296 1 177 1 201 1 249 1 184 3 182 1 32 1 156 1 
288 1 154 1 234 1 
288 1 0 2 19 1 
165 2 216 2 178 2 261 2 291 2 160 1 115 1 190 2 
36 2 37 1 160 1 188 1 302 2 60 1 190 2 23 1 305 1 163 1 63 2 215 1 165 3 216 2 217 1 261 2 219 1 167 1 68 1 115 1 118 1 287 2 291 2 355 1 71 1 93 1 175 1 196 1 198 1 227 1 321 1 199 1 124 1 250 2 97 1 178 3 54 1 
165 1 216 1 178 1 261 1 243 1 291 1 137 1 115 1 221 1 190 1 
165 1 133 1 323 1 178 1 243 1 291 1 48 1 311 1 73 1 
165 1 216 1 323 1 178 1 261 1 243 1 291 1 311 1 73 1 190 1 
293 1 282 1 304 1 276 1 349 1 
288 1 234 1 293 2 191 1 282 1 304 2 276 1 266 1 
293 1 282 1 304 1 
291 1 293 1 137 1 304 1 190 1 216 1 165 1 125 1 178 1 261 1 243 1 115 1 276 1 221 1 
288 1 
288 1 234 1 64 1 293 2 282 1 304 2 276 1 266 1 
288 1 314 1 234 1 102 1 224 1 172 1 173 2 292 2 333 1 293 5 105 2 282 2 304 5 218 1 263 1 276 2 266 1 269 1 340 1 
154 1 160 1 
291 2 160 2 190 1 165 2 216 1 178 2 261 1 359 1 268 1 
189 1 46 1 132 1 
210 1 93 1 160 1 302 1 305 1 199 1 124 1 165 1 250 1 217 1 178 1 167 1 219 1 68 1 118 1 287 1 
291 1 93 1 302 1 305 1 199 1 124 1 216 1 165 2 250 1 217 1 178 2 261 1 219 1 66 1 167 1 98 1 68 1 132 1 118 1 287 1 
226 1 291 5 48 1 160 1 190 1 216 4 165 5 30 1 178 5 261 4 66 1 98 2 116 1 268 1 
165 2 216 2 178 2 261 2 243 1 291 2 6 1 221 1 
165 3 216 3 178 3 261 3 291 3 98 1 160 1 190 1 
165 1 216 1 178 1 261 1 243 1 291 1 221 1 
165 1 216 1 178 1 261 1 243 1 291 1 359 1 190 1 268 1 
291 2 73 1 190 1 216 2 165 2 323 1 178 2 261 2 243 1 66 1 98 1 311 1 265 1 331 1 268 1 
165 2 216 1 178 2 261 1 291 2 98 1 48 1 160 1 116 1 
291 1 73 1 256 1 216 1 165 1 323 1 178 1 261 1 243 1 66 1 98 1 311 1 265 1 
291 2 190 1 216 2 165 2 178 2 261 2 98 1 46 1 268 1 132 1 
93 1 160 1 302 1 305 1 199 1 124 1 165 1 250 1 217 1 178 1 167 1 219 1 68 1 287 1 118 1 
93 1 160 1 302 1 305 1 39 1 165 1 250 1 217 1 178 1 167 1 285 1 219 1 68 1 287 1 118 1 
208 1 36 2 189 2 303 1 60 1 163 1 63 4 215 2 90 1 354 1 312 1 46 2 69 1 355 1 175 1 196 1 198 2 227 1 94 1 346 1 31 1 183 1 55 1 132 2 
165 1 216 1 323 1 178 1 261 1 243 1 291 1 6 1 
337 1 145 1 
337 1 145 1 
141 1 100 1 
141 1 100 1 
141 1 100 1 
194 1 337 1 145 1 
194 1 337 1 145 1 
289 1 337 1 145 1 
141 1 159 1 337 2 295 1 100 1 145 2 
194 1 337 1 145 1 
89 1 337 1 145 1 
89 1 337 1 145 1 
89 1 337 1 145 1 
280 1 136 1 160 1 161 1 304 1 162 1 216 2 165 2 261 2 308 1 337 1 145 1 244 1 7 1 289 1 291 2 49 1 293 1 294 1 248 1 50 1 178 2 252 1 80 1 
288 1 119 1 280 3 136 2 49 2 293 2 22 1 295 1 161 2 319 1 304 2 248 2 4 1 274 1 337 2 297 2 5 1 252 1 145 2 
222 1 103 1 169 1 
103 1 92 1 169 1 
222 2 103 3 92 1 270 1 121 1 277 1 
222 1 103 2 209 1 92 1 121 1 277 1 
222 1 103 2 92 1 121 2 277 1 
234 1 0 3 19 1 186 2 333 2 238 1 105 1 303 1 282 1 304 5 259 2 111 1 45 1 354 1 266 1 7 1 288 2 69 1 290 1 314 3 224 1 342 1 292 1 173 1 293 5 50 1 94 1 357 1 358 1 52 2 276 4 80 1 
234 1 0 9 19 3 333 6 238 1 105 2 2 1 106 1 303 3 282 6 304 9 108 1 349 5 259 6 45 2 263 1 354 3 266 1 245 1 7 4 288 5 69 3 314 8 224 1 342 3 173 2 292 2 293 9 94 3 357 2 96 5 325 1 52 6 229 1 276 7 
234 1 0 4 19 2 186 1 333 2 105 1 303 1 304 3 259 2 111 1 45 1 263 1 354 1 7 1 288 3 69 1 290 1 314 3 292 1 173 1 342 1 293 3 94 1 357 1 52 2 276 2 
234 1 0 7 19 3 186 2 333 4 105 1 106 1 303 2 304 4 259 4 111 1 45 1 263 1 354 2 245 1 7 2 288 4 69 2 290 1 314 5 292 1 173 1 342 2 293 4 94 2 357 1 52 4 229 1 276 3 
154 1 253 1 118 1 
134 1 118 1 
138 1 
217 1 219 1 118 1 
193 1 118 1 
219 1 118 1 
253 2 217 1 233 1 219 1 144 1 118 3 
171 1 195 1 303 1 26 1 198 4 94 1 284 1 51 2 63 7 215 3 346 2 327 1 351 1 286 1 338 1 312 3 232 1 
171 1 195 1 303 1 26 1 198 4 94 1 284 1 51 2 63 7 215 3 346 2 327 1 351 1 286 1 338 1 312 3 232 1 
171 1 1 1 195 1 303 1 26 1 198 4 94 1 284 1 51 2 63 7 215 3 346 2 327 1 351 1 286 1 338 1 312 3 232 1 
35 1 36 2 303 4 60 1 306 1 284 2 163 1 63 31 215 15 242 4 351 1 286 2 338 2 354 3 312 10 47 3 69 3 171 1 342 3 195 5 355 1 175 1 356 1 26 1 198 16 94 4 51 3 346 5 327 1 180 1 129 1 131 1 16 1 232 2 
36 4 303 1 60 2 283 1 163 2 284 1 63 9 215 4 352 1 351 1 286 1 338 1 312 4 171 1 195 1 355 2 175 2 356 1 26 1 198 5 94 1 51 2 346 3 232 1 
103 2 20 2 59 1 302 1 257 1 38 1 110 1 258 1 140 2 220 1 353 1 143 1 68 1 169 1 287 1 222 1 92 1 93 1 270 1 247 1 296 1 177 1 273 1 249 1 250 1 128 1 33 1 130 1 185 1 158 1 
103 2 20 3 59 1 302 1 107 1 257 1 38 2 110 1 258 1 140 3 220 1 353 1 143 1 68 1 169 1 287 1 222 1 92 1 270 1 93 1 247 1 296 1 12 1 273 1 249 1 250 1 204 1 128 1 130 1 158 1 
103 2 20 2 302 1 38 2 110 1 258 1 140 2 353 1 220 1 68 1 169 1 287 1 222 1 92 1 93 1 270 1 247 1 296 1 12 1 273 1 249 1 250 1 204 1 128 1 158 1 
34 1 207 1 20 1 59 1 302 1 107 1 257 1 139 1 140 1 167 1 219 1 220 2 353 2 68 1 287 1 118 1 315 1 93 1 10 1 27 1 250 1 128 2 158 2 
222 1 103 2 92 1 270 1 93 1 59 1 20 1 302 1 247 1 12 1 257 1 177 1 273 1 258 1 250 1 140 1 353 1 128 1 220 1 130 1 143 1 68 1 185 1 169 1 287 1 158 1 
29 1 
133 1 34 1 236 1 333 1 105 1 302 2 239 1 282 2 304 2 109 1 350 1 165 1 243 1 167 2 219 1 45 1 264 1 311 1 68 1 266 1 118 1 287 2 314 1 315 1 224 1 291 1 292 1 173 1 48 1 93 1 293 2 73 1 343 1 250 2 323 1 178 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 2 48 1 73 1 282 1 343 1 304 2 109 1 165 1 323 1 178 1 64 1 243 1 311 1 266 1 
133 1 224 1 236 1 291 1 173 1 292 1 293 1 105 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 236 1 291 1 293 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
133 1 224 1 236 1 291 1 173 1 292 1 293 1 105 1 48 1 73 1 343 1 304 1 109 1 165 1 323 1 178 1 243 1 311 1 
208 1 36 2 160 2 189 1 303 1 60 1 284 1 163 1 63 6 215 3 351 1 312 2 46 1 171 1 355 1 175 1 196 1 26 1 227 1 198 3 94 1 51 1 154 1 346 2 132 1 232 1 
81 1 36 4 160 1 188 1 189 11 303 2 60 2 163 2 63 14 215 6 242 3 166 1 354 1 312 2 46 4 47 3 69 2 195 1 342 2 355 2 175 2 196 2 227 1 198 8 94 1 153 1 97 1 346 1 180 1 181 1 129 1 330 1 132 11 
36 2 210 1 160 1 188 1 302 1 305 1 60 1 163 1 63 2 41 1 165 2 216 1 215 1 217 1 166 1 261 1 114 1 219 1 167 1 66 1 68 1 46 1 118 1 287 1 291 1 355 1 93 1 175 1 196 1 227 1 198 1 271 1 199 1 124 1 250 1 97 1 178 2 98 1 
235 2 36 6 188 1 189 7 284 1 42 1 46 7 287 3 291 1 342 2 195 4 93 2 196 3 12 1 198 10 94 3 199 2 51 1 345 2 250 3 97 1 346 4 98 1 160 2 211 2 302 3 303 3 60 3 23 2 305 2 163 3 63 20 215 10 216 1 165 3 214 2 217 2 166 1 261 1 167 1 66 1 219 2 351 1 68 2 354 2 312 8 118 2 69 2 171 1 355 3 175 3 26 1 28 1 227 3 122 1 124 2 178 3 232 1 132 7 
34 1 104 1 208 1 36 4 188 1 302 8 60 2 163 2 63 2 165 1 216 1 215 1 65 1 261 1 43 1 167 2 219 2 68 2 118 3 287 7 315 1 291 1 355 2 71 2 93 2 175 2 196 2 12 1 227 2 198 1 272 1 250 8 97 1 178 1 228 1 98 1 155 1 33 1 298 1 
36 2 85 1 189 1 303 1 190 1 60 1 163 1 63 3 216 1 165 1 215 2 166 1 261 1 354 1 312 1 46 1 268 1 69 1 291 1 342 1 355 1 175 1 196 1 227 1 198 1 94 1 346 1 178 1 132 1 
69 1 208 1 195 1 36 2 355 1 175 1 189 1 196 1 303 1 227 1 198 2 60 1 163 1 63 2 183 1 312 1 46 1 132 1 
208 1 36 2 355 1 175 1 189 1 196 1 227 1 60 1 94 1 163 1 63 2 215 2 346 1 55 1 354 1 312 1 46 1 132 1 
208 1 36 2 189 2 303 1 60 1 163 1 63 4 215 2 354 1 312 2 46 2 69 1 342 1 195 1 355 1 175 1 196 1 198 2 227 1 94 1 346 1 132 2 
69 1 195 1 36 2 355 1 175 1 189 1 196 1 303 1 227 1 198 2 60 1 163 1 63 2 43 1 183 1 312 1 46 1 132 1 
36 2 355 1 175 1 189 1 196 1 227 1 60 1 94 1 163 1 63 2 215 2 346 1 43 1 55 1 354 1 312 1 46 1 132 1 
36 2 189 2 303 1 60 1 163 1 63 4 215 2 43 1 354 1 312 2 46 2 69 1 342 1 195 1 355 1 175 1 196 1 198 2 227 1 94 1 346 1 132 2 
69 1 195 1 36 2 342 1 355 1 175 1 189 2 196 1 303 1 227 1 198 2 60 1 94 1 163 1 63 4 215 2 346 1 354 1 312 2 46 2 132 2 
36 2 160 1 188 1 302 1 305 1 23 1 60 1 163 1 63 2 165 1 215 1 217 1 219 1 167 1 68 1 287 1 118 1 355 1 93 1 175 1 196 1 198 1 227 1 199 1 124 1 250 1 97 1 178 1 
36 2 160 1 188 1 302 1 305 1 60 1 39 1 163 1 63 2 165 1 215 1 217 1 219 1 285 1 167 1 68 1 287 1 118 1 355 1 93 1 175 1 196 1 198 1 227 1 250 1 97 1 178 1 79 1 
36 2 189 2 303 1 60 1 163 1 63 4 215 2 166 1 354 1 312 2 46 2 69 1 342 1 195 1 355 1 175 1 196 1 198 2 227 1 94 1 346 1 132 2 
36 2 211 1 189 2 302 1 303 1 305 1 23 1 60 1 163 1 63 4 215 2 165 1 217 1 219 1 68 1 354 1 312 2 46 2 287 1 118 1 69 1 195 1 342 1 355 1 93 1 175 1 196 1 198 2 227 1 94 1 199 1 124 1 250 1 346 1 178 1 33 1 132 2 
36 2 83 1 189 1 303 1 190 1 60 1 163 1 63 3 215 1 216 1 165 1 166 1 261 1 354 1 312 1 268 1 46 1 69 1 195 1 291 1 342 1 355 1 175 1 196 1 227 1 198 2 94 1 178 1 132 1 
279 1 36 4 347 2 303 3 60 2 61 1 163 2 63 19 242 2 215 10 352 1 142 1 67 1 354 3 312 6 117 1 47 1 69 3 342 3 195 3 174 1 355 2 175 2 198 9 94 3 346 3 126 2 180 1 129 1 329 1 
36 6 347 4 303 3 60 3 61 2 163 3 63 26 88 1 215 12 242 2 352 1 142 1 67 2 354 2 312 4 117 1 47 2 69 3 195 2 342 3 355 3 318 1 175 3 356 2 198 14 94 2 202 1 346 2 126 1 205 1 14 1 329 1 129 2 231 1 
36 6 21 1 347 4 303 5 60 3 61 1 284 1 163 3 63 41 88 1 242 4 215 21 351 1 352 1 142 1 67 2 354 4 312 8 117 1 47 3 69 4 171 1 342 4 195 4 174 1 355 3 318 1 175 3 356 1 26 1 198 20 94 5 51 1 202 1 346 4 126 1 180 1 205 1 14 1 129 3 329 1 231 1 232 1 
36 8 21 1 347 4 303 5 60 4 61 1 284 1 163 4 63 38 88 1 242 4 215 18 351 1 352 1 142 1 67 2 354 3 312 7 117 1 47 3 69 4 171 1 342 4 195 3 174 1 355 4 318 1 175 4 356 2 26 1 198 20 94 4 51 1 202 1 346 4 126 1 180 1 205 1 14 1 129 3 329 1 231 1 232 1 
36 4 347 4 303 8 60 2 61 1 284 1 163 2 63 52 88 1 242 4 215 25 351 1 352 1 142 1 67 1 354 7 312 14 117 1 47 4 69 7 171 1 342 7 195 7 355 2 318 1 175 2 356 1 26 1 198 27 94 8 51 1 202 1 346 7 126 1 180 2 205 1 14 1 129 2 329 1 330 2 231 1 232 1 
119 1 274 1 136 1 49 1 337 1 168 1 295 1 161 1 248 1 145 1 
289 1 308 1 
147 1 316 1 136 1 8 1 49 1 337 1 161 1 248 1 145 1 
194 1 58 1 
89 1 159 1 75 1 
288 1 119 1 280 2 136 1 293 1 49 1 295 1 161 1 319 1 304 1 248 1 4 1 274 1 337 1 297 1 5 1 252 1 145 1 
288 1 119 1 280 2 136 1 293 1 49 1 295 1 161 1 319 1 304 1 248 1 4 1 274 1 337 1 297 1 5 1 252 1 145 1 
288 1 119 1 280 2 136 1 293 1 49 1 295 1 161 1 319 1 304 1 248 1 4 1 274 1 337 1 297 1 5 1 252 1 145 1 
194 1 58 1 159 1 
194 1 58 1 159 1 
89 1 75 1 
89 1 159 1 75 1 
294 1 162 1 
280 1 136 1 160 1 87 1 161 1 304 1 162 1 165 2 216 2 308 1 261 2 337 1 145 1 244 1 7 1 289 1 291 2 293 1 49 1 294 1 319 1 248 1 50 1 178 2 297 1 276 1 80 1 
135 1 36 2 187 1 188 1 302 2 60 1 163 1 63 2 165 2 215 1 166 1 65 1 219 1 68 1 118 1 287 2 291 2 355 1 71 2 93 1 175 1 196 1 197 1 227 1 320 1 198 1 344 1 272 1 250 2 97 1 178 2 
222 1 103 2 92 1 270 1 93 1 281 1 302 2 12 1 273 1 250 2 258 1 262 1 220 1 33 1 130 1 68 1 169 1 267 1 287 2 
222 1 82 1 103 2 92 1 270 1 93 1 281 1 302 1 12 1 273 1 250 1 258 1 220 1 130 1 68 1 169 1 287 1 
315 1 34 1 332 1 93 1 10 1 302 1 250 1 219 1 167 1 220 1 68 1 267 1 118 1 287 1 
222 1 103 2 92 1 270 1 93 1 281 1 302 1 12 1 273 1 250 1 258 1 262 1 220 1 130 1 68 1 169 1 267 1 287 1 
300 1 
288 1 154 1 314 1 234 1 218 1 333 1 269 1 
234 1 0 1 19 1 333 1 105 1 282 1 304 1 24 1 266 1 288 2 314 1 224 1 292 1 173 1 293 1 13 1 203 1 
234 2 134 3 0 12 333 8 334 2 86 1 3 2 282 5 40 2 45 2 144 1 287 3 341 2 288 8 193 2 292 4 342 2 93 4 293 5 151 2 94 2 345 2 152 2 250 3 52 6 251 1 299 2 253 2 19 6 105 4 255 2 302 3 303 2 304 5 348 1 259 6 217 3 218 1 219 3 167 1 264 1 68 3 354 2 266 3 269 1 118 10 69 2 314 9 224 4 173 4 72 1 176 1 76 2 33 1 
234 2 0 6 19 3 333 5 105 2 282 1 303 2 304 1 240 1 88 1 40 2 259 5 242 1 45 1 264 1 354 2 266 1 47 1 288 5 69 2 314 8 224 2 292 2 173 2 342 2 293 1 94 2 152 1 202 1 52 5 179 1 205 1 14 1 129 1 231 1 
301 1 333 2 105 1 137 1 303 2 304 1 190 1 284 1 165 1 40 2 216 1 261 1 243 1 351 1 115 1 221 1 314 2 224 1 292 1 173 1 291 1 293 1 94 1 152 1 125 1 178 1 275 1 232 1 
288 1 234 1 314 1 224 1 173 1 292 1 333 1 105 1 218 1 269 1 
288 5 69 2 314 5 0 10 342 2 19 5 333 5 303 2 94 2 152 1 345 1 40 2 259 5 52 5 354 2 
288 1 234 1 293 1 282 1 304 1 266 1 
34 1 333 2 105 2 302 4 239 1 282 4 304 3 348 2 350 1 219 1 167 2 45 2 263 1 264 2 68 1 266 2 339 1 118 1 287 4 314 2 315 1 224 1 292 2 173 2 93 1 293 3 176 1 250 4 15 1 
36 2 160 1 188 1 302 1 60 1 190 2 23 1 305 1 163 1 63 1 215 1 165 3 216 2 217 1 261 2 167 1 219 1 68 1 115 1 287 1 118 1 291 2 355 1 93 1 175 1 196 1 227 1 199 1 124 1 250 1 178 3 54 1 
288 4 314 1 234 2 0 4 224 1 19 2 173 1 292 1 333 2 105 1 51 1 259 2 52 2 45 1 264 1 
225 1 49 1 248 1 
225 1 49 1 248 1 
274 1 317 1 49 1 294 1 248 1 
225 1 49 1 248 1 
49 1 248 1 74 1 
49 1 248 1 74 1 
49 1 248 1 74 1 
49 1 248 1 
337 1 145 1 
171 1 195 1 36 4 355 2 175 2 356 1 303 1 26 1 198 4 60 2 94 1 163 2 284 1 51 1 63 8 215 4 346 2 351 1 312 3 232 1 
171 1 26 1 303 1 198 3 94 1 284 1 51 1 63 6 215 3 154 1 346 2 351 1 312 2 232 1 
69 1 36 2 342 1 195 1 355 1 175 1 303 1 198 2 60 1 94 1 163 1 63 4 215 2 346 1 99 1 354 1 312 2 
69 1 342 1 195 1 303 1 198 3 94 1 63 7 242 2 215 4 346 1 180 1 129 1 354 1 312 2 47 1 
81 1 36 4 303 3 60 2 284 2 163 2 63 23 215 12 242 2 351 1 354 2 312 9 47 2 69 2 171 1 195 4 342 2 355 2 175 2 356 2 26 1 198 11 94 3 51 1 346 5 180 1 127 1 330 1 232 2 
63 1 215 1 242 1 
63 1 198 1 47 1 
69 1 36 2 342 1 195 1 355 1 175 1 303 1 198 3 60 1 94 1 163 1 345 1 63 6 215 3 346 2 99 1 354 1 312 3 
36 2 303 2 60 1 163 1 63 12 215 6 242 1 88 1 352 1 354 2 312 2 47 1 69 2 195 1 342 2 355 1 175 1 198 6 94 2 202 1 346 1 14 1 205 1 129 1 231 1 
195 1 303 1 198 3 94 1 284 1 63 6 215 3 346 1 351 1 312 2 232 1 
171 1 195 1 36 2 355 1 175 1 356 1 26 1 198 1 60 1 284 1 163 1 63 3 215 2 346 1 127 1 312 2 232 1 
301 1 36 2 195 2 355 1 175 1 303 2 198 5 60 1 94 2 163 1 284 2 63 10 215 5 346 3 352 1 351 1 312 5 232 2 
69 1 36 2 195 1 355 1 175 1 303 1 198 2 60 1 163 1 63 2 352 1 312 1 
69 1 36 2 342 1 195 1 355 1 175 1 303 1 198 2 60 1 94 1 163 1 63 4 215 2 346 1 352 1 354 1 312 2 
36 6 195 1 174 1 355 3 175 3 356 1 198 1 60 3 163 3 284 1 63 3 215 2 346 1 127 1 352 1 312 2 232 1 
36 10 303 5 306 1 60 5 284 3 163 5 63 34 215 18 242 4 351 2 352 1 354 3 312 12 47 3 69 3 171 1 342 3 195 5 174 1 355 5 175 5 356 2 26 1 198 16 94 5 51 1 346 7 127 1 180 1 129 1 99 1 131 1 16 1 232 3 
36 2 303 1 60 1 163 1 284 1 63 8 215 4 242 1 352 1 351 1 312 2 47 1 171 1 355 1 175 1 26 1 198 4 94 1 51 1 346 2 129 1 231 1 232 1 
36 4 303 2 60 2 284 1 163 2 63 11 215 5 242 2 351 1 352 1 312 3 47 1 69 1 171 1 342 1 195 1 355 2 175 2 26 1 198 6 94 1 51 1 346 2 180 1 129 1 99 1 231 1 232 1 
36 6 303 3 60 3 284 1 163 3 63 19 215 10 242 1 88 1 351 1 352 1 354 2 312 4 47 1 69 2 171 1 195 1 342 2 355 3 175 3 356 1 26 1 198 9 94 3 51 1 202 1 346 3 205 1 14 1 99 1 129 1 231 1 232 1 
36 6 303 3 60 3 284 1 163 3 63 17 215 7 242 1 88 1 351 1 352 1 354 1 312 5 47 1 69 2 171 1 195 2 342 2 355 3 175 3 356 1 26 1 198 10 94 2 51 1 202 1 346 3 14 1 205 1 99 1 129 1 231 1 232 1 
36 2 303 1 60 1 163 1 284 1 63 8 215 4 242 1 352 1 351 1 312 2 47 1 171 1 355 1 175 1 26 1 198 4 94 1 51 1 346 2 129 1 231 1 232 1 
36 2 303 2 60 1 163 1 63 12 215 6 242 1 88 1 352 1 354 2 312 2 47 1 69 2 195 1 342 2 355 1 175 1 198 6 94 2 202 1 346 1 14 1 205 1 129 1 231 1 
36 8 303 3 60 4 284 1 163 4 63 18 88 1 215 8 242 1 351 1 352 1 354 1 312 5 47 1 69 2 171 1 195 2 342 2 355 4 175 4 356 2 26 1 198 10 94 2 51 1 202 1 346 3 205 1 14 1 129 1 99 1 231 1 232 1 
36 8 303 3 60 4 163 4 63 16 88 1 215 7 242 1 352 1 354 2 312 6 47 1 69 3 195 3 342 3 355 4 174 1 175 4 356 2 198 9 94 2 202 1 346 3 205 1 14 1 129 1 231 1 
171 2 195 3 26 1 303 1 198 3 94 1 284 3 63 7 215 4 346 3 351 1 312 6 232 3 
36 8 303 3 60 4 284 1 163 4 63 18 88 1 215 8 242 1 351 1 352 1 354 1 312 4 47 1 69 2 171 1 195 1 342 2 355 4 174 1 175 4 356 2 26 1 198 10 94 2 51 1 202 1 346 3 205 1 14 1 129 1 231 1 232 1 
165 1 178 1 291 1 48 1 160 1 116 1 56 1 
291 1 48 1 160 1 9 1 322 1 165 1 324 1 178 1 77 1 230 1 56 1 116 1 
154 1 250 1 34 1 315 1 219 1 167 1 93 1 68 1 302 1 118 1 287 1 
291 1 93 1 160 1 302 1 305 1 199 1 216 1 165 2 250 1 217 1 178 2 261 1 219 1 167 1 98 1 68 1 118 1 287 1 
193 1 291 1 255 1 93 1 302 1 305 1 348 1 199 1 216 1 165 1 250 1 323 1 217 2 178 1 261 1 243 1 219 2 98 1 311 1 68 1 118 3 287 1 
193 1 291 1 255 1 93 1 302 1 305 1 348 1 39 1 216 1 165 1 250 1 323 1 217 2 178 1 261 1 243 1 219 2 98 1 311 1 68 1 118 3 287 1 
288 1 341 1 193 1 234 1 134 1 253 1 255 1 93 1 293 2 120 1 302 3 282 1 304 2 348 1 250 3 217 1 167 1 219 1 44 1 68 1 157 1 287 3 118 4 
288 1 341 1 193 1 234 1 134 1 253 1 255 1 93 1 293 2 120 1 302 3 282 1 304 2 348 1 76 1 250 3 217 1 167 1 219 1 68 1 287 3 118 4 
250 1 93 1 68 1 302 1 298 1 287 1 
104 1 71 1 93 3 302 7 12 1 336 1 200 1 213 1 250 7 217 1 228 1 65 1 167 2 219 2 155 1 33 1 298 1 68 2 144 1 287 6 118 3 
235 1 36 4 160 2 211 1 189 1 302 1 303 1 305 1 60 2 23 1 284 1 163 2 63 6 215 3 165 2 216 1 217 1 166 1 261 1 219 1 351 1 68 1 312 2 46 1 118 1 287 1 171 1 291 1 355 2 93 1 175 2 196 2 26 1 198 3 227 2 320 1 94 1 199 1 51 1 124 1 250 1 346 2 178 2 98 1 33 1 132 1 232 1 
234 1 134 1 253 1 333 1 105 2 334 1 302 1 3 1 282 2 304 3 218 1 167 1 266 1 269 1 287 1 118 2 288 1 341 1 314 1 224 2 292 2 173 2 293 3 176 1 151 1 76 1 250 1 276 1 
253 1 93 2 86 1 302 2 250 2 217 1 219 1 33 1 298 1 68 1 144 1 287 2 118 2 
315 1 34 1 93 1 120 1 302 4 250 4 167 1 219 1 33 1 68 1 206 1 287 4 118 1 
93 2 302 2 348 1 122 1 200 1 213 1 250 2 260 1 217 1 219 1 68 1 78 1 287 2 118 1 
258 1 250 1 103 1 167 1 92 1 93 1 68 1 302 1 169 1 287 1 
250 2 65 1 219 1 187 1 93 1 33 1 68 1 302 2 12 1 118 1 287 2 
34 1 315 1 104 1 93 2 302 5 348 1 250 5 65 1 228 1 167 1 219 2 33 1 68 2 206 1 287 4 118 3 
34 1 315 1 93 2 302 5 348 1 250 5 65 1 228 1 167 1 219 2 33 1 68 2 206 1 192 1 287 4 118 3 
291 1 93 1 160 1 302 1 305 1 39 1 216 1 165 2 250 1 217 1 178 2 261 1 219 1 167 1 98 1 68 1 118 1 287 1 
93 2 302 1 336 1 348 1 200 1 213 1 250 1 217 1 219 1 68 1 144 1 287 1 118 1 
135 1 291 1 197 1 212 1 344 1 165 1 53 1 178 1 361 1 
313 1 53 1 164 1 
307 1 53 1 160 1 212 1 361 1 
313 1 254 1 293 1 73 1 304 1 212 1 164 1 307 1 323 1 53 1 243 1 311 1 265 1 276 1 361 1 
110 1 249 1 154 1 296 1 
110 1 249 1 140 1 20 1 59 1 296 1 257 1 
20 1 353 1 128 1 
278 1 223 1 59 1 20 3 296 1 257 1 177 1 110 1 249 1 112 1 140 3 310 2 
110 1 249 1 140 2 148 1 20 2 59 1 296 1 257 1 38 1 
222 1 110 1 103 1 140 1 149 1 20 1 59 1 335 1 169 1 257 1 177 1 
110 1 249 1 140 1 20 1 59 1 257 1 177 1 
249 2 140 1 20 1 59 1 296 1 257 1 177 1 
17 1 146 1 59 2 20 2 257 2 177 1 110 1 249 1 113 1 140 2 
70 1 59 1 20 3 84 1 149 1 296 1 257 1 177 1 38 2 249 1 110 2 140 3 184 1 
222 1 103 2 92 1 59 1 20 2 270 1 246 1 296 1 257 1 177 1 38 1 110 1 249 1 140 2 169 1 
59 2 20 4 148 1 149 1 296 1 257 2 177 1 38 2 249 1 110 2 140 4 32 1 184 1 
110 1 249 1 140 1 20 1 59 1 296 1 257 1 177 1 
278 1 223 1 91 1 20 4 59 1 149 1 296 2 257 1 38 2 249 2 110 3 140 4 184 1 310 1 
59 1 20 2 25 1 296 1 257 1 177 1 38 1 241 1 110 1 249 1 140 2 182 1 
278 1 223 2 59 1 20 3 296 1 257 1 177 1 110 1 249 1 140 3 310 2 170 1 
110 2 237 1 150 1 62 2 
326 1 140 1 20 1 59 1 257 1 177 1 
110 1 249 1 140 2 70 1 20 2 59 1 296 1 257 1 38 1 177 1 
95 1 
110 1 249 1 140 1 20 1 59 1 296 1 257 1 177 1 
70 1 59 1 20 3 296 1 257 1 38 1 177 1 249 1 110 1 140 3 310 1 
110 1 91 1 149 1 184 1 
110 1 249 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 54 66 252 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 54 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 54 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 54 66 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 54 66 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 2 312 1 191 2 165 1 363 2 366 5 337 6 288 1 267 9 172 2 7 1 86 1 69 2 40 1 39 2 71 1 152 1 278 3 131 2 352 1 22 4 23 1 186 1 135 9 380 1 27 1 334 1 359 1 
137 2 312 1 191 2 165 1 363 2 366 5 337 6 288 1 267 9 172 2 7 1 86 1 69 2 39 2 40 1 71 1 152 1 278 3 131 2 352 1 22 4 23 1 186 1 135 9 380 1 27 1 334 1 359 1 
137 2 312 1 191 2 165 1 363 2 366 6 337 7 288 1 267 10 172 2 7 1 86 1 69 2 39 2 40 1 71 1 152 1 278 4 131 2 352 1 22 5 23 1 186 1 135 10 380 1 27 1 334 1 359 1 
137 1 312 1 191 2 165 1 363 2 366 4 337 4 288 1 267 7 172 2 86 1 69 2 39 2 40 1 71 1 152 1 278 2 131 2 352 1 22 3 23 1 186 1 135 7 380 1 27 1 334 1 359 1 
137 2 312 1 69 1 363 1 71 1 39 1 278 1 337 3 366 3 131 1 267 4 172 1 22 2 23 1 186 1 380 1 135 4 7 1 
312 1 191 1 69 1 363 1 366 1 267 2 131 1 126 1 172 1 185 1 5 1 23 1 380 1 135 2 27 1 334 1 
312 1 191 1 363 2 278 1 366 2 337 1 267 3 172 2 22 1 23 1 380 1 135 3 86 1 
137 2 312 1 191 1 363 2 337 7 366 5 267 9 172 2 86 1 7 1 69 1 71 1 39 1 278 3 17 1 131 1 352 1 22 4 23 1 186 1 135 9 380 1 187 1 359 1 
137 2 312 1 191 1 363 2 337 7 366 5 267 9 172 2 86 1 7 1 69 1 71 1 39 1 278 3 17 1 131 1 352 1 22 4 23 1 186 1 135 9 380 1 187 1 359 1 
320 1 9 1 143 1 
63 1 313 2 320 1 
28 2 164 2 295 2 345 2 197 2 97 2 212 1 255 1 
28 3 164 3 335 1 122 2 57 1 215 1 82 1 170 1 243 1 61 1 146 1 295 2 197 2 84 1 318 2 273 1 11 1 67 1 344 2 178 1 70 1 345 2 12 1 323 1 348 2 227 1 226 1 329 1 353 1 231 2 233 1 97 2 115 1 212 1 255 1 159 1 333 1 
28 1 164 1 295 1 345 1 197 1 97 1 255 1 304 1 327 1 205 1 
28 1 164 1 38 1 153 1 303 1 44 1 196 1 295 1 112 1 257 1 320 1 9 1 297 1 205 1 
28 1 164 1 38 1 345 1 153 1 196 1 112 2 295 1 197 1 97 1 257 2 320 1 9 1 297 1 205 1 
112 1 218 1 257 1 343 1 360 1 
112 2 257 2 320 1 9 1 83 1 343 1 269 1 360 1 
112 1 257 1 343 1 
28 1 164 1 345 1 304 1 327 1 112 1 295 1 197 1 307 1 97 1 255 1 257 1 205 1 360 1 
320 1 
112 2 256 1 257 2 320 1 9 1 343 1 269 1 360 1 
286 1 154 1 368 1 305 1 19 1 132 2 294 1 269 1 20 1 112 5 98 2 281 1 116 2 257 5 319 1 320 1 9 1 343 2 360 2 
212 1 143 1 
28 2 164 2 345 1 208 1 295 2 197 1 97 1 212 2 161 1 
271 1 158 1 259 1 
28 1 178 1 164 1 122 1 335 1 323 1 348 1 82 1 226 1 127 1 84 1 212 1 333 1 318 1 11 1 67 1 
28 3 164 3 295 3 345 3 89 1 197 3 97 1 212 1 
28 1 164 1 295 1 345 1 197 1 304 1 205 1 
28 1 164 1 295 1 345 1 208 1 197 1 97 1 161 1 205 1 
28 4 164 4 335 1 122 1 57 1 215 1 82 1 170 1 196 1 61 1 146 1 295 3 84 1 197 3 318 1 296 1 297 1 11 1 205 1 67 1 344 2 178 1 70 1 38 1 345 3 12 1 89 1 221 1 153 1 323 1 348 1 226 1 251 1 329 1 353 1 112 1 231 1 97 2 115 1 212 1 255 1 333 1 257 1 161 1 
28 2 164 2 295 2 345 1 4 1 197 1 89 1 212 1 44 1 
28 3 164 3 38 1 345 3 89 2 153 1 221 1 196 1 112 1 295 3 197 3 354 1 97 1 257 1 296 1 161 1 320 1 297 1 205 1 
28 2 164 2 345 2 89 1 295 2 197 2 271 1 97 1 259 1 161 1 
28 1 178 1 164 1 122 1 335 1 323 1 348 1 82 1 226 1 84 1 212 1 333 1 318 1 11 1 67 1 
28 1 178 1 164 1 122 1 239 1 335 1 323 1 348 1 82 1 212 1 333 1 318 1 148 1 11 1 67 1 
344 2 70 1 56 1 72 1 41 1 57 1 302 1 266 1 215 1 227 2 315 1 61 2 329 1 379 1 353 1 146 1 253 1 231 4 271 2 356 1 129 1 100 1 158 2 259 2 
28 1 164 1 295 1 345 1 197 1 14 1 297 1 205 1 
178 1 28 2 164 2 335 1 345 1 122 1 89 1 221 1 323 1 348 1 82 1 226 1 295 1 84 1 197 1 333 1 318 1 259 1 11 1 67 1 
28 5 164 5 345 4 89 2 221 1 59 1 44 1 295 5 4 1 197 4 97 1 212 1 161 1 285 1 
28 2 164 2 295 2 345 2 197 2 14 1 304 1 205 1 
217 1 175 1 
217 1 175 1 
346 1 216 1 
346 1 216 1 
346 1 216 1 
332 1 217 1 175 1 
300 1 217 1 175 1 
150 1 217 2 346 1 175 2 242 1 216 1 
332 1 217 1 175 1 
332 1 217 1 175 1 
217 1 175 1 1 1 
217 1 175 1 1 1 
217 1 175 1 1 1 
263 2 248 1 242 1 179 2 109 1 324 2 91 1 43 3 211 2 142 2 31 1 330 1 45 1 217 2 112 2 175 2 34 1 257 2 320 1 
28 2 300 1 164 2 248 1 263 1 345 2 179 1 265 1 324 1 43 1 211 1 225 1 279 1 295 2 112 1 217 1 175 1 197 2 212 1 237 1 257 1 381 1 64 1 284 1 
69 1 39 1 131 1 
69 1 185 1 131 1 
213 1 39 2 185 1 131 3 192 1 375 1 
134 1 213 1 39 1 185 1 131 2 375 1 
213 2 39 1 185 1 131 2 375 1 
121 1 56 1 286 3 313 3 2 2 315 1 269 1 85 2 63 1 9 1 320 2 64 1 343 1 36 1 275 2 154 2 220 1 302 1 181 1 350 1 132 1 351 1 20 1 112 5 98 1 100 1 116 1 309 1 237 1 257 5 284 1 360 4 
121 3 56 3 286 8 167 1 313 9 2 6 315 3 269 1 218 5 63 3 176 1 9 1 320 5 343 6 275 6 154 6 302 3 223 5 16 1 181 2 305 1 132 2 351 1 20 1 78 1 112 9 331 1 98 2 100 3 237 4 116 2 309 2 257 9 357 1 360 7 
121 1 56 1 286 3 313 4 2 2 315 1 85 1 63 2 9 1 320 3 36 1 275 2 220 1 154 2 302 1 181 1 305 1 132 1 112 3 98 1 100 1 116 1 309 1 237 1 257 3 360 2 
121 2 56 2 286 5 313 7 2 4 315 2 85 2 63 3 176 1 9 1 320 4 36 1 275 4 220 1 154 4 302 2 16 1 181 1 305 1 132 1 112 4 98 1 100 2 116 1 309 1 237 2 257 4 357 1 360 3 
82 1 143 1 250 1 
145 1 82 1 
325 1 
82 1 67 1 
335 1 82 3 250 2 274 1 67 1 173 1 
335 1 82 1 67 1 
264 1 82 1 
347 1 209 1 41 3 302 1 193 1 227 4 144 1 315 1 155 1 292 1 61 3 33 1 231 7 113 1 199 1 129 2 62 2 
347 1 209 1 41 3 302 1 193 1 227 4 144 1 315 1 155 1 292 1 61 3 33 1 231 7 113 1 199 1 129 2 62 2 
347 1 209 1 41 3 302 1 193 1 227 4 144 1 315 1 292 1 155 1 61 3 270 1 33 1 231 7 113 1 199 1 129 2 62 2 
121 3 56 3 125 1 215 1 193 2 144 1 292 1 315 4 61 15 33 1 370 1 199 5 129 5 62 3 200 3 371 1 108 1 344 2 70 1 347 2 209 2 41 10 302 4 133 4 227 16 155 1 95 1 329 1 353 1 231 31 113 2 100 3 190 1 361 1 
0 1 215 2 193 1 315 1 292 1 61 4 33 1 129 3 199 1 62 2 37 1 344 4 70 2 347 1 209 1 41 4 302 1 227 5 155 1 329 2 95 1 353 2 231 9 113 1 
312 1 191 1 29 1 122 1 363 1 366 1 337 1 267 2 139 1 367 1 192 1 172 1 3 1 35 1 318 1 298 1 11 1 69 1 13 1 39 1 323 1 131 2 348 1 182 1 185 1 114 1 80 1 23 1 135 2 380 1 
312 1 191 1 29 1 122 1 363 1 366 1 337 2 267 3 139 1 192 1 367 1 172 1 3 1 318 1 298 1 321 1 11 1 69 1 13 1 39 1 323 1 131 2 348 1 182 1 21 1 185 1 114 1 23 1 135 3 53 1 
312 1 191 1 29 1 122 1 366 1 337 2 267 2 139 1 367 1 192 1 3 1 318 1 298 1 11 1 69 1 39 1 323 1 131 2 348 1 21 1 185 1 114 1 23 1 135 2 53 1 
191 2 363 1 122 1 277 1 214 1 323 1 267 1 348 1 82 1 74 1 172 1 3 2 114 2 6 1 135 1 333 1 318 1 51 1 11 1 321 1 298 2 67 1 130 1 
191 1 29 1 122 1 363 1 267 1 139 1 367 1 192 1 172 1 3 1 35 1 318 1 298 1 11 1 69 1 13 1 39 1 323 1 131 2 348 1 182 1 185 1 114 1 135 1 380 1 53 1 
94 1 
286 2 103 2 291 1 196 1 295 1 63 2 107 1 9 1 202 1 343 6 297 1 11 1 205 1 67 1 207 1 249 1 154 2 153 1 301 4 303 1 348 2 74 1 20 1 77 1 112 5 116 1 257 5 117 2 358 1 28 1 164 1 122 2 123 2 166 1 124 2 365 2 313 2 82 1 269 3 318 2 320 2 38 1 42 1 323 1 181 1 44 1 183 1 132 1 93 2 184 1 280 2 98 1 282 1 333 2 51 1 
207 1 28 1 164 1 38 1 249 1 153 1 301 2 303 1 44 1 196 1 269 1 184 1 112 3 295 1 282 1 256 1 107 1 257 3 117 1 343 2 297 1 205 1 
28 1 164 1 196 1 269 1 295 1 107 1 9 1 320 1 343 1 297 1 205 1 207 1 38 1 249 1 153 1 301 3 303 1 44 1 184 1 280 1 112 3 282 1 256 1 257 3 
28 1 164 1 124 1 196 1 269 1 295 1 107 1 9 1 320 1 297 1 343 2 205 1 207 1 38 1 249 1 153 1 301 3 303 1 44 1 184 1 280 1 112 3 282 1 256 1 257 3 117 1 
28 1 164 1 124 2 196 1 269 1 295 1 107 1 343 3 297 1 205 1 66 1 207 1 38 1 249 1 153 1 301 2 303 1 44 1 184 1 112 3 252 1 282 1 256 1 257 3 117 2 54 1 
286 1 103 2 291 1 196 1 295 1 107 1 63 2 202 1 9 1 297 1 343 4 205 1 207 1 249 1 153 1 154 1 301 4 303 1 20 1 112 4 116 1 257 4 117 2 28 1 164 1 123 2 365 2 124 2 313 2 269 2 320 2 38 1 44 1 132 1 183 1 184 1 93 2 280 2 98 1 282 1 
207 1 28 1 164 1 38 1 249 1 153 1 301 2 303 1 44 1 196 1 184 1 112 2 295 1 282 1 107 1 257 2 297 1 205 1 54 1 
207 1 28 1 164 1 38 1 249 1 153 1 301 2 303 1 44 1 196 1 184 1 112 2 295 1 282 1 107 1 257 2 297 1 205 1 54 1 
28 1 164 1 286 1 103 2 124 2 365 2 313 2 169 1 141 1 196 1 269 2 295 1 107 1 320 1 9 1 343 4 297 1 205 1 207 1 38 1 249 1 154 1 153 1 301 4 303 1 44 1 183 1 132 1 184 1 280 2 20 1 96 2 112 4 232 1 46 1 98 1 282 1 236 2 116 1 257 4 117 2 
207 1 28 1 164 1 38 1 249 1 124 1 153 1 301 3 303 1 44 1 196 1 184 1 280 1 112 2 295 1 282 1 107 1 257 2 117 1 343 1 297 1 205 1 54 1 66 1 
207 1 28 1 164 1 38 1 249 1 124 1 153 1 301 3 303 1 44 1 196 1 184 1 280 1 112 2 295 1 282 1 107 1 257 2 117 1 343 1 297 1 205 1 54 1 66 1 
28 1 164 1 286 1 103 2 124 2 365 2 313 2 196 1 269 2 295 1 107 1 320 1 9 1 202 1 343 4 297 1 205 1 207 1 38 1 249 1 154 1 153 1 301 4 303 1 44 1 183 1 132 1 184 1 280 2 20 1 96 2 112 4 232 1 98 1 282 1 236 2 116 1 257 4 117 2 
344 2 70 1 347 1 72 1 41 2 57 1 302 1 215 1 193 1 227 3 143 1 315 1 155 1 292 1 61 3 329 1 33 1 353 1 146 1 231 6 271 1 129 2 158 1 62 1 212 2 259 1 
121 2 56 1 57 2 58 1 215 2 315 2 61 6 174 1 370 1 146 1 271 4 199 1 129 1 200 3 371 1 10 1 344 4 70 2 12 1 151 1 41 2 302 1 133 3 227 8 329 2 353 2 231 14 233 1 212 1 158 11 100 2 259 11 81 1 
28 2 164 2 335 1 122 1 57 1 215 1 82 1 127 1 316 1 61 1 146 1 295 1 84 1 197 1 271 1 318 1 203 1 11 1 67 1 178 1 344 2 70 1 345 1 89 1 12 1 221 1 323 1 348 1 326 1 226 1 227 1 329 1 353 1 231 2 233 1 212 1 333 1 81 1 
335 2 56 2 57 3 193 1 292 1 61 10 295 1 146 3 197 1 199 4 62 1 11 2 67 2 344 6 70 3 345 1 347 1 12 1 302 3 348 3 155 1 306 2 353 3 157 1 212 2 158 7 258 2 259 7 81 1 120 1 28 3 164 3 121 2 122 3 215 3 82 2 170 2 315 3 33 1 84 2 128 2 271 7 129 4 318 3 178 2 89 1 221 1 41 8 323 2 226 2 227 10 329 3 231 20 233 1 99 1 100 2 333 1 53 1 55 2 
28 1 164 1 122 7 57 2 338 1 215 2 82 3 314 1 61 1 295 1 146 2 197 1 318 8 273 2 374 1 11 2 67 2 344 4 70 2 345 1 89 1 12 1 72 1 323 2 90 1 348 8 74 1 227 1 329 2 378 1 353 2 231 2 80 1 233 1 47 1 333 2 101 1 51 1 53 1 
28 1 164 1 121 1 56 1 57 1 215 1 315 1 61 2 146 1 295 1 197 1 271 1 129 1 344 2 70 1 345 1 41 1 302 1 227 1 329 1 353 1 231 3 97 1 158 1 100 1 259 1 161 1 189 1 81 1 
344 2 70 1 72 1 41 1 57 1 215 1 227 2 315 1 329 1 353 1 379 1 146 1 231 2 271 1 199 1 158 1 100 1 259 1 
344 2 70 1 56 1 72 1 41 1 57 1 302 1 215 1 61 2 329 1 353 1 146 1 253 1 231 2 271 1 129 1 158 1 259 1 
121 1 56 1 57 1 215 1 315 1 61 2 146 1 271 2 199 1 129 1 344 2 70 1 72 1 41 2 302 1 227 2 329 1 353 1 231 4 100 1 158 2 259 2 
344 2 70 1 41 1 57 1 215 1 227 2 315 1 329 1 353 1 379 1 146 1 231 2 271 1 199 1 158 1 100 1 259 1 374 1 
344 2 70 1 56 1 41 1 57 1 302 1 215 1 61 2 329 1 353 1 146 1 253 1 231 2 271 1 129 1 158 1 259 1 374 1 
121 1 56 1 57 1 215 1 315 1 61 2 146 1 271 2 199 1 129 1 374 1 344 2 70 1 41 2 302 1 227 2 329 1 353 1 231 4 100 1 158 2 259 2 
344 2 70 1 121 1 56 1 41 2 57 1 302 1 215 1 227 2 315 1 61 2 329 1 353 1 146 1 231 4 271 2 129 1 199 1 158 2 100 1 259 2 
28 1 164 1 335 1 122 1 57 1 215 1 82 1 170 1 61 1 146 1 84 1 318 1 11 1 67 1 178 1 344 2 70 1 12 1 323 1 348 1 227 1 226 1 329 1 353 1 231 2 233 1 212 1 333 1 
28 1 164 1 335 1 239 1 122 1 57 1 215 1 82 1 61 1 146 1 318 1 148 1 177 1 11 1 67 1 178 1 344 2 70 1 12 1 323 1 348 1 227 1 329 1 353 1 231 2 233 1 212 1 333 1 
121 1 56 1 57 1 215 1 315 1 61 2 146 1 271 2 199 1 129 1 344 2 70 1 41 2 302 1 227 2 329 1 353 1 231 4 100 1 158 2 259 2 81 1 
28 1 164 1 121 1 56 1 335 1 122 1 57 1 215 1 82 1 170 1 315 1 61 2 146 1 84 1 271 2 129 1 199 1 318 1 11 1 67 1 178 1 344 2 70 1 41 2 302 1 323 1 348 1 227 2 226 1 306 1 329 1 353 1 231 4 80 1 158 2 100 1 259 2 
28 1 164 1 121 1 56 1 57 1 215 1 293 1 315 1 61 1 146 1 295 1 197 1 271 1 199 1 344 2 70 1 345 1 41 1 302 1 227 2 329 1 353 1 231 3 97 1 100 1 158 1 259 1 161 1 81 1 
121 3 56 3 0 1 215 2 289 1 194 1 244 1 315 3 61 10 369 1 370 1 129 3 199 3 200 1 371 1 372 1 344 4 70 2 210 1 41 6 302 3 110 2 133 2 227 9 377 1 329 2 353 2 230 2 231 19 100 3 
362 1 163 1 121 3 138 1 56 2 0 1 215 3 194 1 244 1 315 3 61 12 369 2 199 2 129 2 341 1 200 2 371 2 373 1 344 6 70 3 41 4 210 2 222 1 302 2 110 4 227 14 133 2 377 1 95 2 329 3 353 3 230 1 231 26 100 3 
56 4 138 1 0 1 194 1 193 1 289 1 244 1 292 1 61 21 199 4 341 1 62 1 200 3 245 1 344 6 70 3 347 1 210 1 302 5 110 4 155 1 353 3 362 1 121 4 163 1 215 3 315 5 369 2 370 1 33 1 129 4 371 3 373 1 41 8 222 1 227 20 133 4 329 3 95 1 377 1 230 1 231 41 100 4 
362 1 163 1 121 4 138 1 56 3 0 1 215 4 289 1 193 1 194 1 292 1 244 1 315 5 61 18 369 2 33 1 370 1 341 1 129 4 199 3 62 1 200 3 245 1 371 3 373 1 344 8 70 4 347 1 210 1 41 7 222 1 302 4 110 4 133 4 227 20 155 1 377 1 95 2 329 4 353 4 230 1 231 38 100 4 
362 1 163 1 121 7 138 1 56 7 0 1 58 2 215 2 193 1 194 1 292 1 244 1 315 8 61 25 369 1 33 1 370 2 341 1 129 7 199 7 62 1 200 4 371 2 373 1 344 4 70 2 347 1 210 1 41 14 222 1 302 8 110 4 133 4 227 27 155 1 377 1 95 1 329 2 353 2 230 1 231 52 100 7 
45 1 263 1 217 1 175 1 242 1 179 1 324 1 91 1 25 1 211 1 
279 1 300 1 
263 1 217 1 175 1 102 1 168 1 179 1 324 1 268 1 211 1 
248 1 263 1 242 1 179 1 324 1 91 1 43 2 211 1 142 1 31 1 330 1 45 1 112 1 217 1 175 1 34 1 257 1 320 1 
248 1 263 1 242 1 179 1 324 1 91 1 43 2 211 1 142 1 31 1 330 1 45 1 112 1 217 1 175 1 34 1 257 1 320 1 
248 1 263 1 242 1 179 1 324 1 91 1 43 2 211 1 142 1 31 1 330 1 45 1 112 1 217 1 175 1 34 1 257 1 320 1 
150 1 332 1 336 1 
150 1 332 1 336 1 
299 1 1 1 
299 1 150 1 1 1 
265 1 225 1 
28 2 164 2 263 1 265 1 142 1 171 1 217 1 295 2 175 1 197 2 34 1 64 1 300 1 345 2 179 1 324 1 43 1 211 1 225 1 279 1 112 1 212 1 237 1 257 1 381 1 284 1 360 1 
332 1 336 1 
299 1 150 1 1 1 
28 2 164 2 122 2 57 1 215 1 82 1 61 1 146 1 295 2 106 1 340 1 318 2 273 2 11 1 67 1 344 2 70 1 12 1 323 1 90 1 224 1 348 2 92 1 227 1 329 1 378 1 353 1 231 2 233 1 24 1 81 1 
69 1 29 1 122 2 39 1 323 1 131 2 139 1 192 1 348 2 349 1 182 1 185 1 114 1 80 1 342 1 318 2 149 1 11 1 53 1 
69 1 29 1 122 1 39 1 323 1 131 2 139 1 192 1 348 1 349 1 182 1 185 1 114 1 318 1 162 1 11 1 53 1 
122 1 214 1 323 1 348 1 82 1 74 1 114 1 333 1 318 1 8 1 149 1 51 1 11 1 67 1 
69 1 29 1 122 1 39 1 323 1 131 2 139 1 192 1 348 1 349 1 182 1 185 1 114 1 342 1 318 1 149 1 11 1 53 1 
310 1 
286 1 154 1 320 1 9 1 368 1 143 1 294 1 
286 1 123 1 313 1 291 1 269 1 63 1 320 2 9 1 343 1 154 1 132 1 93 1 20 1 112 1 98 1 116 1 257 1 
335 3 56 2 286 9 240 1 60 2 195 2 2 6 294 1 145 3 63 6 9 2 343 5 65 2 11 3 67 3 68 2 153 2 154 8 302 2 15 2 348 3 250 2 20 4 112 5 79 1 80 1 116 4 257 5 121 2 122 3 364 1 264 2 313 12 368 1 82 10 315 2 173 1 269 3 318 3 320 8 276 1 275 6 88 2 42 1 323 4 181 2 132 4 228 1 98 4 234 2 100 2 333 1 50 2 55 2 
362 1 163 1 121 2 138 1 56 2 286 8 313 6 2 5 315 2 269 1 341 1 63 3 200 1 371 1 320 5 9 2 343 1 275 5 88 1 42 1 154 5 222 1 302 2 15 2 181 1 133 1 132 2 75 1 20 2 112 1 98 2 100 2 308 1 116 2 257 1 
28 1 164 1 286 2 104 1 287 1 193 1 315 2 33 1 295 1 197 1 205 1 88 1 345 1 347 1 154 2 302 1 15 2 304 1 132 1 327 1 20 1 112 1 307 1 98 1 97 1 255 1 116 1 257 1 
286 1 154 1 368 1 132 1 294 1 20 1 98 1 116 1 9 1 320 1 
121 2 88 1 56 2 286 5 154 5 302 2 15 2 313 10 2 5 315 2 100 2 63 5 320 5 275 5 55 1 
112 1 257 1 320 1 9 1 343 1 269 1 
122 4 286 2 166 1 364 2 82 1 269 2 318 4 343 4 11 1 67 1 42 2 154 2 73 1 323 1 348 4 181 2 305 1 74 1 132 2 228 1 20 1 77 1 112 3 98 2 355 1 116 2 333 2 257 3 51 1 
28 3 164 3 122 1 335 1 57 1 215 1 82 1 170 1 61 1 295 2 146 1 197 2 84 1 318 1 11 1 67 1 344 2 178 1 70 1 345 2 12 1 323 1 348 1 226 1 329 1 353 1 231 1 97 2 115 1 212 1 255 1 333 1 
286 1 154 2 42 1 313 4 181 1 2 2 132 1 20 1 98 1 62 1 63 2 116 1 9 2 320 4 275 2 
87 1 263 1 324 1 
263 1 265 1 324 1 91 1 136 1 
87 1 263 1 324 1 
87 1 263 1 324 1 
263 1 339 1 324 1 
263 1 339 1 324 1 
263 1 339 1 324 1 
263 1 324 1 
217 1 175 1 
344 4 70 2 347 1 41 3 302 1 215 2 193 1 227 4 315 1 155 1 292 1 61 4 329 2 95 1 33 1 353 2 231 8 199 1 129 2 62 1 
33 1 231 6 347 1 41 2 302 1 129 2 62 1 193 1 227 3 143 1 315 1 292 1 155 1 61 3 
344 2 70 1 121 1 56 1 41 2 302 1 215 1 227 2 315 1 61 2 329 1 353 1 231 4 129 1 199 1 100 1 119 1 
121 1 56 1 41 2 302 1 133 2 227 3 315 1 61 4 370 1 231 7 129 1 199 1 100 1 200 1 371 1 
121 2 56 2 58 1 215 2 193 2 292 1 315 3 61 12 33 1 370 1 199 4 129 5 62 1 200 2 344 4 70 2 347 2 151 1 41 9 302 3 227 11 133 2 155 1 95 2 329 2 353 2 231 23 235 1 100 2 
231 1 133 1 61 1 
231 1 200 1 227 1 
344 2 70 1 121 1 56 1 41 3 302 1 215 1 227 3 315 1 61 3 329 1 353 1 231 6 199 1 129 2 100 1 119 1 55 1 
362 1 163 1 121 2 138 1 56 2 0 1 215 1 315 2 61 6 199 1 341 1 129 1 200 1 371 1 344 2 70 1 41 2 302 2 222 1 133 1 227 6 329 1 353 1 231 12 100 2 
347 1 41 2 302 1 193 1 227 3 315 1 61 3 33 1 231 6 129 1 199 1 
344 2 70 1 347 1 41 2 215 1 193 1 227 1 292 1 155 1 61 2 95 1 329 1 353 1 231 3 199 1 129 1 235 1 
344 2 70 1 0 1 347 2 41 5 104 1 302 2 215 1 193 2 227 5 315 2 61 5 329 1 353 1 33 1 231 10 129 3 199 2 
344 2 70 1 0 1 41 1 215 1 227 2 315 1 329 1 353 1 231 2 199 1 100 1 
344 2 70 1 121 1 56 1 0 1 41 2 302 1 215 1 227 2 315 1 61 2 329 1 353 1 231 4 129 1 199 1 100 1 
344 6 70 3 0 1 347 1 41 2 215 3 289 1 193 1 227 1 61 2 95 1 329 3 353 3 231 3 235 1 129 1 199 1 
121 3 56 3 0 1 125 1 215 5 193 3 289 1 292 1 315 5 61 18 33 2 370 1 199 5 129 7 62 1 200 3 371 1 108 1 344 10 70 5 347 3 41 12 302 5 133 4 227 16 155 1 95 2 329 5 353 5 231 34 235 1 100 3 361 1 119 1 
138 1 0 1 215 1 193 1 315 1 292 1 61 4 33 1 129 2 62 1 200 1 371 1 344 2 70 1 347 1 41 2 302 1 133 1 227 4 155 1 329 1 353 1 231 8 
121 1 138 1 0 1 215 2 193 1 292 1 315 2 61 5 33 1 370 1 129 2 199 1 62 1 200 1 371 1 344 4 70 2 347 1 41 3 302 1 133 2 227 6 155 1 329 2 353 2 231 11 100 1 119 1 
362 1 163 1 121 2 138 1 56 2 0 1 215 3 193 1 292 1 315 3 61 10 33 1 199 1 341 1 129 3 62 1 200 1 371 1 344 6 70 3 347 1 41 4 222 1 302 3 133 1 227 9 155 1 329 3 95 1 353 3 231 19 100 2 119 1 
362 1 163 1 121 2 138 1 56 1 0 1 215 3 193 1 292 1 315 3 61 7 33 1 199 2 341 1 129 3 62 1 200 1 371 1 344 6 70 3 347 1 41 5 302 2 222 1 133 1 227 10 155 1 95 1 329 3 353 3 231 17 100 2 119 1 
138 1 0 1 215 1 193 1 315 1 292 1 61 4 33 1 129 2 62 1 200 1 371 1 344 2 70 1 347 1 41 2 302 1 133 1 227 4 155 1 329 1 353 1 231 8 
362 1 163 1 121 2 138 1 56 2 0 1 215 1 315 2 61 6 199 1 341 1 129 1 200 1 371 1 344 2 70 1 41 2 302 2 222 1 133 1 227 6 329 1 353 1 231 12 100 2 
362 1 163 1 121 2 138 1 56 1 0 1 215 4 193 1 292 1 315 3 61 8 33 1 199 2 341 1 129 3 62 1 200 1 371 1 344 8 70 4 347 1 41 5 222 1 302 2 133 1 227 10 155 1 329 4 95 2 353 4 231 18 100 2 119 1 
362 1 163 1 121 3 138 1 56 2 0 1 215 4 289 1 315 3 61 7 199 3 341 1 129 3 200 1 371 1 344 8 70 4 41 6 222 1 302 2 133 1 227 9 329 4 95 2 353 4 231 16 100 3 
347 3 41 6 302 1 193 3 227 3 155 1 292 2 315 1 61 4 33 1 231 7 129 3 199 3 
362 1 163 1 121 2 138 1 56 1 0 1 215 4 193 1 289 1 292 1 315 3 61 8 33 1 199 1 341 1 129 3 62 1 200 1 371 1 344 8 70 4 347 1 41 4 222 1 302 2 133 1 227 10 155 1 329 4 95 2 353 4 231 18 100 2 
28 1 76 1 164 1 295 1 4 1 212 1 44 1 
28 1 164 1 44 1 32 1 76 1 295 1 4 1 254 1 147 1 212 1 26 1 160 1 
122 1 323 1 318 1 333 1 348 1 82 1 74 1 143 1 51 1 11 1 67 1 
178 1 28 2 164 2 335 1 345 1 122 1 89 1 323 1 348 1 82 1 295 1 197 1 84 1 212 1 333 1 318 1 11 1 67 1 
178 1 28 2 164 2 335 2 345 1 122 1 89 1 264 1 364 1 323 1 348 1 82 3 196 1 295 2 197 2 84 1 212 1 318 1 297 1 65 1 205 1 11 1 67 2 
28 2 164 2 122 2 335 2 364 1 264 1 82 3 196 1 295 2 197 2 272 1 318 2 148 1 297 1 65 1 11 1 205 1 67 2 178 1 345 1 89 1 323 1 348 2 212 1 
219 1 335 1 122 3 153 1 264 1 364 1 323 1 348 3 82 4 250 1 156 1 145 1 112 2 272 1 333 1 318 3 257 2 320 1 9 1 343 1 65 1 11 1 67 1 
68 1 335 1 122 3 153 1 264 1 364 1 323 1 348 3 82 4 250 1 145 1 112 2 272 1 333 1 318 3 257 2 320 1 9 1 343 1 65 1 11 1 67 1 
122 1 323 1 318 1 348 1 314 1 11 1 
30 1 122 1 318 1 333 1 348 1 
28 2 164 2 335 1 122 1 57 2 215 2 193 1 82 1 170 1 315 1 292 1 61 3 33 1 146 2 295 1 106 1 197 1 84 1 271 1 129 2 62 1 318 1 11 1 67 1 178 1 344 4 70 2 345 1 347 1 89 1 41 2 302 1 323 1 348 1 227 3 226 1 155 1 329 2 306 1 353 2 231 6 80 1 158 1 212 2 259 1 258 1 81 1 
122 1 286 1 60 1 368 1 195 1 82 2 294 1 269 1 145 1 318 1 320 1 9 1 343 2 68 1 154 1 153 1 348 1 132 2 228 1 250 1 20 2 112 3 98 2 234 1 333 1 116 2 257 3 360 1 
335 1 122 2 79 1 80 1 323 2 318 2 348 2 82 2 314 1 250 1 11 1 67 1 173 1 
122 4 323 1 348 4 74 1 82 1 80 1 272 1 283 1 333 1 318 4 51 1 11 1 67 1 
120 1 376 1 122 2 335 1 364 1 323 2 348 2 82 1 198 1 318 2 201 1 49 1 11 1 67 1 
69 1 29 1 122 1 185 1 323 1 318 1 333 1 131 1 348 1 11 1 
378 1 122 2 80 1 323 1 24 1 318 2 348 2 82 1 11 1 67 1 53 1 
122 4 364 1 338 1 323 2 348 5 74 1 82 3 378 1 80 1 283 1 333 1 318 5 47 1 51 1 11 2 67 2 
122 4 364 1 323 2 348 5 74 1 82 3 378 1 80 1 283 1 333 1 318 5 48 1 47 1 51 1 11 2 67 2 
178 1 28 2 164 2 335 1 345 1 122 1 89 1 323 1 348 1 82 1 295 1 197 1 212 1 333 1 318 1 148 1 11 1 67 1 
30 1 122 1 364 1 318 1 348 1 
28 1 164 1 295 1 340 1 224 1 111 1 140 1 92 1 290 1 
262 1 247 1 140 1 
212 1 111 1 140 1 290 1 118 1 
247 1 262 1 38 1 153 1 111 2 140 1 290 2 196 1 112 2 212 1 257 2 296 1 311 1 320 1 9 1 297 1 118 2 205 1 360 1 
312 1 366 1 23 1 143 1 
312 1 363 1 366 1 23 1 135 1 267 1 172 1 
191 1 135 1 298 1 
312 1 363 1 366 1 105 1 267 3 18 1 172 1 23 1 380 1 135 3 27 2 238 1 
137 1 312 1 363 1 366 1 23 1 337 1 135 2 267 2 172 1 
69 1 363 1 39 1 366 1 267 1 131 1 172 1 22 1 186 1 380 1 135 1 
312 1 363 1 366 1 135 1 380 1 267 1 172 1 
312 2 363 1 23 1 135 1 380 1 267 1 172 1 
312 1 363 2 366 1 180 1 267 2 229 1 172 2 380 1 135 2 188 1 
312 1 363 1 278 1 337 2 366 2 267 3 172 1 352 1 22 1 23 1 380 1 135 3 359 1 
312 1 69 1 363 1 39 1 366 1 337 1 131 2 267 2 192 1 172 1 185 1 23 1 380 1 135 2 246 1 
137 1 312 1 363 2 278 1 337 2 366 2 267 4 172 2 22 1 23 1 380 1 135 4 7 1 
312 1 363 1 366 1 23 1 135 1 380 1 267 1 172 1 
312 2 363 1 278 1 337 2 366 3 267 4 18 1 172 1 22 1 23 2 135 4 27 1 238 1 204 1 
312 1 363 1 366 1 337 1 267 2 17 1 172 1 23 1 380 1 135 2 260 1 52 1 
206 1 312 1 363 1 366 1 267 3 18 1 172 1 23 1 380 1 135 3 27 2 238 2 
241 1 322 1 366 2 261 2 
363 1 135 1 380 1 267 1 328 1 172 1 
312 1 363 1 366 1 23 1 337 1 135 2 380 1 267 2 359 1 172 1 
317 1 
312 1 363 1 366 1 23 1 135 1 380 1 267 1 172 1 
312 1 363 1 337 1 366 1 267 3 172 1 23 1 380 1 135 3 27 1 359 1 
22 1 278 1 366 1 204 1 
312 1 366 1 

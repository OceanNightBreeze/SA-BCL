#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 1 170 1 25 1 103 3 130 1 281 2 354 9 241 1 306 5 135 6 226 2 179 2 137 2 7 1 337 1 183 1 341 1 62 1 362 1 158 4 368 2 269 2 143 9 320 1 48 2 234 1 350 1 50 1 
73 1 170 1 25 1 103 3 130 1 281 2 354 9 241 1 306 5 135 6 226 2 179 2 137 2 7 1 337 1 183 1 341 1 62 1 362 1 158 4 269 2 368 2 143 9 320 1 48 2 234 1 350 1 50 1 
73 1 170 1 25 1 103 4 130 1 281 2 354 10 241 1 306 6 135 7 226 2 179 2 137 2 7 1 337 1 183 1 341 1 62 1 362 1 158 5 269 2 368 2 143 10 320 1 48 2 234 1 350 1 50 1 
73 1 170 1 103 2 130 1 281 2 354 7 241 1 306 4 135 4 226 2 179 2 137 2 7 1 337 1 183 1 341 1 62 1 362 1 158 3 269 2 368 1 143 7 320 1 48 2 234 1 350 1 50 1 
183 1 158 2 25 1 103 1 368 2 269 1 281 1 143 4 354 4 241 1 306 3 135 3 226 1 179 1 320 1 137 1 7 1 337 1 
183 1 341 1 143 2 281 1 43 1 354 2 306 1 241 1 199 1 226 1 229 1 179 1 320 1 137 1 48 1 234 1 
73 1 183 1 158 1 103 1 143 3 354 3 241 1 306 2 135 1 226 2 320 1 137 2 48 1 
73 1 25 1 103 3 281 1 354 9 241 1 306 5 135 7 226 2 136 1 179 1 137 2 7 1 337 1 183 1 158 4 209 1 368 2 269 1 143 9 320 1 48 1 350 1 50 1 
73 1 25 1 103 3 281 1 354 9 241 1 306 5 135 7 226 2 136 1 179 1 137 2 7 1 337 1 183 1 158 4 209 1 368 2 269 1 143 9 320 1 48 1 350 1 50 1 
371 1 176 1 218 1 
140 1 208 2 218 1 
305 1 237 1 373 2 375 2 342 2 149 2 367 2 276 2 
1 1 123 1 237 1 330 1 127 1 331 1 173 1 333 1 5 2 305 1 55 1 307 2 356 1 201 1 109 2 108 1 182 1 202 1 361 1 157 1 342 2 13 1 367 3 210 1 346 1 267 1 270 1 373 2 66 2 375 2 145 1 188 1 16 1 67 1 149 3 276 2 166 2 
305 1 373 1 375 1 342 1 82 1 149 1 367 1 276 1 311 1 332 1 
122 1 23 1 367 1 303 1 332 1 371 1 225 1 57 1 83 1 149 1 243 1 276 1 380 1 218 1 
122 1 342 1 23 2 367 1 303 1 332 1 371 1 373 1 375 1 57 1 149 1 243 1 276 1 380 2 218 1 
54 1 46 1 23 1 380 1 351 1 
371 1 289 1 54 1 46 1 22 1 23 2 380 2 218 1 
46 1 23 1 380 1 
342 1 23 1 367 1 332 1 305 1 54 1 144 1 373 1 375 1 82 1 149 1 380 1 276 1 311 1 
218 1 
371 1 54 1 46 1 22 1 23 2 379 1 380 2 218 1 
235 2 193 1 3 2 22 1 23 5 86 1 186 1 249 1 370 1 371 1 251 1 54 2 273 1 284 1 92 2 46 2 18 1 380 5 218 1 
237 1 176 1 
237 2 342 1 367 2 373 1 375 1 228 1 149 2 276 2 111 1 
253 1 169 1 280 1 
123 1 237 1 138 1 367 1 330 1 346 1 331 1 333 1 173 1 5 1 66 1 145 1 356 1 108 1 149 1 166 1 
123 1 169 1 330 1 367 2 346 1 331 1 173 1 333 1 5 1 260 1 373 1 66 1 145 1 375 1 356 1 108 1 149 2 276 1 166 1 150 1 
112 1 237 1 342 1 367 5 132 1 260 2 373 4 375 4 228 1 83 1 149 5 213 1 276 5 150 1 
373 2 375 2 266 1 82 1 149 2 367 2 276 2 332 1 
260 1 237 1 373 3 375 3 342 1 149 3 367 3 276 3 
373 1 375 1 82 1 149 1 367 1 276 1 332 1 
373 1 375 1 228 1 342 1 149 1 367 1 276 1 332 1 111 1 
123 1 122 1 237 1 23 1 330 1 127 1 303 1 331 1 332 1 173 1 333 1 5 1 305 1 260 1 55 1 307 2 356 1 228 1 109 1 108 1 57 1 243 1 36 1 202 1 157 1 342 2 13 1 367 4 210 1 346 1 270 1 373 3 66 1 145 1 45 1 375 3 188 1 16 1 67 1 149 4 276 3 380 1 166 1 150 1 
260 1 237 1 373 1 375 1 83 1 149 2 367 2 213 1 276 2 
122 1 342 1 23 1 303 1 367 3 185 1 332 1 260 2 373 3 375 3 45 1 228 1 57 1 149 3 243 1 380 1 276 3 218 1 150 1 
169 1 342 1 367 2 280 1 260 1 373 2 375 2 228 1 149 2 276 2 
123 1 237 1 367 1 330 1 346 1 331 1 333 1 173 1 5 1 66 1 145 1 356 1 108 1 149 1 166 1 
237 1 141 1 367 1 330 1 346 1 331 1 333 1 173 1 5 1 283 1 66 1 145 1 356 1 149 1 166 1 
124 1 253 2 169 2 51 1 280 2 196 1 55 2 307 2 242 1 109 4 309 1 182 2 202 1 205 1 313 1 13 1 210 1 116 1 270 1 374 1 16 1 67 1 192 1 277 1 
373 1 375 1 266 1 243 1 149 1 367 1 276 1 332 1 
278 1 174 1 
278 1 174 1 
168 1 12 1 
168 1 12 1 
168 1 12 1 
278 1 190 1 174 1 
278 1 167 1 174 1 
89 1 278 2 168 1 349 1 12 1 174 2 
278 1 190 1 174 1 
278 1 190 1 174 1 
278 1 219 1 174 1 
278 1 219 1 174 1 
278 1 219 1 174 1 
278 1 237 1 23 1 129 1 174 1 282 1 308 1 30 1 56 1 180 1 181 1 203 1 63 1 367 2 369 1 161 1 91 1 373 2 375 2 149 2 121 1 380 1 276 2 167 1 
278 2 203 2 326 1 39 1 23 2 172 1 174 2 250 1 369 2 161 1 89 1 79 1 282 3 308 2 163 2 293 1 121 2 380 2 218 1 
281 1 179 1 269 1 
281 1 199 1 179 1 
281 3 291 1 199 1 358 1 269 2 268 1 
281 2 291 1 199 1 358 1 381 1 269 1 
281 2 291 1 199 1 358 2 269 1 
235 1 125 2 3 1 22 1 328 1 23 5 24 1 129 1 131 1 54 4 30 1 34 1 309 1 180 1 365 1 140 1 246 2 208 3 159 2 116 1 371 1 288 1 251 1 273 2 92 1 46 1 18 3 380 5 296 1 277 1 192 1 218 2 
235 2 3 2 22 1 328 2 23 9 24 3 129 4 197 5 131 1 54 7 31 1 106 1 35 1 309 3 140 3 246 6 208 9 159 6 186 1 116 3 371 1 288 2 251 1 372 1 273 6 92 2 46 6 18 8 215 1 380 9 214 1 277 3 192 3 351 5 218 5 
235 1 125 1 3 1 328 1 23 3 24 1 129 1 54 2 34 1 309 1 140 2 246 2 159 2 208 4 186 1 116 1 371 1 288 1 273 2 92 1 18 3 380 3 296 1 277 1 218 3 192 1 
235 1 125 2 3 1 328 1 23 4 24 2 129 2 54 3 31 1 35 1 34 1 309 2 140 3 246 4 208 7 159 4 186 1 116 2 371 1 288 1 372 1 273 4 92 1 18 5 380 4 296 1 277 2 218 4 192 2 
176 1 330 1 151 1 
95 1 330 1 
11 1 
330 1 346 1 173 1 
330 1 37 1 
330 1 346 1 
301 1 330 3 346 1 151 2 173 1 104 1 
232 1 299 1 245 1 255 1 74 1 313 3 258 1 55 3 374 2 187 2 119 1 109 7 338 1 110 1 277 1 192 1 182 4 
232 1 299 1 245 1 255 1 74 1 313 3 258 1 55 3 374 2 187 2 119 1 109 7 338 1 110 1 277 1 192 1 182 4 
232 1 299 1 245 1 255 1 74 1 313 3 258 1 55 3 374 2 187 2 119 1 109 7 244 1 338 1 110 1 277 1 192 1 182 4 
299 1 74 1 255 2 24 3 258 1 240 1 55 15 307 2 109 31 309 3 110 2 338 5 182 16 202 1 232 2 245 1 156 1 313 10 184 1 210 1 314 3 316 1 116 3 270 1 187 3 374 5 16 1 164 1 119 2 47 4 376 1 148 1 192 4 277 4 
299 1 255 1 258 1 55 4 29 1 307 4 109 9 264 1 338 1 110 1 182 5 202 2 232 1 245 1 313 4 210 2 270 2 187 2 374 3 16 2 119 1 376 1 277 1 192 1 
152 1 279 1 98 1 329 1 333 1 5 1 281 2 354 2 306 1 241 1 135 1 355 1 199 1 226 1 356 1 179 1 84 1 137 1 183 1 364 1 343 1 269 1 268 1 42 1 143 2 66 1 320 1 48 1 217 1 166 1 
152 1 279 1 329 1 333 1 5 1 281 2 78 1 354 3 306 1 241 1 135 2 199 1 226 1 356 1 179 1 84 1 137 1 263 1 364 1 343 1 269 1 268 1 42 1 143 3 66 1 320 1 48 1 217 1 166 1 297 1 
152 1 279 1 329 1 333 1 5 1 281 2 78 1 354 2 306 1 241 1 135 2 199 1 356 1 179 1 263 1 364 1 268 1 269 1 42 1 143 2 66 1 320 1 48 1 217 1 166 1 
2 1 279 2 257 1 99 1 330 1 331 1 333 1 5 1 354 1 226 1 356 1 137 1 9 1 265 1 364 2 346 1 143 1 66 1 252 1 48 2 217 2 166 1 297 1 
152 1 279 1 98 1 329 1 333 1 5 1 281 2 78 1 354 1 199 1 226 1 356 1 179 1 84 1 137 1 183 1 364 1 343 1 269 1 268 1 42 1 143 1 66 1 48 1 217 1 166 1 
120 1 
235 1 3 1 325 1 97 1 4 1 328 1 330 1 331 2 332 1 333 1 5 2 57 1 243 1 287 2 206 2 208 2 346 1 248 2 64 1 347 1 251 1 66 2 17 2 18 2 70 1 166 2 218 2 122 1 257 1 22 3 23 5 303 1 223 2 304 1 28 1 225 1 80 1 356 1 227 2 359 1 83 1 265 1 233 1 140 2 367 1 88 2 371 1 273 2 318 4 92 1 46 6 146 1 149 1 380 5 276 1 
122 1 325 1 22 1 23 3 303 1 304 1 332 1 28 1 225 1 57 1 83 1 243 1 367 1 347 1 318 2 46 2 17 1 149 1 379 1 276 1 70 1 380 3 
122 1 325 1 22 1 23 3 303 1 304 1 332 1 28 1 225 1 57 1 83 1 243 1 206 1 367 1 347 1 371 1 318 3 46 1 149 1 379 1 276 1 70 1 380 3 218 1 
122 1 325 1 22 1 23 3 303 1 304 1 332 1 223 1 28 1 225 1 57 1 83 1 243 1 206 1 367 1 347 1 371 1 318 3 46 2 17 1 379 1 149 1 276 1 70 1 380 3 218 1 
235 1 325 1 3 1 4 1 332 1 198 1 155 1 57 1 243 1 287 2 206 4 248 2 347 1 251 1 65 1 17 4 18 1 70 1 218 5 122 1 22 3 23 5 303 1 75 1 223 4 304 1 28 1 225 1 80 1 227 2 83 1 140 2 367 1 88 2 371 5 273 1 318 6 92 1 46 7 149 1 379 1 380 5 276 1 323 1 
235 1 3 1 325 1 4 1 332 1 57 1 243 1 287 2 206 2 208 2 248 2 347 1 251 1 17 2 18 1 70 1 218 2 122 1 22 2 23 4 303 1 304 1 223 2 28 1 225 1 80 1 227 2 359 1 83 1 140 2 367 1 88 2 371 1 273 1 318 4 92 1 46 4 149 1 276 1 380 4 
122 1 235 1 3 1 325 1 4 1 22 2 23 4 303 1 75 1 223 2 304 1 332 1 28 1 225 1 80 1 227 2 155 1 57 1 83 1 243 1 287 2 206 2 140 2 367 1 248 2 88 2 347 1 371 1 251 1 273 1 318 4 92 1 46 4 17 2 18 1 149 1 276 1 70 1 380 4 323 1 218 1 
122 1 235 1 3 1 325 1 4 1 22 2 23 4 303 1 75 1 223 2 304 1 332 1 28 1 225 1 80 1 227 2 155 1 57 1 83 1 243 1 287 2 206 2 140 2 367 1 248 2 88 2 347 1 371 1 251 1 273 1 318 4 92 1 46 4 17 2 18 1 149 1 276 1 70 1 380 4 323 1 218 1 
122 1 235 1 3 1 325 1 22 2 220 2 23 4 303 1 128 2 223 2 304 1 332 1 28 1 225 1 80 1 57 1 83 1 243 1 10 1 287 2 206 2 208 2 367 1 88 2 347 1 371 1 272 1 251 1 273 1 318 4 92 1 46 4 319 1 17 2 18 1 149 1 276 1 70 1 380 4 323 1 218 1 
235 1 122 1 3 1 325 1 4 1 22 2 23 4 75 1 303 1 304 1 332 1 223 3 198 1 28 1 225 1 80 1 227 2 155 1 57 1 83 1 243 1 287 2 140 2 206 3 367 1 248 2 88 2 347 1 371 1 251 1 273 1 318 5 92 1 46 5 17 3 18 1 149 1 276 1 70 1 380 4 323 1 218 1 
235 1 122 1 3 1 325 1 4 1 22 2 23 4 75 1 303 1 304 1 332 1 223 3 198 1 28 1 225 1 80 1 227 2 155 1 57 1 83 1 243 1 287 2 140 2 206 3 367 1 248 2 88 2 347 1 371 1 251 1 273 1 318 5 92 1 46 5 17 3 18 1 149 1 276 1 70 1 380 4 323 1 218 1 
235 1 3 1 325 1 332 1 57 1 243 1 287 2 206 2 208 2 347 1 251 1 17 2 18 1 70 1 218 1 122 1 22 2 23 4 220 2 303 1 128 2 304 1 223 2 28 1 225 1 80 1 359 1 83 1 367 1 88 2 272 1 371 1 273 1 318 4 92 1 46 4 149 1 276 1 380 4 
202 1 299 1 245 1 253 1 237 2 169 1 313 2 13 1 210 1 280 1 196 1 270 1 258 1 187 1 55 3 374 2 307 2 16 1 176 1 109 6 67 1 119 1 110 1 277 1 182 3 192 1 
253 11 237 1 324 1 169 11 24 2 222 1 280 4 240 1 55 6 307 4 201 1 109 14 33 1 309 2 338 1 60 1 182 8 202 2 156 1 157 1 313 2 13 2 210 2 314 3 270 2 116 1 374 1 16 2 47 3 67 1 72 1 192 2 277 1 
123 1 254 1 237 1 330 1 331 1 280 1 222 1 173 1 333 1 5 1 239 1 260 1 55 1 307 2 356 1 201 1 108 1 109 2 182 1 202 1 138 1 363 1 157 1 13 1 367 2 346 1 210 1 270 1 66 1 373 1 145 1 375 1 16 1 67 1 149 2 276 1 166 1 150 1 
237 2 100 2 330 2 331 1 280 7 333 2 5 3 238 2 53 2 55 10 201 1 109 20 108 2 110 1 338 4 202 3 245 1 157 1 13 3 210 3 344 2 346 2 116 2 66 3 118 1 16 3 119 1 67 3 71 1 166 3 123 2 299 1 253 7 169 7 127 2 24 2 222 1 258 1 173 2 78 1 260 1 307 6 356 2 309 2 182 10 313 8 367 3 270 3 187 1 374 4 373 1 375 1 145 2 149 3 276 1 49 1 277 3 150 1 192 3 
236 1 101 1 330 4 331 2 196 1 333 4 5 7 55 1 201 1 109 2 286 1 202 2 157 1 13 2 346 3 210 2 66 6 16 2 67 2 19 1 166 7 20 1 257 1 221 1 352 1 26 1 173 1 78 1 259 1 260 1 355 1 307 4 356 3 178 1 182 1 265 1 367 1 267 1 270 2 90 1 373 1 375 1 149 1 276 1 
253 1 169 1 24 1 280 1 222 1 55 2 307 2 228 1 109 3 309 1 182 1 202 1 313 1 342 1 13 1 40 1 367 1 210 1 270 1 116 1 374 1 373 1 375 1 16 1 67 1 149 1 276 1 192 1 277 1 
202 1 253 1 169 1 205 1 313 1 13 1 210 1 280 1 196 1 270 1 307 2 16 1 109 2 67 1 309 1 338 1 192 1 182 2 
202 1 253 1 169 1 313 1 13 1 210 1 280 1 196 1 270 1 116 1 374 1 55 2 307 2 16 1 109 2 67 1 242 1 277 1 
253 2 169 2 24 1 280 2 196 1 55 2 307 2 109 4 309 1 338 1 182 2 202 1 313 2 13 1 210 1 270 1 116 1 374 1 16 1 67 1 192 1 277 1 
202 1 253 1 169 1 205 1 313 1 13 1 101 1 210 1 280 1 270 1 307 2 16 1 109 2 67 1 309 1 338 1 192 1 182 2 
202 1 253 1 169 1 313 1 13 1 101 1 210 1 280 1 270 1 116 1 374 1 55 2 307 2 16 1 109 2 67 1 242 1 277 1 
253 2 169 2 24 1 101 1 280 2 55 2 307 2 109 4 309 1 338 1 182 2 202 1 313 2 13 1 210 1 270 1 116 1 374 1 16 1 67 1 192 1 277 1 
202 1 253 2 169 2 313 2 13 1 24 1 210 1 280 2 116 1 270 1 374 1 55 2 307 2 16 1 67 1 109 4 309 1 338 1 277 1 192 1 182 2 
123 1 237 1 127 1 330 1 331 1 173 1 333 1 5 1 55 1 307 2 356 1 201 1 109 2 108 1 182 1 202 1 157 1 13 1 367 1 346 1 210 1 270 1 66 1 145 1 16 1 67 1 149 1 166 1 
237 1 96 1 330 1 331 1 173 1 333 1 5 1 283 1 55 1 307 2 356 1 201 1 109 2 182 1 202 1 157 1 141 1 13 1 367 1 346 1 210 1 270 1 66 1 145 1 16 1 67 1 149 1 166 1 
253 2 169 2 24 1 222 1 280 2 55 2 307 2 109 4 309 1 338 1 182 2 202 1 313 2 13 1 210 1 270 1 116 1 374 1 16 1 67 1 192 1 277 1 
123 1 253 2 169 2 127 1 330 1 24 1 280 2 173 1 333 1 5 1 55 2 355 1 307 2 356 1 109 4 108 1 309 1 338 1 182 2 202 1 313 2 13 1 367 1 344 1 346 1 210 1 116 1 270 1 374 1 66 1 145 1 16 1 67 1 149 1 166 1 277 1 192 1 
253 1 169 1 24 1 222 1 280 1 55 1 307 2 228 1 109 3 309 1 338 1 230 1 182 2 202 1 313 1 342 1 13 1 367 1 210 1 116 1 270 1 373 1 375 1 16 1 67 1 149 1 276 1 277 1 192 1 
300 1 302 2 24 3 102 1 105 1 240 1 55 10 307 4 357 1 109 19 81 1 264 1 309 3 338 3 182 9 202 2 61 1 156 1 313 6 210 2 314 1 87 1 270 2 116 3 374 3 16 2 47 2 275 2 192 3 277 3 
298 1 300 1 302 1 24 3 102 2 27 1 105 1 134 1 55 12 307 6 109 26 58 1 264 1 309 3 338 2 182 14 202 3 61 2 156 2 313 4 160 1 210 3 314 2 87 1 270 3 116 2 117 1 374 2 16 3 47 2 376 2 275 4 277 2 192 3 
298 1 299 1 300 1 302 1 24 4 102 2 258 1 27 1 105 1 240 1 134 1 55 21 307 6 109 41 81 1 58 1 264 1 309 4 110 1 338 4 182 20 202 3 61 1 245 1 340 1 156 3 313 8 160 1 210 3 314 3 87 1 270 3 116 4 117 1 187 1 374 4 16 3 119 1 47 4 376 1 275 4 192 5 277 5 
298 1 299 1 300 1 302 1 24 4 102 2 258 1 27 1 105 1 240 1 134 1 55 18 307 8 109 38 81 1 58 1 264 1 309 4 110 1 338 3 182 20 202 4 61 1 245 1 340 1 156 3 313 7 160 1 210 4 314 3 87 1 270 4 116 3 117 1 187 1 374 4 16 4 119 1 47 4 376 2 275 4 192 5 277 4 
298 1 299 1 300 1 324 2 302 1 24 7 102 1 258 1 27 1 105 1 240 2 134 1 55 25 307 4 109 52 58 1 264 1 309 7 110 1 338 7 182 27 202 2 61 1 245 1 156 2 313 14 160 1 210 2 314 4 87 1 270 2 116 7 117 1 187 1 374 7 16 2 119 1 47 4 376 1 275 4 192 8 277 8 
250 1 369 1 89 1 278 1 203 1 308 1 177 1 293 1 121 1 174 1 
56 1 167 1 
369 1 133 1 278 1 203 1 261 1 308 1 171 1 121 1 174 1 
38 1 190 1 
339 1 349 1 219 1 
278 1 203 1 326 1 39 1 23 1 174 1 250 1 161 1 369 1 89 1 79 1 282 2 308 1 163 1 293 1 380 1 121 1 218 1 
278 1 203 1 326 1 39 1 23 1 174 1 250 1 161 1 369 1 89 1 79 1 282 2 308 1 163 1 293 1 380 1 121 1 218 1 
278 1 203 1 326 1 39 1 23 1 174 1 250 1 161 1 369 1 89 1 79 1 282 2 308 1 163 1 293 1 380 1 121 1 218 1 
38 1 349 1 190 1 
38 1 349 1 190 1 
339 1 219 1 
339 1 349 1 219 1 
91 1 181 1 
278 1 153 1 237 1 23 1 129 1 174 1 79 1 54 1 282 1 308 1 30 1 56 1 180 1 181 1 203 1 63 1 367 2 369 1 91 1 373 2 375 2 163 1 149 2 380 1 121 1 276 2 167 1 
256 1 330 1 222 1 333 1 5 2 259 1 55 1 307 2 356 1 201 1 109 2 182 1 202 1 113 1 157 1 13 1 207 1 247 1 367 2 346 1 210 1 267 2 270 1 66 2 274 1 16 1 67 1 19 1 149 2 276 2 166 2 
152 1 139 1 343 1 269 1 268 1 333 1 42 1 281 2 5 2 78 1 199 1 66 2 355 1 356 1 165 1 179 1 216 1 217 1 166 2 
152 1 154 1 343 1 269 1 268 1 42 1 333 1 281 2 5 1 78 1 199 1 66 1 356 1 179 1 216 1 217 1 166 1 
9 1 265 1 257 1 330 1 346 1 331 1 333 1 5 1 66 1 356 1 165 1 217 1 322 1 166 1 
152 1 139 1 343 1 269 1 268 1 333 1 42 1 281 2 5 1 78 1 199 1 66 1 356 1 165 1 179 1 216 1 217 1 166 1 
41 1 
370 1 371 1 273 1 193 1 176 1 18 1 218 1 
235 1 3 1 4 1 22 1 23 1 227 1 140 1 208 1 248 1 371 1 251 1 273 1 92 1 46 1 18 1 380 1 218 2 
235 4 95 3 193 1 3 4 328 2 330 10 195 1 331 1 333 4 5 3 334 2 53 2 335 1 246 6 159 6 208 12 346 3 64 1 116 2 14 1 15 2 251 4 66 3 162 1 18 9 69 2 295 2 166 3 218 8 301 1 22 3 23 5 303 2 24 2 173 3 355 1 356 3 262 1 309 2 37 2 231 2 140 6 370 1 371 2 273 8 92 4 46 5 189 2 380 5 93 2 94 2 151 2 192 2 277 2 
298 1 235 2 3 2 328 1 22 1 23 1 24 2 77 1 27 1 134 1 309 2 231 2 156 1 246 5 140 3 208 6 159 5 160 1 314 1 64 1 85 1 116 2 15 1 117 1 371 2 251 2 273 5 92 2 46 1 47 1 18 8 380 1 218 5 192 2 277 2 
235 1 3 1 23 1 75 1 332 1 305 1 82 1 311 1 110 1 231 2 245 1 342 1 367 1 15 1 290 1 251 1 144 1 273 2 373 1 375 1 92 1 119 1 149 1 18 2 380 1 276 1 192 2 277 1 
235 1 3 1 193 1 370 1 371 1 251 1 273 1 92 1 18 1 218 1 
231 2 246 5 140 5 159 5 208 10 24 2 116 2 15 1 53 1 273 5 18 5 309 2 192 2 218 5 277 2 
371 1 46 1 22 1 23 1 380 1 218 1 
235 2 3 2 257 1 21 1 328 2 22 2 23 3 330 1 331 2 333 1 5 4 335 1 356 1 262 2 265 1 233 1 346 1 64 2 186 1 251 1 44 1 66 4 273 2 92 2 46 4 146 1 18 2 380 3 166 4 
123 1 237 1 127 1 330 1 331 1 333 1 173 1 5 1 305 1 55 1 307 2 356 1 109 1 108 1 202 1 157 1 342 2 13 1 367 3 210 1 346 1 270 1 66 1 373 2 375 2 145 1 188 1 16 1 67 1 149 3 276 2 166 1 
235 1 3 1 328 1 140 2 246 2 159 2 208 4 64 1 371 2 251 1 187 1 273 2 92 1 18 1 218 4 
369 1 59 1 121 1 
250 1 369 1 204 1 121 1 181 1 
369 1 59 1 121 1 
369 1 59 1 121 1 
369 1 200 1 121 1 
369 1 200 1 121 1 
369 1 200 1 121 1 
369 1 121 1 
278 1 174 1 
202 2 299 1 245 1 313 3 210 2 270 2 258 1 187 1 55 4 374 2 307 4 16 2 109 8 119 1 376 1 338 1 110 1 277 1 192 1 182 4 
299 1 245 1 313 2 258 1 187 1 55 3 374 2 176 1 119 1 109 6 110 1 192 1 182 3 277 1 
202 1 313 2 24 1 210 1 116 1 270 1 374 1 55 2 307 2 16 1 109 4 310 1 309 1 338 1 277 1 192 1 182 2 
156 1 313 2 24 1 314 1 116 1 240 1 374 1 55 4 47 2 109 7 309 1 338 1 277 1 182 3 192 1 
299 1 324 1 24 2 258 1 240 1 55 12 307 4 109 23 309 2 110 2 338 4 182 11 202 2 245 1 114 1 313 9 314 2 210 2 116 2 270 2 187 1 374 5 16 2 119 2 47 2 376 2 72 1 192 3 277 3 
55 1 109 1 47 1 
109 1 314 1 182 1 
202 1 313 3 24 1 210 1 270 1 116 1 53 1 55 3 374 2 307 2 16 1 109 6 310 1 309 1 338 1 192 1 182 3 277 1 
298 1 24 2 27 1 55 6 134 1 307 2 109 12 264 1 309 2 338 1 182 6 202 1 156 1 313 2 314 1 210 1 160 1 270 1 116 2 117 1 374 1 16 1 47 1 192 2 277 2 
245 1 313 2 55 3 374 1 109 6 119 1 110 1 338 1 192 1 182 3 277 1 
202 1 299 1 114 1 313 2 210 1 258 1 270 1 374 1 55 2 307 2 16 1 119 1 109 3 376 1 338 1 110 1 182 1 
202 1 245 1 313 5 210 1 270 1 290 1 374 3 55 5 307 2 16 1 119 2 109 10 264 1 110 2 338 2 182 5 192 2 277 2 
202 1 313 1 210 1 270 1 307 2 16 1 109 2 264 1 309 1 338 1 192 1 182 2 
202 1 313 2 24 1 210 1 116 1 270 1 374 1 55 2 307 2 16 1 109 4 264 1 309 1 338 1 277 1 192 1 182 2 
202 3 114 1 313 2 210 3 270 3 55 2 374 1 307 6 16 3 109 3 119 1 376 1 81 1 264 1 110 1 338 1 182 1 
299 1 24 3 258 1 240 1 55 18 307 10 109 34 81 1 310 1 264 1 309 3 110 3 338 5 182 16 202 5 245 2 114 1 156 1 313 12 210 5 314 3 316 1 270 5 116 3 187 1 374 7 164 1 16 5 119 3 47 4 376 2 148 1 192 5 277 5 
298 1 299 1 258 1 55 4 307 2 109 8 264 1 110 1 182 4 202 1 245 1 156 1 313 2 314 1 210 1 270 1 187 1 374 2 16 1 47 1 119 1 277 1 192 1 
298 1 299 1 24 1 258 1 240 1 55 5 307 4 109 11 264 1 310 1 309 1 110 1 338 1 182 6 202 2 245 1 156 1 313 3 210 2 314 1 270 2 187 1 374 2 16 2 119 1 47 2 277 1 192 2 
298 1 299 1 24 2 258 1 27 1 134 1 55 10 307 6 109 19 310 1 264 1 309 2 110 1 338 1 182 9 202 3 245 1 156 1 313 4 314 1 210 3 160 1 270 3 116 2 117 1 187 1 374 3 16 3 119 1 47 1 376 1 192 3 277 3 
298 1 299 1 24 2 258 1 27 1 55 7 134 1 307 6 109 17 310 1 264 1 309 2 110 1 338 2 182 10 202 3 245 1 156 1 313 5 314 1 210 3 160 1 270 3 116 1 117 1 187 1 374 3 16 3 119 1 47 1 376 1 192 3 277 2 
298 1 299 1 258 1 55 4 307 2 109 8 264 1 110 1 182 4 202 1 245 1 156 1 313 2 314 1 210 1 270 1 187 1 374 2 16 1 47 1 119 1 277 1 192 1 
298 1 24 2 27 1 55 6 134 1 307 2 109 12 264 1 309 2 338 1 182 6 202 1 156 1 313 2 314 1 210 1 160 1 270 1 116 2 117 1 374 1 16 1 47 1 192 2 277 2 
298 1 299 1 24 2 258 1 27 1 134 1 55 8 307 8 109 18 310 1 264 1 309 2 110 1 338 2 182 10 202 4 245 1 156 1 313 5 160 1 210 4 314 1 270 4 116 1 117 1 187 1 374 3 16 4 119 1 47 1 376 2 192 3 277 2 
298 1 24 3 27 1 134 1 55 7 307 8 109 16 81 1 264 1 309 3 338 3 182 9 202 4 156 1 313 6 160 1 210 4 314 1 270 4 116 2 117 1 374 3 16 4 47 1 376 2 192 3 277 2 
299 1 245 1 313 6 258 2 55 4 374 3 109 7 119 3 110 3 338 3 277 1 192 1 182 3 
298 1 299 1 24 2 258 1 27 1 134 1 55 8 307 8 109 18 81 1 264 1 309 2 110 1 338 1 182 10 202 4 245 1 156 1 313 4 160 1 210 4 314 1 270 4 116 1 117 1 187 1 374 3 16 4 119 1 47 1 376 2 192 3 277 2 
237 1 149 1 367 1 83 1 276 1 213 1 345 1 
237 1 126 1 367 1 315 1 345 1 76 1 115 1 147 1 83 1 149 1 213 1 276 1 
5 1 265 1 66 1 356 1 257 1 176 1 330 1 346 1 331 1 166 1 333 1 
237 1 330 1 367 2 346 1 331 1 173 1 333 1 5 1 260 1 373 1 66 1 145 1 375 1 356 1 108 1 149 2 276 1 166 1 
122 1 237 1 330 3 367 2 346 2 332 1 173 2 333 1 5 1 260 1 373 1 66 1 145 1 375 2 356 1 108 1 69 1 243 1 149 2 276 2 262 1 166 1 37 1 
122 1 237 1 330 3 332 1 333 1 173 2 5 2 260 1 283 1 356 1 243 1 262 1 37 1 312 1 367 2 346 2 66 2 373 1 375 2 145 1 149 2 69 1 276 2 166 2 
312 1 95 1 23 2 303 1 330 4 346 1 331 1 142 1 173 1 333 1 5 3 371 1 66 3 211 1 356 1 46 1 69 1 380 2 262 1 166 3 218 1 37 1 151 1 
312 1 95 1 23 2 303 1 330 4 346 1 331 1 173 1 333 1 5 3 371 1 66 3 356 1 46 1 69 1 380 2 262 1 166 3 94 1 218 1 37 1 151 1 
5 1 66 1 356 1 221 1 166 1 333 1 
20 1 301 1 221 1 330 3 346 2 26 1 331 2 173 1 333 3 5 6 78 1 90 1 355 1 66 5 175 1 356 2 178 1 19 1 286 1 166 6 
237 2 330 1 280 1 333 1 5 1 238 1 55 3 108 1 109 6 110 1 202 2 245 1 13 2 344 1 210 2 346 1 66 1 16 2 67 2 119 1 166 1 123 1 299 1 253 1 169 1 127 1 222 1 173 1 258 1 260 1 355 1 307 4 356 1 182 3 313 2 367 2 270 2 373 1 374 2 187 1 375 1 274 1 145 1 149 2 276 1 192 1 277 1 
235 2 95 1 193 1 3 2 22 1 23 3 330 2 303 1 331 1 5 1 334 1 54 1 335 1 370 1 371 1 251 2 273 1 66 1 92 2 46 2 189 1 18 1 380 3 295 1 166 1 94 1 218 1 151 1 
301 1 221 1 330 2 346 1 173 1 333 2 5 2 14 1 355 1 66 2 356 1 166 2 151 1 
312 1 265 1 257 1 330 1 346 1 331 1 224 1 333 1 5 4 66 4 355 1 356 1 166 4 
236 1 330 1 352 1 346 1 173 1 333 2 5 2 90 1 66 2 356 1 262 1 49 1 286 1 166 2 
281 1 5 1 199 1 66 1 356 1 179 1 331 1 166 1 333 1 42 1 
247 1 330 1 346 1 333 1 5 2 78 1 355 1 66 2 356 1 19 1 166 2 
20 1 265 1 257 1 330 3 346 2 331 1 224 1 333 2 5 5 66 4 355 1 356 2 178 1 19 1 262 1 166 5 
20 1 265 1 257 1 330 3 346 2 331 1 224 1 348 1 333 2 5 5 66 4 355 1 356 2 19 1 262 1 166 5 
237 1 330 1 367 2 346 1 331 1 173 1 333 1 5 1 260 1 283 1 373 1 66 1 145 1 375 1 356 1 149 2 276 1 166 1 
301 1 330 1 346 1 173 1 333 2 5 1 90 1 66 1 175 1 356 1 262 1 286 1 166 1 
0 1 113 1 256 1 207 1 194 1 367 1 32 1 149 1 276 1 
0 1 8 1 327 1 
0 1 237 1 32 1 294 1 194 1 
122 1 0 1 8 1 237 1 327 1 23 2 303 1 194 2 332 1 271 1 371 1 54 1 45 1 32 2 57 1 243 1 294 2 380 2 218 1 
306 1 241 1 176 1 320 1 
143 1 354 1 306 1 241 1 226 1 320 1 137 1 
143 1 279 1 48 1 
183 1 341 2 143 3 354 3 306 1 241 1 226 1 212 1 377 1 137 1 320 1 360 1 
143 2 354 2 306 1 241 1 135 1 226 1 320 1 137 1 368 1 
281 1 143 1 354 1 183 1 306 1 226 1 158 1 179 1 137 1 337 1 269 1 
143 1 354 1 183 1 306 1 241 1 226 1 137 1 
143 1 354 1 183 1 241 2 226 1 320 1 137 1 
183 1 143 2 353 1 354 2 306 1 241 1 226 2 6 1 137 2 285 1 
183 1 158 1 103 1 143 3 354 3 241 1 306 2 135 2 226 1 320 1 137 1 350 1 50 1 
183 1 366 1 268 1 269 1 281 2 143 2 354 2 306 1 241 1 199 1 135 1 226 1 179 1 320 1 137 1 
183 1 158 1 25 1 368 1 103 1 143 4 354 4 241 1 306 2 135 2 226 2 320 1 137 2 
143 1 354 1 183 1 306 1 241 1 226 1 320 1 137 1 
341 1 158 1 103 1 143 4 354 4 241 2 306 3 135 2 226 1 212 1 336 1 320 2 137 1 360 1 
183 1 209 1 52 1 143 2 354 2 306 1 241 1 135 1 226 1 378 1 137 1 320 1 
183 1 341 2 143 3 354 3 306 1 241 1 226 1 212 2 191 1 137 1 320 1 360 1 
317 2 306 2 292 1 68 1 
143 1 354 1 183 1 226 1 107 1 137 1 
143 2 354 2 183 1 306 1 241 1 135 1 226 1 320 1 137 1 50 1 
321 1 
143 1 354 1 183 1 306 1 241 1 226 1 320 1 137 1 
183 1 341 1 143 3 354 3 241 1 306 1 135 1 226 1 137 1 320 1 50 1 
306 1 158 1 336 1 103 1 
306 1 241 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (162,195) (162,195) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (162,195) (162,195) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (162,195) (162,195) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (162,195) (162,195) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
213 1 162 1 154 1 141 1 350 1 101 1 271 1 195 1 287 1 
213 1 162 1 154 1 141 1 350 1 101 1 271 1 195 1 287 1 
213 1 162 1 154 1 141 1 350 1 101 1 271 1 195 1 287 1 
213 1 162 1 154 1 141 1 350 1 101 1 271 1 195 1 287 1 
213 1 70 1 168 1 350 4 361 1 247 1 104 1 262 3 188 3 287 1 87 1 131 2 241 2 154 1 157 1 101 4 41 1 92 1 
213 1 70 1 350 2 141 1 168 1 258 1 247 1 271 1 188 1 287 1 154 1 63 1 157 1 101 2 124 1 128 1 
213 2 350 3 247 1 271 1 285 1 188 2 262 1 287 2 131 1 154 1 157 1 101 3 41 1 
168 1 361 1 247 1 271 1 104 1 131 4 87 1 343 1 154 1 157 1 41 3 92 1 213 2 70 1 350 9 257 1 285 1 262 7 188 5 287 2 241 2 312 1 101 9 336 1 
168 1 361 1 247 1 271 1 104 1 131 4 87 1 343 1 154 1 157 1 41 3 92 1 213 2 70 1 350 9 257 1 285 1 262 7 188 5 287 2 241 2 312 1 101 9 336 1 
99 1 171 1 207 1 
99 1 111 1 286 2 
294 2 199 1 37 2 134 2 250 2 376 2 112 2 290 1 
22 2 24 1 294 2 150 2 199 1 339 1 169 1 1 1 172 1 250 2 2 2 152 1 296 1 33 1 229 1 133 1 38 1 37 2 179 1 134 2 155 1 252 1 346 2 112 3 68 1 93 1 8 2 349 1 45 1 283 1 376 3 331 1 163 1 334 1 219 1 291 1 290 1 
35 1 294 1 193 1 37 1 134 1 118 1 250 1 376 1 112 1 290 1 
234 1 373 1 294 1 118 1 295 1 171 1 376 1 99 1 367 1 218 1 253 1 79 1 112 1 113 1 
234 1 373 1 294 1 118 1 295 1 171 1 250 1 376 1 99 1 367 2 218 2 37 1 134 1 112 1 113 1 
293 1 208 1 367 1 218 1 89 1 
293 1 99 1 367 2 218 2 74 1 171 1 89 1 176 1 
293 1 367 1 218 1 
294 1 118 1 250 1 376 1 35 1 367 1 193 1 218 1 37 1 301 1 134 1 89 1 290 1 112 1 
99 1 
293 1 99 1 367 2 218 2 74 1 171 1 187 1 89 1 
147 1 371 2 293 2 372 1 11 1 74 1 171 1 46 1 161 1 332 2 99 1 275 1 52 1 367 5 217 2 218 5 311 1 89 2 81 1 
199 1 207 1 
197 1 8 1 294 1 349 1 150 1 250 1 283 1 2 1 296 1 376 2 331 1 229 1 309 1 78 1 334 1 134 1 155 1 68 1 112 2 93 1 
294 2 199 2 250 1 376 2 88 1 232 1 37 1 134 1 112 2 
197 1 50 1 189 1 
8 1 349 1 150 1 199 1 2 1 283 1 296 1 376 1 331 1 229 1 155 1 334 1 378 1 112 1 68 1 93 1 
294 3 78 1 37 1 199 1 134 3 250 3 376 3 112 3 
35 1 294 1 134 1 118 1 250 1 376 1 112 1 
88 1 232 1 294 1 37 1 134 1 118 1 250 1 376 1 112 1 
22 1 24 1 294 3 150 1 167 1 199 1 339 1 1 1 295 1 250 3 174 1 2 1 152 1 296 1 33 1 229 1 88 1 367 1 133 1 38 1 37 2 179 1 155 1 134 3 346 2 68 1 112 4 93 1 113 1 234 1 373 1 8 1 349 1 118 1 45 1 283 1 376 4 331 1 163 1 309 1 78 1 218 1 334 1 290 1 
294 2 78 1 199 1 256 1 134 1 250 1 79 1 376 2 112 2 
234 1 373 1 294 3 245 1 167 1 295 1 118 1 250 3 376 3 88 1 99 1 309 1 367 1 78 2 37 1 218 1 134 3 112 3 113 1 
197 1 294 2 250 2 376 2 50 1 88 1 78 1 37 1 134 2 112 2 
8 1 349 1 150 1 199 1 2 1 283 1 296 1 376 1 331 1 229 1 155 1 334 1 112 1 68 1 93 1 
8 1 349 1 150 1 199 1 2 1 272 1 283 1 296 1 376 1 331 1 229 1 123 1 334 1 112 1 93 1 
197 2 22 4 24 1 0 1 172 2 152 1 33 2 38 1 179 1 136 1 323 1 346 2 71 1 45 1 189 2 265 1 163 1 50 2 54 1 55 1 335 1 289 1 220 1 357 1 
234 1 294 1 134 1 118 1 250 1 376 1 274 1 112 1 
294 5 256 1 199 1 250 4 129 1 376 5 88 1 309 1 78 2 37 1 134 4 65 1 79 1 112 5 
35 1 294 2 134 2 118 1 250 2 274 1 376 2 112 2 
209 1 105 1 
209 1 105 1 
270 1 117 1 
270 1 117 1 
270 1 117 1 
310 1 209 1 105 1 
310 1 209 1 105 1 
95 1 209 1 105 1 
347 1 209 2 270 1 117 1 105 2 292 1 
310 1 209 1 105 1 
209 1 105 1 205 1 
209 1 105 1 205 1 
209 1 105 1 205 1 
347 1 116 1 9 3 59 1 328 2 105 2 13 1 190 1 362 2 191 1 192 1 365 2 99 1 209 2 367 2 218 2 354 2 164 2 183 1 
294 2 199 1 59 1 250 2 105 1 206 1 362 1 365 1 209 1 367 1 134 2 279 1 112 2 95 1 9 1 97 1 328 1 375 1 376 2 264 1 218 1 354 1 18 1 19 1 
70 1 168 1 92 1 
70 1 168 1 128 1 
114 1 70 3 243 1 3 1 92 2 128 1 
70 2 243 1 3 1 92 1 358 1 128 1 
70 2 243 2 3 1 92 1 128 1 
293 1 58 1 0 1 171 1 206 1 300 2 367 5 368 1 111 1 181 1 89 4 137 1 279 1 371 1 327 1 74 1 11 3 286 3 264 1 288 2 332 1 265 1 51 1 99 2 308 1 52 1 217 1 218 5 55 1 289 1 81 2 359 2 
147 1 293 6 58 2 0 3 249 1 171 1 319 5 364 1 300 6 208 5 367 9 251 1 368 2 111 3 181 1 279 4 89 7 94 1 371 2 10 1 282 1 74 1 11 8 286 9 288 6 332 2 265 3 51 3 99 5 52 1 217 2 218 9 55 3 289 3 81 6 
147 1 58 1 0 1 171 1 300 2 367 3 368 1 111 2 89 2 137 1 279 1 371 1 11 3 286 4 332 1 288 2 265 1 99 3 51 1 308 1 217 1 218 3 55 1 289 1 359 1 81 2 
147 1 58 1 0 2 171 1 249 1 364 1 300 4 367 4 251 1 368 1 111 3 137 1 279 2 89 3 371 1 11 5 286 7 288 4 332 1 265 2 99 4 51 2 308 1 217 1 218 4 55 2 289 2 359 2 81 4 
322 1 207 1 93 1 
156 1 93 1 
337 1 
283 1 93 1 
229 1 322 2 202 1 17 1 283 1 93 3 
229 1 283 1 93 1 
318 1 93 1 
22 7 30 1 44 1 170 1 151 1 12 1 172 4 186 1 297 1 260 2 33 3 55 1 335 3 289 1 324 1 220 2 80 1 
22 7 30 1 44 1 170 1 151 1 12 1 172 4 186 1 297 1 260 2 33 3 55 1 335 3 289 1 324 1 220 2 80 1 
22 7 30 1 44 1 170 1 151 1 12 1 172 4 186 1 297 1 260 2 33 3 377 1 55 1 335 3 289 1 324 1 220 2 80 1 
22 37 338 1 24 1 30 1 0 3 170 1 151 2 172 19 248 1 297 5 175 4 299 1 341 1 33 18 38 1 179 1 110 1 324 9 346 2 67 1 326 1 44 5 374 3 45 1 12 2 186 2 260 2 330 1 51 3 265 3 55 6 335 17 289 6 220 8 80 1 
20 1 22 9 24 2 30 1 170 1 172 5 151 1 297 1 299 1 33 4 38 2 179 2 324 1 346 4 159 1 44 1 45 2 12 1 186 1 260 2 55 1 335 4 289 1 220 3 
314 1 23 1 150 1 168 1 27 1 247 1 271 1 2 1 296 1 154 1 178 1 157 1 39 1 90 1 92 1 213 1 114 1 8 1 70 2 350 2 329 1 188 1 262 1 120 1 47 1 287 1 194 1 334 1 101 2 128 1 
314 1 103 1 23 1 150 1 168 1 247 1 271 1 2 1 296 1 108 1 178 1 157 1 39 1 90 1 92 1 213 1 114 1 8 1 70 2 350 3 237 1 329 1 188 1 262 2 120 1 287 1 194 1 334 1 101 3 128 1 
314 1 23 1 150 1 168 1 247 1 271 1 2 1 296 1 108 1 157 1 39 1 90 1 92 1 114 1 8 1 70 2 350 2 237 1 188 1 262 2 120 1 194 1 334 1 101 2 128 1 
314 2 213 1 103 1 149 1 8 1 349 1 150 1 350 1 351 1 271 2 283 1 2 1 296 1 4 1 120 2 287 1 231 1 333 1 366 1 194 2 334 1 101 1 93 1 
314 1 23 1 150 1 168 1 271 1 2 1 296 1 108 1 154 1 178 1 39 1 90 1 92 1 213 1 114 1 8 1 70 2 350 1 329 1 120 1 47 1 287 1 194 1 334 1 101 1 128 1 
223 1 
293 6 58 1 149 1 150 2 294 1 60 1 340 1 295 1 2 2 296 1 204 1 342 2 111 2 253 1 112 1 113 1 7 1 8 2 349 2 254 1 74 3 11 2 215 1 118 1 75 2 217 1 218 5 266 1 356 1 125 2 79 1 81 2 21 1 226 2 171 1 317 1 228 4 231 1 367 5 135 2 139 2 93 1 371 1 234 1 373 1 283 1 284 2 98 1 286 2 376 1 240 1 332 1 99 2 52 1 334 1 
293 2 294 1 295 1 317 1 228 2 367 3 253 1 139 1 112 1 113 1 7 1 234 1 373 1 215 1 118 1 74 1 187 1 376 1 240 1 218 3 266 1 79 1 
293 1 294 1 295 1 171 1 317 1 228 3 342 1 367 3 253 1 112 1 113 1 7 1 234 1 373 1 215 1 118 1 74 1 187 1 376 1 240 1 99 1 218 3 266 1 79 1 
293 2 294 1 295 1 171 1 317 1 228 3 342 1 367 3 253 1 135 1 139 1 112 1 113 1 7 1 234 1 373 1 74 1 215 1 118 1 187 1 376 1 240 1 99 1 218 3 266 1 79 1 
293 7 315 1 294 1 60 1 340 1 226 2 295 1 171 5 317 1 228 6 342 4 367 5 64 1 211 1 111 2 253 1 135 4 345 1 140 1 139 4 112 1 113 1 371 1 7 1 234 1 373 1 11 1 215 1 74 3 118 1 187 1 284 2 75 2 376 1 240 1 332 1 99 5 52 1 217 1 218 5 266 1 125 2 79 1 81 1 
293 4 294 1 340 1 60 1 295 1 204 1 342 2 111 2 253 1 112 1 113 1 7 1 118 1 215 1 11 1 74 2 75 2 217 1 218 4 266 1 79 1 125 2 81 1 226 2 171 1 228 4 317 1 367 4 135 2 139 2 234 1 371 1 373 1 284 2 376 1 286 2 240 1 332 1 99 2 52 1 
293 4 294 1 60 1 340 1 226 2 295 1 171 1 317 1 228 4 342 2 367 4 64 1 211 1 111 2 135 2 253 1 345 1 139 2 112 1 113 1 371 1 7 1 234 1 373 1 74 2 11 1 215 1 118 1 284 2 75 2 376 1 240 1 332 1 99 1 52 1 217 1 218 4 266 1 125 2 79 1 81 1 
293 4 294 1 60 1 340 1 226 2 295 1 171 1 317 1 228 4 342 2 367 4 64 1 211 1 111 2 135 2 253 1 345 1 139 2 112 1 113 1 371 1 7 1 234 1 373 1 74 2 11 1 215 1 118 1 284 2 75 2 376 1 240 1 332 1 99 1 52 1 217 1 218 4 266 1 125 2 79 1 81 1 
293 4 294 1 60 1 225 2 295 1 203 1 171 1 317 1 228 4 106 1 107 1 342 2 367 4 276 2 211 1 135 2 253 1 139 2 112 1 113 1 371 1 7 1 234 1 373 1 74 2 11 1 215 1 118 1 75 2 286 2 376 1 240 1 332 1 99 1 52 1 217 1 218 4 266 1 125 2 79 1 81 1 
293 5 294 1 315 1 60 1 340 1 226 2 295 1 171 1 317 1 228 5 342 3 367 4 64 1 211 1 111 2 253 1 135 3 345 1 139 3 112 1 113 1 371 1 7 1 234 1 373 1 74 2 11 1 215 1 118 1 284 2 75 2 376 1 240 1 332 1 99 1 52 1 217 1 218 4 266 1 125 2 79 1 81 1 
293 5 294 1 315 1 60 1 340 1 226 2 295 1 171 1 317 1 228 5 342 3 367 4 64 1 211 1 111 2 253 1 135 3 345 1 139 3 112 1 113 1 371 1 7 1 234 1 373 1 74 2 11 1 215 1 118 1 284 2 75 2 376 1 240 1 332 1 99 1 52 1 217 1 218 4 266 1 125 2 79 1 81 1 
293 4 294 1 60 1 295 1 106 1 204 1 342 2 253 1 112 1 113 1 7 1 118 1 215 1 11 1 74 2 75 2 217 1 218 4 266 1 79 1 125 2 81 1 225 2 171 1 228 4 317 1 367 4 276 2 135 2 139 2 234 1 371 1 373 1 376 1 286 2 240 1 332 1 99 1 52 1 
197 1 22 6 24 1 199 2 30 1 170 1 151 1 172 3 297 1 152 1 207 1 33 3 38 1 179 1 323 1 346 2 44 1 45 1 260 1 189 1 50 1 163 1 55 1 335 2 289 1 220 2 
197 11 22 14 24 2 338 1 199 1 339 1 29 1 0 2 172 8 152 1 175 3 33 6 85 1 320 1 38 2 110 1 179 2 252 1 324 1 346 4 374 3 45 2 352 1 144 1 189 11 163 2 51 2 50 4 265 1 55 2 335 2 289 1 220 1 
22 2 24 1 150 1 294 1 199 1 201 1 339 1 200 1 250 1 172 1 2 1 296 1 152 1 33 1 229 1 38 1 155 1 179 1 134 1 252 1 346 2 68 1 112 2 93 1 8 1 349 1 255 1 352 1 45 1 283 1 376 2 331 1 50 1 163 1 309 1 78 1 334 1 378 1 
197 7 150 3 294 1 199 2 339 1 0 2 1 2 151 1 250 1 2 3 297 1 152 3 296 2 108 1 155 2 252 1 346 6 112 3 68 2 6 2 8 3 349 1 352 1 260 1 121 1 14 1 163 3 265 2 309 1 78 1 220 4 22 20 24 3 30 1 170 1 173 2 172 10 32 2 33 10 86 1 363 2 229 2 38 3 134 1 179 3 324 4 93 2 44 1 45 3 283 2 189 7 376 3 331 2 50 7 51 2 334 2 55 3 335 8 289 3 
22 2 24 2 149 1 360 1 294 1 150 8 339 1 27 1 26 1 250 1 172 1 2 8 296 2 152 2 130 1 33 1 231 1 108 1 38 2 134 1 179 2 182 1 252 1 323 1 346 4 112 1 93 3 8 7 349 2 142 1 45 2 283 2 376 1 122 1 163 2 78 1 334 2 166 1 291 2 
197 1 22 3 24 1 294 1 0 1 250 1 172 1 152 1 33 2 88 1 37 1 38 1 179 1 134 1 346 2 112 1 325 1 45 1 352 1 189 1 376 1 50 1 163 1 51 1 265 1 55 1 335 1 289 1 220 1 
197 1 22 2 24 1 71 1 0 1 45 1 172 2 152 1 189 1 50 1 163 1 38 1 179 1 55 1 335 1 324 1 323 1 346 2 
197 1 22 2 24 1 45 1 152 1 189 1 33 2 50 1 163 1 265 1 38 1 179 1 54 1 335 1 323 1 289 1 220 1 346 2 
197 2 22 4 24 1 0 1 172 2 152 1 33 2 38 1 179 1 323 1 324 1 346 2 45 1 189 2 51 1 163 1 50 2 265 1 55 1 335 2 289 1 220 1 
197 1 22 2 24 1 71 1 0 1 45 1 172 2 152 1 189 1 122 1 50 1 163 1 38 1 179 1 55 1 335 1 324 1 346 2 
197 1 22 2 24 1 45 1 152 1 189 1 33 2 122 1 50 1 163 1 265 1 38 1 179 1 54 1 335 1 289 1 220 1 346 2 
197 2 22 4 24 1 0 1 172 2 152 1 33 2 38 1 179 1 324 1 346 2 45 1 189 2 122 1 51 1 163 1 50 2 265 1 55 1 335 2 289 1 220 1 
197 2 22 4 24 1 0 1 172 2 152 1 33 2 38 1 179 1 324 1 346 2 45 1 189 2 51 1 163 1 50 2 265 1 55 1 335 2 289 1 220 1 
22 2 24 1 150 1 199 1 339 1 1 1 172 1 2 1 296 1 152 1 33 1 229 1 38 1 155 1 179 1 252 1 346 2 68 1 112 1 93 1 8 1 349 1 45 1 283 1 376 1 331 1 163 1 334 1 
22 2 24 1 150 1 199 1 339 1 172 1 316 1 272 1 2 1 296 1 152 1 33 1 229 1 38 1 179 1 252 1 346 2 112 1 93 1 8 1 349 1 45 1 283 1 376 1 331 1 123 1 163 1 334 1 
197 2 22 4 24 1 0 1 172 2 152 1 33 2 38 1 179 1 324 1 346 2 45 1 352 1 189 2 51 1 163 1 50 2 265 1 55 1 335 2 289 1 220 1 
197 2 22 4 24 1 150 1 0 1 27 1 1 1 172 2 173 1 2 1 296 1 152 1 33 2 229 1 38 1 155 1 179 1 324 1 346 2 68 1 112 1 93 1 8 1 45 1 283 1 189 2 376 1 331 1 265 1 50 2 163 1 51 1 334 1 55 1 335 2 289 1 220 1 
197 1 22 3 24 1 294 1 0 1 250 1 172 2 152 1 33 1 88 1 37 1 38 1 179 1 134 1 302 1 324 1 346 2 112 1 45 1 352 1 189 1 376 1 265 1 163 1 51 1 50 1 55 1 335 1 289 1 
22 19 24 2 338 1 0 3 172 9 175 2 298 1 33 10 62 1 38 2 109 1 321 2 110 1 179 2 5 1 324 3 346 4 40 1 348 2 159 1 374 1 45 2 51 3 265 3 145 1 55 3 335 6 289 3 220 3 268 1 
82 1 22 26 24 3 25 1 0 3 172 14 175 2 299 2 298 2 33 12 62 2 38 3 321 4 179 3 110 2 324 2 346 6 40 1 348 1 159 1 73 1 374 2 45 3 353 1 51 3 265 2 145 1 55 3 335 4 56 1 289 2 220 2 196 1 268 1 
82 1 22 41 24 3 338 1 25 1 30 1 0 4 170 1 151 1 172 20 297 1 175 4 299 1 298 1 33 21 62 2 38 3 321 4 110 3 179 3 5 1 324 4 346 6 40 1 348 1 159 1 44 1 73 1 374 3 353 1 45 3 260 1 51 4 265 4 145 1 55 5 56 1 335 8 289 5 220 4 126 1 196 1 268 1 
82 1 22 38 24 4 338 1 25 1 30 1 0 4 170 1 151 1 172 20 297 1 175 4 299 2 298 1 33 18 62 2 38 4 321 4 110 3 179 4 5 1 324 3 346 8 40 1 348 1 159 1 44 1 73 1 374 3 353 1 45 4 260 1 51 4 265 3 145 1 55 5 56 1 335 7 289 4 220 4 126 1 196 1 268 1 
82 1 22 52 24 2 338 2 25 1 30 1 0 7 170 1 151 1 172 27 297 1 175 4 299 1 298 1 33 25 62 1 38 2 321 4 110 2 179 2 324 7 346 4 40 1 348 1 159 1 44 1 73 1 374 4 353 1 45 2 260 1 144 2 51 7 265 7 145 1 55 8 56 1 335 14 289 8 220 7 196 1 268 1 
347 1 365 1 209 1 354 1 328 1 105 1 13 1 221 1 362 1 191 1 
95 1 19 1 
365 1 209 1 354 1 165 1 328 1 105 1 379 1 370 1 362 1 
347 1 9 2 59 1 328 1 105 1 13 1 190 1 362 1 191 1 192 1 365 1 99 1 209 1 367 1 218 1 354 1 164 1 183 1 
347 1 9 2 59 1 328 1 105 1 13 1 190 1 362 1 191 1 192 1 365 1 99 1 209 1 367 1 218 1 354 1 164 1 183 1 
347 1 9 2 59 1 328 1 105 1 13 1 190 1 362 1 191 1 192 1 365 1 99 1 209 1 367 1 218 1 354 1 164 1 183 1 
310 1 292 1 69 1 
310 1 292 1 69 1 
153 1 205 1 
153 1 205 1 292 1 
18 1 375 1 
294 2 199 1 250 2 105 1 206 1 362 1 365 1 209 1 367 1 134 2 89 1 279 1 112 2 95 1 72 1 9 1 97 1 328 1 375 1 376 2 190 1 264 1 218 1 354 1 164 1 18 1 19 1 
310 1 69 1 
153 1 205 1 292 1 
22 2 24 1 360 1 150 2 294 2 339 1 172 1 2 2 296 1 152 1 33 1 38 1 179 1 252 1 346 2 158 1 112 2 93 1 305 1 214 1 8 2 142 1 352 1 119 1 45 1 283 1 376 2 163 1 334 1 291 2 222 1 
314 1 114 1 70 2 8 2 23 1 150 2 83 1 168 1 27 1 224 1 2 2 296 1 108 1 178 1 334 1 278 1 39 1 92 1 128 1 
314 1 114 1 70 2 8 1 23 1 150 1 83 1 168 1 2 1 296 1 16 1 108 1 178 1 334 1 39 1 92 1 128 1 
314 1 8 1 149 1 349 1 150 1 224 1 283 1 2 1 296 1 216 1 333 1 231 1 334 1 93 1 
314 1 114 1 70 2 8 1 23 1 150 1 83 1 168 1 224 1 2 1 296 1 108 1 178 1 334 1 278 1 39 1 92 1 128 1 
355 1 
99 1 275 1 11 1 171 1 207 1 81 1 161 1 
293 1 340 1 226 1 171 1 367 1 111 1 371 1 11 1 74 1 284 1 286 1 332 1 99 2 52 1 217 1 218 1 81 1 
58 2 293 5 150 3 0 2 295 2 2 3 296 3 300 6 156 3 111 6 212 2 304 2 6 2 8 3 349 1 11 9 74 3 261 1 77 1 161 1 15 1 307 2 265 2 217 4 218 5 17 1 356 1 81 8 27 1 28 1 171 2 227 1 318 2 229 3 275 1 367 5 322 2 277 2 138 2 184 2 93 10 371 4 283 3 286 12 332 4 49 2 288 6 99 8 51 2 53 2 52 4 334 4 55 2 289 2 
58 1 293 1 25 1 0 2 171 2 175 1 61 1 300 5 367 1 110 1 277 2 111 3 184 1 371 2 73 1 74 1 11 8 374 1 353 1 286 6 288 5 332 2 99 5 51 2 265 2 52 2 217 2 218 1 55 2 56 1 356 1 244 1 289 2 196 1 81 5 
294 1 151 1 250 1 297 1 341 1 35 1 367 1 64 1 37 1 301 1 134 1 277 2 184 1 112 1 371 1 44 1 118 1 11 2 376 1 332 1 52 1 193 1 217 1 218 1 55 2 289 1 290 1 81 2 
371 1 11 1 171 1 161 1 332 1 99 1 52 1 275 1 217 1 81 1 
6 1 0 2 11 5 286 10 288 5 51 2 99 5 265 2 300 5 277 2 55 2 111 5 289 2 184 1 81 5 
293 1 99 1 367 1 218 1 74 1 171 1 
147 1 58 2 293 4 21 1 149 1 150 4 227 2 2 4 296 1 273 1 231 1 367 3 93 1 371 2 8 4 349 2 11 2 74 2 283 1 98 1 332 2 15 1 52 1 217 2 218 3 334 1 313 1 356 2 81 2 
22 1 24 1 150 1 294 2 199 1 339 1 1 1 250 2 2 1 296 1 152 1 33 1 229 1 133 1 38 1 37 2 179 1 134 2 155 1 346 2 112 3 68 1 93 1 8 1 349 1 45 1 283 1 376 3 331 1 163 1 334 1 290 1 
371 1 58 1 11 1 171 2 260 1 286 4 288 2 332 1 99 4 300 2 52 1 217 1 111 2 356 1 81 2 
328 1 362 1 48 1 
328 1 362 1 48 1 
233 1 328 1 18 1 13 1 362 1 
328 1 362 1 48 1 
198 1 328 1 362 1 
198 1 328 1 362 1 
198 1 328 1 362 1 
328 1 362 1 
209 1 105 1 
22 8 24 2 30 1 44 1 170 1 151 1 172 4 45 2 260 1 297 1 299 1 33 4 38 2 179 2 55 1 335 3 289 1 324 1 220 2 346 4 
22 6 30 1 44 1 170 1 151 1 172 3 260 1 297 1 33 3 207 1 55 1 335 2 289 1 220 2 
22 4 24 1 0 1 45 1 172 2 33 2 265 1 51 1 242 1 38 1 179 1 55 1 335 2 289 1 324 1 220 1 346 2 
22 7 338 1 0 1 374 1 172 3 175 2 33 4 265 1 51 1 110 1 55 1 335 2 289 1 324 1 220 1 
22 23 338 1 24 2 30 1 0 2 170 1 151 1 172 11 297 2 175 2 299 2 33 12 85 1 38 2 179 2 324 4 346 4 185 1 44 2 374 2 45 2 260 1 144 1 51 2 265 2 55 3 335 9 289 3 220 5 
22 1 175 1 33 1 
22 1 374 1 172 1 
6 1 22 6 24 1 0 1 45 1 172 3 33 3 51 1 265 1 38 1 242 1 179 1 55 1 335 3 324 1 289 1 220 2 346 2 
22 12 24 1 25 1 0 2 172 6 175 1 33 6 38 1 110 1 179 1 324 1 346 2 159 1 374 1 73 1 353 1 45 1 51 2 265 2 55 2 56 1 335 2 289 2 220 1 196 1 
22 6 44 1 151 1 172 3 297 1 33 3 55 1 335 2 289 1 324 1 220 1 
22 3 24 1 30 1 44 1 170 1 172 1 45 1 297 1 299 1 33 2 38 1 179 1 335 2 324 1 220 1 346 2 185 1 
159 1 22 10 24 1 44 2 45 1 172 5 151 1 297 2 341 1 33 5 38 1 179 1 55 2 335 5 324 2 289 2 220 3 346 2 
159 1 22 2 24 1 0 1 45 1 172 2 38 1 179 1 55 1 335 1 324 1 346 2 
159 1 22 4 24 1 0 1 45 1 172 2 33 2 265 1 51 1 38 1 179 1 55 1 335 2 289 1 324 1 220 1 346 2 
22 3 159 1 24 3 44 1 45 3 172 1 297 1 299 1 33 2 38 3 179 3 5 1 335 2 324 1 220 1 346 6 185 1 
22 27 24 4 338 1 30 1 0 3 170 1 151 1 248 1 172 13 297 2 175 4 299 1 33 14 38 4 110 1 179 4 5 1 324 5 346 8 159 1 326 1 44 2 374 3 45 4 260 1 330 1 51 3 265 3 242 1 55 4 335 10 289 4 220 5 
22 8 24 1 30 1 170 1 172 4 151 1 297 1 175 1 33 4 38 1 110 1 179 1 346 2 159 1 44 1 374 1 353 1 45 1 260 1 55 1 335 2 289 1 220 2 
22 11 24 2 338 1 30 1 0 1 170 1 151 1 172 6 297 1 175 2 33 5 38 2 110 1 179 2 324 1 346 4 159 1 44 1 374 1 353 1 45 2 260 1 51 1 242 1 55 2 335 3 289 1 220 2 
22 19 24 3 25 1 30 1 0 2 170 1 151 1 172 9 297 1 175 1 299 1 33 10 38 3 110 1 179 3 324 1 346 6 159 1 44 1 73 1 374 1 353 1 45 3 260 1 51 2 265 2 242 1 55 3 56 1 335 4 289 3 220 3 196 1 
22 17 24 3 25 1 30 1 0 2 170 1 151 1 172 10 297 1 175 1 299 1 33 7 38 3 110 1 179 3 324 2 346 6 159 1 44 1 374 1 73 1 353 1 45 3 260 1 51 2 265 1 242 1 55 3 56 1 335 5 289 2 220 3 196 1 
22 8 24 1 30 1 170 1 172 4 151 1 297 1 175 1 33 4 38 1 110 1 179 1 346 2 159 1 44 1 374 1 353 1 45 1 260 1 55 1 335 2 289 1 220 2 
22 12 24 1 25 1 0 2 172 6 175 1 33 6 38 1 110 1 179 1 324 1 346 2 159 1 374 1 73 1 353 1 45 1 51 2 265 2 55 2 56 1 335 2 289 2 220 1 196 1 
22 18 24 4 25 1 30 1 0 2 170 1 151 1 172 10 297 1 175 1 299 2 33 8 38 4 110 1 179 4 324 2 346 8 159 1 44 1 73 1 374 1 353 1 45 4 260 1 51 2 265 1 242 1 55 3 56 1 335 5 289 2 220 3 196 1 
22 16 24 4 25 1 0 3 172 9 175 1 299 2 33 7 38 4 110 1 179 4 5 1 324 3 346 8 159 1 73 1 374 1 353 1 45 4 51 3 265 2 55 3 56 1 335 6 289 2 220 3 196 1 
22 7 30 2 44 3 170 1 151 1 172 3 297 3 33 4 55 1 335 6 289 1 324 3 220 3 
22 18 24 4 25 1 30 1 0 2 170 1 151 1 172 10 297 1 175 1 299 2 33 8 38 4 110 1 179 4 5 1 324 1 346 8 159 1 44 1 73 1 374 1 353 1 45 4 260 1 51 2 265 1 55 3 56 1 335 4 289 2 220 3 196 1 
281 1 294 1 199 1 256 1 79 1 376 1 112 1 
281 1 42 1 294 1 199 1 256 1 31 1 76 1 376 1 180 1 267 1 79 1 112 1 
149 1 231 1 8 1 150 1 349 1 334 1 283 1 2 1 296 1 207 1 93 1 
8 1 294 1 349 1 150 1 199 1 250 1 283 1 2 1 296 1 376 2 331 1 229 1 78 1 334 1 134 1 112 2 68 1 93 1 
234 1 373 1 8 1 294 2 150 1 199 1 118 1 250 1 318 1 283 2 227 1 2 1 296 1 376 2 331 1 229 2 78 1 334 1 134 2 304 1 112 2 68 1 93 3 
269 1 150 2 294 2 199 1 250 1 272 1 2 2 227 1 318 1 296 1 229 2 134 2 112 2 304 1 93 3 234 1 8 2 373 1 118 1 283 2 376 2 331 1 78 1 334 1 
293 1 269 1 150 3 295 1 171 1 2 3 227 1 318 1 296 1 229 1 367 2 156 1 322 1 304 1 93 4 8 3 349 1 239 1 283 1 263 1 99 1 218 2 334 1 
293 1 8 3 269 1 349 1 150 3 295 1 171 1 318 1 283 1 227 1 2 3 296 1 229 1 99 1 367 2 218 2 334 1 156 1 322 1 212 1 304 1 93 4 
8 1 150 1 334 1 182 1 2 1 296 1 
148 1 8 6 360 1 349 2 150 7 27 1 26 1 306 1 2 7 283 2 296 2 130 1 229 1 108 1 334 3 182 1 166 1 17 1 291 1 57 1 93 3 
197 1 150 1 294 1 199 2 1 1 250 1 151 1 2 1 152 2 296 1 297 1 155 1 346 4 68 1 112 2 8 1 119 1 352 1 260 1 163 2 78 1 220 2 22 6 24 2 27 1 30 1 170 1 173 1 172 3 33 3 363 1 229 1 38 2 134 1 179 2 93 1 44 1 45 2 283 1 189 1 376 2 331 1 50 1 334 1 55 1 335 2 289 1 
293 2 150 1 295 1 171 1 2 1 275 1 367 3 156 1 322 1 89 1 212 1 93 2 371 2 8 1 349 1 11 1 74 1 161 1 332 2 15 1 49 1 99 1 307 1 52 2 53 1 217 2 218 3 81 1 
8 2 150 2 27 1 2 2 283 1 296 1 77 1 229 1 334 2 322 1 182 1 17 1 93 2 
8 4 149 1 269 1 349 1 150 4 27 1 2 4 283 1 296 1 132 1 231 1 334 1 93 1 
148 1 8 2 150 2 227 1 2 2 283 1 296 1 177 1 86 1 229 1 334 2 369 1 57 1 93 1 
70 1 23 1 8 1 150 1 349 1 168 1 334 1 2 1 296 1 128 1 
8 2 150 2 360 1 27 1 2 2 283 1 296 1 108 1 334 1 158 1 93 1 
149 1 8 4 349 1 150 5 360 1 27 1 227 1 2 5 283 2 296 2 130 1 132 1 231 1 334 2 166 1 93 3 
149 1 8 4 349 1 150 5 360 1 27 1 227 1 2 5 283 2 296 2 130 1 132 1 231 1 210 1 334 2 93 3 
8 1 294 1 349 1 150 1 199 1 250 1 283 1 2 1 272 1 296 1 376 2 331 1 229 1 78 1 334 1 134 1 112 2 93 1 
148 1 8 1 150 1 306 1 227 1 2 1 283 1 296 1 229 1 334 2 17 1 57 1 93 1 
230 1 96 1 199 1 238 1 127 1 
234 1 373 1 43 1 96 2 167 1 199 1 143 1 295 1 118 1 171 1 238 2 99 1 230 2 367 2 218 2 89 1 146 1 127 1 113 1 
305 1 214 1 294 1 238 1 376 1 230 1 127 1 112 1 222 1 
43 1 143 1 127 1 
157 1 247 1 188 1 207 1 
213 1 350 1 157 1 247 1 101 1 188 1 287 1 
350 1 271 1 120 1 
235 1 213 1 350 3 247 1 188 1 287 1 34 1 154 1 63 2 101 3 157 1 66 1 
241 1 213 1 350 2 157 1 247 1 101 2 188 1 262 1 287 1 
213 1 70 1 350 1 168 1 188 1 287 1 87 1 131 1 154 1 101 1 92 1 
213 1 154 1 350 1 157 1 101 1 188 1 287 1 
213 1 154 1 350 1 157 2 247 1 101 1 287 1 
213 2 350 2 259 1 188 1 287 2 36 1 154 1 157 1 101 2 91 1 
213 1 350 3 257 1 247 1 262 2 188 2 287 1 131 1 154 1 157 1 101 3 336 1 41 1 
213 1 114 1 70 2 350 2 168 1 247 1 188 1 262 1 287 1 154 1 157 1 101 2 303 1 128 1 92 1 
213 2 350 4 361 1 247 1 262 2 188 2 287 2 131 1 241 1 154 1 157 1 101 4 41 1 
213 1 154 1 350 1 157 1 247 1 101 1 188 1 287 1 
213 1 350 4 247 2 262 2 188 3 34 1 287 1 131 1 63 1 344 1 157 2 101 4 66 1 41 1 
213 1 350 2 236 1 84 1 247 1 188 1 262 1 287 1 343 1 154 1 157 1 101 2 
213 1 350 3 160 1 247 1 188 1 34 1 287 1 154 1 63 2 101 3 157 1 66 2 
115 2 246 1 188 2 102 1 
213 1 154 1 350 1 101 1 280 1 287 1 
213 1 154 1 350 2 257 1 157 1 247 1 101 2 188 1 262 1 287 1 
100 1 
213 1 154 1 350 1 157 1 247 1 101 1 188 1 287 1 
213 1 350 3 257 1 247 1 262 1 188 1 287 1 154 1 63 1 101 3 157 1 
344 1 188 1 131 1 41 1 
157 1 188 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 2 204 2 131 5 247 1 176 6 32 1 361 1 163 2 136 1 330 2 189 4 92 1 140 9 261 1 16 3 334 9 170 1 306 1 18 2 94 1 350 1 372 1 119 2 20 1 122 1 220 2 197 1 198 1 
341 2 204 2 131 5 247 1 176 6 32 1 361 1 163 2 136 1 330 2 189 4 92 1 140 9 261 1 16 3 334 9 170 1 306 1 18 2 94 1 350 1 372 1 119 2 20 1 122 1 220 2 197 1 198 1 
341 2 204 2 131 6 247 1 176 7 32 1 361 1 163 2 136 1 330 2 189 5 92 1 140 10 261 1 16 4 334 10 170 1 306 1 18 2 94 1 350 1 372 1 119 2 20 1 122 1 220 2 197 1 198 1 
341 2 204 2 131 4 247 1 176 4 32 1 361 1 163 2 136 1 330 2 189 3 140 7 261 1 16 2 334 7 170 1 306 1 18 2 94 1 350 1 372 1 119 1 20 1 122 1 220 2 197 1 198 1 
189 2 92 1 341 1 204 1 140 4 131 3 176 3 16 1 334 4 18 1 94 1 350 1 372 1 119 2 361 1 163 1 220 1 197 1 
204 1 366 1 131 1 140 2 334 2 170 1 306 1 18 1 94 1 372 1 121 1 107 1 163 1 220 1 197 1 330 1 
189 1 204 2 140 3 131 2 176 1 16 1 334 3 32 1 94 1 372 1 163 2 197 1 330 1 
341 1 204 2 131 5 176 7 51 1 32 1 361 1 163 2 330 1 189 4 92 1 140 9 16 3 334 9 18 1 94 1 350 1 372 1 119 2 69 1 122 1 220 1 197 1 198 1 
341 1 204 2 131 5 176 7 51 1 32 1 361 1 163 2 330 1 189 4 92 1 140 9 16 3 334 9 18 1 94 1 350 1 372 1 119 2 69 1 122 1 220 1 197 1 198 1 
213 1 319 1 123 1 
213 1 272 2 93 1 
6 2 269 1 290 2 50 2 228 2 273 2 26 2 110 1 
268 1 201 1 75 1 203 1 244 1 269 1 245 1 290 2 50 2 246 1 103 1 273 2 275 1 4 1 5 1 6 3 34 2 255 1 228 3 56 1 359 1 281 1 110 1 38 1 167 2 116 2 236 2 67 1 45 1 267 1 143 1 144 1 24 1 311 2 71 1 26 2 338 1 
6 1 269 1 290 1 50 1 228 1 153 1 273 1 274 1 26 1 98 1 
223 1 213 1 114 1 273 1 132 1 370 1 216 1 217 1 106 1 6 1 228 1 123 1 98 1 124 1 
223 1 213 1 50 1 290 1 114 1 132 2 273 1 216 1 217 2 6 1 228 1 123 1 26 1 98 1 124 1 
9 1 132 1 97 1 63 1 217 1 
213 1 9 1 225 1 346 1 123 1 132 2 97 1 217 2 
9 1 132 1 217 1 
269 1 50 1 290 1 153 1 132 1 274 1 273 1 217 1 6 1 228 1 336 1 26 1 98 1 97 1 
213 1 
200 1 213 1 9 1 225 1 123 1 132 2 97 1 217 2 
256 1 147 1 213 1 318 1 102 2 225 1 367 1 302 1 132 5 369 1 235 2 217 5 8 1 210 2 9 2 279 1 123 1 362 1 97 2 
319 1 110 1 
127 1 50 1 290 1 273 2 6 2 228 2 26 1 381 1 110 2 
301 1 2 1 343 1 
246 1 236 1 5 1 6 1 34 1 228 1 351 1 255 1 267 1 143 1 56 1 144 1 311 1 24 1 71 1 110 1 
137 1 290 1 246 1 301 1 273 1 5 1 236 1 6 2 34 1 193 1 255 1 228 2 56 1 267 1 143 1 144 1 24 1 311 1 71 1 26 1 
6 3 50 1 193 1 290 3 228 3 273 3 26 3 110 1 
6 1 290 1 228 1 153 1 273 1 26 1 98 1 
6 1 127 1 290 1 50 1 228 1 273 1 26 1 98 1 381 1 
75 1 223 1 203 1 127 1 244 1 269 1 245 1 50 2 290 3 246 1 103 1 273 3 132 1 275 1 5 1 6 4 34 1 278 1 255 1 228 4 56 1 359 1 328 1 281 1 110 1 137 1 114 1 38 1 167 1 116 2 216 1 217 1 236 1 193 1 45 1 143 1 267 1 144 1 24 1 311 1 71 1 26 3 98 1 124 1 
6 2 290 1 193 1 228 2 109 1 273 2 370 1 26 1 110 1 
137 1 223 1 127 1 213 1 50 1 290 3 114 1 342 1 132 1 273 3 216 1 217 1 6 3 193 2 278 1 228 3 26 3 124 1 98 1 
127 1 50 1 290 2 301 1 273 2 343 1 6 2 193 1 228 2 26 2 
246 1 236 1 5 1 6 1 34 1 228 1 255 1 267 1 143 1 56 1 144 1 311 1 24 1 71 1 110 1 
222 1 236 1 5 1 6 1 34 1 228 1 255 1 267 1 56 1 144 1 311 1 24 1 71 1 313 1 110 1 
75 1 203 2 244 1 245 1 103 1 155 1 275 1 2 2 4 2 343 2 208 1 133 1 180 1 164 1 363 1 257 1 301 2 167 4 116 2 263 1 307 1 44 1 45 1 312 1 
218 1 6 1 290 1 228 1 273 1 26 1 98 1 216 1 
137 1 14 1 127 1 290 4 50 1 273 5 370 1 6 5 193 2 228 5 55 1 109 1 26 4 110 1 
218 1 6 2 290 2 228 2 153 1 273 2 26 2 98 1 
30 1 353 1 
30 1 353 1 
78 1 239 1 
78 1 239 1 
78 1 239 1 
202 1 30 1 353 1 
202 1 30 1 353 1 
162 1 30 1 353 1 
254 1 78 1 239 1 30 2 353 2 59 1 
202 1 30 1 353 1 
371 1 30 1 353 1 
371 1 30 1 353 1 
371 1 30 1 353 1 
91 1 213 1 243 2 232 2 0 1 30 2 132 2 39 2 217 2 285 2 254 1 211 1 358 1 86 1 35 3 46 1 353 2 380 1 90 2 
243 1 290 2 271 1 30 1 132 1 273 2 52 1 53 1 6 2 358 1 228 2 162 1 35 1 90 1 110 1 364 1 232 1 262 1 217 1 285 1 375 1 26 2 353 1 174 1 
18 1 341 1 220 1 
18 1 107 1 220 1 
341 2 224 1 77 1 107 1 134 1 220 3 
341 1 264 1 224 1 77 1 107 1 220 2 
341 1 77 1 224 2 107 1 220 2 
242 1 147 1 270 1 102 1 225 1 272 3 132 5 133 1 52 1 181 2 210 1 9 1 360 2 362 3 363 1 256 2 213 2 234 1 115 2 215 1 235 1 168 1 93 1 262 1 217 5 42 1 263 1 44 1 375 1 374 1 123 1 97 4 
242 2 147 1 102 2 225 1 272 9 132 9 133 3 324 1 293 1 181 6 9 6 210 2 279 1 360 6 280 5 57 1 89 1 362 8 186 1 363 3 256 6 213 5 234 2 215 3 235 2 93 3 262 4 63 5 217 9 42 1 263 3 44 3 123 1 173 1 97 7 
242 1 102 1 272 4 132 3 133 1 181 2 210 1 279 1 360 2 362 3 363 1 256 2 213 3 234 1 115 1 168 1 235 1 215 1 93 2 262 1 217 3 263 1 44 1 374 1 123 1 97 2 
242 1 102 1 272 7 132 4 133 2 324 1 181 4 210 1 279 1 360 4 57 1 362 5 363 2 256 4 213 4 234 1 115 2 235 1 168 1 215 2 93 3 262 2 217 4 263 2 44 2 374 1 123 1 173 1 97 3 
305 1 319 1 71 1 
309 1 71 1 
129 1 
24 1 71 1 
305 2 237 1 255 1 368 1 24 1 71 3 
255 1 24 1 71 1 
71 1 347 1 
148 1 203 3 166 1 167 7 321 1 250 1 4 4 208 3 263 1 158 2 66 1 118 1 95 1 160 1 164 2 363 1 126 1 
148 1 203 3 166 1 167 7 321 1 250 1 4 4 208 3 263 1 158 2 66 1 118 1 95 1 160 1 164 2 363 1 126 1 
148 1 203 3 166 1 205 1 167 7 321 1 250 1 4 4 208 3 263 1 158 2 66 1 118 1 95 1 160 1 164 2 363 1 126 1 
148 2 203 11 245 1 103 1 321 1 275 1 250 1 4 11 133 3 208 7 83 1 158 1 276 1 160 1 108 1 164 3 363 3 258 1 214 4 233 1 167 22 215 3 116 2 263 3 118 1 68 1 44 3 95 4 45 1 378 1 379 3 
148 1 203 4 245 2 175 1 103 2 275 2 31 1 4 5 250 1 208 4 158 2 160 1 164 3 363 1 166 1 233 1 167 9 116 4 263 1 66 1 118 1 95 1 45 2 126 1 
288 1 341 1 204 1 100 1 131 1 176 1 357 1 248 1 5 1 84 1 34 1 107 1 163 1 134 1 330 1 112 1 13 1 300 1 140 2 61 1 334 2 236 1 18 1 94 1 372 1 96 1 144 1 311 1 220 2 197 1 
288 1 341 1 204 1 100 1 131 1 357 1 3 1 176 2 248 1 5 1 34 1 107 1 134 1 163 1 330 1 112 1 13 1 230 1 140 3 61 1 334 3 62 1 236 1 18 1 94 1 372 1 96 1 144 1 311 1 220 2 
288 1 341 1 131 1 357 1 176 2 248 1 5 1 34 1 107 1 134 1 330 1 112 1 13 1 230 1 140 2 61 1 334 2 62 1 236 1 18 1 94 1 372 1 144 1 311 1 220 2 
112 2 60 1 13 2 289 1 204 1 349 1 1 1 140 1 357 2 3 1 177 1 334 1 5 1 236 1 34 1 267 1 144 1 24 1 163 1 311 1 71 1 25 1 330 2 
112 1 288 1 230 1 13 1 341 1 204 1 100 1 140 1 61 1 357 1 248 1 334 1 5 1 236 1 84 1 18 1 34 1 96 1 107 1 144 1 134 1 163 1 311 1 220 2 197 1 330 1 
54 1 
242 1 147 1 102 1 157 1 292 1 251 2 5 1 105 1 106 1 6 1 9 6 210 1 296 2 58 1 165 2 256 2 213 2 259 1 114 1 349 1 216 1 217 5 267 2 172 4 123 1 24 1 311 2 71 1 124 1 223 1 128 1 225 3 272 2 79 2 132 5 322 1 273 1 177 1 82 2 323 1 34 2 326 2 228 1 362 2 187 1 231 1 235 1 370 1 93 2 236 2 144 1 47 1 98 1 199 2 145 1 
200 1 223 1 225 1 273 1 322 1 132 3 292 1 106 1 6 1 9 2 228 1 187 1 165 1 231 1 114 1 370 1 216 1 217 3 172 2 47 1 98 1 124 1 
200 1 223 1 225 1 273 1 322 1 132 3 292 1 251 1 106 1 6 1 9 1 228 1 187 1 213 1 231 1 114 1 370 1 216 1 217 3 172 3 123 1 47 1 98 1 124 1 
200 1 223 1 225 1 273 1 322 1 132 3 292 1 82 1 251 1 106 1 6 1 9 2 228 1 187 1 165 1 213 1 231 1 114 1 370 1 216 1 217 3 172 3 123 1 47 1 98 1 124 1 
200 1 147 1 290 1 50 1 102 1 153 1 292 1 106 1 6 2 9 3 210 1 165 2 256 1 213 1 114 1 216 1 217 3 19 1 172 2 123 1 26 1 124 1 223 1 128 1 269 1 225 1 132 3 322 1 273 2 274 1 82 2 228 2 362 1 187 1 36 1 231 1 370 1 235 1 333 1 336 1 47 1 48 1 98 2 
147 1 102 1 292 1 157 1 251 2 106 1 105 1 6 1 210 1 9 4 296 2 256 1 165 2 213 2 114 1 216 1 217 4 172 4 123 1 124 1 223 1 128 1 225 2 272 2 273 1 132 4 322 1 79 2 82 2 228 1 326 2 362 1 187 1 231 1 370 1 235 1 93 2 47 1 98 1 199 2 
223 1 147 1 269 1 128 1 290 1 50 1 102 1 153 1 274 1 273 2 322 1 132 2 292 1 106 1 6 2 210 1 228 2 362 1 187 1 256 1 213 1 231 1 114 1 235 1 370 1 216 1 217 2 19 1 172 2 336 1 123 1 47 1 48 1 26 1 98 2 124 1 
223 1 147 1 269 1 128 1 290 1 50 1 102 1 153 1 274 1 273 2 322 1 132 2 292 1 106 1 6 2 210 1 228 2 362 1 187 1 256 1 213 1 231 1 114 1 235 1 370 1 216 1 217 2 19 1 172 2 336 1 123 1 47 1 48 1 26 1 98 2 124 1 
317 1 223 1 147 1 102 1 225 2 272 2 273 1 322 1 132 4 157 1 292 1 251 2 82 2 106 1 6 1 325 1 9 4 210 1 326 2 228 1 362 1 296 2 187 1 165 2 256 1 213 1 231 1 114 1 235 1 370 1 216 1 190 2 217 4 64 1 172 4 219 1 123 1 47 1 27 2 98 1 124 1 
147 1 50 1 290 1 102 1 153 1 292 1 251 1 106 1 6 2 9 1 210 1 165 1 256 1 213 1 114 1 216 1 217 2 19 1 172 3 123 1 26 1 124 1 223 1 128 1 269 1 132 2 322 1 273 2 274 1 82 1 228 2 362 1 187 1 231 1 370 1 235 1 333 1 336 1 48 1 47 1 98 2 
147 1 50 1 290 1 102 1 153 1 292 1 251 1 106 1 6 2 9 1 210 1 165 1 256 1 213 1 114 1 216 1 217 2 19 1 172 3 123 1 26 1 124 1 223 1 128 1 269 1 132 2 322 1 273 2 274 1 82 1 228 2 362 1 187 1 231 1 370 1 235 1 333 1 336 1 48 1 47 1 98 2 
147 1 223 1 102 1 225 2 272 2 322 1 132 4 273 1 157 1 292 1 251 2 82 2 105 1 106 1 6 1 9 4 210 1 326 2 228 1 362 1 296 2 187 1 165 2 256 1 213 1 231 1 114 1 235 1 370 1 216 1 190 2 217 4 64 1 172 4 123 1 47 1 27 2 98 1 124 1 
75 1 203 3 319 1 244 1 245 1 103 1 275 1 2 1 250 1 4 3 343 1 208 2 158 1 160 1 164 2 363 1 110 2 166 1 301 1 167 6 116 2 263 1 66 1 45 1 312 1 126 1 
268 1 75 2 203 6 244 1 245 2 103 2 275 2 2 11 4 8 208 2 133 2 343 4 329 1 281 1 229 1 164 1 110 1 363 2 258 1 214 3 301 11 167 14 215 2 116 4 263 1 68 1 44 1 192 1 95 1 335 1 286 1 45 2 379 3 
268 1 75 1 203 1 244 1 245 1 290 1 246 1 103 1 226 1 273 1 275 1 4 1 343 1 5 1 34 1 6 2 277 1 255 1 228 2 56 1 229 1 281 1 110 1 137 1 167 2 116 2 236 1 193 1 351 1 45 1 143 1 267 1 377 1 144 1 24 1 311 1 71 1 26 1 
203 10 244 3 290 1 245 3 246 2 103 3 2 7 250 1 4 10 343 7 208 8 5 2 158 1 345 2 6 3 7 2 160 1 255 2 56 2 164 4 110 2 166 1 301 7 167 20 215 2 116 6 171 2 263 3 66 1 267 1 311 3 24 2 71 2 26 1 126 1 268 1 75 3 273 1 275 3 133 2 34 3 183 1 228 3 359 2 281 1 229 1 363 3 230 1 137 1 283 2 40 1 284 1 236 3 44 2 193 1 95 4 45 3 143 2 144 2 
74 1 268 1 75 2 203 1 244 2 290 1 245 2 152 1 130 1 320 1 103 2 273 1 275 2 177 1 4 1 5 2 6 1 34 8 228 1 281 1 298 1 230 1 300 1 349 1 167 2 116 4 236 7 193 1 45 2 267 2 144 2 311 8 22 1 24 2 71 3 312 1 26 1 338 2 73 1 
75 1 127 1 203 2 244 1 50 1 245 1 290 1 103 1 273 1 2 1 275 1 4 1 208 1 343 1 133 1 6 1 228 1 229 1 164 1 363 1 301 1 167 3 215 1 116 2 263 1 142 1 44 1 45 1 26 1 
75 1 244 1 245 1 301 1 103 1 167 2 2 1 275 1 116 2 4 2 208 1 343 1 133 1 180 1 95 1 45 1 312 1 363 1 
257 1 75 1 203 2 244 1 245 1 301 1 103 1 167 2 2 1 275 1 116 2 208 1 343 1 263 1 44 1 45 1 312 1 164 1 
75 1 203 2 244 1 245 1 103 1 275 1 2 2 4 2 133 1 343 2 208 2 164 1 363 1 301 2 167 4 215 1 116 2 263 1 44 1 95 1 45 1 312 1 
75 1 244 1 152 1 245 1 301 1 103 1 167 2 2 1 275 1 116 2 4 2 208 1 343 1 133 1 180 1 95 1 45 1 363 1 
257 1 75 1 203 2 244 1 152 1 245 1 301 1 103 1 167 2 2 1 275 1 116 2 208 1 343 1 263 1 44 1 45 1 164 1 
75 1 203 2 244 1 245 1 152 1 103 1 275 1 2 2 4 2 133 1 343 2 208 2 164 1 363 1 301 2 167 4 215 1 116 2 263 1 44 1 95 1 45 1 
75 1 203 2 244 1 245 1 103 1 275 1 2 2 4 2 133 1 343 2 208 2 164 1 363 1 301 2 167 4 215 1 116 2 263 1 44 1 95 1 45 1 
268 1 75 1 203 1 244 1 245 1 246 1 103 1 275 1 4 1 5 1 34 1 6 1 255 1 228 1 56 1 359 1 281 1 110 1 167 2 116 2 236 1 45 1 143 1 267 1 144 1 24 1 311 1 71 1 
268 1 222 1 75 1 203 1 244 1 245 1 103 1 275 1 4 1 5 1 34 1 6 1 255 1 228 1 56 1 281 1 110 1 167 2 116 2 236 1 45 1 267 1 144 1 24 1 311 1 71 1 313 1 146 1 
75 1 203 2 244 1 245 1 103 1 275 1 2 2 4 2 133 1 343 2 208 2 229 1 164 1 363 1 301 2 167 4 215 1 116 2 263 1 44 1 95 1 45 1 
75 1 203 2 244 1 245 1 246 1 103 1 2 2 275 1 4 2 208 2 343 2 133 1 5 1 7 1 34 1 6 1 255 1 228 1 56 1 359 1 164 1 363 1 300 1 301 2 167 4 215 1 116 2 236 1 263 1 44 1 95 1 45 1 143 1 144 1 311 1 24 1 71 1 
75 1 203 1 127 1 244 1 50 1 245 1 290 1 103 1 273 1 275 1 2 1 4 2 208 1 133 1 343 1 6 1 228 1 185 1 229 1 363 1 301 1 167 3 215 1 116 2 263 1 44 1 95 1 45 1 26 1 
203 10 76 2 245 2 103 2 275 2 31 1 4 9 133 3 208 6 179 1 10 1 297 1 164 3 212 1 363 3 331 1 258 1 214 2 167 19 215 3 116 4 191 1 304 2 263 3 68 1 44 3 95 3 45 2 241 1 379 1 
203 12 76 1 245 3 103 3 275 3 31 1 4 14 208 4 227 1 133 3 179 2 327 1 10 1 297 1 164 2 212 1 188 1 363 3 331 2 258 2 214 2 233 2 167 26 215 3 116 6 141 1 304 4 263 2 44 2 95 2 376 1 45 3 266 1 379 2 
203 21 245 3 103 3 4 20 250 1 208 8 158 1 160 1 10 1 297 1 164 4 212 1 258 3 214 4 166 1 167 41 215 4 116 6 304 4 263 5 66 1 68 1 266 1 72 1 126 1 76 1 275 3 31 1 133 4 227 1 179 2 327 1 363 5 188 1 331 1 233 1 141 1 191 1 44 4 95 4 45 3 376 1 379 3 
203 18 76 1 245 4 103 4 275 4 31 1 250 1 4 20 227 1 133 4 208 7 179 2 158 1 160 1 327 1 10 1 297 1 164 4 212 1 188 1 363 5 331 1 258 3 214 4 166 1 233 2 167 38 215 4 116 8 191 1 141 1 304 4 263 4 66 1 68 1 44 3 95 3 376 1 45 4 266 1 379 3 72 1 126 1 
203 25 76 1 245 2 103 2 275 2 31 1 250 1 4 27 227 1 133 7 208 14 179 1 158 1 160 1 327 1 10 1 297 1 164 7 212 1 188 1 363 8 331 1 258 2 214 4 166 1 233 1 167 52 215 7 116 4 141 1 304 4 263 8 66 1 68 2 44 7 335 2 95 7 376 1 45 2 266 1 379 4 126 1 
299 1 243 1 254 1 232 1 86 1 30 1 353 1 380 1 90 1 285 1 
162 1 174 1 
243 1 232 1 15 1 337 1 87 1 30 1 353 1 90 1 285 1 
91 1 213 1 243 1 232 1 132 1 30 1 39 1 217 1 285 1 254 1 211 1 358 1 86 1 35 2 46 1 353 1 380 1 90 1 
91 1 213 1 243 1 232 1 132 1 30 1 39 1 217 1 285 1 254 1 211 1 358 1 86 1 35 2 46 1 353 1 380 1 90 1 
91 1 213 1 243 1 232 1 132 1 30 1 39 1 217 1 285 1 254 1 211 1 358 1 86 1 35 2 46 1 353 1 380 1 90 1 
202 1 196 1 59 1 
202 1 196 1 59 1 
371 1 373 1 
371 1 373 1 59 1 
53 1 364 1 
243 1 290 2 271 1 206 1 132 1 30 1 273 2 52 1 53 1 6 2 228 2 162 1 35 1 90 1 110 1 364 1 232 1 39 1 262 1 217 1 285 1 375 1 46 1 353 1 26 2 97 1 174 1 
202 1 196 1 
371 1 373 1 59 1 
268 1 75 1 203 1 244 1 245 1 103 1 273 2 275 1 4 1 5 1 104 1 34 2 6 2 228 2 229 1 281 1 298 1 348 1 167 2 116 2 17 1 236 2 45 1 144 1 70 1 24 1 311 2 22 1 71 1 221 1 338 2 
288 1 230 1 341 1 300 1 357 1 248 1 81 1 303 1 5 1 236 2 18 1 34 2 96 1 107 1 144 1 134 1 311 2 240 1 220 2 
288 1 230 1 341 1 99 1 357 1 248 1 303 1 236 1 5 1 18 1 34 1 96 1 107 1 144 1 134 1 311 1 220 2 
289 1 349 1 357 1 177 1 5 1 236 1 34 1 267 1 144 1 24 1 311 1 240 1 71 1 125 1 
288 1 230 1 341 1 357 1 248 1 81 1 303 1 236 1 5 1 18 1 34 1 96 1 107 1 144 1 134 1 311 1 240 1 220 2 
253 1 
256 1 213 1 319 1 123 1 302 1 362 1 369 1 
147 1 128 1 102 1 225 1 272 1 79 1 132 1 210 1 9 1 362 1 256 1 213 2 235 1 93 1 217 1 123 1 199 1 
242 2 147 4 102 4 101 2 154 1 5 3 159 2 210 4 9 5 255 3 58 1 347 2 12 2 256 8 213 8 300 1 302 1 215 2 217 5 117 2 305 2 263 2 308 1 309 3 267 1 21 1 123 2 352 2 24 3 311 3 23 2 71 10 124 2 225 3 272 12 132 5 178 2 133 2 34 3 181 6 360 6 184 1 88 1 362 9 363 2 368 1 369 1 235 4 283 2 93 6 236 3 44 2 144 4 195 2 
242 1 147 2 101 1 102 2 225 1 272 6 132 1 227 1 133 2 294 1 181 5 9 1 210 2 327 1 360 5 362 8 58 1 188 1 363 2 256 5 258 1 213 5 214 1 235 2 215 2 93 3 141 1 217 1 117 2 263 2 44 2 376 1 123 2 379 1 49 1 
147 1 269 1 50 1 290 1 101 1 102 1 153 1 132 1 274 1 273 1 250 1 344 1 6 1 210 1 228 1 160 1 362 2 363 2 256 2 235 1 217 1 117 2 263 1 19 1 336 1 26 1 98 1 126 1 
256 1 147 1 213 1 102 1 302 1 235 1 369 1 210 1 123 1 362 1 
256 5 213 5 101 1 272 10 283 1 215 2 93 5 133 2 117 2 263 2 181 5 44 2 360 5 362 5 363 2 
213 1 9 1 225 1 123 1 132 1 217 1 
242 2 147 1 102 2 225 2 154 1 132 3 177 1 5 1 33 1 34 4 210 2 9 4 279 1 88 2 362 2 58 2 256 2 259 1 349 1 235 2 217 3 236 4 265 1 267 2 144 1 24 1 311 4 71 1 145 1 
75 1 203 1 269 1 244 1 290 2 50 2 245 1 246 1 103 1 273 2 275 1 5 1 34 1 6 3 228 3 255 1 56 1 359 1 281 1 110 1 38 1 167 1 116 2 236 1 45 1 267 1 143 1 144 1 311 1 24 1 71 1 26 2 
256 2 242 1 147 1 213 4 102 1 272 4 235 1 93 2 158 1 181 2 210 1 360 2 123 2 362 1 58 1 
209 1 243 1 285 1 
209 1 243 1 285 1 
364 1 243 1 260 1 86 1 285 1 
209 1 243 1 285 1 
316 1 243 1 285 1 
316 1 243 1 285 1 
316 1 243 1 285 1 
243 1 285 1 
30 1 353 1 
203 4 245 2 166 1 233 1 103 2 167 8 275 2 4 4 116 4 250 1 208 3 263 1 158 1 66 1 95 1 45 2 160 1 164 2 363 1 126 1 
203 3 319 1 166 1 167 6 250 1 4 3 208 2 263 1 158 1 66 1 160 1 164 2 126 1 363 1 
203 2 245 1 103 1 167 4 275 1 215 1 116 2 4 2 208 2 133 1 43 1 263 1 44 1 95 1 45 1 164 1 363 1 
258 1 203 4 214 2 167 7 215 1 4 3 133 1 208 2 263 1 44 1 68 1 95 1 379 1 164 1 363 1 
203 12 245 2 151 1 103 2 275 2 250 2 4 11 208 9 133 2 158 1 160 2 164 5 363 3 214 2 166 1 233 2 167 23 215 2 116 4 263 3 66 1 68 1 44 2 95 4 286 1 335 1 45 2 379 2 126 1 
203 1 214 1 167 1 
167 1 379 1 4 1 
203 3 245 1 103 1 167 6 275 1 283 1 215 1 116 2 4 3 133 1 208 3 43 1 263 1 44 1 95 1 45 1 164 2 363 1 
203 6 245 1 103 1 275 1 31 1 4 6 227 1 133 2 208 2 327 1 164 1 188 1 363 2 258 1 214 1 167 12 215 2 116 2 141 1 263 2 44 2 95 1 45 1 376 1 379 1 
203 3 167 6 4 3 250 1 208 2 263 1 95 1 160 1 164 1 126 1 363 1 
203 2 166 1 151 1 245 1 233 1 103 1 167 3 275 1 4 1 250 1 116 2 208 2 66 1 95 1 160 1 45 1 164 1 
203 5 245 1 103 1 167 10 275 1 31 1 116 2 250 2 4 5 208 5 344 1 263 2 95 2 45 1 160 2 164 3 126 1 363 2 
245 1 103 1 167 2 275 1 31 1 116 2 4 2 133 1 208 1 95 1 45 1 363 1 
203 2 245 1 103 1 167 4 275 1 215 1 31 1 116 2 4 2 208 2 133 1 263 1 44 1 95 1 45 1 164 1 363 1 
203 2 151 1 245 3 233 1 103 3 167 3 275 3 31 1 116 6 250 1 4 1 191 1 208 2 95 1 45 3 160 1 164 1 
203 18 151 1 245 5 103 5 275 5 31 1 250 3 4 16 133 3 208 12 83 1 158 1 160 3 108 1 164 7 363 5 258 1 214 4 166 1 233 2 167 34 215 3 116 10 191 1 43 1 263 5 66 1 68 1 44 3 95 5 45 5 378 1 379 3 126 2 
203 4 245 1 103 1 275 1 31 1 4 4 250 1 208 2 158 1 160 1 164 2 363 1 188 1 258 1 214 1 166 1 167 8 116 2 263 1 66 1 45 1 379 1 126 1 
203 5 245 2 103 2 275 2 31 1 250 1 4 6 133 1 208 3 158 1 160 1 164 2 188 1 363 2 258 1 214 2 166 1 167 11 215 1 116 4 43 1 263 1 66 1 68 1 95 1 45 2 379 1 126 1 
203 10 245 3 103 3 275 3 31 1 250 1 4 9 227 1 133 2 208 4 158 1 160 1 327 1 164 3 188 1 363 3 258 1 214 1 166 1 233 1 167 19 215 2 116 6 141 1 43 1 263 3 66 1 44 2 95 1 45 3 376 1 379 1 126 1 
203 7 245 3 103 3 275 3 31 1 250 1 4 10 227 1 133 2 208 5 158 1 160 1 327 1 164 3 188 1 363 3 258 1 214 1 166 1 233 1 167 17 215 2 116 6 141 1 43 1 263 2 66 1 44 1 95 2 45 3 376 1 379 1 126 1 
203 4 245 1 103 1 275 1 31 1 4 4 250 1 208 2 158 1 160 1 164 2 363 1 188 1 258 1 214 1 166 1 167 8 116 2 263 1 66 1 45 1 379 1 126 1 
203 6 245 1 103 1 275 1 31 1 4 6 227 1 133 2 208 2 327 1 164 1 188 1 363 2 258 1 214 1 167 12 215 2 116 2 141 1 263 2 44 2 95 1 45 1 376 1 379 1 
203 8 245 4 103 4 275 4 31 1 250 1 4 10 227 1 133 2 208 5 158 1 160 1 327 1 164 3 188 1 363 3 258 1 214 1 166 1 233 2 167 18 215 2 116 8 141 1 43 1 263 2 66 1 44 1 95 2 376 1 45 4 379 1 126 1 
203 7 245 4 103 4 275 4 31 1 4 9 227 1 133 3 208 6 327 1 164 3 188 1 363 3 258 1 214 1 233 2 167 16 215 3 116 8 141 1 191 1 263 2 44 2 95 3 376 1 45 4 379 1 
203 4 166 2 167 7 250 3 4 3 208 6 263 1 66 1 95 3 160 3 164 3 126 1 363 1 
203 8 245 4 103 4 275 4 31 1 250 1 4 10 227 1 133 2 208 4 158 1 160 1 327 1 164 3 188 1 363 3 258 1 214 1 166 1 233 2 167 18 215 2 116 8 141 1 191 1 263 2 66 1 44 1 95 1 376 1 45 4 379 1 126 1 
6 1 228 1 273 1 109 1 291 1 370 1 110 1 
28 1 150 1 332 1 156 1 291 1 273 1 370 1 252 1 6 1 228 1 109 1 110 1 
34 1 319 1 349 1 267 1 144 1 24 1 311 1 71 1 177 1 5 1 236 1 
290 1 246 1 273 1 236 1 5 1 6 2 34 1 193 1 255 1 228 2 56 1 267 1 144 1 24 1 311 1 71 1 26 1 110 1 
114 1 290 2 246 1 273 2 216 1 236 1 5 1 6 2 34 1 193 1 255 2 228 2 56 1 144 1 23 1 24 2 311 1 71 3 88 1 26 1 98 1 347 1 110 1 
222 1 290 2 273 2 5 1 34 2 6 2 228 2 255 2 85 1 56 1 88 1 347 1 110 1 114 1 216 1 236 2 193 1 144 1 311 2 24 2 23 1 71 3 26 1 98 1 
339 1 354 1 132 2 5 1 34 3 9 1 255 1 85 1 88 1 347 1 213 1 217 2 236 3 305 1 309 1 267 1 144 1 311 3 23 1 24 1 123 1 71 4 124 1 
12 1 213 1 132 2 217 2 236 3 5 1 305 1 34 3 309 1 9 1 255 1 85 1 267 1 144 1 123 1 24 1 23 1 311 3 71 4 88 1 124 1 347 1 
74 1 34 1 144 1 311 1 5 1 236 1 
74 1 230 1 365 1 300 1 130 1 368 1 320 1 236 6 5 2 34 7 120 1 255 1 267 2 144 3 311 7 24 2 71 3 338 1 298 1 282 1 73 1 
203 3 244 2 290 1 245 2 246 1 103 2 2 1 250 1 4 3 343 1 208 2 104 1 5 1 345 1 158 1 7 1 6 2 255 1 160 1 56 1 164 2 110 2 300 1 166 1 301 1 167 6 116 4 263 1 66 1 311 1 24 1 71 1 26 1 126 1 75 2 273 1 275 2 34 1 228 2 359 1 229 1 363 1 236 1 193 1 45 2 143 1 144 1 
147 2 102 2 225 1 154 1 132 3 34 1 159 1 210 2 9 2 362 1 256 1 12 1 213 1 302 1 369 1 235 2 217 3 236 1 305 1 309 1 267 1 195 1 123 1 311 1 352 1 71 2 97 1 124 1 
74 1 300 1 368 1 236 2 5 1 305 1 34 2 255 1 144 2 311 2 184 1 24 1 71 2 
300 1 349 1 177 1 236 4 5 1 34 4 85 1 267 1 144 1 311 4 24 1 71 1 111 1 
40 1 236 2 5 1 34 2 120 1 182 1 255 1 194 1 144 2 311 2 24 1 71 1 88 1 282 1 
18 1 288 1 34 1 267 1 107 1 144 1 311 1 220 1 5 1 236 1 
230 1 34 2 300 1 144 1 70 1 24 1 311 2 71 1 298 1 5 1 236 2 
300 1 349 1 130 1 177 1 236 4 5 2 34 5 267 1 144 2 311 5 24 2 71 3 88 1 298 1 73 1 111 1 
300 1 349 1 177 1 236 4 5 2 34 5 267 1 144 2 311 5 24 2 71 3 88 1 298 1 73 1 111 1 315 1 
222 1 290 1 273 1 236 1 5 1 6 2 34 1 193 1 255 1 228 2 56 1 267 1 144 1 24 1 311 1 71 1 26 1 110 1 
365 1 368 1 236 1 5 1 34 1 120 1 255 1 144 2 311 1 24 1 71 1 88 1 282 1 
6 1 348 1 139 1 228 1 273 1 80 1 221 1 314 1 17 1 
113 1 139 1 37 1 
139 1 356 1 80 1 314 1 110 1 
113 1 223 1 213 1 139 1 114 1 37 1 356 2 132 2 80 2 216 1 217 2 278 1 295 1 123 1 124 1 98 1 97 1 314 2 110 1 
94 1 372 1 319 1 131 1 
94 1 372 1 204 1 131 1 140 1 163 1 334 1 
13 1 334 1 330 1 
355 1 204 1 131 1 140 3 334 3 170 2 94 1 372 1 161 1 238 1 163 1 197 1 
94 1 372 1 119 1 204 1 131 1 140 2 163 1 176 1 334 2 
189 1 341 1 204 1 140 1 131 1 334 1 18 1 350 1 163 1 220 1 197 1 
372 1 204 1 131 1 140 1 163 1 334 1 197 1 
94 1 372 2 204 1 140 1 163 1 334 1 197 1 
287 1 340 1 204 2 131 1 140 2 334 2 65 1 372 1 163 2 197 1 
189 1 204 1 140 3 131 2 176 2 16 1 334 3 94 1 372 1 122 1 163 1 197 1 198 1 
341 1 204 1 131 1 140 2 176 1 334 2 207 1 18 1 94 1 372 1 107 1 163 1 134 1 220 2 197 1 
189 1 92 1 204 2 140 4 131 2 176 2 16 1 334 4 94 1 372 1 119 1 163 2 197 1 
94 1 372 1 204 1 131 1 140 1 163 1 334 1 197 1 
189 1 355 1 204 1 140 4 131 3 176 2 16 1 334 4 170 1 94 2 372 2 238 1 163 1 135 1 
204 1 131 1 140 2 29 1 176 1 334 2 51 1 94 1 372 1 310 1 163 1 197 1 
355 2 204 1 131 1 140 3 334 3 41 1 170 2 94 1 372 1 238 1 163 1 197 1 
149 1 131 2 169 2 11 1 
138 1 204 1 140 1 163 1 334 1 197 1 
94 1 372 1 204 1 131 1 140 2 163 1 176 1 198 1 334 2 197 1 
249 1 
94 1 372 1 204 1 131 1 140 1 163 1 334 1 197 1 
94 1 372 1 204 1 131 1 140 3 163 1 176 1 198 1 334 3 197 1 170 1 
189 1 131 1 135 1 16 1 
372 1 131 1 

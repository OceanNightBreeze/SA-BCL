#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
143 3 325 1 359 1 186 1 248 2 13 3 271 2 95 1 265 1 43 2 155 1 22 1 68 1 
159 1 34 2 129 2 13 9 112 1 260 2 68 1 186 2 359 3 3 1 137 1 138 1 265 6 43 2 237 1 22 1 143 9 217 1 325 4 145 1 95 1 248 5 271 2 155 1 179 1 105 2 63 1 128 1 
159 1 34 2 129 2 13 9 112 1 260 2 68 1 186 2 359 3 3 1 137 1 138 1 265 6 43 2 237 1 22 1 143 9 217 1 325 4 145 1 95 1 248 5 271 2 155 1 179 1 105 2 63 1 128 1 
159 1 34 2 129 2 13 10 112 1 260 2 68 1 186 2 359 4 3 1 137 1 138 1 265 7 43 2 237 1 22 1 143 10 217 1 325 5 145 1 95 1 248 6 271 2 155 1 179 1 105 2 63 1 128 1 
159 1 34 1 129 2 13 7 112 1 260 2 68 1 186 2 359 2 3 1 137 1 138 1 265 4 43 2 237 1 22 1 143 7 325 3 145 1 95 1 248 4 271 2 155 1 179 1 105 2 63 1 128 1 
143 4 217 1 34 2 325 2 129 1 13 4 95 1 260 1 112 1 68 1 359 1 248 3 271 1 265 3 43 1 155 1 179 1 105 1 
143 2 129 1 13 2 95 1 260 1 68 1 134 1 246 1 186 1 3 1 248 1 271 1 251 1 43 1 155 1 237 1 
34 2 129 1 13 9 332 1 112 1 260 1 68 1 359 3 186 1 265 7 43 2 22 1 143 9 325 4 217 1 145 1 95 1 243 1 248 5 271 2 155 1 179 1 105 1 128 1 
34 2 129 1 13 9 332 1 112 1 260 1 68 1 359 3 186 1 265 7 43 2 22 1 143 9 325 4 217 1 145 1 95 1 243 1 248 5 271 2 155 1 179 1 105 1 128 1 
366 1 206 1 193 1 333 1 242 1 297 1 59 1 348 1 9 1 178 1 115 1 203 1 156 1 86 1 
328 1 
367 1 26 1 333 2 328 1 358 1 364 1 86 1 59 2 
51 2 367 1 26 1 36 1 333 5 274 1 149 1 358 2 59 5 187 1 10 2 263 2 281 1 225 1 169 1 328 1 236 1 86 2 45 1 
93 1 367 1 328 1 
66 1 328 1 230 2 
280 1 366 2 9 2 206 1 242 2 156 2 203 2 297 2 
87 1 206 1 309 2 273 1 280 1 279 1 210 1 315 1 188 1 212 1 285 2 192 1 323 1 23 1 48 1 171 1 366 2 24 1 144 2 173 1 242 2 373 1 295 2 297 3 29 1 80 1 196 1 177 1 9 3 83 1 30 1 103 2 329 1 156 2 203 2 126 1 253 1 
348 1 366 1 9 1 178 1 115 1 206 1 242 1 156 1 203 1 297 1 
118 1 367 1 333 1 242 1 259 1 276 1 297 1 59 1 9 1 102 1 178 1 316 1 11 1 328 1 
366 1 367 1 333 2 242 1 276 1 297 1 59 2 9 1 102 1 178 1 316 1 11 1 328 1 203 1 156 1 
333 1 358 1 372 1 86 1 59 1 
367 1 26 1 333 2 328 1 108 1 358 1 86 1 59 2 
333 1 358 1 59 1 
52 1 366 1 257 1 242 2 297 2 280 2 9 2 203 1 156 1 
113 1 147 1 194 1 
24 1 144 1 173 1 373 1 297 1 222 1 280 1 196 1 177 1 315 1 9 1 103 1 212 1 285 1 253 1 48 1 
24 1 366 1 144 1 173 1 147 1 195 1 242 1 373 1 297 2 196 1 315 1 177 1 9 2 103 1 212 1 285 1 286 1 156 1 253 1 48 1 
280 1 93 1 
366 4 181 1 257 1 242 5 195 1 259 1 164 1 297 5 280 1 234 1 9 5 286 2 156 4 203 1 
366 2 9 2 178 1 115 1 284 1 242 2 156 2 297 2 
280 1 366 3 9 3 242 3 286 1 203 1 156 3 297 3 
366 1 9 1 178 1 115 1 242 1 156 1 297 1 
52 1 366 1 9 1 178 1 257 1 242 1 156 1 203 1 297 1 
87 1 206 1 257 1 309 2 273 1 333 1 310 1 276 1 280 1 279 1 315 1 316 1 212 1 285 1 286 1 323 1 48 1 171 1 24 1 366 3 144 1 173 1 96 1 242 3 195 1 373 1 295 1 29 1 297 4 59 1 80 1 196 1 177 1 9 4 83 1 102 1 178 1 30 1 103 1 11 1 203 2 156 3 126 1 253 1 
280 1 366 1 9 2 242 2 259 1 164 1 286 1 156 1 297 2 
366 3 257 1 333 1 195 1 242 3 310 1 276 1 297 3 59 1 9 3 178 1 102 1 316 1 11 1 328 1 286 2 191 1 203 1 156 3 
366 2 257 1 147 1 194 1 242 2 297 2 9 2 286 1 203 1 156 2 
24 1 144 1 173 1 373 1 297 1 280 1 196 1 177 1 315 1 9 1 103 1 212 1 285 1 253 1 48 1 
24 1 144 1 173 1 373 1 297 1 280 1 196 1 338 1 315 1 9 1 103 1 212 1 285 1 289 1 48 1 
160 1 37 1 309 2 273 1 88 1 279 1 113 2 136 1 89 1 4 1 116 1 192 2 323 1 91 1 171 1 54 1 147 2 194 2 295 4 83 1 30 2 199 1 379 1 126 1 
366 1 9 1 178 1 102 1 242 1 284 1 156 1 297 1 
140 1 79 1 324 1 
158 1 8 1 163 1 140 2 303 1 79 2 
140 1 79 1 
140 1 79 1 
158 1 8 1 
158 1 8 1 
158 1 8 1 
131 1 140 1 79 1 
131 1 140 1 79 1 
131 1 140 1 79 1 
360 1 140 1 79 1 
360 1 140 1 79 1 
360 1 140 1 79 1 
352 1 33 1 12 1 333 1 17 1 280 1 140 1 190 1 290 1 324 1 366 2 216 1 368 1 120 1 242 2 292 1 121 1 79 1 297 2 59 1 9 2 31 1 377 1 156 2 
216 2 368 1 56 1 120 2 333 2 292 3 268 2 79 2 17 2 59 2 39 1 69 1 152 1 328 1 31 2 140 2 303 1 127 1 254 1 
251 1 105 1 97 2 331 1 260 2 
129 1 105 1 260 1 
129 1 251 1 260 1 
90 1 251 1 105 2 97 1 331 1 260 3 
251 1 21 1 105 1 97 1 331 1 260 2 
33 1 0 1 66 1 182 2 160 1 161 2 37 1 333 5 274 3 275 1 358 1 136 1 263 1 169 1 116 1 45 2 214 1 51 1 344 1 367 1 26 1 27 1 121 1 374 2 59 5 10 1 377 1 272 1 328 2 230 3 180 1 86 4 
0 2 66 3 182 6 160 3 130 1 37 3 333 9 274 8 275 2 358 6 136 3 42 1 263 2 235 1 169 1 236 1 116 3 45 6 51 2 367 1 26 1 27 3 6 1 121 4 372 5 374 6 59 9 151 1 375 5 10 2 252 1 328 5 272 1 230 9 86 7 
0 1 66 2 161 1 160 1 182 2 37 1 333 3 274 3 275 1 136 1 263 1 236 1 116 1 45 2 214 1 51 1 367 1 27 1 121 1 374 2 59 3 10 1 328 3 86 2 180 1 230 4 
0 1 66 3 182 4 161 2 160 2 37 2 333 4 274 5 275 1 136 2 263 1 236 1 116 2 45 4 214 1 51 1 367 1 27 2 6 1 121 2 374 4 59 4 151 1 10 1 252 1 328 4 230 7 180 1 86 3 
174 1 
172 1 93 1 173 1 
173 1 204 1 
196 1 173 1 373 1 
173 1 28 1 
196 1 173 1 
172 2 196 1 81 1 218 1 173 3 373 1 
255 1 54 2 185 1 107 1 295 9 136 1 30 4 249 1 361 1 104 1 116 1 202 2 321 1 302 1 192 5 380 1 91 3 381 1 
255 1 160 3 2 1 185 1 309 2 37 2 109 1 261 1 41 1 136 3 167 4 361 2 264 1 116 4 321 1 363 1 192 16 323 1 91 10 171 1 365 3 215 1 54 5 27 3 295 29 83 1 30 13 249 2 104 2 202 3 302 5 126 1 380 1 381 2 
255 1 2 1 309 4 232 1 335 1 136 1 361 1 116 1 192 6 321 1 323 2 91 5 171 2 54 3 295 11 83 2 249 1 30 5 104 1 202 2 126 2 302 2 380 1 381 1 
255 1 54 2 185 1 295 9 136 1 30 4 249 1 361 1 104 1 116 1 202 2 321 1 302 1 192 5 380 1 91 3 381 1 
255 1 54 2 185 1 295 9 136 1 30 4 249 1 361 1 104 1 116 1 202 2 321 1 302 1 192 5 380 1 91 3 381 1 
355 1 13 1 357 1 19 1 186 2 315 1 212 1 285 1 43 1 322 1 48 1 143 1 119 1 239 1 144 1 173 1 371 2 196 1 103 1 200 2 271 1 330 2 378 1 
143 1 144 1 129 1 14 1 13 1 95 1 291 1 371 1 293 1 260 2 299 1 262 1 315 1 186 1 90 1 103 1 200 1 251 1 212 1 271 1 250 1 168 1 285 1 330 1 43 1 105 1 
129 1 13 2 14 1 260 2 68 1 262 1 186 1 315 1 90 1 212 1 168 1 265 1 285 1 43 1 143 2 144 1 95 1 291 1 371 1 294 1 293 1 299 1 248 1 200 1 103 1 271 1 251 1 330 1 155 1 105 1 
129 1 13 3 260 2 68 1 262 1 186 1 315 1 90 1 212 1 168 1 285 1 265 2 43 1 143 3 144 1 346 1 291 1 371 1 293 1 299 1 248 1 200 1 103 1 250 1 271 1 251 1 330 1 378 1 155 1 105 1 
129 1 13 2 260 2 68 1 186 1 315 1 90 1 212 1 168 1 285 1 265 2 143 2 144 1 346 1 371 1 293 1 299 1 248 1 200 1 103 1 250 1 251 1 330 1 155 1 105 1 
40 1 
333 5 274 2 275 1 276 1 38 2 233 4 285 2 287 2 340 1 45 2 46 2 48 2 51 1 144 2 242 1 244 1 297 1 59 5 196 1 9 1 10 1 102 1 103 2 11 1 157 1 66 2 354 1 162 1 259 1 16 2 358 6 19 1 315 1 263 1 211 1 316 1 212 1 317 1 169 1 318 2 213 1 267 1 322 1 117 1 118 1 367 1 173 1 26 3 220 1 178 1 328 2 125 2 229 1 230 2 32 2 
354 1 333 3 276 1 259 1 358 2 233 2 211 1 316 1 317 1 340 1 364 1 46 1 118 1 26 1 242 1 297 1 59 3 9 1 102 1 178 1 11 1 229 1 
354 1 333 3 276 1 259 1 358 1 16 1 233 3 211 1 316 1 317 1 340 1 364 1 118 1 367 1 26 1 242 1 297 1 59 3 9 1 102 1 178 1 11 1 328 1 229 1 
354 1 333 3 276 1 259 1 358 2 16 1 38 1 233 3 211 1 316 1 317 1 364 1 340 1 46 1 118 1 367 1 26 1 242 1 297 1 59 3 9 1 102 1 178 1 11 1 328 1 229 1 
333 5 274 1 276 1 38 4 233 6 287 2 340 1 45 1 46 4 51 1 242 1 297 1 59 5 9 1 100 1 102 1 10 1 11 1 201 1 350 1 66 2 354 1 259 1 358 7 16 4 316 1 211 1 263 1 317 1 169 1 213 1 318 2 267 1 364 1 73 1 118 1 367 5 26 3 78 1 178 1 328 5 125 2 229 1 32 2 
333 4 274 1 276 1 38 2 233 4 287 2 340 1 45 1 46 2 51 1 242 1 297 1 59 4 9 1 102 1 10 1 11 1 157 1 66 2 354 1 259 1 358 4 16 2 316 1 263 1 211 1 317 1 169 1 213 1 318 2 267 1 118 1 367 1 26 2 178 1 328 2 125 2 229 1 230 2 32 2 
66 2 354 1 333 4 274 1 276 1 259 1 16 2 358 4 38 2 233 4 211 1 316 1 263 1 317 1 169 1 318 2 213 1 287 2 267 1 340 1 45 1 46 2 73 1 118 1 51 1 367 1 26 2 242 1 78 1 297 1 59 4 9 1 10 1 102 1 178 1 11 1 201 1 328 1 125 2 229 1 32 2 
66 2 354 1 333 4 274 1 276 1 259 1 16 2 358 4 38 2 233 4 211 1 316 1 263 1 317 1 169 1 318 2 213 1 287 2 267 1 340 1 45 1 46 2 73 1 118 1 51 1 367 1 26 2 242 1 78 1 297 1 59 4 9 1 10 1 102 1 178 1 11 1 201 1 328 1 125 2 229 1 32 2 
354 1 333 4 274 1 276 1 259 1 16 2 358 4 38 2 233 4 211 1 316 1 263 1 317 1 169 1 287 2 267 1 340 1 45 1 46 2 342 1 118 1 51 1 367 1 26 2 241 2 242 1 370 1 78 1 297 1 245 2 59 4 300 1 9 1 10 1 102 1 178 1 11 1 328 1 125 2 229 1 230 2 
66 2 354 1 333 4 274 1 276 1 259 1 358 5 16 3 38 3 233 5 263 1 211 1 316 1 317 1 169 1 318 2 213 1 287 2 267 1 340 1 45 1 73 1 46 3 51 1 118 1 367 1 26 2 242 1 78 1 297 1 59 4 9 1 100 1 10 1 102 1 178 1 11 1 201 1 328 1 125 2 229 1 32 2 
66 2 354 1 333 4 274 1 276 1 259 1 358 5 16 3 38 3 233 5 263 1 211 1 316 1 317 1 169 1 318 2 213 1 287 2 267 1 340 1 45 1 73 1 46 3 51 1 118 1 367 1 26 2 242 1 78 1 297 1 59 4 9 1 100 1 10 1 102 1 178 1 11 1 201 1 328 1 125 2 229 1 32 2 
333 4 274 1 276 1 38 2 233 4 287 2 340 1 45 1 46 2 342 1 51 1 241 2 242 1 297 1 59 4 245 2 9 1 102 1 10 1 11 1 157 1 354 1 259 1 358 4 16 2 316 1 263 1 211 1 317 1 169 1 267 1 118 1 367 1 26 2 178 1 328 1 125 2 229 1 230 2 
87 1 353 1 309 4 273 2 88 1 279 2 19 1 315 2 212 2 285 7 266 1 286 1 192 1 322 1 48 2 323 2 23 2 171 2 366 1 144 8 173 3 242 1 76 1 294 1 297 1 295 2 196 2 9 1 269 1 83 2 198 1 270 1 103 8 30 1 250 1 329 1 156 1 126 2 231 1 
160 1 257 1 309 2 273 1 37 1 113 1 279 1 136 1 116 1 320 1 192 1 323 1 91 1 142 1 171 1 366 1 54 1 147 1 27 1 194 1 242 1 297 1 295 3 9 1 83 1 30 2 156 1 203 1 126 1 
255 1 309 2 273 1 88 1 113 1 279 1 280 3 136 1 361 1 116 1 192 4 321 1 323 1 91 3 171 1 93 1 54 2 147 1 194 1 295 8 83 1 30 4 202 1 126 1 302 1 380 1 381 1 
87 1 160 2 309 4 273 1 37 1 111 1 311 1 261 1 280 1 279 2 113 11 41 1 136 1 167 3 116 2 320 1 192 8 323 2 91 2 171 2 365 3 343 1 54 1 369 1 147 11 27 2 194 4 295 14 83 2 30 6 329 1 302 1 126 2 
87 1 273 1 309 2 280 1 279 1 314 1 315 1 70 1 212 1 285 1 286 1 320 1 192 1 48 1 323 1 171 1 24 1 366 1 144 1 219 1 173 1 194 1 242 1 195 1 373 1 297 2 295 2 222 1 196 1 177 1 9 2 83 1 103 1 30 1 329 1 156 1 126 1 253 1 
87 1 273 3 37 2 133 2 280 3 279 3 136 3 282 1 285 3 286 1 192 11 48 1 91 11 54 6 144 3 147 7 195 1 242 1 194 7 297 3 295 22 196 2 9 3 103 3 250 1 154 1 301 1 202 1 156 1 302 5 253 2 255 1 160 2 309 6 18 2 113 7 315 2 212 2 361 1 170 2 116 3 320 1 321 1 323 3 171 3 366 1 24 2 173 2 27 2 373 2 29 2 177 2 83 3 30 11 329 1 228 2 126 3 380 1 381 1 
171 1 160 1 147 1 273 1 309 2 194 1 295 2 88 1 113 1 279 1 83 1 4 1 116 1 302 1 126 1 192 2 323 1 91 1 
171 1 54 1 147 1 273 1 309 2 37 1 194 1 295 2 88 1 113 1 279 1 136 1 83 1 89 1 30 2 126 1 323 1 91 1 
160 1 309 2 273 1 37 1 88 1 279 1 113 2 136 1 116 1 192 2 323 1 91 1 171 1 54 1 27 1 147 2 194 2 295 4 83 1 30 2 126 1 
171 1 160 1 147 1 273 1 309 2 194 1 295 2 113 1 279 1 269 1 83 1 4 1 116 1 302 1 126 1 192 2 323 1 91 1 
171 1 54 1 147 1 273 1 309 2 37 1 194 1 295 2 113 1 279 1 269 1 136 1 83 1 89 1 30 2 126 1 323 1 91 1 
160 1 309 2 273 1 37 1 279 1 113 2 136 1 116 1 192 2 323 1 91 2 171 1 54 1 27 1 147 2 194 2 295 4 269 1 83 1 30 2 126 1 302 1 
160 1 309 2 273 1 37 1 279 1 113 2 136 1 116 1 192 2 323 1 91 1 171 1 54 1 27 1 147 2 194 2 295 4 83 1 30 2 126 1 
87 1 273 1 309 2 280 1 279 1 315 1 212 1 285 1 192 1 48 1 323 1 171 1 24 1 144 1 173 1 373 1 295 2 29 1 297 1 196 1 177 1 9 1 83 1 103 1 30 1 329 1 126 1 253 1 
87 1 273 1 309 2 280 1 279 1 315 1 338 1 212 1 285 1 192 1 289 1 48 1 323 1 171 1 24 1 144 1 173 1 373 1 295 2 297 1 98 1 196 1 9 1 83 1 103 1 30 1 329 1 126 1 
160 1 309 2 273 1 37 1 279 1 113 2 136 1 116 1 320 1 192 2 323 1 91 1 171 1 54 1 27 1 147 2 194 2 295 4 83 1 30 2 126 1 
160 1 37 1 273 1 309 2 113 2 279 1 315 1 136 1 212 1 170 1 285 1 116 1 192 2 323 1 91 1 171 1 24 1 54 1 144 1 173 1 147 2 27 1 194 2 373 1 294 1 295 4 29 1 297 1 196 1 177 1 9 1 83 1 30 2 103 1 126 1 253 1 
160 1 257 1 37 1 309 2 273 1 279 1 113 1 136 1 116 1 320 1 192 2 323 1 91 1 171 1 366 1 27 1 147 1 242 1 194 1 296 1 297 1 295 3 9 1 83 1 30 1 156 1 203 1 302 1 126 1 
160 2 35 1 37 1 309 4 232 1 15 1 261 1 136 1 41 1 167 2 116 2 192 6 72 1 323 2 49 1 91 2 171 2 365 1 54 1 27 2 57 1 58 1 221 1 295 11 82 1 83 2 30 5 126 2 302 1 
160 3 2 2 35 1 309 6 232 1 37 2 15 2 278 1 277 1 136 2 41 2 167 2 189 1 116 3 341 1 192 14 323 3 49 1 91 4 171 3 365 2 54 2 27 3 347 1 57 2 221 1 295 26 223 1 82 4 83 3 30 12 226 1 302 2 126 3 
2 2 35 1 232 1 37 2 277 1 278 1 41 3 136 3 189 1 192 21 341 1 91 8 49 1 54 3 57 2 347 1 58 1 148 1 295 38 202 1 302 5 255 1 160 4 309 8 15 1 261 1 167 4 361 1 116 5 321 1 323 4 365 3 171 4 27 4 221 1 223 1 82 4 83 4 30 17 226 1 126 4 380 1 381 1 
160 2 35 1 37 1 309 4 232 1 15 1 261 1 278 1 136 1 41 1 167 2 116 2 192 7 323 2 49 1 91 3 171 2 365 1 54 1 27 2 57 1 58 1 221 1 295 13 82 2 83 2 30 6 126 2 302 2 
255 1 160 4 2 2 35 1 309 6 232 1 37 3 15 1 261 1 278 1 277 1 41 2 136 4 167 3 361 1 189 1 116 5 321 1 341 1 192 19 323 3 49 1 91 8 171 3 365 2 54 4 27 4 347 1 57 1 221 1 295 36 223 1 82 3 83 3 30 17 226 1 202 1 302 4 126 3 380 1 381 1 
216 1 101 1 56 1 120 1 31 1 140 1 303 1 79 1 127 1 17 1 
290 1 324 1 
216 1 327 1 120 1 31 1 140 1 288 1 165 1 79 1 17 1 
64 1 131 1 
360 1 163 1 84 1 
216 1 368 1 56 1 120 1 333 1 292 2 268 1 79 1 59 1 17 1 39 1 69 1 328 1 31 1 140 1 303 1 127 1 254 1 
216 1 368 1 56 1 120 1 333 1 292 2 268 1 79 1 59 1 17 1 39 1 69 1 328 1 31 1 140 1 303 1 127 1 254 1 
216 1 368 1 56 1 120 1 333 1 292 2 268 1 79 1 59 1 17 1 39 1 69 1 328 1 31 1 140 1 303 1 127 1 254 1 
64 1 163 1 131 1 
64 1 163 1 131 1 
360 1 84 1 
360 1 163 1 84 1 
12 1 190 1 
352 1 33 1 12 1 333 1 17 1 280 1 39 1 140 1 190 1 290 1 324 1 216 1 366 2 120 1 242 2 268 1 292 1 121 1 79 1 297 2 59 1 9 2 123 1 31 1 377 1 156 2 86 1 
205 1 87 1 273 1 309 2 279 1 315 1 212 1 319 1 266 1 285 2 320 1 192 1 323 1 23 2 238 1 171 1 144 2 173 1 242 2 297 2 295 2 298 1 196 1 9 2 83 1 270 1 103 2 30 1 376 1 329 1 126 1 
50 1 239 1 144 1 173 1 94 1 196 1 19 1 315 1 103 1 200 1 212 1 285 1 322 1 48 1 
144 1 306 1 129 1 94 1 260 2 299 1 262 1 315 1 90 1 103 1 200 1 251 1 212 1 250 1 20 1 168 1 285 1 105 1 
144 2 306 1 129 1 94 1 294 1 260 2 299 1 262 1 315 1 90 1 103 2 200 1 251 1 212 1 250 1 20 1 168 1 285 2 105 1 
144 1 306 1 129 1 150 1 260 2 299 1 262 1 315 1 90 1 103 1 200 1 251 1 250 1 212 1 168 1 285 1 105 1 
227 1 
51 1 367 1 36 1 274 1 187 1 10 1 263 1 169 1 328 1 45 1 
92 1 66 5 160 2 182 5 27 2 37 2 274 5 110 2 374 5 18 1 136 2 328 5 116 2 230 10 45 5 
367 1 26 1 333 1 328 1 358 1 59 1 
162 2 184 1 308 1 333 3 274 2 275 2 358 4 19 1 135 2 315 1 263 2 212 1 169 1 285 4 236 1 45 2 322 1 48 2 117 1 51 2 144 4 173 1 26 2 220 1 59 3 196 1 10 2 153 1 103 4 
93 1 367 1 187 1 36 1 274 1 328 1 45 1 
66 1 333 1 274 1 358 1 263 1 169 1 318 1 213 1 45 1 51 1 367 1 26 1 59 1 10 1 328 2 230 1 32 1 
1 2 182 6 36 1 333 5 37 2 274 9 275 2 135 1 187 1 136 2 283 1 285 3 45 8 48 1 47 2 51 4 92 2 240 2 144 3 294 1 59 5 196 3 10 4 103 3 204 3 65 2 66 6 160 2 162 1 308 1 110 2 312 1 358 5 67 1 18 2 315 3 263 4 316 2 212 4 169 4 116 2 172 2 367 2 218 1 173 10 26 3 27 2 28 2 373 3 374 6 224 2 328 8 85 2 230 12 
66 3 182 5 160 2 162 1 183 1 333 1 37 2 274 8 110 2 275 1 358 1 277 1 41 1 136 2 263 2 167 1 189 1 169 2 116 2 341 1 45 5 92 1 51 2 365 1 367 2 146 1 26 1 27 2 347 1 374 5 59 1 10 2 328 5 226 1 230 6 
206 1 333 1 274 2 110 2 136 1 115 1 263 1 361 1 169 1 116 2 321 1 45 2 73 1 92 1 51 1 366 1 193 1 242 1 297 1 176 1 59 1 348 1 9 1 178 1 10 1 203 1 156 1 381 1 
87 1 206 1 309 2 273 1 280 1 279 1 315 1 212 1 285 1 323 1 48 1 171 1 366 2 24 1 144 1 173 1 242 2 373 1 295 1 297 3 29 1 80 1 196 1 177 1 9 3 83 1 30 1 103 1 156 2 203 2 126 1 253 1 
51 1 66 2 182 2 367 2 162 1 274 1 275 1 374 2 10 1 263 1 169 1 328 4 202 1 230 4 45 2 
209 1 216 1 12 1 56 1 31 1 
216 1 25 1 31 1 
216 1 25 1 31 1 
216 1 25 1 31 1 
216 1 31 1 77 1 
216 1 31 1 77 1 
216 1 31 1 77 1 
216 1 31 1 
140 1 79 1 
54 2 176 1 295 10 136 2 30 5 361 1 116 2 302 2 192 5 321 1 381 1 91 4 
171 1 160 1 232 1 309 2 295 2 83 1 116 1 126 1 192 2 302 1 323 1 91 1 
171 1 54 1 160 1 232 1 309 2 27 1 37 1 295 4 136 1 83 1 30 2 116 1 126 1 192 2 323 1 91 1 
171 1 54 1 232 1 309 2 295 2 83 1 30 1 361 1 126 1 302 1 192 1 323 1 381 1 91 2 
255 1 160 3 2 2 309 10 232 1 37 2 207 1 261 1 41 1 136 4 114 1 167 4 361 3 264 1 116 5 321 2 363 1 192 17 323 5 91 12 171 5 365 3 215 1 54 6 27 3 58 1 295 34 83 5 30 17 202 1 126 5 302 6 380 1 381 3 
255 1 309 2 232 1 136 1 41 1 167 1 189 1 361 1 116 1 321 1 192 5 323 1 91 3 365 1 171 1 54 2 295 10 83 1 30 5 202 1 126 1 302 1 380 1 381 1 
255 1 160 1 232 1 309 4 207 1 261 1 136 1 41 1 167 2 361 1 189 1 116 2 321 1 192 7 323 2 91 4 171 2 365 1 54 2 27 1 295 13 83 2 30 6 202 1 126 2 302 2 380 1 381 1 
160 2 2 2 309 8 232 1 37 1 207 1 277 1 41 1 136 1 167 1 189 1 116 2 192 7 341 1 323 4 91 3 365 1 171 4 54 1 27 2 347 1 295 12 83 4 30 5 226 1 302 2 126 4 
160 2 2 2 309 8 232 1 37 1 207 1 277 1 41 1 136 1 167 1 189 1 116 2 192 7 341 1 323 4 91 3 365 1 171 4 54 2 27 2 347 1 295 12 83 4 30 5 226 1 302 1 126 4 
255 1 309 2 232 1 136 1 41 1 167 1 189 1 361 1 116 1 321 1 192 5 323 1 91 3 365 1 171 1 54 2 295 10 83 1 30 5 202 1 126 1 302 1 380 1 381 1 
160 2 2 2 309 6 232 1 37 1 277 1 41 1 136 1 167 1 189 1 116 2 192 7 341 1 323 3 91 4 365 1 171 3 54 2 27 2 347 1 295 12 83 3 30 5 226 1 302 2 126 3 
255 1 160 2 2 2 309 8 232 1 37 1 207 1 277 1 41 1 136 2 167 1 361 1 189 1 116 3 321 1 341 1 192 11 323 4 91 5 171 4 365 1 54 3 27 2 347 1 295 20 83 4 30 9 226 1 202 1 302 2 126 4 380 1 381 1 
160 2 232 1 309 4 37 1 277 1 41 1 136 1 167 1 189 1 116 2 192 7 341 1 323 2 91 4 171 2 365 1 54 2 27 2 347 1 58 1 295 12 83 2 30 5 226 1 302 2 126 2 
255 2 54 2 295 4 30 2 361 2 302 2 192 2 380 1 381 2 91 4 
255 1 160 2 2 2 232 1 309 8 37 1 277 1 41 1 136 2 167 1 361 1 189 1 116 3 321 1 341 1 192 11 323 4 91 5 171 4 365 1 54 3 27 2 347 1 58 1 295 20 83 4 30 9 226 1 202 1 302 2 126 4 380 1 381 1 
171 2 255 1 54 2 2 1 309 4 295 8 136 1 83 2 30 4 361 1 202 1 116 1 321 1 192 4 302 1 126 2 380 1 323 2 91 3 381 1 
93 1 255 1 54 2 295 8 136 1 30 4 361 1 202 1 116 1 302 1 192 4 321 1 380 1 381 1 91 3 
171 1 54 1 160 1 37 1 309 2 27 1 207 1 295 4 136 1 83 1 30 2 116 1 126 1 192 2 302 1 323 1 91 2 
365 1 54 1 160 1 37 1 27 1 295 7 261 1 136 1 41 1 30 4 167 2 116 1 192 3 302 1 91 2 
255 1 160 2 2 2 37 2 309 4 311 1 261 1 136 3 114 1 167 2 361 2 116 3 321 1 192 11 323 2 91 9 365 2 171 2 343 1 54 5 27 2 295 23 83 2 30 12 202 1 302 4 126 2 380 1 381 2 
30 1 167 1 295 1 
365 1 192 1 295 1 
171 1 160 1 54 2 309 2 27 1 37 1 207 1 295 6 18 1 136 1 83 1 30 3 116 1 126 1 192 3 302 2 323 1 91 4 
160 2 309 2 232 1 37 1 277 1 41 1 136 1 167 1 189 1 116 2 192 7 341 1 323 1 91 4 365 1 171 1 54 2 27 2 347 1 295 12 83 1 30 5 226 1 302 2 126 1 
54 1 295 6 136 1 30 3 361 1 116 1 321 1 192 3 302 1 381 1 91 2 
171 1 255 1 54 1 2 1 309 2 295 3 114 1 83 1 30 2 361 1 192 1 302 1 126 1 380 1 323 1 91 2 381 1 
280 1 9 1 197 1 242 1 259 1 164 1 297 1 
55 1 242 1 164 1 259 1 175 1 297 1 280 1 99 1 197 1 9 1 44 1 74 1 
144 4 173 1 326 1 7 1 294 1 19 1 196 1 315 1 103 4 212 1 285 4 322 1 48 1 
53 1 144 2 173 1 307 1 373 1 313 1 208 1 196 1 135 1 315 1 103 2 282 1 212 2 285 2 
299 1 315 1 144 1 129 1 103 1 251 1 212 1 285 1 260 1 48 1 
144 2 173 1 294 1 196 1 315 1 103 2 270 1 250 1 212 1 285 2 238 1 
144 5 173 3 326 1 294 1 19 1 196 2 135 1 315 2 103 5 270 1 198 1 212 2 285 4 322 1 231 1 48 1 
144 5 173 3 326 1 294 1 19 1 196 2 135 1 315 2 103 5 270 1 198 1 212 2 285 4 322 1 48 1 106 1 
196 1 19 1 93 1 315 1 144 1 173 1 103 1 212 1 285 1 322 1 48 1 
24 1 366 1 144 1 173 1 242 1 373 1 297 2 280 1 196 1 177 1 315 1 9 2 103 1 212 1 285 1 286 1 156 1 48 1 
24 1 366 2 144 1 173 3 242 2 28 1 373 2 297 2 280 1 196 2 224 1 135 1 177 1 315 1 9 2 178 1 102 1 103 1 11 1 212 1 285 1 286 1 156 1 
280 1 315 1 338 1 135 1 212 1 285 2 286 1 366 2 24 1 144 2 173 3 7 1 242 2 28 1 373 2 297 2 196 2 224 1 9 2 102 1 178 1 103 2 11 1 156 1 
172 1 367 1 144 3 173 4 333 2 7 1 28 1 373 1 358 1 59 2 122 1 196 1 224 1 135 1 315 1 316 1 103 3 212 1 328 1 362 1 285 3 48 1 204 1 
172 1 240 1 367 1 144 3 173 4 333 2 7 1 28 1 373 1 358 1 59 2 196 1 224 1 135 1 315 1 316 1 103 3 212 1 328 1 285 3 48 1 204 1 
315 1 144 1 103 1 212 1 285 1 76 1 
53 1 75 1 353 1 144 7 218 1 173 3 307 1 76 1 294 1 373 1 196 2 315 2 198 1 270 1 103 7 250 1 212 3 285 6 231 1 23 1 48 2 
273 2 133 1 279 2 280 3 136 1 285 1 286 1 192 4 91 3 144 1 54 2 147 1 194 1 242 1 294 1 297 2 295 8 196 1 9 2 103 1 202 1 156 1 302 1 253 1 255 1 309 4 113 1 315 1 212 1 361 1 170 1 319 1 116 1 320 1 321 1 323 2 171 2 366 1 24 1 173 1 373 1 29 1 177 1 83 2 30 4 126 2 380 1 381 1 
65 1 1 1 36 1 308 1 333 3 274 1 358 2 187 1 263 2 316 1 169 2 285 1 45 1 48 1 51 2 172 1 240 1 367 1 144 1 173 2 26 1 59 3 10 2 103 1 328 1 85 1 86 1 204 1 
172 1 144 2 218 1 173 2 76 1 294 1 373 1 196 1 315 1 103 2 283 1 212 2 285 2 
24 1 366 1 144 1 173 1 242 1 373 1 297 2 280 1 196 1 338 1 315 1 9 2 103 1 212 1 285 1 286 1 156 1 48 1 
53 1 75 1 144 1 218 1 173 1 307 1 373 1 196 1 135 1 315 1 103 1 212 2 285 1 
280 1 124 1 247 1 5 1 139 1 
367 1 333 2 310 1 276 1 59 2 280 1 166 1 178 1 102 1 247 1 124 2 316 1 11 1 339 1 5 2 328 1 139 2 141 1 86 1 
205 1 242 1 297 1 298 1 9 1 124 1 247 1 5 1 376 1 
166 1 247 1 141 1 
143 1 248 1 13 1 271 1 95 1 43 1 155 1 68 1 
143 4 325 1 13 4 132 1 68 2 349 1 359 1 3 1 248 3 271 1 265 2 43 1 155 2 304 1 
143 2 13 2 95 1 332 1 356 1 68 1 248 1 271 1 60 1 265 1 43 1 155 1 
143 3 13 3 95 1 258 1 68 1 349 1 3 2 248 1 271 1 43 1 155 1 304 2 
351 1 256 2 248 2 62 1 
143 1 13 1 271 1 95 1 43 1 61 1 
143 2 248 1 13 2 271 1 95 1 265 1 43 1 155 1 128 1 68 1 
337 1 
143 1 248 1 13 1 271 1 95 1 43 1 155 1 68 1 
93 1 248 1 155 1 68 1 
143 1 248 1 13 1 271 1 43 1 155 1 68 1 
186 1 13 1 330 1 
143 3 13 3 95 1 68 1 349 1 3 2 248 1 271 1 43 1 155 1 71 1 304 1 
143 2 34 1 248 1 13 2 271 1 265 1 43 1 155 1 68 1 
143 1 325 1 129 1 248 1 13 1 271 1 95 1 43 1 105 1 260 1 112 1 
143 1 248 1 13 1 271 1 95 1 43 1 155 1 
143 1 13 1 271 1 95 1 43 1 155 2 68 1 
143 2 13 2 95 1 334 1 336 1 248 1 271 2 43 2 155 1 305 1 
143 3 325 1 359 1 145 1 248 2 13 3 271 1 95 1 265 2 43 1 155 1 128 1 68 1 
143 2 345 1 129 1 13 2 95 1 260 2 68 1 248 1 90 1 251 1 271 1 265 1 43 1 155 1 105 1 
143 4 325 1 359 1 34 1 217 1 248 2 13 4 271 2 95 1 265 2 43 2 155 1 68 1 
143 3 3 1 248 1 13 3 271 1 95 1 265 1 43 1 155 1 128 1 68 1 
325 1 359 1 248 1 132 1 
248 1 155 1 

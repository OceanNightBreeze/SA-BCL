#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 83 2 304 2 276 9 25 1 236 1 131 1 370 5 282 9 61 2 207 1 326 2 346 1 333 1 35 1 374 6 377 1 121 1 351 1 264 4 10 1 290 2 268 1 380 1 104 1 381 1 19 2 127 3 
253 2 83 2 304 2 276 9 25 1 236 1 131 1 370 5 282 9 61 2 207 1 326 2 346 1 333 1 35 1 374 6 377 1 121 1 351 1 264 4 10 1 290 2 268 1 380 1 104 1 381 1 19 2 127 3 
253 2 83 2 304 2 276 10 25 1 236 1 131 1 370 6 282 10 61 2 207 1 326 2 346 1 333 1 35 1 374 7 377 1 121 1 351 1 264 5 10 1 290 2 268 1 380 1 104 1 381 1 19 2 127 4 
253 2 83 2 304 2 276 7 25 1 236 1 131 1 370 4 282 7 61 2 207 1 326 2 346 1 333 1 35 1 374 4 377 1 121 1 264 3 10 1 290 2 268 1 380 1 104 1 381 1 19 1 127 2 
35 1 374 3 377 1 351 1 304 1 264 2 83 1 10 1 276 4 25 1 290 1 131 1 370 3 282 4 61 1 326 1 19 2 127 1 
35 1 377 1 253 1 304 1 276 2 84 1 25 1 290 1 236 1 370 1 282 2 61 1 326 1 179 1 104 1 272 1 
35 1 374 1 377 1 253 1 264 1 276 3 25 1 370 2 282 3 61 2 380 1 326 2 127 1 
361 1 253 1 83 1 304 1 276 9 25 1 131 1 370 5 282 9 61 2 326 2 346 1 261 1 35 1 374 7 377 1 264 4 351 1 10 1 290 1 380 1 381 1 19 2 127 3 
361 1 253 1 83 1 304 1 276 9 25 1 131 1 370 5 282 9 61 2 326 2 346 1 261 1 35 1 374 7 377 1 264 4 351 1 10 1 290 1 380 1 381 1 19 2 127 3 
87 1 266 1 171 1 
87 1 249 2 319 1 
334 2 193 2 77 2 39 1 303 2 18 1 296 2 201 2 
229 1 230 2 321 1 303 2 366 1 275 1 55 1 255 1 233 1 202 1 201 3 175 1 30 1 347 1 152 1 116 2 373 1 180 1 118 1 375 1 334 2 376 1 39 1 140 1 141 2 75 1 293 1 142 1 193 2 270 1 77 2 248 2 359 1 271 1 18 1 105 2 296 3 
334 1 193 1 77 1 39 1 303 1 316 1 217 1 367 1 296 1 201 1 
50 1 108 1 303 1 217 1 201 1 98 1 171 1 308 1 133 1 87 1 296 1 295 1 66 1 336 1 
50 2 334 1 303 1 217 1 201 1 98 1 171 1 133 1 87 1 193 1 77 1 295 2 296 1 66 1 336 1 
50 1 15 1 88 1 358 1 295 1 
50 2 87 1 88 1 139 1 358 1 295 2 171 1 227 1 
50 1 358 1 295 1 
50 1 334 1 39 1 303 1 217 1 367 1 201 1 193 1 77 1 88 1 316 1 317 1 295 1 296 1 
87 1 
50 2 87 1 161 1 88 1 139 1 358 1 295 2 171 1 
50 5 197 1 139 1 41 1 56 1 171 1 4 1 188 1 124 1 87 1 103 2 294 1 247 2 88 2 195 1 358 2 46 1 295 5 166 2 
266 1 18 1 
81 1 334 1 303 2 231 1 201 2 193 1 77 1 296 2 18 2 
299 1 119 1 185 1 
230 1 275 1 141 1 233 1 75 1 201 1 175 1 30 1 115 1 271 1 18 1 296 1 116 1 152 1 373 1 180 1 
299 1 334 1 230 1 303 1 275 1 141 1 233 1 75 1 341 1 306 1 201 2 175 1 30 1 77 1 271 1 296 2 152 1 116 1 373 1 180 1 
193 1 334 3 77 3 303 3 18 1 296 3 306 1 201 3 
334 1 77 1 303 1 217 1 367 1 296 1 201 1 
81 1 334 1 193 1 77 1 303 1 217 1 231 1 296 1 201 1 
81 1 50 1 229 1 321 1 230 1 303 3 275 1 55 1 233 1 341 1 202 1 201 4 306 1 133 1 175 1 30 1 152 1 116 1 66 1 373 1 155 1 180 1 118 1 375 1 334 3 39 1 140 1 217 1 40 1 141 1 75 1 98 1 142 1 193 2 270 1 77 3 248 1 359 1 271 1 18 1 105 2 296 4 295 1 336 1 
334 1 77 1 303 2 18 1 296 2 201 2 306 1 57 1 308 1 
81 1 50 1 334 3 303 3 217 1 341 1 306 2 201 3 98 1 133 1 193 1 87 1 77 3 134 1 295 1 296 3 66 1 155 1 336 1 
81 1 299 1 334 2 303 2 306 1 185 1 201 2 193 1 77 2 296 2 
230 1 275 1 141 1 75 1 233 1 201 1 175 1 30 1 271 1 18 1 296 1 116 1 152 1 373 1 180 1 
230 1 275 1 141 1 75 1 233 1 201 1 175 1 29 1 178 1 271 1 18 1 296 1 116 1 152 1 373 1 
299 2 51 1 55 1 279 1 111 1 204 1 347 2 372 1 348 1 118 1 375 1 119 2 182 1 69 1 140 1 185 2 291 1 142 1 270 1 248 4 359 2 105 2 226 1 360 1 
334 1 77 1 303 1 217 1 296 1 98 1 201 1 292 1 
81 1 196 1 334 4 303 5 341 1 306 2 201 5 57 1 308 1 193 1 77 4 165 1 296 5 18 1 
334 2 77 2 303 2 217 1 367 1 296 2 201 2 292 1 
357 1 322 1 
357 1 322 1 
102 1 28 1 
102 1 28 1 
102 1 28 1 
0 1 357 1 322 1 
357 1 322 1 340 1 
349 1 102 1 28 1 357 2 322 2 281 1 
0 1 357 1 322 1 
0 1 357 1 322 1 
357 1 322 1 136 1 
357 1 322 1 136 1 
357 1 322 1 136 1 
50 2 214 2 216 1 107 2 263 2 322 2 72 2 73 1 280 1 281 1 85 1 191 1 87 1 357 2 135 2 329 1 295 2 250 3 128 1 
50 1 107 1 23 1 303 2 322 1 280 1 3 1 340 1 201 2 63 1 135 1 137 1 214 1 334 2 71 1 72 1 97 1 77 2 357 1 18 1 295 1 296 2 48 1 250 1 
304 1 83 1 290 1 
304 1 272 1 290 1 
22 1 64 1 83 2 304 3 272 1 92 1 
106 1 22 1 64 1 83 1 304 2 272 1 
22 1 64 2 83 1 304 2 272 1 
50 5 1 2 3 1 24 1 342 2 171 1 56 3 324 1 204 1 283 1 87 2 88 4 137 1 138 2 348 1 139 1 71 1 289 1 291 1 378 1 103 1 314 1 294 2 247 1 358 1 46 1 249 3 295 5 319 1 226 1 228 1 166 1 
50 9 197 1 168 1 342 6 171 1 56 8 204 3 173 1 283 2 87 5 88 7 150 1 137 4 138 6 348 3 9 1 139 1 289 3 245 1 291 3 378 2 100 1 15 5 314 1 103 2 294 6 247 2 358 6 46 1 273 5 249 9 295 9 319 3 226 3 166 2 
50 3 197 1 1 1 24 1 342 2 171 1 56 3 204 1 283 1 87 3 88 2 137 1 138 2 348 1 289 1 291 1 378 1 103 1 247 1 294 2 295 3 249 4 319 2 226 1 228 1 166 1 
50 4 197 1 1 2 168 1 24 1 342 4 171 1 56 5 204 2 283 1 87 4 88 3 137 2 138 4 348 2 9 1 289 2 291 2 378 1 100 1 103 1 247 1 294 4 249 7 295 4 319 3 226 2 166 1 228 1 
266 1 233 1 234 1 
233 1 123 1 
335 1 
233 1 152 1 
271 1 234 2 233 3 152 1 323 1 42 1 
271 1 233 1 152 1 
143 1 233 1 
51 2 242 1 69 3 147 1 307 1 269 2 177 1 256 1 248 7 344 1 310 1 16 1 359 3 297 1 347 4 348 1 226 1 
51 2 242 1 69 3 147 1 307 1 269 2 177 1 256 1 248 7 344 1 310 1 16 1 359 3 297 1 347 4 348 1 226 1 
51 2 242 1 69 3 243 1 147 1 307 1 269 2 177 1 256 1 344 1 248 7 310 1 16 1 359 3 297 1 347 4 348 1 226 1 
51 5 147 5 55 1 307 1 204 3 177 1 344 1 256 2 345 1 310 2 211 1 347 16 348 4 240 3 242 1 287 1 69 10 140 1 289 3 354 4 220 1 291 3 269 3 44 1 14 1 142 1 270 1 248 31 16 2 359 15 105 2 297 2 226 4 145 1 
51 3 147 1 55 2 307 1 177 1 5 1 344 1 256 1 310 1 347 5 348 1 69 4 140 2 269 2 44 1 142 2 270 2 223 1 248 9 16 1 359 4 105 4 297 1 226 1 
230 1 338 1 253 1 339 1 83 1 304 2 276 2 277 1 25 1 235 1 370 1 282 2 61 1 31 1 238 1 326 1 116 1 373 1 92 1 35 1 374 1 313 1 377 1 141 1 290 1 75 1 76 1 272 1 318 1 49 1 
230 1 253 1 83 1 304 2 305 1 276 3 277 1 25 1 235 1 370 1 282 3 61 1 31 1 238 1 326 1 116 1 92 1 373 1 239 1 374 2 313 1 377 1 141 1 290 1 75 1 76 1 272 1 318 1 49 1 144 1 
230 1 253 1 304 2 83 1 276 2 25 1 235 1 370 1 282 2 238 1 116 1 373 1 92 1 239 1 374 2 313 1 377 1 141 1 75 1 290 1 76 1 272 1 318 1 49 1 144 1 
230 1 253 2 275 1 305 1 276 1 235 2 233 1 282 1 61 1 27 1 238 2 326 1 116 1 152 1 93 1 373 1 213 1 37 1 262 1 141 1 75 1 49 2 80 1 
230 1 253 1 339 1 83 1 304 2 276 1 277 1 235 1 282 1 61 1 31 1 238 1 326 1 116 1 373 1 92 1 35 1 239 1 313 1 141 1 290 1 75 1 76 1 272 1 318 1 49 1 
365 1 
300 2 298 2 50 5 301 2 252 2 108 1 303 1 109 2 199 1 201 1 56 2 308 1 152 1 116 2 212 1 66 1 213 1 262 1 217 1 75 1 74 1 12 2 159 1 358 6 319 2 166 1 230 2 364 4 275 2 368 1 233 1 171 1 133 1 174 1 87 2 373 1 332 1 34 1 288 1 139 3 141 2 186 1 98 1 187 1 378 1 246 2 43 1 103 1 294 2 247 1 46 1 249 2 295 5 296 1 336 1 
50 3 108 1 303 1 364 2 199 1 201 1 308 1 133 1 66 1 34 1 332 1 217 1 139 1 74 1 98 1 246 1 43 1 161 1 358 2 296 1 295 3 336 1 
50 3 300 1 108 1 303 1 364 3 199 1 201 1 171 1 308 1 133 1 87 1 66 1 34 1 332 1 217 1 139 1 74 1 98 1 43 1 161 1 358 1 296 1 295 3 336 1 
50 3 298 1 300 1 108 1 303 1 364 3 199 1 201 1 171 1 308 1 133 1 87 1 66 1 34 1 332 1 139 1 217 1 74 1 98 1 246 1 43 1 161 1 358 2 296 1 295 3 336 1 
298 4 50 5 300 2 301 2 252 2 108 1 53 1 303 2 199 1 109 2 201 2 56 1 308 1 66 1 217 2 219 1 74 1 12 2 161 1 77 1 316 1 358 7 225 1 317 1 319 2 166 1 364 4 367 1 130 1 368 1 171 1 133 1 87 1 327 1 332 1 34 1 334 1 39 1 288 1 139 3 98 1 246 4 43 1 193 1 103 1 247 1 294 1 46 1 296 2 295 5 336 1 
50 4 298 2 300 2 301 2 252 2 108 1 303 1 199 1 109 2 201 1 56 1 308 1 66 1 217 1 74 1 12 2 358 4 319 2 166 1 364 4 368 1 171 1 133 1 87 2 332 1 34 1 288 1 139 2 98 1 187 1 246 2 43 1 103 1 247 1 294 1 46 1 296 1 295 4 249 2 336 1 
50 4 298 2 300 2 301 2 252 2 53 1 108 1 303 2 199 1 109 2 201 2 56 1 308 1 66 1 217 2 74 1 12 2 77 1 316 1 358 4 317 1 319 2 166 1 364 4 367 1 130 1 368 1 171 1 133 1 87 1 327 1 332 1 34 1 334 1 39 1 288 1 139 2 98 1 246 2 43 1 193 1 103 1 247 1 294 1 46 1 295 4 296 2 336 1 
50 4 298 2 300 2 301 2 252 2 53 1 108 1 303 2 199 1 109 2 201 2 56 1 308 1 66 1 217 2 74 1 12 2 77 1 316 1 358 4 317 1 319 2 166 1 364 4 367 1 130 1 368 1 171 1 133 1 87 1 327 1 332 1 34 1 334 1 39 1 288 1 139 2 98 1 246 2 43 1 193 1 103 1 247 1 294 1 46 1 295 4 296 2 336 1 
50 4 298 2 300 2 301 2 108 1 146 1 303 2 199 1 109 2 201 2 110 1 56 1 308 1 66 1 217 2 74 1 77 1 316 1 358 4 317 1 166 1 364 4 367 1 369 1 171 1 133 1 87 1 327 1 331 2 332 1 34 1 334 1 181 2 39 1 288 1 139 2 98 1 246 2 43 1 193 1 103 1 247 1 294 1 46 1 295 4 296 2 249 2 336 1 
300 3 298 3 50 4 301 2 252 2 108 1 53 1 303 2 199 1 109 2 201 2 56 1 308 1 66 1 217 2 219 1 74 1 12 2 77 1 316 1 358 5 317 1 319 2 166 1 364 5 367 1 130 1 368 1 171 1 133 1 87 1 327 1 332 1 34 1 334 1 39 1 288 1 139 2 98 1 246 3 43 1 193 1 103 1 247 1 294 1 46 1 295 4 296 2 336 1 
300 3 298 3 50 4 301 2 252 2 108 1 53 1 303 2 199 1 109 2 201 2 56 1 308 1 66 1 217 2 219 1 74 1 12 2 77 1 316 1 358 5 317 1 319 2 166 1 364 5 367 1 130 1 368 1 171 1 133 1 87 1 327 1 332 1 34 1 334 1 39 1 288 1 139 2 98 1 246 3 43 1 193 1 103 1 247 1 294 1 46 1 295 4 296 2 336 1 
50 4 298 2 300 2 301 2 108 1 303 1 199 1 109 2 201 1 56 1 308 1 66 1 217 1 74 1 358 4 166 1 364 4 369 1 171 1 133 1 87 1 331 2 332 1 34 1 181 2 288 1 139 2 98 1 187 1 246 2 43 1 103 1 247 1 294 1 46 1 296 1 295 4 249 2 336 1 
299 1 51 2 55 1 307 1 177 1 256 1 344 1 347 3 348 1 118 1 375 1 119 1 182 1 69 2 140 1 266 1 185 1 269 1 142 1 270 1 248 6 16 1 359 3 105 2 18 2 226 1 
299 11 51 1 82 1 147 1 55 2 202 1 204 1 113 1 345 1 312 1 347 8 348 1 118 1 375 2 119 11 240 3 350 1 287 1 376 1 69 2 140 2 289 2 354 3 291 2 185 4 221 1 142 2 270 2 248 14 359 6 18 1 105 4 226 2 
230 1 303 1 275 1 55 1 233 1 341 1 201 2 306 1 202 1 175 1 30 1 65 1 115 1 152 1 116 1 347 1 6 1 373 1 180 1 118 1 375 1 350 1 334 1 376 1 140 1 141 1 75 1 185 1 160 1 142 1 77 1 270 1 248 2 271 1 359 1 18 1 296 2 105 2 
299 7 51 4 303 1 147 4 55 3 341 1 202 1 306 1 201 3 307 1 204 2 114 2 256 1 344 1 116 3 152 2 347 10 348 3 118 3 119 7 350 1 69 8 75 2 269 1 270 3 77 1 78 1 16 1 359 10 271 2 18 2 226 3 274 2 230 3 321 2 275 1 233 2 175 2 177 1 30 2 32 2 90 1 373 2 180 2 239 1 375 3 334 1 376 1 140 3 289 2 141 3 185 7 291 2 142 3 194 1 45 2 248 20 105 6 296 3 
338 1 303 1 200 1 55 2 202 1 306 1 201 1 112 1 149 1 257 1 152 3 347 1 116 7 213 1 118 2 262 1 122 1 353 1 75 4 270 2 222 1 77 1 359 1 271 1 17 1 230 6 275 2 233 4 286 1 373 3 239 1 375 2 334 1 182 1 376 1 140 2 141 7 244 1 184 1 293 1 142 2 248 2 105 4 296 1 
299 1 81 1 51 1 303 1 55 1 201 1 204 1 347 1 348 1 118 1 375 1 119 1 350 1 334 1 69 1 140 1 289 1 11 1 185 1 291 1 193 1 142 1 77 1 270 1 248 3 359 2 105 2 296 1 226 1 
299 1 118 1 375 1 119 1 182 1 69 1 140 1 147 1 55 1 185 1 291 1 142 1 270 1 248 2 105 2 347 2 226 1 360 1 
299 1 118 1 375 1 51 1 119 1 182 1 69 1 140 1 55 1 185 1 111 1 204 1 142 1 270 1 248 2 359 2 105 2 348 1 
299 2 51 1 147 1 55 1 204 1 347 2 348 1 118 1 375 1 119 2 182 1 69 2 140 1 289 1 291 1 185 2 142 1 270 1 248 4 359 2 105 2 226 1 
299 1 118 1 375 1 119 1 69 1 200 1 140 1 147 1 55 1 185 1 291 1 142 1 270 1 248 2 105 2 347 2 226 1 360 1 
299 1 118 1 375 1 51 1 119 1 69 1 200 1 140 1 55 1 185 1 111 1 204 1 142 1 270 1 248 2 359 2 105 2 348 1 
299 2 51 1 200 1 147 1 55 1 204 1 347 2 348 1 118 1 375 1 119 2 69 2 140 1 289 1 291 1 185 2 142 1 270 1 248 4 359 2 105 2 226 1 
299 2 118 1 375 1 51 1 119 2 69 2 140 1 147 1 289 1 55 1 185 2 291 1 204 1 142 1 270 1 248 4 359 2 105 2 347 2 348 1 226 1 
321 1 230 1 275 1 55 1 233 1 201 1 202 1 175 1 30 1 347 1 152 1 116 1 373 1 180 1 118 1 375 1 376 1 140 1 141 1 75 1 142 1 270 1 248 2 271 1 359 1 18 1 296 1 105 2 
230 1 275 1 55 1 233 1 201 1 202 1 175 1 29 1 178 1 347 1 152 1 116 1 285 1 373 1 118 1 375 1 376 1 140 1 141 1 75 1 142 1 270 1 248 2 271 1 359 1 18 1 296 1 105 2 
299 2 51 1 147 1 55 1 204 1 347 2 348 1 118 1 375 1 119 2 350 1 69 2 140 1 289 1 291 1 185 2 142 1 270 1 248 4 359 2 105 2 226 1 
299 2 51 1 321 1 230 1 338 1 147 1 55 1 233 1 201 1 204 1 175 1 30 1 32 1 347 2 116 1 152 1 348 1 373 1 180 1 118 1 375 1 119 2 69 2 140 1 289 1 141 1 75 1 185 2 291 1 142 1 270 1 248 4 359 2 271 1 296 1 105 2 226 1 
81 1 299 1 303 1 147 1 55 1 201 1 204 1 347 2 348 1 330 1 118 1 375 1 119 1 350 1 334 1 69 1 140 1 289 1 291 1 185 1 193 1 142 1 77 1 270 1 248 3 359 1 105 2 296 1 226 1 
51 3 147 3 55 2 2 1 309 1 204 3 325 1 5 1 345 1 258 1 347 9 348 3 95 1 240 1 120 1 287 1 69 6 70 2 140 2 289 3 265 2 354 2 291 3 142 2 162 1 270 2 248 19 359 10 105 4 226 3 
51 2 147 2 55 3 148 1 170 1 204 2 325 1 5 1 311 1 258 1 328 1 347 14 348 2 95 2 240 2 120 2 287 2 69 4 70 4 140 3 289 3 265 1 354 2 291 3 189 1 44 2 190 1 142 3 162 1 270 3 248 26 359 12 105 6 226 3 
51 4 147 4 55 3 2 1 148 1 170 1 307 1 204 4 325 1 177 1 256 1 344 1 5 1 345 1 311 1 328 1 258 1 347 20 348 5 95 1 240 3 120 2 287 3 69 8 70 4 140 3 289 4 96 1 265 1 354 4 291 4 269 1 189 1 44 1 190 1 142 3 162 1 270 3 248 41 16 1 359 21 105 6 226 5 
51 4 147 3 55 4 2 1 148 1 170 1 307 1 204 3 325 1 177 1 256 1 344 1 5 1 345 1 311 1 328 1 258 1 347 20 348 4 95 1 240 3 120 2 287 3 69 7 70 4 140 4 289 4 96 1 265 1 354 4 291 4 269 1 189 1 44 2 190 1 142 4 162 1 270 4 248 38 16 1 359 18 105 8 226 5 
51 7 147 7 55 2 148 1 170 1 307 1 204 7 325 1 177 1 256 1 344 1 5 1 345 2 311 1 328 1 258 1 312 2 347 27 348 8 95 1 240 4 120 1 287 2 69 14 70 4 140 2 289 7 265 1 354 4 291 7 269 1 44 1 189 1 190 1 142 2 162 1 270 2 248 52 16 1 359 25 105 4 226 8 
214 1 216 1 107 1 357 1 163 1 322 1 72 1 135 1 73 1 281 1 
63 1 340 1 
129 1 214 1 107 1 357 1 322 1 157 1 72 1 135 1 278 1 
50 1 214 1 216 1 107 1 263 1 322 1 72 1 73 1 280 1 281 1 85 1 191 1 87 1 357 1 135 1 295 1 250 2 128 1 
50 1 214 1 216 1 107 1 263 1 322 1 72 1 73 1 280 1 281 1 85 1 191 1 87 1 357 1 135 1 295 1 250 2 128 1 
50 1 214 1 216 1 107 1 263 1 322 1 72 1 73 1 280 1 281 1 85 1 191 1 87 1 357 1 135 1 295 1 250 2 128 1 
349 1 0 1 156 1 
349 1 0 1 156 1 
352 1 136 1 
349 1 352 1 136 1 
23 1 97 1 
50 1 107 1 23 1 303 2 322 1 3 1 340 1 201 2 59 1 63 1 88 1 135 1 137 1 214 1 334 2 263 1 71 1 72 1 97 1 191 1 357 1 77 2 18 1 296 2 295 1 48 1 250 1 
0 1 156 1 
349 1 352 1 136 1 
230 2 54 1 303 2 55 1 233 1 201 2 202 1 203 1 257 1 152 1 116 2 347 1 373 1 118 1 375 1 36 1 350 1 215 1 376 1 140 1 141 2 75 1 353 1 293 2 142 1 270 1 248 2 79 1 359 1 296 2 105 2 
239 1 230 2 363 1 338 1 198 1 83 1 304 2 141 2 290 1 75 1 235 1 76 1 31 1 272 1 116 2 153 1 318 1 92 1 373 1 
239 1 230 1 83 1 304 2 141 1 290 1 235 1 75 1 76 1 31 1 272 1 116 1 153 1 318 1 92 1 7 1 373 1 
213 1 262 1 230 1 363 1 275 1 141 1 75 1 233 1 235 1 126 1 152 1 116 1 373 1 93 1 
239 1 230 1 363 1 198 1 83 1 304 2 141 1 290 1 75 1 235 1 76 1 31 1 272 1 116 1 153 1 318 1 92 1 373 1 
167 1 
124 1 87 1 294 1 266 1 41 1 56 1 171 1 
50 1 252 1 368 1 56 1 171 1 87 2 139 1 12 1 103 1 294 1 247 1 358 1 46 1 249 1 295 1 319 1 166 1 
50 5 338 1 302 2 254 2 342 6 56 9 204 2 114 2 62 2 152 3 116 3 348 2 117 1 67 1 75 4 123 3 124 1 315 1 358 5 271 3 319 6 226 2 166 4 230 3 275 1 233 10 234 2 171 2 323 1 133 2 176 2 87 8 284 2 91 2 138 6 373 3 139 3 289 2 141 3 41 1 186 1 291 2 378 2 379 1 101 2 192 1 103 4 247 4 294 8 46 4 143 2 295 5 249 12 251 2 
50 1 320 1 302 1 337 1 148 1 170 1 342 5 56 8 171 2 204 2 62 2 87 5 328 1 138 5 348 2 240 1 287 1 139 1 289 2 354 1 186 1 291 2 378 1 189 1 190 1 103 2 247 2 294 5 358 1 46 2 295 1 249 6 319 3 226 2 166 2 
50 1 302 1 53 1 303 1 367 1 201 1 56 2 307 1 62 2 256 1 348 1 334 1 39 1 217 1 218 1 103 1 193 1 247 1 294 2 77 1 316 1 16 1 46 1 317 1 296 1 295 1 226 2 166 1 
41 1 171 1 56 1 124 1 103 1 87 1 247 1 294 1 46 1 166 1 
302 1 289 2 291 2 342 5 56 5 204 2 114 1 62 2 87 5 294 5 249 10 138 5 226 2 319 5 348 2 
50 1 87 1 139 1 358 1 295 1 171 1 
50 3 230 4 197 1 275 2 233 1 56 2 174 1 209 1 210 1 152 1 116 4 373 1 213 1 262 1 139 2 141 4 75 1 186 2 378 2 159 1 103 2 192 1 247 2 294 2 315 2 358 4 46 1 295 3 166 2 
229 1 230 1 321 1 303 2 275 1 55 1 233 1 202 1 201 3 175 1 30 1 116 1 152 1 373 1 180 1 118 1 375 1 334 2 39 1 140 1 141 1 75 1 142 1 193 2 270 1 77 2 248 1 359 1 271 1 18 1 105 2 296 3 
342 2 186 1 378 1 56 1 171 2 269 1 103 1 87 4 294 2 247 1 46 1 249 4 138 2 319 2 166 1 
68 1 107 1 72 1 
21 1 216 1 107 1 72 1 97 1 
68 1 107 1 72 1 
68 1 107 1 72 1 
107 1 38 1 72 1 
107 1 38 1 72 1 
107 1 38 1 72 1 
107 1 72 1 
357 1 322 1 
51 2 69 3 140 2 147 1 55 2 307 1 269 1 44 1 142 2 177 1 270 2 248 8 344 1 256 1 16 1 359 4 105 4 347 4 348 1 226 1 
51 2 69 2 266 1 307 1 269 1 177 1 344 1 256 1 248 6 16 1 359 3 347 3 226 1 348 1 
51 1 362 1 69 2 140 1 289 1 147 1 55 1 291 1 204 1 142 1 270 1 248 4 359 2 105 2 347 2 348 1 226 1 
51 1 240 1 287 1 69 2 289 1 147 1 354 2 291 1 204 1 248 7 345 1 359 4 347 3 348 1 226 1 
51 5 147 4 55 2 169 1 307 1 204 2 113 1 177 1 256 2 344 1 345 1 347 11 312 1 348 3 240 2 69 9 140 2 289 2 354 2 291 2 269 1 44 2 142 2 270 2 248 23 16 2 359 12 105 4 226 3 
248 1 359 1 354 1 
240 1 248 1 347 1 
51 2 362 1 69 3 140 1 289 1 147 1 55 1 291 1 204 1 114 1 142 1 270 1 248 6 359 3 105 2 347 3 226 1 348 1 
51 1 147 1 55 1 148 1 170 1 204 2 5 1 328 1 347 6 348 2 240 1 287 1 69 2 140 1 289 2 354 1 291 2 190 1 189 1 142 1 270 1 248 12 359 6 105 2 226 2 
51 1 69 2 147 1 307 1 248 6 256 1 16 1 359 3 347 3 226 1 348 1 
51 1 69 2 140 1 147 1 55 1 169 1 44 1 142 1 177 1 270 1 256 1 344 1 248 3 16 1 359 2 105 2 347 1 
51 3 69 5 140 1 218 1 147 2 55 1 307 1 142 1 270 1 5 1 256 2 248 10 16 2 359 5 105 2 347 5 226 2 348 2 
69 1 140 1 147 1 55 1 291 1 142 1 270 1 5 1 248 2 105 2 347 2 226 1 
51 1 69 2 140 1 289 1 147 1 55 1 291 1 204 1 142 1 270 1 5 1 248 4 359 2 105 2 347 2 348 1 226 1 
51 1 69 2 140 3 147 1 55 3 2 1 169 1 44 1 142 3 270 3 248 3 5 1 256 1 16 1 359 2 105 6 347 1 
51 7 362 1 147 5 55 5 2 1 169 1 307 2 204 3 177 1 256 3 344 1 5 1 345 1 211 1 347 16 348 5 240 3 287 1 69 12 140 5 289 3 354 4 291 3 269 1 44 2 14 1 142 5 270 5 248 34 16 3 359 18 105 10 226 5 145 1 
51 2 55 1 307 1 177 1 5 1 344 1 256 1 328 1 347 4 348 1 240 1 287 1 69 2 140 1 354 1 269 1 142 1 270 1 248 8 16 1 359 4 105 2 226 1 
51 2 362 1 147 1 55 2 307 1 177 1 256 1 344 1 5 1 345 1 328 1 347 6 348 1 240 1 287 1 69 3 140 2 289 1 354 2 291 1 269 1 142 2 270 2 248 11 16 1 359 5 105 4 226 2 
51 3 362 1 147 1 55 3 148 1 170 1 307 1 204 2 177 1 256 1 344 1 5 1 328 1 347 9 348 3 240 1 287 1 69 4 140 3 289 2 354 1 291 2 269 1 189 1 190 1 44 1 142 3 270 3 248 19 16 1 359 10 105 6 226 3 
51 3 362 1 147 2 55 3 148 1 170 1 307 1 204 1 177 1 256 1 344 1 5 1 328 1 347 10 348 2 240 1 287 1 69 5 140 3 289 2 354 1 291 2 269 1 44 1 190 1 189 1 142 3 270 3 248 17 16 1 359 7 105 6 226 3 
51 2 55 1 307 1 177 1 5 1 344 1 256 1 328 1 347 4 348 1 240 1 287 1 69 2 140 1 354 1 269 1 142 1 270 1 248 8 16 1 359 4 105 2 226 1 
51 1 147 1 55 1 148 1 170 1 204 2 5 1 328 1 347 6 348 2 240 1 287 1 69 2 140 1 289 2 354 1 291 2 190 1 189 1 142 1 270 1 248 12 359 6 105 2 226 2 
51 3 362 1 147 2 55 4 148 1 170 1 307 1 204 1 177 1 256 1 344 1 5 1 328 1 347 10 348 2 240 1 287 1 69 5 140 4 289 2 354 1 291 2 269 1 189 1 190 1 44 2 142 4 270 4 248 18 16 1 359 8 105 8 226 3 
51 3 147 3 55 4 2 1 148 1 170 1 204 2 5 1 328 1 347 9 348 2 240 1 287 1 69 6 140 4 289 3 354 1 291 3 189 1 190 1 44 2 142 4 270 4 248 16 359 7 105 8 226 3 
51 3 69 6 147 3 307 1 177 1 248 7 344 2 256 3 16 3 359 4 347 3 348 1 226 1 
51 3 147 1 55 4 2 1 148 1 170 1 307 1 204 1 177 1 256 1 344 1 5 1 328 1 347 10 348 2 240 1 287 1 69 4 140 4 289 2 354 1 291 2 269 1 189 1 190 1 44 2 142 4 270 4 248 18 16 1 359 8 105 8 226 3 
303 1 164 1 18 1 296 1 201 1 57 1 308 1 
303 1 232 1 201 1 132 1 57 1 308 1 237 1 343 1 164 1 18 1 296 1 260 1 
213 1 262 1 230 1 275 1 141 1 266 1 75 1 233 1 152 1 116 1 373 1 
334 1 230 1 303 1 275 1 141 1 233 1 75 1 306 1 201 2 175 1 77 1 30 1 271 1 18 1 296 2 152 1 116 1 373 1 
230 1 303 2 233 3 201 2 306 1 175 1 30 1 116 1 152 2 373 1 334 2 217 1 141 1 75 1 98 1 77 1 315 1 271 2 143 1 18 1 296 2 251 1 336 1 
230 2 303 2 233 3 201 2 306 1 26 1 175 1 178 1 116 2 152 2 373 1 334 2 217 1 141 2 75 1 98 1 77 1 315 1 271 2 143 1 18 1 296 2 251 1 336 1 
50 2 230 3 275 1 234 1 233 4 171 1 172 1 26 1 133 1 87 1 116 3 152 1 373 1 141 3 75 1 123 1 315 1 358 1 224 1 271 1 143 1 295 2 251 1 
50 2 230 3 275 1 141 3 254 1 75 1 233 4 234 1 171 1 26 1 123 1 133 1 87 1 315 1 358 1 143 1 271 1 295 2 152 1 116 3 251 1 373 1 
230 1 141 1 75 1 116 1 286 1 373 1 
239 1 338 1 230 5 122 1 275 2 141 6 244 1 184 1 233 3 75 3 323 1 112 1 257 1 17 1 47 1 271 1 116 6 152 2 286 1 373 2 
299 1 51 2 274 1 338 1 230 1 321 1 303 1 55 2 233 1 201 2 306 1 307 1 203 1 175 1 177 1 30 1 256 1 344 1 32 1 347 3 152 1 116 1 348 1 373 1 180 1 118 2 375 2 119 1 350 1 334 1 69 2 140 2 141 1 75 1 185 1 269 1 142 2 77 1 270 2 248 6 16 1 359 3 271 1 18 2 296 2 105 4 226 1 
50 3 230 1 275 1 254 1 233 2 234 1 56 1 171 1 133 1 176 1 87 1 88 1 116 1 91 1 139 1 141 1 41 1 123 1 101 1 124 1 103 2 192 1 294 1 247 2 358 2 46 2 295 3 166 2 
338 1 230 2 141 2 234 1 233 2 75 2 323 1 379 1 271 1 116 2 152 1 286 1 373 1 
213 1 262 1 230 4 338 1 275 1 141 4 75 1 233 1 26 1 89 1 116 4 152 1 373 1 
230 2 122 1 141 2 244 1 233 1 75 2 149 1 194 1 222 1 315 1 271 1 116 2 152 1 373 1 
230 1 304 1 275 1 141 1 272 1 290 1 75 1 76 1 116 1 373 1 
239 1 338 1 230 2 54 1 141 2 233 1 75 1 257 1 116 2 152 1 373 1 
213 1 262 1 230 4 338 1 275 1 141 5 184 1 233 3 75 2 315 1 89 1 257 1 17 1 116 5 152 2 373 2 
213 1 262 1 230 4 338 1 275 1 141 5 184 1 233 3 75 2 315 1 89 1 257 1 33 1 116 5 152 2 373 2 
334 1 230 1 303 1 275 1 141 1 233 1 75 1 306 1 201 2 175 1 77 1 178 1 271 1 18 1 296 2 152 1 116 1 373 1 
230 1 122 1 141 1 244 1 233 1 75 2 323 1 315 1 47 1 271 1 116 1 152 1 373 1 
36 1 52 1 215 1 303 1 158 1 355 1 201 1 79 1 296 1 
20 1 206 1 52 1 
52 1 183 1 158 1 18 1 355 1 
50 2 20 1 52 1 217 1 183 2 158 2 355 2 98 1 171 1 133 1 206 1 87 1 88 1 208 1 18 1 295 2 66 1 155 1 336 1 
377 1 266 1 25 1 370 1 
61 1 377 1 326 1 276 1 25 1 370 1 282 1 
253 1 49 1 282 1 
35 1 8 1 377 1 276 3 25 1 236 2 370 1 282 3 61 1 60 1 13 1 326 1 
61 1 374 1 377 1 326 1 276 2 25 1 19 1 370 1 282 2 
35 1 264 1 83 1 304 1 10 1 276 1 290 1 370 1 282 1 61 1 326 1 
61 1 35 1 326 1 276 1 25 1 370 1 282 1 
61 1 35 1 377 1 326 1 276 1 25 2 282 1 
35 1 241 1 276 2 25 1 370 1 282 2 61 2 326 2 259 1 94 1 
35 1 374 2 377 1 264 1 276 3 25 1 370 2 282 3 61 1 326 1 346 1 381 1 127 1 
35 1 374 1 377 1 304 2 83 1 276 2 267 1 25 1 290 1 370 1 282 2 61 1 326 1 272 1 92 1 
35 1 374 2 377 1 351 1 264 1 276 4 25 1 370 2 282 4 61 2 326 2 19 1 127 1 
61 1 35 1 377 1 326 1 276 1 25 1 370 1 282 1 
374 2 377 2 264 1 276 4 25 2 236 1 370 3 282 4 60 1 61 1 13 1 326 1 371 1 127 1 
35 1 374 1 377 1 276 2 25 1 370 1 99 1 58 1 282 2 61 1 326 1 261 1 
60 2 61 1 35 1 13 1 377 1 326 1 276 3 25 1 151 1 236 2 370 1 282 3 
205 1 370 2 154 1 86 2 
61 1 35 1 125 1 326 1 276 1 282 1 
61 1 35 1 374 1 377 1 326 1 381 1 276 2 25 1 370 1 282 2 
356 1 
61 1 35 1 377 1 326 1 276 1 25 1 370 1 282 1 
61 1 35 1 374 1 377 1 326 1 381 1 276 3 25 1 236 1 370 1 282 3 
264 1 371 1 370 1 127 1 
25 1 370 1 

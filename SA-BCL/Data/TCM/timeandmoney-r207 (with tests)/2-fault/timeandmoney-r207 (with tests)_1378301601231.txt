#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 20 157 310 63 (193,203) (193,203) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 20 157 310 63 (193,203) (193,203) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 20 157 310 63 (193,203) (193,203) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 20 157 310 63 (193,203) (193,203) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 20 157 310 63 4 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 20 157 310 63 4 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 20 157 310 63 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
184 1 25 2 157 2 282 1 327 2 63 1 238 4 64 1 307 2 223 1 193 1 203 1 126 1 310 2 165 1 88 1 291 1 349 1 226 4 20 2 322 1 234 1 
184 1 25 2 157 2 282 1 327 2 63 1 238 4 64 1 307 2 223 1 193 1 203 1 126 1 310 2 165 1 88 1 291 1 226 4 349 1 20 2 322 1 234 1 
184 1 25 2 157 2 282 1 327 2 63 1 238 4 64 1 307 2 223 1 193 1 203 1 126 1 310 2 165 1 88 1 291 1 226 4 349 1 20 2 322 1 234 1 
184 1 25 2 157 2 282 1 327 2 63 1 238 4 64 1 307 2 223 1 193 1 203 1 126 1 310 2 165 1 88 1 291 1 226 4 349 1 20 2 322 1 234 1 
327 1 157 2 171 2 238 4 185 1 307 1 223 1 310 1 165 1 276 1 291 1 226 4 88 3 349 1 70 1 20 3 9 1 381 1 
25 1 282 1 327 1 238 2 307 1 223 1 176 1 195 1 165 1 276 1 226 2 291 1 70 1 20 1 249 1 322 1 
25 1 327 2 157 1 238 3 64 1 307 2 310 1 165 1 276 1 226 3 88 1 70 1 20 2 
184 1 25 1 327 2 157 2 63 1 238 4 64 1 307 2 319 1 310 2 165 1 4 1 226 4 88 2 20 2 
184 1 25 1 327 2 157 2 63 1 238 4 64 1 307 2 319 1 310 2 165 1 4 1 226 4 88 2 20 2 
340 1 343 1 301 1 
343 1 336 2 121 1 
87 2 341 1 146 2 297 2 186 2 97 1 74 2 96 2 
213 2 112 1 144 1 172 1 353 1 146 2 191 2 354 1 215 1 96 2 217 1 150 1 35 1 97 1 115 1 74 3 37 1 293 2 341 1 314 1 11 1 202 1 297 3 272 1 186 2 117 2 43 1 102 1 371 2 87 2 47 1 18 1 166 1 277 1 53 1 210 1 250 1 
93 1 87 1 224 1 196 1 146 1 297 1 186 1 97 1 74 1 96 1 
93 1 146 1 343 1 297 1 149 1 188 1 89 1 301 1 5 1 141 1 74 1 140 1 267 1 155 1 
93 1 146 1 343 1 297 1 186 1 96 1 87 1 149 1 89 2 301 1 5 2 74 1 140 1 267 1 155 1 
123 1 52 1 180 1 89 1 5 1 
151 1 52 1 180 1 89 2 343 1 301 1 108 1 5 2 
180 1 89 1 5 1 
93 1 38 1 146 1 297 1 186 1 96 1 224 1 87 1 196 1 52 1 89 1 5 1 97 1 74 1 
343 1 
253 1 52 1 180 1 89 2 343 1 301 1 108 1 5 2 
200 1 342 1 284 2 174 1 343 1 258 1 334 1 264 1 52 2 34 1 89 5 180 2 197 1 301 1 91 1 108 1 5 5 337 2 78 2 
26 1 112 1 172 1 285 1 146 1 191 1 297 2 186 1 117 1 215 1 371 1 217 1 87 1 150 1 166 1 72 1 53 1 277 1 210 1 74 2 
340 1 341 1 
341 2 146 2 367 1 297 2 186 1 96 1 87 1 90 1 74 2 
46 1 362 1 72 1 
341 1 170 1 112 1 172 1 191 1 297 1 117 1 215 1 371 1 217 1 150 1 166 1 277 1 53 1 74 1 210 1 
26 2 341 1 285 1 146 5 297 5 186 4 96 1 259 1 87 4 188 1 374 1 90 1 74 5 154 1 
93 1 87 2 196 1 146 2 328 1 297 2 186 2 74 2 
87 3 341 1 26 1 146 3 297 3 186 3 74 3 96 1 
93 1 87 1 196 1 146 1 297 1 186 1 74 1 
93 1 87 1 146 1 90 1 367 1 297 1 186 1 74 1 96 1 
93 1 26 1 213 2 112 1 283 1 144 1 172 1 353 1 285 1 146 3 191 1 354 1 215 1 96 2 217 1 149 1 150 1 35 1 5 1 97 1 74 4 267 1 37 1 293 1 155 1 341 1 297 4 272 1 186 3 117 1 43 1 371 1 87 3 47 1 18 1 90 1 89 1 166 1 53 1 277 1 279 1 210 1 140 1 250 1 
87 1 341 1 26 1 188 1 146 2 297 2 186 1 74 2 259 1 
93 1 212 1 26 2 283 1 285 1 146 3 343 1 297 3 186 3 96 1 87 3 149 1 90 1 89 1 5 1 74 3 140 1 267 1 155 1 
26 1 146 2 297 2 186 2 96 1 87 2 46 1 90 1 72 1 74 2 
341 1 112 1 172 1 191 1 297 1 117 1 215 1 371 1 217 1 150 1 166 1 277 1 53 1 74 1 210 1 
341 1 112 1 172 1 191 1 297 1 318 1 117 1 215 1 371 1 217 1 150 1 49 1 166 1 74 1 210 1 
352 1 213 2 144 1 353 1 354 1 288 1 30 1 68 1 3 1 72 2 115 2 37 1 75 1 293 4 362 2 270 1 42 1 43 2 86 1 300 1 46 2 18 1 378 1 250 1 
93 1 87 1 146 1 328 1 297 1 186 1 74 1 155 1 
363 1 83 1 
363 1 83 1 
45 1 227 1 
45 1 227 1 
45 1 227 1 
363 1 248 1 83 1 
363 1 248 1 83 1 
363 1 376 1 83 1 
45 1 363 2 50 1 83 2 189 1 227 1 
363 1 248 1 83 1 
236 1 363 1 83 1 
236 1 363 1 83 1 
236 1 363 1 83 1 
190 1 146 2 263 1 5 1 74 2 268 1 341 1 363 1 83 1 297 2 186 2 87 2 187 1 321 1 207 1 138 1 376 1 89 1 139 1 351 1 92 1 228 1 323 1 325 1 
158 1 363 2 190 2 147 1 343 1 83 2 344 1 321 1 207 2 373 2 89 2 233 1 5 2 189 1 57 1 268 2 228 2 92 3 326 1 
291 1 349 1 223 1 
291 1 223 1 195 1 
229 1 128 1 349 2 291 3 195 1 218 1 
31 1 229 1 128 1 349 1 291 2 195 1 
229 1 128 2 349 1 291 2 195 1 
61 1 284 1 174 2 66 2 68 1 2 1 335 2 264 3 114 1 180 1 197 1 336 3 337 1 5 5 78 1 116 1 364 2 270 1 343 2 86 1 300 1 119 1 52 4 139 1 89 5 301 1 108 1 54 1 121 1 22 1 351 1 323 1 
123 5 303 1 61 2 284 2 174 6 258 1 66 6 68 3 2 2 335 6 264 8 180 6 197 1 182 1 336 9 73 1 5 9 337 2 78 2 240 1 270 3 343 5 368 5 101 1 86 3 300 3 52 7 89 9 301 1 108 1 54 1 121 3 22 3 169 1 323 4 
61 1 284 1 174 2 258 1 66 2 68 1 2 1 264 3 335 2 336 4 337 1 5 3 78 1 116 1 364 1 343 3 270 1 86 1 300 1 119 1 52 2 89 3 301 1 121 2 22 1 323 1 
61 1 284 1 174 4 258 1 66 4 68 2 2 1 335 4 264 5 336 7 182 1 337 1 5 4 78 1 116 1 364 2 343 4 270 2 101 1 86 2 300 2 119 1 52 3 89 4 301 1 121 3 22 2 169 1 323 2 
340 1 290 1 210 1 
287 1 210 1 
245 1 
210 1 215 1 217 1 
372 1 210 1 
210 1 215 1 
290 2 124 1 95 1 210 3 215 1 217 1 
145 1 27 1 42 3 43 3 148 1 86 1 3 2 300 1 48 1 347 2 348 1 360 1 350 1 115 4 23 1 380 1 293 7 
145 1 27 1 42 3 43 3 148 1 86 1 3 2 300 1 48 1 347 2 348 1 360 1 350 1 115 4 23 1 380 1 293 7 
145 1 27 1 42 3 43 3 148 1 86 1 3 2 346 1 300 1 48 1 347 2 348 1 360 1 350 1 115 4 23 1 380 1 293 7 
213 2 144 1 145 2 353 1 354 1 27 2 113 3 148 5 332 1 68 3 3 5 360 1 198 4 115 16 235 1 293 31 294 1 312 1 222 1 270 3 42 10 43 15 242 1 86 4 300 4 48 1 347 3 348 2 350 1 22 3 23 1 168 1 380 2 250 1 
213 4 144 2 353 2 145 1 354 2 27 1 148 1 3 3 181 1 115 5 293 9 294 1 42 4 43 4 369 1 86 1 300 1 48 1 347 2 348 1 350 1 380 1 23 1 250 2 
25 1 327 1 112 1 191 1 306 1 307 1 195 1 218 1 291 2 70 1 98 1 8 1 238 2 15 1 241 1 223 1 117 1 16 1 274 1 371 1 163 1 165 1 276 1 88 1 349 1 226 2 166 1 20 1 109 1 142 1 
25 1 327 1 112 1 191 1 306 1 307 1 127 1 195 1 218 1 291 2 70 1 98 1 361 1 238 3 132 1 15 1 241 1 223 1 117 1 16 1 274 1 371 1 276 1 349 1 226 3 88 2 166 1 20 1 109 1 142 1 
25 1 112 1 191 1 306 1 195 1 218 1 291 2 70 1 98 1 361 1 238 2 132 1 241 1 117 1 223 1 274 1 371 1 276 1 226 2 88 2 349 1 166 1 20 1 109 1 142 1 
25 2 327 1 112 1 172 1 12 1 238 1 0 1 191 1 214 1 330 1 307 1 117 1 215 1 127 1 274 2 371 1 44 1 275 1 226 1 166 1 109 2 210 1 142 2 
25 1 327 1 112 1 191 1 306 1 307 1 195 1 218 1 291 2 98 1 238 1 132 1 15 1 241 1 223 1 117 1 16 1 274 1 371 1 163 1 165 1 349 1 226 1 166 1 109 1 142 1 
36 1 
61 1 112 1 284 1 191 2 146 1 230 2 149 1 197 1 153 1 336 2 5 5 337 1 74 1 78 1 155 1 343 2 297 1 117 2 345 1 17 2 164 1 89 5 301 1 19 1 166 1 121 2 210 1 93 1 172 2 304 1 174 2 214 1 94 4 215 1 29 1 358 1 216 1 261 2 264 2 180 6 267 1 130 2 39 1 133 1 371 2 44 1 188 1 379 2 278 2 108 3 280 1 141 1 140 1 281 1 110 2 
93 1 253 1 304 1 146 1 94 2 29 1 216 1 149 1 180 2 5 3 74 1 267 1 130 1 155 1 297 1 188 1 89 3 108 1 140 1 141 1 280 1 281 1 
93 1 253 1 304 1 146 1 94 3 29 1 216 1 261 1 149 1 180 1 5 3 74 1 267 1 155 1 297 1 343 1 188 1 89 3 301 1 108 1 140 1 141 1 280 1 281 1 
93 1 253 1 304 1 146 1 94 3 29 1 216 1 261 1 149 1 180 2 5 3 74 1 267 1 130 1 155 1 297 1 343 1 188 1 89 3 301 1 108 1 379 1 140 1 141 1 280 1 281 1 
284 1 146 1 230 2 65 1 149 1 69 1 197 1 5 5 337 1 74 1 78 1 155 1 297 1 343 5 17 2 89 5 301 5 121 2 93 1 253 1 304 1 174 1 94 6 29 1 216 1 358 1 261 4 264 1 180 7 267 1 130 4 39 1 99 1 188 1 375 1 104 1 379 4 108 3 278 2 140 1 280 1 141 1 281 1 110 2 
284 1 146 1 230 2 149 1 197 1 336 2 5 4 337 1 74 1 78 1 155 1 297 1 343 2 345 1 17 2 89 4 301 1 121 2 93 1 304 1 174 1 94 4 29 1 216 1 358 1 261 2 264 1 180 4 267 1 130 2 39 1 188 1 278 2 108 2 379 2 140 1 280 1 141 1 281 1 110 2 
93 1 304 1 284 1 174 1 146 1 230 2 65 1 94 4 29 1 358 1 216 1 261 2 149 1 264 1 180 4 197 1 5 4 337 1 74 1 267 1 130 2 78 1 155 1 39 1 343 1 297 1 17 2 188 1 375 1 104 1 89 4 301 1 379 2 108 2 278 2 121 2 140 1 141 1 280 1 281 1 110 2 
93 1 304 1 284 1 174 1 146 1 230 2 65 1 94 4 29 1 358 1 216 1 261 2 149 1 264 1 180 4 197 1 5 4 337 1 74 1 267 1 130 2 78 1 155 1 39 1 343 1 297 1 17 2 188 1 375 1 104 1 89 4 301 1 379 2 108 2 278 2 121 2 140 1 141 1 280 1 281 1 110 2 
93 1 304 1 284 1 174 1 146 1 230 2 65 1 94 4 29 1 358 1 216 1 260 1 261 2 149 1 264 1 180 4 197 1 336 2 5 4 337 1 74 1 267 1 130 2 78 1 155 1 316 2 82 2 343 1 297 1 320 1 17 2 188 1 89 4 301 1 379 2 108 2 140 1 141 1 280 1 58 1 281 1 
93 1 304 1 284 1 174 1 146 1 230 2 65 1 94 5 29 1 358 1 216 1 261 3 149 1 264 1 180 5 197 1 337 1 5 4 74 1 267 1 130 3 78 1 155 1 39 1 99 1 343 1 297 1 17 2 188 1 104 1 375 1 89 4 301 1 108 2 278 2 379 3 121 2 140 1 141 1 280 1 281 1 110 2 
93 1 304 1 284 1 174 1 146 1 230 2 65 1 94 5 29 1 358 1 216 1 261 3 149 1 264 1 180 5 197 1 337 1 5 4 74 1 267 1 130 3 78 1 155 1 39 1 99 1 343 1 297 1 17 2 188 1 104 1 375 1 89 4 301 1 108 2 278 2 379 3 121 2 140 1 141 1 280 1 281 1 110 2 
93 1 304 1 284 1 174 1 146 1 230 2 94 4 29 1 358 1 216 1 261 2 149 1 264 1 180 4 197 1 336 2 337 1 5 4 74 1 267 1 130 2 78 1 155 1 316 2 82 2 343 1 297 1 345 1 320 1 17 2 188 1 89 4 301 1 379 2 108 2 141 1 280 1 140 1 281 1 
213 2 144 1 353 1 145 1 354 1 27 1 3 2 72 1 115 3 37 1 293 6 340 1 341 2 362 1 42 2 43 3 86 1 46 1 300 1 48 1 347 1 18 1 350 1 378 1 23 1 250 1 
213 4 144 2 353 2 354 2 113 3 257 1 148 1 232 1 289 1 3 1 68 1 33 1 198 3 72 11 115 8 37 2 293 14 235 1 341 1 362 11 314 1 222 1 270 2 42 2 272 1 43 6 86 2 243 1 46 4 300 1 18 1 22 2 250 2 
26 1 112 1 170 1 213 2 172 1 144 1 285 1 353 1 191 1 146 1 354 1 215 1 217 1 150 1 311 1 74 2 115 1 37 1 293 2 156 1 341 1 314 1 297 2 117 1 186 1 272 1 43 1 371 1 87 1 46 1 243 1 18 1 166 1 53 1 277 1 21 1 210 1 250 1 
112 2 144 3 145 1 285 1 191 3 146 1 148 4 333 2 3 4 68 2 150 2 72 7 74 3 115 10 293 20 341 2 239 1 84 1 297 3 117 3 86 3 87 1 300 3 243 1 347 1 18 3 350 1 166 2 210 2 22 2 23 1 250 3 26 1 213 6 172 1 353 3 354 3 27 1 215 2 217 2 177 1 359 2 35 2 37 3 362 7 314 1 132 1 41 2 270 2 42 8 272 1 186 1 43 10 370 2 371 3 46 7 48 1 277 2 53 2 
252 1 26 1 112 2 213 4 172 2 144 2 353 2 146 1 191 8 354 2 214 1 215 2 32 1 129 1 74 1 115 1 37 2 76 1 293 2 80 1 8 1 314 1 11 2 132 1 315 1 221 1 297 1 186 1 117 7 272 1 43 1 371 8 87 1 44 1 18 2 378 1 166 2 210 3 250 2 
213 2 144 1 353 1 146 1 354 1 96 1 3 1 68 1 72 1 74 1 115 1 37 1 293 3 362 1 269 1 297 1 270 1 42 1 186 1 43 2 86 1 87 1 46 1 243 1 300 1 18 1 90 1 22 1 250 1 
362 1 213 2 144 1 353 1 354 1 270 1 42 1 148 1 86 1 46 1 18 1 378 1 72 1 115 2 37 1 75 1 293 2 250 1 
362 1 213 2 144 1 353 1 354 1 42 1 288 1 43 2 3 1 68 1 46 1 300 1 18 1 378 1 72 1 37 1 293 2 250 1 
213 2 144 1 353 1 354 1 148 1 68 1 3 1 72 2 115 2 37 1 293 4 362 2 270 1 42 2 43 2 86 1 46 2 300 1 18 1 378 1 22 1 250 1 
362 1 213 2 144 1 353 1 354 1 270 1 42 1 148 1 86 1 46 1 18 1 72 1 115 2 76 1 37 1 75 1 293 2 250 1 
362 1 213 2 144 1 353 1 354 1 42 1 288 1 43 2 3 1 68 1 46 1 300 1 18 1 72 1 76 1 37 1 293 2 250 1 
213 2 144 1 353 1 354 1 148 1 68 1 3 1 72 2 115 2 37 1 76 1 293 4 362 2 270 1 42 2 43 2 86 1 46 2 300 1 18 1 22 1 250 1 
213 2 144 1 353 1 354 1 148 1 68 1 3 1 72 2 115 2 37 1 293 4 362 2 270 1 42 2 43 2 86 1 46 2 300 1 18 1 22 1 250 1 
112 1 213 2 172 1 144 1 353 1 191 1 354 1 215 1 217 1 150 1 35 1 115 1 74 1 37 1 293 2 341 1 314 1 297 1 117 1 272 1 43 1 371 1 18 1 166 1 53 1 277 1 210 1 250 1 
112 1 213 2 172 1 144 1 353 1 191 1 354 1 192 1 215 1 217 1 150 1 115 1 74 1 37 1 293 2 341 1 314 1 318 1 297 1 117 1 272 1 43 1 371 1 49 1 18 1 166 1 210 1 250 1 
213 2 144 1 353 1 354 1 148 1 68 1 3 1 72 2 115 2 37 1 293 4 362 2 270 1 42 2 43 2 86 1 243 1 46 2 300 1 18 1 22 1 250 1 
112 1 213 2 144 1 353 1 191 1 354 1 148 1 215 1 3 1 68 1 217 1 150 1 35 1 72 2 115 2 74 1 37 1 293 4 8 1 362 2 270 1 41 1 297 1 42 2 117 1 43 2 371 1 86 1 300 1 46 2 18 1 166 1 53 1 277 1 210 1 22 1 250 1 
213 2 144 1 353 1 146 1 354 1 148 1 96 1 68 1 72 1 74 1 115 2 37 1 293 3 362 1 297 1 270 1 42 1 186 1 43 1 86 1 137 1 87 1 300 1 243 1 46 1 18 1 90 1 22 1 250 1 
213 4 144 2 173 1 353 2 354 2 256 1 113 1 148 3 3 3 68 3 178 1 265 2 181 1 198 2 115 9 338 1 293 19 235 1 222 1 270 3 42 6 43 10 161 1 136 1 86 3 118 2 300 3 209 1 22 3 250 2 
213 6 144 3 173 2 353 3 354 3 256 1 113 2 148 2 194 1 3 2 68 2 265 4 181 1 198 2 71 1 115 14 338 1 293 26 294 2 13 1 222 2 270 3 42 4 43 12 204 1 299 1 161 2 136 1 86 3 118 1 300 2 302 1 22 3 250 3 
144 3 145 1 113 3 148 4 194 1 68 4 3 4 198 4 71 1 115 20 338 1 235 1 293 41 294 1 13 1 204 1 161 1 299 1 86 5 300 5 118 1 347 1 350 1 209 1 22 4 302 1 23 1 250 3 211 1 213 6 353 3 173 2 354 3 27 1 256 1 265 4 181 1 270 4 222 3 42 8 43 21 136 1 48 1 
211 1 213 8 144 4 145 1 173 2 353 4 354 4 27 1 256 1 113 3 148 3 194 1 3 4 68 3 265 4 181 1 71 1 198 4 115 20 338 1 293 38 235 1 294 2 13 1 222 3 270 4 42 7 204 1 43 18 299 1 161 1 136 1 86 5 118 1 300 4 48 1 347 1 209 1 350 1 302 1 22 4 23 1 250 4 
213 4 144 2 145 1 173 1 353 2 354 2 27 1 256 1 113 4 232 2 148 7 194 1 3 7 68 7 265 4 181 1 71 1 198 4 115 27 338 1 293 52 235 2 294 1 13 1 222 2 270 7 42 14 204 1 43 25 299 1 161 1 136 1 86 8 118 1 300 8 48 1 347 1 350 1 302 1 22 7 23 1 250 2 
158 1 363 1 190 1 207 1 147 1 83 1 189 1 357 1 268 1 228 1 
138 1 376 1 
363 1 190 1 207 1 160 1 377 1 355 1 83 1 268 1 228 1 
248 1 295 1 
236 1 296 1 
158 1 363 1 190 1 147 1 343 1 83 1 344 1 321 1 207 1 373 1 89 1 233 1 5 1 189 1 268 1 228 1 92 2 326 1 
158 1 363 1 190 1 147 1 343 1 83 1 344 1 321 1 207 1 373 1 89 1 233 1 5 1 189 1 268 1 228 1 92 2 326 1 
158 1 363 1 190 1 147 1 343 1 83 1 344 1 321 1 207 1 373 1 89 1 233 1 5 1 189 1 268 1 228 1 92 2 326 1 
50 1 248 1 295 1 
50 1 248 1 295 1 
236 1 50 1 296 1 
236 1 296 1 
263 1 187 1 
190 1 146 2 263 1 233 1 5 1 74 2 268 1 79 1 341 1 363 1 297 2 83 1 186 2 87 2 187 1 207 1 138 1 373 1 52 1 376 1 89 1 139 1 351 1 228 1 92 1 323 1 325 1 
112 1 213 2 144 1 353 1 305 1 191 2 146 2 354 1 356 1 215 1 32 1 74 2 115 1 37 1 293 2 80 1 314 1 11 2 297 2 298 1 272 1 117 2 43 1 371 2 134 1 243 1 18 1 166 1 210 1 324 1 250 1 
112 1 201 1 132 1 191 2 15 1 306 1 241 1 223 1 117 2 195 1 371 2 218 1 349 1 291 2 166 1 109 1 122 1 8 1 251 1 
112 1 201 1 132 1 191 1 15 1 306 1 241 1 223 1 117 1 195 1 371 1 218 1 349 1 291 2 106 1 166 1 109 1 
112 1 172 1 365 1 191 1 214 1 117 1 215 1 371 1 44 1 275 1 166 1 109 1 210 1 122 1 
112 1 201 1 132 1 191 1 15 1 306 1 241 1 223 1 117 1 195 1 371 1 218 1 349 1 291 2 166 1 109 1 122 1 251 1 
339 1 
340 1 334 1 200 1 264 1 174 1 343 1 301 1 
284 1 174 1 264 1 180 1 197 1 336 1 337 1 5 1 78 1 39 1 343 2 89 1 301 1 278 1 108 1 121 1 110 1 
60 2 61 2 112 3 284 4 191 3 287 3 66 6 68 2 334 1 335 6 290 2 197 4 336 12 337 4 5 5 78 4 8 1 10 2 200 1 14 2 343 8 117 3 205 2 86 2 300 2 164 1 246 2 208 1 89 5 301 2 166 4 167 1 210 10 121 6 22 2 172 1 174 8 124 1 28 2 215 3 217 3 359 2 264 9 180 5 267 2 40 2 270 2 273 1 371 3 372 2 225 1 105 1 108 3 143 2 
60 1 61 1 284 2 174 5 175 1 113 1 194 1 66 5 68 2 335 5 264 8 180 1 197 2 198 1 71 1 336 6 5 1 337 2 78 2 14 2 222 1 343 5 270 2 204 1 299 1 86 2 300 2 164 1 89 1 301 2 108 1 55 1 302 1 121 3 22 2 
60 1 93 1 145 1 284 1 174 2 146 1 27 1 255 1 96 1 264 2 196 1 197 1 337 1 5 1 97 1 74 1 78 1 38 1 14 2 297 1 186 1 86 2 224 1 87 1 300 1 104 1 89 1 23 1 
200 1 284 1 174 1 343 1 334 1 264 1 197 1 301 1 337 1 78 1 
60 1 14 2 174 5 270 2 343 5 66 5 86 2 68 2 359 1 300 2 335 5 264 5 336 10 22 2 121 5 
89 1 180 1 343 1 301 1 108 1 5 1 
254 1 112 1 61 2 172 2 284 2 191 4 174 2 214 1 258 1 215 1 264 2 180 4 197 1 337 2 5 3 78 2 100 1 133 1 117 4 273 1 371 4 44 1 164 2 105 2 89 3 166 1 19 1 108 2 210 1 
213 2 112 1 172 1 144 1 353 1 191 1 146 2 354 1 215 1 96 2 217 1 150 1 35 1 97 1 74 3 37 1 293 1 341 1 297 3 272 1 117 1 186 2 43 1 371 1 87 2 47 1 18 1 166 1 277 1 53 1 210 1 250 1 
61 1 284 1 174 2 343 4 66 2 335 2 264 1 347 1 164 1 197 1 301 2 336 4 337 1 121 2 78 1 
190 1 207 1 366 1 
190 1 207 1 366 1 
263 1 190 1 207 1 147 1 67 1 
190 1 207 1 366 1 
190 1 207 1 329 1 
190 1 207 1 329 1 
190 1 207 1 329 1 
190 1 207 1 
363 1 83 1 
213 4 144 2 353 2 145 1 354 2 27 1 42 3 43 4 148 1 86 1 3 2 300 1 48 1 347 1 350 1 115 4 23 1 293 8 250 2 294 1 
340 1 145 1 27 1 42 2 43 3 3 2 86 1 300 1 48 1 347 1 350 1 115 3 23 1 293 6 
213 2 144 1 353 1 354 1 270 1 42 2 43 2 148 1 3 1 68 1 86 1 300 1 247 1 22 1 115 2 293 4 250 1 
222 1 270 1 42 2 113 1 43 4 148 1 3 1 68 1 86 1 300 1 198 2 115 3 22 1 293 7 235 1 
213 4 144 2 145 2 353 2 354 2 27 2 125 1 113 2 148 4 232 1 289 1 68 2 3 5 198 2 115 11 235 1 293 23 294 2 270 2 42 9 43 12 86 3 300 3 48 1 347 1 350 1 22 2 23 1 250 2 
198 1 43 1 293 1 
113 1 115 1 293 1 
213 2 144 1 353 1 354 1 270 1 42 3 43 3 148 1 86 1 68 1 3 2 359 1 300 1 247 1 22 1 115 3 293 6 250 1 
213 2 144 1 353 1 354 1 113 1 148 1 194 1 68 2 3 1 181 1 198 1 71 1 115 6 293 12 222 1 270 2 42 2 43 6 204 1 299 1 86 2 300 2 22 2 302 1 250 1 
145 1 27 1 42 2 43 3 148 1 86 1 3 1 300 1 115 3 23 1 293 6 
213 2 144 1 145 1 353 1 354 1 27 1 125 1 42 2 148 1 43 2 3 1 48 1 350 1 115 1 293 3 294 1 250 1 
213 2 144 1 353 1 145 2 354 1 255 1 27 2 42 5 148 2 43 5 3 3 86 2 300 2 181 1 115 5 23 1 293 10 250 1 
213 2 144 1 353 1 354 1 270 1 42 1 148 1 86 1 181 1 115 2 293 2 250 1 
213 2 144 1 353 1 354 1 270 1 42 2 43 2 148 1 3 1 68 1 86 1 300 1 181 1 22 1 115 2 293 4 250 1 
213 6 144 3 353 3 145 1 354 3 27 1 125 1 42 2 43 2 148 1 3 1 181 1 209 1 115 1 293 3 294 1 250 3 
213 10 144 5 145 3 353 5 354 5 27 3 125 1 113 3 148 5 332 1 68 3 3 7 181 1 198 4 115 16 293 34 235 1 294 2 312 1 222 1 270 3 42 12 242 1 43 18 86 5 300 5 48 1 347 1 247 1 350 1 209 1 22 3 23 2 250 5 
213 2 144 1 353 1 145 1 354 1 27 1 113 1 3 2 181 1 198 1 71 1 115 4 293 8 222 1 42 2 43 4 86 1 300 1 48 1 347 1 350 1 23 1 250 1 
213 4 144 2 145 1 353 2 354 2 27 1 113 1 148 1 3 2 181 1 198 2 71 1 115 6 293 11 235 1 222 1 270 1 42 3 43 5 86 2 300 1 48 1 347 1 247 1 350 1 22 1 23 1 250 2 
213 6 144 3 145 1 353 3 354 3 27 1 113 1 148 1 194 1 68 2 3 3 181 1 198 1 71 1 115 9 293 19 294 1 222 1 270 2 42 4 43 10 204 1 299 1 86 3 300 3 48 1 347 1 247 1 350 1 302 1 22 2 23 1 250 3 
213 6 144 3 145 1 353 3 354 3 27 1 113 1 148 2 194 1 68 1 3 3 181 1 198 1 71 1 115 10 293 17 294 1 222 1 270 2 42 5 43 7 204 1 299 1 86 3 300 2 48 1 347 1 247 1 350 1 22 2 302 1 23 1 250 3 
213 2 144 1 353 1 145 1 354 1 27 1 113 1 3 2 181 1 198 1 71 1 115 4 293 8 222 1 42 2 43 4 86 1 300 1 48 1 347 1 350 1 23 1 250 1 
213 2 144 1 353 1 354 1 113 1 148 1 194 1 68 2 3 1 181 1 198 1 71 1 115 6 293 12 222 1 270 2 42 2 43 6 204 1 299 1 86 2 300 2 22 2 302 1 250 1 
213 8 144 4 145 1 353 4 354 4 27 1 113 1 148 2 194 1 68 1 3 3 181 1 198 1 71 1 115 10 293 18 294 2 222 1 270 2 42 5 43 8 204 1 299 1 86 3 300 2 48 1 347 1 247 1 350 1 302 1 22 2 23 1 250 4 
213 8 144 4 353 4 354 4 113 1 148 3 194 1 68 2 3 3 181 1 198 1 71 1 115 9 293 16 294 2 222 1 270 3 42 6 43 7 204 1 299 1 86 3 300 2 209 1 302 1 22 3 250 4 
145 3 27 3 42 6 43 4 148 3 3 3 86 1 300 1 48 2 350 1 115 3 23 1 293 7 
213 8 144 4 145 1 353 4 354 4 27 1 113 1 148 1 194 1 68 1 3 3 181 1 198 1 71 1 115 10 293 18 294 2 222 1 270 2 42 4 43 8 204 1 299 1 86 3 300 2 48 1 347 1 350 1 209 1 302 1 22 2 23 1 250 4 
341 1 188 1 146 1 297 1 74 1 292 1 259 1 
111 1 341 1 146 1 297 1 259 1 206 1 188 1 152 1 74 1 292 1 24 1 199 1 
44 1 340 1 112 1 172 1 191 1 214 1 166 1 117 1 210 1 215 1 371 1 
341 1 26 1 112 1 172 1 146 1 191 1 297 2 186 1 117 1 215 1 371 1 217 1 87 1 150 1 166 1 53 1 210 1 74 2 
93 1 26 1 112 1 191 1 146 2 215 2 217 2 149 1 150 1 74 2 155 1 341 1 297 2 117 1 186 1 371 1 87 2 372 1 105 1 166 1 53 1 210 3 143 1 
93 1 26 1 112 1 191 2 146 2 215 2 217 2 149 1 150 1 74 2 155 1 341 1 318 1 297 2 117 2 186 1 371 2 87 2 372 1 244 1 105 1 166 1 210 3 143 1 
112 1 172 1 191 3 287 1 331 1 215 1 217 1 308 1 290 1 180 1 5 2 267 1 343 1 117 3 371 3 372 1 244 1 105 1 89 2 166 1 301 1 210 4 143 1 
112 1 172 1 191 3 343 1 117 3 287 1 215 1 371 3 217 1 372 1 244 1 246 1 290 1 105 1 89 2 180 1 301 1 166 1 5 2 210 4 267 1 143 1 
112 1 191 1 221 1 166 1 117 1 371 1 
252 1 11 1 313 1 112 2 172 2 132 1 315 1 191 7 221 1 124 1 117 6 215 2 371 7 217 1 51 1 129 1 166 3 210 3 77 1 80 1 8 1 
112 1 144 2 145 1 191 1 146 1 3 2 150 1 72 1 74 2 115 3 293 6 8 1 341 2 297 2 117 1 298 1 86 1 87 1 243 1 300 1 347 1 18 2 166 1 350 1 210 1 23 1 250 2 26 1 213 4 353 2 354 2 27 1 215 1 217 1 35 1 37 2 362 1 41 1 42 2 186 1 43 3 370 1 371 1 46 1 48 1 53 1 277 1 
172 1 284 2 174 1 191 1 28 1 287 1 334 1 264 1 290 1 180 2 197 2 337 2 5 3 267 1 78 2 200 1 40 1 343 1 117 1 273 1 205 1 371 1 246 1 52 1 89 3 301 1 108 1 210 2 
112 1 191 2 221 1 124 1 117 2 215 1 371 2 217 1 290 1 166 2 167 1 210 2 8 1 
112 1 172 1 191 4 214 1 117 4 215 1 371 4 44 1 244 1 120 1 166 1 210 1 8 1 
313 1 112 1 191 2 84 1 117 2 231 1 215 1 371 2 217 1 51 1 105 1 166 2 107 1 210 1 
112 1 172 1 291 1 191 1 166 1 241 1 223 1 117 1 195 1 371 1 
112 1 191 2 132 1 305 1 117 2 215 1 371 2 166 1 210 1 8 1 80 1 
252 1 112 2 172 1 191 5 315 1 214 1 117 4 215 2 371 5 44 1 105 1 120 1 166 2 210 3 8 1 80 1 
81 1 112 2 172 1 191 5 315 1 214 1 117 4 215 2 371 5 44 1 105 1 120 1 166 2 210 3 8 1 80 1 
341 1 26 1 112 1 172 1 146 1 191 1 297 2 318 1 186 1 117 1 215 1 371 1 217 1 87 1 150 1 166 1 210 1 74 2 
313 1 112 1 191 1 124 1 117 1 215 1 371 1 217 1 51 1 105 1 166 2 210 1 77 1 
341 1 220 1 237 1 131 1 266 1 
93 1 341 1 220 1 62 1 283 1 237 2 131 2 343 1 1 1 149 1 52 1 89 2 301 1 266 2 5 2 140 1 267 1 59 1 155 1 
220 1 237 1 146 1 297 1 356 1 134 1 266 1 74 1 324 1 
220 1 62 1 59 1 
340 1 276 1 70 1 20 1 
327 1 238 1 276 1 226 1 70 1 20 1 307 1 
25 1 238 1 142 1 
327 1 282 2 238 3 317 1 307 1 165 1 226 3 276 1 70 1 20 1 183 1 7 1 
327 1 171 1 238 2 276 1 88 1 226 2 70 1 20 1 307 1 
157 1 327 1 238 1 165 1 291 1 349 1 226 1 20 1 307 1 223 1 381 1 
327 1 238 1 165 1 276 1 226 1 20 1 307 1 
327 1 238 1 165 1 276 2 226 1 70 1 307 1 
327 2 238 2 271 1 307 2 135 1 165 1 276 1 226 2 20 1 56 1 
184 1 157 1 310 1 327 1 63 1 238 1 165 1 226 1 20 1 307 1 
327 1 238 2 307 1 223 1 195 1 218 1 165 1 276 1 291 2 226 2 349 1 88 1 70 1 20 1 6 1 
327 2 157 1 171 1 238 4 185 1 307 2 310 1 165 1 276 1 226 4 88 2 70 1 20 2 
327 1 238 1 165 1 276 1 226 1 70 1 20 1 307 1 
282 1 327 1 157 1 238 4 317 1 307 1 162 1 310 1 276 2 88 2 226 4 70 2 20 3 7 1 
327 1 238 2 286 1 307 1 319 1 262 1 165 1 276 1 226 2 88 1 70 1 20 1 
327 1 282 2 159 1 238 3 317 1 307 1 165 1 226 3 276 1 70 1 20 1 7 2 
309 2 179 1 85 1 20 2 
327 1 238 1 165 1 226 1 307 1 219 1 
184 1 327 1 238 1 307 1 162 1 165 1 226 1 276 1 70 1 
103 1 
327 1 238 1 165 1 276 1 226 1 70 1 20 1 307 1 
184 1 282 1 327 1 238 2 165 1 276 1 226 2 70 1 20 1 307 1 
162 1 157 1 310 1 20 1 
276 1 20 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 317 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
230 2 124 1 5 2 55 1 126 1 237 2 37 1 39 1 40 3 314 9 293 2 42 6 269 1 367 1 159 5 45 2 220 2 244 1 272 2 247 1 301 1 77 1 227 4 208 1 323 1 79 1 121 1 276 9 
230 2 124 1 5 2 55 1 126 1 237 2 37 1 39 1 40 3 314 9 293 2 42 6 269 1 367 1 159 5 45 2 220 2 244 1 272 2 247 1 301 1 77 1 227 4 208 1 323 1 79 1 121 1 276 9 
230 2 124 1 5 2 55 1 126 1 237 2 37 1 39 1 40 4 314 10 293 2 42 7 269 1 367 1 159 6 45 2 220 2 244 1 272 2 247 1 301 1 77 1 227 5 208 1 323 1 79 1 121 1 276 10 
230 2 124 1 5 2 55 1 126 1 237 2 37 1 39 1 40 2 314 7 293 2 42 4 269 1 367 1 159 4 45 2 220 2 272 1 247 1 301 1 77 1 227 3 208 1 323 1 79 1 121 1 276 7 
230 1 367 1 159 3 45 1 5 1 244 1 272 2 247 1 237 1 77 1 227 2 40 1 208 1 79 1 314 4 293 1 276 4 42 3 
230 1 159 1 367 1 135 1 45 1 220 1 332 1 247 1 75 1 237 1 77 1 39 1 323 1 314 2 276 2 293 1 
367 1 159 2 45 2 220 1 247 1 237 2 37 1 77 1 227 1 40 1 314 3 276 3 42 1 
230 1 159 5 367 1 124 1 161 1 5 1 45 2 220 1 244 1 272 2 328 1 247 1 237 2 37 1 77 1 227 4 208 1 40 3 79 1 121 1 314 9 293 1 276 9 42 7 
230 1 159 5 367 1 124 1 161 1 5 1 45 2 220 1 244 1 272 2 328 1 247 1 237 2 37 1 77 1 227 4 208 1 40 3 79 1 121 1 314 9 293 1 276 9 42 7 
130 1 234 1 239 1 
33 2 239 1 58 1 
245 2 321 1 91 2 35 1 110 2 198 2 26 2 235 2 
254 1 211 1 258 1 326 1 104 1 26 2 235 2 308 1 173 2 196 1 91 2 35 1 110 3 198 2 238 2 361 1 336 1 267 1 180 1 316 1 116 1 160 2 369 1 117 1 73 1 16 1 245 3 203 1 321 1 322 1 379 2 143 1 166 1 207 1 381 1 81 1 83 2 
245 1 91 1 35 1 92 1 349 1 110 1 198 1 26 1 315 1 235 1 
123 1 71 1 234 1 356 1 357 1 245 1 284 1 91 1 34 1 63 1 92 1 110 1 22 1 239 1 
123 1 71 1 26 1 234 1 356 1 357 1 235 1 245 1 63 2 91 1 34 2 92 1 110 1 198 1 239 1 
134 1 63 1 34 1 10 1 355 1 
134 1 63 2 34 2 101 1 10 1 250 1 234 1 239 1 
134 1 63 1 34 1 
26 1 235 1 346 1 245 1 34 1 63 1 35 1 91 1 92 1 10 1 349 1 110 1 198 1 315 1 
239 1 
134 1 63 2 34 2 10 1 25 1 250 1 234 1 239 1 
364 1 69 1 134 2 255 1 70 1 183 1 149 2 234 1 87 1 31 1 246 2 310 1 34 5 63 5 10 2 38 1 250 1 225 2 239 1 
316 1 116 1 352 1 211 1 326 1 369 1 16 1 235 1 245 2 173 1 330 1 290 1 91 1 110 2 198 1 238 1 207 1 81 1 336 1 83 1 
321 1 130 1 
199 1 26 1 235 1 245 2 91 2 321 2 110 2 198 1 292 1 
253 1 290 1 11 1 
316 1 116 1 211 1 240 1 326 1 369 1 16 1 245 1 173 1 321 1 110 1 238 1 207 1 81 1 336 1 83 1 
199 1 352 1 27 1 26 1 235 4 245 5 330 2 90 1 91 5 321 1 96 1 110 5 198 4 22 1 
245 2 91 2 92 1 349 1 110 2 198 2 137 1 235 2 
245 3 330 1 321 1 91 3 110 3 198 3 26 1 235 3 
245 1 91 1 92 1 349 1 110 1 198 1 235 1 
245 1 199 1 91 1 92 1 110 1 198 1 26 1 292 1 235 1 
254 1 352 1 123 1 211 1 258 1 326 1 104 1 26 2 356 1 357 1 235 3 173 1 330 1 196 1 91 3 34 1 63 1 35 1 92 1 110 4 198 3 238 1 361 1 336 1 199 1 316 1 115 1 116 1 160 1 71 1 369 1 221 1 73 1 16 1 245 4 321 1 322 1 379 2 143 1 166 1 207 1 381 1 81 1 83 1 
245 2 330 1 321 1 91 2 110 2 198 1 27 1 22 1 235 1 
199 1 115 1 352 1 123 1 71 1 26 1 356 1 357 1 235 3 245 3 88 1 330 2 63 1 34 1 91 3 92 1 110 3 198 3 239 1 
245 2 199 1 330 1 290 1 91 2 110 2 198 2 11 1 26 1 235 2 
316 1 116 1 211 1 326 1 369 1 16 1 245 1 173 1 321 1 110 1 238 1 207 1 81 1 336 1 83 1 
316 1 116 1 2 1 211 1 326 1 369 1 245 1 173 1 321 1 110 1 97 1 238 1 207 1 81 1 83 1 
306 1 253 2 254 1 325 1 256 1 280 1 258 1 150 1 262 1 196 1 288 1 290 2 11 2 267 2 181 1 297 1 160 4 270 1 73 1 187 1 322 2 379 2 143 1 381 1 
245 1 123 1 91 1 92 1 110 1 198 1 235 1 137 1 
282 1 106 1 
282 1 106 1 
320 1 281 1 
320 1 281 1 
320 1 281 1 
165 1 282 1 106 1 
165 1 282 1 106 1 
298 1 282 1 106 1 
251 1 320 1 136 1 281 1 282 2 106 2 
165 1 282 1 106 1 
380 1 282 1 106 1 
380 1 282 1 106 1 
380 1 282 1 106 1 
23 1 282 1 106 1 235 2 128 1 285 1 63 1 34 1 91 2 110 2 198 2 155 1 362 1 67 1 298 1 344 1 245 2 321 1 98 1 189 1 378 1 275 1 51 1 192 1 
23 2 296 1 3 2 184 1 136 1 282 2 344 3 106 2 140 1 60 1 34 2 63 2 98 2 177 1 275 2 362 1 239 1 51 2 294 1 
230 1 5 1 293 1 
230 1 332 1 293 1 
332 1 142 1 85 1 175 1 5 2 293 3 
163 1 332 1 142 1 85 1 5 1 293 2 
332 1 85 1 142 2 5 1 293 2 
256 1 255 2 280 1 149 1 234 1 58 1 28 1 128 1 33 3 61 1 63 5 34 5 310 3 312 2 10 4 111 2 41 1 239 2 67 1 181 1 364 1 134 1 339 1 297 1 241 1 242 2 138 1 246 1 189 1 225 1 250 1 20 1 
256 3 255 6 280 3 355 5 149 2 234 1 58 3 28 3 128 4 33 9 61 2 63 9 34 9 310 8 174 1 312 6 10 7 111 6 239 5 337 1 181 3 364 1 134 6 339 1 70 1 297 3 317 1 72 1 271 1 318 1 138 2 48 5 246 2 250 1 225 2 
256 1 255 2 280 1 149 1 26 1 234 1 235 1 58 2 28 1 128 1 61 1 33 4 91 1 35 1 63 3 34 3 310 3 92 1 10 2 312 2 110 1 198 1 111 2 315 1 239 3 181 1 241 1 70 1 297 1 242 1 245 1 346 1 138 1 246 1 349 1 225 1 20 1 
256 1 255 2 280 1 149 1 58 2 28 1 128 1 33 4 61 1 63 2 34 2 310 3 312 2 10 1 111 2 239 2 181 1 70 1 241 1 297 1 317 1 242 1 138 1 246 1 225 1 20 1 
348 1 130 1 211 1 
211 1 200 1 
228 1 
211 1 207 1 369 1 
164 1 211 1 
211 1 207 1 
303 1 348 2 211 3 207 1 144 1 369 1 
181 1 210 1 341 1 280 1 368 1 160 7 195 1 170 2 219 1 270 2 7 1 288 3 322 3 224 1 226 1 267 4 209 1 
181 1 210 1 341 1 280 1 368 1 160 7 195 1 170 2 219 1 270 2 7 1 288 3 322 3 224 1 226 1 267 4 209 1 
181 1 210 1 341 1 280 1 195 1 368 1 160 7 170 2 219 1 270 2 171 1 7 1 288 3 322 3 224 1 226 1 267 4 209 1 
252 1 210 1 254 1 122 1 1 1 256 3 258 1 280 4 195 1 170 3 7 2 28 3 288 10 360 1 65 1 267 16 181 4 43 4 341 1 340 3 297 3 160 31 368 2 219 5 270 5 186 1 347 1 322 15 224 2 379 2 143 1 226 1 381 1 209 2 
254 2 257 1 280 1 258 2 195 1 170 2 7 1 288 4 333 1 267 5 181 1 341 1 160 9 368 1 270 3 219 1 186 1 322 4 224 1 379 4 143 2 226 1 381 2 209 1 
304 1 305 1 230 1 326 1 5 1 127 1 173 1 332 1 237 1 175 1 238 1 314 2 293 2 42 1 179 1 133 1 316 1 159 1 367 1 342 1 45 1 218 1 202 1 220 1 17 1 247 1 141 1 77 1 83 1 276 2 
304 1 305 1 146 1 230 1 326 1 5 1 354 1 125 1 127 1 173 1 332 1 237 1 175 1 238 1 314 3 293 2 179 1 42 2 316 1 159 1 45 1 218 1 202 1 220 1 17 1 247 1 141 1 77 1 83 1 276 3 
146 1 230 1 326 1 5 1 125 1 127 1 173 1 332 1 175 1 238 1 314 2 293 2 179 1 42 2 316 1 159 1 218 1 202 1 220 1 17 1 247 1 141 1 77 1 83 1 276 2 
24 1 316 1 211 1 169 1 326 1 354 1 45 1 218 2 220 2 300 1 371 1 30 1 17 2 173 1 237 1 358 1 238 1 207 1 314 1 81 1 276 1 83 1 179 2 
304 1 305 1 146 1 230 1 326 1 5 1 127 1 173 1 332 1 237 1 175 1 238 1 314 1 293 2 179 1 316 1 367 1 342 1 45 1 218 1 202 1 220 1 17 1 141 1 83 1 276 1 
313 1 
0 1 326 1 149 1 105 1 6 1 234 1 107 2 58 2 108 1 284 1 62 2 63 5 110 1 238 2 12 1 112 4 239 2 71 1 201 1 162 1 300 1 245 1 246 1 118 2 19 1 206 1 207 1 250 3 302 2 81 2 22 1 83 2 255 2 123 1 211 1 356 1 357 1 30 1 173 2 33 2 310 2 34 5 91 1 92 1 359 2 213 1 178 2 364 1 316 1 182 1 134 6 216 2 138 1 377 1 225 1 
134 2 123 1 71 1 25 1 105 1 201 1 6 1 356 1 357 1 108 1 245 1 284 1 34 3 63 3 91 1 92 1 110 1 359 1 250 1 213 1 112 2 22 1 
134 1 123 1 71 1 25 1 105 1 201 1 6 1 234 1 356 1 357 1 107 1 108 1 245 1 284 1 34 3 63 3 91 1 92 1 110 1 250 1 213 1 112 3 22 1 239 1 
123 1 25 1 105 1 6 1 356 1 234 1 357 1 108 1 107 1 284 1 91 1 63 3 34 3 92 1 110 1 359 1 213 1 112 3 178 1 239 1 134 2 71 1 201 1 245 1 250 1 22 1 
255 1 123 1 307 1 25 1 149 1 105 1 6 1 234 5 356 1 357 1 58 2 107 4 108 1 152 1 284 1 62 2 310 1 91 1 63 5 34 5 92 1 110 1 359 4 12 1 213 1 112 6 178 4 239 5 364 1 134 7 216 2 71 1 46 1 201 1 245 1 246 1 118 2 19 1 350 1 274 1 225 1 250 3 302 2 22 1 
149 1 105 1 6 1 234 1 108 1 58 2 107 2 284 1 63 4 62 2 110 1 12 1 112 4 239 2 71 1 201 1 162 1 245 1 246 1 118 2 19 1 250 2 302 2 22 1 123 1 255 1 356 1 357 1 33 2 91 1 34 4 310 1 92 1 359 2 213 1 178 2 364 1 134 4 216 2 225 1 
255 1 123 1 105 1 149 1 6 1 234 1 356 1 357 1 107 2 58 2 108 1 284 1 62 2 310 1 91 1 63 4 34 4 92 1 110 1 359 2 12 1 213 1 178 2 112 4 239 1 364 1 134 4 216 2 71 1 201 1 46 1 245 1 246 1 118 2 19 1 350 1 274 1 250 2 225 1 302 2 22 1 
255 1 123 1 105 1 149 1 6 1 234 1 356 1 357 1 107 2 58 2 108 1 284 1 62 2 310 1 91 1 63 4 34 4 92 1 110 1 359 2 12 1 213 1 178 2 112 4 239 1 364 1 134 4 216 2 71 1 201 1 46 1 245 1 246 1 118 2 19 1 350 1 274 1 250 2 225 1 302 2 22 1 
149 1 105 1 6 1 234 1 235 1 108 1 284 1 63 4 62 2 110 2 335 1 198 1 112 2 239 1 71 1 201 1 245 2 345 1 346 1 246 1 118 2 76 1 19 1 349 1 250 2 22 1 123 1 255 1 26 1 356 1 357 1 33 2 35 1 34 4 91 2 310 1 92 2 176 2 213 1 315 1 364 1 134 2 95 2 274 1 225 1 
255 1 123 1 149 1 105 1 6 1 234 1 356 1 357 1 58 2 108 1 107 3 284 1 152 1 62 2 310 1 91 1 63 4 34 4 92 1 110 1 359 3 12 1 213 1 112 5 178 3 239 1 364 1 134 5 216 2 71 1 46 1 201 1 245 1 246 1 118 2 19 1 350 1 274 1 250 2 225 1 302 2 22 1 
255 1 123 1 149 1 105 1 6 1 234 1 356 1 357 1 58 2 108 1 107 3 284 1 152 1 62 2 310 1 91 1 63 4 34 4 92 1 110 1 359 3 12 1 213 1 112 5 178 3 239 1 364 1 134 5 216 2 71 1 46 1 201 1 245 1 246 1 118 2 19 1 350 1 274 1 250 2 225 1 302 2 22 1 
255 1 123 1 105 1 149 1 6 1 356 1 357 1 108 1 284 1 33 1 62 1 310 1 63 3 34 3 91 1 92 1 110 1 176 1 213 1 112 2 364 1 134 1 71 1 95 1 201 1 162 1 245 1 345 1 246 1 118 1 19 1 250 1 225 1 22 1 
253 1 254 1 258 1 280 1 195 1 170 1 7 1 196 1 288 2 290 1 130 1 11 1 267 3 181 1 341 1 160 6 270 2 73 1 187 1 322 3 321 2 224 1 379 2 143 1 226 1 381 1 
145 1 253 11 254 2 1 1 256 1 258 2 280 1 104 1 4 1 327 1 28 2 9 1 196 1 288 2 290 11 11 4 267 8 181 2 365 1 43 3 340 3 297 2 160 14 219 1 270 1 117 1 73 2 347 1 321 1 322 6 379 4 143 2 381 2 
145 1 254 1 168 1 352 1 211 1 258 1 326 1 104 1 235 1 173 1 330 1 196 1 91 1 110 2 238 1 198 1 11 1 336 1 267 1 316 1 116 1 240 1 160 2 369 1 117 1 73 1 16 1 245 2 321 1 322 1 143 1 379 2 207 1 78 1 81 1 381 1 324 1 83 1 
145 1 146 1 280 3 195 1 326 2 233 1 104 1 232 2 7 1 235 1 330 1 59 1 196 3 288 8 290 7 110 3 238 3 198 1 11 7 336 2 116 2 341 1 297 2 160 20 117 1 73 3 16 2 245 3 248 1 166 2 207 2 81 1 80 2 83 3 253 7 254 3 352 1 256 2 211 2 258 3 170 1 28 2 173 3 91 1 311 2 267 10 181 3 316 2 270 4 369 2 219 4 321 2 322 10 224 1 273 2 379 6 143 3 226 1 381 3 
146 1 254 2 211 3 258 2 326 2 104 1 235 1 30 1 173 8 330 1 196 2 91 1 110 1 198 1 238 7 268 1 267 1 133 1 316 2 158 1 338 1 366 1 160 2 117 1 370 1 73 2 47 1 187 1 300 1 245 1 203 2 322 1 205 1 379 4 143 2 207 2 81 2 381 2 83 8 
253 1 145 1 254 1 256 1 258 1 280 1 26 1 235 1 28 1 196 1 288 1 290 1 91 1 110 1 198 1 11 1 267 1 199 1 181 1 297 1 160 3 270 1 73 1 245 1 322 2 190 1 379 2 143 1 381 1 
253 1 181 1 254 1 297 1 258 1 160 2 219 1 150 1 73 1 187 1 196 1 288 1 290 1 143 1 379 2 11 1 381 1 267 2 
253 1 306 1 254 1 256 1 258 1 280 1 160 2 270 1 73 1 187 1 196 1 288 1 290 1 322 2 143 1 379 2 11 1 381 1 
253 2 254 1 256 1 258 1 280 1 28 1 196 1 288 2 290 2 11 2 267 2 181 1 297 1 160 4 219 1 270 1 73 1 187 1 322 2 379 2 143 1 381 1 
253 1 181 1 254 1 338 1 297 1 258 1 160 2 219 1 150 1 73 1 196 1 288 1 290 1 143 1 379 2 11 1 381 1 267 2 
253 1 306 1 254 1 338 1 256 1 258 1 280 1 160 2 270 1 73 1 196 1 288 1 290 1 322 2 143 1 379 2 11 1 381 1 
253 2 254 1 256 1 258 1 280 1 28 1 196 1 288 2 290 2 11 2 267 2 181 1 338 1 297 1 160 4 219 1 270 1 73 1 322 2 379 2 143 1 381 1 
253 2 181 1 254 1 256 1 297 1 280 1 258 1 160 4 270 1 219 1 73 1 28 1 196 1 288 2 322 2 290 2 143 1 379 2 11 2 381 1 267 2 
254 1 211 1 258 1 326 1 104 1 173 1 196 1 110 1 238 1 336 1 267 1 316 1 116 1 160 2 369 1 117 1 73 1 16 1 245 1 321 1 322 1 166 1 143 1 379 2 207 1 81 1 381 1 83 1 
254 1 2 1 211 1 258 1 326 1 104 1 173 1 196 1 110 1 197 1 238 1 267 1 316 1 116 1 160 2 369 1 117 1 73 1 245 1 321 1 322 1 97 1 143 1 379 2 207 1 81 1 381 1 83 1 
145 1 253 2 254 1 256 1 258 1 280 1 28 1 196 1 288 2 290 2 11 2 267 2 181 1 297 1 160 4 219 1 270 1 73 1 322 2 379 2 143 1 381 1 
253 2 254 1 256 1 211 1 280 1 258 1 326 1 232 1 28 1 173 1 196 1 288 2 290 2 110 1 238 1 11 2 336 1 267 2 133 1 181 1 316 1 116 1 297 1 160 4 270 1 219 1 369 1 73 1 16 1 245 1 322 2 166 1 143 1 379 2 207 1 381 1 83 1 
145 1 253 1 254 1 256 1 280 1 258 1 26 1 235 1 28 1 196 1 288 1 91 1 290 1 110 1 198 1 11 1 266 1 267 2 199 1 181 1 297 1 160 3 219 1 73 1 245 1 322 1 379 2 143 1 381 1 
254 3 100 1 1 3 278 1 256 4 279 1 258 3 280 5 195 1 103 1 259 4 170 1 54 1 7 1 57 1 28 4 236 1 288 8 289 1 333 1 215 1 267 20 181 5 43 4 341 1 340 3 297 4 160 41 15 1 343 1 270 4 219 4 186 1 347 1 375 2 204 1 322 21 224 1 191 1 379 6 143 3 226 1 381 3 
254 4 100 1 1 3 278 1 256 3 279 1 258 4 280 4 195 1 103 1 259 4 170 1 54 1 7 1 57 1 28 4 236 1 288 7 289 1 333 1 215 1 267 20 181 5 43 4 341 1 340 3 297 4 160 38 15 1 343 1 270 4 219 3 186 2 347 1 375 2 204 1 322 18 224 1 191 1 379 8 143 4 226 1 381 4 
254 2 1 2 278 1 256 7 279 1 258 2 280 8 195 1 103 1 259 4 170 1 54 1 7 1 57 1 28 7 9 2 236 1 288 14 289 1 333 1 267 27 181 8 43 4 341 1 340 4 297 7 160 52 15 1 343 1 270 7 219 7 186 1 347 2 375 1 204 1 322 25 224 1 191 1 379 4 143 2 226 1 381 2 
254 2 100 1 1 1 256 3 258 2 280 3 259 2 54 2 28 3 236 1 288 6 36 1 333 1 267 9 181 3 43 2 340 1 297 3 160 19 343 1 270 3 219 3 347 1 375 1 204 1 322 10 191 1 379 4 143 2 381 2 
254 3 1 2 278 1 256 2 279 1 280 2 258 3 259 4 103 1 54 1 57 1 28 3 236 1 288 4 289 1 333 1 267 14 181 3 43 2 340 2 297 3 160 26 15 1 343 1 219 2 270 2 186 2 375 2 322 12 204 2 191 1 379 6 143 3 381 3 
23 1 140 1 53 1 136 1 98 1 177 1 282 1 275 1 51 1 106 1 
298 1 378 1 
23 1 188 1 129 1 98 1 282 1 275 1 93 1 51 1 106 1 
165 1 363 1 
251 1 119 1 380 1 
23 1 296 1 3 1 136 1 282 1 344 2 106 1 140 1 60 1 34 1 63 1 98 1 177 1 275 1 362 1 239 1 51 1 294 1 
23 1 296 1 3 1 136 1 282 1 344 2 106 1 140 1 60 1 34 1 63 1 98 1 177 1 275 1 362 1 239 1 51 1 294 1 
23 1 296 1 3 1 136 1 282 1 344 2 106 1 140 1 60 1 34 1 63 1 98 1 177 1 275 1 362 1 239 1 51 1 294 1 
251 1 165 1 363 1 
251 1 165 1 363 1 
119 1 380 1 
251 1 119 1 380 1 
285 1 192 1 
23 1 3 1 282 1 106 1 235 2 128 1 285 1 60 1 63 1 34 1 91 2 10 1 110 2 132 1 155 1 198 2 67 1 298 1 344 1 245 2 321 1 98 1 189 1 378 1 275 1 51 1 192 1 
145 1 254 1 194 1 211 1 258 1 326 1 104 1 173 2 196 1 32 1 153 1 91 2 110 2 238 2 265 1 214 1 268 1 267 1 316 1 160 2 117 1 73 1 47 1 245 2 203 2 322 1 143 1 379 2 207 1 381 1 83 2 
133 1 305 1 316 1 146 1 230 1 326 1 5 1 127 1 17 1 173 2 89 1 332 1 141 1 175 1 238 2 291 1 293 2 83 2 66 1 
305 1 146 1 316 1 230 1 326 1 5 1 127 1 17 1 173 1 332 1 141 1 175 1 238 1 21 1 293 2 83 1 66 1 
316 1 211 1 326 1 371 1 300 1 17 1 30 1 173 1 89 1 238 1 207 1 81 1 83 1 157 1 
305 1 316 1 146 1 230 1 326 1 5 1 127 1 17 1 173 1 89 1 332 1 141 1 175 1 238 1 291 1 293 2 83 1 66 1 
212 1 
31 1 310 1 255 1 130 1 234 1 239 1 87 1 
364 1 134 1 216 1 255 1 149 1 234 1 58 1 246 1 33 1 63 1 34 1 310 1 250 1 225 1 12 1 302 1 239 2 
277 2 99 2 147 1 102 2 231 2 280 2 326 3 149 4 234 2 56 1 58 6 63 5 64 2 238 3 111 6 113 2 239 8 297 2 71 2 200 3 348 2 246 4 164 2 206 1 207 3 250 3 81 1 83 3 255 8 256 2 211 10 261 1 87 1 172 1 28 2 173 3 31 1 309 2 33 12 310 9 34 5 263 2 312 6 133 1 364 4 181 2 316 4 134 5 369 3 138 2 273 2 225 4 144 1 52 1 
277 1 1 1 278 1 255 5 256 2 102 2 279 1 280 2 103 1 149 2 234 2 58 3 28 2 33 6 63 1 34 1 310 8 289 1 312 5 111 5 239 5 364 2 181 2 43 1 134 1 340 1 297 2 15 1 185 1 372 1 138 1 246 2 206 1 250 1 225 2 
277 1 255 2 102 2 280 1 149 1 26 1 7 1 235 1 63 1 34 1 310 2 35 1 91 1 92 1 110 1 198 1 315 1 364 1 181 2 341 1 46 1 245 1 346 1 246 1 224 1 349 1 225 1 82 1 
364 1 255 1 149 1 234 1 87 1 246 1 31 1 310 1 225 1 239 1 
277 1 181 2 255 5 256 2 102 2 297 2 280 2 28 2 58 5 33 10 310 5 312 5 273 1 111 5 239 5 
134 1 63 1 34 1 250 1 234 1 239 1 
0 1 255 2 211 1 326 1 149 2 261 2 30 1 173 4 331 1 310 2 34 3 63 3 238 4 68 1 364 1 316 1 182 1 134 4 70 1 300 1 138 2 246 2 206 2 207 1 225 2 250 2 81 2 83 4 52 1 
254 1 211 1 258 1 326 1 104 1 26 2 235 2 173 1 196 1 91 2 35 1 110 3 238 1 198 2 361 1 336 1 316 1 116 1 160 1 369 1 73 1 16 1 245 3 321 1 322 1 379 2 166 1 143 1 207 1 381 1 81 1 83 1 
364 1 255 2 170 1 149 1 234 2 58 2 138 1 246 1 33 4 310 1 312 2 206 1 225 1 111 2 239 4 
286 1 98 1 51 1 
286 1 98 1 51 1 
14 1 98 1 177 1 51 1 192 1 
286 1 98 1 51 1 
98 1 120 1 51 1 
98 1 120 1 51 1 
98 1 120 1 51 1 
98 1 51 1 
282 1 106 1 
254 1 1 1 278 1 280 1 258 1 195 1 170 1 7 1 288 2 333 1 267 4 181 1 43 1 340 1 341 1 160 8 270 2 322 4 224 1 379 2 143 1 226 1 381 1 
254 2 1 1 278 1 280 1 258 2 195 1 170 1 7 1 28 1 288 3 333 1 264 1 267 6 181 2 43 2 341 1 340 1 297 1 160 11 270 2 219 1 347 1 322 5 224 1 379 4 143 2 226 1 381 2 
254 3 1 1 278 1 256 2 279 1 258 3 280 3 195 1 103 1 170 1 7 1 28 2 288 4 289 1 333 1 264 1 267 9 181 3 43 1 341 1 340 1 297 2 160 19 15 1 219 1 270 3 186 1 322 10 224 1 379 6 143 3 226 1 381 3 
254 3 1 1 278 1 256 1 258 3 280 2 279 1 195 1 103 1 170 1 7 1 28 2 288 5 289 1 333 1 264 1 267 10 181 3 43 1 341 1 340 1 297 2 160 17 15 1 219 2 270 3 186 1 322 7 224 1 379 6 143 3 226 1 381 3 
254 1 1 1 278 1 280 1 258 1 195 1 170 1 7 1 288 2 333 1 267 4 181 1 43 1 340 1 341 1 160 8 270 2 322 4 224 1 379 2 143 1 226 1 381 1 
254 1 1 1 278 1 256 2 258 1 280 2 279 1 103 1 28 2 288 2 289 1 333 1 267 6 181 2 43 1 340 1 297 2 160 12 15 1 219 1 270 1 322 6 379 2 143 1 381 1 
254 4 1 1 278 1 256 1 279 1 258 4 280 2 195 1 103 1 170 1 7 1 28 2 288 5 289 1 333 1 264 1 267 10 181 3 43 1 341 1 340 1 297 2 160 18 15 1 219 2 270 3 186 2 322 8 224 1 379 8 143 4 226 1 381 4 
254 4 1 1 100 1 278 1 256 2 279 1 258 4 280 2 103 1 28 3 288 6 289 1 333 1 267 9 181 3 43 1 340 1 297 3 160 16 15 1 219 3 270 3 186 2 322 7 379 8 143 4 381 4 
181 1 341 1 280 1 160 7 195 2 270 3 219 3 7 3 288 6 322 4 224 3 226 1 267 3 
254 4 1 1 100 1 278 1 256 1 279 1 258 4 280 2 195 1 103 1 170 1 7 1 28 2 288 4 289 1 333 1 267 10 181 3 43 1 341 1 340 1 297 2 160 18 15 1 219 1 270 3 186 2 322 8 224 1 379 8 143 4 226 1 381 4 
181 1 254 2 341 1 280 1 258 2 160 8 195 1 170 1 219 1 270 2 186 1 7 1 288 3 322 4 224 1 143 2 379 4 226 1 381 2 267 4 
181 1 341 1 280 1 195 1 160 6 170 1 270 2 7 1 288 2 322 3 130 1 224 1 226 1 267 3 
181 1 254 1 256 1 297 1 280 1 258 1 160 4 270 1 219 1 28 1 288 2 322 2 264 1 143 1 379 2 381 1 267 2 
181 1 1 1 43 2 340 1 256 1 297 1 280 1 160 7 270 1 219 1 28 1 347 1 288 2 322 4 267 3 
254 2 256 2 280 3 258 2 195 1 327 1 170 1 7 2 28 2 9 1 288 9 267 11 181 3 43 2 341 1 340 2 297 2 160 23 44 1 219 4 270 5 186 2 347 1 322 12 224 2 143 2 379 4 226 1 381 2 
43 1 322 1 160 1 
340 1 160 1 267 1 
181 1 254 1 256 1 297 1 258 1 280 1 160 6 219 1 270 2 28 1 288 3 322 3 264 1 273 1 379 2 143 1 381 1 267 3 
254 1 1 1 278 1 256 2 258 1 280 2 279 1 103 1 28 2 288 2 289 1 333 1 267 6 181 2 43 1 340 1 297 2 160 12 15 1 219 1 270 1 322 6 379 2 143 1 381 1 
181 1 341 1 280 1 160 6 270 1 219 1 7 1 288 2 322 3 224 1 267 3 
254 1 258 1 195 1 160 3 44 1 219 1 270 1 186 1 7 1 288 2 322 2 224 1 143 1 379 2 226 1 381 1 267 1 
181 2 254 1 341 1 258 1 280 2 160 10 270 3 219 2 7 2 288 5 322 5 333 1 224 2 379 2 143 1 381 1 82 1 267 5 
181 1 254 1 297 1 258 1 160 2 219 1 288 1 333 1 143 1 379 2 381 1 267 2 
181 1 254 1 256 1 297 1 280 1 258 1 160 4 270 1 219 1 28 1 288 2 322 2 333 1 143 1 379 2 381 1 267 2 
254 3 100 1 258 3 160 3 44 1 270 1 219 1 186 1 7 1 288 2 322 2 333 1 224 1 143 3 379 6 381 3 267 1 
252 1 122 1 254 5 1 1 100 1 256 3 258 5 280 5 195 1 170 1 7 3 28 3 288 12 333 1 264 1 360 1 267 16 181 5 43 4 341 2 340 3 297 3 160 34 44 1 219 5 270 7 186 2 347 1 322 18 224 3 379 10 143 5 226 1 381 5 
245 1 193 1 321 1 91 1 110 1 27 1 22 1 
84 1 193 1 27 1 243 1 245 1 321 1 91 1 110 1 22 1 114 1 229 1 167 1 
30 1 173 1 316 1 130 1 211 1 326 1 238 1 207 1 81 1 83 1 300 1 
316 1 116 1 211 1 326 1 369 1 235 1 16 1 245 2 173 1 330 1 321 1 91 1 110 2 198 1 238 1 207 1 81 1 83 1 
123 1 211 3 231 1 326 1 356 1 261 1 235 2 173 1 330 1 91 2 92 1 110 2 238 1 198 1 316 1 116 1 369 2 16 1 245 2 164 1 321 1 207 2 83 1 
2 1 123 1 211 3 231 1 326 1 356 1 261 1 235 2 173 2 330 1 91 2 92 1 110 2 238 2 198 1 316 1 116 1 369 2 245 2 164 1 321 1 50 1 207 2 83 2 
316 1 134 1 231 1 211 4 71 1 326 1 200 1 369 1 234 1 261 1 222 1 173 3 348 1 164 1 139 1 34 2 63 2 50 1 238 3 207 1 81 1 239 1 83 3 
316 1 99 1 134 1 231 1 211 4 71 1 326 1 200 1 369 1 234 1 261 1 173 3 348 1 164 1 34 2 63 2 50 1 238 3 207 1 81 1 239 1 83 3 
173 1 316 1 326 1 238 1 83 1 370 1 
133 1 146 1 316 3 158 1 366 1 211 3 326 2 369 1 370 1 373 1 109 1 173 7 203 1 205 1 238 6 144 1 207 2 81 2 268 1 83 7 13 1 
253 1 145 1 254 2 211 1 280 1 258 2 195 1 326 1 232 1 170 1 7 1 235 1 173 1 330 1 196 2 288 2 32 1 290 1 91 1 311 1 110 2 198 1 238 1 11 1 336 1 267 3 133 1 181 1 316 1 116 1 341 1 160 6 270 2 369 1 73 2 16 1 245 2 321 2 322 3 224 1 143 2 379 4 166 1 226 1 207 1 381 2 83 1 
99 1 255 1 211 2 149 2 234 1 87 1 173 1 31 1 310 1 63 3 34 3 10 1 263 1 64 1 238 1 239 1 113 1 364 2 134 2 71 1 200 1 348 1 246 2 225 2 250 1 81 1 83 1 52 1 
133 1 316 2 147 1 211 2 326 1 369 1 370 1 348 1 173 2 238 2 144 1 207 1 83 2 
133 1 316 1 211 1 326 1 86 1 300 1 30 1 173 4 50 1 238 4 207 1 81 1 83 4 
316 2 351 1 211 1 353 1 326 1 369 1 261 1 109 1 173 2 59 1 238 2 207 1 83 2 13 1 
173 1 316 1 230 1 332 1 141 1 326 1 238 1 81 1 293 1 83 1 
133 1 173 2 316 1 146 1 153 1 211 1 326 1 238 2 207 1 268 1 83 2 
133 1 316 2 158 1 211 3 326 2 86 1 261 1 300 1 30 1 173 5 205 1 238 4 207 2 81 1 83 5 268 1 
133 1 316 2 158 1 211 3 326 2 86 1 261 1 300 1 30 1 173 5 49 1 238 4 207 2 81 1 83 5 268 1 
316 1 116 1 2 1 211 1 326 1 369 1 235 1 245 2 173 1 330 1 321 1 91 1 110 2 198 1 238 1 207 1 81 1 83 1 
316 2 211 1 326 1 369 1 261 1 373 1 109 1 173 1 238 1 144 1 207 1 83 1 13 1 
287 1 321 1 223 1 94 1 249 1 
115 1 148 1 123 1 71 1 94 2 234 1 356 1 357 1 151 1 287 2 321 1 34 2 63 2 92 1 10 1 223 2 249 1 154 1 239 1 
194 1 94 1 245 1 287 1 91 1 110 1 249 1 214 1 265 1 
148 1 154 1 249 1 
247 1 159 1 130 1 77 1 
247 1 159 1 237 1 77 1 45 1 314 1 276 1 
220 1 314 1 179 1 
159 1 367 1 45 1 283 1 29 1 247 1 334 1 237 1 77 1 323 2 314 3 276 3 
272 1 247 1 159 1 237 1 77 1 45 1 314 2 276 2 42 1 
230 1 159 1 367 1 237 1 5 1 227 1 45 1 208 1 314 1 293 1 276 1 
159 1 367 1 237 1 77 1 45 1 314 1 276 1 
247 1 367 1 237 1 77 2 45 1 314 1 276 1 
159 1 367 1 217 1 299 1 45 2 237 2 131 1 77 1 314 2 276 2 
367 1 159 2 124 1 45 1 247 1 237 1 77 1 227 1 40 1 314 3 121 1 276 3 42 2 
230 1 159 1 367 1 45 1 5 1 374 1 332 1 247 1 237 1 175 1 77 1 314 2 293 2 276 2 42 1 
367 1 159 2 45 2 244 1 272 1 247 1 237 2 77 1 227 1 40 1 314 4 276 4 42 2 
247 1 159 1 367 1 237 1 77 1 45 1 314 1 276 1 
159 3 45 1 283 1 8 1 29 1 247 2 237 1 77 2 227 1 40 1 323 1 314 4 276 4 42 2 
159 1 367 1 161 1 45 1 74 1 247 1 237 1 18 1 77 1 314 2 276 2 42 1 
159 1 367 1 45 1 283 1 260 1 29 2 247 1 237 1 77 1 323 2 314 3 276 3 
329 2 159 2 376 1 156 1 
295 1 367 1 237 1 45 1 314 1 276 1 
247 1 159 1 367 1 237 1 124 1 77 1 45 1 314 2 276 2 42 1 
319 1 
247 1 159 1 367 1 237 1 77 1 45 1 314 1 276 1 
247 1 159 1 367 1 237 1 124 1 77 1 45 1 323 1 314 3 276 3 42 1 
159 1 227 1 40 1 8 1 
159 1 77 1 

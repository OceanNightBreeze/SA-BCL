#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (80,376) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 198 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 218 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
97 1 45 9 313 4 99 2 228 2 51 2 74 1 318 1 5 1 180 1 56 1 366 2 344 2 275 1 217 6 219 1 190 2 277 1 221 1 278 3 142 1 237 1 257 2 238 5 120 1 149 9 331 1 225 1 
97 1 45 9 313 4 99 2 228 2 51 2 74 1 318 1 5 1 180 1 56 1 366 2 344 2 275 1 217 6 219 1 190 2 277 1 221 1 278 3 142 1 237 1 257 2 238 5 120 1 149 9 331 1 225 1 
97 1 45 10 313 5 99 2 228 2 51 2 74 1 318 1 5 1 180 1 56 1 366 2 344 2 275 1 217 7 219 1 190 2 277 1 221 1 278 4 142 1 237 1 257 2 238 6 120 1 149 10 331 1 225 1 
97 1 45 7 313 3 99 2 228 2 51 2 74 1 5 1 180 1 56 1 366 2 344 1 275 1 217 4 219 1 190 2 277 1 221 1 278 2 142 1 237 1 257 2 238 4 120 1 149 7 331 1 225 1 
217 3 219 1 45 4 190 1 277 1 313 2 278 1 228 1 51 1 74 1 318 1 257 1 5 1 238 3 180 1 149 4 366 1 344 2 
167 1 219 1 45 2 190 1 277 1 99 1 237 1 51 1 157 1 238 1 257 1 75 1 180 1 149 2 366 1 225 1 
217 1 219 1 45 3 277 1 313 1 221 1 99 1 278 1 257 2 238 2 180 1 149 3 366 2 
97 1 45 9 313 4 99 1 228 1 74 1 51 1 5 1 318 1 180 1 363 1 270 1 366 2 344 2 217 7 219 1 190 1 277 1 278 3 221 1 142 1 257 2 238 5 149 9 
97 1 45 9 313 4 99 1 228 1 74 1 51 1 5 1 318 1 180 1 363 1 270 1 366 2 344 2 217 7 219 1 190 1 277 1 278 3 221 1 142 1 257 2 238 5 149 9 
198 1 253 1 87 1 
336 1 253 1 52 2 
72 2 176 2 325 2 311 2 7 2 64 1 82 2 10 1 
72 2 176 2 154 1 311 2 21 1 206 1 22 1 73 1 338 2 312 1 132 2 359 1 101 1 54 1 7 2 213 1 299 1 185 1 81 1 9 1 187 2 254 1 82 3 10 1 62 1 325 3 369 1 64 1 141 1 371 1 235 1 236 1 240 1 353 2 17 1 224 2 151 1 
72 1 176 1 325 1 108 1 155 1 311 1 7 1 144 1 82 1 10 1 
355 1 325 1 311 1 288 1 358 1 290 1 87 1 67 1 26 1 194 1 108 1 332 1 253 1 82 1 
72 1 176 1 325 1 311 1 288 1 290 2 358 1 87 1 67 1 26 2 194 1 108 1 7 1 253 1 82 1 
126 1 16 1 290 1 88 1 26 1 
127 1 126 1 253 1 290 2 87 1 88 1 303 1 26 2 
290 1 88 1 26 1 
72 1 176 1 325 1 155 1 311 1 86 1 290 1 144 1 26 1 108 1 126 1 7 1 10 1 82 1 
253 1 
127 1 126 1 259 1 253 1 290 2 87 1 88 1 26 2 
335 1 4 2 290 5 267 1 87 1 119 1 88 2 329 1 26 5 292 2 127 1 126 2 92 1 79 1 364 1 19 1 260 1 162 2 253 1 
72 1 176 3 340 1 325 3 311 3 7 3 64 1 82 3 
176 1 325 1 108 1 155 1 311 1 7 1 82 1 
72 1 176 1 325 1 108 1 311 1 7 1 58 1 261 1 82 1 
72 2 176 3 154 1 357 1 311 3 21 1 206 1 288 1 22 1 338 1 312 1 358 1 290 1 132 1 359 1 26 1 54 1 340 1 108 1 7 3 213 1 299 1 58 1 185 1 81 1 9 1 187 1 254 1 82 4 10 1 325 4 64 1 141 1 235 1 236 1 67 1 240 1 194 1 193 1 146 1 353 2 17 1 224 1 151 1 
355 1 176 1 325 2 340 1 311 2 7 1 64 1 328 1 82 2 
72 1 176 3 325 3 311 3 288 1 290 1 145 1 358 1 26 1 67 1 146 1 193 1 194 1 340 2 108 1 7 3 58 1 253 1 82 3 
72 1 176 2 116 1 325 2 311 2 340 1 7 2 376 1 58 1 82 2 
325 1 206 1 64 1 338 1 141 1 312 1 359 1 213 1 17 1 185 1 187 1 224 1 151 1 254 1 82 1 
325 1 206 1 64 1 338 1 141 1 12 1 359 1 38 1 213 1 185 1 187 1 224 1 151 1 254 1 82 1 
80 1 113 1 
176 1 325 1 108 1 311 1 7 1 358 1 53 1 82 1 
198 1 64 1 
72 1 176 1 325 2 311 2 64 2 7 1 58 1 261 1 82 2 
116 1 376 1 18 1 
325 1 206 1 64 1 338 1 141 1 312 1 359 1 321 1 213 1 17 1 185 1 187 1 224 1 151 1 254 1 82 1 
72 1 355 1 176 4 325 5 311 5 64 1 328 1 146 1 70 1 340 2 250 1 7 4 58 1 82 5 
176 2 325 2 108 1 155 1 311 2 7 2 53 1 82 2 
176 1 325 2 311 1 206 1 141 1 338 1 312 1 359 1 146 1 340 1 7 1 376 1 213 1 17 1 185 1 187 1 224 1 151 1 254 1 82 2 
103 1 166 1 65 1 
103 1 265 1 65 1 
103 1 265 1 65 1 
103 1 265 1 65 1 
103 1 65 1 
103 1 65 1 
231 1 327 1 
231 1 327 1 
231 1 327 1 
103 1 166 1 65 1 
103 1 166 1 65 1 
103 1 76 1 65 1 
103 2 231 1 109 1 252 1 327 1 65 2 
245 2 50 1 65 2 290 2 349 1 24 1 268 2 100 2 230 2 26 2 103 2 30 1 89 1 341 2 109 1 160 1 253 1 273 1 334 3 
245 1 176 2 311 2 290 1 100 1 268 1 26 1 339 1 103 1 76 1 341 1 7 2 160 1 365 1 186 1 82 2 325 2 64 1 65 1 258 1 122 1 243 1 334 1 201 1 
190 1 228 1 51 1 
167 1 190 1 51 1 
167 1 59 1 228 2 51 3 324 1 202 1 
167 1 59 1 228 1 51 2 202 1 208 1 
167 1 228 1 59 2 51 2 202 1 
285 1 336 1 4 1 337 1 287 1 290 5 52 3 292 1 26 5 339 1 136 1 107 2 79 3 162 1 253 2 186 1 140 1 368 1 347 1 170 1 143 2 119 1 88 1 87 1 329 2 282 2 195 1 127 1 126 4 223 1 39 1 201 1 
285 3 43 1 335 1 336 3 310 1 4 2 287 3 290 9 52 9 339 4 26 9 292 2 136 3 77 1 107 6 79 8 162 2 216 1 253 5 140 3 368 1 347 2 170 2 372 1 143 6 88 6 87 1 119 1 329 6 195 3 242 5 126 7 127 1 16 5 333 1 
285 1 336 2 335 1 4 1 287 1 290 3 52 4 292 1 26 3 339 1 136 1 107 2 79 3 162 1 253 3 140 1 347 1 170 1 143 2 87 1 282 1 329 2 195 1 126 2 223 1 39 1 
285 2 336 3 335 1 310 1 4 1 287 2 290 4 52 7 292 1 26 4 339 2 136 2 107 4 79 5 162 1 216 1 253 4 140 2 347 1 170 1 143 4 87 1 282 2 329 4 195 2 126 3 223 1 333 1 39 1 
141 1 359 1 
141 1 232 1 359 3 35 2 151 1 152 1 
198 1 359 1 35 1 
189 1 359 1 
196 1 
141 1 359 1 151 1 
222 1 359 1 
285 1 83 3 369 4 21 3 287 1 192 1 132 7 239 1 27 1 105 1 197 1 32 1 212 2 33 1 150 2 244 1 200 1 
285 1 83 3 369 4 21 3 287 1 192 1 132 7 239 1 27 1 105 1 197 1 32 1 212 2 33 1 150 2 244 1 200 1 
285 1 83 3 369 4 21 3 287 1 192 1 132 7 239 1 27 1 105 1 197 1 32 1 212 2 33 1 150 2 367 1 200 1 244 1 
285 4 154 1 21 15 287 4 286 1 22 1 132 31 27 1 105 2 136 3 32 1 212 5 33 1 140 3 165 1 83 10 233 1 84 3 369 16 169 1 235 1 192 5 280 1 236 1 302 4 239 2 195 3 197 2 91 1 353 2 305 1 150 3 200 1 244 2 
285 1 154 2 264 1 287 1 21 4 22 2 247 1 132 9 27 1 105 1 32 1 212 3 83 4 369 5 235 2 192 1 236 2 239 1 197 1 353 4 305 1 150 2 244 1 200 1 
153 1 2 1 45 2 205 1 3 1 206 1 338 1 49 1 99 1 228 1 51 2 180 1 159 1 214 1 366 1 187 1 254 1 324 1 11 1 167 1 217 1 219 1 190 1 277 1 238 1 257 1 149 2 377 1 224 1 262 1 
227 1 2 1 45 3 205 1 3 1 206 1 338 1 49 1 99 1 228 1 51 2 180 1 181 1 214 1 366 1 187 1 345 1 324 1 254 1 11 1 167 1 217 2 190 1 277 1 238 1 257 1 149 3 377 1 224 1 262 1 
227 1 2 1 45 2 3 1 206 1 338 1 49 1 99 1 228 1 51 2 180 1 181 1 214 1 187 1 254 1 324 1 167 1 217 2 190 1 277 1 238 1 149 2 377 1 224 1 262 1 
348 1 203 1 2 2 45 1 206 1 141 1 338 1 49 2 99 2 220 1 359 1 257 1 102 1 149 1 213 1 128 1 366 1 40 1 187 1 224 1 345 1 254 1 262 2 
153 1 2 1 45 1 205 1 3 1 206 1 338 1 49 1 99 1 228 1 51 2 181 1 214 1 366 1 187 1 254 1 324 1 11 1 167 1 219 1 190 1 257 1 149 1 377 1 224 1 262 1 
95 1 
336 2 1 1 4 1 206 1 288 1 338 2 289 1 290 5 52 2 293 2 292 1 209 1 108 1 213 2 298 4 162 1 253 2 112 2 254 1 114 1 347 1 348 1 301 1 119 1 67 1 127 3 304 2 224 2 174 2 355 1 309 2 263 1 311 1 179 1 358 1 359 1 26 5 362 1 271 1 79 2 187 2 82 1 234 2 325 1 141 1 279 1 281 2 87 1 88 6 329 2 194 1 147 1 241 1 332 1 40 1 
355 1 325 1 1 1 311 1 288 1 289 1 358 1 290 3 88 2 67 1 26 3 147 1 194 1 209 1 127 1 108 1 362 1 304 1 259 1 298 2 332 1 82 1 
355 1 309 1 1 1 311 1 288 1 289 1 290 3 358 1 26 3 209 1 108 1 362 1 298 3 253 1 82 1 325 1 88 1 87 1 67 1 194 1 147 1 127 1 259 1 332 1 
355 1 309 1 1 1 311 1 288 1 289 1 290 3 358 1 26 3 293 1 209 1 108 1 362 1 298 3 253 1 82 1 325 1 88 2 87 1 67 1 194 1 147 1 127 1 304 1 259 1 332 1 
336 2 1 1 4 1 288 1 289 1 290 5 293 4 292 1 295 1 209 1 108 1 298 6 162 1 253 5 112 2 119 1 67 1 69 1 127 3 125 1 304 4 259 1 174 2 355 1 309 4 311 1 358 1 26 5 319 1 362 1 79 1 82 1 325 1 234 2 279 1 281 2 88 7 87 5 329 1 147 1 194 1 241 1 332 1 94 1 
174 2 336 2 355 1 309 2 1 1 4 1 311 1 288 1 289 1 290 4 358 1 52 2 293 2 292 1 26 4 209 1 108 1 362 1 271 1 79 1 298 4 162 1 253 2 112 2 82 1 234 2 325 1 279 1 281 2 87 1 88 4 119 1 329 1 67 1 194 1 147 1 241 1 127 2 304 2 332 1 
174 2 336 2 355 1 309 2 1 1 311 1 4 1 288 1 289 1 290 4 358 1 293 2 292 1 26 4 319 1 209 1 108 1 362 1 79 1 298 4 162 1 253 1 112 2 82 1 234 2 325 1 279 1 281 2 87 1 88 4 119 1 329 1 67 1 194 1 147 1 69 1 241 1 127 2 125 1 304 2 332 1 
174 2 336 2 355 1 309 2 1 1 311 1 4 1 288 1 289 1 290 4 358 1 293 2 292 1 26 4 319 1 209 1 108 1 362 1 79 1 298 4 162 1 253 1 112 2 82 1 234 2 325 1 279 1 281 2 87 1 88 4 119 1 329 1 67 1 194 1 147 1 69 1 241 1 127 2 125 1 304 2 332 1 
174 2 355 1 309 2 1 1 311 1 4 1 288 1 289 1 290 4 358 1 52 2 293 2 292 1 26 4 104 2 135 1 209 1 108 1 297 1 362 1 79 1 298 4 161 1 162 1 253 1 82 1 234 2 325 1 279 1 87 1 88 4 119 1 329 1 67 1 194 1 147 1 199 2 127 2 125 1 304 2 332 1 
174 2 336 2 355 1 309 3 1 1 4 1 311 1 288 1 289 1 290 4 358 1 292 1 319 1 26 4 293 3 209 1 108 1 362 1 79 1 298 5 162 1 253 1 112 2 82 1 234 2 325 1 279 1 281 2 87 1 119 1 88 5 329 1 67 1 194 1 147 1 69 1 241 1 127 2 125 1 304 3 332 1 94 1 
174 2 336 2 355 1 309 3 1 1 4 1 311 1 288 1 289 1 290 4 358 1 292 1 319 1 26 4 293 3 209 1 108 1 362 1 79 1 298 5 162 1 253 1 112 2 82 1 234 2 325 1 279 1 281 2 87 1 119 1 88 5 329 1 67 1 194 1 147 1 69 1 241 1 127 2 125 1 304 3 332 1 94 1 
174 2 355 1 309 2 1 1 4 1 311 1 288 1 289 1 290 4 358 1 52 2 293 2 292 1 26 4 104 2 209 1 135 1 108 1 362 1 271 1 79 1 298 4 162 1 253 1 82 1 234 2 325 1 279 1 87 1 88 4 119 1 329 1 67 1 194 1 147 1 199 2 127 2 304 2 332 1 
113 1 
113 1 
113 1 
83 1 116 1 154 1 63 1 369 2 287 1 22 1 235 1 192 1 236 1 132 2 317 1 240 1 376 1 353 2 18 1 299 1 140 1 
83 1 285 1 116 1 154 1 21 2 22 1 235 1 236 1 132 2 317 1 240 1 136 1 137 1 376 1 212 1 353 2 18 1 299 1 
285 1 154 1 287 1 21 2 22 1 132 4 317 1 136 1 212 1 299 1 140 1 83 2 116 2 369 2 235 1 192 1 236 1 195 1 240 1 376 2 353 2 18 2 
285 1 154 1 287 1 21 2 22 1 132 4 136 1 212 1 299 1 140 1 83 2 116 2 369 2 235 1 192 1 236 1 195 1 240 1 376 2 353 2 18 2 
154 1 206 1 21 1 338 1 22 1 312 1 132 2 359 1 54 1 213 1 299 1 185 1 187 1 81 1 254 1 82 1 62 1 325 1 369 1 64 1 141 1 235 1 236 1 240 1 17 1 353 2 224 1 151 1 
154 1 206 1 46 1 21 1 338 1 22 1 132 2 359 1 213 1 299 1 185 1 187 1 81 1 254 1 82 1 62 1 325 1 369 1 64 1 141 1 235 1 12 1 236 1 240 1 38 1 353 2 224 1 151 1 
285 1 154 1 287 1 21 2 22 1 207 1 132 4 136 1 212 1 299 1 140 1 83 2 116 2 369 2 235 1 192 1 236 1 195 1 240 1 376 2 353 2 18 2 
285 1 154 1 21 2 287 1 206 1 178 1 338 1 22 1 312 1 132 4 359 1 54 1 136 1 159 1 212 1 299 1 185 1 140 1 187 1 254 1 82 1 83 2 116 2 325 1 369 2 141 1 235 1 192 1 236 1 240 1 195 1 376 2 17 1 353 2 18 2 224 1 151 1 
285 1 72 1 176 1 154 1 311 1 21 1 287 1 22 1 207 1 132 3 136 1 7 1 299 1 58 1 140 1 82 1 83 1 325 1 116 1 369 2 235 1 192 1 236 1 240 1 195 1 283 1 376 1 353 2 18 1 
198 1 113 1 
285 1 154 2 21 6 98 1 287 2 22 2 207 1 132 14 136 1 212 1 299 1 184 1 81 1 140 2 83 2 62 1 116 4 84 3 369 8 169 1 64 1 235 2 192 1 236 2 280 1 302 3 240 2 195 2 172 1 376 11 353 4 18 11 226 1 
176 1 154 1 311 1 206 1 21 1 338 1 22 1 312 1 207 1 359 1 132 2 321 1 340 1 7 1 213 1 215 1 299 1 185 1 187 1 81 1 254 1 82 2 62 1 116 1 325 2 276 1 168 1 369 1 64 1 141 1 235 1 236 1 240 1 146 1 17 1 353 2 224 1 151 1 
285 3 0 2 154 3 206 2 287 3 338 3 207 1 248 2 54 2 105 1 340 1 7 1 212 4 213 1 299 3 254 2 62 1 115 1 116 7 64 2 353 6 17 2 18 7 224 3 175 2 176 1 311 1 21 10 22 3 178 2 312 2 360 1 132 20 359 2 27 1 136 2 32 1 181 1 185 2 81 1 187 3 140 2 82 3 83 8 325 3 369 10 141 2 235 3 192 4 236 3 239 1 146 1 240 3 195 2 148 1 376 7 150 1 151 2 200 1 
176 1 154 1 311 1 206 2 21 1 338 8 22 1 129 1 359 3 132 2 317 1 25 1 294 1 101 2 340 1 139 1 159 1 7 1 181 1 213 2 299 1 111 1 187 7 81 1 113 1 254 2 82 1 62 1 325 1 369 1 348 1 141 2 235 1 236 1 240 1 352 1 353 2 40 1 224 8 
285 1 72 1 176 1 154 1 311 1 287 1 21 2 22 1 207 1 132 3 136 1 7 1 212 1 299 1 58 1 140 1 82 1 83 1 116 1 325 1 369 1 34 1 235 1 236 1 240 1 195 1 376 1 353 2 18 1 
285 5 96 1 154 3 287 5 210 1 105 1 106 1 212 4 164 1 169 3 118 1 302 4 123 1 353 6 306 1 305 1 264 1 21 21 22 3 132 41 361 2 316 1 27 1 136 4 138 1 32 1 182 1 140 4 274 1 83 8 369 20 84 3 235 3 192 4 280 1 236 3 374 1 239 1 195 4 330 1 150 1 93 4 200 1 
96 1 285 4 154 4 264 1 21 18 287 5 22 4 361 2 132 38 316 1 27 1 210 1 105 1 136 3 138 1 106 1 32 1 182 1 212 4 164 1 140 4 274 1 83 7 84 3 369 20 169 3 235 4 118 1 192 3 236 4 280 1 302 4 239 1 374 1 195 4 123 1 330 1 353 8 305 2 306 1 150 1 93 4 200 1 
285 8 154 2 264 1 21 25 287 8 22 2 361 1 132 52 316 1 27 1 210 1 105 1 136 7 138 1 32 1 182 1 212 7 184 2 164 1 140 7 274 1 83 14 84 4 369 27 169 2 235 2 118 1 192 7 236 2 280 2 302 4 239 1 374 1 195 7 123 1 330 1 353 4 305 1 306 1 150 1 93 4 200 1 
96 1 285 3 154 2 264 1 21 10 287 3 22 2 361 1 132 19 296 1 136 3 138 2 212 3 164 1 140 3 83 6 84 1 369 9 169 1 235 2 118 1 192 3 236 2 280 1 302 2 195 3 330 1 353 4 306 1 93 2 
285 2 154 3 264 1 21 12 287 3 22 3 361 2 132 26 316 1 210 1 136 2 138 1 182 1 212 2 164 1 140 3 274 1 83 4 369 14 84 2 169 2 235 3 118 1 192 2 236 3 302 2 374 1 195 3 123 1 330 2 353 6 305 2 306 1 93 4 
245 1 290 1 65 1 349 1 24 1 268 1 100 1 230 1 26 1 103 1 30 1 89 1 341 1 109 1 160 1 253 1 273 1 334 2 
245 1 290 1 65 1 349 1 24 1 268 1 100 1 230 1 26 1 103 1 30 1 89 1 341 1 109 1 160 1 253 1 273 1 334 2 
245 1 290 1 65 1 349 1 24 1 268 1 100 1 230 1 26 1 103 1 30 1 89 1 341 1 109 1 160 1 253 1 273 1 334 2 
166 1 158 1 252 1 
166 1 158 1 252 1 
323 1 265 1 
252 1 323 1 265 1 
365 1 243 1 
284 1 245 1 176 2 311 2 290 1 230 1 100 1 268 1 26 1 339 1 103 1 76 1 341 1 7 2 365 1 186 1 82 2 325 2 64 1 65 1 349 1 258 1 122 1 126 1 243 1 334 1 201 1 
103 1 30 1 245 1 89 1 341 1 109 1 246 1 65 1 100 1 268 1 
76 1 258 1 
375 1 103 1 245 1 341 1 272 1 65 1 354 1 100 1 268 1 
166 1 158 1 
252 1 323 1 265 1 
154 1 311 2 206 1 21 1 338 2 22 1 207 1 359 1 132 2 294 1 101 2 299 1 111 1 81 1 187 2 254 1 82 2 62 1 325 2 369 1 117 1 326 1 141 1 235 1 236 1 240 1 36 1 68 1 121 1 353 2 224 2 
11 1 167 1 308 1 190 1 206 1 338 2 228 1 51 2 133 1 134 1 159 1 181 1 377 1 214 1 187 2 224 2 324 1 254 1 262 1 
11 1 167 1 190 1 206 1 338 1 228 1 291 1 51 2 134 1 181 1 377 1 214 1 187 1 224 1 324 1 262 1 254 1 
308 1 348 1 206 1 141 1 338 1 359 1 131 1 102 1 213 1 40 1 187 1 224 1 254 1 262 1 
11 1 167 1 308 1 190 1 206 1 338 1 228 1 51 2 133 1 134 1 181 1 377 1 214 1 187 1 224 1 324 1 262 1 254 1 
60 1 
198 1 79 1 19 1 260 1 253 1 87 1 329 1 
336 1 4 1 290 1 281 1 52 1 87 1 88 1 119 1 26 1 292 1 329 1 241 1 127 1 79 1 162 1 253 2 112 1 
189 1 218 1 347 1 4 1 206 2 141 1 338 1 359 2 119 1 292 1 90 1 213 1 79 1 162 1 187 1 224 1 151 1 254 1 152 1 
285 2 336 3 4 2 287 2 179 1 290 1 52 6 316 1 26 1 292 2 29 2 210 1 136 2 107 5 182 1 79 8 162 2 253 5 140 2 274 1 347 1 84 1 169 1 143 5 373 1 13 1 302 1 88 1 119 2 87 2 329 5 195 2 123 1 127 1 307 1 
285 1 72 1 176 1 155 1 4 1 311 1 287 2 290 1 292 1 319 1 26 1 29 2 105 1 108 1 7 1 32 1 79 2 162 1 82 1 10 1 61 1 325 1 86 1 144 1 373 1 239 1 119 1 329 2 
4 1 119 1 87 1 292 1 329 1 79 1 260 1 162 1 19 1 253 1 
285 2 0 1 336 5 287 2 143 5 373 1 52 10 329 5 195 2 29 2 136 2 107 5 79 5 253 5 140 2 
127 1 253 1 290 1 87 1 88 1 26 1 
335 1 263 1 204 1 4 2 206 1 338 4 179 2 290 3 359 1 292 2 26 3 55 1 213 2 79 2 162 2 187 4 254 1 347 2 348 1 141 1 301 1 119 1 88 4 329 2 37 1 127 2 40 1 224 4 42 2 
72 2 176 2 154 1 311 2 21 1 206 1 22 1 338 1 312 1 132 1 359 1 54 1 7 2 213 1 299 1 185 1 81 1 187 1 9 1 254 1 82 3 10 1 325 3 64 1 141 1 235 1 236 1 240 1 353 2 17 1 224 1 151 1 
336 2 347 1 4 1 179 1 143 2 52 4 119 1 87 2 329 2 292 1 107 2 79 1 162 1 150 1 253 4 
245 1 48 1 100 1 
245 1 23 1 100 1 
245 1 23 1 100 1 
245 1 23 1 100 1 
245 1 100 1 
103 1 65 1 
245 1 48 1 100 1 
245 1 48 1 100 1 
28 1 245 1 89 1 365 1 100 1 
285 1 154 1 264 1 287 1 21 4 22 1 132 8 27 1 210 1 105 1 32 1 212 2 83 2 84 1 369 4 169 1 235 1 236 1 302 1 239 1 353 2 150 1 200 1 
285 1 154 2 264 1 21 5 287 2 22 2 266 1 132 11 27 1 210 1 105 1 32 1 212 2 140 1 83 3 84 1 369 6 169 1 235 2 192 1 236 2 280 1 302 2 239 1 195 1 353 4 150 1 200 1 
285 3 154 3 264 1 21 10 287 3 22 3 266 1 132 19 316 1 27 1 210 1 105 1 136 2 32 1 182 1 212 3 140 2 274 1 83 4 84 1 369 9 169 1 235 3 192 1 236 3 302 1 239 1 195 2 123 1 353 6 305 1 150 1 200 1 
285 2 154 3 264 1 21 7 287 3 22 3 266 1 132 17 316 1 27 1 210 1 105 1 136 1 32 1 212 3 182 1 140 2 274 1 83 5 84 1 369 10 169 1 235 3 192 2 236 3 302 1 239 1 195 2 123 1 353 6 305 1 150 1 200 1 
285 1 154 1 264 1 287 1 21 4 22 1 132 8 27 1 210 1 105 1 32 1 212 2 83 2 84 1 369 4 169 1 235 1 236 1 302 1 239 1 353 2 150 1 200 1 
285 2 154 1 264 1 21 6 287 2 22 1 132 12 316 1 210 1 136 2 212 1 182 1 140 2 274 1 83 2 84 1 369 6 169 1 235 1 192 1 236 1 302 1 195 2 123 1 353 2 
285 2 154 4 264 1 21 8 287 3 22 4 266 1 132 18 316 1 27 1 210 1 105 1 136 1 32 1 182 1 212 3 140 2 274 1 83 5 84 1 369 10 169 1 235 4 192 2 236 4 302 1 239 1 195 2 123 1 353 8 305 2 150 1 200 1 
96 1 285 2 154 4 264 1 21 7 287 3 22 4 132 16 316 1 210 1 136 2 182 1 212 3 140 3 274 1 83 6 84 1 369 9 169 1 235 4 192 3 236 4 302 1 195 3 123 1 353 8 305 2 
285 1 83 6 369 3 21 4 287 1 192 3 132 7 239 3 27 1 105 3 32 1 212 3 200 2 
96 1 285 2 154 4 264 1 21 8 287 3 22 4 132 18 316 1 27 1 210 1 105 1 136 1 32 1 182 1 212 3 140 2 274 1 83 4 84 1 369 10 169 1 235 4 192 1 236 4 302 1 239 1 195 2 123 1 353 8 305 2 150 1 200 1 
285 1 83 3 154 2 369 4 287 1 21 4 22 2 235 2 192 1 236 2 132 8 239 1 27 1 105 1 32 1 212 2 353 4 305 1 150 1 200 1 
83 2 285 1 369 3 21 3 287 1 132 6 239 1 27 1 105 1 198 1 32 1 212 2 150 1 200 1 
285 1 83 2 154 1 369 2 21 2 287 1 22 1 235 1 192 1 266 1 236 1 132 4 195 1 136 1 212 1 353 2 140 1 
285 1 83 2 84 1 369 3 169 1 21 4 287 1 192 1 280 1 302 2 132 7 195 1 136 1 212 1 140 1 
285 3 154 2 287 3 21 12 98 1 22 2 132 23 27 1 105 2 136 2 6 1 32 1 212 5 184 1 140 2 83 9 369 11 84 2 235 2 192 4 280 1 236 2 302 2 239 2 195 2 353 4 305 2 150 1 200 1 
21 1 132 1 302 1 
369 1 84 1 132 1 
83 3 285 1 0 1 154 1 369 3 21 3 287 1 22 1 235 1 192 1 236 1 266 1 132 6 195 1 136 1 353 2 212 2 140 1 
285 2 154 1 264 1 21 6 287 2 22 1 132 12 316 1 210 1 136 2 212 1 182 1 140 2 274 1 83 2 84 1 369 6 169 1 235 1 192 1 236 1 302 1 195 2 123 1 353 2 
285 1 83 2 369 3 287 1 21 3 192 1 132 6 239 1 105 1 32 1 212 1 
83 2 154 1 369 1 21 2 22 1 235 1 192 1 236 1 132 3 239 1 27 1 105 1 6 1 212 1 353 2 305 1 200 1 
61 1 83 5 285 2 154 1 369 5 264 1 21 5 287 2 22 1 235 1 192 2 236 1 132 10 239 2 105 2 32 1 353 2 212 3 
83 1 154 1 369 2 264 1 287 1 22 1 235 1 192 1 236 1 132 2 353 2 140 1 
285 1 83 2 154 1 369 2 264 1 21 2 287 1 22 1 235 1 192 1 236 1 132 4 195 1 136 1 212 1 353 2 140 1 
96 1 83 2 154 3 369 1 264 1 21 2 22 3 235 3 192 1 236 3 132 3 239 1 105 1 6 1 353 6 212 1 305 1 
96 1 285 5 154 5 264 1 286 1 21 18 287 5 22 5 266 1 132 34 27 1 105 3 136 3 6 1 32 2 212 7 140 3 165 1 83 12 233 1 84 3 369 16 169 1 235 5 192 5 236 5 280 1 302 4 239 3 195 3 353 10 305 2 150 1 200 1 
355 1 325 1 311 1 64 1 300 1 328 1 82 1 
44 1 355 1 325 1 311 1 64 1 300 1 328 1 14 1 249 1 251 1 163 1 82 1 
198 1 348 1 206 1 141 1 338 1 213 1 40 1 359 1 224 1 187 1 254 1 
176 1 325 2 311 1 206 1 64 1 141 1 338 1 312 1 359 1 340 1 7 1 213 1 185 1 187 1 224 1 151 1 254 1 82 2 
176 1 311 2 206 1 338 1 312 1 358 1 359 3 229 1 340 1 108 1 7 2 185 1 187 1 254 1 82 2 325 2 64 1 141 2 67 1 222 1 224 1 151 2 42 1 
176 1 311 2 206 1 338 2 358 1 359 3 229 1 340 1 108 1 7 2 185 1 187 2 254 1 82 2 325 2 64 1 141 2 12 1 67 1 222 1 351 1 224 2 151 2 42 1 
189 1 288 1 206 1 141 1 338 3 290 2 229 1 359 4 87 1 269 1 88 1 35 1 26 2 222 1 351 1 213 1 183 1 253 1 187 3 224 3 151 1 254 1 42 1 
189 1 288 1 206 1 141 1 338 3 85 1 290 2 229 1 359 4 87 1 88 1 35 1 26 2 222 1 351 1 213 1 253 1 187 3 224 3 151 1 254 1 42 1 
352 1 206 1 338 1 224 1 187 1 254 1 
206 3 338 7 141 2 129 1 359 3 25 1 66 1 101 1 171 1 352 1 139 1 159 1 181 1 213 2 111 1 187 6 224 7 151 1 152 1 254 2 188 1 
285 1 154 2 206 1 287 1 338 1 207 1 54 1 105 1 340 1 159 1 7 1 212 2 299 2 254 1 116 1 117 1 64 2 17 1 353 4 18 1 224 1 175 1 176 1 311 1 21 3 178 1 22 2 312 1 359 1 132 6 27 1 32 1 185 1 187 1 82 2 83 2 325 2 369 3 141 1 235 2 236 2 239 1 240 2 376 1 150 1 151 1 200 1 
4 2 156 1 47 1 288 1 338 1 290 3 130 1 359 2 292 2 26 3 55 1 213 1 79 1 162 2 253 1 187 1 189 1 85 1 87 1 119 2 88 2 35 1 329 1 126 1 127 1 19 1 260 1 224 1 
206 2 338 2 141 1 359 2 35 1 352 1 159 1 90 1 187 2 224 2 151 1 152 1 254 1 
348 1 206 1 338 4 141 1 359 1 211 1 351 1 159 1 213 1 40 1 187 4 224 4 254 1 
206 2 338 2 141 1 359 1 320 1 148 1 171 1 343 1 187 2 224 2 151 1 254 1 42 1 188 1 
167 1 190 1 206 1 377 1 338 1 213 1 51 1 224 1 187 1 254 1 
121 1 159 1 206 1 141 1 181 1 338 2 111 1 359 1 224 2 187 2 254 1 
348 1 206 2 338 5 141 2 359 3 25 1 211 1 159 1 139 1 213 1 40 1 111 1 187 4 224 5 254 2 42 1 
348 1 177 1 206 2 338 5 141 2 359 3 25 1 211 1 159 1 213 1 40 1 111 1 187 4 224 5 254 2 42 1 
176 1 325 2 311 1 206 1 64 1 141 1 338 1 12 1 359 1 340 1 7 1 213 1 185 1 187 1 224 1 151 1 254 1 82 2 
206 2 338 1 141 1 359 1 66 1 171 1 187 1 224 1 151 1 152 1 254 1 188 1 42 1 
36 1 68 1 20 1 325 1 78 1 311 1 326 1 314 1 82 1 
350 1 78 1 315 1 
20 1 78 1 64 1 370 1 314 1 
346 1 20 2 288 1 64 1 370 2 358 1 290 2 314 2 87 1 315 1 67 1 26 2 193 1 194 1 350 1 108 1 78 1 126 1 253 1 
180 1 198 1 277 1 238 1 
180 1 149 1 45 1 277 1 366 1 238 1 257 1 
149 1 49 1 99 1 
219 1 45 3 277 1 237 2 238 1 257 1 149 3 180 1 342 1 366 1 8 1 41 1 
217 1 180 1 149 2 45 2 277 1 366 1 344 1 238 1 257 1 
219 1 45 1 190 1 313 1 228 1 51 1 257 1 5 1 238 1 149 1 366 1 
180 1 149 1 219 1 45 1 366 1 238 1 257 1 
180 2 149 1 219 1 45 1 277 1 366 1 257 1 
219 1 45 2 356 1 238 1 257 2 180 1 149 2 110 1 378 1 366 2 
97 1 217 2 219 1 45 3 277 1 313 1 142 1 278 1 257 1 238 2 180 1 149 3 366 1 
167 1 217 1 219 1 45 2 190 1 277 1 256 1 228 1 51 2 238 1 257 1 180 1 149 2 366 1 324 1 
217 2 219 1 45 4 277 1 313 1 278 1 257 2 318 1 238 2 180 1 149 4 366 2 344 1 
180 1 149 1 219 1 45 1 277 1 366 1 238 1 257 1 
255 1 217 2 45 4 277 2 313 1 278 1 237 1 257 1 238 3 180 2 149 4 342 1 366 1 41 1 
217 1 219 1 45 2 277 1 238 1 257 1 71 1 180 1 149 2 57 1 270 1 366 1 
219 1 45 3 277 1 237 2 238 1 257 1 15 1 149 3 180 1 342 1 366 1 41 2 
322 1 31 2 238 2 173 1 
149 1 219 1 45 1 191 1 366 1 257 1 
97 1 217 1 180 1 149 2 219 1 45 2 277 1 366 1 238 1 257 1 
124 1 
180 1 149 1 219 1 45 1 277 1 366 1 238 1 257 1 
97 1 217 1 180 1 149 3 219 1 45 3 277 1 366 1 237 1 238 1 257 1 
255 1 313 1 278 1 238 1 
180 1 238 1 

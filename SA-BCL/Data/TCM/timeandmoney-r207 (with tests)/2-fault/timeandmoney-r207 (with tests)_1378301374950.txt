#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 4 190 1 136 6 260 9 239 1 73 1 166 2 118 5 4 1 323 1 98 3 145 1 9 1 273 1 198 9 123 1 280 1 345 2 308 2 229 2 231 2 252 1 62 1 380 2 37 1 255 1 354 1 235 2 
159 4 190 1 136 6 260 9 239 1 73 1 166 2 118 5 4 1 323 1 98 3 145 1 9 1 273 1 198 9 123 1 280 1 345 2 308 2 229 2 231 2 252 1 62 1 380 2 37 1 255 1 354 1 235 2 
159 5 190 1 136 7 260 10 239 1 73 1 166 2 118 6 4 1 323 1 98 4 145 1 9 1 273 1 198 10 123 1 280 1 345 2 308 2 229 2 231 2 252 1 62 1 380 2 37 1 255 1 354 1 235 2 
159 3 190 1 136 4 260 7 239 1 73 1 166 2 118 4 323 1 98 2 145 1 9 1 273 1 198 7 123 1 280 1 345 2 308 2 229 2 231 2 252 1 62 1 380 1 37 1 255 1 354 1 235 2 
273 1 159 2 198 4 123 1 136 3 260 4 345 1 166 1 308 1 118 3 229 1 4 1 62 1 98 1 380 2 145 1 354 1 235 1 
198 2 123 1 190 1 260 2 345 1 317 1 166 1 307 1 308 1 118 1 231 1 62 1 267 1 9 1 354 1 235 1 
159 1 198 3 123 1 136 1 260 3 166 2 118 2 231 1 62 1 98 1 255 1 354 1 235 2 
159 4 136 7 260 9 239 1 338 1 166 2 119 1 118 5 4 1 98 3 145 1 273 1 198 9 123 1 345 1 308 1 229 1 231 1 62 1 380 2 37 1 255 1 354 1 235 2 
159 4 136 7 260 9 239 1 338 1 166 2 119 1 118 5 4 1 98 3 145 1 273 1 198 9 123 1 345 1 308 1 229 1 231 1 62 1 380 2 37 1 255 1 354 1 235 2 
246 1 350 1 84 1 
339 2 246 1 366 1 
186 2 265 2 297 2 242 1 132 2 210 2 95 2 319 1 
186 3 355 1 68 1 113 1 314 1 71 1 115 1 218 2 95 2 319 1 363 2 141 2 45 1 265 2 297 3 242 1 80 1 146 1 300 1 147 1 220 1 85 1 301 1 344 1 330 2 106 1 205 2 248 1 225 1 309 1 310 1 180 1 209 1 132 2 210 2 336 1 381 1 
186 1 39 1 364 1 265 1 297 1 42 1 132 1 210 1 95 1 319 1 
186 1 215 1 39 1 246 1 188 1 173 1 164 1 165 1 179 1 265 1 297 1 182 1 196 1 84 1 
186 1 215 1 39 1 246 1 188 1 173 2 95 1 164 1 165 2 179 1 265 1 297 1 210 1 132 1 84 1 
272 1 289 1 173 1 306 1 165 1 
296 1 289 1 246 1 173 2 326 1 306 1 165 2 84 1 
173 1 306 1 165 1 
186 1 39 1 289 1 173 1 42 1 95 1 165 1 319 1 364 1 265 1 297 1 253 1 210 1 132 1 
246 1 
296 1 289 1 246 1 173 2 306 1 128 1 165 2 84 1 
214 1 289 2 246 1 14 1 200 1 54 1 173 5 124 1 193 2 306 2 165 5 223 1 296 1 250 1 35 1 341 1 211 2 84 1 270 2 
350 1 242 1 
186 2 251 1 265 2 297 2 242 2 191 1 132 1 210 1 95 1 
274 1 23 1 1 1 
186 1 355 1 85 1 301 1 330 1 218 1 347 1 309 1 310 1 180 1 141 1 297 1 242 1 209 1 336 1 381 1 
186 2 274 1 355 1 85 1 301 1 330 1 218 1 117 1 95 1 310 1 309 1 180 1 141 1 265 1 286 1 297 2 209 1 132 1 381 1 336 1 
186 5 160 1 288 1 112 1 95 4 117 1 265 5 251 1 286 2 297 5 242 1 196 1 132 4 210 1 
186 2 39 1 265 2 6 1 297 2 42 1 132 2 95 2 
186 3 265 3 286 1 297 3 242 1 210 1 132 3 95 3 
186 1 39 1 265 1 297 1 42 1 132 1 95 1 
186 1 39 1 265 1 251 1 297 1 191 1 132 1 210 1 95 1 
186 4 355 1 215 1 39 1 68 1 188 1 314 1 71 1 115 1 315 1 218 1 95 3 117 1 164 1 165 1 319 1 363 2 141 1 45 1 265 3 297 4 242 1 147 1 220 1 85 1 301 1 344 1 330 1 106 1 173 1 205 1 248 1 310 1 309 1 179 1 180 1 251 1 286 1 209 1 210 2 132 3 381 1 336 1 92 1 
186 2 160 1 265 2 297 2 286 1 242 1 196 1 132 1 95 1 
186 3 39 1 215 1 246 1 188 1 173 1 316 1 117 1 95 3 165 1 164 1 179 1 251 1 265 3 286 2 297 3 210 1 132 3 92 1 
186 2 274 1 95 2 251 1 265 2 286 1 297 2 23 1 210 1 132 2 
186 1 355 1 301 1 85 1 330 1 218 1 309 1 310 1 180 1 141 1 297 1 242 1 209 1 336 1 381 1 
186 1 355 1 256 1 301 1 85 1 330 1 218 1 309 1 310 1 141 1 297 1 242 1 46 1 209 1 381 1 
68 1 94 1 314 2 1 2 294 1 363 2 340 1 45 1 368 1 146 2 83 1 220 1 274 2 344 1 152 1 106 1 51 1 304 1 248 1 205 4 181 1 312 1 23 2 64 1 
186 1 39 1 215 1 265 1 297 1 6 1 132 1 95 1 
34 1 278 1 
34 1 278 1 
134 1 79 1 
134 1 79 1 
134 1 79 1 
34 1 93 1 278 1 
34 1 93 1 278 1 
34 1 278 1 10 1 
34 2 171 1 230 1 278 2 134 1 79 1 
34 1 93 1 278 1 
34 1 278 1 97 1 
34 1 278 1 97 1 
34 1 278 1 97 1 
186 2 212 1 187 1 72 1 95 2 165 1 265 2 297 2 7 1 242 1 243 1 8 1 10 1 32 1 343 1 170 1 278 1 173 1 346 1 34 1 376 1 351 1 352 1 132 2 
343 3 171 1 170 2 246 1 278 2 86 1 173 2 72 1 57 1 346 2 165 2 374 1 224 1 34 2 376 2 378 1 207 2 32 2 313 1 
308 1 229 1 345 1 
308 1 345 1 317 1 
308 3 229 2 277 1 199 1 317 1 282 1 
308 2 229 1 199 1 269 1 317 1 282 1 
308 2 229 1 199 2 317 1 282 1 
187 1 289 4 114 1 94 1 193 1 165 5 339 3 296 1 366 1 197 1 322 1 8 1 270 1 84 1 49 2 303 2 152 1 246 2 14 3 54 1 173 5 124 2 204 1 306 1 17 1 227 1 312 1 377 1 22 2 64 1 352 1 211 1 
289 7 94 3 193 2 165 9 339 9 296 1 366 3 322 2 244 1 8 4 82 1 84 1 270 2 49 6 272 5 371 1 303 6 152 3 246 5 200 1 14 8 203 5 173 9 54 1 124 6 204 2 125 1 306 6 284 1 227 1 312 3 377 3 64 3 25 1 211 2 
289 2 114 1 94 1 193 1 165 3 339 4 366 2 197 1 322 1 8 1 84 1 270 1 49 2 246 3 152 1 303 2 200 1 14 3 173 3 204 1 124 2 312 1 377 1 22 1 64 1 211 1 
289 3 114 1 94 2 193 1 165 4 339 7 366 3 197 1 322 1 244 1 8 2 82 1 84 1 270 1 49 4 246 4 303 4 152 2 200 1 14 5 173 4 204 1 124 4 312 2 377 2 22 2 64 2 25 1 211 1 
85 1 350 1 299 1 
85 1 126 1 
87 1 
85 1 301 1 209 1 
85 1 334 1 
85 1 209 1 
85 3 301 1 349 1 96 1 299 2 209 1 
221 1 372 1 52 1 94 1 40 1 314 3 205 7 74 1 76 1 311 1 181 3 320 1 195 2 312 1 368 2 146 4 342 1 
221 1 372 1 52 1 94 1 40 1 314 3 205 7 74 1 76 1 311 1 181 3 320 1 195 2 312 1 368 2 146 4 342 1 
221 1 372 1 52 1 94 1 40 1 314 3 205 7 74 1 76 1 311 1 181 3 320 1 195 2 312 1 368 2 146 4 342 1 66 1 
68 1 40 1 94 4 314 15 74 5 194 1 76 2 320 2 363 2 195 3 143 4 45 1 30 1 120 1 368 5 146 16 342 1 102 3 220 1 103 1 221 1 328 1 372 1 152 3 52 2 56 1 248 1 205 31 311 2 181 10 130 1 312 4 377 3 64 3 
257 1 68 2 291 1 94 1 40 1 314 4 74 1 76 1 363 4 195 2 320 1 45 2 368 3 146 5 342 1 220 2 221 1 52 1 56 1 248 2 205 9 311 1 181 4 312 1 
133 1 359 1 136 1 260 2 218 1 317 1 295 1 166 1 118 1 141 1 77 1 321 1 100 1 12 1 276 1 277 1 330 1 104 1 198 2 123 1 345 1 309 1 308 2 229 1 231 1 62 1 156 1 354 1 235 1 381 1 
359 1 136 2 260 3 218 1 27 1 2 1 317 1 295 1 166 1 118 1 141 1 365 1 321 1 100 1 12 1 277 1 276 1 330 1 104 1 198 3 123 1 345 1 309 1 308 2 229 1 231 1 156 1 354 1 235 1 381 1 
136 2 260 2 218 1 27 1 2 1 317 1 295 1 118 1 141 1 321 1 100 1 12 1 276 1 277 1 330 1 104 1 198 2 123 1 345 1 309 1 308 2 229 1 231 1 354 1 381 1 
355 1 293 1 360 1 260 1 218 1 295 2 166 1 141 1 365 1 12 2 85 1 330 1 105 1 198 1 104 2 202 1 309 1 375 1 231 2 209 1 157 1 381 1 235 1 
133 1 359 1 260 1 218 1 2 1 317 1 295 1 166 1 141 1 321 1 100 1 12 1 276 1 277 1 330 1 104 1 198 1 345 1 309 1 308 2 229 1 231 1 62 1 156 1 235 1 381 1 
20 1 
186 1 237 2 39 1 188 1 193 1 3 1 339 2 296 3 141 2 297 1 196 1 11 1 149 2 48 1 246 2 50 2 202 1 14 2 54 1 204 1 306 6 309 1 208 2 209 1 65 1 211 1 355 2 67 1 215 1 357 1 259 2 360 1 218 2 361 1 219 1 165 5 164 1 366 2 265 1 29 4 81 1 369 2 84 1 270 1 271 2 85 1 330 2 173 5 124 2 176 1 179 1 129 1 182 1 233 1 381 1 
186 1 39 1 215 1 357 1 188 1 173 3 306 2 128 1 165 3 164 1 179 1 296 1 265 1 29 2 297 1 182 1 196 1 81 1 369 1 65 1 11 1 48 1 
186 1 39 1 215 1 357 1 246 1 188 1 259 1 173 3 306 1 128 1 165 3 164 1 179 1 296 1 265 1 29 3 297 1 182 1 196 1 81 1 65 1 11 1 84 1 48 1 
186 1 215 1 39 1 357 1 188 1 259 1 164 1 165 3 296 1 265 1 297 1 29 3 196 1 81 1 369 1 11 1 48 1 84 1 246 1 173 3 306 2 128 1 179 1 182 1 208 1 65 1 
186 1 237 2 39 1 188 1 193 1 44 1 296 3 297 1 196 1 11 1 48 1 148 1 149 2 246 5 50 2 14 1 54 1 306 7 208 4 65 1 211 1 215 1 67 1 357 1 259 4 361 1 116 1 164 1 165 5 265 1 366 2 29 6 78 1 81 1 369 4 84 5 270 1 271 2 329 1 173 5 124 1 128 1 179 1 182 1 
186 1 237 2 67 1 215 1 39 1 357 1 188 1 259 2 361 1 193 1 165 4 164 1 3 1 339 2 296 2 366 2 265 1 297 1 29 4 196 1 81 1 369 2 11 1 84 1 149 2 48 1 270 1 271 2 246 2 50 2 14 1 54 1 173 4 124 1 306 4 179 1 182 1 208 2 65 1 211 1 
186 1 237 2 67 1 215 1 39 1 357 1 188 1 259 2 361 1 193 1 164 1 165 4 44 1 296 2 366 2 265 1 78 1 297 1 29 4 196 1 81 1 369 2 11 1 84 1 149 2 270 1 48 1 148 1 271 2 246 1 50 2 14 1 173 4 54 1 124 1 306 4 179 1 182 1 208 2 65 1 211 1 
186 1 237 2 67 1 215 1 39 1 357 1 188 1 259 2 361 1 193 1 164 1 165 4 44 1 296 2 366 2 265 1 78 1 297 1 29 4 196 1 81 1 369 2 11 1 84 1 149 2 270 1 48 1 148 1 271 2 246 1 50 2 14 1 173 4 54 1 124 1 306 4 179 1 182 1 208 2 65 1 211 1 
186 1 67 1 215 1 39 1 357 1 188 1 259 2 0 2 193 1 164 1 165 4 339 2 296 2 265 1 78 1 297 1 29 4 196 1 81 1 369 2 11 1 84 1 149 2 270 1 48 1 246 1 50 2 14 1 172 1 173 4 54 1 124 1 306 4 179 1 91 1 61 1 232 2 182 1 208 2 65 1 211 1 
186 1 237 2 67 1 215 1 39 1 357 1 188 1 259 3 361 1 116 1 193 1 164 1 165 4 44 1 296 2 366 2 265 1 78 1 297 1 29 5 196 1 81 1 369 3 11 1 84 1 149 2 270 1 148 1 48 1 271 2 246 1 50 2 14 1 54 1 173 4 124 1 306 5 179 1 182 1 208 3 65 1 211 1 
186 1 237 2 67 1 215 1 39 1 357 1 188 1 259 3 361 1 116 1 193 1 164 1 165 4 44 1 296 2 366 2 265 1 78 1 297 1 29 5 196 1 81 1 369 3 11 1 84 1 149 2 270 1 148 1 48 1 271 2 246 1 50 2 14 1 54 1 173 4 124 1 306 5 179 1 182 1 208 3 65 1 211 1 
186 1 67 1 215 1 39 1 357 1 188 1 259 2 0 2 193 1 165 4 164 1 3 1 339 2 296 2 265 1 297 1 29 4 196 1 81 1 369 2 11 1 84 1 149 2 48 1 270 1 246 1 50 2 14 1 172 1 54 1 173 4 124 1 306 4 179 1 232 2 182 1 208 2 65 1 211 1 
68 1 40 1 94 1 314 3 1 1 363 2 320 1 195 1 45 1 242 2 368 2 146 3 342 1 220 1 221 1 274 1 344 1 52 1 106 1 51 1 248 1 205 6 181 2 312 1 350 1 23 1 
68 2 113 1 94 2 71 1 314 6 1 11 74 1 262 1 194 1 363 4 143 3 45 2 242 1 368 1 146 8 102 3 220 2 103 1 274 11 344 2 152 2 106 1 305 1 248 2 205 14 348 1 181 2 312 1 377 2 379 1 23 4 64 1 109 1 
186 2 355 1 213 1 68 1 113 1 71 1 314 1 218 1 95 1 117 1 262 1 363 2 141 1 45 1 265 1 297 2 242 1 146 1 220 1 85 1 301 1 330 1 344 1 106 1 248 1 205 2 310 1 309 1 347 1 180 1 286 1 63 1 23 1 209 1 132 1 287 1 381 1 336 1 
186 3 238 1 40 1 94 3 41 1 1 7 2 1 95 1 240 2 195 1 141 3 45 3 297 3 242 2 298 2 146 10 342 1 301 2 344 3 152 2 52 1 106 3 248 3 205 20 309 2 310 2 312 3 23 7 64 2 209 2 355 1 68 3 113 1 314 10 71 1 115 2 218 3 117 1 74 4 262 1 320 1 363 6 265 1 368 4 220 3 221 1 274 7 85 2 330 3 90 2 180 2 181 8 377 2 286 1 183 1 184 2 132 1 336 2 381 2 
186 1 355 2 68 2 113 1 71 1 314 1 360 1 218 7 2 1 95 1 363 4 77 1 141 8 265 1 45 2 297 1 266 1 268 1 324 1 146 1 300 2 220 2 370 1 85 3 330 8 344 2 51 1 106 2 202 1 175 1 16 1 248 2 205 2 178 1 309 2 286 1 132 1 209 2 381 2 
186 1 68 1 94 1 314 2 1 1 95 1 139 1 262 1 363 2 45 1 265 1 297 1 368 1 146 1 220 1 274 1 344 1 152 1 106 1 248 1 205 3 181 1 312 1 251 1 377 1 23 1 64 1 132 1 210 1 
274 1 68 1 344 1 152 1 51 1 106 1 94 1 1 1 205 2 248 1 74 1 181 1 363 2 340 1 45 1 23 1 146 2 220 1 
274 1 68 1 344 1 51 1 106 1 304 1 314 2 1 1 205 2 248 1 181 1 363 2 312 1 45 1 368 1 23 1 64 1 220 1 
68 1 94 1 314 2 1 2 74 1 363 2 45 1 368 1 146 2 220 1 274 2 344 1 152 1 106 1 51 1 248 1 205 4 181 2 312 1 377 1 23 2 64 1 
274 1 68 1 344 1 152 1 106 1 94 1 1 1 205 2 248 1 74 1 181 1 363 2 340 1 45 1 23 1 268 1 146 2 220 1 
274 1 68 1 344 1 106 1 304 1 314 2 1 1 205 2 248 1 181 1 363 2 312 1 45 1 368 1 23 1 268 1 64 1 220 1 
68 1 94 1 314 2 1 2 74 1 363 2 45 1 268 1 368 1 146 2 220 1 274 2 344 1 152 1 106 1 248 1 205 4 181 2 312 1 377 1 23 2 64 1 
274 2 68 1 344 1 152 1 106 1 94 1 314 2 1 2 248 1 205 4 74 1 181 2 363 2 312 1 45 1 377 1 368 1 23 2 64 1 146 2 220 1 
186 1 355 1 68 1 113 1 71 1 314 1 115 1 218 1 363 2 141 1 45 1 297 1 242 1 146 1 220 1 301 1 85 1 330 1 344 1 106 1 205 2 248 1 310 1 309 1 180 1 209 1 381 1 336 1 
186 1 256 1 355 1 68 1 113 1 71 1 314 1 218 1 363 2 141 1 45 1 297 1 242 1 46 1 146 1 220 1 301 1 85 1 330 1 344 1 106 1 15 1 205 2 248 1 310 1 309 1 209 1 381 1 
68 1 94 1 314 2 1 2 74 1 262 1 363 2 45 1 368 1 146 2 220 1 274 2 344 1 152 1 106 1 248 1 205 4 181 2 312 1 377 1 23 2 64 1 
186 1 68 1 94 1 314 2 1 2 115 1 218 1 74 1 363 2 141 1 77 1 45 1 297 1 368 1 146 2 220 1 274 2 301 1 85 1 330 1 344 1 152 1 106 1 205 4 248 1 310 1 309 1 90 1 181 2 180 1 312 1 377 1 23 2 64 1 209 1 381 1 336 1 
186 1 68 1 94 1 314 1 1 1 95 1 74 1 262 1 363 2 45 1 265 1 297 1 146 2 220 1 274 1 344 1 152 1 106 1 248 1 205 3 19 1 181 1 312 1 251 1 377 1 23 1 64 1 132 1 210 1 
68 2 291 1 94 3 337 1 314 10 137 2 28 2 138 1 74 3 194 1 363 4 143 2 45 2 368 3 146 9 102 1 220 2 103 1 152 3 222 1 248 2 205 19 58 1 181 6 312 3 377 3 154 1 36 1 64 3 335 1 
68 3 291 1 258 1 94 3 314 12 337 1 137 4 28 1 138 1 74 2 363 6 45 3 143 2 5 1 368 2 146 14 102 2 220 3 103 2 152 3 201 1 222 2 56 2 248 3 205 26 249 1 58 2 107 1 181 4 312 2 131 1 377 3 64 2 335 1 
68 3 291 1 40 1 258 1 94 5 337 1 314 21 137 4 28 1 138 1 74 4 194 1 195 1 320 1 363 6 5 1 143 4 45 3 368 4 146 20 342 1 102 3 220 3 103 3 221 1 152 4 52 1 201 1 222 1 56 1 248 3 205 41 249 1 58 2 107 1 181 8 312 5 131 1 377 4 36 1 64 4 335 1 155 1 
68 4 291 1 40 1 258 1 94 5 337 1 314 18 137 4 28 1 138 1 74 3 194 1 195 1 320 1 363 8 5 1 143 4 45 4 368 4 146 20 342 1 102 3 220 4 103 3 221 1 152 4 52 1 201 1 222 1 56 2 248 4 205 38 249 1 58 2 107 1 181 7 312 4 131 1 377 4 36 1 64 3 335 1 155 1 
68 2 291 1 40 1 258 1 94 8 337 1 314 25 137 4 28 1 138 1 74 7 194 2 195 1 320 1 363 4 5 1 143 4 45 2 368 7 146 27 342 1 102 4 220 2 103 2 221 1 152 7 52 1 201 1 222 1 56 1 248 2 205 52 249 1 58 1 107 1 181 14 312 8 131 1 377 7 379 2 64 7 335 1 
34 1 151 1 171 1 170 1 376 1 278 1 32 1 57 1 346 1 374 1 
351 1 10 1 
34 1 170 1 376 1 278 1 144 1 174 1 32 1 234 1 346 1 
93 1 18 1 
230 1 97 1 31 1 
343 2 171 1 170 1 246 1 278 1 86 1 173 1 72 1 57 1 165 1 346 1 374 1 224 1 34 1 376 1 207 1 32 1 313 1 
343 2 171 1 170 1 246 1 278 1 86 1 173 1 72 1 57 1 165 1 346 1 374 1 224 1 34 1 376 1 207 1 32 1 313 1 
343 2 171 1 170 1 246 1 278 1 86 1 173 1 72 1 57 1 165 1 346 1 374 1 224 1 34 1 376 1 207 1 32 1 313 1 
93 1 230 1 18 1 
93 1 230 1 18 1 
97 1 31 1 
230 1 97 1 31 1 
212 1 243 1 
186 2 212 1 187 1 289 1 26 1 95 2 165 1 265 2 297 2 7 1 242 1 243 1 8 1 10 1 32 1 343 1 170 1 278 1 173 1 346 1 34 1 376 1 207 1 351 1 352 1 132 2 313 1 
186 2 68 1 217 1 113 1 292 1 71 1 314 1 218 2 262 1 363 2 141 2 45 1 265 2 297 2 324 1 146 1 300 2 220 1 85 1 330 2 344 1 106 1 175 1 55 1 248 1 205 2 153 1 309 1 21 1 209 1 381 1 
150 1 277 1 276 1 330 2 104 1 359 1 163 1 345 1 218 2 2 1 317 1 308 2 309 1 229 1 141 2 77 1 59 1 100 1 381 1 
150 1 277 1 276 1 330 1 104 1 359 1 345 1 218 1 2 1 317 1 308 2 309 1 285 1 229 1 141 1 100 1 381 1 
355 1 85 1 330 1 104 1 290 1 202 1 293 1 360 1 218 1 309 1 141 1 59 1 209 1 381 1 
150 1 277 1 276 1 330 1 104 1 359 1 163 1 345 1 218 1 2 1 317 1 308 2 309 1 229 1 141 1 59 1 100 1 381 1 
283 1 
250 1 246 1 35 1 350 1 14 1 124 1 84 1 
271 1 237 1 246 2 14 1 173 1 54 1 124 1 361 1 306 1 193 1 165 1 339 1 296 1 366 1 211 1 84 1 270 1 
135 2 94 2 193 4 240 2 339 12 296 3 142 2 141 3 299 2 49 6 301 3 303 6 246 8 152 2 14 9 247 2 54 4 204 2 306 5 309 3 250 1 349 1 312 2 60 2 64 2 209 3 211 4 355 1 216 2 218 3 261 1 165 5 77 1 366 6 367 1 84 2 270 4 122 1 85 10 275 1 330 3 332 2 173 5 124 8 126 3 127 2 88 2 179 2 35 1 377 2 334 2 233 1 185 1 381 4 
258 1 94 2 193 2 165 1 339 6 296 1 142 2 143 1 366 3 5 1 102 1 13 1 103 1 270 2 84 2 49 5 303 5 246 5 152 2 279 1 14 8 201 1 173 1 54 2 204 1 124 5 127 1 306 1 107 1 312 2 131 1 377 2 64 2 233 1 211 2 
186 1 39 1 40 1 94 2 42 1 193 1 95 1 165 1 319 1 320 1 362 1 142 2 364 1 265 1 297 1 270 1 148 1 52 1 14 2 54 1 173 1 124 2 127 1 312 1 253 1 210 1 132 1 211 1 
246 1 14 1 54 1 124 1 193 1 250 1 35 1 211 1 270 1 84 1 
49 5 152 2 303 5 246 5 94 2 14 5 124 5 127 1 240 1 339 10 142 2 312 2 377 2 366 5 64 2 
296 1 246 1 173 1 306 1 165 1 84 1 
355 2 189 1 360 1 218 4 193 2 165 3 296 2 141 4 367 2 169 1 245 1 270 2 301 1 85 2 330 4 200 1 14 2 202 1 54 1 173 3 176 1 204 2 124 2 306 4 309 2 333 1 228 1 129 1 233 2 209 2 211 2 185 1 236 1 381 3 
186 3 355 1 68 1 314 1 71 1 115 1 218 1 95 2 319 1 363 2 141 1 265 2 45 1 297 3 242 1 147 1 220 1 301 1 85 1 330 1 344 1 106 1 205 1 248 1 309 1 310 1 180 1 132 2 210 2 209 1 336 1 381 1 
49 2 303 2 246 4 14 1 54 1 124 2 204 1 193 1 339 4 195 1 366 2 233 1 211 1 270 1 84 2 
32 1 353 1 346 1 
32 1 353 1 346 1 
264 1 243 1 32 1 346 1 374 1 
32 1 353 1 346 1 
263 1 32 1 346 1 
263 1 32 1 346 1 
263 1 32 1 346 1 
32 1 346 1 
34 1 278 1 
221 1 68 2 52 1 94 1 40 1 314 4 56 1 205 8 248 2 74 1 195 1 181 3 363 4 320 1 312 1 45 2 368 2 146 4 342 1 220 2 
221 1 52 1 40 1 94 1 314 3 205 6 195 1 320 1 181 2 312 1 350 1 368 2 146 3 342 1 
68 1 152 1 94 1 314 2 248 1 205 4 74 1 140 1 181 2 363 2 312 1 45 1 377 1 368 1 64 1 146 2 220 1 
152 1 94 1 314 4 205 7 74 1 194 1 181 2 312 1 143 2 377 1 368 1 64 1 146 3 102 1 103 1 
68 2 40 1 94 3 70 1 314 12 74 4 194 1 195 1 320 2 363 4 143 2 45 2 368 5 146 11 342 1 102 2 220 2 221 1 152 2 52 2 56 2 205 23 248 2 181 9 312 3 377 2 379 1 64 2 109 1 
143 1 314 1 205 1 
146 1 102 1 205 1 
68 1 152 1 94 1 314 3 248 1 205 6 240 1 74 1 140 1 363 2 181 3 312 1 45 1 377 1 368 2 64 1 146 3 220 1 
68 1 291 1 258 1 94 2 314 6 74 1 363 2 143 1 45 1 5 1 368 1 146 6 102 1 220 1 103 1 152 2 201 1 205 12 248 1 107 1 181 2 312 2 377 2 131 1 64 2 
52 1 40 1 94 1 314 3 205 6 74 1 320 1 181 2 312 1 368 1 146 3 
221 1 68 1 52 1 70 1 314 2 56 1 205 3 248 1 74 1 181 2 320 1 363 2 45 1 368 1 146 1 342 1 220 1 
68 1 291 1 52 2 40 1 94 2 314 5 248 1 205 10 74 2 363 2 362 1 320 2 181 5 312 2 45 1 368 3 146 5 220 1 
68 1 152 1 291 1 94 1 248 1 205 2 74 1 363 2 181 1 45 1 146 2 220 1 
68 1 152 1 291 1 94 1 314 2 248 1 205 4 74 1 181 2 363 2 312 1 45 1 377 1 368 1 64 1 146 2 220 1 
68 3 291 1 52 1 70 1 314 2 56 1 205 3 248 3 74 1 363 6 320 1 181 2 45 3 368 1 36 1 146 1 220 3 
68 5 291 1 40 2 70 1 94 5 314 18 74 5 194 1 140 1 195 1 320 3 363 10 143 4 45 5 30 1 368 7 146 16 342 1 102 3 220 5 103 1 221 1 328 1 152 3 52 3 56 2 248 5 205 34 130 1 181 12 312 5 377 3 36 1 64 3 
68 1 291 1 94 1 40 1 314 4 195 1 363 2 320 1 143 1 45 1 368 2 146 4 342 1 102 1 220 1 103 1 221 1 52 1 201 1 205 8 248 1 181 2 312 1 
68 2 291 1 40 1 94 2 314 5 74 1 194 1 140 1 195 1 320 1 363 4 143 2 45 2 368 2 146 6 342 1 102 1 220 2 103 1 221 1 152 1 52 1 201 1 205 11 248 2 181 3 312 1 377 1 
68 3 291 1 40 1 258 1 94 3 314 10 74 1 140 1 195 1 320 1 363 6 143 1 45 3 5 1 368 3 146 9 342 1 102 1 220 3 103 1 221 1 152 2 52 1 201 1 56 1 205 19 248 3 107 1 181 4 312 3 377 2 131 1 64 2 
68 3 291 1 40 1 258 1 94 3 314 7 74 2 140 1 195 1 320 1 363 6 143 1 45 3 5 1 368 3 146 10 342 1 102 1 220 3 103 1 221 1 152 2 52 1 201 1 56 1 205 17 248 3 107 1 181 5 312 2 377 2 131 1 64 1 
68 1 291 1 94 1 40 1 314 4 195 1 363 2 320 1 143 1 45 1 368 2 146 4 342 1 102 1 220 1 103 1 221 1 52 1 201 1 205 8 248 1 181 2 312 1 
68 1 291 1 258 1 94 2 314 6 74 1 363 2 143 1 45 1 5 1 368 1 146 6 102 1 220 1 103 1 152 2 201 1 205 12 248 1 107 1 181 2 312 2 377 2 131 1 64 2 
68 4 291 1 40 1 258 1 94 3 314 8 74 2 140 1 195 1 320 1 363 8 143 1 45 4 5 1 368 3 146 10 342 1 102 1 220 4 103 1 221 1 152 2 52 1 201 1 56 2 205 18 248 4 107 1 181 5 312 2 131 1 377 2 64 1 
68 4 291 1 258 1 94 3 314 7 74 3 363 8 143 1 45 4 5 1 368 3 146 9 102 1 220 4 103 1 152 3 201 1 56 2 205 16 248 4 107 1 181 6 312 2 131 1 377 3 36 1 64 2 
221 2 52 3 40 1 94 1 314 4 205 7 74 3 320 3 181 6 312 1 368 3 146 3 342 1 
68 4 291 1 40 1 258 1 94 3 314 8 74 1 195 1 320 1 363 8 143 1 45 4 5 1 368 3 146 10 342 1 102 1 220 4 103 1 221 1 152 2 52 1 201 1 56 2 205 18 248 4 107 1 181 4 312 2 131 1 377 2 36 1 64 1 
186 1 160 1 265 1 297 1 242 1 196 1 101 1 
186 1 110 1 160 1 373 1 192 1 167 1 265 1 297 1 242 1 196 1 101 1 24 1 
309 1 355 1 85 1 141 1 330 1 350 1 202 1 360 1 218 1 209 1 381 1 
186 2 355 1 85 1 301 1 330 1 218 1 95 1 310 1 309 1 180 1 141 1 265 1 286 1 297 2 242 1 209 1 132 1 381 1 
186 2 39 1 215 1 85 3 301 2 330 1 188 1 135 1 218 1 95 2 310 1 309 1 180 1 141 1 265 2 286 1 297 2 367 1 242 1 334 1 209 2 132 1 381 1 
186 2 215 1 39 1 111 1 188 1 135 1 218 2 95 2 141 2 265 2 367 1 297 2 242 1 46 1 301 2 85 3 330 2 309 1 310 1 286 1 334 1 132 1 209 2 381 1 
355 1 301 1 85 4 111 1 330 3 246 1 135 1 173 2 218 3 126 1 306 1 165 2 179 1 309 1 141 3 367 1 325 1 334 1 299 1 254 1 209 1 84 1 381 1 
355 1 301 1 85 4 111 1 330 3 246 1 216 1 135 1 173 2 218 3 126 1 306 1 165 2 179 1 309 1 141 3 367 1 334 1 299 1 209 1 84 1 381 1 
309 1 141 1 330 1 266 1 218 1 381 1 
355 2 370 1 301 1 85 3 330 7 175 1 16 1 218 6 2 1 177 1 178 1 309 2 77 1 141 7 349 1 266 1 300 1 209 2 169 1 236 1 381 3 
186 2 68 2 94 1 40 1 314 3 1 1 115 1 218 1 95 1 262 1 195 1 320 1 363 4 77 1 141 1 45 2 265 1 297 2 242 2 368 2 298 1 146 3 342 1 220 2 221 1 274 1 85 1 301 1 344 2 330 1 52 1 106 2 205 6 248 2 310 1 309 1 90 1 181 2 180 1 312 1 21 1 286 1 23 1 209 1 132 1 381 1 336 1 
355 1 289 1 216 1 218 1 193 2 165 3 296 1 141 1 299 1 84 1 270 2 85 2 330 1 246 1 14 1 332 1 54 2 173 3 247 1 124 1 126 1 88 1 306 2 179 1 250 1 35 1 211 2 185 1 
301 1 85 2 330 2 218 2 309 1 77 1 141 2 349 1 266 1 299 1 209 1 122 1 381 2 
355 1 85 1 111 1 330 4 69 1 202 1 360 1 218 4 309 1 141 4 77 1 209 1 381 1 
301 1 85 1 330 2 189 1 218 2 309 1 141 2 367 1 183 1 245 1 209 1 169 1 236 1 381 2 
308 1 309 1 355 1 141 1 330 1 100 1 345 1 218 1 317 1 381 1 
85 1 330 2 217 1 175 1 218 2 2 1 309 1 77 1 141 2 209 1 381 1 
355 1 370 1 85 3 330 5 69 1 202 1 360 1 175 1 218 4 178 1 309 2 141 5 77 1 367 1 209 2 381 2 
355 1 85 3 330 5 69 1 358 1 202 1 360 1 175 1 218 4 178 1 309 2 141 5 77 1 367 1 209 2 381 2 
186 2 355 1 85 1 301 1 330 1 218 1 95 1 310 1 309 1 141 1 265 1 286 1 297 2 242 1 46 1 209 1 132 1 381 1 
301 1 85 1 330 1 218 1 177 1 309 1 141 1 349 1 367 1 209 1 169 1 236 1 381 2 
241 1 75 1 242 1 168 1 43 1 
39 1 215 1 289 1 246 1 188 1 331 1 173 2 43 2 165 2 164 1 241 2 179 1 75 2 242 1 121 1 168 1 158 1 84 1 92 1 
186 1 153 1 241 1 75 1 265 1 297 1 292 1 168 1 55 1 
331 1 121 1 168 1 
118 1 123 1 350 1 354 1 
118 1 198 1 123 1 260 1 354 1 235 1 166 1 
231 1 260 1 12 1 
38 1 118 1 198 3 123 1 62 1 99 1 9 2 260 3 354 1 206 1 235 1 166 1 
118 1 198 2 123 1 380 1 136 1 260 2 354 1 235 1 166 1 
308 1 273 1 159 1 229 1 118 1 198 1 62 1 260 1 345 1 235 1 166 1 
118 1 198 1 62 1 260 1 354 1 235 1 166 1 
198 1 123 1 62 1 260 1 354 2 235 1 166 1 
302 1 198 2 161 1 53 1 260 2 166 2 118 1 62 1 354 1 235 2 
159 1 198 3 123 1 136 2 260 3 239 1 166 1 118 2 62 1 98 1 37 1 354 1 235 1 
277 1 198 2 123 1 136 1 260 2 345 1 317 1 166 1 89 1 308 2 118 1 229 1 62 1 354 1 235 1 
159 1 198 4 123 1 136 2 260 4 166 2 118 2 4 1 62 1 380 1 98 1 354 1 235 2 
118 1 198 1 123 1 62 1 260 1 354 1 235 1 166 1 
38 1 159 1 198 4 123 2 136 2 260 4 206 1 166 1 118 3 98 1 9 1 108 1 354 2 235 1 
198 2 123 1 136 1 260 2 33 1 166 1 118 1 119 1 62 1 47 1 354 1 235 1 
38 2 198 3 123 1 260 3 281 1 206 1 166 1 118 1 62 1 9 2 235 1 354 1 
226 1 356 1 118 2 318 2 
198 1 62 1 162 1 260 1 235 1 166 1 
118 1 198 2 123 1 62 1 136 1 260 2 239 1 354 1 235 1 166 1 
327 1 
118 1 198 1 123 1 62 1 260 1 354 1 235 1 166 1 
118 1 198 3 123 1 62 1 136 1 9 1 260 3 239 1 354 1 235 1 166 1 
159 1 118 1 98 1 108 1 
118 1 354 1 

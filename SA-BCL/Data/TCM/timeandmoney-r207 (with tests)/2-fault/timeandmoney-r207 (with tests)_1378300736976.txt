#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 320 352 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 320 352 55 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 320 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
216 9 173 1 88 3 268 9 246 2 318 2 176 2 74 2 270 1 90 1 221 6 222 1 93 2 183 1 154 1 13 1 33 1 159 2 57 5 327 1 282 1 211 4 164 1 45 1 262 1 167 1 291 2 266 1 
216 9 173 1 88 3 268 9 246 2 318 2 176 2 74 2 270 1 90 1 221 6 222 1 93 2 183 1 154 1 13 1 33 1 159 2 57 5 327 1 282 1 211 4 164 1 45 1 262 1 167 1 291 2 266 1 
216 10 173 1 88 4 268 10 246 2 318 2 176 2 74 2 270 1 90 1 221 7 222 1 93 2 183 1 154 1 13 1 33 1 159 2 57 6 327 1 282 1 211 5 164 1 45 1 262 1 167 1 291 2 266 1 
216 7 88 2 268 7 246 2 318 2 176 2 74 2 270 1 90 1 221 4 222 1 93 2 183 1 154 1 13 1 33 1 159 1 57 4 327 1 282 1 211 3 164 1 45 1 262 1 167 1 291 2 266 1 
216 4 88 1 173 1 159 2 268 4 57 3 318 1 246 1 176 1 74 1 90 1 221 3 211 2 222 1 164 1 93 1 45 1 13 1 
216 2 268 2 57 1 246 1 318 1 282 1 176 1 270 1 74 1 123 1 164 1 45 1 153 1 291 1 13 1 119 1 
216 3 88 1 268 3 57 2 246 2 176 2 211 1 221 1 164 1 45 1 291 1 13 1 33 1 
216 9 88 3 173 1 268 9 246 2 318 1 176 2 90 1 74 1 221 7 132 1 222 1 93 1 154 1 13 1 33 1 159 2 57 5 122 1 211 4 164 1 45 1 262 1 291 1 
216 9 88 3 173 1 268 9 246 2 318 1 176 2 90 1 74 1 221 7 132 1 222 1 93 1 154 1 13 1 33 1 159 2 57 5 122 1 211 4 164 1 45 1 262 1 291 1 
206 1 233 1 85 1 
160 1 85 1 243 2 
114 2 8 2 138 1 357 1 309 2 86 2 172 2 135 2 
296 1 313 1 174 2 49 2 50 1 341 2 114 2 31 1 8 2 95 1 115 1 133 1 32 1 54 2 101 1 135 2 39 1 257 1 102 1 18 1 234 1 121 1 138 1 103 1 237 1 145 1 22 1 356 1 192 2 357 1 309 3 331 1 293 1 168 1 130 1 86 3 172 2 
16 1 114 1 8 1 138 1 309 1 188 1 86 1 195 1 172 1 135 1 
233 1 188 1 140 1 6 1 94 1 8 1 204 1 166 1 85 1 309 1 299 1 205 1 86 1 196 1 
233 1 188 1 140 2 114 1 6 1 8 1 204 1 166 1 85 1 309 1 299 2 86 1 172 1 196 1 135 1 
299 1 53 1 339 1 140 1 56 1 
233 1 343 1 27 1 85 1 299 2 53 1 140 2 56 1 
299 1 140 1 56 1 
16 1 114 1 8 1 138 1 309 1 299 1 53 1 188 1 140 1 76 1 86 1 195 1 172 1 135 1 
85 1 
233 1 228 1 27 1 85 1 299 2 53 1 140 2 56 1 
149 1 233 1 27 1 347 1 210 2 151 1 140 5 272 1 179 2 51 1 125 1 10 1 85 1 53 2 299 5 64 1 98 1 56 2 134 2 
206 1 357 1 
260 1 349 1 114 1 8 2 309 2 357 2 86 2 172 1 135 1 
68 1 358 1 351 1 
174 1 39 1 18 1 285 1 341 1 145 1 31 1 95 1 133 1 115 1 357 1 309 1 54 1 168 1 86 1 101 1 
39 1 174 1 18 1 79 1 341 1 145 1 114 1 31 1 8 1 95 1 290 1 115 1 133 1 309 2 54 1 168 1 358 1 86 2 172 1 101 1 
114 3 8 3 290 1 357 1 309 3 86 3 172 3 135 1 
16 1 114 1 8 1 309 1 188 1 86 1 172 1 
114 1 8 1 309 1 188 1 260 1 86 1 349 1 172 1 135 1 
296 1 313 1 174 1 49 2 341 1 114 3 6 1 31 1 8 3 204 1 95 1 115 1 133 1 32 1 299 1 54 1 101 1 325 1 135 2 39 1 102 1 18 1 234 1 121 1 138 1 103 1 237 1 188 1 140 1 349 1 79 1 145 1 63 1 166 1 22 1 290 1 192 1 357 1 309 4 168 1 130 1 86 4 172 3 196 1 
252 1 114 1 8 2 290 1 357 1 309 2 205 1 86 2 172 1 
188 1 140 1 349 1 79 1 63 1 114 3 6 1 8 3 275 1 204 1 166 1 290 2 85 1 299 1 309 3 86 3 196 1 172 3 135 1 
68 1 349 1 114 2 8 2 290 1 309 2 358 1 86 2 172 2 135 1 
174 1 39 1 18 1 341 1 145 1 31 1 95 1 133 1 115 1 357 1 309 1 54 1 168 1 86 1 101 1 
174 1 18 1 220 1 341 1 145 1 31 1 95 1 185 1 115 1 357 1 309 1 54 1 168 1 86 1 101 1 
313 1 68 2 71 1 112 1 49 2 32 1 157 1 231 1 58 1 234 1 121 1 209 1 236 1 59 1 237 1 142 1 213 1 190 1 351 2 22 2 192 4 293 2 358 2 130 1 
114 1 8 1 166 1 309 1 188 1 86 1 279 1 172 1 
349 1 79 1 252 1 274 1 114 4 8 5 225 1 290 2 309 5 357 1 205 1 86 5 172 4 135 1 
16 1 114 2 8 2 309 2 188 1 279 1 86 2 172 2 
306 1 344 1 
306 1 344 1 
182 1 21 1 
182 1 21 1 
182 1 21 1 
180 1 306 1 344 1 
180 1 306 1 344 1 
72 1 306 1 344 1 
287 1 92 1 306 2 344 2 182 1 21 1 
180 1 306 1 344 1 
273 1 306 1 344 1 
273 1 306 1 344 1 
273 1 306 1 344 1 
320 1 330 1 306 1 344 1 126 1 352 1 
320 1 330 1 299 1 140 1 55 1 306 1 344 1 126 1 352 1 
318 1 74 1 93 1 
318 1 74 1 123 1 
214 1 277 1 74 3 238 1 123 1 93 2 
214 1 74 2 238 1 123 1 93 1 311 1 
214 1 74 2 238 2 123 1 93 1 
199 1 245 1 336 1 335 1 149 2 89 2 27 1 151 3 179 1 251 1 297 1 298 1 322 1 10 1 299 5 53 4 56 1 134 1 232 1 160 1 233 1 236 1 59 1 210 1 140 5 142 1 104 2 213 1 62 1 85 2 243 3 334 2 
312 1 199 3 335 2 149 6 27 1 339 5 151 8 179 2 322 1 10 1 299 9 53 7 56 6 280 1 134 2 232 2 326 5 160 3 233 1 235 1 304 1 236 3 59 3 210 2 140 9 142 3 212 1 104 6 213 3 62 4 82 1 85 5 64 1 243 9 334 6 
245 1 199 1 336 1 335 1 149 2 89 1 151 3 179 1 53 2 299 3 134 1 232 1 233 1 160 2 236 1 59 1 210 1 140 3 142 1 104 2 62 1 213 1 85 3 64 1 243 4 334 2 
312 1 245 1 199 2 336 1 335 1 149 4 89 2 151 5 179 1 299 4 53 3 134 1 232 1 233 1 160 3 235 1 236 2 59 2 210 1 140 4 142 2 104 4 62 2 213 2 82 1 85 4 64 1 243 7 334 4 
31 1 206 1 110 1 
31 1 3 1 
265 1 
31 1 115 1 
31 3 208 1 110 2 115 1 101 1 80 1 
31 1 115 1 101 1 
31 1 345 1 
37 1 120 1 71 2 337 1 209 3 236 1 111 1 142 1 288 2 321 1 7 1 276 1 191 1 22 3 192 7 310 1 293 4 
37 1 120 1 71 2 337 1 209 3 236 1 111 1 142 1 288 2 321 1 7 1 276 1 191 1 22 3 192 7 310 1 293 4 
37 1 120 1 71 2 337 1 209 3 236 1 111 1 142 1 288 2 321 1 7 1 276 1 191 1 22 3 192 7 310 1 244 1 293 4 
0 1 198 1 2 1 313 1 317 1 199 3 71 5 337 1 201 1 150 1 111 1 177 4 49 2 7 1 321 2 276 2 32 1 120 2 37 5 234 1 121 1 328 3 209 10 236 4 59 3 142 4 213 3 288 3 191 2 22 15 192 31 292 1 310 1 293 16 
313 2 2 1 71 3 111 1 49 4 7 1 321 1 276 1 253 1 32 2 120 1 37 1 302 1 234 2 121 2 209 4 236 1 142 1 288 2 191 1 22 4 192 9 310 1 293 5 
47 1 216 2 23 1 174 1 268 2 318 1 246 1 176 1 74 2 221 1 202 1 93 1 52 1 341 1 95 1 277 1 54 1 13 1 346 1 57 1 161 1 123 1 164 1 45 1 145 1 128 1 291 1 267 1 194 1 294 1 
47 1 216 3 23 1 174 1 268 3 318 1 246 1 176 1 26 1 74 2 221 2 202 1 93 1 52 1 341 1 152 1 95 1 277 1 54 1 99 1 346 1 57 1 161 1 123 1 164 1 45 1 145 1 291 1 194 1 294 1 
47 1 216 2 174 1 268 2 318 1 26 1 74 2 221 2 202 1 93 1 341 1 152 1 95 1 277 1 54 1 346 1 57 1 161 1 123 1 164 1 45 1 145 1 291 1 194 1 294 1 
47 2 216 1 217 1 174 1 268 1 246 1 176 1 341 1 31 1 95 1 115 1 54 1 117 1 300 1 99 1 346 2 36 1 161 2 145 1 165 1 291 2 168 1 87 1 
47 1 216 1 23 1 174 1 268 1 318 1 246 1 176 1 74 2 202 1 93 1 52 1 341 1 152 1 95 1 277 1 54 1 13 1 346 1 161 1 123 1 145 1 291 1 267 1 194 1 294 1 
189 1 
314 2 174 2 48 2 319 1 5 1 179 1 6 1 94 1 8 1 95 1 227 2 10 1 54 2 14 1 56 6 134 1 15 1 232 1 136 1 187 1 233 1 188 1 140 5 284 4 145 1 239 1 146 2 243 2 196 1 149 2 27 3 340 1 151 2 29 2 341 2 31 1 204 1 115 1 117 1 299 5 205 1 38 2 40 1 207 1 160 2 210 1 124 1 163 2 43 1 166 1 85 2 309 1 168 2 86 1 87 1 
27 1 340 1 6 1 8 1 94 1 204 1 228 1 299 3 14 1 205 1 56 2 15 1 38 1 188 1 140 3 284 2 43 1 239 1 166 1 309 1 86 1 196 1 
27 1 340 1 29 1 6 1 8 1 94 1 204 1 228 1 299 3 14 1 56 1 205 1 15 1 233 1 188 1 140 3 284 3 43 1 239 1 166 1 309 1 85 1 86 1 196 1 
27 1 340 1 29 1 6 1 8 1 94 1 204 1 227 1 228 1 299 3 14 1 205 1 56 2 15 1 38 1 233 1 188 1 140 3 284 3 43 1 239 1 166 1 309 1 85 1 86 1 196 1 
314 2 48 2 179 1 6 1 94 1 8 1 9 1 227 4 10 1 228 1 14 1 56 7 134 1 15 1 136 1 233 5 188 1 140 5 61 1 284 6 239 1 146 2 196 1 69 1 149 1 27 3 340 1 151 1 29 4 204 1 299 5 205 1 38 4 207 1 160 2 210 1 163 2 43 1 166 1 308 1 309 1 85 5 359 1 86 1 
314 2 48 2 179 1 6 1 8 1 94 1 10 1 227 2 14 1 56 4 134 1 15 1 136 1 233 1 188 1 140 4 284 4 239 1 146 2 243 2 196 1 149 1 27 2 340 1 151 1 29 2 204 1 299 4 205 1 38 2 207 1 160 2 210 1 163 2 124 1 43 1 166 1 309 1 85 2 86 1 
314 2 149 1 27 2 48 2 340 1 151 1 179 1 29 2 6 1 8 1 94 1 204 1 9 1 227 2 10 1 299 4 14 1 56 4 205 1 134 1 15 1 38 2 136 1 207 1 233 1 160 2 188 1 210 1 140 4 61 1 163 2 284 4 43 1 239 1 166 1 308 1 85 1 146 2 309 1 86 1 196 1 
314 2 149 1 27 2 48 2 340 1 151 1 179 1 29 2 6 1 8 1 94 1 204 1 9 1 227 2 10 1 299 4 14 1 56 4 205 1 134 1 15 1 38 2 136 1 207 1 233 1 160 2 188 1 210 1 140 4 61 1 163 2 284 4 43 1 239 1 166 1 308 1 85 1 146 2 309 1 86 1 196 1 
149 1 27 2 340 1 151 1 178 2 179 1 29 2 6 1 8 1 94 1 204 1 227 2 10 1 299 4 97 1 14 1 56 4 205 1 134 1 15 1 38 2 77 2 207 1 233 1 188 1 210 1 140 4 163 2 284 4 43 1 239 1 241 1 166 1 308 1 85 1 146 2 309 1 243 2 86 1 196 1 197 1 
314 2 69 1 149 1 27 2 48 2 340 1 151 1 179 1 29 3 6 1 8 1 94 1 204 1 9 1 10 1 227 3 299 4 14 1 205 1 56 5 134 1 15 1 38 3 136 1 207 1 233 1 160 2 210 1 188 1 140 4 61 1 163 2 284 5 43 1 239 1 166 1 308 1 85 1 146 2 309 1 86 1 196 1 
314 2 69 1 149 1 27 2 48 2 340 1 151 1 179 1 29 3 6 1 8 1 94 1 204 1 9 1 10 1 227 3 299 4 14 1 205 1 56 5 134 1 15 1 38 3 136 1 207 1 233 1 160 2 210 1 188 1 140 4 61 1 163 2 284 5 43 1 239 1 166 1 308 1 85 1 146 2 309 1 86 1 196 1 
149 1 27 2 340 1 151 1 178 2 179 1 29 2 6 1 94 1 8 1 204 1 227 2 10 1 299 4 14 1 56 4 205 1 134 1 15 1 38 2 77 2 207 1 233 1 210 1 188 1 140 4 124 1 163 2 284 4 43 1 239 1 166 1 241 1 85 1 146 2 309 1 243 2 86 1 196 1 
68 1 313 1 71 2 111 1 49 2 7 1 321 1 32 1 157 1 206 1 234 1 121 1 209 2 236 1 237 1 142 1 351 1 288 1 191 1 22 3 192 6 357 2 310 1 293 3 358 1 130 1 
198 1 313 2 68 4 199 2 71 1 150 1 177 3 223 1 49 4 75 1 32 2 37 1 257 1 234 2 121 2 328 3 209 2 103 1 236 1 237 2 59 1 142 2 213 2 351 11 263 1 22 6 192 14 357 1 129 1 293 8 358 11 171 1 130 1 
68 1 313 1 174 1 49 2 341 1 114 1 31 1 8 1 95 1 75 1 96 1 115 1 133 1 54 1 32 1 101 1 39 1 257 1 18 1 121 1 234 1 305 1 103 1 237 1 79 1 42 1 285 1 145 1 22 1 290 1 192 2 357 1 309 2 168 1 293 1 130 1 86 2 172 1 
1 1 313 3 174 3 49 6 321 1 7 1 8 1 323 2 95 2 133 2 54 3 101 2 102 2 18 2 234 3 236 3 103 1 237 3 59 2 142 3 145 2 288 1 106 1 191 1 22 10 290 1 192 20 293 10 333 1 68 7 199 2 71 4 247 2 111 1 341 3 152 1 114 1 31 2 75 1 115 2 32 3 37 4 39 2 257 1 121 3 209 8 79 1 213 2 351 7 355 2 357 2 309 3 310 1 168 1 358 7 86 3 130 3 170 2 172 1 
313 2 174 7 269 1 28 1 49 4 341 8 152 1 30 1 114 1 8 1 31 3 95 2 115 2 54 8 32 2 117 1 12 1 278 1 157 1 257 1 234 2 121 2 283 1 103 1 237 2 353 1 145 2 128 1 22 1 356 2 290 1 192 2 309 1 168 2 293 1 86 1 130 2 172 1 87 1 
68 1 313 1 199 1 71 1 49 2 114 1 8 1 75 1 32 1 156 1 135 1 234 1 121 1 209 1 236 1 237 1 59 1 142 1 349 1 213 1 351 1 22 2 192 3 309 1 293 1 358 1 130 1 86 1 172 1 
231 1 37 1 68 1 313 1 121 1 234 1 209 1 237 1 49 2 142 1 213 1 351 1 192 2 32 1 293 2 358 1 157 1 130 1 
68 1 313 1 71 1 121 1 234 1 209 1 236 1 237 1 59 1 49 2 351 1 190 1 22 2 192 2 32 1 358 1 157 1 130 1 
313 1 68 2 199 1 71 1 49 2 32 1 157 1 37 1 234 1 121 1 209 2 236 1 237 1 59 1 142 1 213 1 351 2 22 2 192 4 293 2 358 2 130 1 
231 1 37 1 68 1 313 1 121 1 234 1 209 1 237 1 49 2 142 1 213 1 351 1 192 2 32 1 293 2 358 1 278 1 130 1 
68 1 313 1 71 1 121 1 234 1 209 1 236 1 237 1 59 1 49 2 351 1 190 1 22 2 192 2 32 1 358 1 278 1 130 1 
313 1 68 2 199 1 71 1 49 2 32 1 278 1 37 1 234 1 121 1 209 2 236 1 237 1 59 1 142 1 213 1 351 2 22 2 192 4 293 2 358 2 130 1 
313 1 68 2 199 1 71 1 49 2 32 1 37 1 234 1 121 1 209 2 236 1 237 1 59 1 142 1 213 1 351 2 22 2 192 4 293 2 358 2 130 1 
313 1 174 1 49 2 341 1 31 1 95 1 115 1 133 1 54 1 32 1 101 1 39 1 257 1 102 1 18 1 121 1 234 1 103 1 237 1 145 1 22 1 192 2 357 1 309 1 293 1 168 1 86 1 130 1 
313 1 174 1 220 1 49 2 341 1 31 1 95 1 115 1 185 1 54 1 32 1 101 1 257 1 18 1 121 1 234 1 103 1 237 1 145 1 46 1 22 1 192 2 357 1 309 1 293 1 168 1 86 1 130 1 
313 1 68 2 199 1 71 1 49 2 75 1 32 1 37 1 234 1 121 1 209 2 236 1 237 1 59 1 142 1 213 1 351 2 22 2 192 4 293 2 358 2 130 1 
68 2 313 1 174 1 199 1 71 1 49 2 341 1 31 1 95 1 133 1 115 1 54 1 32 1 101 1 37 1 39 1 102 1 18 1 121 1 234 1 209 2 236 1 59 1 237 1 142 1 213 1 351 2 145 1 355 1 128 1 22 2 192 4 309 1 293 2 358 2 86 1 130 1 
313 1 68 1 199 1 49 2 224 1 114 1 8 1 75 1 32 1 135 1 37 1 234 1 121 1 209 1 236 1 59 1 237 1 142 1 349 1 213 1 351 1 22 1 192 3 309 1 293 2 358 1 130 1 86 1 172 1 
198 1 313 2 199 3 71 3 150 1 177 2 203 1 49 4 226 1 253 1 32 2 118 1 35 2 37 3 255 2 303 1 258 1 234 2 121 2 328 1 209 6 236 3 59 3 141 1 142 3 213 3 22 10 192 19 215 1 293 9 
198 2 2 2 313 3 109 1 199 3 71 2 91 1 177 2 49 6 226 2 253 1 32 3 118 1 35 4 37 2 255 1 256 1 303 1 234 3 121 3 328 2 259 1 209 4 19 1 236 2 59 2 141 1 142 3 213 3 107 1 22 12 192 26 215 2 293 14 
313 3 2 1 91 1 177 4 49 6 7 1 321 1 226 1 328 3 234 3 19 1 236 5 59 4 142 5 141 1 288 1 191 1 107 1 22 21 192 41 293 20 65 1 198 3 199 4 109 1 71 4 150 1 111 1 253 1 32 3 118 1 35 4 37 4 255 1 256 1 303 1 121 3 258 1 209 8 259 1 213 4 215 2 310 1 
198 3 2 2 313 4 109 1 199 4 71 4 150 1 111 1 91 1 177 4 49 8 321 1 7 1 226 1 253 1 32 4 118 1 35 4 37 3 255 1 256 1 303 1 258 1 234 4 121 4 328 3 259 1 19 1 209 7 236 4 59 3 141 1 142 5 213 4 288 1 191 1 107 1 22 18 192 38 310 1 215 2 65 1 293 20 
198 2 2 1 313 2 109 1 199 7 71 7 150 2 111 1 91 1 177 4 223 2 49 4 321 1 7 1 226 1 253 1 32 2 118 1 35 4 37 7 255 1 256 1 303 1 234 2 121 2 328 4 259 1 19 1 209 14 236 8 59 7 141 1 142 8 213 7 288 1 191 1 107 1 22 25 192 52 310 1 215 1 293 27 
313 1 174 2 271 1 49 2 113 1 341 2 31 1 8 2 95 1 75 1 115 1 54 2 32 1 12 1 257 1 121 1 234 1 283 1 348 1 103 1 237 1 261 1 145 1 329 1 22 1 356 2 192 2 309 2 293 1 130 1 86 2 
346 1 23 1 174 2 318 1 74 2 123 1 202 1 93 1 307 1 181 1 341 2 145 1 152 1 128 1 289 1 95 1 277 1 54 2 194 1 
346 1 23 1 174 1 318 1 74 2 123 1 202 1 93 1 181 1 341 1 145 1 152 1 342 1 95 1 277 1 54 1 194 1 
346 1 36 1 174 1 41 1 307 1 341 1 145 1 31 1 95 1 115 1 54 1 117 1 168 1 87 1 
346 1 23 1 174 1 318 1 74 2 123 1 202 1 93 1 307 1 181 1 341 1 145 1 152 1 289 1 95 1 277 1 54 1 194 1 
218 1 
206 1 149 1 233 1 85 1 151 1 98 1 51 1 
314 1 136 1 149 1 233 1 160 1 27 1 48 1 210 1 140 1 151 1 179 1 10 1 299 1 85 2 243 1 56 1 134 1 
315 1 316 1 174 3 3 3 4 2 219 2 179 4 51 1 323 2 95 3 10 4 324 2 54 3 98 1 56 5 134 4 101 3 232 2 233 2 236 2 60 1 59 2 140 5 142 2 104 6 145 4 243 12 332 2 196 2 334 6 199 2 149 8 110 2 27 3 151 9 341 3 31 10 115 3 299 5 345 2 40 1 160 6 210 4 350 1 213 2 44 2 80 1 354 1 127 2 128 1 83 2 264 2 85 8 168 1 
198 1 109 1 199 4 149 8 150 1 27 1 91 1 151 13 177 2 223 1 179 2 10 2 324 1 299 1 155 1 56 1 134 2 232 1 40 1 256 1 233 2 160 5 328 2 19 1 236 4 210 2 59 4 140 1 142 4 104 8 213 4 107 1 85 7 243 10 169 1 332 5 334 8 
149 2 151 2 179 1 114 1 321 1 8 1 9 1 10 1 324 1 299 1 76 1 134 1 135 1 16 1 138 1 236 1 188 1 210 1 140 1 142 2 144 1 191 1 309 1 310 1 86 1 332 2 195 1 172 1 
149 1 233 1 210 1 151 1 179 1 51 1 10 1 85 1 98 1 134 1 
199 2 149 5 160 5 236 2 59 2 151 5 142 2 104 5 213 2 323 1 324 1 85 5 243 10 332 2 334 5 
233 1 27 1 85 1 299 1 140 1 56 1 
316 2 174 4 149 2 27 2 319 1 151 2 179 2 341 4 31 1 95 1 10 1 115 1 54 4 299 3 117 1 56 4 134 2 232 2 40 2 187 1 210 2 140 3 143 1 350 1 286 1 145 1 64 1 168 2 87 1 
296 1 313 1 174 1 49 2 341 1 114 2 8 2 31 1 95 1 133 1 115 1 32 1 54 1 135 2 101 1 39 1 102 1 18 1 234 1 121 1 138 1 103 1 237 1 145 1 22 1 192 1 357 1 309 3 168 1 86 3 130 1 172 2 
232 1 40 1 149 2 160 2 233 2 210 1 151 1 104 2 179 1 288 1 10 1 85 4 243 4 134 1 334 2 
320 1 330 1 
320 1 330 1 
320 1 330 1 
320 1 330 1 
320 1 330 1 
320 1 330 1 
320 1 330 1 
320 1 330 1 
306 1 344 1 
37 1 313 2 2 1 71 2 121 2 234 2 209 3 236 1 111 1 142 1 49 4 288 1 7 1 321 1 191 1 22 4 192 8 32 2 310 1 293 4 
288 1 321 1 7 1 191 1 206 1 71 2 22 3 192 6 209 2 236 1 111 1 310 1 293 3 142 1 
295 1 313 1 37 1 199 1 71 1 121 1 234 1 209 2 236 1 59 1 49 2 142 1 213 1 22 2 192 4 32 1 293 2 
198 1 37 1 199 1 71 1 328 1 150 1 209 2 236 1 59 1 177 2 142 1 213 1 22 4 192 7 293 3 
2 2 313 2 199 2 71 5 150 1 111 1 177 2 223 1 49 4 250 1 321 2 7 1 32 2 37 4 328 2 121 2 234 2 209 9 236 3 59 2 142 3 213 2 288 1 191 2 22 12 192 23 310 1 293 11 171 1 
22 1 192 1 177 1 
328 1 192 1 293 1 
295 1 313 1 37 1 199 1 71 2 234 1 121 1 209 3 236 1 59 1 49 2 142 1 213 1 323 1 22 3 192 6 32 1 293 3 
198 1 313 1 199 2 109 1 71 1 91 1 177 1 49 2 253 1 32 1 37 1 256 1 328 1 234 1 121 1 19 1 209 2 236 2 59 2 142 2 213 2 107 1 22 6 192 12 293 6 
37 1 71 1 209 2 236 1 142 1 321 1 191 1 22 3 192 6 310 1 293 3 
37 1 2 1 313 1 71 1 121 1 234 1 209 2 111 1 49 2 250 1 321 1 7 1 191 1 22 2 192 3 32 1 293 1 
313 1 37 2 71 3 234 1 121 1 209 5 236 2 49 2 142 2 144 1 321 2 191 2 22 5 253 1 192 10 32 1 310 1 293 5 
313 1 37 1 121 1 234 1 209 1 49 2 142 1 213 1 253 1 192 2 32 1 293 2 
313 1 37 1 199 1 71 1 121 1 234 1 209 2 236 1 59 1 49 2 142 1 213 1 22 2 253 1 192 4 32 1 293 2 
2 1 313 3 37 1 71 1 258 1 121 3 234 3 209 2 49 6 250 1 321 1 191 1 22 2 253 1 192 3 32 3 293 1 
0 1 198 1 295 1 2 2 313 5 317 1 199 3 71 7 201 1 150 1 111 1 177 4 49 10 250 1 321 3 7 1 253 1 32 5 37 5 258 1 234 5 121 5 328 3 209 12 236 5 59 3 142 5 213 3 288 1 191 3 22 18 192 34 310 2 293 16 
198 1 313 1 71 2 111 1 177 1 49 2 7 1 321 1 253 1 32 1 328 1 234 1 121 1 209 2 236 1 142 1 288 1 191 1 107 1 22 4 192 8 310 1 293 4 
198 1 295 1 313 2 199 1 71 2 150 1 111 1 177 2 49 4 321 1 7 1 253 1 32 2 37 1 234 2 121 2 328 1 209 3 236 1 142 2 213 1 288 1 191 1 107 1 22 5 192 11 310 1 293 6 
295 1 198 1 313 3 2 1 109 1 199 2 71 3 111 1 91 1 177 1 49 6 321 1 7 1 253 1 32 3 37 1 256 1 328 1 234 3 121 3 19 1 209 4 236 3 59 2 142 3 213 2 288 1 191 1 107 1 22 10 192 19 310 1 293 9 
295 1 198 1 2 1 313 3 199 2 109 1 71 3 111 1 91 1 177 1 49 6 321 1 7 1 253 1 32 3 37 2 256 1 328 1 234 3 121 3 19 1 209 5 236 2 59 1 142 3 213 2 288 1 191 1 107 1 22 7 192 17 310 1 293 10 
198 1 313 1 71 2 111 1 177 1 49 2 7 1 321 1 253 1 32 1 328 1 234 1 121 1 209 2 236 1 142 1 288 1 191 1 107 1 22 4 192 8 310 1 293 4 
198 1 313 1 199 2 109 1 71 1 91 1 177 1 49 2 253 1 32 1 37 1 256 1 328 1 234 1 121 1 19 1 209 2 236 2 59 2 142 2 213 2 107 1 22 6 192 12 293 6 
198 1 295 1 313 4 2 2 109 1 199 2 71 3 111 1 91 1 177 1 49 8 321 1 7 1 253 1 32 4 37 2 256 1 234 4 121 4 328 1 19 1 209 5 236 2 59 1 142 3 213 2 288 1 191 1 107 1 22 8 192 18 310 1 293 10 
198 1 313 4 2 2 109 1 199 3 71 3 91 1 177 1 49 8 253 1 32 4 37 3 256 1 234 4 121 4 258 1 328 1 19 1 209 6 236 2 59 2 142 3 213 3 107 1 22 7 192 16 293 9 
37 3 71 3 209 6 236 1 111 1 142 1 7 2 321 3 191 3 22 4 192 7 310 1 293 3 
198 1 313 4 2 2 109 1 199 2 71 3 111 1 91 1 177 1 49 8 321 1 7 1 253 1 32 4 37 1 256 1 234 4 121 4 258 1 328 1 19 1 209 4 236 2 59 1 142 3 213 2 288 1 191 1 107 1 22 8 192 18 310 1 293 10 
252 1 8 1 25 1 357 1 309 1 205 1 86 1 
301 1 200 1 25 1 252 1 8 1 229 1 357 1 309 1 67 1 205 1 86 1 230 1 
145 1 31 1 174 1 206 1 95 1 115 1 117 1 54 1 168 1 87 1 341 1 
174 1 39 1 18 1 341 1 145 1 114 1 31 1 8 1 95 1 290 1 115 1 357 1 309 2 54 1 168 1 86 2 172 1 101 1 
174 1 316 1 341 1 114 2 6 1 8 2 31 3 95 1 115 2 54 1 101 2 345 1 39 1 18 1 188 1 145 1 127 1 166 1 290 1 357 1 309 2 86 2 172 1 
174 2 316 1 220 1 341 2 114 2 6 1 8 2 31 3 95 1 115 2 186 1 54 2 101 2 345 1 18 1 188 1 145 1 127 1 166 1 290 1 357 1 309 2 86 2 172 1 
174 3 316 1 3 1 110 1 341 3 31 4 95 1 115 1 186 1 54 3 299 2 56 1 101 1 345 1 158 1 233 1 140 2 145 1 127 1 108 1 85 1 168 1 196 1 
316 1 174 3 3 1 233 1 219 1 110 1 140 2 341 3 145 1 127 1 31 4 95 1 115 1 186 1 85 1 299 2 54 3 168 1 56 1 196 1 345 1 101 1 
145 1 174 1 95 1 54 1 28 1 341 1 
148 1 174 6 269 1 28 1 162 1 341 7 80 1 353 1 145 3 152 1 30 1 31 3 128 1 95 2 356 1 115 2 54 7 12 1 66 1 168 2 101 1 
313 2 174 1 49 4 8 1 7 1 321 1 95 1 133 1 54 1 101 1 102 1 18 1 234 2 236 1 237 2 142 1 145 1 288 1 191 1 22 3 290 1 192 6 293 3 68 1 71 2 111 1 341 1 114 1 31 1 75 1 115 1 32 2 39 1 121 2 209 2 261 1 351 1 355 1 128 1 309 2 357 2 310 1 358 1 170 1 86 2 130 2 172 1 
174 1 3 1 149 1 4 1 219 1 110 1 27 1 151 1 179 2 51 1 341 1 31 2 10 2 54 1 299 3 53 1 98 1 56 2 134 2 233 1 210 2 140 3 350 1 44 1 85 1 264 1 168 1 196 1 
174 2 110 1 28 1 341 2 80 1 354 1 145 2 31 2 128 1 95 1 115 1 54 2 101 1 
174 4 341 4 145 1 31 1 128 1 95 1 116 1 115 1 186 1 54 4 117 1 168 1 87 1 
316 1 174 2 248 1 249 1 162 1 341 2 145 2 31 1 106 1 95 1 115 1 54 2 66 1 101 1 
145 1 174 1 318 1 95 1 74 1 54 1 123 1 168 1 194 1 341 1 
145 1 152 1 31 1 174 2 128 1 95 1 115 1 54 2 12 1 271 1 341 2 
316 1 174 4 341 5 145 2 353 1 30 1 31 3 128 1 95 2 116 1 115 2 117 1 54 5 12 1 168 1 87 1 
316 1 174 4 341 5 145 2 353 1 31 3 128 1 242 1 95 2 116 1 115 2 117 1 54 5 12 1 168 1 87 1 
174 1 18 1 220 1 341 1 145 1 114 1 31 1 8 1 95 1 290 1 115 1 357 1 309 2 54 1 168 1 86 2 172 1 101 1 
148 1 316 1 174 1 162 1 341 1 80 1 145 2 31 1 95 1 115 1 54 1 66 1 101 1 
17 1 73 1 348 1 113 1 81 1 329 1 8 1 309 1 86 1 
70 1 73 1 254 1 
17 1 73 1 357 1 193 1 81 1 
70 1 17 2 233 1 73 1 78 1 188 1 140 2 81 2 63 1 6 1 166 1 204 1 357 1 85 1 53 1 299 2 193 2 254 1 196 1 
45 1 57 1 206 1 164 1 
45 1 216 1 268 1 57 1 246 1 176 1 164 1 
47 1 216 1 291 1 
45 1 216 3 268 3 57 1 131 1 246 1 176 1 270 2 11 1 139 1 13 1 164 1 
45 1 216 2 159 1 268 2 57 1 246 1 176 1 221 1 164 1 
216 1 268 1 57 1 246 1 318 1 176 1 74 1 211 1 222 1 93 1 13 1 
45 1 216 1 268 1 57 1 246 1 176 1 13 1 
45 2 216 1 268 1 246 1 176 1 13 1 164 1 
216 2 24 1 268 2 57 1 246 2 175 1 176 2 105 1 45 1 13 1 
216 3 88 1 268 3 57 2 246 1 176 1 221 2 211 1 164 1 45 1 262 1 154 1 13 1 
216 2 268 2 57 1 246 1 318 1 176 1 74 2 123 1 221 1 164 1 93 1 45 1 84 1 277 1 13 1 
216 4 173 1 159 1 88 1 268 4 57 2 246 2 176 2 221 2 211 1 164 1 45 1 13 1 
45 1 216 1 268 1 57 1 246 1 176 1 13 1 164 1 
216 4 88 1 268 4 57 3 131 1 246 1 338 1 176 1 270 1 139 1 221 2 211 1 164 2 45 2 
216 2 268 2 57 1 246 1 137 1 176 1 122 1 221 1 20 1 164 1 45 1 13 1 
216 3 268 3 57 1 131 1 246 1 176 1 270 2 139 2 164 1 45 1 147 1 13 1 
240 2 57 2 34 1 281 1 
216 1 268 1 246 1 176 1 13 1 100 1 
45 1 216 2 268 2 57 1 246 1 176 1 154 1 221 1 13 1 164 1 
184 1 
45 1 216 1 268 1 57 1 246 1 176 1 13 1 164 1 
216 3 268 3 57 1 246 1 176 1 270 1 221 1 164 1 45 1 154 1 13 1 
88 1 57 1 338 1 211 1 
45 1 57 1 

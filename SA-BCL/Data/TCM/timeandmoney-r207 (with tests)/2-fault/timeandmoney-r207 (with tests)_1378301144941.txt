#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 9 64 2 46 1 112 6 4 1 245 1 215 1 166 2 29 2 50 9 144 1 190 1 51 2 11 2 292 1 251 4 72 1 97 1 351 3 102 1 231 2 81 1 334 1 106 2 306 1 154 1 336 1 358 5 
239 9 64 2 46 1 112 6 4 1 245 1 215 1 166 2 29 2 50 9 144 1 190 1 51 2 11 2 292 1 251 4 72 1 97 1 351 3 102 1 231 2 81 1 334 1 106 2 306 1 154 1 336 1 358 5 
239 10 64 2 46 1 112 7 4 1 245 1 215 1 166 2 29 2 50 10 144 1 190 1 51 2 11 2 292 1 251 5 72 1 97 1 351 4 102 1 231 2 81 1 334 1 106 2 306 1 154 1 336 1 358 6 
239 7 64 2 46 1 112 4 4 1 245 1 215 1 166 2 29 2 50 7 144 1 190 1 51 2 11 2 292 1 251 3 72 1 97 1 351 2 231 1 81 1 334 1 106 2 306 1 154 1 336 1 358 4 
251 2 72 1 239 4 64 1 112 3 351 1 4 1 245 1 102 1 215 1 29 1 231 2 106 1 50 4 336 1 11 1 358 3 51 1 
72 1 239 2 97 1 64 1 110 1 245 1 26 1 215 1 166 1 29 1 106 1 50 2 270 1 190 1 358 1 11 1 
251 1 72 1 239 3 112 1 351 1 245 1 215 1 166 1 29 2 106 2 50 3 154 1 358 2 
239 9 340 1 64 1 112 7 4 1 245 1 215 1 166 1 29 2 50 9 144 1 51 1 11 1 251 4 72 1 351 3 102 1 231 2 106 2 306 1 154 1 336 1 358 5 337 1 
239 9 340 1 64 1 112 7 4 1 245 1 215 1 166 1 29 2 50 9 144 1 51 1 11 1 251 4 72 1 351 3 102 1 231 2 106 2 306 1 154 1 336 1 358 5 337 1 
37 1 177 1 289 1 
78 2 283 1 289 1 
302 2 376 1 91 2 230 2 45 2 250 1 178 2 255 2 
45 3 341 1 288 1 211 2 113 1 48 1 182 1 165 1 91 2 216 1 170 2 323 1 221 1 250 1 171 1 172 1 349 2 73 2 294 2 151 1 331 1 300 1 255 2 257 1 125 1 302 2 376 1 104 1 377 1 230 2 39 1 304 1 82 1 178 3 83 1 359 1 236 1 
302 1 376 1 91 1 230 1 45 1 70 1 178 1 255 1 123 1 311 1 
284 1 45 1 152 1 163 1 289 1 123 1 343 1 142 1 230 1 177 1 178 1 156 1 34 1 53 1 
284 1 45 1 152 1 255 1 289 1 123 1 302 1 91 1 142 1 230 1 177 1 156 2 178 1 34 1 53 2 
203 1 159 1 156 1 53 1 280 1 
60 1 159 1 177 1 156 2 157 1 53 2 289 1 280 1 
159 1 156 1 53 1 
42 1 45 1 255 1 123 1 376 1 302 1 91 1 230 1 70 1 156 1 178 1 53 1 280 1 311 1 
289 1 
2 1 159 1 177 1 156 2 157 1 53 2 289 1 280 1 
242 1 159 2 22 1 111 1 87 1 24 1 197 1 265 1 289 1 47 1 27 2 168 2 141 1 16 2 177 1 156 5 157 1 53 5 280 2 
37 1 250 1 
133 1 45 2 255 1 302 1 91 1 230 2 250 2 178 2 132 1 
214 1 339 1 317 1 
73 1 294 1 45 1 341 1 300 1 211 1 257 1 165 1 125 1 377 1 323 1 250 1 129 1 178 1 83 1 236 1 
73 1 294 1 45 2 341 1 300 1 226 1 255 1 317 1 257 1 211 1 165 1 125 1 302 1 377 1 230 1 277 1 323 1 83 1 178 2 236 1 
328 1 43 1 45 5 301 1 255 4 226 1 343 1 302 4 91 1 230 5 277 2 250 1 178 5 132 1 
302 2 230 2 150 1 45 2 70 1 178 2 255 2 123 1 
302 3 91 1 230 3 277 1 45 3 250 1 178 3 255 3 
302 1 230 1 45 1 70 1 178 1 255 1 123 1 
133 1 302 1 91 1 230 1 45 1 178 1 255 1 123 1 132 1 
284 1 45 4 341 1 288 1 211 1 113 1 48 1 182 1 165 1 185 1 91 2 142 1 216 1 170 1 323 1 250 1 171 1 34 1 53 1 349 2 73 1 294 1 151 1 152 1 300 1 255 3 226 1 257 1 123 1 352 1 125 1 302 3 376 1 377 1 104 1 230 3 39 1 304 1 277 1 83 1 178 4 156 1 132 1 236 1 
328 1 302 1 230 2 45 2 277 1 250 1 178 2 255 1 343 1 
284 1 45 3 179 1 152 1 226 1 255 3 289 1 123 1 352 1 302 3 91 1 142 1 230 3 277 2 156 1 178 3 53 1 34 1 132 1 
45 2 255 2 317 1 214 1 302 2 91 1 230 2 277 1 178 2 132 1 
73 1 294 1 45 1 341 1 300 1 211 1 257 1 165 1 125 1 377 1 323 1 250 1 178 1 83 1 236 1 
338 1 73 1 294 1 45 1 341 1 300 1 211 1 257 1 165 1 333 1 125 1 377 1 250 1 178 1 83 1 
108 1 339 2 240 1 3 1 288 1 317 2 113 1 48 1 214 2 30 1 219 1 170 4 221 2 171 2 291 1 329 1 349 2 252 1 151 1 75 1 353 1 39 1 304 1 381 1 
302 1 142 1 230 1 150 1 45 1 178 1 255 1 123 1 
356 1 17 1 
356 1 17 1 
139 1 58 1 
139 1 58 1 
139 1 58 1 
356 1 17 1 120 1 
356 1 17 1 120 1 
124 1 356 1 17 1 
217 1 356 2 17 2 139 1 146 1 58 1 
356 1 17 1 120 1 
356 1 17 1 256 1 
356 1 17 1 256 1 
356 1 17 1 256 1 
84 1 327 1 41 1 63 1 160 1 45 2 371 1 121 1 298 1 181 1 255 2 244 1 90 1 124 1 302 2 320 1 230 2 356 1 17 1 367 1 250 1 178 2 156 1 53 1 
327 3 41 2 263 1 55 1 371 2 298 2 181 1 289 1 90 2 92 1 217 1 356 2 17 2 380 1 191 1 156 2 206 1 53 2 19 2 
64 1 11 1 51 1 
64 1 270 1 11 1 
330 1 64 3 357 1 204 1 270 1 51 2 
330 1 149 1 64 2 357 1 270 1 51 1 
330 2 64 2 357 1 270 1 51 1 
312 1 283 1 314 2 240 1 160 1 159 1 242 3 111 1 24 2 244 1 289 2 212 2 27 1 30 1 168 1 269 1 367 1 53 5 291 1 78 3 15 1 16 1 305 1 381 1 177 1 205 2 234 1 156 5 278 1 157 1 280 4 360 1 
237 1 312 3 283 3 314 6 240 3 159 6 242 8 111 1 24 6 244 4 289 5 27 2 30 3 168 2 368 1 53 9 326 1 291 3 193 5 197 1 200 1 78 9 79 1 15 1 16 2 232 1 203 5 381 3 177 1 205 6 234 2 156 9 278 2 157 1 280 7 
312 1 283 2 314 2 240 1 242 3 24 2 244 1 289 3 212 1 27 1 30 1 168 1 269 1 53 3 291 1 197 1 78 4 16 1 305 1 177 1 381 1 234 1 205 2 156 3 278 1 280 2 
312 2 283 3 314 4 240 2 242 5 24 4 244 2 289 4 212 2 27 1 30 2 168 1 269 1 53 4 326 1 291 2 197 1 200 1 78 7 16 1 232 1 305 1 177 1 381 2 205 4 234 1 156 4 278 1 280 3 
37 1 341 1 10 1 
253 1 341 1 
229 1 
125 1 341 1 257 1 
341 1 209 1 
125 1 341 1 
125 1 10 2 341 3 128 1 335 1 257 1 
291 1 12 1 44 1 3 2 138 2 243 1 199 1 266 1 353 3 183 1 30 1 346 1 170 7 171 3 221 4 173 1 192 1 
291 1 12 1 44 1 3 2 138 2 243 1 199 1 266 1 353 3 183 1 30 1 346 1 170 7 171 3 221 4 173 1 192 1 
291 1 12 1 1 1 44 1 3 2 138 2 243 1 199 1 266 1 353 3 183 1 30 1 346 1 170 7 171 3 221 4 173 1 192 1 
312 3 238 1 240 3 44 2 180 1 362 1 3 5 243 1 138 3 66 4 266 1 113 1 48 1 183 2 30 4 186 1 346 2 170 31 171 15 221 16 173 1 192 5 291 4 349 2 12 2 119 1 151 1 175 1 199 1 353 10 105 3 304 1 381 3 261 1 
291 1 12 1 349 4 44 1 151 2 3 3 138 2 199 1 266 1 113 2 353 4 48 2 183 1 267 1 30 1 186 1 304 2 346 1 170 9 171 4 221 5 173 1 155 1 192 1 
282 1 158 1 239 2 64 2 112 1 211 1 318 1 245 1 215 1 166 1 29 1 218 1 50 2 220 1 270 1 11 1 51 1 72 1 73 1 294 1 35 1 225 1 354 1 377 1 106 1 308 1 204 1 83 1 358 1 107 1 
282 1 239 3 64 2 136 1 112 2 211 1 318 1 245 1 215 1 166 1 29 1 218 1 50 3 220 1 270 1 11 1 51 1 73 1 294 1 225 1 354 1 377 1 106 1 204 1 308 1 83 1 358 1 130 1 107 1 62 1 
282 1 239 2 64 2 136 1 112 2 211 1 318 1 245 1 215 1 166 1 218 1 50 2 220 1 270 1 51 1 11 1 73 1 294 1 225 1 377 1 308 1 204 1 83 1 358 1 62 1 
20 1 282 2 73 1 239 1 294 1 341 1 372 1 300 1 374 1 74 1 211 1 125 1 28 1 166 2 377 1 29 1 106 1 308 2 50 1 220 2 83 1 130 1 174 1 
282 1 239 1 64 2 136 1 211 1 318 1 166 1 29 1 218 1 50 1 220 1 270 1 11 1 51 1 72 1 73 1 294 1 35 1 225 1 354 1 377 1 106 1 308 1 204 1 83 1 107 1 
76 1 
0 1 283 2 284 1 242 2 45 1 341 1 289 2 343 1 142 1 49 2 290 2 188 2 94 1 53 5 294 2 196 2 296 2 152 1 300 2 59 1 16 1 156 5 157 3 20 1 109 4 264 2 159 6 111 1 24 2 163 1 211 2 164 1 27 1 168 1 366 1 68 1 69 1 114 1 34 1 174 1 273 1 73 2 123 1 227 1 78 2 228 2 125 1 377 1 80 1 230 1 40 1 177 1 278 1 83 1 178 1 
0 1 109 2 284 1 2 1 159 2 45 1 163 1 164 1 343 1 142 1 366 1 290 1 114 1 53 3 34 1 152 1 123 1 230 1 40 1 178 1 156 3 157 1 
0 1 109 3 284 1 2 1 159 1 45 1 163 1 164 1 289 1 343 1 142 1 366 1 114 1 53 3 34 1 196 1 152 1 123 1 230 1 40 1 177 1 178 1 156 3 157 1 
0 1 109 3 284 1 2 1 159 2 45 1 163 1 164 1 289 1 343 1 142 1 366 1 290 1 114 1 53 3 34 1 296 1 196 1 152 1 123 1 230 1 40 1 177 1 178 1 156 3 157 1 
0 1 85 1 284 1 283 2 2 1 242 1 45 1 289 5 343 1 142 1 143 1 49 2 290 4 188 2 53 5 296 4 196 4 152 1 198 1 16 1 156 5 157 3 109 6 264 2 159 7 111 1 24 1 163 1 164 1 27 1 168 1 366 1 114 1 34 1 117 1 273 1 118 1 123 1 227 1 228 2 230 1 40 1 177 5 178 1 
0 1 284 1 283 2 242 1 45 1 289 2 343 1 142 1 49 2 188 2 290 2 53 4 296 2 196 2 152 1 16 1 156 4 157 2 109 4 264 2 159 4 111 1 24 1 163 1 164 1 27 1 168 1 366 1 68 1 114 1 34 1 273 1 123 1 227 1 78 2 228 2 230 1 40 1 177 1 178 1 
0 1 109 4 283 2 284 1 264 2 159 4 242 1 45 1 111 1 24 1 163 1 164 1 289 1 343 1 27 1 142 1 168 1 366 1 49 2 290 2 188 2 114 1 53 4 34 1 273 1 117 1 118 1 196 2 296 2 152 1 198 1 123 1 227 1 228 2 16 1 230 1 40 1 177 1 178 1 156 4 157 2 
0 1 109 4 283 2 284 1 264 2 159 4 242 1 45 1 111 1 24 1 163 1 164 1 289 1 343 1 27 1 142 1 168 1 366 1 49 2 290 2 188 2 114 1 53 4 34 1 273 1 117 1 118 1 196 2 296 2 152 1 198 1 123 1 227 1 228 2 16 1 230 1 40 1 177 1 178 1 156 4 157 2 
0 1 109 4 284 1 264 2 159 4 242 1 45 1 111 1 24 1 163 1 164 1 289 1 343 1 213 1 27 1 142 1 168 1 366 1 247 1 290 2 114 1 71 1 53 4 34 1 273 1 118 1 98 2 196 2 296 2 152 1 123 1 78 2 228 2 202 2 16 1 230 1 40 1 177 1 178 1 156 4 157 2 
0 1 109 5 283 2 284 1 264 2 242 1 159 5 111 1 45 1 24 1 163 1 164 1 289 1 343 1 27 1 168 1 142 1 143 1 366 1 49 2 188 2 290 3 114 1 53 4 34 1 273 1 117 1 118 1 296 3 196 3 152 1 198 1 123 1 227 1 228 2 16 1 230 1 40 1 177 1 178 1 156 4 157 2 
0 1 109 5 283 2 284 1 264 2 242 1 159 5 111 1 45 1 24 1 163 1 164 1 289 1 343 1 27 1 168 1 142 1 143 1 366 1 49 2 188 2 290 3 114 1 53 4 34 1 273 1 117 1 118 1 296 3 196 3 152 1 198 1 123 1 227 1 228 2 16 1 230 1 40 1 177 1 178 1 156 4 157 2 
0 1 109 4 284 1 264 2 159 4 242 1 111 1 45 1 24 1 163 1 164 1 289 1 343 1 27 1 168 1 142 1 366 1 68 1 290 2 114 1 71 1 53 4 34 1 273 1 98 2 196 2 296 2 152 1 123 1 78 2 228 2 202 2 16 1 230 1 40 1 177 1 156 4 178 1 157 2 
339 1 44 1 3 2 138 1 317 1 288 1 266 1 113 1 48 1 183 1 214 1 30 1 219 1 170 6 221 3 171 3 250 2 173 1 291 1 349 2 151 1 37 1 199 1 353 2 39 1 304 1 
312 2 361 1 339 11 240 2 3 1 66 3 288 2 317 11 113 2 48 2 214 4 30 1 216 1 347 1 170 14 250 1 171 6 221 8 192 1 145 1 115 1 291 2 349 4 151 2 175 1 353 2 258 1 105 3 39 1 304 2 381 1 261 1 359 1 
45 2 341 1 211 1 288 1 113 1 48 1 165 1 214 1 216 1 323 1 170 2 250 1 171 1 221 1 115 1 349 2 73 1 294 1 151 1 195 1 300 1 255 1 226 1 257 1 13 1 125 1 302 1 377 1 230 1 39 1 304 1 277 1 129 1 83 1 178 2 235 1 359 1 236 1 
339 7 240 2 44 1 136 1 45 3 3 4 341 2 138 1 288 3 48 3 183 1 250 2 192 4 291 3 349 6 294 3 151 3 350 1 300 1 255 1 199 1 257 2 353 8 302 1 104 2 304 3 359 1 262 1 312 2 162 2 211 3 67 2 317 7 266 1 113 3 165 2 214 7 30 3 216 1 268 2 170 20 323 2 171 10 221 10 173 1 115 1 370 2 73 3 226 1 125 2 377 2 230 1 39 3 379 1 277 1 381 2 178 3 83 2 236 2 
20 1 158 1 136 1 45 1 86 1 341 3 211 7 288 2 113 2 364 1 48 2 169 1 216 1 249 1 219 1 170 2 221 1 171 1 174 1 116 1 349 4 73 8 294 8 151 2 295 1 373 1 300 2 331 2 255 1 302 1 125 2 377 2 230 1 39 2 304 2 277 1 178 1 83 2 359 1 
312 1 339 1 240 1 45 1 3 1 317 1 288 1 113 1 48 1 214 1 91 1 30 1 170 3 221 1 171 2 115 1 291 1 349 2 151 1 254 1 255 1 353 1 302 1 230 1 39 1 304 1 381 1 178 1 132 1 
291 1 349 2 339 1 240 1 151 1 317 1 288 1 113 1 75 1 353 1 48 1 214 1 39 1 304 1 170 2 219 1 221 2 192 1 
108 1 349 2 339 1 151 1 3 1 317 1 288 1 113 1 353 1 48 1 214 1 30 1 39 1 304 1 170 2 219 1 381 1 171 2 
312 1 339 2 240 1 3 1 288 1 317 2 113 1 48 1 214 2 30 1 219 1 170 4 221 2 171 2 192 1 291 1 349 2 151 1 353 2 39 1 304 1 381 1 
291 1 349 2 339 1 240 1 295 1 151 1 317 1 288 1 113 1 75 1 353 1 48 1 214 1 39 1 304 1 170 2 221 2 192 1 
108 1 349 2 339 1 295 1 151 1 3 1 317 1 288 1 113 1 353 1 48 1 214 1 30 1 39 1 304 1 170 2 381 1 171 2 
312 1 339 2 240 1 3 1 288 1 317 2 113 1 48 1 214 2 30 1 170 4 221 2 171 2 192 1 291 1 349 2 151 1 295 1 353 2 39 1 304 1 381 1 
312 1 291 1 349 2 339 2 240 1 151 1 3 1 317 2 288 1 113 1 353 2 48 1 214 2 30 1 39 1 304 1 170 4 171 2 381 1 221 2 192 1 
45 1 341 1 211 1 288 1 113 1 48 1 165 1 216 1 170 2 323 1 221 1 250 1 171 1 349 2 73 1 294 1 151 1 300 1 257 1 125 1 377 1 104 1 39 1 304 1 83 1 178 1 359 1 236 1 
338 1 45 1 341 1 211 1 288 1 113 1 48 1 165 1 216 1 170 2 221 1 250 1 171 1 349 2 73 1 294 1 151 1 300 1 257 1 125 1 333 1 377 1 39 1 304 1 309 1 83 1 178 1 359 1 
312 1 339 2 240 1 3 1 288 1 317 2 113 1 48 1 214 2 30 1 170 4 221 2 171 2 192 1 115 1 291 1 349 2 151 1 353 2 39 1 304 1 381 1 
312 1 339 2 158 1 240 1 45 1 3 1 162 1 341 1 317 2 211 1 288 1 113 1 48 1 165 1 214 2 30 1 170 4 323 1 171 2 221 2 192 1 291 1 349 2 73 1 294 1 151 1 257 1 353 2 125 1 377 1 104 1 39 1 304 1 381 1 83 1 178 1 236 1 
312 1 339 1 240 1 45 1 316 1 288 1 317 1 113 1 48 1 214 1 30 1 91 1 170 3 171 1 221 2 192 1 115 1 291 1 349 2 151 1 255 1 353 1 302 1 230 1 39 1 304 1 381 1 178 1 132 1 
312 3 240 3 208 1 161 2 3 3 66 2 113 2 25 2 48 2 30 3 7 1 170 19 171 10 221 9 192 3 325 1 291 3 349 4 151 2 299 1 175 1 353 6 126 1 105 1 303 1 127 1 304 2 381 3 155 1 261 1 
312 3 313 1 240 3 161 1 135 1 3 2 66 2 342 1 113 3 25 4 48 3 30 2 321 1 186 2 7 1 170 26 171 12 221 14 192 2 52 1 325 2 291 3 349 6 99 1 151 3 299 1 175 2 353 4 126 1 105 2 127 2 304 3 381 2 155 1 
312 4 313 1 240 4 44 1 161 1 135 1 3 4 138 1 66 4 342 1 266 1 113 3 25 4 48 3 183 1 30 5 321 1 186 1 7 1 93 1 170 41 171 21 221 20 173 1 192 4 52 1 325 1 291 5 349 6 99 1 151 3 299 1 175 3 199 1 353 8 126 1 105 3 303 1 127 2 304 3 381 4 155 1 261 1 
312 4 313 1 240 4 44 1 161 1 135 1 3 4 138 1 66 4 342 1 266 1 113 4 25 4 48 4 183 1 30 4 321 1 186 2 7 1 93 1 170 38 171 18 221 20 173 1 192 3 52 1 325 1 291 5 349 8 99 1 151 4 299 1 175 3 199 1 353 7 126 1 105 3 303 1 127 2 304 4 381 3 155 1 261 1 
312 7 313 1 240 7 44 1 161 1 135 1 3 7 138 1 66 4 342 1 266 1 113 2 25 4 48 2 183 1 30 8 321 1 186 1 7 1 170 52 171 25 221 27 173 1 192 7 145 2 52 1 325 1 291 8 349 4 99 1 151 2 299 1 175 2 199 1 353 14 126 1 105 4 127 1 304 2 381 7 155 1 261 2 
41 1 92 1 217 1 356 1 17 1 371 1 298 1 206 1 38 1 90 1 
124 1 63 1 
41 1 356 1 17 1 315 1 348 1 371 1 298 1 223 1 90 1 
31 1 120 1 
241 1 256 1 146 1 
327 2 41 1 263 1 55 1 371 1 298 1 181 1 289 1 90 1 92 1 217 1 356 1 17 1 191 1 156 1 206 1 53 1 19 1 
327 2 41 1 263 1 55 1 371 1 298 1 181 1 289 1 90 1 92 1 217 1 356 1 17 1 191 1 156 1 206 1 53 1 19 1 
327 2 41 1 263 1 55 1 371 1 298 1 181 1 289 1 90 1 92 1 217 1 356 1 17 1 191 1 156 1 206 1 53 1 19 1 
31 1 120 1 146 1 
31 1 120 1 146 1 
241 1 256 1 
241 1 256 1 146 1 
320 1 121 1 
84 1 263 1 41 1 63 1 160 1 45 2 244 1 90 1 320 1 322 1 367 1 250 1 53 1 327 1 371 1 298 1 121 1 255 2 124 1 302 2 356 1 230 2 17 1 178 2 156 1 19 1 280 1 
45 2 341 1 288 1 211 2 113 1 364 1 89 1 48 1 216 1 8 1 170 2 221 1 171 1 224 1 115 1 116 1 349 2 73 2 294 2 151 1 56 1 331 2 125 1 377 1 230 2 39 1 378 1 304 1 83 1 178 2 359 1 
96 1 73 2 158 1 294 2 64 2 136 1 100 1 211 2 318 1 354 1 377 1 218 1 204 1 308 1 270 1 83 1 11 1 51 1 369 1 
54 1 73 1 294 1 64 2 136 1 211 1 318 1 354 1 377 1 218 1 204 1 308 1 270 1 83 1 11 1 51 1 369 1 
20 1 73 1 294 1 341 1 300 1 100 1 211 1 125 1 28 1 377 1 308 1 307 1 83 1 174 1 
96 1 73 1 294 1 64 2 136 1 100 1 211 1 318 1 354 1 377 1 218 1 204 1 308 1 270 1 83 1 11 1 51 1 369 1 
345 1 
242 1 22 1 37 1 177 1 24 1 289 1 47 1 
283 1 242 1 159 1 111 1 24 1 289 2 27 1 168 1 49 1 188 1 53 1 227 1 78 1 16 1 177 1 156 1 157 1 
283 6 240 2 242 9 341 10 47 1 289 8 184 2 187 1 9 2 10 2 94 1 53 5 291 2 294 3 253 3 152 2 57 2 300 1 257 3 103 2 16 4 205 6 260 2 156 5 157 3 310 1 312 2 158 1 314 6 159 5 22 1 111 4 24 8 363 2 211 3 209 2 67 2 27 4 168 4 30 2 32 2 33 1 73 3 122 1 78 12 125 3 377 3 275 2 177 2 128 1 381 2 278 2 83 4 279 1 
312 2 313 1 314 5 283 3 240 2 159 1 242 8 111 2 135 1 24 5 66 1 363 2 342 1 289 5 27 2 168 2 30 2 321 1 9 1 189 1 94 1 53 1 291 2 274 1 99 1 175 1 78 6 16 2 105 1 381 2 177 2 205 5 278 1 156 1 157 1 
42 1 44 1 242 2 45 1 111 1 24 2 363 2 183 1 27 1 168 1 30 1 91 1 9 1 70 1 173 1 53 1 95 1 291 2 117 1 255 1 123 1 376 1 302 1 16 1 230 1 178 1 156 1 311 1 
242 1 22 1 111 1 24 1 47 1 289 1 27 1 168 1 16 1 177 1 
312 2 291 2 314 5 283 5 240 2 242 5 24 5 67 1 363 2 289 5 78 10 30 2 9 1 381 2 205 5 
159 1 177 1 156 1 53 1 157 1 289 1 
20 1 287 1 242 2 159 4 111 1 341 1 24 2 211 4 27 2 168 2 187 1 94 2 53 3 174 1 147 1 73 4 294 4 300 2 197 1 59 1 125 1 377 1 80 1 16 2 83 1 278 2 156 3 157 2 310 2 
45 3 341 1 211 1 288 1 113 1 48 1 182 1 165 1 91 2 216 1 170 1 323 1 250 1 171 1 349 2 73 1 294 1 151 1 300 1 255 2 257 1 302 2 376 1 125 1 104 1 377 1 230 2 39 1 304 1 178 3 83 1 236 1 
314 2 283 2 242 1 111 1 138 1 24 2 289 4 78 4 27 1 168 1 16 1 177 2 205 2 278 1 94 1 
41 1 371 1 319 1 
41 1 371 1 319 1 
355 1 41 1 92 1 371 1 121 1 
41 1 371 1 319 1 
41 1 248 1 371 1 
41 1 248 1 371 1 
41 1 248 1 371 1 
41 1 371 1 
356 1 17 1 
291 1 349 4 44 1 151 2 3 2 138 1 199 1 113 2 266 1 353 3 48 2 183 1 30 1 186 1 304 2 170 8 171 4 221 4 173 1 192 1 
291 1 44 1 37 1 3 2 138 1 199 1 266 1 353 2 183 1 30 1 170 6 171 3 221 3 173 1 
312 1 291 1 349 2 240 1 151 1 3 1 113 1 353 2 48 1 30 1 176 1 304 1 170 4 171 2 381 1 221 2 192 1 
312 1 291 1 240 1 3 1 175 1 66 2 353 2 30 1 105 1 170 7 381 1 171 4 221 3 192 1 261 1 
312 2 240 2 44 2 3 5 138 1 66 2 266 1 113 2 48 2 183 2 6 1 30 3 186 2 170 23 221 11 171 12 173 1 192 4 145 1 291 3 349 4 151 2 199 1 353 9 258 1 105 2 304 2 381 2 261 1 
170 1 171 1 66 1 
105 1 170 1 221 1 
312 1 291 1 349 2 240 1 151 1 3 2 67 1 113 1 48 1 353 3 176 1 30 1 304 1 170 6 171 3 221 3 381 1 192 1 
312 2 313 1 240 2 135 1 3 1 66 1 342 1 113 1 48 1 30 2 321 1 170 12 171 6 221 6 192 1 291 2 349 2 151 1 99 1 175 1 353 2 105 1 304 1 381 2 155 1 
291 1 44 1 3 1 353 2 183 1 30 1 170 6 221 3 171 3 173 1 192 1 
349 2 44 1 151 1 3 1 199 1 266 1 113 1 353 2 48 1 183 1 6 1 186 1 304 1 170 3 221 1 171 2 192 1 
291 2 349 2 44 2 151 1 3 3 113 1 48 1 353 5 183 2 30 2 304 1 170 10 221 5 171 5 155 1 173 1 192 2 95 1 
291 1 349 2 240 1 151 1 113 1 48 1 353 1 304 1 170 2 221 2 155 1 192 1 
312 1 291 1 349 2 240 1 151 1 3 1 113 1 353 2 48 1 30 1 304 1 170 4 171 2 381 1 221 2 155 1 192 1 
349 6 44 1 151 3 3 1 113 3 48 3 353 2 183 1 6 1 186 1 303 1 304 3 170 3 171 2 221 1 155 1 192 1 
312 3 238 1 240 3 44 3 180 1 3 7 138 1 66 4 266 1 113 5 48 5 183 3 6 1 30 5 186 2 170 34 171 18 221 16 173 2 192 5 291 5 349 10 119 1 151 5 175 1 199 1 353 12 176 1 105 3 303 1 304 5 381 3 155 1 261 1 
44 1 3 2 138 1 66 1 342 1 113 1 266 1 48 1 183 1 30 1 170 8 171 4 221 4 173 1 291 1 349 2 151 1 175 1 199 1 353 2 105 1 304 1 155 1 
312 1 240 1 44 1 3 2 138 1 66 2 342 1 266 1 113 2 48 2 183 1 30 1 170 11 171 5 221 6 173 1 192 1 291 2 349 4 151 2 175 1 199 1 353 3 176 1 105 1 304 2 155 1 261 1 
312 2 313 1 240 2 44 1 135 1 3 3 138 1 66 1 342 1 266 1 113 3 48 3 183 1 30 3 321 1 186 1 170 19 171 10 221 9 173 1 192 1 291 3 349 6 151 3 99 1 175 1 199 1 353 4 176 1 105 1 304 3 381 2 155 1 
312 2 313 1 240 2 44 1 135 1 3 3 138 1 66 1 342 1 266 1 113 3 48 3 183 1 30 2 321 1 186 1 170 17 171 7 221 10 173 1 192 2 291 3 349 6 151 3 99 1 175 1 199 1 353 5 176 1 105 1 304 3 381 1 155 1 
44 1 3 2 138 1 66 1 342 1 113 1 266 1 48 1 183 1 30 1 170 8 171 4 221 4 173 1 291 1 349 2 151 1 175 1 199 1 353 2 105 1 304 1 155 1 
312 2 313 1 240 2 135 1 3 1 66 1 342 1 113 1 48 1 30 2 321 1 170 12 171 6 221 6 192 1 291 2 349 2 151 1 99 1 175 1 353 2 105 1 304 1 381 2 155 1 
312 2 313 1 240 2 44 1 135 1 3 3 138 1 66 1 342 1 266 1 113 4 48 4 183 1 30 2 321 1 186 2 170 18 171 8 221 10 173 1 192 2 291 3 349 8 99 1 151 4 175 1 199 1 353 5 176 1 105 1 304 4 381 1 155 1 
312 3 313 1 240 3 135 1 3 3 66 1 342 1 113 4 48 4 30 2 321 1 186 2 170 16 171 7 221 9 192 3 291 3 349 8 99 1 151 4 175 1 353 6 105 1 303 1 304 4 381 2 155 1 
291 1 44 3 3 3 199 1 266 2 353 6 183 3 30 1 170 7 171 4 221 3 173 1 192 3 
312 2 313 1 240 2 44 1 135 1 3 3 138 1 66 1 342 1 266 1 113 4 48 4 183 1 30 2 321 1 186 2 170 18 171 8 221 10 173 1 192 1 291 3 349 8 99 1 151 4 175 1 199 1 353 4 105 1 303 1 304 4 381 1 155 1 
328 1 230 1 45 1 250 1 178 1 343 1 365 1 
328 1 45 1 88 1 375 1 365 1 343 1 167 1 153 1 230 1 250 1 178 1 61 1 
20 1 125 1 377 1 73 1 294 1 37 1 341 1 300 1 83 1 211 1 174 1 
73 1 294 1 45 2 341 1 300 1 255 1 257 1 211 1 165 1 125 1 302 1 377 1 230 1 277 1 250 1 83 1 178 2 236 1 
73 1 294 1 45 2 341 3 255 2 209 1 257 2 211 1 123 1 165 1 184 1 125 2 302 1 142 1 377 1 230 2 277 1 250 1 83 1 178 2 34 1 310 1 236 1 
338 1 73 2 294 2 36 1 45 2 341 3 255 2 209 1 257 2 211 2 123 1 165 1 184 1 125 2 302 1 142 1 377 1 230 2 277 1 250 1 83 1 178 2 34 1 310 1 
207 1 159 1 341 4 211 3 209 1 289 1 184 1 10 1 53 2 293 1 73 3 294 3 36 1 253 1 152 1 300 1 257 1 125 1 377 1 177 1 156 2 83 1 310 1 
73 3 294 3 36 1 159 1 253 1 152 1 341 4 300 1 209 1 257 1 211 3 289 1 125 1 184 1 377 1 32 1 177 1 10 1 83 1 156 2 53 2 310 1 
377 1 169 1 73 1 294 1 83 1 211 1 
116 1 158 1 73 7 294 7 136 1 86 1 341 3 331 1 373 1 300 2 211 6 257 1 5 1 125 2 377 2 169 1 18 1 249 1 276 1 128 1 83 3 
339 1 158 1 44 1 45 2 3 2 341 1 162 1 138 1 317 1 288 2 211 1 266 1 113 2 48 2 183 1 165 1 214 1 30 1 170 6 323 1 250 2 171 3 221 3 173 1 115 1 291 1 349 4 370 1 73 1 294 1 151 2 56 1 255 1 199 1 257 1 353 2 125 1 302 1 377 1 104 1 230 1 39 2 304 2 277 1 83 1 178 2 236 1 
242 1 159 2 22 1 111 2 341 2 24 1 211 1 289 1 47 1 27 2 168 2 32 1 187 1 10 1 53 3 73 1 294 1 253 1 152 1 300 1 103 1 16 2 275 1 177 1 156 3 260 1 157 1 280 1 
158 1 73 2 294 2 122 1 341 2 211 2 257 1 125 1 377 1 169 1 10 1 128 1 83 2 
20 1 148 1 73 4 158 1 294 4 36 1 341 1 300 1 211 4 125 1 377 1 83 1 174 1 
73 2 294 2 341 1 211 2 257 1 5 1 125 1 377 1 276 1 271 1 233 1 83 2 310 1 262 1 
377 1 73 1 294 1 64 1 218 1 270 1 300 1 83 1 11 1 211 1 
116 1 158 1 73 2 294 2 136 1 341 1 211 2 125 1 377 1 83 1 224 1 
20 1 116 1 148 1 73 5 158 1 294 5 86 1 341 3 300 1 211 4 125 2 377 2 249 1 83 2 310 1 174 1 
116 1 73 2 158 1 294 2 285 1 341 2 300 1 257 1 211 2 5 1 125 2 377 2 276 1 271 1 233 1 83 3 174 1 
338 1 73 1 294 1 45 2 341 1 300 1 255 1 257 1 211 1 165 1 125 1 302 1 377 1 230 1 277 1 250 1 83 1 178 2 
73 1 294 1 341 1 211 1 257 1 5 1 125 1 377 1 18 1 276 1 128 1 83 2 310 1 
21 1 246 1 250 1 23 1 272 1 
21 1 284 1 152 1 23 2 332 1 289 1 123 1 77 1 14 1 352 1 142 1 246 2 250 1 177 1 156 2 34 1 53 2 280 1 272 2 
230 1 21 1 378 1 8 1 45 1 23 1 178 1 272 1 89 1 
21 1 14 1 77 1 
215 1 37 1 358 1 245 1 
215 1 29 1 239 1 106 1 50 1 358 1 245 1 
166 1 282 1 50 1 
72 1 239 3 97 2 140 1 344 1 201 1 245 1 215 1 29 1 106 1 50 3 358 1 
215 1 29 1 231 1 239 2 106 1 50 2 112 1 358 1 245 1 
251 1 29 1 72 1 239 1 64 1 106 1 50 1 11 1 51 1 358 1 4 1 
29 1 72 1 239 1 106 1 50 1 358 1 245 1 
215 1 29 1 72 1 239 1 106 1 50 1 245 2 
29 2 72 1 134 1 239 2 286 1 106 2 50 2 324 1 358 1 245 1 
251 1 72 1 239 3 112 2 351 1 245 1 215 1 29 1 106 1 306 1 50 3 144 1 358 2 
72 1 239 2 64 2 297 1 112 1 245 1 215 1 29 1 106 1 50 2 204 1 270 1 358 1 51 1 11 1 
251 1 72 1 239 4 112 2 351 1 245 1 102 1 215 1 29 2 231 1 106 2 50 4 358 2 
215 1 29 1 72 1 239 1 106 1 50 1 358 1 245 1 
251 1 281 1 239 4 97 1 112 2 351 1 140 1 201 1 245 2 215 2 29 1 106 1 50 4 358 3 
72 1 239 2 340 1 112 1 245 1 215 1 29 1 259 1 106 1 50 2 358 1 222 1 
72 1 239 3 97 2 101 1 140 1 201 2 245 1 215 1 29 1 106 1 50 3 358 1 
194 1 137 1 358 2 210 2 
29 1 72 1 239 1 106 1 65 1 50 1 
215 1 29 1 72 1 239 2 306 1 106 1 50 2 112 1 358 1 245 1 
131 1 
215 1 29 1 72 1 239 1 106 1 50 1 358 1 245 1 
215 1 29 1 72 1 239 3 97 1 306 1 106 1 50 3 112 1 358 1 245 1 
251 1 281 1 351 1 358 1 
358 1 245 1 

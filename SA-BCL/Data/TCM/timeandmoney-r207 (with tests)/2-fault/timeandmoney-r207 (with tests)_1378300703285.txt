#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 152 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
290 1 153 2 131 2 1 2 58 4 256 1 294 1 362 5 258 9 363 2 69 1 322 1 197 1 162 1 269 3 182 1 101 1 103 1 14 2 104 1 378 9 123 1 356 2 305 1 107 1 307 2 128 1 285 6 
290 1 153 2 131 2 1 2 58 4 256 1 294 1 362 5 258 9 363 2 69 1 322 1 197 1 162 1 269 3 182 1 101 1 103 1 14 2 104 1 378 9 123 1 356 2 305 1 107 1 307 2 128 1 285 6 
290 1 153 2 131 2 1 2 58 5 256 1 294 1 362 6 258 10 363 2 69 1 322 1 197 1 162 1 269 4 182 1 101 1 103 1 14 2 104 1 378 10 123 1 356 2 305 1 107 1 307 2 128 1 285 7 
290 1 153 2 131 2 1 2 58 3 256 1 294 1 362 4 258 7 363 1 69 1 197 1 162 1 269 2 182 1 101 1 103 1 14 2 104 1 378 7 123 1 356 2 305 1 107 1 307 2 128 1 285 4 
322 1 197 1 153 1 269 1 131 1 256 1 58 2 362 3 258 4 103 1 14 1 363 2 378 4 356 1 107 1 307 1 69 1 285 3 
153 1 162 1 131 1 353 1 1 1 361 1 362 1 258 2 103 1 14 1 378 2 305 1 107 1 307 1 253 1 69 1 
153 2 269 1 1 1 58 1 101 1 362 2 258 3 103 1 14 2 378 3 107 1 69 1 285 1 
290 1 313 1 153 2 131 1 58 4 1 1 256 1 362 5 258 9 363 2 69 1 197 1 322 1 269 3 101 1 271 1 103 1 14 2 104 1 378 9 356 1 107 1 307 1 285 7 
290 1 313 1 153 2 131 1 58 4 1 1 256 1 362 5 258 9 363 2 69 1 197 1 322 1 269 3 101 1 271 1 103 1 14 2 104 1 378 9 356 1 107 1 307 1 285 7 
152 1 
267 1 44 2 237 1 
7 1 207 2 42 2 3 1 272 2 122 2 145 2 381 2 
291 1 222 2 191 1 3 1 260 1 7 1 232 1 264 1 265 1 207 2 209 1 9 2 67 1 160 1 114 1 320 1 94 1 145 3 369 1 240 1 71 1 100 1 42 3 198 1 324 1 273 1 272 2 122 2 275 1 149 1 202 1 106 1 330 2 284 2 187 1 77 2 381 2 
54 1 88 1 207 1 42 1 3 1 272 1 122 1 145 1 381 1 289 1 
336 1 337 1 72 1 82 1 42 1 183 1 2 1 184 1 88 1 36 1 220 1 237 1 145 1 381 1 
337 2 72 1 82 1 42 1 183 1 2 1 122 1 272 1 184 1 36 2 88 1 207 1 237 1 145 1 381 1 
337 1 41 1 263 1 36 1 147 1 
337 2 41 1 36 2 147 1 341 1 143 1 184 1 237 1 
337 1 41 1 36 1 
54 1 337 1 147 1 42 1 3 1 122 1 272 1 88 1 36 1 207 1 210 1 145 1 289 1 381 1 
237 1 
337 2 41 1 343 1 36 2 147 1 341 1 184 1 237 1 
298 1 337 5 25 1 41 2 147 2 341 1 184 1 175 1 177 2 19 2 36 5 37 1 89 1 234 1 11 1 78 2 287 1 151 1 237 1 
152 1 
42 2 375 1 122 1 272 1 64 1 7 2 207 1 145 2 381 2 
81 1 308 1 168 1 
291 1 240 1 241 1 71 1 100 1 42 1 191 1 324 1 275 1 7 1 232 1 330 1 9 1 77 1 160 1 145 1 
291 1 121 1 240 1 71 1 100 1 191 1 42 2 324 1 272 1 275 1 232 1 330 1 207 1 308 1 9 1 160 1 77 1 254 1 145 2 381 1 
7 1 207 3 42 3 122 1 272 3 254 1 145 3 381 3 
54 1 88 1 207 1 42 1 272 1 145 1 381 1 
88 1 207 1 42 1 375 1 272 1 122 1 64 1 145 1 381 1 
291 1 222 2 337 1 82 1 191 1 2 1 3 1 64 1 260 1 231 1 7 1 232 1 265 1 88 1 36 1 207 3 209 1 9 1 67 1 160 1 320 1 94 1 95 1 145 4 121 1 240 1 71 1 100 1 72 1 42 4 324 1 183 1 273 1 122 2 272 3 275 1 149 1 202 1 330 1 284 1 187 1 77 1 254 1 381 3 
7 1 336 1 207 1 42 2 252 1 272 1 254 1 145 2 381 2 
121 1 337 1 72 1 82 1 42 3 183 1 2 1 122 1 272 3 73 1 64 1 231 1 36 1 88 1 207 3 254 2 237 1 145 3 381 3 
42 2 122 1 272 2 168 1 64 1 207 2 308 1 254 1 145 2 381 2 
291 1 71 1 240 1 100 1 42 1 191 1 324 1 275 1 7 1 232 1 330 1 9 1 77 1 160 1 145 1 
350 1 291 1 71 1 240 1 42 1 324 1 275 1 7 1 232 1 330 1 8 1 9 1 77 1 160 1 145 1 
222 2 55 1 81 2 155 1 156 1 111 1 264 2 38 1 67 2 195 1 115 1 320 1 94 1 238 1 99 1 300 1 273 1 168 2 246 1 149 1 202 1 284 4 308 2 187 1 
88 1 82 1 207 1 42 1 272 1 204 1 145 1 381 1 
121 1 336 1 42 5 272 4 122 1 64 1 7 1 126 1 207 4 252 1 311 1 254 2 145 5 381 5 
54 1 88 1 207 2 42 2 204 1 272 2 145 2 381 2 
331 1 144 1 
331 1 144 1 
208 1 243 1 
208 1 243 1 
208 1 243 1 
331 1 144 1 349 1 
331 1 144 1 349 1 
331 1 144 1 312 1 
331 2 208 1 243 1 347 1 31 1 144 2 
331 1 144 1 349 1 
331 1 316 1 144 1 
331 1 316 1 144 1 
331 1 316 1 144 1 
337 2 270 2 166 1 245 3 226 1 315 1 376 1 201 2 281 2 331 2 36 2 249 2 319 1 203 2 221 1 161 1 347 1 144 2 237 1 
337 1 223 1 7 1 36 1 207 2 10 1 346 1 144 1 145 2 42 2 245 1 166 1 272 2 45 1 201 1 281 1 124 1 331 1 282 1 249 1 203 1 310 1 312 1 381 2 
131 1 356 1 307 1 
131 1 353 1 307 1 
356 2 131 3 353 1 293 1 159 1 339 1 
356 1 131 2 353 1 293 1 159 1 17 1 
356 1 131 2 353 1 293 1 159 2 
337 5 60 2 225 1 342 1 341 1 175 3 66 1 177 1 36 5 267 1 38 1 113 2 366 1 89 1 10 1 195 1 346 1 238 1 237 2 120 1 98 1 41 1 147 4 44 3 354 2 300 1 45 1 184 1 18 1 19 1 78 1 287 2 
337 9 359 1 60 6 342 3 341 1 175 8 176 1 6 5 177 2 34 1 263 5 36 9 157 1 37 1 267 3 38 3 113 6 366 1 89 1 195 3 346 4 238 3 237 5 242 1 98 2 41 6 147 7 44 9 300 3 184 1 18 2 304 1 19 2 78 2 287 6 
337 3 225 1 60 2 342 1 175 3 177 1 36 3 267 2 37 1 38 1 113 2 195 1 346 1 237 3 238 1 120 1 98 1 147 2 354 1 44 4 300 1 184 1 18 1 19 1 78 1 287 2 
337 4 60 4 225 1 342 2 175 5 176 1 177 1 34 1 36 4 157 1 267 3 37 1 38 2 113 4 195 2 346 2 237 4 238 2 120 1 98 1 147 3 44 7 354 2 300 2 184 1 18 1 19 1 78 1 287 4 
152 1 
240 1 302 1 
21 1 
291 1 240 1 
96 2 291 1 240 3 314 1 160 1 92 1 
291 1 240 1 160 1 
240 1 90 1 
299 1 99 3 352 1 133 1 246 2 217 1 194 1 264 4 35 1 38 1 284 7 67 3 334 2 68 1 379 1 238 1 288 1 
299 1 99 3 352 1 133 1 246 2 217 1 194 1 264 4 35 1 38 1 284 7 67 3 334 2 68 1 379 1 238 1 288 1 
299 1 99 3 352 1 133 1 246 2 301 1 217 1 194 1 264 4 35 1 38 1 284 7 67 3 334 2 68 1 379 1 238 1 288 1 
222 2 205 1 28 1 133 1 29 1 61 1 342 3 136 3 194 2 364 1 264 16 35 1 38 4 67 15 195 3 320 1 68 5 238 4 321 1 299 2 352 2 99 10 373 4 300 3 273 1 246 5 217 1 149 1 284 31 187 1 334 3 188 1 379 2 288 1 
222 4 133 1 61 1 194 1 264 5 35 1 38 1 67 4 320 2 68 1 367 1 238 1 299 1 352 1 99 4 273 2 246 3 149 2 75 1 284 9 187 2 334 2 379 1 288 1 
0 1 153 1 131 2 1 1 154 1 27 1 362 1 339 1 258 2 230 1 9 1 40 1 69 1 163 1 353 1 324 1 103 1 14 1 275 1 378 2 356 1 330 1 107 1 307 1 248 1 219 1 50 1 77 1 285 1 358 1 
153 1 131 2 1 1 27 1 338 1 362 1 339 1 258 3 230 1 32 1 179 1 9 1 40 1 163 1 353 1 324 1 103 1 14 1 275 1 378 3 356 1 330 1 107 1 307 1 248 1 219 1 50 1 77 1 285 2 358 1 
131 2 1 1 27 1 338 1 362 1 339 1 258 2 32 1 9 1 40 1 163 1 353 1 324 1 103 1 275 1 378 2 356 1 330 1 107 1 307 1 248 1 219 1 50 1 77 1 285 2 
291 1 153 1 1 2 340 1 258 1 179 1 9 1 141 1 40 2 118 1 71 1 240 1 212 1 324 1 216 1 14 1 275 1 276 1 378 1 330 1 219 2 77 1 50 2 
163 1 153 1 131 2 353 1 1 1 154 1 324 1 27 1 339 1 230 1 258 1 14 1 32 1 275 1 378 1 356 1 330 1 307 1 248 1 9 1 219 1 77 1 40 1 50 1 69 1 358 1 
167 1 
291 1 53 1 336 1 189 2 337 5 192 1 2 1 63 2 341 3 112 1 9 2 236 1 118 1 237 2 348 2 71 2 240 1 165 4 72 1 18 1 19 1 306 1 127 2 77 2 78 1 82 1 26 1 83 1 175 2 178 2 177 1 180 1 36 5 88 1 267 2 89 1 145 1 323 2 41 6 212 1 42 1 44 2 324 1 183 1 326 1 184 1 275 1 279 1 105 1 283 2 330 2 220 1 109 1 287 2 381 1 
336 1 189 1 165 2 337 3 41 2 72 1 82 1 83 1 42 1 2 1 183 1 326 1 341 1 279 1 105 1 343 1 88 1 36 3 220 1 109 1 145 1 381 1 
336 1 337 3 82 1 83 1 2 1 341 1 343 1 36 3 88 1 145 1 237 1 165 3 41 1 72 1 323 1 42 1 183 1 326 1 184 1 279 1 105 1 220 1 109 1 381 1 
336 1 189 1 165 3 337 3 323 1 41 2 72 1 82 1 83 1 42 1 2 1 183 1 326 1 341 1 184 1 279 1 105 1 343 1 88 1 36 3 220 1 109 1 237 1 145 1 348 1 381 1 
336 1 189 4 337 5 2 1 341 3 63 2 343 1 112 1 296 1 196 1 237 5 348 4 165 6 72 1 13 1 19 1 127 2 78 1 173 1 82 1 83 1 175 1 177 1 178 2 88 1 36 5 180 1 267 2 89 1 145 1 41 7 323 4 42 1 183 1 326 1 184 5 279 1 105 1 283 2 220 1 109 1 380 1 287 1 381 1 
336 1 337 4 189 2 2 1 63 2 341 2 112 1 237 2 348 2 165 4 72 1 19 1 306 1 127 2 78 1 82 1 83 1 175 1 177 1 178 2 88 1 36 4 180 1 267 2 89 1 145 1 41 4 323 2 42 1 44 2 183 1 326 1 184 1 279 1 105 1 283 2 220 1 109 1 287 1 381 1 
336 1 189 2 337 4 82 1 83 1 2 1 341 2 63 2 175 1 178 2 177 1 180 1 36 4 88 1 267 2 112 1 89 1 296 1 237 1 145 1 348 2 165 4 323 2 41 4 72 1 13 1 42 1 183 1 326 1 184 1 279 1 105 1 19 1 283 2 127 2 220 1 78 1 109 1 287 1 380 1 381 1 
336 1 189 2 337 4 82 1 83 1 2 1 341 2 63 2 175 1 178 2 177 1 180 1 36 4 88 1 267 2 112 1 89 1 296 1 237 1 145 1 348 2 165 4 323 2 41 4 72 1 13 1 42 1 183 1 326 1 184 1 279 1 105 1 19 1 283 2 127 2 220 1 78 1 109 1 287 1 380 1 381 1 
336 1 189 2 337 4 82 1 83 1 85 2 2 1 341 2 175 1 178 2 177 1 180 1 36 4 88 1 140 1 89 1 297 1 237 1 145 1 348 2 165 4 323 2 41 4 72 1 13 1 42 1 44 2 200 1 183 1 326 1 184 1 303 2 279 1 105 1 19 1 127 2 220 1 78 1 109 1 287 1 381 1 
336 1 173 1 337 4 189 3 82 1 83 1 2 1 341 2 63 2 175 1 178 2 177 1 180 1 36 4 88 1 267 2 112 1 89 1 296 1 237 1 145 1 348 3 165 5 72 1 41 5 323 3 13 1 42 1 183 1 326 1 184 1 279 1 105 1 19 1 283 2 127 2 220 1 78 1 109 1 287 1 380 1 381 1 
336 1 173 1 337 4 189 3 82 1 83 1 2 1 341 2 63 2 175 1 178 2 177 1 180 1 36 4 88 1 267 2 112 1 89 1 296 1 237 1 145 1 348 3 165 5 72 1 41 5 323 3 13 1 42 1 183 1 326 1 184 1 279 1 105 1 19 1 283 2 127 2 220 1 78 1 109 1 287 1 380 1 381 1 
336 1 337 4 189 2 2 1 341 2 237 1 348 2 165 4 72 1 303 2 19 1 306 1 127 2 78 1 82 1 83 1 85 2 175 1 177 1 178 2 88 1 36 4 180 1 140 1 89 1 145 1 41 4 323 2 42 1 44 2 183 1 326 1 184 1 279 1 105 1 220 1 109 1 287 1 381 1 
222 2 202 1 187 1 273 1 115 1 320 1 94 1 152 1 149 1 
222 4 81 11 205 1 29 1 30 1 229 1 342 2 136 3 7 1 87 1 264 8 38 1 209 1 67 6 195 1 68 1 116 1 320 2 94 1 238 2 99 2 373 3 300 2 273 2 168 4 246 1 74 1 149 2 202 2 106 1 284 14 308 11 187 2 
291 1 222 2 191 1 229 1 110 1 7 1 232 1 264 1 207 1 9 1 209 1 160 1 67 1 320 1 94 1 145 2 121 1 240 1 71 1 241 1 100 1 42 2 324 1 273 1 272 1 168 1 275 1 149 1 278 1 202 1 106 1 330 1 76 1 284 2 187 1 77 1 254 1 381 1 
291 2 222 6 191 2 229 1 342 2 7 2 194 1 232 2 345 1 158 1 9 3 67 10 160 2 195 2 68 4 238 3 121 1 351 1 71 1 240 2 300 2 168 7 246 4 202 3 170 2 308 7 77 3 254 1 81 7 132 2 133 1 32 1 206 2 264 10 35 1 265 2 207 1 38 3 209 1 320 3 94 3 145 3 100 2 99 8 42 3 324 2 272 1 273 3 275 2 149 3 106 1 150 2 330 3 284 20 187 3 334 1 379 1 288 1 381 1 
291 2 0 1 222 4 84 1 32 1 264 1 207 1 9 8 209 1 67 1 115 1 320 2 94 2 118 1 145 1 369 2 164 1 240 3 71 2 212 1 42 1 324 2 325 1 213 1 374 1 272 1 273 2 275 2 149 2 202 2 106 1 330 7 171 1 284 2 129 1 187 2 77 8 254 1 381 1 
222 2 81 1 229 1 342 1 64 1 193 1 264 1 207 1 38 1 67 2 195 1 320 1 94 1 145 1 238 1 99 1 42 1 300 1 122 1 273 1 272 1 168 1 246 1 149 1 202 1 284 3 308 1 187 1 381 1 
222 2 99 1 81 1 155 1 300 1 273 1 168 1 149 1 202 1 264 2 284 2 308 1 187 1 115 1 68 1 320 1 94 1 238 1 
222 2 99 1 81 1 273 1 168 1 246 1 149 1 156 1 202 1 284 2 38 1 308 1 187 1 67 2 115 1 195 1 320 1 94 1 
222 2 81 2 342 1 264 2 38 1 67 2 115 1 195 1 320 1 68 1 94 1 238 1 99 2 300 1 273 1 168 2 246 1 149 1 202 1 284 4 308 2 187 1 
222 2 99 1 81 1 213 1 155 1 300 1 273 1 168 1 149 1 202 1 264 2 284 2 308 1 187 1 68 1 320 1 94 1 238 1 
222 2 99 1 81 1 213 1 273 1 168 1 246 1 149 1 156 1 202 1 284 2 38 1 308 1 187 1 67 2 195 1 320 1 94 1 
222 2 81 2 342 1 264 2 38 1 67 2 195 1 320 1 68 1 94 1 238 1 99 2 213 1 300 1 273 1 168 2 246 1 149 1 202 1 284 4 308 2 187 1 
222 2 81 2 342 1 264 2 38 1 67 2 195 1 320 1 68 1 94 1 238 1 99 2 300 1 273 1 168 2 246 1 149 1 202 1 284 4 308 2 187 1 
291 1 222 2 191 1 7 1 232 1 264 1 265 1 9 1 209 1 160 1 67 1 320 1 94 1 145 1 71 1 240 1 100 1 42 1 324 1 273 1 275 1 149 1 202 1 106 1 330 1 284 2 187 1 77 1 
291 1 222 2 7 1 232 1 264 1 8 1 9 1 209 1 160 1 67 1 320 1 94 1 145 1 350 1 71 1 240 1 42 1 324 1 273 1 275 1 149 1 169 1 202 1 106 1 330 1 284 2 187 1 77 1 
222 2 81 2 342 1 229 1 264 2 38 1 67 2 195 1 320 1 68 1 94 1 238 1 99 2 300 1 273 1 168 2 246 1 149 1 202 1 284 4 308 2 187 1 
291 1 0 1 222 2 81 2 191 1 342 1 232 1 264 2 265 1 38 1 9 1 67 2 160 1 195 1 68 1 320 1 94 1 238 1 145 1 240 1 99 2 100 1 42 1 324 1 300 1 273 1 168 2 246 1 275 1 149 1 202 1 150 1 330 1 284 4 308 2 187 1 77 1 
222 2 81 1 229 1 342 1 64 1 264 2 207 1 38 1 67 1 195 1 68 1 320 1 94 1 145 1 238 1 99 1 42 1 300 1 122 1 273 1 272 1 168 1 149 1 202 1 284 3 308 1 187 1 286 1 381 1 
222 6 61 1 342 4 228 2 194 1 344 1 67 21 195 4 68 4 238 5 300 4 246 4 75 1 357 1 172 1 80 1 23 1 205 1 29 3 133 1 136 3 262 1 264 20 317 1 35 1 38 5 142 1 320 3 371 1 99 8 373 4 214 4 273 3 46 1 149 3 327 1 47 1 186 1 284 41 187 3 334 1 379 1 288 1 
222 8 205 1 133 1 29 3 61 2 228 2 342 4 136 3 262 1 194 1 317 1 264 20 35 1 344 1 38 4 67 18 195 3 320 4 142 1 68 3 238 5 371 1 99 7 373 4 214 4 300 4 273 4 46 1 246 4 327 1 149 4 47 1 75 1 186 1 284 38 357 1 187 4 334 1 172 1 379 1 80 1 23 1 288 1 
222 4 205 2 133 1 29 2 61 1 228 1 342 7 136 4 262 1 194 1 317 1 264 27 35 1 344 1 38 8 67 25 195 7 116 2 320 2 142 1 68 7 238 8 371 1 99 14 373 4 214 4 300 7 273 2 246 7 327 1 149 2 47 1 75 1 186 1 284 52 187 2 334 1 172 1 379 1 80 1 23 1 288 1 
222 4 205 1 29 1 134 1 228 1 342 3 136 1 264 9 344 1 38 3 67 10 195 3 320 2 142 1 68 3 238 3 99 6 373 2 214 2 300 3 273 2 246 3 149 2 75 1 186 1 284 19 357 1 187 2 172 1 23 2 
222 6 29 2 61 2 228 2 342 3 136 2 262 1 317 1 264 14 344 1 38 2 67 12 195 2 68 2 320 3 142 1 238 3 371 1 99 4 373 2 214 4 300 3 273 3 246 2 149 3 327 1 75 1 47 1 186 2 284 26 187 3 172 1 80 1 23 1 
97 1 281 1 331 1 249 1 203 1 226 1 315 1 347 1 201 1 144 1 
310 1 312 1 
86 1 281 1 331 1 199 1 249 1 203 1 201 1 144 1 355 1 
337 1 270 1 166 1 245 2 226 1 315 1 376 1 201 1 281 1 36 1 331 1 249 1 203 1 221 1 161 1 347 1 144 1 237 1 
337 1 270 1 166 1 245 2 226 1 315 1 376 1 201 1 281 1 36 1 331 1 249 1 203 1 221 1 161 1 347 1 144 1 237 1 
337 1 270 1 166 1 245 2 226 1 315 1 376 1 201 1 281 1 36 1 331 1 249 1 203 1 221 1 161 1 347 1 144 1 237 1 
329 1 31 1 349 1 
329 1 31 1 349 1 
224 1 316 1 
224 1 31 1 316 1 
223 1 124 1 
337 1 223 1 7 1 36 1 207 2 10 1 346 1 144 1 145 2 270 1 147 1 42 2 245 1 45 1 272 2 376 1 201 1 281 1 124 1 331 1 282 1 249 1 203 1 52 1 310 1 312 1 381 2 
329 1 349 1 
224 1 31 1 316 1 
291 1 222 2 62 1 229 1 65 1 365 1 264 1 9 2 39 1 209 1 67 1 320 1 117 1 94 1 145 2 369 2 240 1 164 1 42 2 324 1 273 1 275 1 149 1 202 1 106 1 171 1 330 2 284 2 187 1 77 2 381 2 
0 1 131 2 353 1 324 1 27 1 339 1 295 1 230 1 32 1 275 1 138 1 356 1 330 2 218 1 307 1 248 1 9 2 77 2 50 1 
131 2 353 1 324 1 27 1 339 1 230 1 32 1 275 1 261 1 356 1 330 1 218 1 307 1 248 1 9 1 77 1 50 1 
291 1 240 1 71 1 212 1 324 1 295 1 275 1 330 1 9 1 141 1 77 1 50 1 91 1 118 1 
131 2 353 1 324 1 27 1 339 1 295 1 230 1 32 1 275 1 138 1 356 1 330 1 218 1 307 1 248 1 9 1 77 1 50 1 
59 1 
152 1 
337 1 63 1 341 1 175 1 177 1 36 1 267 1 112 1 89 1 237 2 41 1 44 1 184 1 19 1 283 1 78 1 287 1 
291 3 0 1 53 1 337 5 60 6 341 3 342 2 113 6 9 3 234 1 160 3 195 2 237 8 238 2 298 1 240 10 71 1 72 2 300 2 302 3 18 2 19 4 125 2 251 1 77 3 78 4 79 2 22 1 255 2 24 2 259 2 175 9 206 2 33 2 177 4 36 5 267 6 38 2 89 4 90 2 92 1 268 2 96 2 146 1 41 5 372 2 324 3 44 12 184 2 275 4 330 3 108 1 51 1 287 8 
53 1 337 1 60 5 29 1 341 1 342 2 259 1 136 1 175 8 33 2 262 1 177 2 317 1 36 1 267 3 113 5 38 2 89 2 195 2 237 5 238 2 371 1 41 1 44 6 373 1 300 2 184 2 274 1 377 1 327 1 18 1 47 1 19 2 78 2 287 5 
54 1 337 1 3 1 259 1 175 2 33 2 177 1 194 1 88 1 36 1 35 1 207 1 38 1 89 1 210 1 145 1 238 2 42 1 122 1 272 1 19 1 78 1 379 1 380 1 287 2 335 1 289 1 381 1 
298 1 184 1 175 1 177 1 19 1 89 1 234 1 78 1 287 1 237 1 
60 5 44 10 300 2 342 2 259 1 206 1 175 5 33 2 267 5 113 5 38 2 195 2 287 5 238 2 237 5 
337 1 41 1 36 1 341 1 184 1 237 1 
291 1 53 2 337 3 292 1 26 1 192 1 341 2 175 2 177 2 139 1 36 3 37 1 89 1 9 4 118 1 146 2 240 1 71 2 41 4 212 1 324 1 275 1 18 2 19 2 330 4 108 1 77 4 78 2 287 2 
291 1 222 2 191 1 3 1 260 1 7 1 232 1 265 1 207 2 209 1 9 1 67 1 160 1 320 1 94 1 145 3 71 1 240 1 100 1 42 3 324 1 273 1 272 2 122 2 275 1 149 1 202 1 330 1 284 1 187 1 77 1 381 2 
53 1 60 2 44 4 184 2 175 1 18 1 177 1 19 1 267 2 113 2 89 1 334 1 78 1 287 2 237 4 
130 1 203 1 201 1 
130 1 203 1 201 1 
124 1 203 1 226 1 227 1 201 1 
130 1 203 1 201 1 
318 1 203 1 201 1 
318 1 203 1 201 1 
318 1 203 1 201 1 
203 1 201 1 
331 1 144 1 
222 2 29 1 133 1 136 1 194 1 264 4 35 1 38 1 67 4 320 1 238 1 371 1 99 2 373 1 273 1 246 2 149 1 75 1 284 8 187 1 334 1 379 1 288 1 
222 4 205 1 133 1 29 1 342 1 136 1 194 1 264 6 35 1 38 1 67 5 320 2 68 1 238 2 371 1 99 3 373 2 300 1 273 2 246 2 149 2 75 1 284 11 187 2 333 1 334 1 379 1 288 1 
222 6 133 1 29 1 61 1 342 2 136 1 262 1 194 1 264 9 317 1 35 1 38 3 67 10 195 2 68 1 320 3 238 3 371 1 99 4 373 1 300 2 273 3 246 3 149 3 327 1 75 1 47 1 284 19 333 1 187 3 334 1 379 1 288 1 
222 6 133 1 29 1 61 1 342 2 136 1 262 1 194 1 264 10 317 1 35 1 38 2 67 7 195 1 68 2 320 3 238 3 371 1 99 5 373 1 300 2 273 3 246 3 149 3 327 1 75 1 47 1 284 17 333 1 187 3 334 1 379 1 288 1 
222 2 29 1 133 1 136 1 194 1 264 4 35 1 38 1 67 4 320 1 238 1 371 1 99 2 373 1 273 1 246 2 149 1 75 1 284 8 187 1 334 1 379 1 288 1 
222 2 29 1 342 2 136 1 262 1 264 6 317 1 38 2 67 6 195 2 68 1 320 1 238 2 371 1 99 2 373 1 300 2 273 1 246 1 149 1 327 1 75 1 47 1 284 12 187 1 
222 8 133 1 29 1 61 2 342 2 136 1 262 1 194 1 317 1 264 10 35 1 38 2 67 8 195 1 68 2 320 4 238 3 371 1 99 5 373 1 300 2 273 4 246 3 149 4 327 1 75 1 47 1 284 18 333 1 187 4 334 1 379 1 288 1 
222 8 29 1 61 2 342 3 136 1 262 1 317 1 264 9 38 2 67 7 195 2 68 3 320 4 238 3 371 1 99 6 373 1 300 3 273 4 246 3 149 4 327 1 75 1 47 1 284 16 357 1 187 4 
99 6 133 1 246 3 194 3 264 3 35 1 38 1 284 7 67 4 68 3 379 3 288 2 238 1 
222 8 133 1 29 1 61 2 342 2 136 1 262 1 194 1 317 1 264 10 35 1 38 2 67 8 195 1 68 1 320 4 238 3 371 1 99 4 373 1 300 2 273 4 246 3 149 4 327 1 75 1 47 1 284 18 357 1 187 4 334 1 379 1 288 1 
222 4 99 3 133 1 273 2 61 1 246 2 149 2 194 1 264 4 35 1 38 1 284 8 187 2 334 1 67 4 68 1 320 2 379 1 238 1 288 1 
152 1 
222 2 99 2 300 1 273 1 342 1 246 1 149 1 264 2 38 1 284 4 333 1 187 1 67 2 195 1 320 1 68 1 238 1 
99 2 373 2 205 1 29 1 300 1 342 1 136 1 246 1 264 3 38 1 284 7 67 4 195 1 68 1 238 1 
222 4 257 1 205 1 133 1 61 2 342 2 136 2 194 2 264 11 35 1 38 3 67 12 195 2 68 4 116 1 320 2 238 3 99 9 373 2 300 2 273 2 74 1 246 5 149 2 284 23 187 2 334 1 379 2 288 1 
284 1 373 1 67 1 
264 1 284 1 136 1 
222 2 99 3 300 1 273 1 342 1 206 1 246 2 149 1 264 3 284 6 38 1 187 1 333 1 67 3 195 1 320 1 68 1 238 1 
222 2 29 1 342 2 136 1 262 1 264 6 317 1 38 2 67 6 195 2 68 1 320 1 238 2 371 1 99 2 373 1 300 2 273 1 246 1 149 1 327 1 75 1 47 1 284 12 187 1 
99 2 246 1 194 1 264 3 35 1 284 6 38 1 67 3 68 1 379 1 238 1 
222 2 99 2 257 1 133 1 61 1 273 1 246 1 149 1 194 1 264 1 284 3 187 1 67 2 68 1 320 1 379 1 288 1 
222 2 99 5 273 1 246 3 149 1 75 1 194 2 264 5 35 1 284 10 38 2 187 1 67 5 320 1 68 2 379 2 335 1 238 2 
222 2 99 1 300 1 273 1 149 1 75 1 264 2 284 2 187 1 320 1 68 1 238 1 
222 2 99 2 300 1 273 1 342 1 246 1 149 1 75 1 264 2 38 1 284 4 187 1 67 2 195 1 320 1 68 1 238 1 
222 6 99 2 257 1 61 1 273 3 246 1 149 3 75 1 194 1 264 1 284 3 357 1 187 3 67 2 320 3 68 1 379 1 
222 10 257 1 205 1 133 1 29 1 61 2 342 3 136 3 194 3 364 1 264 16 35 2 38 5 67 18 195 3 320 5 68 5 238 5 321 1 99 12 373 4 300 3 273 5 246 7 149 5 75 1 284 34 357 1 333 1 187 5 334 1 188 1 379 3 288 1 
7 1 336 1 57 1 42 1 252 1 145 1 381 1 
336 1 370 1 57 1 181 1 42 1 102 1 7 1 280 1 252 1 235 1 145 1 381 1 
71 1 330 1 9 1 77 1 152 1 
291 1 240 1 71 1 42 2 191 1 324 1 272 1 275 1 7 1 232 1 330 1 207 1 9 1 160 1 77 1 254 1 145 2 381 1 
291 2 146 1 240 3 82 1 42 2 191 1 324 1 2 1 272 2 275 1 7 1 232 1 88 1 330 1 207 1 9 1 90 1 160 2 77 1 254 1 145 2 268 1 381 2 
291 2 82 1 2 1 7 1 232 1 8 1 88 1 207 1 9 2 160 2 90 1 145 2 268 1 146 1 240 3 148 1 42 2 324 1 272 2 275 1 330 2 77 2 254 1 381 2 
291 1 96 1 146 1 71 1 337 2 240 4 72 1 41 1 148 1 324 1 184 1 275 1 302 1 185 1 36 2 330 3 250 1 9 3 90 1 160 1 77 3 237 1 268 1 
291 1 96 1 146 1 71 1 337 2 240 4 72 1 41 1 148 1 324 1 184 1 275 1 302 1 36 2 330 3 9 3 90 1 160 1 77 3 237 1 268 1 24 1 
330 1 324 1 9 1 129 1 77 1 275 1 
368 1 291 2 369 1 0 1 164 1 71 2 240 3 84 1 324 2 325 1 374 1 32 1 5 1 275 3 330 6 9 7 129 1 77 7 160 1 211 1 92 1 
291 1 222 4 0 1 81 1 191 1 133 1 229 1 65 1 7 2 194 1 232 1 264 3 35 1 265 1 207 1 38 1 9 1 67 3 160 1 320 2 94 2 238 1 145 2 240 1 99 2 100 1 42 2 324 1 273 2 272 1 168 1 246 2 275 1 149 2 202 2 170 1 150 1 330 1 284 6 308 1 187 2 334 1 77 1 379 1 254 1 288 1 381 1 
337 3 341 1 175 1 177 2 36 3 9 1 89 2 234 1 237 1 298 1 96 1 71 1 240 2 41 2 72 1 147 1 372 1 184 1 302 1 19 2 330 1 108 1 77 1 78 2 79 1 287 1 255 1 24 1 
96 1 291 1 0 1 240 2 324 1 275 2 330 2 9 2 251 1 129 1 77 2 160 1 92 1 
291 1 0 1 71 1 240 1 148 1 212 1 324 1 275 1 277 1 330 4 9 4 77 4 118 1 
368 1 12 1 291 1 146 1 351 1 240 1 324 1 215 1 5 1 275 2 330 2 9 2 77 2 160 1 
71 1 131 1 353 1 330 1 307 1 248 1 324 1 9 1 77 1 275 1 
291 1 0 1 240 1 164 1 365 1 330 2 324 1 9 2 77 2 32 1 275 1 
291 2 146 1 0 1 71 1 164 1 240 3 212 1 84 1 324 2 325 1 275 2 277 1 330 4 9 5 77 5 118 1 
291 2 146 1 0 1 71 1 164 1 240 3 212 1 324 2 325 1 15 1 275 2 277 1 330 4 9 5 77 5 118 1 
291 1 240 1 71 1 42 2 324 1 272 1 275 1 7 1 232 1 330 1 8 1 207 1 9 1 160 1 77 1 254 1 145 2 381 1 
368 1 291 1 146 1 240 1 324 1 5 1 275 2 330 1 9 1 77 1 160 1 211 1 92 1 
190 1 42 1 62 1 135 1 39 1 117 1 145 1 70 1 381 1 
48 1 135 1 119 1 
7 1 190 1 135 1 16 1 70 1 
337 2 72 1 190 2 82 1 147 1 2 1 183 1 135 1 184 1 16 2 231 1 7 1 48 1 88 1 36 2 266 1 119 1 237 1 70 2 
152 1 
378 1 153 1 107 1 362 1 258 1 103 1 14 1 
378 1 1 1 219 1 
153 1 360 1 362 1 258 3 14 1 103 1 378 3 305 2 247 1 107 1 69 1 239 1 
363 1 378 2 153 1 107 1 362 1 258 2 103 1 285 1 14 1 
197 1 378 1 153 1 131 1 356 1 58 1 307 1 362 1 258 1 14 1 69 1 
378 1 153 1 107 1 362 1 258 1 14 1 69 1 
378 1 153 1 107 2 258 1 103 1 14 1 69 1 
378 2 153 2 56 1 107 1 233 1 43 1 362 1 258 2 14 2 69 1 
290 1 153 1 269 1 58 1 362 2 258 3 103 1 14 1 104 1 378 3 107 1 69 1 285 2 
153 1 131 2 353 1 362 1 339 1 258 2 103 1 14 1 137 1 378 2 356 1 107 1 307 1 69 1 285 1 
322 1 153 2 269 1 58 1 362 2 258 4 103 1 14 2 363 1 378 4 107 1 69 1 285 2 
378 1 153 1 107 1 362 1 258 1 103 1 14 1 69 1 
153 1 269 1 58 1 362 3 258 4 103 2 14 1 378 4 305 1 49 1 247 1 107 2 285 2 239 1 
153 1 362 1 271 1 258 2 14 1 4 1 103 1 378 2 107 1 332 1 69 1 285 1 
378 3 153 1 305 2 107 1 247 2 362 1 258 3 103 1 14 1 69 1 93 1 239 1 
328 1 174 2 309 1 362 2 
378 1 153 1 20 1 258 1 14 1 69 1 
290 1 378 2 153 1 107 1 362 1 258 2 103 1 285 1 14 1 69 1 
244 1 
378 1 153 1 107 1 362 1 258 1 103 1 14 1 69 1 
290 1 153 1 362 1 258 3 14 1 103 1 378 3 305 1 107 1 285 1 69 1 
269 1 49 1 58 1 362 1 
107 1 362 1 

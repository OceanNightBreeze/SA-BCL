#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 239 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
195 1 76 1 197 6 225 1 327 2 368 2 304 4 82 2 232 5 114 1 87 1 172 2 208 1 336 9 244 1 179 2 315 2 120 3 340 1 67 1 317 1 294 1 69 9 191 1 70 1 220 1 319 2 271 1 
195 1 76 1 197 6 225 1 327 2 368 2 304 4 82 2 232 5 114 1 87 1 172 2 208 1 336 9 244 1 179 2 315 2 120 3 340 1 67 1 317 1 294 1 69 9 191 1 70 1 220 1 319 2 271 1 
195 1 76 1 197 7 225 1 327 2 368 2 304 5 82 2 232 6 114 1 87 1 172 2 208 1 336 10 244 1 179 2 315 2 120 4 340 1 67 1 317 1 294 1 69 10 191 1 70 1 220 1 319 2 271 1 
195 1 76 1 197 4 225 1 327 2 368 2 304 3 82 2 232 4 114 1 87 1 172 2 336 7 244 1 179 2 315 2 120 2 340 1 67 1 317 1 294 1 69 7 191 1 70 1 220 1 319 1 271 1 
336 4 76 1 244 1 197 3 315 1 120 1 225 1 327 1 67 1 368 1 304 2 69 4 82 1 232 3 87 1 319 2 172 1 208 1 
336 2 76 1 315 1 179 1 225 1 327 1 317 1 368 1 229 1 69 2 232 1 161 1 144 1 114 1 87 1 172 1 
336 3 76 1 197 1 315 2 179 1 120 1 225 1 327 2 304 1 69 3 220 1 232 2 87 1 
76 1 197 7 365 1 225 1 327 2 368 1 304 4 82 1 232 5 87 1 172 1 208 1 118 1 336 9 244 1 179 1 315 2 120 3 340 1 67 1 69 9 191 1 220 1 319 2 
76 1 197 7 365 1 225 1 327 2 368 1 304 4 82 1 232 5 87 1 172 1 208 1 118 1 336 9 244 1 179 1 315 2 120 3 340 1 67 1 69 9 191 1 220 1 319 2 
111 1 142 1 239 1 
8 2 142 1 258 1 
19 2 252 2 363 2 284 1 202 2 306 2 214 2 59 1 
252 3 363 3 3 1 224 1 366 1 59 1 280 2 281 2 129 2 282 1 284 1 201 1 202 2 330 1 306 2 37 1 331 1 154 1 372 1 263 1 63 1 88 1 117 2 14 1 292 2 376 1 177 1 214 2 44 1 245 1 19 2 268 1 50 1 49 1 221 1 73 1 361 1 
19 1 217 1 252 1 363 1 284 1 202 1 306 1 192 1 155 1 214 1 
374 1 164 1 363 1 252 1 99 1 214 1 215 1 187 1 111 1 190 1 256 1 192 1 142 1 234 1 
374 1 164 2 363 1 252 1 99 1 214 1 215 2 19 1 111 1 190 1 202 1 306 1 256 1 192 1 142 1 
164 1 40 1 137 1 105 1 215 1 
164 2 111 1 137 1 219 1 142 1 105 1 33 1 215 2 
164 1 105 1 215 1 
164 1 363 1 252 1 137 1 155 1 214 1 215 1 19 1 217 1 284 1 202 1 306 1 192 1 146 1 
142 1 
164 2 111 1 137 1 219 1 142 1 105 1 115 1 215 2 
164 5 137 2 32 2 105 2 107 1 293 1 316 2 215 5 157 1 45 1 111 1 267 1 296 1 219 1 379 1 142 1 133 1 238 1 348 2 
59 1 239 1 
363 2 252 2 214 2 181 1 59 2 19 1 202 1 306 1 347 1 
185 1 277 1 66 1 
252 1 363 1 292 1 177 1 3 1 366 1 59 1 280 1 282 1 129 1 268 1 331 1 147 1 372 1 73 1 361 1 
363 2 252 2 292 1 66 1 177 1 16 1 3 1 214 1 366 1 280 1 19 1 282 1 129 1 268 1 202 1 331 1 372 1 236 1 73 1 361 1 
363 5 252 5 16 1 214 5 77 1 181 1 59 1 19 4 230 1 202 4 306 1 234 1 236 2 380 1 
19 2 217 1 252 2 363 2 202 2 192 1 178 1 214 2 
19 3 252 3 363 3 202 3 306 1 214 3 236 1 59 1 
19 1 217 1 252 1 363 1 202 1 192 1 214 1 
19 1 252 1 363 1 202 1 306 1 192 1 214 1 181 1 347 1 
164 1 55 1 252 4 363 4 99 1 3 1 366 1 59 1 280 1 281 1 282 1 129 1 284 1 202 3 306 2 256 1 331 1 154 1 372 1 236 1 263 1 63 1 88 1 117 2 374 1 14 1 292 1 376 1 177 1 16 1 214 3 181 1 43 1 215 1 245 1 19 3 268 1 190 1 192 1 50 1 49 1 221 1 73 1 361 1 
19 1 252 2 363 2 202 1 234 1 214 2 77 1 236 1 59 1 
164 1 374 1 363 3 252 3 99 1 16 1 214 3 181 1 43 1 215 1 184 1 19 3 190 1 202 3 306 1 256 1 192 1 142 1 236 2 
363 2 252 2 66 1 214 2 181 1 185 1 19 2 202 2 306 1 236 1 
252 1 363 1 292 1 177 1 3 1 366 1 59 1 280 1 282 1 129 1 268 1 331 1 372 1 361 1 73 1 
252 1 363 1 292 1 177 1 3 1 366 1 59 1 280 1 282 1 129 1 110 1 96 1 372 1 361 1 73 1 
88 1 117 2 264 1 136 1 277 1 66 1 376 1 185 1 281 2 128 1 158 1 169 1 50 2 49 1 84 1 221 1 307 1 263 1 63 1 
374 1 19 1 252 1 363 1 202 1 192 1 178 1 214 1 
109 1 103 1 
109 1 103 1 
203 1 356 1 
203 1 356 1 
203 1 356 1 
274 1 109 1 103 1 
274 1 109 1 103 1 
109 1 103 1 332 1 
109 2 21 1 103 2 337 1 203 1 356 1 
274 1 109 1 103 1 
109 1 103 1 42 1 
109 1 103 1 42 1 
109 1 103 1 42 1 
164 1 125 1 276 1 363 2 252 2 103 1 78 1 325 1 59 1 199 1 109 1 305 1 202 2 112 1 168 1 231 1 332 1 132 1 375 1 214 2 215 1 19 2 92 1 24 1 
164 2 276 3 375 2 351 1 103 2 291 1 338 1 106 1 358 2 57 1 303 1 215 2 109 2 21 1 305 1 168 2 112 2 142 1 132 2 
368 1 82 1 172 1 
368 1 229 1 172 1 
368 3 229 1 188 1 213 1 82 2 270 1 
368 2 229 1 213 1 82 1 270 1 357 1 
368 2 229 1 213 2 82 1 270 1 
164 5 352 1 167 2 32 1 105 1 107 1 78 1 325 1 8 3 228 1 283 2 111 1 84 1 258 1 334 1 265 1 137 4 377 1 316 1 215 5 157 3 46 2 158 1 296 2 219 1 24 1 142 2 95 1 360 1 272 1 348 1 250 1 
164 9 352 3 167 6 166 1 32 2 105 6 107 1 151 1 8 9 9 1 111 1 35 1 84 3 258 3 211 5 40 5 241 1 313 1 265 1 137 7 293 1 377 3 316 2 215 9 157 8 46 6 158 3 296 6 24 4 219 1 142 5 95 2 360 3 348 2 250 2 
164 3 352 1 32 1 167 2 8 4 111 1 283 1 84 1 258 2 334 1 137 2 293 1 377 1 316 1 215 3 157 3 46 2 158 1 296 2 24 1 142 3 95 1 272 1 360 1 348 1 250 1 
164 4 352 2 167 4 32 1 151 1 8 7 9 1 111 1 283 2 35 1 84 2 258 3 334 1 137 3 293 1 377 2 316 1 215 4 157 5 46 4 158 2 296 4 24 2 142 4 95 1 272 1 360 2 348 1 250 1 
233 1 73 1 239 1 
204 1 73 1 
261 1 
366 1 372 1 73 1 
312 1 73 1 
366 1 73 1 
28 1 233 2 298 1 366 1 372 1 73 3 
74 1 64 1 136 2 289 1 224 4 226 1 281 7 158 1 218 1 287 1 378 2 50 3 62 1 153 1 307 3 162 1 360 1 
74 1 64 1 136 2 289 1 224 4 226 1 281 7 158 1 218 1 287 1 378 2 50 3 62 1 153 1 307 3 162 1 360 1 
74 1 64 1 136 2 289 1 138 1 224 4 226 1 281 7 158 1 218 1 287 1 378 2 50 3 62 1 153 1 307 3 162 1 360 1 
74 2 275 1 352 3 254 1 224 16 108 1 226 1 281 31 287 2 84 3 62 5 153 1 307 10 263 1 310 1 88 1 117 2 64 1 136 5 289 2 376 1 377 3 295 3 246 4 158 4 218 2 318 1 378 3 49 1 50 15 71 1 162 1 360 4 149 1 
74 1 224 5 281 9 287 1 62 1 307 4 153 1 263 2 88 2 117 4 64 1 136 3 41 1 289 1 376 2 183 1 158 1 218 1 318 1 378 2 49 2 50 4 162 1 360 1 
194 1 349 1 251 1 76 1 197 1 5 1 225 1 280 1 327 1 368 2 129 1 229 1 152 1 82 1 232 1 85 1 170 1 87 1 172 1 116 1 336 2 292 1 177 1 339 1 315 1 179 1 188 1 69 2 159 1 361 1 
194 1 349 1 251 1 31 1 197 2 5 1 225 1 280 1 327 1 368 2 129 1 229 1 82 1 232 1 85 1 170 1 87 1 172 1 135 1 116 1 336 3 292 1 177 1 315 1 179 1 188 1 69 3 159 1 148 1 361 1 
194 1 349 1 197 2 5 1 225 1 280 1 368 2 129 1 229 1 82 1 232 1 85 1 170 1 87 1 172 1 135 1 116 1 336 2 292 1 177 1 179 1 188 1 69 2 148 1 361 1 
212 1 349 2 336 1 31 1 292 1 314 1 177 1 179 2 315 1 366 1 5 2 327 1 280 1 353 1 343 1 282 1 129 1 69 1 355 1 25 1 170 2 361 1 73 1 
194 1 349 1 251 1 76 1 5 1 280 1 327 1 368 2 129 1 229 1 152 1 82 1 85 1 170 1 172 1 116 1 336 1 292 1 177 1 315 1 179 1 188 1 69 1 159 1 148 1 361 1 
156 1 
350 1 252 1 99 1 105 6 107 1 58 1 8 2 111 1 256 1 258 2 308 1 206 1 314 1 214 1 316 1 215 5 157 2 266 1 219 3 160 1 163 2 73 1 361 1 362 2 164 5 29 2 363 1 364 1 321 1 32 1 324 2 366 1 280 2 282 2 129 2 234 1 86 2 235 1 237 4 374 1 292 2 177 1 182 2 343 1 187 1 190 1 47 1 94 1 296 2 48 2 192 1 142 2 95 1 52 1 348 1 
374 1 164 3 350 1 363 1 252 1 99 1 321 1 105 2 214 1 58 1 182 1 215 3 266 1 187 1 190 1 256 1 219 1 192 1 234 1 115 1 52 1 237 2 
374 1 164 3 350 1 363 1 252 1 99 1 321 1 105 1 214 1 58 1 215 3 266 1 187 1 111 1 190 1 256 1 219 1 192 1 142 1 234 1 86 1 115 1 52 1 237 3 
164 3 350 1 252 1 363 1 99 1 321 1 105 2 58 1 111 1 256 1 234 1 86 1 115 1 237 3 374 1 214 1 215 3 182 1 187 1 266 1 190 1 48 1 219 1 192 1 142 1 52 1 
350 1 252 1 99 1 105 7 107 1 58 1 111 5 256 1 258 2 115 1 308 1 214 1 316 1 215 5 157 1 266 1 219 3 163 2 164 5 362 2 29 2 363 1 321 1 32 1 324 2 127 1 81 1 286 1 234 1 86 4 237 6 374 1 182 4 187 1 190 1 47 1 296 1 48 4 192 1 142 5 247 1 97 1 52 1 348 1 
362 2 164 4 29 2 350 1 363 1 252 1 99 1 321 1 32 1 105 4 107 1 324 2 58 1 8 2 111 1 256 1 258 2 234 1 86 2 308 1 237 4 374 1 214 1 316 1 182 2 215 4 157 1 187 1 266 1 190 1 47 1 94 1 296 1 48 2 219 2 192 1 142 2 52 1 163 2 348 1 
362 2 164 4 29 2 350 1 252 1 363 1 99 1 321 1 32 1 105 4 107 1 324 2 58 1 127 1 111 1 256 1 286 1 258 2 234 1 86 2 308 1 237 4 374 1 214 1 316 1 182 2 215 4 157 1 187 1 266 1 47 1 190 1 296 1 48 2 219 2 192 1 142 1 247 1 52 1 163 2 348 1 
362 2 164 4 29 2 350 1 252 1 363 1 99 1 321 1 32 1 105 4 107 1 324 2 58 1 127 1 111 1 256 1 286 1 258 2 234 1 86 2 308 1 237 4 374 1 214 1 316 1 182 2 215 4 157 1 187 1 266 1 47 1 190 1 296 1 48 2 219 2 192 1 142 1 247 1 52 1 163 2 348 1 
362 2 164 4 29 2 30 2 350 1 252 1 363 1 99 1 321 1 32 1 105 4 107 1 58 1 255 2 127 1 8 2 111 1 256 1 36 1 234 1 86 2 370 1 308 1 237 4 374 1 214 1 316 1 182 2 215 4 342 1 157 1 187 1 266 1 190 1 296 1 48 2 219 2 192 1 142 1 52 1 348 1 
362 2 164 4 29 2 350 1 252 1 363 1 99 1 321 1 32 1 105 5 107 1 324 2 58 1 127 1 81 1 111 1 286 1 256 1 258 2 234 1 86 3 308 1 237 5 374 1 214 1 316 1 215 4 182 3 157 1 187 1 266 1 47 1 190 1 296 1 48 3 219 2 192 1 142 1 247 1 52 1 163 2 348 1 
362 2 164 4 29 2 350 1 252 1 363 1 99 1 321 1 32 1 105 5 107 1 324 2 58 1 127 1 81 1 111 1 286 1 256 1 258 2 234 1 86 3 308 1 237 5 374 1 214 1 316 1 215 4 182 3 157 1 187 1 266 1 47 1 190 1 296 1 48 3 219 2 192 1 142 1 247 1 52 1 163 2 348 1 
362 2 164 4 29 2 30 2 350 1 363 1 252 1 99 1 321 1 32 1 105 4 107 1 58 1 255 2 8 2 111 1 256 1 234 1 86 2 308 1 237 4 374 1 214 1 316 1 182 2 215 4 342 1 157 1 187 1 266 1 190 1 94 1 296 1 48 2 219 2 192 1 142 1 52 1 348 1 
74 1 277 1 224 3 59 2 281 6 169 1 287 1 307 2 153 1 263 1 239 1 63 1 88 1 117 2 64 1 136 2 66 1 376 1 185 1 158 1 378 1 49 1 50 3 221 1 162 1 360 1 
300 1 275 2 277 13 352 3 224 10 108 1 59 1 281 17 11 1 201 1 84 1 62 2 307 2 263 2 63 2 88 2 117 4 376 2 66 13 119 1 377 3 185 3 245 1 295 3 158 1 246 4 50 7 49 2 221 1 320 1 269 1 360 3 
252 2 363 2 126 1 3 1 224 1 366 1 59 1 280 1 281 2 129 1 282 1 202 1 201 1 331 1 372 1 236 1 263 1 63 1 88 1 117 2 292 1 376 1 177 1 119 1 16 1 214 1 185 1 186 1 19 1 245 1 268 1 22 1 49 1 50 1 221 1 147 1 73 1 361 1 
252 2 352 1 150 1 3 1 202 1 113 1 62 2 307 2 154 1 263 2 63 2 117 4 66 2 119 1 16 1 214 1 19 1 268 1 221 2 72 1 360 1 361 1 73 1 363 2 277 2 34 1 224 3 366 1 280 1 281 5 129 1 282 1 331 1 236 1 372 1 88 2 292 1 376 2 177 1 377 1 185 2 245 1 50 2 49 2 193 1 
165 1 252 1 363 1 224 1 366 2 280 8 281 2 129 8 282 2 202 1 201 1 257 1 169 1 37 2 171 1 236 1 263 2 63 2 88 2 210 1 240 1 117 4 292 7 376 2 314 1 177 2 339 1 180 1 214 1 19 1 245 1 343 1 49 2 50 1 248 1 221 2 148 1 361 2 73 3 
363 1 252 1 277 1 352 1 224 1 281 3 202 1 306 1 84 1 307 1 263 1 63 1 88 1 117 2 136 1 66 1 376 1 119 1 377 1 214 1 181 1 185 1 90 1 19 1 158 1 49 1 50 2 221 1 360 1 
88 1 117 2 277 1 66 1 376 1 377 1 224 2 185 1 281 2 227 1 169 1 49 1 62 1 221 1 307 1 263 1 360 1 63 1 
88 1 117 2 264 1 136 1 277 1 66 1 376 1 185 1 281 2 158 1 169 1 49 1 84 1 50 2 221 1 307 1 263 1 63 1 
277 2 352 1 224 2 281 4 169 1 84 1 62 1 307 2 263 1 63 1 88 1 117 2 136 1 376 1 66 2 377 1 185 2 158 1 49 1 50 2 221 1 360 1 
210 1 88 1 117 2 277 1 66 1 376 1 377 1 224 2 185 1 281 2 227 1 49 1 62 1 221 1 307 1 263 1 360 1 63 1 
210 1 88 1 117 2 264 1 136 1 277 1 66 1 376 1 185 1 281 2 158 1 49 1 84 1 50 2 221 1 307 1 263 1 63 1 
210 1 88 1 117 2 277 1 352 1 66 1 376 1 377 1 224 2 185 1 281 2 49 1 62 1 221 1 307 1 263 1 360 1 63 1 
88 1 117 2 277 1 352 1 66 1 376 1 377 1 224 2 185 1 281 2 49 1 62 1 221 1 307 1 263 1 360 1 63 1 
363 1 252 1 3 1 224 1 366 1 59 1 280 1 281 2 129 1 282 1 201 1 331 1 154 1 372 1 263 1 63 1 88 1 117 2 292 1 376 1 177 1 245 1 268 1 49 1 50 1 221 1 361 1 73 1 
363 1 252 1 3 1 224 1 366 1 59 1 280 1 281 2 110 1 129 1 282 1 201 1 372 1 263 1 63 1 88 1 117 2 292 1 376 1 177 1 68 1 245 1 49 1 50 1 96 1 221 1 361 1 73 1 
88 1 117 2 277 1 352 1 66 1 376 1 119 1 377 1 224 2 185 1 281 2 49 1 62 1 221 1 307 1 263 1 360 1 63 1 
363 1 252 1 277 1 352 1 3 1 150 1 224 2 366 1 280 1 281 2 129 1 331 1 62 1 307 1 154 1 372 1 263 1 63 1 88 1 117 2 292 1 66 1 376 1 177 1 377 1 339 1 185 1 268 1 49 1 221 1 360 1 361 1 73 1 
363 1 252 1 277 1 352 1 224 2 281 2 202 1 306 1 62 1 307 1 263 1 63 1 88 1 117 2 376 1 66 1 119 1 377 1 214 1 181 1 185 1 19 1 297 1 49 1 221 1 360 1 
273 1 275 1 102 1 196 1 352 3 224 9 108 1 326 1 6 2 281 19 84 3 62 3 307 6 262 2 263 2 88 2 117 4 136 3 41 1 376 2 377 3 121 1 295 1 246 2 158 3 124 1 49 2 50 10 222 1 360 3 
273 1 102 2 196 1 352 3 224 14 108 2 6 1 326 1 281 26 369 1 84 2 62 2 38 1 307 4 262 4 134 1 263 3 88 3 117 6 136 2 41 1 376 3 377 3 122 1 295 2 158 2 246 2 318 2 141 1 143 1 50 12 124 2 49 3 360 3 
196 1 102 1 352 4 108 3 6 1 62 4 307 8 153 1 262 4 263 3 117 6 64 1 121 1 122 1 158 5 318 1 124 2 162 1 360 5 273 1 74 1 275 1 224 20 326 1 281 41 369 1 287 1 84 4 38 1 134 1 88 3 136 4 41 1 376 3 377 4 295 3 246 4 141 1 378 1 50 21 49 3 143 1 249 1 
273 1 74 1 275 1 102 1 196 1 352 4 224 20 108 3 6 1 326 1 281 38 369 1 287 1 84 3 38 1 62 3 153 1 307 7 262 4 134 1 263 4 88 4 117 8 64 1 136 4 41 1 376 4 377 4 121 1 122 1 295 3 246 4 158 4 318 2 141 1 378 1 143 1 124 2 49 4 50 18 249 1 162 1 360 5 
273 1 74 1 275 2 102 1 196 1 352 7 224 27 108 2 6 1 326 1 281 52 369 1 287 1 84 7 38 1 62 7 153 1 307 14 262 4 134 1 263 2 88 2 117 4 64 1 136 7 41 1 376 2 377 7 122 1 295 4 246 4 158 8 318 1 141 1 378 1 143 1 124 1 49 2 50 25 162 1 320 2 360 8 
301 1 109 1 21 1 112 1 168 1 375 1 351 1 103 1 106 1 132 1 
332 1 199 1 
109 1 65 1 242 1 112 1 168 1 375 1 103 1 83 1 132 1 
274 1 93 1 
337 1 42 1 104 1 
164 1 276 2 375 1 351 1 103 1 291 1 106 1 358 1 57 1 303 1 215 1 109 1 21 1 305 1 168 1 112 1 142 1 132 1 
164 1 276 2 375 1 351 1 103 1 291 1 106 1 358 1 57 1 303 1 215 1 109 1 21 1 305 1 168 1 112 1 142 1 132 1 
164 1 276 2 375 1 351 1 103 1 291 1 106 1 358 1 57 1 303 1 215 1 109 1 21 1 305 1 168 1 112 1 142 1 132 1 
274 1 93 1 337 1 
274 1 93 1 337 1 
42 1 104 1 
337 1 42 1 104 1 
125 1 92 1 
164 1 125 1 252 2 363 2 276 1 103 1 303 1 78 1 325 1 59 1 199 1 109 1 112 1 168 1 231 1 202 2 332 1 132 1 375 1 137 1 358 1 214 2 215 1 19 2 92 1 24 1 346 1 
252 2 363 2 278 1 2 1 224 1 366 1 280 2 200 1 281 2 129 2 201 1 257 1 37 2 205 1 171 1 263 1 63 1 88 1 117 2 290 1 292 2 376 1 177 1 119 1 214 2 245 1 49 1 50 1 221 1 361 1 73 1 
194 1 349 1 251 1 223 1 0 1 292 2 177 1 339 1 280 2 368 2 229 1 129 2 188 1 82 1 85 1 172 1 148 1 361 1 98 1 
194 1 349 1 251 1 100 1 292 1 177 1 280 1 368 2 229 1 129 1 188 1 82 1 85 1 172 1 148 1 98 1 361 1 
212 1 349 1 223 1 292 1 314 1 177 1 366 1 280 1 343 1 282 1 129 1 371 1 361 1 73 1 
194 1 349 1 251 1 223 1 0 1 292 1 177 1 280 1 368 2 229 1 129 1 188 1 82 1 85 1 172 1 148 1 98 1 361 1 
285 1 
157 1 111 1 267 1 296 1 142 1 238 1 239 1 
164 1 32 1 105 1 107 1 324 1 8 1 111 1 258 1 316 1 215 1 157 1 47 1 296 1 219 1 142 2 163 1 348 1 
253 2 101 1 352 2 198 2 105 5 107 4 7 2 8 12 111 2 256 2 258 6 204 3 206 1 209 1 312 2 15 2 316 4 215 5 157 9 123 1 20 2 267 1 158 2 219 3 72 2 360 2 361 3 73 10 164 5 32 4 167 6 366 3 280 3 282 1 129 3 329 2 233 2 84 2 288 1 238 1 372 3 373 2 173 1 292 3 177 4 339 1 377 2 46 6 296 8 345 2 298 1 95 2 142 8 348 4 
164 1 352 2 167 5 32 2 105 1 198 2 107 2 108 1 79 1 8 6 369 1 111 2 258 3 84 2 38 1 206 1 373 1 377 2 316 2 215 1 157 8 122 1 295 1 46 5 246 1 296 5 158 2 344 1 219 1 141 1 95 1 143 1 142 5 360 2 348 2 
74 1 164 1 252 1 363 1 32 1 198 2 107 1 284 1 202 1 286 1 306 1 287 1 153 1 373 1 155 1 214 1 316 1 215 1 157 2 19 1 217 1 140 1 296 2 158 1 192 1 146 1 360 2 348 1 
32 1 107 1 316 1 157 1 267 1 111 1 296 1 142 1 238 1 348 1 
352 2 167 5 198 2 377 2 8 10 157 5 46 5 296 5 158 2 258 5 142 5 84 2 72 1 360 2 373 1 
164 1 111 1 219 1 142 1 105 1 215 1 
164 3 364 1 279 1 32 2 105 4 107 1 366 1 280 4 129 4 282 2 206 2 209 1 292 4 314 1 177 1 293 1 316 2 215 3 157 2 343 1 91 1 123 2 296 2 219 2 160 1 95 2 361 1 73 1 348 2 
252 3 363 3 3 1 366 1 59 1 280 1 281 1 129 1 282 1 284 1 202 2 306 2 331 1 154 1 372 1 263 1 63 1 88 1 117 2 14 1 292 1 376 1 177 1 214 2 245 1 19 2 268 1 50 1 49 1 221 1 361 1 73 1 
167 2 32 1 107 1 316 1 8 4 157 1 46 2 111 2 296 2 378 1 258 2 95 1 142 4 206 1 348 1 
112 1 168 1 56 1 
112 1 168 1 56 1 
92 1 112 1 168 1 351 1 13 1 
112 1 168 1 56 1 
354 1 112 1 168 1 
354 1 112 1 168 1 
354 1 112 1 168 1 
112 1 168 1 
109 1 103 1 
88 2 117 4 74 1 64 1 136 2 376 2 224 4 281 8 158 1 318 1 378 1 287 1 50 4 49 2 62 1 153 1 307 3 162 1 360 1 263 2 
74 1 64 1 136 2 224 3 281 6 158 1 378 1 287 1 50 3 307 2 153 1 162 1 360 1 239 1 
88 1 117 2 136 1 352 1 376 1 377 1 224 2 281 4 158 1 50 2 84 1 61 1 49 1 62 1 307 2 263 1 360 1 
275 1 136 1 352 1 377 1 224 3 108 1 281 7 295 1 158 1 246 2 84 1 50 4 62 1 307 2 360 1 
74 2 275 1 352 2 224 11 281 23 131 1 287 2 84 2 62 4 153 1 307 9 263 2 88 2 117 4 64 1 136 5 376 2 377 2 295 2 246 2 158 3 318 2 378 1 50 12 49 2 162 1 269 1 320 1 360 3 
281 1 246 1 50 1 
281 1 295 1 224 1 
88 1 117 2 136 2 352 1 376 1 377 1 224 3 281 6 158 1 49 1 61 1 50 3 84 1 72 1 62 1 307 3 263 1 360 1 
352 2 224 6 108 1 281 12 369 1 84 2 62 1 38 1 307 2 263 1 88 1 117 2 136 1 41 1 376 1 377 2 122 1 295 1 246 1 158 2 141 1 50 6 49 1 143 1 360 2 
74 1 136 1 224 3 281 6 158 1 287 1 50 3 62 1 153 1 307 2 360 1 
88 1 74 1 117 2 64 1 136 1 376 1 224 1 281 3 131 1 318 1 287 1 50 2 49 1 62 1 307 2 162 1 263 1 
88 1 117 2 74 2 136 3 41 1 376 1 224 5 281 10 140 1 158 2 287 2 49 1 50 5 62 2 307 5 153 1 263 1 360 2 
88 1 117 2 41 1 376 1 377 1 224 2 281 2 49 1 62 1 307 1 263 1 360 1 
88 1 117 2 136 1 41 1 352 1 376 1 377 1 224 2 281 4 158 1 50 2 84 1 49 1 62 1 307 2 263 1 360 1 
88 3 117 6 74 1 136 1 41 1 376 3 224 1 121 1 281 3 131 1 318 1 287 1 50 2 49 3 62 1 307 2 263 3 
74 3 275 1 352 3 254 1 224 16 108 1 281 34 131 1 287 3 61 1 84 3 62 5 153 2 307 12 263 5 310 1 88 5 117 10 64 1 136 7 41 1 376 5 377 3 121 1 295 3 246 4 158 5 318 2 378 1 50 18 49 5 162 1 360 5 149 1 
74 1 224 4 108 1 281 8 369 1 287 1 307 2 153 1 263 1 88 1 117 2 64 1 136 2 41 1 376 1 295 1 158 1 246 1 378 1 50 4 49 1 162 1 360 1 
74 1 275 1 352 1 224 6 108 1 281 11 369 1 287 1 61 1 62 1 153 1 307 3 263 2 88 2 117 4 64 1 136 2 41 1 376 2 377 1 295 1 158 1 246 2 378 1 50 5 49 2 162 1 360 2 
74 1 352 2 224 9 108 1 281 19 369 1 287 1 61 1 84 2 62 1 38 1 153 1 307 4 263 3 88 3 117 6 64 1 136 3 41 1 376 3 377 2 122 1 295 1 246 1 158 3 318 1 141 1 378 1 143 1 50 10 49 3 162 1 360 3 
74 1 352 2 224 10 108 1 281 17 369 1 287 1 61 1 84 1 62 2 38 1 153 1 307 5 263 3 88 3 117 6 64 1 136 3 41 1 376 3 377 2 122 1 295 1 246 1 158 2 318 1 141 1 378 1 50 7 49 3 143 1 162 1 360 3 
74 1 224 4 108 1 281 8 369 1 287 1 307 2 153 1 263 1 88 1 117 2 64 1 136 2 41 1 376 1 295 1 158 1 246 1 378 1 50 4 49 1 162 1 360 1 
352 2 224 6 108 1 281 12 369 1 84 2 62 1 38 1 307 2 263 1 88 1 117 2 136 1 41 1 376 1 377 2 122 1 295 1 246 1 158 2 141 1 50 6 49 1 143 1 360 2 
74 1 352 2 224 10 108 1 281 18 369 1 287 1 61 1 84 1 62 2 38 1 153 1 307 5 263 4 88 4 117 8 64 1 136 3 41 1 376 4 377 2 122 1 295 1 246 1 158 2 318 2 141 1 378 1 143 1 50 8 49 4 162 1 360 3 
352 3 224 9 108 1 281 16 369 1 84 2 62 3 38 1 307 6 263 4 88 4 117 8 136 3 41 1 376 4 377 3 121 1 122 1 295 1 246 1 158 2 318 2 141 1 143 1 50 7 49 4 360 3 
74 3 64 2 136 3 224 3 281 7 158 1 287 3 50 4 62 3 307 6 153 1 162 1 360 1 
74 1 352 2 224 10 108 1 281 18 369 1 287 1 84 1 62 1 38 1 153 1 307 4 263 4 88 4 117 8 64 1 136 3 41 1 376 4 377 2 121 1 122 1 295 1 246 1 158 2 318 2 141 1 378 1 143 1 50 8 49 4 162 1 360 3 
252 1 363 1 12 1 234 1 214 1 77 1 59 1 
335 1 363 1 252 1 302 1 214 1 77 1 59 1 80 1 139 1 12 1 234 1 53 1 
343 1 129 1 282 1 292 1 314 1 177 1 366 1 280 1 361 1 73 1 239 1 
363 2 252 2 292 1 177 1 3 1 214 1 366 1 59 1 280 1 19 1 282 1 129 1 202 1 331 1 372 1 236 1 73 1 361 1 
252 2 363 2 253 1 99 1 3 1 366 2 59 1 280 1 129 1 202 1 331 1 236 1 372 2 374 1 312 1 292 1 177 1 214 2 19 2 123 1 192 1 361 1 73 3 
252 2 363 2 253 1 99 1 3 1 4 1 366 2 59 1 280 2 110 1 129 2 202 1 236 1 372 2 374 1 312 1 292 2 177 1 214 2 19 2 123 1 192 1 361 1 73 3 
164 2 253 1 105 1 4 1 366 1 280 3 129 3 282 1 111 1 256 1 233 1 204 1 372 1 312 1 292 3 177 1 215 2 123 1 359 1 142 1 51 1 361 1 73 4 
164 2 312 1 253 1 292 3 177 1 105 1 4 1 366 1 280 3 215 2 282 1 123 1 129 3 329 1 111 1 256 1 233 1 142 1 204 1 372 1 73 4 361 1 
129 1 165 1 292 1 177 1 280 1 361 1 
240 1 165 1 75 1 292 6 89 1 177 3 339 1 180 1 366 2 280 7 282 2 129 7 257 1 37 1 298 1 248 1 148 1 309 1 372 1 73 3 361 2 
252 2 150 1 3 1 59 3 202 1 62 1 307 5 153 2 154 1 263 2 63 2 117 4 64 1 66 1 119 1 214 1 19 1 268 1 158 3 221 2 162 1 360 3 361 1 73 1 74 2 363 2 278 1 277 1 34 1 224 7 366 1 280 1 281 14 129 1 331 1 287 2 236 1 372 1 88 2 136 4 176 1 292 1 376 2 177 1 339 1 185 1 140 1 192 1 378 1 49 2 50 7 
164 3 32 2 105 2 107 2 280 1 7 1 282 1 129 1 329 1 111 1 256 1 233 1 204 1 238 1 209 1 15 1 137 1 292 1 316 2 215 3 157 1 267 1 296 1 345 1 219 1 142 1 348 2 73 2 
165 1 173 1 292 2 177 2 339 1 366 1 280 2 129 2 233 1 298 1 372 1 73 2 361 1 
292 4 314 1 177 1 339 1 4 1 366 1 280 4 343 1 282 1 129 4 260 1 73 1 361 1 
292 2 323 1 89 1 177 2 366 1 280 2 123 1 129 2 23 1 309 1 372 1 54 1 73 1 361 1 
368 1 229 1 129 1 282 1 292 1 177 1 85 1 172 1 280 1 361 1 
129 2 257 1 290 1 292 2 177 1 339 1 366 1 148 1 280 2 361 1 73 1 
240 1 292 4 314 1 177 2 339 1 180 1 366 2 280 5 343 1 123 1 282 1 129 5 257 1 260 1 73 3 361 2 
240 1 292 4 314 1 177 2 339 1 366 2 280 5 343 1 123 1 282 1 129 5 60 1 257 1 260 1 73 3 361 2 
363 2 252 2 292 1 177 1 3 1 214 1 366 1 59 1 280 1 19 1 282 1 129 1 110 1 202 1 372 1 236 1 73 1 361 1 
75 1 292 1 89 1 177 2 366 1 280 1 123 1 129 1 298 1 309 1 372 1 73 1 361 1 
311 1 174 1 39 1 259 1 59 1 
374 1 164 2 174 1 175 1 311 2 99 1 137 1 322 1 59 1 43 1 215 2 111 1 190 1 256 1 192 1 142 1 26 1 39 2 259 2 
174 1 363 1 252 1 2 1 214 1 200 1 39 1 259 1 205 1 
175 1 174 1 322 1 
232 1 87 1 225 1 239 1 
336 1 69 1 232 1 87 1 315 1 225 1 327 1 
69 1 170 1 179 1 
336 3 76 1 243 1 315 1 327 1 225 1 317 2 130 1 69 3 299 1 232 1 87 1 
336 2 69 2 232 1 197 1 87 1 319 1 315 1 225 1 327 1 
336 1 76 1 315 1 327 1 67 1 368 1 304 1 69 1 82 1 232 1 172 1 
336 1 69 1 76 1 232 1 315 1 225 1 327 1 
336 1 69 1 76 1 87 1 315 1 225 2 327 1 
336 2 76 1 315 2 225 1 327 2 341 1 10 1 69 2 232 1 207 1 
336 3 76 1 197 2 315 1 340 1 120 1 225 1 327 1 304 1 69 3 191 1 232 2 87 1 
336 2 76 1 197 1 315 1 225 1 327 1 368 2 229 1 188 1 69 2 82 1 232 1 87 1 333 1 172 1 
336 4 76 1 197 2 315 2 120 1 225 1 327 2 304 1 69 4 232 2 87 1 319 1 208 1 
336 1 69 1 76 1 232 1 87 1 315 1 225 1 327 1 
336 4 243 1 197 2 315 1 18 1 120 1 225 2 327 1 317 1 130 1 304 1 69 4 232 3 87 2 
336 2 76 1 197 1 365 1 315 1 225 1 327 1 216 1 69 2 232 1 27 1 87 1 
328 1 317 2 130 1 336 3 69 3 243 2 76 1 232 1 87 1 315 1 225 1 327 1 
189 2 1 1 232 2 17 1 
367 1 336 1 69 1 76 1 315 1 327 1 
336 2 69 2 191 1 76 1 232 1 197 1 87 1 315 1 225 1 327 1 
145 1 
336 1 69 1 76 1 232 1 87 1 315 1 225 1 327 1 
336 3 76 1 197 1 315 1 327 1 225 1 317 1 69 3 191 1 232 1 87 1 
304 1 232 1 18 1 120 1 
232 1 225 1 

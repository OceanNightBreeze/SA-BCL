#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 17 (182,377) (182,377) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 17 (182,377) (182,377) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 17 (182,377) (182,377) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
17 1 81 7 335 2 141 1 104 1 264 3 144 1 270 2 8 4 115 1 298 1 174 1 201 1 95 1 182 1 372 1 325 7 305 1 377 1 73 3 183 2 51 2 134 2 75 2 36 2 
115 1 298 1 174 1 17 1 201 1 81 7 335 2 141 1 104 1 95 1 182 1 372 1 264 3 305 1 325 7 73 3 377 1 144 1 183 2 51 2 270 2 134 2 8 4 36 2 75 2 
115 1 298 1 174 1 17 1 201 1 81 7 335 2 141 1 104 1 95 1 182 1 372 1 264 3 305 1 325 7 73 3 377 1 144 1 183 2 51 2 270 2 134 2 8 4 36 2 75 2 
17 1 81 7 335 2 104 1 141 1 264 3 144 1 270 2 8 4 115 1 298 1 174 1 201 1 151 1 177 1 95 1 182 1 372 1 325 7 305 1 377 1 73 4 183 2 51 2 134 2 75 2 36 2 
115 1 17 1 151 1 81 4 177 1 335 1 141 2 372 1 264 2 325 4 73 3 51 1 270 1 134 1 8 3 189 1 36 1 75 1 
115 1 148 1 223 1 201 1 151 1 81 2 177 1 335 1 104 1 325 2 73 1 183 1 131 1 134 1 270 1 36 1 
115 1 151 1 81 3 177 1 335 2 264 1 325 3 73 2 144 1 183 1 51 1 134 2 8 1 
237 1 17 1 81 9 335 2 141 2 83 1 264 4 144 1 270 1 8 7 115 1 151 1 177 1 95 1 372 1 325 9 305 1 73 5 183 1 51 3 134 2 75 1 36 1 189 1 
237 1 17 1 81 9 335 2 141 2 83 1 264 4 144 1 270 1 8 7 115 1 151 1 177 1 95 1 372 1 325 9 305 1 73 5 183 1 51 3 134 2 75 1 36 1 189 1 
72 1 204 1 242 1 
72 1 60 2 243 1 
37 2 233 1 283 2 312 1 152 2 203 2 269 2 291 2 
37 2 357 1 331 2 136 2 359 2 312 1 240 1 107 1 143 2 291 2 269 2 67 1 343 2 251 1 114 1 199 1 9 1 224 1 12 1 11 1 119 1 178 1 152 3 203 3 28 1 30 1 278 1 31 1 233 1 50 1 234 1 328 1 283 2 282 1 184 1 379 1 356 1 
37 1 337 1 283 1 312 1 260 1 152 1 88 1 203 1 269 1 291 1 
37 1 116 1 80 1 152 1 204 1 203 1 38 1 244 1 70 1 304 1 71 1 337 1 72 1 268 1 
37 1 116 1 80 1 152 1 204 1 203 1 38 2 244 1 291 1 304 2 337 1 72 1 283 1 268 1 269 1 
304 1 23 1 120 1 38 1 310 1 
304 2 72 1 292 1 120 1 204 1 38 2 250 1 310 1 
304 1 38 1 310 1 
37 1 304 1 337 1 283 1 312 1 260 1 152 1 88 1 120 1 203 1 140 1 38 1 269 1 291 1 
72 1 
304 2 72 1 292 1 327 1 120 1 204 1 38 2 310 1 
46 1 221 1 365 1 147 1 222 2 200 1 274 1 101 1 120 2 204 1 38 5 27 2 290 1 84 2 304 5 72 1 292 1 271 1 310 2 
233 1 242 1 
37 2 152 2 203 2 291 1 233 2 375 1 63 1 283 1 269 1 
126 1 207 1 98 1 
331 1 357 1 136 1 152 1 240 1 203 1 278 1 233 1 50 1 282 1 328 1 379 1 86 1 343 1 356 1 114 1 
37 1 357 1 331 1 136 1 240 1 152 2 203 2 29 1 278 1 317 1 50 1 328 1 282 1 283 1 379 1 269 1 343 1 98 1 356 1 114 1 
37 5 209 1 152 5 203 5 29 2 291 1 70 1 317 1 233 1 375 1 283 4 235 1 269 4 188 1 
37 2 337 1 283 2 211 1 260 1 152 2 203 2 269 2 
37 3 233 1 283 3 152 3 203 3 269 3 29 1 291 1 
37 1 337 1 283 1 260 1 152 1 203 1 269 1 
37 1 337 1 375 1 63 1 283 1 152 1 203 1 269 1 291 1 
37 3 357 1 331 1 136 1 359 2 312 1 80 1 139 1 240 1 38 1 244 1 143 1 291 2 317 1 337 1 268 1 269 3 67 1 343 1 114 1 199 1 116 1 9 1 224 1 11 1 152 4 203 4 28 1 29 1 180 1 30 1 278 1 31 1 304 1 233 1 50 1 375 1 234 1 328 1 282 1 283 3 184 1 379 1 356 1 
70 1 37 2 233 1 283 1 152 2 203 2 269 1 188 1 29 1 
37 3 116 1 80 1 225 1 152 3 38 1 203 3 29 2 244 1 180 1 291 1 304 1 317 1 337 1 375 1 72 1 283 3 268 1 269 3 
37 2 126 1 375 1 283 2 152 2 203 2 269 2 29 1 98 1 291 1 
331 1 357 1 136 1 152 1 240 1 203 1 278 1 233 1 50 1 282 1 328 1 379 1 343 1 114 1 356 1 
191 1 331 1 357 1 136 1 152 1 203 1 233 1 50 1 326 1 282 1 328 1 379 1 343 1 114 1 356 1 
1 1 359 2 41 1 143 4 109 1 146 1 340 1 251 2 199 1 9 2 149 1 11 1 28 1 155 1 30 1 31 1 126 2 97 1 234 1 185 1 207 2 286 1 52 1 98 2 
37 1 337 1 283 1 211 1 268 1 152 1 203 1 269 1 
311 1 39 1 
311 1 39 1 
138 1 295 1 
138 1 295 1 
138 1 295 1 
311 1 39 1 167 1 
311 1 39 1 167 1 
311 1 300 1 39 1 
311 2 127 1 138 1 249 1 39 2 295 1 
311 1 39 1 167 1 
311 1 320 1 39 1 
311 1 320 1 39 1 
311 1 320 1 39 1 
37 2 311 1 210 1 333 1 38 1 39 1 44 1 216 1 269 2 219 1 168 1 296 1 68 1 69 1 300 1 152 2 203 2 48 1 368 1 350 1 304 1 233 1 283 2 307 1 
311 2 296 2 238 1 210 2 333 3 25 1 212 1 153 1 38 2 39 2 246 1 304 2 281 1 127 1 72 1 307 2 219 1 133 2 168 2 
270 1 36 1 75 1 
131 1 270 1 36 1 
360 1 131 1 135 1 323 1 75 2 36 3 
360 1 131 1 22 1 135 1 75 1 36 2 
360 2 131 1 135 1 75 1 36 2 
38 5 361 1 60 3 243 1 84 1 44 1 109 1 20 1 292 1 340 1 113 2 46 2 222 1 147 3 173 2 200 1 120 4 204 1 90 1 48 1 368 1 91 1 27 1 155 1 304 5 280 1 72 2 128 1 52 1 16 1 53 2 310 1 
0 1 101 1 38 9 60 9 243 3 84 2 109 3 292 1 340 3 113 6 342 5 46 6 23 5 222 2 147 8 173 6 200 1 47 1 120 7 48 4 204 1 90 2 91 3 321 1 27 2 155 3 254 1 304 9 280 1 72 5 128 2 129 1 52 3 310 6 76 1 
101 1 38 3 60 4 243 2 84 1 109 1 20 1 340 1 113 2 46 2 222 1 147 3 173 2 120 2 204 1 90 1 48 1 91 1 27 1 155 1 304 3 72 3 128 1 16 1 52 1 53 1 
0 1 101 1 38 4 60 7 243 3 84 1 109 2 20 1 340 2 113 4 46 4 222 1 147 5 173 4 47 1 120 3 204 1 90 1 48 2 91 2 27 1 155 2 304 4 72 4 128 1 16 1 52 2 53 2 76 1 
338 1 242 1 356 1 
232 1 356 1 
208 1 
357 1 328 1 356 1 
65 1 356 1 
328 1 356 1 
357 1 338 2 328 1 308 1 355 1 356 3 
9 3 149 2 314 1 155 1 231 1 143 7 265 1 373 2 267 1 109 1 7 1 185 3 306 1 165 1 218 1 251 4 35 1 
9 3 149 2 314 1 155 1 231 1 143 7 265 1 373 2 267 1 109 1 7 1 185 3 306 1 165 1 218 1 251 4 35 1 
9 3 149 2 314 1 155 1 231 1 143 7 265 1 373 2 267 1 109 1 7 1 185 3 306 1 159 1 165 1 218 1 251 4 35 1 
359 2 241 1 314 1 143 31 43 1 265 2 267 1 109 4 7 2 340 3 165 1 21 3 196 1 218 1 251 16 9 15 24 1 149 5 150 4 176 1 11 1 91 3 155 4 231 5 30 1 322 1 31 1 373 3 234 1 306 2 185 10 52 3 330 1 35 2 
359 4 314 1 143 9 43 1 265 1 267 1 109 1 7 1 165 1 251 5 9 4 149 3 11 2 155 1 231 1 276 1 30 2 31 2 373 2 96 1 234 2 185 4 306 1 35 1 
331 1 136 1 77 1 81 2 335 1 262 1 4 1 339 1 270 1 343 1 169 1 8 1 115 1 345 1 175 1 151 1 177 1 121 1 323 1 50 1 32 1 325 2 73 1 74 1 183 1 282 1 131 1 134 1 75 1 36 2 
190 1 331 1 136 1 77 1 81 3 335 1 4 1 339 1 270 1 343 1 169 1 8 2 345 1 175 1 151 1 177 1 323 1 352 1 50 1 32 1 325 3 73 1 74 1 183 1 282 1 157 1 131 1 134 1 75 1 36 2 
190 1 331 1 136 1 77 1 81 2 4 1 339 1 343 1 270 1 8 2 175 1 151 1 177 1 323 1 50 1 32 1 325 2 73 1 183 1 74 1 282 1 157 1 131 1 36 2 75 1 
331 1 136 1 78 1 192 1 81 1 289 1 335 1 163 1 343 1 114 1 175 2 26 1 352 1 50 1 325 1 32 2 376 1 74 2 183 2 328 1 282 1 134 1 356 1 
190 1 331 1 136 1 77 1 81 1 335 1 262 1 4 1 339 1 270 1 343 1 169 1 115 1 345 1 175 1 323 1 50 1 32 1 325 1 74 1 183 1 282 1 131 1 134 1 75 1 36 2 
315 1 
37 1 331 2 136 2 332 1 79 2 80 1 38 5 336 2 243 2 244 1 247 2 84 1 248 4 193 1 337 1 292 3 195 1 343 2 45 1 46 2 147 2 200 1 152 1 204 1 301 2 203 1 302 1 154 1 255 1 304 5 50 1 15 1 310 6 356 1 58 1 261 1 59 2 60 2 163 1 111 2 268 1 114 2 222 1 116 1 26 1 227 1 27 1 179 2 371 1 70 1 71 1 72 2 328 1 128 1 282 1 
37 1 332 1 80 1 38 3 261 1 336 1 244 1 248 2 337 1 292 1 268 1 116 1 152 1 203 1 154 1 371 1 70 1 304 3 71 1 15 1 327 1 310 2 
37 1 332 1 79 1 80 1 38 3 261 1 244 1 248 3 337 1 292 1 268 1 116 1 152 1 203 1 204 1 154 1 371 1 70 1 304 3 71 1 72 1 15 1 327 1 310 1 
37 1 332 1 79 1 80 1 38 3 261 1 336 1 244 1 248 3 337 1 292 1 268 1 116 1 152 1 203 1 204 1 154 1 179 1 371 1 70 1 304 3 71 1 72 1 15 1 327 1 310 2 
37 1 332 1 79 4 80 1 38 5 336 4 243 2 244 1 248 6 84 1 247 2 337 1 292 3 46 1 147 1 200 1 152 1 203 1 204 5 301 2 302 1 154 1 304 5 15 1 310 7 261 1 59 2 318 1 266 1 111 2 268 1 117 1 116 1 222 1 227 1 27 1 369 1 179 4 371 1 70 1 71 1 72 5 327 1 132 1 
37 1 332 1 79 2 80 1 38 4 336 2 243 2 244 1 248 4 84 1 247 2 337 1 292 2 45 1 46 1 147 1 200 1 152 1 203 1 301 2 204 1 302 1 154 1 304 4 15 1 310 4 261 1 59 2 60 2 111 2 268 1 116 1 222 1 227 1 27 1 179 2 371 1 70 1 71 1 72 2 
37 1 332 1 79 2 80 1 38 4 336 2 261 1 59 2 243 2 244 1 247 2 248 4 84 1 318 1 337 1 266 1 292 2 111 2 268 1 46 1 147 1 116 1 222 1 200 1 152 1 204 1 301 2 203 1 302 1 227 1 27 1 154 1 179 2 371 1 70 1 304 4 71 1 72 1 15 1 132 1 310 4 
37 1 332 1 79 2 80 1 38 4 336 2 261 1 59 2 243 2 244 1 247 2 248 4 84 1 318 1 337 1 266 1 292 2 111 2 268 1 46 1 147 1 116 1 222 1 200 1 152 1 204 1 301 2 203 1 302 1 227 1 27 1 154 1 179 2 371 1 70 1 304 4 71 1 72 1 15 1 132 1 310 4 
37 1 332 1 79 2 80 1 288 1 38 4 336 2 261 1 60 2 244 1 247 2 248 4 84 1 318 1 337 1 292 2 110 2 111 2 268 1 272 1 46 1 147 1 116 1 222 1 200 1 152 1 204 1 203 1 89 1 302 1 27 1 154 1 179 2 371 1 70 1 304 4 71 1 72 1 156 2 15 1 310 4 
37 1 332 1 79 3 80 1 38 4 261 1 336 3 59 2 243 2 244 1 247 2 84 1 248 5 318 1 266 1 337 1 292 2 111 2 268 1 46 1 147 1 222 1 116 1 200 1 152 1 204 1 301 2 203 1 302 1 227 1 27 1 154 1 369 1 179 3 371 1 70 1 304 4 71 1 72 1 15 1 132 1 310 5 
37 1 332 1 79 3 80 1 38 4 261 1 336 3 59 2 243 2 244 1 247 2 84 1 248 5 318 1 266 1 337 1 292 2 111 2 268 1 46 1 147 1 222 1 116 1 200 1 152 1 204 1 301 2 203 1 302 1 227 1 27 1 154 1 369 1 179 3 371 1 70 1 304 4 71 1 72 1 15 1 132 1 310 5 
37 1 332 1 79 2 80 1 38 4 336 2 244 1 248 4 84 1 247 2 337 1 292 2 45 1 46 1 147 1 200 1 152 1 203 1 204 1 302 1 154 1 304 4 156 2 15 1 310 4 261 1 60 2 111 2 110 2 268 1 272 1 116 1 222 1 27 1 179 2 371 1 70 1 71 1 72 1 
359 2 314 1 242 1 143 6 265 1 267 1 109 1 146 1 165 1 251 3 199 1 9 3 149 2 11 1 28 1 155 1 30 1 31 1 373 1 126 1 233 2 234 1 306 1 185 2 207 1 98 1 
359 4 241 1 19 1 143 14 109 1 85 1 340 1 21 3 67 1 251 8 344 1 199 1 9 6 149 1 12 1 150 3 11 2 91 2 28 2 231 1 155 2 181 1 30 2 31 2 233 1 126 4 234 2 185 2 207 11 354 1 52 2 98 11 330 1 
37 1 258 1 359 2 18 1 19 1 143 2 317 1 337 1 269 1 67 1 251 1 199 1 9 1 11 1 12 1 152 1 203 1 28 1 29 1 30 1 31 1 233 1 126 1 234 1 283 1 256 1 378 1 
190 1 37 1 331 3 136 3 240 2 143 20 340 2 343 3 251 10 199 3 9 10 149 4 12 1 11 3 152 3 203 3 348 2 91 2 155 3 50 2 158 2 306 1 207 7 52 2 160 1 356 2 98 7 357 2 359 6 314 1 19 1 265 1 317 1 267 1 109 3 269 1 164 2 165 1 67 1 114 1 366 1 118 1 28 3 29 1 230 2 231 4 30 3 278 2 373 1 31 3 233 2 126 7 234 3 283 1 282 2 328 2 184 2 185 8 379 2 
190 1 37 1 331 8 57 1 136 7 359 4 42 1 214 1 143 2 5 1 163 1 146 1 269 1 67 1 343 8 251 1 114 2 171 1 199 2 273 1 9 1 11 2 12 1 152 1 178 2 26 1 121 1 203 1 28 2 29 1 30 2 31 2 50 2 234 2 283 1 282 2 328 2 130 1 356 3 
37 1 359 2 19 1 143 3 291 1 109 1 269 1 340 1 251 1 199 1 297 1 9 2 149 1 11 1 152 1 203 1 91 1 28 1 155 1 30 1 31 1 126 1 375 1 234 1 283 1 185 1 207 1 52 1 98 1 
199 1 359 2 11 1 28 1 231 1 155 1 143 2 30 1 31 1 126 1 234 1 185 1 207 1 146 1 286 1 52 1 251 2 98 1 
199 1 359 2 9 2 149 1 11 1 28 1 41 1 143 2 30 1 31 1 126 1 234 1 109 1 185 1 207 1 146 1 340 1 98 1 
359 2 143 4 109 1 146 1 340 1 251 2 199 1 9 2 149 1 11 1 91 1 28 1 155 1 231 1 30 1 31 1 126 2 234 1 185 2 207 2 52 1 98 2 
199 1 359 2 11 1 28 1 231 1 155 1 143 2 30 1 31 1 126 1 5 1 234 1 185 1 207 1 286 1 52 1 251 2 98 1 
199 1 359 2 9 2 149 1 11 1 28 1 41 1 143 2 30 1 31 1 126 1 5 1 234 1 109 1 185 1 207 1 340 1 98 1 
359 2 143 4 5 1 109 1 340 1 251 2 199 1 9 2 149 1 11 1 91 1 28 1 155 1 231 1 30 1 31 1 126 2 234 1 185 2 207 2 52 1 98 2 
199 1 9 2 359 2 149 1 11 1 91 1 28 1 231 1 155 1 30 1 143 4 31 1 126 2 109 1 234 1 185 2 207 2 340 1 52 1 251 2 98 2 
357 1 331 1 136 1 359 2 240 1 143 2 67 1 343 1 251 1 114 1 199 1 9 1 12 1 11 1 152 1 203 1 28 1 30 1 278 1 31 1 233 1 50 1 234 1 328 1 282 1 184 1 379 1 356 1 
191 1 357 1 331 1 136 1 359 2 143 2 67 1 343 1 251 1 114 1 199 1 10 1 9 1 12 1 11 1 152 1 203 1 28 1 30 1 31 1 233 1 50 1 326 1 234 1 328 1 282 1 379 1 356 1 
359 2 19 1 143 4 109 1 340 1 251 2 199 1 9 2 149 1 11 1 91 1 28 1 155 1 231 1 30 1 31 1 126 2 234 1 185 2 207 2 52 1 98 2 
357 1 331 1 136 1 359 2 240 1 143 4 109 1 340 1 343 1 251 2 199 1 9 2 149 1 11 1 152 1 121 1 203 1 91 1 28 1 231 1 155 1 30 1 278 1 31 1 126 2 50 1 234 1 282 1 328 1 158 1 185 2 184 1 207 2 379 1 52 1 98 2 356 1 
37 1 359 2 19 1 143 3 291 1 109 1 340 1 269 1 251 2 199 1 299 1 9 1 11 1 152 1 203 1 91 1 28 1 231 1 155 1 30 1 31 1 126 1 375 1 234 1 283 1 185 1 207 1 52 1 98 1 
239 1 359 4 241 1 82 1 143 19 62 1 109 3 194 1 340 3 21 1 251 9 9 10 149 3 150 2 11 2 228 1 91 3 229 1 155 3 231 3 30 2 125 1 31 2 96 1 234 2 284 2 185 6 52 3 309 2 330 1 
239 2 359 6 82 1 241 2 213 1 43 2 143 26 109 2 194 1 66 1 340 2 21 2 251 14 170 1 9 12 149 2 11 3 150 2 91 3 229 1 231 2 155 3 30 3 125 2 31 3 279 1 96 1 234 3 284 1 185 4 33 1 52 3 309 4 34 1 
239 1 82 1 241 3 143 41 43 1 194 1 340 4 251 20 9 21 149 4 11 3 150 4 91 4 155 5 96 1 306 1 52 4 309 4 359 6 314 1 213 1 62 1 265 1 267 1 109 5 66 1 21 3 165 1 170 1 229 1 231 4 370 1 30 3 125 2 31 3 373 1 279 1 234 3 284 1 185 8 33 1 330 1 34 1 
239 1 359 8 241 3 82 1 314 1 213 1 43 2 143 38 62 1 265 1 267 1 109 4 194 1 66 1 340 3 165 1 21 3 251 20 170 1 9 18 149 4 150 4 11 4 91 4 229 1 370 1 155 5 231 3 30 4 125 2 373 1 31 4 279 1 96 1 234 4 284 1 306 1 185 7 33 1 52 4 309 4 34 1 330 1 
239 1 359 4 241 2 82 1 314 1 213 1 43 1 143 52 265 1 267 1 109 8 194 1 66 1 340 7 165 1 21 4 251 27 344 2 170 1 9 25 149 7 150 4 11 2 91 7 229 1 155 8 231 7 30 2 125 1 373 1 31 2 279 1 96 1 234 2 284 1 306 1 185 14 33 1 52 7 309 4 34 1 330 2 
296 1 311 1 127 1 238 1 319 1 210 1 307 1 212 1 39 1 168 1 
69 1 300 1 
296 1 311 1 364 1 210 1 307 1 334 1 39 1 168 1 198 1 
167 1 124 1 
320 1 249 1 257 1 
311 1 296 1 238 1 210 1 333 2 25 1 212 1 153 1 38 1 39 1 246 1 304 1 127 1 72 1 307 1 219 1 133 1 168 1 
311 1 296 1 238 1 210 1 333 2 25 1 212 1 153 1 38 1 39 1 246 1 304 1 127 1 72 1 307 1 219 1 133 1 168 1 
311 1 296 1 238 1 210 1 333 2 25 1 212 1 153 1 38 1 39 1 246 1 304 1 127 1 72 1 307 1 219 1 133 1 168 1 
249 1 167 1 124 1 
249 1 167 1 124 1 
320 1 257 1 
320 1 249 1 257 1 
216 1 350 1 
37 2 311 1 210 1 333 1 38 1 39 1 44 1 216 1 269 2 168 1 252 1 296 1 68 1 69 1 25 1 300 1 152 2 120 1 203 2 48 1 368 1 350 1 304 1 233 1 283 2 307 1 133 1 
37 2 331 2 57 1 136 2 359 2 19 1 105 1 61 1 143 2 341 1 67 1 343 2 251 1 199 1 273 1 9 1 11 1 12 1 152 2 178 2 203 2 28 1 94 1 30 1 31 1 50 1 14 1 234 1 282 1 328 1 356 1 
190 1 331 2 136 2 77 1 2 1 121 1 253 1 323 1 50 1 32 1 282 1 285 1 339 1 131 1 270 1 343 2 169 1 75 1 36 2 
190 1 331 1 136 1 77 1 99 1 2 1 323 1 50 1 32 1 282 1 339 1 131 1 270 1 343 1 169 1 75 1 36 2 
331 1 136 1 287 1 78 1 26 1 50 1 163 1 32 1 282 1 328 1 285 1 343 1 356 1 114 1 
190 1 331 1 136 1 77 1 2 1 253 1 323 1 50 1 32 1 282 1 285 1 339 1 131 1 270 1 343 1 169 1 75 1 36 2 
55 1 
46 1 221 1 147 1 72 1 204 1 242 1 290 1 
38 1 59 1 60 1 243 1 84 1 292 1 46 1 147 1 222 1 200 1 301 1 204 1 227 1 27 1 304 1 72 2 310 1 
331 3 136 3 38 5 243 6 245 1 244 2 290 1 84 4 338 2 292 3 340 2 343 3 87 2 46 8 147 9 200 4 204 2 91 2 155 2 255 1 304 5 50 4 206 2 52 2 308 1 54 1 310 5 356 10 56 2 357 3 102 1 103 2 362 1 60 12 363 2 108 2 109 2 65 2 112 2 113 6 114 1 221 1 222 4 173 6 121 1 27 4 230 2 232 3 277 1 324 2 72 8 128 2 282 3 328 3 
38 1 241 1 60 6 213 1 243 3 84 2 109 2 292 1 340 2 21 1 113 5 220 1 46 5 170 1 147 8 222 2 173 5 200 2 150 1 204 2 91 2 303 1 27 2 155 2 255 1 304 1 324 2 279 1 206 1 72 5 128 1 33 1 52 2 310 1 34 1 
37 1 312 1 260 1 38 1 140 1 314 1 84 1 291 1 265 1 337 1 266 1 109 1 269 1 294 1 46 2 222 1 147 2 200 1 152 1 88 1 203 1 27 1 155 2 324 2 304 1 206 1 283 1 306 1 
221 1 46 1 222 1 147 1 200 1 204 1 27 1 290 1 84 1 72 1 
46 5 147 5 173 5 91 2 60 10 243 5 230 1 155 2 324 2 206 1 72 5 109 2 52 2 340 2 113 5 
304 1 72 1 292 1 204 1 38 1 310 1 
331 4 136 4 101 1 58 1 38 3 362 2 84 2 193 1 163 1 292 2 343 4 114 2 46 2 222 2 147 2 200 1 202 1 26 1 92 1 27 2 255 2 304 3 50 1 282 1 328 1 128 2 54 1 310 4 356 1 
37 2 331 1 357 1 136 1 359 2 312 1 240 1 143 1 291 2 269 2 67 1 343 1 114 1 199 1 9 1 224 1 11 1 152 3 203 3 28 1 30 1 278 1 31 1 233 1 50 1 234 1 283 2 282 1 328 1 184 1 379 1 356 1 
46 2 222 1 147 1 173 2 200 1 204 2 27 1 60 4 243 2 84 1 255 1 373 1 72 4 128 1 113 2 
374 1 296 1 210 1 
374 1 296 1 210 1 
296 1 210 1 212 1 106 1 350 1 
374 1 296 1 210 1 
296 1 210 1 367 1 
296 1 210 1 367 1 
296 1 210 1 367 1 
296 1 210 1 
311 1 39 1 
9 4 359 4 149 2 11 2 314 1 155 1 231 1 143 8 30 2 43 1 373 1 31 2 265 1 267 1 109 1 234 2 185 3 306 1 165 1 251 4 
9 3 149 2 314 1 242 1 155 1 143 6 373 1 265 1 267 1 109 1 306 1 185 2 165 1 251 3 
9 2 359 2 149 1 11 1 91 1 155 1 231 1 30 1 143 4 31 1 109 1 234 1 185 2 145 1 340 1 52 1 251 2 
9 4 149 1 150 2 241 1 91 1 155 1 231 1 143 7 109 1 185 2 340 1 52 1 21 1 251 3 330 1 
359 4 314 1 143 23 43 2 265 2 267 1 109 3 340 2 165 1 21 2 251 11 344 1 9 12 149 5 150 2 11 2 91 2 231 4 155 3 30 2 13 1 373 1 31 2 234 2 306 2 185 9 354 1 52 2 330 1 
9 1 150 1 143 1 
21 1 143 1 251 1 
359 2 9 3 149 2 11 1 91 1 230 1 155 1 231 1 30 1 143 6 31 1 234 1 109 1 145 1 185 3 52 1 340 1 251 3 
359 2 241 1 213 1 143 12 109 2 340 2 21 1 251 6 170 1 9 6 149 1 150 1 11 1 91 2 231 1 155 2 30 1 31 1 279 1 96 1 234 1 185 2 33 1 52 2 34 1 
9 3 149 1 314 1 155 1 231 1 143 6 265 1 109 1 306 1 185 2 251 3 
9 2 359 2 149 1 11 1 231 1 143 3 43 1 30 1 13 1 265 1 31 1 267 1 234 1 185 2 306 1 165 1 251 1 
359 2 9 5 149 3 11 1 314 1 231 2 155 2 30 1 143 10 31 1 265 2 96 1 234 1 109 2 306 2 185 5 294 1 251 5 
359 2 11 1 155 1 231 1 30 1 143 2 31 1 96 1 234 1 185 1 52 1 251 2 
9 2 359 2 149 1 11 1 91 1 155 1 231 1 30 1 143 4 31 1 96 1 109 1 234 1 185 2 340 1 52 1 251 2 
9 2 359 6 149 1 11 3 231 1 43 1 143 3 30 3 13 1 62 1 31 3 265 1 96 1 234 3 306 1 185 2 251 1 
359 10 241 1 314 2 43 2 143 34 62 1 265 3 267 1 109 5 145 1 340 3 165 1 21 3 251 16 9 18 24 1 149 7 176 1 150 4 11 5 91 3 155 5 231 5 322 1 30 5 13 1 373 1 31 5 96 1 234 5 306 3 185 12 52 3 330 1 
359 2 241 1 314 1 143 8 265 1 267 1 109 1 21 1 165 1 251 4 9 4 149 2 150 1 11 1 155 1 30 1 373 1 31 1 96 1 234 1 306 1 185 2 34 1 
359 4 241 1 314 1 143 11 265 1 267 1 109 1 145 1 165 1 21 1 251 6 9 5 149 2 150 2 11 2 91 1 155 2 231 1 30 2 373 1 31 2 96 1 234 2 306 1 185 3 52 1 34 1 330 1 
359 6 241 1 314 1 213 1 143 19 43 1 265 1 267 1 109 3 145 1 340 2 165 1 21 1 251 9 170 1 9 10 149 3 150 1 11 3 91 2 231 1 155 3 30 3 373 1 31 3 279 1 96 1 234 3 306 1 185 4 33 1 52 2 34 1 
359 6 241 1 314 1 213 1 43 1 143 17 265 1 267 1 109 2 145 1 340 1 165 1 21 1 251 10 170 1 9 7 149 3 150 1 11 3 91 2 231 2 155 3 30 3 373 1 31 3 279 1 96 1 234 3 306 1 185 5 33 1 52 2 34 1 
359 2 241 1 314 1 143 8 265 1 267 1 109 1 21 1 165 1 251 4 9 4 149 2 150 1 11 1 155 1 30 1 373 1 31 1 96 1 234 1 306 1 185 2 34 1 
359 2 241 1 213 1 143 12 109 2 340 2 21 1 251 6 170 1 9 6 149 1 150 1 11 1 91 2 231 1 155 2 30 1 31 1 279 1 96 1 234 1 185 2 33 1 52 2 34 1 
359 8 241 1 314 1 213 1 143 18 43 2 265 1 267 1 109 2 145 1 340 1 165 1 21 1 251 10 170 1 9 8 149 3 150 1 11 4 91 2 231 2 155 3 30 4 373 1 31 4 279 1 96 1 234 4 306 1 185 5 33 1 52 2 34 1 
359 8 241 1 213 1 143 16 43 2 62 1 109 2 340 2 21 1 251 9 170 1 9 7 149 3 150 1 11 4 91 3 231 3 155 3 30 4 31 4 279 1 96 1 234 4 185 6 33 1 52 3 34 1 
9 4 149 3 314 1 231 3 155 1 143 7 265 3 267 2 109 1 306 3 185 6 165 1 251 3 
359 8 241 1 314 1 213 1 143 18 43 2 62 1 265 1 267 1 109 2 340 1 165 1 21 1 251 10 170 1 9 8 149 3 150 1 11 4 91 2 231 1 155 3 30 4 373 1 31 4 279 1 96 1 234 4 306 1 185 4 33 1 52 2 34 1 
37 1 70 1 233 1 152 1 203 1 188 1 197 1 
37 1 100 1 313 1 152 1 203 1 351 1 316 1 215 1 70 1 233 1 188 1 197 1 
50 1 163 1 331 1 136 1 282 1 328 1 26 1 242 1 343 1 356 1 114 1 
37 1 357 1 331 1 136 1 152 2 240 1 203 2 29 1 233 1 50 1 328 1 283 1 282 1 379 1 269 1 343 1 356 1 114 1 
37 2 331 1 357 2 136 1 240 1 362 1 337 1 65 1 268 1 269 1 112 1 343 1 116 1 152 2 203 2 29 1 233 1 50 1 282 1 283 2 328 2 379 1 356 3 
191 1 37 2 331 2 357 2 137 1 136 2 362 1 337 1 65 1 268 1 269 1 112 1 343 2 116 1 152 2 203 2 29 1 233 1 50 1 282 1 283 2 328 2 379 1 356 3 
331 3 357 1 137 1 136 3 358 1 38 2 362 1 244 1 338 1 65 1 112 1 343 3 114 1 172 1 204 1 232 1 304 2 50 1 72 1 282 1 328 1 310 1 356 4 
357 1 331 3 137 1 136 3 204 1 38 2 362 1 363 1 244 1 232 1 304 2 50 1 72 1 328 1 338 1 282 1 65 1 112 1 343 3 310 1 114 1 356 4 
50 1 331 1 136 1 282 1 343 1 214 1 
190 1 171 1 161 1 331 7 357 1 273 1 136 6 178 1 121 1 162 1 42 1 214 1 50 3 217 1 328 2 282 2 130 1 308 1 343 7 114 2 356 3 
37 1 331 1 136 1 240 1 143 6 343 1 251 3 199 2 9 3 149 2 11 2 152 2 203 2 94 1 155 1 50 1 158 1 306 1 207 1 356 1 98 1 357 1 359 4 314 1 19 1 265 1 267 1 109 1 164 1 269 1 165 1 121 1 28 2 29 1 30 2 278 1 31 2 373 1 126 1 233 2 234 2 283 1 282 1 328 1 184 1 185 2 379 1 
331 1 136 1 38 3 103 1 363 1 244 1 290 1 84 2 108 1 338 1 292 1 343 1 114 1 87 1 46 1 221 1 147 1 222 2 200 2 120 1 204 1 27 2 232 1 304 3 72 1 54 1 310 2 356 2 
331 2 357 1 136 2 121 1 214 1 245 1 50 2 338 1 328 1 282 1 308 1 343 2 356 2 
331 4 137 1 136 4 26 1 121 1 50 1 163 1 328 1 282 1 343 4 382 1 114 1 356 1 
331 2 357 1 136 2 259 1 366 1 362 1 162 1 50 2 217 1 328 1 282 1 186 1 343 2 356 1 
50 1 331 1 77 1 136 1 282 1 131 1 270 1 343 1 36 1 114 1 
190 1 50 1 331 2 273 1 14 1 136 2 282 1 328 1 121 1 343 2 356 1 
171 1 331 5 136 4 273 1 26 1 121 1 362 1 42 1 163 1 50 2 328 2 282 2 343 5 382 1 114 1 356 3 
171 1 331 5 136 4 273 1 26 1 121 1 275 1 362 1 163 1 50 2 328 2 282 2 343 5 382 1 114 1 356 3 
37 1 191 1 357 1 331 1 136 1 152 2 203 2 29 1 233 1 50 1 328 1 283 1 282 1 379 1 269 1 343 1 356 1 114 1 
161 1 331 1 357 1 136 1 362 1 162 1 50 2 217 1 328 1 282 1 308 1 343 1 356 1 
233 1 6 1 380 1 3 1 123 1 
116 1 80 1 120 1 204 1 38 2 3 1 123 2 244 1 180 1 304 2 233 1 337 1 6 2 72 1 268 1 293 1 380 2 187 1 381 1 
37 1 6 1 152 1 380 1 203 1 341 1 3 1 105 1 61 1 
293 1 3 1 381 1 
73 1 151 1 177 1 242 1 
325 1 73 1 151 1 81 1 177 1 335 1 134 1 
183 1 175 1 81 1 
115 1 325 3 73 1 151 1 81 3 177 1 335 1 93 1 104 2 166 1 134 1 263 1 
325 2 73 1 151 1 81 2 177 1 335 1 141 1 134 1 8 1 
264 1 115 1 325 1 73 1 81 1 335 1 270 1 134 1 36 1 75 1 372 1 
115 1 325 1 73 1 81 1 177 1 335 1 134 1 
115 1 325 1 151 1 81 1 177 2 335 1 134 1 
115 1 81 2 177 1 226 1 335 2 40 1 142 1 325 2 73 1 134 2 
115 1 151 1 81 3 177 1 335 1 95 1 264 1 325 3 305 1 73 2 51 1 134 1 8 2 
115 1 151 1 81 2 177 1 335 1 323 1 325 2 73 1 131 1 236 1 134 1 270 1 8 1 36 2 75 1 
115 1 151 1 81 4 177 1 335 2 141 1 264 1 325 4 73 2 51 1 134 2 8 2 189 1 
115 1 325 1 73 1 151 1 81 1 177 1 335 1 134 1 
151 2 81 4 177 2 335 1 93 1 104 1 263 1 264 1 325 4 73 3 51 1 353 1 134 1 8 2 
115 1 237 1 325 2 73 1 151 1 81 2 177 1 335 1 49 1 349 1 134 1 8 1 
115 1 81 3 151 1 177 1 335 1 93 1 104 2 263 2 325 3 73 1 64 1 134 1 
205 2 73 2 347 1 122 1 
115 1 325 1 346 1 81 1 335 1 134 1 
115 1 305 1 325 2 73 1 151 1 81 2 177 1 335 1 134 1 8 1 
329 1 
115 1 325 1 73 1 151 1 81 1 177 1 335 1 134 1 
115 1 305 1 325 3 73 1 151 1 81 3 177 1 335 1 104 1 134 1 8 1 
264 1 73 1 51 1 353 1 
73 1 177 1 

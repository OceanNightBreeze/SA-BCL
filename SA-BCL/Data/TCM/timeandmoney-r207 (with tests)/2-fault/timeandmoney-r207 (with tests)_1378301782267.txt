#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (47,226,357) (78,153,310) (78,153,310) (78,153,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 363 301 217 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 19 (42,375) (42,375) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 60 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (47,226,357) (47,226,357) (47,226,357) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 363 36 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 363 301 217 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 101 1 261 1 80 2 334 1 372 1 267 1 84 2 14 3 220 3 30 1 74 1 246 2 
261 1 192 1 295 1 333 2 334 1 240 2 360 1 267 2 28 1 220 9 30 4 74 1 246 5 49 1 177 2 200 1 101 3 11 1 80 2 33 1 372 6 347 1 325 1 254 1 84 2 14 9 229 2 163 1 
261 1 192 1 295 1 333 2 334 1 240 2 360 1 267 2 28 1 220 9 30 4 74 1 246 5 49 1 177 2 200 1 101 3 11 1 80 2 33 1 372 6 347 1 325 1 254 1 84 2 14 9 229 2 163 1 
261 1 192 1 295 1 333 2 334 1 240 2 360 1 267 2 28 1 220 10 30 5 74 1 246 6 49 1 177 2 200 1 101 4 11 1 80 2 33 1 372 7 347 1 325 1 254 1 84 2 14 10 229 2 163 1 
261 1 192 1 295 1 333 2 334 1 240 2 360 1 267 2 220 7 30 3 74 1 246 4 49 1 177 1 200 1 101 2 11 1 80 2 33 1 372 4 347 1 325 1 254 1 84 2 14 7 229 2 163 1 
101 1 200 1 261 1 80 1 192 1 333 1 334 1 240 1 372 3 325 1 28 1 84 1 14 4 229 1 220 4 30 2 246 3 177 2 
200 1 261 1 80 1 295 1 334 1 240 1 83 1 254 1 267 1 84 1 14 2 287 1 220 2 256 1 229 1 246 1 
261 1 192 1 333 1 334 1 360 1 240 1 267 1 28 1 30 4 220 9 74 1 274 1 246 5 49 1 177 2 101 3 200 1 80 2 372 7 307 1 325 1 84 2 14 9 229 1 
261 1 192 1 333 1 334 1 360 1 240 1 267 1 28 1 30 4 220 9 74 1 274 1 246 5 49 1 177 2 101 3 200 1 80 2 372 7 307 1 325 1 84 2 14 9 229 1 
9 1 13 1 127 1 22 1 336 1 103 1 169 1 37 1 300 1 108 1 6 1 340 1 197 1 276 1 
159 1 
38 1 351 1 127 2 340 2 336 1 63 1 159 1 4 1 
114 1 0 1 203 1 127 5 280 2 336 2 205 1 186 1 63 2 159 1 266 1 38 1 351 1 195 2 340 5 134 2 16 1 125 1 275 1 
351 1 97 1 159 1 
122 1 214 2 159 1 
9 2 108 2 6 2 22 1 197 2 169 2 94 1 276 2 
144 1 143 2 193 1 116 1 22 1 317 1 1 2 169 3 94 1 95 1 244 1 29 1 6 2 341 1 151 1 197 2 276 2 9 2 126 1 306 1 34 1 323 2 35 1 54 1 252 1 129 2 375 1 208 1 187 1 108 3 309 1 139 1 290 1 19 1 236 1 89 1 314 2 
9 1 108 1 13 1 6 1 22 1 197 1 169 1 103 1 276 1 300 1 
223 1 9 1 10 1 181 1 20 1 127 1 169 1 159 1 300 1 318 1 351 1 108 1 44 1 340 1 
9 1 181 1 20 1 127 2 169 1 159 1 300 1 318 1 351 1 108 1 44 1 6 1 340 2 197 1 276 1 
127 1 340 1 336 1 128 1 63 1 
38 1 351 1 127 2 340 2 245 1 336 1 63 1 159 1 
127 1 340 1 63 1 
9 5 10 1 251 1 169 5 171 1 284 1 94 1 108 5 6 1 197 4 76 2 190 1 276 4 237 1 
56 1 9 2 108 2 13 1 197 2 169 2 276 2 300 1 
9 1 126 1 143 1 34 1 116 1 252 1 1 1 169 2 108 2 15 1 29 1 341 1 151 1 290 1 197 1 76 1 19 1 276 1 237 1 314 1 
9 2 251 1 146 1 169 2 94 2 108 2 6 1 197 1 276 1 
15 1 118 1 218 1 
126 1 143 1 34 1 116 1 252 1 1 1 169 1 94 1 108 1 96 1 29 1 341 1 151 1 290 1 19 1 314 1 
9 3 108 3 6 1 197 3 76 1 169 3 94 1 276 3 
9 1 108 1 13 1 197 1 169 1 276 1 300 1 
9 1 108 1 6 1 251 1 146 1 197 1 169 1 276 1 300 1 
20 1 144 1 143 1 193 1 116 1 22 1 317 1 1 1 169 4 66 1 94 1 300 1 95 1 318 1 44 1 244 1 29 1 6 2 340 1 341 1 151 1 197 3 76 1 345 1 276 3 9 3 126 1 181 1 306 1 34 1 251 1 127 1 323 2 252 1 129 1 375 1 208 1 108 4 309 1 290 1 19 1 236 1 237 1 314 1 
9 2 10 1 108 2 197 1 169 2 76 1 94 1 284 1 276 1 
9 3 181 1 20 1 251 1 127 1 169 3 159 1 66 1 300 1 318 1 108 3 44 1 6 1 340 1 271 1 197 3 76 2 276 3 237 1 
9 2 251 1 169 2 218 1 108 2 6 1 15 1 197 2 76 1 276 2 
126 1 143 1 34 1 116 1 1 1 252 1 169 1 94 1 108 1 29 1 341 1 151 1 290 1 19 1 314 1 
126 1 143 1 34 1 116 1 185 1 1 1 252 1 169 1 94 1 108 1 29 1 341 1 73 1 290 1 314 1 
58 1 144 1 193 1 61 1 92 1 317 1 118 2 218 2 219 1 244 2 48 1 247 1 198 1 306 1 156 1 323 2 35 2 129 4 160 1 327 1 208 1 15 2 112 1 236 1 
9 1 56 1 44 1 108 1 197 1 169 1 276 1 300 1 
97 1 94 1 
370 1 224 1 45 1 
370 2 224 2 68 1 5 1 135 1 207 1 
370 1 224 1 353 1 
370 1 224 1 268 1 
370 1 224 1 268 1 
370 1 224 1 268 1 
370 1 224 1 
370 1 224 1 
5 1 135 1 
5 1 135 1 
5 1 135 1 
370 1 224 1 353 1 
370 1 224 1 353 1 
166 1 169 2 94 1 173 1 7 1 45 1 340 1 368 1 197 2 222 1 276 2 370 1 250 1 224 1 9 2 127 1 104 1 108 2 110 1 111 1 257 1 18 1 313 1 258 1 
370 2 250 1 224 2 166 2 142 1 127 2 297 2 207 1 159 1 265 1 43 1 173 3 340 2 367 1 342 1 98 1 368 2 313 2 258 2 
333 1 132 2 328 1 229 2 83 1 
333 1 240 1 229 1 
240 1 229 1 83 1 
132 1 333 2 328 1 229 3 83 1 249 1 
132 1 333 1 328 1 229 2 83 1 100 1 
356 1 213 1 214 3 336 4 92 1 63 1 266 1 149 1 122 1 195 1 340 5 72 2 222 1 125 2 198 1 321 1 156 1 280 1 127 5 186 3 253 2 159 2 160 1 38 1 57 2 228 1 351 1 131 1 133 1 134 1 110 1 111 1 
356 1 213 2 59 1 214 9 336 7 92 3 63 6 119 5 338 1 266 1 149 3 122 3 195 2 340 9 150 1 72 6 125 6 198 3 154 1 156 3 127 9 280 2 128 5 186 8 159 5 160 3 38 1 57 6 351 1 131 2 134 2 16 1 137 1 110 4 234 1 
213 1 214 4 336 2 92 1 149 1 122 2 195 1 340 3 72 2 125 2 198 1 321 1 156 1 280 1 127 3 186 3 159 3 253 1 160 1 57 2 351 1 131 1 133 1 134 1 16 1 110 1 
213 1 59 1 214 7 336 3 92 2 338 1 149 2 122 3 195 1 340 4 72 4 125 4 198 2 321 1 156 2 280 1 127 4 186 5 159 4 253 2 160 2 57 4 351 1 131 1 133 1 134 1 16 1 110 2 234 1 
29 1 34 1 252 1 
23 1 252 1 
259 1 
29 1 252 1 
294 2 29 1 210 1 34 1 252 3 55 1 
97 1 294 1 252 1 
312 1 252 1 
359 1 324 1 349 1 35 4 92 1 41 1 299 1 64 1 129 7 160 1 327 3 286 1 377 1 244 3 329 1 138 1 152 2 112 2 
144 1 359 2 193 1 337 1 317 1 92 4 41 1 299 1 148 1 64 2 149 3 244 15 174 1 344 1 152 3 198 3 199 1 51 4 306 1 156 3 323 2 324 2 349 1 35 16 373 1 129 31 130 3 160 4 327 10 286 5 87 1 329 2 138 1 112 5 
144 2 193 2 359 1 92 1 317 2 41 1 64 1 269 1 244 4 175 1 152 2 306 2 323 4 324 1 35 5 349 1 373 1 129 9 160 1 327 4 286 1 329 1 138 1 112 3 
359 1 324 1 35 4 349 1 92 1 41 1 299 1 64 1 129 7 160 1 327 3 286 1 244 3 329 1 138 1 152 2 112 2 
359 1 324 1 35 4 349 1 92 1 41 1 299 1 64 1 129 7 160 1 327 3 286 1 244 3 329 1 138 1 152 2 112 2 
143 1 116 1 335 1 91 2 147 1 1 1 120 1 267 2 29 1 220 1 221 2 71 1 366 1 99 2 126 1 80 1 252 1 376 1 84 1 85 1 14 1 290 1 314 1 
357 1 333 1 143 1 240 1 91 1 1 1 267 1 220 1 221 1 99 1 249 1 200 1 78 1 153 1 80 1 126 1 82 1 83 1 106 1 84 1 14 1 188 1 310 1 229 2 290 1 314 1 
200 1 357 1 153 1 78 1 80 1 91 1 267 1 106 1 84 1 14 1 189 1 220 1 310 1 221 1 99 1 
357 1 261 1 333 1 143 1 334 1 240 1 91 1 147 1 1 1 267 1 220 3 221 1 246 1 99 1 249 1 201 1 78 1 153 1 80 1 126 1 372 2 82 1 83 1 106 1 84 1 14 3 188 1 229 2 290 1 314 1 
357 1 261 1 143 1 333 1 334 1 240 1 91 1 1 1 267 1 220 2 221 1 246 1 99 1 249 1 201 1 153 1 126 1 372 2 82 1 83 1 14 2 188 1 229 2 290 1 314 1 
86 1 
332 2 143 2 90 1 2 1 1 2 300 1 195 1 44 1 340 5 302 2 50 1 9 1 10 1 12 1 102 1 52 1 252 1 159 2 351 1 108 1 161 1 113 2 314 2 20 1 167 2 116 2 214 2 264 4 63 6 169 1 266 1 122 2 318 1 29 1 123 2 366 1 125 2 75 1 124 1 277 2 223 1 126 1 181 1 127 5 280 1 183 1 81 1 374 1 186 2 38 3 85 1 131 1 134 1 232 2 290 1 
20 1 167 1 90 1 264 2 169 1 63 2 300 1 4 1 318 1 44 1 340 3 75 1 9 1 223 1 50 1 10 1 181 1 12 1 127 3 374 1 38 1 108 1 
20 1 90 1 264 3 63 1 169 1 300 1 4 1 318 1 44 1 340 3 75 1 302 1 9 1 223 1 50 1 10 1 181 1 12 1 127 3 374 1 159 1 38 1 108 1 351 1 
20 1 167 1 90 1 264 3 169 1 63 2 4 1 300 1 318 1 44 1 340 3 75 1 302 1 9 1 223 1 50 1 277 1 10 1 181 1 12 1 127 3 374 1 159 1 38 1 108 1 351 1 
332 2 90 1 300 1 4 1 44 1 195 1 340 5 302 4 343 1 50 1 9 1 10 1 202 1 12 1 102 1 159 5 108 1 351 5 113 2 20 1 167 4 264 6 169 1 63 7 266 1 362 1 318 1 122 2 123 2 75 1 125 1 277 4 223 1 181 1 79 1 127 5 280 1 81 1 374 1 186 1 38 3 134 1 40 1 232 2 
332 2 90 1 300 1 44 1 195 1 340 4 302 2 9 1 50 1 10 1 12 1 102 1 159 2 108 1 351 1 113 2 20 1 167 2 214 2 264 4 169 1 63 4 266 1 318 1 122 2 123 2 75 1 125 1 223 1 277 2 181 1 127 4 280 1 183 1 81 1 374 1 186 1 38 2 134 1 232 2 
332 2 20 1 167 2 90 1 264 4 63 4 169 1 300 1 266 1 362 1 122 2 318 1 44 1 195 1 340 4 123 2 302 2 125 1 75 1 277 2 9 1 223 1 50 1 10 1 181 1 79 1 12 1 102 1 280 1 127 4 81 1 374 1 186 1 159 1 38 2 351 1 108 1 134 1 40 1 232 2 113 2 
332 2 20 1 167 2 90 1 264 4 63 4 169 1 300 1 266 1 362 1 122 2 318 1 44 1 195 1 340 4 123 2 302 2 125 1 75 1 277 2 9 1 223 1 50 1 10 1 181 1 79 1 12 1 102 1 280 1 127 4 81 1 374 1 186 1 159 1 38 2 351 1 108 1 134 1 40 1 232 2 113 2 
332 2 315 2 20 1 167 2 214 2 90 1 264 4 63 4 169 1 300 1 266 1 362 1 318 1 44 1 195 1 340 4 302 2 125 1 75 1 178 2 277 2 9 1 223 1 50 1 10 1 181 1 12 1 102 1 280 1 127 4 374 1 186 1 159 1 38 2 227 1 107 1 351 1 108 1 134 1 232 2 233 1 
332 2 20 1 167 3 90 1 264 5 169 1 63 5 266 1 300 1 362 1 122 2 318 1 195 1 44 1 340 4 123 2 125 1 75 1 343 1 302 3 9 1 223 1 50 1 277 3 79 1 10 1 181 1 12 1 102 1 280 1 127 4 81 1 374 1 186 1 159 1 38 2 351 1 108 1 134 1 40 1 232 2 113 2 
332 2 20 1 167 3 90 1 264 5 169 1 63 5 266 1 300 1 362 1 122 2 318 1 195 1 44 1 340 4 123 2 125 1 75 1 343 1 302 3 9 1 223 1 50 1 277 3 79 1 10 1 181 1 12 1 102 1 280 1 127 4 81 1 374 1 186 1 159 1 38 2 351 1 108 1 134 1 40 1 232 2 113 2 
332 2 90 1 300 1 44 1 195 1 340 4 302 2 9 1 50 1 10 1 12 1 102 1 159 1 108 1 351 1 20 1 315 2 167 2 214 2 264 4 169 1 63 4 266 1 318 1 75 1 125 1 178 2 223 1 277 2 181 1 127 4 280 1 183 1 374 1 186 1 38 2 134 1 233 1 232 2 
143 3 144 2 193 2 116 2 61 1 1 3 317 2 217 1 169 1 363 1 95 1 301 1 244 1 29 1 366 1 196 1 197 1 76 1 77 1 276 1 9 1 126 1 306 2 323 4 35 1 252 1 129 2 208 2 187 1 108 1 85 1 189 1 290 1 314 3 236 2 89 1 
144 1 193 1 118 1 317 1 92 1 169 1 218 1 149 1 244 2 6 1 197 1 303 1 198 1 276 1 9 1 306 1 156 1 251 1 323 2 35 1 129 3 327 1 160 1 208 1 108 1 15 1 165 1 112 1 236 1 
306 1 156 1 144 1 193 1 323 2 61 1 35 2 118 1 317 1 129 2 218 1 327 1 160 1 286 1 208 1 15 1 247 1 236 1 
306 1 144 1 193 1 323 2 61 1 118 1 317 1 92 1 129 2 218 1 327 1 208 1 244 2 15 1 48 1 198 1 112 1 236 1 
144 1 193 1 61 1 317 1 118 2 92 1 218 2 149 1 244 2 198 1 156 1 306 1 323 2 35 2 129 4 160 1 327 2 208 1 286 1 15 2 112 1 236 1 
306 1 156 1 144 1 193 1 323 2 35 2 118 1 317 1 129 2 218 1 327 1 160 1 286 1 208 1 15 1 247 1 77 1 236 1 
306 1 144 1 193 1 323 2 118 1 317 1 92 1 129 2 218 1 327 1 208 1 244 2 15 1 48 1 198 1 77 1 112 1 236 1 
144 1 193 1 317 1 118 2 92 1 218 2 149 1 244 2 198 1 77 1 156 1 306 1 323 2 35 2 129 4 160 1 327 2 208 1 286 1 15 2 112 1 236 1 
144 1 193 1 317 1 118 2 92 1 218 2 149 1 244 2 198 1 156 1 306 1 323 2 35 2 129 4 160 1 327 2 208 1 286 1 15 2 112 1 236 1 
143 1 144 1 193 1 116 1 1 1 317 1 169 1 94 1 95 1 244 1 29 1 341 1 151 1 126 1 306 1 34 1 323 2 35 1 252 1 129 2 375 1 208 1 187 1 108 1 290 1 19 1 314 1 236 1 
143 1 144 1 193 1 116 1 1 1 317 1 169 1 94 1 95 1 244 1 29 1 341 1 73 1 126 1 306 1 34 1 185 1 204 1 323 2 35 1 252 1 129 2 208 1 187 1 108 1 290 1 314 1 236 1 
144 1 193 1 317 1 118 2 92 1 218 2 149 1 244 2 198 1 156 1 306 1 323 2 35 2 129 4 160 1 327 2 208 1 286 1 15 2 165 1 112 1 236 1 
189 1 19 1 375 1 42 1 
144 1 193 1 92 1 317 1 118 1 194 1 169 1 218 1 149 1 244 1 6 1 197 1 198 1 276 1 9 1 306 1 156 1 251 1 323 2 35 2 129 3 327 1 160 1 286 1 208 1 108 1 15 1 165 1 236 1 
144 1 359 1 193 1 61 1 317 1 92 1 118 1 41 1 64 1 218 1 94 2 97 1 244 3 152 1 306 1 323 2 349 1 35 3 129 6 327 2 160 1 208 1 15 1 138 1 112 2 236 1 
144 2 21 1 193 2 145 1 317 2 118 11 92 1 94 1 218 4 95 1 149 2 244 6 8 1 174 1 198 1 199 1 155 1 51 3 306 2 156 2 323 4 35 8 129 14 130 3 327 2 160 2 286 1 208 2 187 1 15 11 165 1 112 1 236 1 
143 1 144 1 193 1 116 1 117 1 1 1 317 1 169 2 94 1 218 1 95 1 96 1 244 1 29 1 341 1 151 1 197 1 76 1 276 1 9 1 126 1 306 1 182 1 34 1 323 2 35 1 252 1 129 2 208 1 187 1 108 2 290 1 378 1 19 1 165 1 314 1 236 1 237 1 
191 1 144 1 143 1 193 1 60 1 116 1 317 1 1 1 169 1 95 1 244 2 197 1 76 1 276 1 9 1 306 1 323 2 206 1 129 2 208 1 108 1 288 1 165 1 236 1 237 1 314 1 
141 2 144 2 193 2 317 2 92 3 170 1 27 1 149 3 269 1 244 10 174 1 198 3 176 1 199 1 180 1 51 2 306 2 156 3 323 4 348 1 35 9 129 19 130 1 160 3 327 6 286 3 230 1 162 1 112 3 238 2 
141 1 144 3 115 1 193 3 92 2 317 3 27 1 149 3 269 1 244 12 364 1 70 1 272 1 174 2 198 2 248 1 176 2 180 1 51 2 306 3 156 3 323 6 348 2 35 14 373 2 129 26 130 2 327 4 160 3 286 2 88 1 162 1 112 2 238 4 
141 1 144 3 193 3 92 5 41 1 149 4 244 21 152 1 198 4 199 1 248 1 51 4 156 4 306 3 348 1 349 1 160 5 162 1 112 4 115 1 359 1 317 3 170 1 64 1 27 1 269 1 364 1 70 1 272 1 174 3 176 2 369 1 180 1 323 6 35 20 373 1 129 41 130 3 327 8 286 4 88 1 138 1 238 4 
141 1 144 4 359 1 115 1 193 4 317 4 92 4 170 1 41 1 64 1 27 1 149 4 269 1 244 18 364 1 272 1 70 1 174 3 152 1 198 3 248 1 176 2 199 1 369 1 180 1 51 4 306 4 156 4 323 8 349 1 348 1 35 20 373 2 129 38 130 3 160 5 327 7 286 3 88 1 162 1 138 1 112 4 238 4 
141 1 144 2 359 1 115 1 193 2 317 2 92 8 41 1 64 1 27 1 149 7 269 1 244 25 364 1 272 1 70 1 8 2 174 2 152 1 198 7 248 1 176 1 199 2 180 1 51 4 306 2 156 7 323 4 349 1 348 1 35 27 373 1 129 52 130 4 160 8 327 14 286 7 88 1 162 1 138 1 112 7 238 4 
69 1 353 1 
68 1 268 1 282 1 
370 1 43 1 224 1 166 1 98 1 368 1 136 1 207 1 313 1 258 1 
45 1 257 1 
370 1 224 1 166 1 231 1 31 1 368 1 320 1 313 1 258 1 
250 1 370 1 224 1 166 1 142 1 127 1 297 1 207 1 159 1 265 1 43 1 173 2 340 1 367 1 98 1 368 1 313 1 258 1 
250 1 370 1 224 1 166 1 142 1 127 1 297 1 207 1 159 1 265 1 43 1 173 2 340 1 367 1 98 1 368 1 313 1 258 1 
250 1 370 1 224 1 166 1 142 1 127 1 297 1 207 1 159 1 265 1 43 1 173 2 340 1 367 1 98 1 368 1 313 1 258 1 
68 1 69 1 353 1 
68 1 69 1 353 1 
268 1 282 1 
68 1 268 1 282 1 
18 1 104 1 
166 1 316 1 297 1 336 1 169 2 94 1 173 1 7 1 45 1 340 1 367 1 368 1 222 1 197 2 276 2 370 1 224 1 9 2 127 1 104 1 108 2 110 1 111 1 257 1 18 1 313 1 258 1 
239 1 144 1 143 2 193 1 1 2 317 1 169 2 243 1 363 1 95 1 244 1 29 1 319 1 196 1 9 2 126 1 306 1 158 1 323 2 35 1 252 1 129 2 208 1 187 1 108 2 290 1 165 1 235 1 314 2 236 1 89 2 
371 1 126 1 143 1 116 1 298 1 252 1 1 1 120 1 85 1 29 1 221 1 366 1 290 1 314 1 
357 1 371 1 126 1 333 1 143 1 240 1 82 1 1 1 226 1 83 1 106 1 188 1 229 2 221 1 47 1 290 1 249 1 314 1 
357 1 106 1 371 1 189 1 143 1 221 1 47 1 82 1 1 1 226 1 314 1 
357 1 126 1 333 1 143 1 240 1 82 1 1 1 226 1 83 1 106 1 188 1 229 2 221 1 290 1 249 1 314 1 331 1 
279 1 
0 1 280 1 186 1 159 1 266 1 195 1 351 1 134 1 275 1 125 1 
156 2 60 1 214 10 92 2 186 5 159 5 160 2 285 2 149 2 57 5 122 5 46 1 72 5 125 5 198 2 
38 1 351 1 127 1 340 1 63 1 159 1 
143 4 116 2 1 4 2 2 63 4 266 1 195 2 29 1 340 3 366 1 125 2 126 1 52 1 280 2 127 3 184 1 252 1 186 2 105 1 38 2 85 1 161 1 131 2 39 1 134 2 16 1 17 2 290 1 314 4 
351 1 97 1 0 1 125 1 275 1 186 1 159 1 
127 1 280 1 214 1 81 1 63 1 186 1 159 2 266 1 38 1 122 1 351 1 195 1 340 1 123 1 134 1 125 1 113 1 
294 2 0 1 143 1 2 1 1 1 92 2 93 2 149 2 195 4 340 5 46 2 198 2 156 2 252 6 350 2 159 8 55 1 160 2 57 6 351 2 109 1 312 3 314 1 355 1 20 2 358 1 116 1 60 2 214 12 63 5 266 4 122 6 29 1 365 2 72 6 275 1 125 8 126 2 34 1 280 4 127 5 322 2 186 9 38 3 285 2 131 2 189 1 39 1 134 4 290 1 140 2 
115 1 214 6 2 1 92 2 63 1 266 2 149 2 122 3 195 2 340 1 46 1 70 1 272 1 72 5 174 1 125 5 198 2 248 1 278 1 51 1 156 2 127 1 280 2 186 8 159 5 130 1 160 2 38 1 285 2 57 5 351 2 131 1 255 1 134 2 88 1 
359 1 22 1 92 1 169 1 41 1 64 1 300 1 266 1 195 1 6 1 340 1 46 1 125 2 197 1 305 1 276 1 9 1 79 1 13 1 280 1 127 1 186 2 103 1 37 1 160 2 285 2 108 1 134 1 
143 1 144 1 193 1 116 1 22 1 317 1 1 1 169 3 94 1 95 1 244 1 6 2 29 1 341 1 151 1 197 2 276 2 9 2 126 1 306 1 34 1 323 2 252 1 129 1 375 1 208 1 108 3 309 1 290 1 19 1 314 1 236 1 
280 1 214 4 2 1 186 1 159 4 266 1 122 2 57 2 195 1 351 2 131 1 134 1 72 2 152 1 125 2 
43 1 166 1 352 1 104 1 258 1 
26 1 166 1 258 1 
166 1 293 1 258 1 
166 1 293 1 258 1 
166 1 293 1 258 1 
166 1 258 1 
370 1 224 1 
26 1 166 1 258 1 
26 1 166 1 258 1 
306 1 144 1 193 1 359 2 323 2 35 5 317 1 92 2 41 1 64 2 129 10 327 5 160 2 286 2 269 1 244 5 305 1 112 3 
306 1 156 1 144 1 193 1 323 2 35 2 317 1 129 2 160 1 327 1 286 1 269 1 
306 1 156 1 144 1 193 1 323 2 35 2 92 1 317 1 129 4 327 2 160 1 149 1 286 1 269 1 244 2 198 1 112 1 
306 3 144 3 193 3 359 1 323 6 35 1 373 1 317 3 170 1 129 3 64 1 327 2 286 1 269 1 244 2 273 1 112 1 
144 5 359 3 193 5 337 1 216 1 317 5 92 5 41 2 148 1 170 1 64 3 149 3 269 1 244 18 273 1 174 1 152 1 344 1 198 3 199 1 51 4 306 5 156 3 323 10 349 1 35 16 373 2 129 34 130 3 160 5 327 12 286 5 138 1 112 7 
144 1 193 1 359 1 92 1 317 1 41 1 64 1 269 1 244 4 70 1 174 1 152 1 51 1 306 1 323 2 35 4 349 1 129 8 130 1 160 1 327 2 138 1 112 2 
144 2 359 1 193 2 92 1 317 2 216 1 41 1 64 1 149 1 269 1 244 5 70 1 174 1 152 1 199 1 51 2 306 2 156 1 323 4 349 1 35 6 129 11 130 1 160 2 327 3 286 1 138 1 112 2 
144 3 359 1 193 3 115 1 216 1 317 3 92 3 41 1 64 1 149 2 269 1 244 10 70 1 272 1 174 1 152 1 198 2 248 1 51 1 306 3 156 2 323 6 349 1 35 9 373 1 129 19 130 1 160 3 327 4 286 1 88 1 138 1 112 3 
144 3 359 1 193 3 115 1 216 1 317 3 92 2 41 1 64 1 149 2 269 1 244 7 70 1 272 1 174 1 152 1 198 1 248 1 51 1 306 3 156 2 323 6 349 1 35 10 373 1 129 17 130 1 160 3 327 5 286 2 88 1 138 1 112 3 
144 1 193 1 359 1 92 1 317 1 41 1 64 1 269 1 244 4 70 1 174 1 152 1 51 1 306 1 323 2 35 4 349 1 129 8 130 1 160 1 327 2 138 1 112 2 
144 1 193 1 115 1 317 1 92 2 149 2 269 1 244 6 70 1 272 1 174 1 198 2 248 1 51 1 306 1 156 2 323 2 35 6 129 12 130 1 160 2 327 2 286 1 88 1 112 1 
144 4 359 1 115 1 193 4 216 1 317 4 92 2 41 1 64 1 149 2 269 1 244 8 70 1 272 1 174 1 152 1 198 1 248 1 51 1 306 4 156 2 323 8 349 1 35 10 373 2 129 18 130 1 160 3 327 5 286 2 88 1 138 1 112 3 
144 4 115 1 193 4 317 4 92 2 170 1 149 3 269 1 244 7 70 1 272 1 174 1 198 2 248 1 51 1 306 4 156 3 323 8 35 9 373 2 129 16 130 1 160 3 327 6 286 3 88 1 112 3 
359 3 349 2 35 3 92 1 41 1 129 7 64 3 327 6 160 1 286 3 244 4 138 1 112 3 
144 4 359 1 115 1 193 4 317 4 92 2 41 1 170 1 64 1 149 2 269 1 244 8 70 1 272 1 174 1 152 1 198 1 248 1 51 1 306 4 156 2 323 8 349 1 35 10 373 2 129 18 130 1 160 3 327 4 286 1 88 1 138 1 112 3 
306 2 144 2 193 2 359 1 323 4 35 4 349 1 92 1 317 2 373 1 41 1 129 8 64 1 160 1 327 3 286 1 244 4 138 1 152 1 112 2 
359 1 349 1 35 3 92 1 41 1 64 1 129 6 327 2 160 1 97 1 244 3 138 1 152 1 112 2 
306 1 156 1 144 1 193 1 323 2 35 2 92 1 216 1 317 1 129 4 327 2 160 1 149 1 286 1 244 2 198 1 112 1 
51 2 156 1 35 3 92 1 129 7 130 1 160 1 327 2 149 1 286 1 244 4 174 1 198 1 112 1 199 1 
144 2 359 2 193 2 145 1 92 3 317 2 41 1 64 2 149 2 244 12 273 1 8 1 152 1 198 2 199 1 51 2 156 2 306 2 323 4 349 1 35 11 373 2 129 23 130 2 327 9 160 3 286 4 138 1 112 5 
51 1 244 1 129 1 
35 1 129 1 130 1 
306 1 156 1 144 1 193 1 60 1 323 2 35 3 317 1 216 1 92 1 129 6 160 1 327 3 149 1 286 1 244 3 198 1 112 2 
144 1 193 1 115 1 317 1 92 2 149 2 269 1 244 6 70 1 272 1 174 1 198 2 248 1 51 1 306 1 156 2 323 2 35 6 129 12 130 1 160 2 327 2 286 1 88 1 112 1 
359 1 35 3 92 1 41 1 129 6 64 1 160 1 327 2 286 1 244 3 112 1 
306 1 144 1 359 1 193 1 323 2 35 1 349 1 373 1 317 1 64 1 129 3 327 2 286 1 244 2 273 1 138 1 112 1 
9 1 108 1 10 1 169 1 304 1 94 1 284 1 
346 1 225 1 9 1 10 1 242 1 169 1 3 1 94 1 284 1 108 1 270 1 304 1 
9 1 126 1 143 1 34 1 116 1 185 1 252 1 1 1 169 2 94 1 108 2 29 1 341 1 197 1 290 1 76 1 276 1 314 1 
126 2 143 1 53 1 34 1 1 1 252 1 55 1 29 1 209 1 17 1 290 1 354 1 314 1 
126 2 143 1 34 1 116 1 281 1 252 1 1 1 85 1 209 1 29 1 189 1 290 1 330 1 354 1 314 1 
126 2 157 1 143 2 34 1 281 1 1 2 252 1 29 1 209 1 17 1 330 1 290 1 354 1 314 2 
126 1 188 1 143 1 240 1 229 1 116 1 290 1 1 1 83 1 314 1 
143 1 189 1 82 1 1 1 314 1 
189 1 143 1 116 1 1 1 314 1 
363 1 189 1 143 1 116 1 1 1 36 1 314 1 
126 1 85 1 97 1 29 1 143 1 366 1 116 1 290 1 252 1 1 1 314 1 
9 1 126 1 143 1 34 1 116 1 252 1 1 1 169 2 94 1 108 2 29 1 341 1 151 1 197 1 290 1 76 1 276 1 314 1 
9 2 181 1 126 1 143 1 34 2 23 1 252 3 1 1 169 2 94 1 300 1 339 1 44 1 108 2 29 2 341 1 151 1 197 1 17 1 290 1 76 1 276 2 314 1 
143 2 23 1 1 2 169 2 94 1 300 1 44 1 339 1 29 2 341 1 197 1 76 1 276 2 9 2 126 1 181 1 34 2 185 1 252 3 108 2 311 1 290 1 17 1 314 2 
126 1 20 1 294 1 143 3 34 1 127 2 116 1 23 1 168 1 1 3 252 4 63 1 159 1 67 1 351 1 339 1 29 1 340 2 311 1 312 1 17 1 290 1 314 3 
126 1 20 1 294 1 143 3 34 1 127 2 116 1 23 1 1 3 252 4 63 1 159 1 351 1 339 1 29 1 340 2 365 1 311 1 312 1 17 1 290 1 314 3 
179 1 126 1 143 1 290 1 1 1 314 1 
126 2 143 2 53 1 34 1 116 2 1 2 252 1 217 1 55 1 363 1 301 1 189 1 29 1 209 1 290 1 354 1 314 2 
9 1 306 1 144 1 193 1 323 2 317 1 169 1 208 1 108 1 189 1 197 1 76 1 235 1 165 1 276 1 236 1 
294 1 20 1 0 1 143 1 116 1 336 1 1 1 93 1 63 2 266 2 195 2 340 3 365 1 125 1 275 1 280 2 127 3 322 1 350 1 252 2 186 1 159 1 38 1 351 1 39 1 134 2 312 1 314 1 
179 1 126 2 294 1 143 1 34 1 1 1 252 2 55 1 189 1 109 1 29 1 290 1 314 1 
292 1 289 1 94 1 326 1 260 1 
181 1 20 1 292 2 127 2 296 1 336 1 263 1 159 1 66 1 94 1 308 1 326 2 300 1 318 1 351 1 44 1 340 2 289 1 260 2 
239 1 9 1 292 1 169 1 243 1 108 1 319 1 289 1 260 1 
296 1 289 1 263 1 
200 1 261 1 80 1 84 1 14 1 334 1 220 1 246 1 
101 1 261 2 80 1 295 1 334 2 372 2 65 1 121 1 84 1 14 4 220 4 30 1 246 3 32 1 
172 1 200 1 261 1 80 1 84 1 14 2 334 1 220 2 372 1 24 1 307 1 246 1 
200 1 261 1 80 1 84 1 295 2 14 3 334 1 220 3 262 1 246 1 65 2 32 1 
291 2 361 1 25 1 246 2 
200 1 80 1 84 1 14 1 220 1 241 1 
200 1 261 1 80 1 84 1 14 2 334 1 360 1 220 2 372 1 246 1 
211 1 
200 1 261 1 80 1 84 1 14 1 334 1 220 1 246 1 
261 1 97 1 334 1 246 1 
261 1 80 1 84 1 14 1 334 1 220 1 246 1 
267 1 220 1 99 1 
200 1 261 1 80 1 84 1 295 2 14 3 334 1 220 3 215 1 246 1 65 1 32 1 
261 1 80 1 84 1 14 2 334 1 220 2 372 1 246 1 177 1 
200 1 80 1 192 1 333 1 240 1 84 1 14 1 220 1 30 1 229 1 246 1 
200 1 261 1 80 1 84 1 14 1 220 1 246 1 
200 1 261 2 80 1 84 1 14 1 334 1 220 1 
200 1 261 1 80 2 84 2 14 2 220 2 212 1 62 1 246 1 283 1 
200 1 101 1 261 1 80 1 334 1 360 1 372 2 84 1 14 3 220 3 30 1 246 2 49 1 
200 1 261 1 80 1 333 1 334 1 240 1 372 1 83 1 84 1 14 2 229 2 220 2 164 1 246 1 249 1 
200 1 101 1 261 1 80 2 334 1 372 2 28 1 84 2 14 4 220 4 30 1 246 2 177 1 
200 1 261 1 80 1 84 1 295 1 14 3 360 1 334 1 220 3 372 1 246 1 
121 1 101 1 30 1 246 1 
261 1 246 1 

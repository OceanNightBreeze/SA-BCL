#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 2 203 1 108 2 235 1 64 1 128 1 131 2 281 2 98 1 70 9 189 1 137 1 72 3 11 1 311 4 48 2 144 6 370 1 222 1 315 1 333 1 23 1 152 2 56 1 27 1 230 2 123 5 378 9 
295 2 203 1 108 2 235 1 64 1 128 1 131 2 281 2 98 1 70 9 189 1 137 1 72 3 11 1 311 4 48 2 144 6 370 1 222 1 315 1 333 1 23 1 152 2 56 1 27 1 230 2 123 5 378 9 
295 2 203 1 108 2 235 1 64 1 128 1 131 2 281 2 98 1 70 10 189 1 137 1 72 4 11 1 311 5 48 2 144 7 370 1 222 1 315 1 333 1 23 1 152 2 56 1 27 1 230 2 123 6 378 10 
295 1 203 1 108 2 235 1 64 1 128 1 131 2 281 2 98 1 70 7 189 1 137 1 72 2 11 1 311 3 48 2 144 4 370 1 222 1 315 1 23 1 152 2 56 1 27 1 230 2 123 4 378 7 
295 2 311 2 48 1 144 3 370 1 222 1 333 1 128 1 152 1 281 1 131 1 70 4 56 1 230 1 189 1 123 3 378 4 72 1 
200 1 159 1 203 1 108 1 48 1 300 1 222 1 128 1 131 1 281 1 70 2 98 1 56 1 123 1 230 1 378 2 
108 1 311 1 144 1 222 1 128 1 131 2 70 3 56 1 27 1 230 2 123 2 378 3 72 1 
295 2 11 1 108 1 4 1 311 4 48 1 144 7 235 1 370 1 372 1 222 1 333 1 128 1 152 1 281 1 131 2 70 9 56 1 27 1 189 1 123 5 230 2 378 9 72 3 
295 2 11 1 108 1 4 1 311 4 48 1 144 7 235 1 370 1 372 1 222 1 333 1 128 1 152 1 281 1 131 2 70 9 56 1 27 1 189 1 123 5 230 2 378 9 72 3 
194 1 254 1 24 1 
172 1 24 1 164 2 
202 1 275 2 54 2 364 2 182 2 150 2 57 2 357 1 
88 1 353 1 202 1 354 1 275 3 161 1 232 1 233 1 207 1 182 2 278 1 357 1 96 1 209 1 34 2 167 1 327 1 169 2 127 1 364 2 283 2 266 1 248 2 12 1 77 1 251 1 286 1 150 2 313 2 350 1 19 1 373 1 21 1 54 3 377 1 122 1 57 2 
92 1 263 1 275 1 163 1 54 1 364 1 182 1 150 1 57 1 357 1 
10 1 92 1 43 1 275 1 3 1 47 1 143 1 150 1 6 1 194 1 24 1 54 1 282 1 245 1 
10 2 92 1 275 1 3 1 143 2 47 1 182 1 150 1 6 1 194 1 24 1 364 1 54 1 282 1 57 1 
10 1 253 1 204 1 225 1 143 1 
10 2 194 1 253 1 24 1 225 1 143 2 9 1 136 1 
10 1 253 1 143 1 
10 1 92 1 275 1 163 1 143 1 125 1 182 1 150 1 357 1 263 1 225 1 364 1 54 1 57 1 
24 1 
10 2 194 1 253 1 24 1 225 1 143 2 9 1 40 1 
10 5 160 1 143 5 276 2 60 1 194 1 255 1 253 2 126 1 65 1 24 1 121 1 225 2 130 1 265 2 154 1 9 1 134 1 171 2 
107 1 202 1 275 3 364 1 54 3 182 3 150 3 57 3 
92 1 275 1 163 1 54 1 182 1 150 1 57 1 
91 1 92 1 362 1 275 1 54 1 364 1 182 1 150 1 57 1 
107 1 88 1 91 1 92 1 202 1 354 1 275 4 206 1 3 1 233 1 207 1 278 1 182 3 357 1 96 1 6 1 209 1 34 1 167 1 327 1 361 1 169 1 127 1 364 2 282 1 214 1 283 2 10 1 248 1 12 1 77 1 251 1 286 1 47 1 143 1 150 3 313 1 19 1 373 1 21 1 54 4 122 1 377 1 57 3 
107 1 202 1 43 1 275 2 54 2 293 1 182 1 150 2 57 1 
10 1 107 2 91 1 92 1 275 3 3 1 143 1 47 1 182 3 150 3 6 1 288 1 361 1 24 1 364 1 54 3 282 1 214 1 57 3 
107 1 91 1 103 1 275 2 116 1 182 2 150 2 364 1 54 2 57 2 
202 1 12 1 354 1 275 1 278 1 313 1 19 1 34 1 373 1 169 1 21 1 327 1 54 1 377 1 122 1 
89 1 202 1 12 1 354 1 275 1 278 1 313 1 19 1 34 1 373 1 169 1 21 1 327 1 54 1 376 1 
88 1 353 2 31 1 233 1 207 1 96 2 7 1 209 1 210 1 167 1 264 1 113 1 343 1 283 2 103 2 248 4 251 1 116 2 287 1 349 2 223 1 292 1 
92 1 275 1 47 1 54 1 99 1 182 1 150 1 57 1 
107 1 103 1 354 1 12 1 275 2 278 1 182 1 150 1 313 1 19 1 373 1 34 1 327 1 21 1 169 1 54 2 122 1 377 1 214 1 57 1 
254 1 202 1 
91 1 202 2 275 2 182 1 150 2 362 1 54 2 364 1 57 1 
103 1 116 1 349 1 
139 1 202 1 12 1 354 1 275 1 278 1 313 1 19 1 34 1 373 1 327 1 169 1 21 1 54 1 377 1 122 1 
107 2 91 1 202 1 43 1 274 1 275 5 182 4 150 5 54 5 364 1 293 1 214 1 73 1 57 4 
92 1 275 2 99 1 163 1 54 2 182 2 150 2 57 2 
360 1 196 1 269 1 
196 1 269 1 33 1 
196 1 269 1 33 1 
196 1 269 1 33 1 
196 1 269 1 
196 1 269 1 
289 1 318 1 
289 1 318 1 
289 1 318 1 
360 1 196 1 269 1 
360 1 196 1 269 1 
196 1 269 1 298 1 
101 1 322 1 289 1 196 2 318 1 269 2 
351 2 10 2 322 1 338 2 181 2 143 2 117 2 110 1 79 1 50 1 332 1 196 2 374 2 24 1 112 1 268 1 84 1 269 2 100 3 
41 1 10 1 351 1 42 1 338 1 202 1 275 2 347 1 143 1 181 1 182 2 298 1 150 2 110 1 238 1 80 1 20 1 196 1 374 1 243 1 54 2 269 1 100 1 57 2 
152 1 281 1 48 1 
200 1 281 1 48 1 
280 1 200 1 2 1 173 1 152 2 281 3 
195 1 200 1 2 1 173 1 152 1 281 2 
200 1 173 1 2 2 152 1 281 2 
87 2 180 2 276 1 164 3 238 1 241 1 210 1 65 1 66 1 265 1 130 3 365 2 113 1 9 1 343 1 171 1 10 5 42 1 172 1 347 1 143 5 287 1 252 1 331 1 151 1 194 1 253 1 51 1 53 1 225 4 24 2 154 2 
58 1 204 5 180 6 276 2 164 9 234 1 238 4 241 3 210 3 66 1 65 1 265 2 130 8 365 6 113 3 9 1 343 3 171 2 10 9 172 3 143 9 287 3 267 1 148 1 331 2 194 1 255 1 253 6 51 2 83 1 225 7 317 1 24 5 375 5 154 6 
87 1 180 2 276 1 164 4 238 1 241 1 210 1 265 1 130 3 113 1 365 2 343 1 171 1 10 3 172 2 143 3 287 1 252 1 331 1 194 1 255 1 51 1 24 3 225 2 53 1 154 2 
87 2 180 4 276 1 164 7 234 1 238 2 241 2 210 2 265 1 130 5 365 4 113 2 343 2 171 1 10 4 172 3 143 4 287 2 252 1 267 1 148 1 331 1 194 1 255 1 51 1 24 4 53 1 225 3 154 4 
327 1 354 1 
373 1 327 3 354 1 105 1 68 2 329 1 
254 1 327 1 68 1 
327 1 285 1 
227 1 
373 1 327 1 354 1 
327 1 162 1 
353 4 323 1 248 7 1 1 76 1 44 1 220 2 147 3 96 3 239 1 111 2 210 1 334 1 113 1 366 1 294 1 216 1 
353 4 323 1 248 7 1 1 76 1 44 1 220 2 147 3 96 3 239 1 111 2 210 1 334 1 113 1 366 1 294 1 216 1 
323 1 353 4 248 7 1 1 76 1 44 1 220 2 147 3 95 1 96 3 239 1 111 2 210 1 334 1 113 1 366 1 294 1 216 1 
88 1 323 1 353 16 1 1 260 1 178 1 356 1 233 1 261 1 299 1 239 2 96 15 359 4 111 3 241 3 210 4 167 1 363 1 113 4 366 2 343 3 216 2 283 2 76 1 248 31 44 5 251 1 220 3 287 3 147 8 197 3 82 1 334 2 294 1 
88 2 353 5 323 1 205 1 233 2 261 1 96 4 239 1 111 2 210 1 167 2 113 1 366 1 283 4 216 1 248 9 76 1 44 1 251 2 220 3 147 4 120 1 334 1 294 1 
200 1 108 1 93 1 59 1 340 1 280 1 34 1 169 1 128 1 305 1 131 1 281 2 70 2 190 1 104 1 12 1 192 1 144 1 48 1 313 1 222 1 21 1 22 1 152 1 25 1 56 1 123 1 230 1 86 1 378 2 
28 1 200 1 108 1 59 1 340 1 301 1 280 1 34 1 169 1 128 1 131 1 281 2 70 3 190 1 138 1 104 1 12 1 192 1 48 1 144 2 313 1 222 1 21 1 22 1 152 1 25 1 123 1 230 1 86 1 378 3 
28 1 200 1 108 1 59 1 340 1 301 1 280 1 34 1 169 1 128 1 281 2 70 2 12 1 192 1 144 2 48 1 313 1 222 1 21 1 22 1 152 1 25 1 123 1 86 1 378 2 
354 1 108 2 59 2 340 2 34 1 169 1 168 1 327 1 131 1 133 1 70 1 138 1 308 1 12 1 141 1 14 1 313 1 19 1 21 1 22 2 316 1 230 1 378 1 
28 1 200 1 108 1 59 1 340 1 280 1 34 1 169 1 305 1 131 1 281 2 70 1 190 1 104 1 12 1 192 1 48 1 313 1 21 1 22 1 152 1 25 1 56 1 230 1 86 1 378 1 
174 1 
158 2 3 1 339 1 164 2 63 2 6 1 166 1 169 2 65 1 304 2 265 1 9 3 171 1 10 5 308 1 217 1 172 2 12 1 313 2 314 1 19 2 21 1 24 2 270 1 273 4 90 2 352 1 92 1 354 1 275 1 276 1 94 2 185 1 186 1 34 2 327 1 188 2 130 2 97 2 282 1 135 1 245 1 328 1 43 1 368 1 141 1 143 5 47 1 145 1 150 1 331 1 194 1 253 6 54 1 154 2 
273 2 92 1 275 1 3 1 6 1 97 1 282 1 9 1 245 1 328 1 40 1 10 3 217 1 43 1 368 1 143 3 47 1 145 1 150 1 314 1 253 2 54 1 
273 3 90 1 92 1 275 1 3 1 6 1 282 1 9 1 245 1 328 1 40 1 10 3 217 1 43 1 368 1 143 3 47 1 145 1 150 1 314 1 194 1 253 1 24 1 54 1 
273 3 90 1 92 1 275 1 3 1 94 1 6 1 97 1 282 1 9 1 245 1 40 1 328 1 10 3 217 1 43 1 368 1 143 3 47 1 145 1 150 1 314 1 194 1 253 2 24 1 54 1 
158 2 3 1 6 1 63 2 166 1 65 1 304 2 265 1 9 3 171 1 10 5 217 1 172 2 348 1 314 1 24 5 273 6 90 4 30 1 352 1 92 1 275 1 276 1 94 4 35 1 130 1 188 2 97 4 282 1 245 1 328 1 40 1 247 1 43 1 191 1 368 1 47 1 143 5 145 1 150 1 194 5 253 7 54 1 154 1 
158 2 273 4 90 2 352 1 92 1 275 1 3 1 339 1 276 1 164 2 94 2 63 2 6 1 166 1 65 1 304 2 188 2 130 1 265 1 97 2 282 1 9 2 245 1 171 1 328 1 10 4 217 1 172 2 43 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 253 4 24 2 54 1 154 1 
158 2 273 4 90 2 352 1 92 1 275 1 3 1 276 1 94 2 63 2 6 1 166 1 65 1 304 2 35 1 188 2 130 1 265 1 97 2 282 1 9 2 245 1 171 1 328 1 10 4 217 1 172 2 247 1 43 1 191 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 253 4 24 1 54 1 154 1 
158 2 273 4 90 2 352 1 92 1 275 1 3 1 276 1 94 2 63 2 6 1 166 1 65 1 304 2 35 1 188 2 130 1 265 1 97 2 282 1 9 2 245 1 171 1 328 1 10 4 217 1 172 2 247 1 43 1 191 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 253 4 24 1 54 1 154 1 
158 2 273 4 90 2 92 1 275 1 3 1 276 1 164 2 94 2 6 1 358 1 166 1 208 1 65 1 188 2 130 1 265 1 97 2 282 1 9 2 245 1 171 1 328 1 10 4 217 1 43 1 250 2 191 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 18 2 253 4 24 1 54 1 319 1 154 1 
158 2 273 5 352 1 30 1 90 3 92 1 275 1 3 1 276 1 94 3 63 2 6 1 166 1 65 1 304 2 35 1 188 2 130 1 265 1 97 3 282 1 9 2 245 1 171 1 328 1 10 4 217 1 172 2 247 1 43 1 191 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 253 5 24 1 54 1 154 1 
158 2 273 5 352 1 30 1 90 3 92 1 275 1 3 1 276 1 94 3 63 2 6 1 166 1 65 1 304 2 35 1 188 2 130 1 265 1 97 3 282 1 9 2 245 1 171 1 328 1 10 4 217 1 172 2 247 1 43 1 191 1 368 1 143 4 47 1 145 1 150 1 314 1 194 1 253 5 24 1 54 1 154 1 
158 2 273 4 90 2 92 1 275 1 3 1 339 1 276 1 164 2 94 2 6 1 166 1 208 1 65 1 188 2 130 1 265 1 97 2 282 1 9 2 245 1 171 1 328 1 10 4 217 1 43 1 250 2 368 1 143 4 47 1 145 1 150 1 314 1 194 1 18 2 253 4 24 1 54 1 154 1 
88 1 103 1 353 2 248 2 31 1 44 1 251 1 116 1 207 1 233 1 147 1 349 1 209 1 167 1 292 1 113 1 343 1 283 2 
88 1 103 1 248 2 251 1 116 1 207 1 233 1 287 1 349 1 96 2 209 1 167 1 210 1 223 1 292 1 283 2 
88 1 103 2 353 2 248 4 251 1 116 2 287 1 207 1 233 1 349 2 96 2 209 1 241 1 210 1 167 1 292 1 113 1 343 1 283 2 
88 1 103 1 353 2 248 2 31 1 44 1 251 1 116 1 207 1 233 1 236 1 147 1 349 1 209 1 167 1 113 1 343 1 283 2 
88 1 103 1 248 2 251 1 116 1 207 1 233 1 287 1 236 1 349 1 96 2 209 1 167 1 210 1 223 1 283 2 
88 1 103 2 353 2 248 4 44 1 251 1 116 2 287 1 207 1 233 1 236 1 147 1 349 2 96 2 209 1 241 1 210 1 167 1 113 1 343 1 283 2 
88 1 103 2 353 2 248 4 251 1 116 2 287 1 207 1 233 1 349 2 96 2 209 1 241 1 210 1 167 1 113 1 343 1 283 2 
88 1 353 1 202 1 354 1 275 1 161 1 278 1 207 1 233 1 96 1 34 1 209 1 169 1 327 1 167 1 127 1 283 2 248 2 12 1 286 1 251 1 313 1 19 1 373 1 21 1 54 1 122 1 377 1 
89 1 88 1 353 1 202 1 354 1 275 1 161 1 278 1 207 1 233 1 96 1 34 1 209 1 169 1 327 1 167 1 127 1 129 1 283 2 248 2 12 1 251 1 313 1 19 1 373 1 21 1 54 1 376 1 
88 1 353 2 233 1 207 1 96 2 241 1 209 1 167 1 210 1 113 1 343 1 283 2 103 2 248 4 251 1 116 2 287 1 349 2 257 1 
88 1 353 2 354 1 275 1 93 1 278 1 207 1 233 1 96 2 34 1 209 1 241 1 210 1 169 1 327 1 167 1 113 1 244 1 343 1 283 2 103 2 248 4 12 1 286 1 251 1 116 2 287 1 313 1 349 2 373 1 21 1 54 1 122 1 377 1 
91 1 88 1 353 2 275 1 233 1 207 1 182 1 96 1 209 1 241 1 210 1 167 1 364 1 113 1 343 1 283 2 103 1 248 3 44 1 251 1 116 1 287 1 147 1 150 1 17 1 349 1 257 1 54 1 57 1 
88 1 323 1 353 3 202 2 233 1 207 1 239 1 96 3 111 1 209 1 167 1 210 1 113 1 216 1 283 2 103 1 76 1 248 6 251 1 116 1 220 2 147 2 349 1 254 1 292 1 294 1 
88 2 353 8 202 1 178 1 161 1 277 1 233 2 207 1 96 6 359 3 209 2 241 2 167 2 210 1 127 1 37 1 113 2 343 2 283 4 103 11 248 14 44 1 251 2 142 1 116 4 287 1 147 1 349 11 197 3 82 1 257 1 157 1 
107 1 88 1 353 1 202 1 354 1 275 2 161 1 109 1 278 1 233 1 207 1 182 1 96 1 34 1 209 1 327 1 169 1 167 1 127 1 214 1 283 2 139 1 309 1 248 2 12 1 251 1 116 1 313 1 150 1 19 1 373 1 21 1 291 1 257 1 54 2 122 1 377 1 57 1 
107 1 207 2 209 2 169 1 167 2 210 1 113 1 214 1 343 1 12 1 116 3 220 1 313 1 221 1 349 3 19 1 21 1 26 1 122 1 88 2 353 3 354 1 275 2 182 1 233 2 278 1 279 1 96 4 34 1 241 1 327 1 127 1 244 1 283 4 103 3 248 7 367 1 251 2 286 1 287 1 147 1 150 1 373 1 257 1 54 2 377 1 57 1 
107 1 28 1 88 2 353 1 354 2 275 1 161 1 93 1 182 1 233 2 207 2 236 1 96 1 34 8 209 2 327 3 169 8 167 2 127 1 38 1 283 4 266 2 308 1 248 2 218 1 12 2 251 2 175 1 141 1 150 1 313 7 118 1 49 1 19 2 21 2 292 1 54 1 321 1 57 1 
91 1 88 1 353 1 275 1 233 1 207 1 182 1 96 2 209 1 241 1 167 1 210 1 364 1 113 1 343 1 283 2 103 1 248 3 251 1 116 1 287 1 193 1 150 1 349 1 257 1 54 1 57 1 
88 2 353 6 178 1 355 1 296 1 233 2 96 7 359 2 342 1 241 2 167 2 210 2 113 2 343 2 283 4 284 1 248 13 44 1 115 1 251 2 146 1 287 2 147 1 16 1 197 1 82 1 120 1 379 1 
88 3 353 14 201 1 355 2 231 1 296 2 233 3 261 2 184 1 62 1 96 12 359 2 342 4 241 3 210 2 167 3 211 1 113 3 71 1 343 3 283 6 284 1 248 26 44 2 251 3 220 1 146 1 287 2 147 3 197 2 82 2 120 1 155 1 379 1 
201 1 296 2 297 1 261 1 62 1 111 1 342 4 210 5 167 3 211 1 113 5 71 1 343 4 216 1 76 1 220 2 16 1 82 3 120 1 88 3 353 20 323 1 178 1 355 1 231 1 233 3 184 1 96 21 239 1 359 4 241 4 283 6 284 1 248 41 44 4 251 3 287 4 146 1 147 6 197 3 155 1 294 1 379 1 
201 1 296 2 297 1 261 2 62 1 111 1 342 4 210 4 167 4 211 1 113 5 71 1 343 4 216 1 76 1 220 2 16 1 82 3 120 1 88 4 353 20 323 1 178 1 355 1 231 1 233 4 184 1 96 18 239 1 359 4 241 4 283 8 284 1 248 38 44 3 251 4 287 3 146 1 147 5 197 3 155 1 294 1 379 1 
88 2 323 1 353 18 201 1 178 1 355 1 231 1 296 1 233 2 261 1 184 1 62 1 239 1 96 19 359 3 111 1 241 4 342 4 167 2 210 5 211 1 113 5 71 1 343 4 216 1 283 4 284 1 76 1 248 37 44 2 251 2 220 2 146 1 287 4 147 4 197 2 82 2 120 1 155 1 294 1 379 1 
10 1 351 1 322 1 338 1 143 1 181 1 117 1 110 1 79 1 50 1 332 1 196 1 374 1 24 1 268 1 84 1 269 1 100 2 
10 1 351 1 322 1 338 1 143 1 181 1 117 1 110 1 79 1 50 1 332 1 196 1 374 1 24 1 268 1 84 1 269 1 100 2 
10 1 351 1 322 1 338 1 143 1 181 1 117 1 110 1 79 1 50 1 332 1 196 1 374 1 24 1 268 1 84 1 269 1 100 2 
101 1 360 1 303 1 
101 1 360 1 303 1 
345 1 33 1 
101 1 345 1 33 1 
41 1 20 1 
351 1 338 1 202 1 275 2 181 1 182 2 298 1 238 1 243 1 100 1 10 1 41 1 42 1 347 1 143 1 117 1 150 2 80 1 20 1 196 1 374 1 52 1 225 1 54 2 84 1 269 1 57 2 
351 1 322 1 338 1 50 1 332 1 196 1 374 1 181 1 269 1 156 1 
80 1 298 1 
351 1 338 1 196 1 374 1 219 1 45 1 181 1 269 1 371 1 
360 1 303 1 
101 1 345 1 33 1 
88 1 353 1 354 1 275 2 161 1 233 1 207 1 165 1 96 1 240 1 34 2 209 1 327 1 169 2 167 1 127 1 170 1 283 2 266 2 248 2 218 1 12 1 251 1 150 2 149 1 313 2 118 1 21 1 257 1 54 2 337 1 
28 1 200 1 12 1 104 1 324 1 93 1 330 1 192 1 48 1 313 2 280 1 34 2 21 1 169 2 22 1 290 1 152 1 281 2 86 1 
246 1 28 1 200 1 104 1 12 1 324 1 192 1 48 1 313 1 280 1 34 1 169 1 21 1 22 1 152 1 281 2 86 1 
308 1 29 1 12 1 354 1 141 1 313 1 19 1 34 1 21 1 327 1 169 1 22 1 290 1 133 1 
28 1 200 1 104 1 12 1 324 1 330 1 192 1 48 1 313 1 280 1 34 1 21 1 169 1 22 1 290 1 152 1 281 2 86 1 
226 1 
194 1 254 1 126 1 24 1 121 1 130 1 154 1 
352 1 276 1 164 1 63 1 65 1 304 1 130 1 265 1 9 1 171 1 10 1 172 1 143 1 194 1 253 1 24 2 154 1 
3 1 5 1 164 6 341 1 169 1 210 1 65 2 265 2 68 1 113 1 9 1 343 1 171 2 10 2 172 3 12 1 313 1 19 1 21 2 24 3 354 1 180 3 276 2 326 1 279 1 34 1 241 1 327 4 130 4 365 3 39 1 249 1 140 1 285 2 143 2 287 1 369 1 331 1 373 1 253 2 256 1 105 1 154 3 
201 1 231 1 180 5 276 2 164 6 184 1 341 2 359 1 185 1 241 2 210 2 65 2 211 1 130 8 265 2 365 5 113 2 213 1 9 1 343 2 171 2 10 1 172 3 143 1 287 2 331 1 194 2 253 1 197 1 82 1 24 5 335 1 154 5 155 1 177 1 
92 1 275 1 163 1 276 1 125 1 182 1 357 1 239 1 341 2 210 1 65 1 263 1 265 1 130 2 364 1 113 2 216 1 171 1 10 1 247 1 346 1 143 1 150 1 54 1 154 2 294 1 177 1 57 1 
276 1 194 1 65 1 126 1 121 1 24 1 265 1 130 1 154 1 171 1 
172 2 180 2 164 4 287 1 241 1 210 1 24 2 130 2 113 1 365 2 154 2 343 1 
10 1 194 1 253 1 24 1 143 1 9 1 
270 1 0 1 354 1 276 2 185 2 34 4 327 1 169 4 65 1 265 2 130 2 9 2 135 1 171 2 10 3 308 1 12 1 143 3 141 1 15 1 313 4 331 2 19 2 255 1 253 4 21 1 336 1 228 2 154 2 
88 1 202 1 354 1 275 3 182 2 278 1 207 1 233 1 357 1 96 1 34 1 209 1 167 1 169 1 327 1 127 1 364 2 283 2 248 1 12 1 77 1 251 1 286 1 313 1 150 2 19 1 373 1 21 1 54 3 377 1 122 1 57 2 
172 2 180 2 276 1 164 4 331 1 194 2 111 1 185 1 65 1 24 4 265 1 130 1 365 2 154 2 171 1 
338 1 181 1 61 1 
338 1 181 1 114 1 
338 1 181 1 114 1 
338 1 181 1 114 1 
338 1 181 1 
196 1 269 1 
338 1 181 1 61 1 
338 1 181 1 61 1 
338 1 20 1 50 1 69 1 181 1 
88 2 353 4 323 1 248 8 76 1 44 1 251 2 220 2 233 2 261 1 147 3 96 4 239 1 111 1 210 1 167 2 113 1 294 1 283 4 216 1 
323 1 353 3 76 1 248 6 220 2 147 2 96 3 239 1 111 1 254 1 210 1 113 1 294 1 216 1 
88 1 353 2 248 4 44 1 251 1 287 1 233 1 147 1 312 1 96 2 241 1 210 1 167 1 113 1 343 1 283 2 
353 3 248 7 178 1 44 1 287 1 147 1 96 4 359 2 241 1 210 1 197 1 82 1 113 1 343 1 
88 1 323 1 353 13 178 1 277 1 233 1 261 1 239 2 96 12 359 2 111 1 241 2 210 5 167 1 113 5 343 2 216 2 283 2 248 25 76 1 346 1 44 4 251 1 220 4 142 1 287 2 147 8 197 2 294 2 
96 1 359 1 248 1 
353 1 248 1 197 1 
353 3 248 6 44 1 220 1 287 1 279 1 147 2 96 3 241 1 210 1 113 1 343 1 
88 2 353 6 201 1 231 1 233 2 261 1 184 1 96 7 359 1 241 2 167 2 210 2 211 1 113 2 343 2 283 4 248 13 44 1 251 2 220 1 287 2 147 2 197 1 82 1 120 1 155 1 
353 3 248 6 44 1 220 1 147 2 96 3 239 1 210 1 113 1 294 1 216 1 
88 1 353 1 323 1 248 3 76 1 44 1 251 1 220 1 233 1 261 1 147 2 239 1 96 2 167 1 132 1 216 1 283 2 
96 4 239 1 353 4 210 2 248 8 346 1 44 1 220 2 113 2 294 1 147 3 216 1 
88 1 353 2 248 2 44 1 251 1 233 1 147 1 167 1 120 1 113 1 343 1 283 2 
88 1 353 2 248 4 251 1 233 1 287 1 96 2 241 1 210 1 167 1 120 1 113 1 343 1 283 2 
88 3 353 1 248 3 44 1 251 3 220 1 233 3 261 1 147 2 16 1 96 2 239 1 167 3 120 1 132 1 283 6 216 1 
88 5 323 1 353 16 260 1 178 1 233 5 261 2 299 1 239 3 96 18 359 4 111 1 241 3 167 5 210 5 363 1 132 1 113 5 343 3 216 3 283 10 76 1 248 34 44 5 251 5 220 4 287 3 312 1 147 9 16 1 197 3 82 1 120 1 294 2 
88 1 353 4 323 1 231 1 233 1 96 4 239 1 359 1 111 1 210 1 167 1 113 1 283 2 216 1 248 8 76 1 251 1 220 2 147 2 197 1 82 1 120 1 294 1 
88 2 323 1 353 6 178 1 231 1 233 2 239 1 96 5 359 2 111 1 241 1 210 1 167 2 113 2 343 1 216 1 283 4 76 1 248 11 44 1 251 2 220 2 312 1 147 3 197 1 82 1 120 1 294 1 
88 3 323 1 353 9 201 1 231 1 233 3 261 1 184 1 239 1 96 10 359 1 111 1 241 2 167 3 210 3 211 1 113 3 343 2 216 1 283 6 76 1 248 19 44 1 251 3 220 3 287 2 312 1 147 4 197 1 82 1 120 1 155 1 294 1 
88 4 353 7 201 1 231 1 233 4 261 2 184 1 96 5 359 1 241 2 167 4 210 1 211 1 113 2 343 2 283 8 248 12 44 1 251 4 220 1 287 1 312 1 147 2 197 1 82 1 120 1 155 1 
88 1 353 4 323 1 231 1 233 1 96 4 239 1 359 1 111 1 210 1 167 1 113 1 283 2 216 1 248 8 76 1 251 1 220 2 147 2 197 1 82 1 120 1 294 1 
88 2 353 6 201 1 231 1 233 2 261 1 184 1 96 7 359 1 241 2 167 2 210 2 211 1 113 2 343 2 283 4 248 13 44 1 251 2 220 1 287 2 147 2 197 1 82 1 120 1 155 1 
88 4 323 1 353 10 201 1 231 1 233 4 261 2 184 1 239 1 96 8 359 1 111 1 241 2 167 4 210 2 211 1 113 3 343 2 216 1 283 8 76 1 248 18 44 2 251 4 220 3 287 1 312 1 147 5 197 1 82 1 120 1 155 1 294 1 
88 4 353 9 201 1 231 1 233 4 261 2 184 1 96 7 359 1 241 3 167 4 210 2 211 1 113 3 343 3 283 8 248 16 44 3 251 4 220 1 287 2 147 4 16 1 197 1 82 1 120 1 155 1 
323 2 353 3 248 7 76 1 44 3 220 3 147 6 96 4 239 3 210 1 113 1 294 1 216 3 
88 4 323 1 353 10 201 1 231 1 233 4 261 2 184 1 239 1 96 8 359 1 111 1 241 2 167 4 210 2 211 1 113 3 343 2 216 1 283 8 76 1 248 18 44 1 251 4 220 3 287 1 147 4 16 1 197 1 82 1 120 1 155 1 294 1 
202 1 43 1 275 1 54 1 153 1 293 1 150 1 
75 1 202 1 43 1 32 1 275 1 237 1 150 1 262 1 306 1 54 1 153 1 293 1 
308 1 19 1 254 1 34 1 21 1 327 1 169 1 12 1 354 1 141 1 313 1 
107 1 202 1 354 1 12 1 275 2 278 1 182 1 150 1 313 1 19 1 373 1 34 1 327 1 21 1 169 1 54 2 122 1 57 1 
107 1 92 1 202 1 354 2 12 1 275 2 162 1 47 1 278 1 182 2 150 2 313 1 373 2 34 1 327 3 21 1 169 1 212 1 54 2 228 1 122 1 282 1 57 1 
107 1 92 1 202 1 354 2 12 1 275 2 162 1 47 1 278 1 182 2 150 2 313 2 373 2 34 2 327 3 21 1 169 2 212 1 36 1 54 2 228 1 376 1 282 1 57 1 
10 2 74 1 354 1 12 1 3 1 162 1 285 1 143 2 313 3 194 1 19 1 373 1 34 3 253 1 21 1 169 3 327 4 212 1 24 1 36 1 68 1 228 1 320 1 
10 2 354 1 12 1 3 1 162 1 285 1 143 2 369 1 313 3 194 1 19 1 373 1 34 3 253 1 21 1 169 3 327 4 212 1 24 1 36 1 68 1 228 1 
34 1 21 1 169 1 12 1 175 1 313 1 
266 1 28 1 272 1 354 2 12 2 93 1 175 1 313 6 118 1 49 1 19 2 34 7 373 1 169 7 327 3 21 3 105 1 38 1 259 1 85 1 321 1 
107 1 202 2 207 2 111 1 209 2 169 1 167 2 210 1 113 1 216 1 76 1 12 1 116 1 220 2 313 1 221 1 349 1 21 1 122 1 88 2 323 1 353 3 354 1 275 2 93 1 182 1 233 2 278 1 239 1 96 3 34 1 327 1 244 1 283 4 103 1 248 6 286 1 251 2 150 1 147 2 373 1 257 1 54 2 377 1 294 1 57 1 337 1 
3 1 276 2 34 1 169 1 327 2 126 1 65 2 130 1 265 2 68 1 9 1 171 2 10 3 249 1 140 1 285 1 143 3 369 1 313 1 194 1 19 1 253 2 256 1 24 1 121 1 225 1 336 1 154 1 
354 1 12 1 93 1 175 1 313 2 34 2 373 1 169 2 327 2 21 2 105 1 68 1 39 1 
308 1 310 1 354 1 12 1 93 1 141 1 313 4 19 1 34 4 21 1 169 4 327 1 36 1 
272 1 354 1 12 1 325 1 46 1 313 2 187 1 34 2 373 1 169 2 327 1 21 2 228 1 259 1 
200 1 19 1 34 1 21 1 169 1 12 1 281 1 48 1 86 1 313 1 
118 1 28 1 240 1 34 2 21 1 327 1 169 2 12 1 354 1 93 1 313 2 
308 1 310 1 354 2 12 2 93 1 141 1 313 4 118 1 49 1 19 1 34 5 169 5 327 3 21 2 228 1 38 1 
308 1 310 1 354 2 12 2 93 1 141 1 176 1 313 4 118 1 49 1 19 1 34 5 169 5 327 3 21 2 228 1 
107 1 202 1 354 1 12 1 275 2 278 1 182 1 150 1 313 1 19 1 373 1 34 1 327 1 21 1 169 1 54 2 376 1 57 1 
272 1 354 1 12 1 313 1 34 1 373 1 169 1 327 1 21 2 105 1 259 1 228 1 85 1 
119 1 275 1 54 1 170 1 8 1 150 1 165 1 149 1 183 1 
119 1 13 1 215 1 
119 1 202 1 242 1 8 1 183 1 
10 2 92 1 202 1 3 1 13 1 47 1 143 2 183 2 119 1 6 1 194 1 361 1 242 2 24 1 225 1 8 2 282 1 106 1 215 1 
222 1 254 1 128 1 123 1 
222 1 128 1 131 1 70 1 123 1 230 1 378 1 
108 1 70 1 59 1 
102 1 203 2 222 1 128 1 131 1 70 3 258 1 56 1 229 1 123 1 230 1 378 3 
222 1 295 1 128 1 131 1 70 2 144 1 123 1 230 1 378 2 
311 1 48 1 152 1 131 1 281 1 70 1 56 1 230 1 189 1 123 1 378 1 
222 1 131 1 70 1 56 1 123 1 230 1 378 1 
222 2 128 1 131 1 70 1 56 1 230 1 378 1 
78 1 222 1 224 1 131 2 55 1 70 2 56 1 123 1 230 2 378 2 
11 1 311 1 144 2 235 1 222 1 128 1 131 1 70 3 56 1 230 1 123 2 378 3 72 1 
199 1 200 1 48 1 144 1 280 1 222 1 128 1 152 1 281 2 131 1 70 2 56 1 123 1 230 1 378 2 
295 1 311 1 144 2 222 1 333 1 128 1 131 2 70 4 56 1 230 2 123 2 378 4 72 1 
222 1 128 1 131 1 70 1 56 1 123 1 230 1 378 1 
203 1 124 1 311 1 144 2 222 2 128 2 131 1 258 1 70 4 229 1 230 1 123 3 378 4 72 1 
344 1 4 1 144 1 222 1 128 1 131 1 70 2 56 1 307 1 123 1 230 1 378 2 
203 2 179 1 222 1 128 1 131 1 258 1 70 3 56 1 229 2 123 1 230 1 378 3 
271 1 81 1 67 2 123 2 
302 1 131 1 70 1 56 1 230 1 378 1 
222 1 128 1 131 1 70 2 144 1 56 1 123 1 235 1 230 1 378 2 
198 1 
222 1 128 1 131 1 70 1 56 1 123 1 230 1 378 1 
203 1 144 1 235 1 222 1 128 1 131 1 70 3 56 1 230 1 123 1 378 3 
124 1 311 1 123 1 72 1 
222 1 123 1 

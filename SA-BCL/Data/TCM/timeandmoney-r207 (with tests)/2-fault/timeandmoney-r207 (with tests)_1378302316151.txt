#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 189 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 167 1 18 5 291 1 268 2 269 1 205 1 67 9 249 4 273 1 42 1 29 1 76 6 182 1 212 9 32 2 338 1 214 2 301 2 84 1 283 1 257 1 185 3 342 2 306 2 34 2 159 1 348 1 
168 1 167 1 18 5 291 1 268 2 269 1 205 1 67 9 249 4 273 1 42 1 29 1 76 6 182 1 212 9 32 2 338 1 214 2 301 2 84 1 283 1 257 1 185 3 306 2 342 2 34 2 159 1 348 1 
168 1 167 1 18 6 291 1 268 2 269 1 205 1 67 10 249 5 273 1 42 1 29 1 76 7 182 1 212 10 32 2 338 1 214 2 301 2 84 1 283 1 257 1 185 4 306 2 342 2 34 2 159 1 348 1 
168 1 167 1 18 4 291 1 268 2 269 1 205 1 67 7 249 3 42 1 29 1 76 4 182 1 212 7 32 2 338 1 214 2 301 2 84 1 283 1 257 1 185 2 306 2 342 1 34 2 159 1 348 1 
212 4 168 1 18 3 32 1 338 1 214 1 301 1 268 1 84 1 269 1 205 1 67 4 185 1 249 2 306 1 342 2 273 1 76 3 
212 2 200 1 18 1 32 1 338 1 214 1 301 1 84 1 205 1 257 1 67 2 306 1 34 1 159 1 149 1 148 1 
212 3 18 2 32 2 338 1 214 2 84 1 205 1 67 3 185 1 249 1 34 1 348 1 76 1 
18 5 168 1 268 1 269 1 205 1 67 9 249 4 273 1 29 1 76 7 212 9 32 2 338 1 214 2 301 1 84 1 283 1 185 3 342 2 306 1 34 1 237 1 348 1 220 1 
18 5 168 1 268 1 269 1 205 1 67 9 249 4 273 1 29 1 76 7 212 9 32 2 338 1 214 2 301 1 84 1 283 1 185 3 342 2 306 1 34 1 237 1 348 1 220 1 
153 1 90 1 172 1 
153 1 227 1 247 2 
187 2 280 2 284 2 1 2 282 2 75 1 271 2 157 1 
58 1 354 1 353 1 1 2 292 1 99 1 145 1 271 3 294 1 359 1 146 2 72 1 230 1 298 1 75 1 276 1 364 1 279 1 280 2 109 2 233 1 282 2 340 1 86 1 157 1 305 1 341 1 187 3 284 2 188 1 307 1 343 2 345 1 14 2 308 1 349 2 140 1 
121 1 187 1 280 1 284 1 1 1 282 1 304 1 75 1 271 1 379 1 
310 1 153 1 143 1 282 1 331 1 61 1 215 1 172 1 271 1 187 1 286 1 16 1 379 1 365 1 
280 1 310 1 153 1 1 1 282 1 331 1 61 1 215 1 172 1 271 1 187 1 284 1 16 2 365 2 379 1 
104 1 6 1 53 1 16 1 365 1 
104 1 6 1 153 1 144 1 309 1 172 1 16 2 365 2 
6 1 16 1 365 1 
121 1 280 1 1 1 282 1 293 1 304 1 271 1 104 1 187 1 284 1 75 1 16 1 379 1 365 1 
153 1 
104 1 6 1 153 1 309 1 172 1 46 1 16 2 365 2 
166 1 153 1 97 1 329 2 2 1 172 1 68 1 104 2 6 2 320 1 124 1 71 1 374 2 128 1 120 1 309 1 262 2 16 5 365 5 
58 1 280 1 109 1 1 1 99 1 282 1 145 1 271 2 4 1 341 1 187 2 188 1 359 1 146 1 14 1 28 1 137 1 230 1 276 1 364 1 
90 1 157 1 
280 1 1 1 282 2 267 1 271 2 157 2 187 2 284 1 119 1 
256 1 28 1 209 1 
58 1 109 1 99 1 145 1 271 1 157 1 341 1 187 1 188 1 359 1 146 1 14 1 230 1 276 1 219 1 364 1 
280 4 143 1 1 4 282 5 271 5 157 1 4 1 187 5 284 1 344 1 27 1 43 1 137 2 119 1 
121 1 187 2 280 2 1 2 282 2 103 1 271 2 379 1 
187 3 280 3 284 1 1 3 282 3 137 1 271 3 157 1 
121 1 187 1 280 1 1 1 282 1 271 1 379 1 
187 1 280 1 284 1 1 1 282 1 267 1 119 1 271 1 379 1 
58 1 310 1 354 1 1 3 292 1 99 1 331 1 61 1 145 1 271 4 294 1 4 1 359 1 146 1 72 1 73 1 230 1 298 1 276 1 210 1 75 1 364 1 365 1 280 3 109 1 282 3 215 1 157 1 341 1 305 1 187 4 188 1 284 2 307 1 343 1 345 1 14 1 137 1 308 1 119 1 349 2 140 1 16 1 379 1 
187 2 280 1 143 1 344 1 1 1 282 2 137 1 271 2 157 1 
280 3 310 1 153 1 1 3 282 3 61 1 331 1 215 1 271 3 4 1 207 1 187 3 284 1 137 2 73 1 119 1 16 1 365 1 379 1 
280 2 1 2 256 1 282 2 271 2 187 2 284 1 137 1 28 1 119 1 
58 1 109 1 99 1 145 1 271 1 157 1 341 1 187 1 188 1 359 1 146 1 14 1 230 1 276 1 364 1 
109 1 99 1 145 1 271 1 13 1 157 1 187 1 188 1 359 1 146 1 14 1 230 1 231 1 276 1 364 1 
354 1 292 1 69 1 105 1 72 1 28 2 209 2 298 1 255 1 299 1 279 2 312 1 82 1 111 1 256 2 158 1 371 1 236 1 307 1 343 4 345 2 324 1 349 2 140 1 
187 1 280 1 1 1 282 1 331 1 103 1 271 1 379 1 
297 1 194 1 
297 1 194 1 
323 1 316 1 
323 1 316 1 
297 1 323 1 316 1 194 1 
297 1 243 1 194 1 
297 1 243 1 194 1 
297 1 243 1 194 1 
297 1 194 1 173 1 
297 1 194 1 221 1 
132 1 297 2 323 1 316 1 238 1 194 2 
297 1 194 1 173 1 
297 1 194 1 173 1 
141 1 1 2 224 1 102 1 332 1 271 2 248 1 297 1 150 1 152 1 365 1 280 2 81 1 282 2 339 1 157 1 134 1 187 2 190 1 37 1 194 1 261 1 16 1 221 1 
132 1 141 1 153 1 11 1 330 1 224 2 258 2 234 1 134 2 297 2 208 1 37 3 147 1 194 2 150 2 151 1 16 2 152 2 365 2 
306 1 301 1 268 1 
306 1 200 1 301 1 
200 1 301 3 60 1 357 1 268 2 50 1 
200 1 301 2 357 1 268 1 50 1 95 1 
200 1 301 2 268 1 357 2 50 1 
166 1 165 1 223 1 329 1 172 1 66 1 247 3 248 1 104 4 6 1 124 2 227 1 125 1 254 1 365 5 31 2 312 1 153 2 82 1 339 1 368 1 371 1 259 2 236 1 320 3 190 1 374 1 309 1 350 1 262 1 16 5 163 2 
166 1 19 1 329 2 39 1 65 1 172 1 66 2 247 9 68 1 248 4 104 7 6 6 124 6 227 3 254 1 130 5 365 9 312 3 153 5 82 3 368 2 371 3 259 6 319 1 236 3 320 8 53 5 374 2 136 1 322 1 309 1 350 3 262 2 16 9 163 6 
165 1 223 1 329 1 172 1 66 1 247 4 68 1 248 1 104 2 124 2 227 2 365 3 31 1 312 1 153 3 82 1 368 1 371 1 259 2 320 3 236 1 374 1 262 1 350 1 16 3 163 2 
165 1 223 1 329 1 39 1 172 1 66 1 247 7 68 1 248 2 104 3 124 4 227 3 365 4 31 2 312 2 153 4 82 2 368 1 371 2 259 4 320 5 236 2 374 1 136 1 322 1 262 1 350 2 16 4 163 4 
133 1 90 1 99 1 
99 1 246 1 
217 1 
99 1 145 1 364 1 
99 1 174 1 
99 1 364 1 
133 2 199 1 135 1 99 3 145 1 364 1 
279 4 312 1 111 3 241 1 202 1 184 1 235 1 236 1 343 7 345 3 93 1 191 1 275 1 239 2 378 1 299 2 197 1 
279 4 312 1 111 3 241 1 202 1 184 1 235 1 236 1 343 7 345 3 93 1 191 1 275 1 239 2 378 1 299 2 197 1 
279 4 312 1 111 3 241 1 202 1 184 1 235 1 236 1 343 7 345 3 93 1 191 1 289 1 275 1 239 2 378 1 299 2 197 1 
354 1 241 2 292 1 266 4 202 2 171 1 333 1 295 1 72 1 275 1 298 1 363 1 299 5 279 16 213 3 312 4 82 3 111 10 184 1 317 1 371 3 235 2 236 4 343 31 345 15 93 1 191 1 138 1 349 2 239 3 350 3 197 2 378 5 380 1 
354 2 241 1 292 2 202 1 358 1 72 2 275 1 298 2 363 1 299 3 279 5 312 1 281 1 111 4 235 1 236 1 343 9 345 4 191 1 93 1 349 4 239 2 378 1 197 1 
200 1 18 1 263 1 60 1 268 1 205 1 67 2 176 1 226 1 146 1 276 1 76 1 212 2 109 1 32 1 338 1 214 1 301 2 84 1 306 1 34 1 188 1 321 1 14 1 139 1 56 1 38 1 160 1 162 1 96 1 
200 1 18 1 263 1 60 1 268 1 63 1 205 1 67 3 146 1 74 1 276 1 76 2 212 3 109 1 32 1 338 1 214 1 301 2 306 1 34 1 188 1 36 1 321 1 14 1 139 1 56 1 38 1 160 1 162 1 96 1 
212 2 200 1 109 1 18 1 338 1 301 2 60 1 268 1 63 1 205 1 67 2 306 1 188 1 34 1 146 1 321 1 14 1 74 1 276 1 56 1 139 1 76 2 38 1 162 1 96 1 
265 1 99 1 67 1 146 1 129 1 230 1 276 1 178 1 364 1 212 1 109 1 32 1 214 1 183 1 51 1 188 1 34 2 118 1 36 1 321 2 14 1 38 2 162 2 
212 1 200 1 109 1 263 1 32 1 214 1 301 2 60 1 268 1 84 1 67 1 306 1 188 1 176 1 34 1 146 1 321 1 14 1 74 1 276 1 56 1 139 1 160 1 38 1 162 1 96 1 
78 1 
198 1 98 2 143 1 329 1 99 1 100 1 331 1 247 2 296 1 6 6 146 2 211 2 8 4 106 2 109 2 153 2 114 1 215 1 54 1 14 2 309 3 262 1 16 5 166 1 310 1 21 2 22 1 170 1 270 2 61 1 172 1 66 1 271 1 124 2 227 2 230 2 276 1 178 1 179 1 364 1 365 5 183 1 282 1 33 1 89 1 187 1 320 2 188 1 374 1 287 2 286 1 91 2 92 1 94 1 379 1 
198 1 310 1 143 1 282 1 33 1 170 1 61 1 331 1 215 1 271 1 6 2 89 1 187 1 286 1 92 1 309 1 8 2 106 1 46 1 16 3 379 1 365 3 
198 1 310 1 143 1 170 1 331 1 61 1 172 1 271 1 6 1 8 3 211 1 46 1 365 3 153 1 282 1 33 1 215 1 187 1 89 1 286 1 92 1 309 1 16 3 379 1 
198 1 310 1 143 1 21 1 170 1 331 1 61 1 172 1 271 1 6 2 8 3 211 1 106 1 46 1 365 3 153 1 282 1 33 1 215 1 187 1 89 1 286 1 92 1 309 1 16 3 379 1 
198 1 166 1 310 1 98 2 143 1 329 1 21 4 170 1 270 2 331 1 61 1 172 5 271 1 6 7 124 1 227 2 272 1 360 1 211 4 8 6 106 4 46 1 179 1 365 5 80 1 153 5 282 1 33 1 85 1 215 1 89 1 187 1 320 1 374 1 287 2 286 1 375 1 91 2 54 1 92 1 309 3 262 1 16 5 379 1 
198 1 143 1 98 2 329 1 331 1 247 2 6 4 8 4 211 2 106 2 153 2 114 1 215 1 54 1 309 2 262 1 16 4 310 1 166 1 21 2 170 1 270 2 61 1 172 1 271 1 124 1 227 2 179 1 365 4 282 1 33 1 187 1 89 1 320 1 374 1 286 1 287 2 92 1 91 2 379 1 
198 1 310 1 166 1 98 2 143 1 329 1 21 2 170 1 270 2 331 1 61 1 172 1 271 1 6 4 124 1 227 2 272 1 211 2 8 4 106 2 179 1 365 4 80 1 153 1 282 1 33 1 85 1 215 1 187 1 89 1 320 1 374 1 287 2 286 1 91 2 54 1 92 1 309 2 262 1 16 4 379 1 
198 1 310 1 166 1 98 2 143 1 329 1 21 2 170 1 270 2 331 1 61 1 172 1 271 1 6 4 124 1 227 2 272 1 211 2 8 4 106 2 179 1 365 4 80 1 153 1 282 1 33 1 85 1 215 1 187 1 89 1 320 1 374 1 287 2 286 1 91 2 54 1 92 1 309 2 262 1 16 4 379 1 
198 1 310 1 143 1 282 1 33 1 170 1 61 1 331 1 215 1 271 1 89 1 187 1 189 1 286 1 92 1 8 2 16 2 379 1 365 2 
198 1 166 1 310 1 98 2 143 1 329 1 21 3 170 1 270 2 331 1 61 1 172 1 271 1 6 5 124 1 227 2 272 1 360 1 8 5 211 3 106 3 179 1 365 4 80 1 153 1 282 1 33 1 85 1 215 1 187 1 89 1 320 1 374 1 287 2 286 1 91 2 54 1 92 1 309 2 262 1 16 4 379 1 
198 1 166 1 310 1 98 2 143 1 329 1 21 3 170 1 270 2 331 1 61 1 172 1 271 1 6 5 124 1 227 2 272 1 360 1 8 5 211 3 106 3 179 1 365 4 80 1 153 1 282 1 33 1 85 1 215 1 187 1 89 1 320 1 374 1 287 2 286 1 91 2 54 1 92 1 309 2 262 1 16 4 379 1 
198 1 166 1 310 1 59 2 98 2 143 1 329 1 21 2 170 1 331 1 61 1 172 1 271 1 247 2 6 4 124 1 127 2 211 2 8 4 106 2 365 4 153 1 114 1 282 1 33 1 215 1 52 1 89 1 187 1 320 1 374 1 286 1 91 2 54 1 92 1 309 2 262 1 16 4 379 1 
354 1 292 1 202 1 72 1 28 1 275 1 209 1 298 1 299 2 279 3 312 1 111 2 256 1 157 2 158 1 90 1 236 1 307 1 343 6 345 3 191 1 93 1 349 2 239 1 140 1 197 1 
17 1 354 2 266 3 292 2 333 1 72 2 28 11 209 11 253 1 298 2 107 1 299 1 48 1 279 8 213 3 312 1 82 1 111 2 256 4 86 1 157 1 317 1 371 2 218 1 236 2 307 1 343 14 345 6 308 1 349 4 350 2 140 2 378 1 
58 1 354 1 1 1 99 1 292 1 145 1 271 2 4 1 41 1 359 1 146 1 72 1 230 1 276 1 298 1 107 1 364 1 109 1 280 1 279 1 256 1 282 1 86 1 157 1 156 1 341 1 187 2 188 1 307 1 343 2 345 1 14 1 55 1 137 1 308 1 349 2 219 1 140 1 
1 1 292 3 99 2 202 1 145 2 4 1 146 3 209 7 298 3 107 1 299 4 109 3 111 8 256 7 157 2 305 2 341 2 117 2 307 3 343 20 345 10 14 3 308 1 349 6 350 2 222 1 58 2 354 3 271 3 175 1 359 2 26 1 72 3 28 7 230 1 74 1 275 1 276 2 364 2 280 1 279 10 312 3 82 2 282 1 86 1 370 2 371 2 187 3 188 2 236 3 137 1 93 1 191 1 192 2 239 1 376 2 140 3 197 1 378 4 
164 1 354 2 1 1 99 3 292 2 24 1 62 1 271 1 226 1 146 7 72 2 230 2 74 1 276 2 298 2 77 1 178 1 364 2 280 1 109 8 30 1 279 1 233 2 12 1 282 1 183 1 86 1 158 1 187 1 188 2 307 2 343 2 345 1 346 1 14 8 137 1 308 1 349 4 140 2 
354 1 1 1 292 1 271 1 72 1 28 1 209 1 298 1 107 1 299 1 280 1 279 1 312 1 82 1 111 1 256 1 282 1 371 1 187 1 284 1 236 1 307 1 373 1 343 3 345 2 119 1 349 2 350 1 140 1 
279 2 111 1 354 1 256 1 292 1 158 1 371 1 236 1 307 1 343 2 72 1 28 1 324 1 209 1 298 1 349 2 140 1 378 1 
312 1 82 1 111 1 354 1 256 1 292 1 158 1 69 1 307 1 343 2 345 2 72 1 28 1 209 1 298 1 349 2 140 1 299 1 
279 2 312 1 82 1 111 2 354 1 256 2 292 1 158 1 371 1 236 1 307 1 343 4 345 2 72 1 28 2 209 2 298 1 349 2 350 1 140 1 299 1 378 1 
279 2 111 1 354 1 256 1 292 1 62 1 371 1 236 1 307 1 343 2 72 1 28 1 324 1 209 1 298 1 349 2 140 1 378 1 
312 1 82 1 111 1 354 1 256 1 292 1 62 1 69 1 307 1 343 2 345 2 72 1 28 1 209 1 298 1 349 2 140 1 299 1 
279 2 312 1 82 1 111 2 354 1 256 2 292 1 62 1 371 1 236 1 307 1 343 4 345 2 72 1 28 2 209 2 298 1 349 2 350 1 140 1 299 1 378 1 
279 2 312 1 82 1 111 2 354 1 256 2 292 1 371 1 236 1 307 1 343 4 345 2 72 1 28 2 209 2 298 1 349 2 350 1 140 1 299 1 378 1 
58 1 354 1 99 1 292 1 145 1 271 1 359 1 146 1 72 1 230 1 276 1 298 1 364 1 279 1 109 1 86 1 157 1 341 1 305 1 187 1 188 1 307 1 343 2 345 1 14 1 308 1 349 2 140 1 
354 1 99 1 292 1 145 1 271 1 359 1 146 1 72 1 230 1 276 1 231 1 298 1 180 1 364 1 279 1 109 1 86 1 13 1 157 1 187 1 188 1 307 1 343 2 345 1 14 1 308 1 349 2 140 1 
279 2 312 1 82 1 111 2 354 1 256 2 292 1 371 1 236 1 307 1 343 4 345 2 72 1 28 2 209 2 298 1 349 2 107 1 350 1 140 1 299 1 378 1 
58 1 354 1 99 1 292 1 145 1 271 1 359 1 226 1 146 1 72 1 28 2 209 2 276 1 298 1 299 1 364 1 279 2 109 1 312 1 82 1 111 2 256 2 341 1 305 1 371 1 117 1 187 1 236 1 188 1 307 1 343 4 345 2 14 1 349 2 350 1 140 1 378 1 
354 1 1 1 292 1 271 1 72 1 28 1 209 1 298 1 107 1 277 1 280 1 279 2 312 1 82 1 111 1 282 1 256 1 371 1 187 1 284 1 236 1 307 1 343 3 345 1 119 1 349 2 350 1 140 1 378 1 
354 2 266 2 292 2 204 1 333 1 206 1 250 1 335 2 72 2 298 2 299 3 279 9 110 1 281 1 213 1 312 3 82 3 232 1 111 6 115 1 317 1 371 3 236 3 343 19 345 10 347 1 349 4 195 2 350 3 378 3 
354 3 292 3 266 2 204 2 333 2 206 1 335 1 72 3 298 3 363 2 299 2 279 14 312 2 281 1 213 2 82 2 111 4 232 2 83 1 115 1 314 1 315 1 371 3 236 3 343 26 345 12 347 1 193 1 349 6 161 1 195 4 350 3 325 1 378 2 
292 3 202 1 204 1 333 3 206 1 335 1 298 3 299 4 213 3 110 1 111 8 115 1 216 1 343 41 345 21 347 1 349 6 161 1 350 4 354 3 266 4 72 3 275 1 363 1 279 20 312 5 281 1 82 4 232 2 83 1 314 1 315 1 371 4 317 1 236 5 191 1 93 1 193 1 239 1 195 4 325 1 378 4 197 1 
354 4 266 4 292 4 202 1 204 1 333 3 206 1 335 1 72 4 275 1 298 4 363 2 299 4 279 20 110 1 281 1 213 3 312 4 82 3 83 1 232 2 111 7 115 1 314 1 315 1 216 1 317 1 371 4 236 5 343 38 345 18 347 1 93 1 191 1 193 1 239 1 349 8 161 1 195 4 350 4 325 1 197 1 378 3 
17 2 354 2 266 4 292 2 202 1 204 1 333 2 206 1 335 1 72 2 275 1 298 2 363 1 299 7 279 27 281 1 213 4 312 8 82 7 83 1 232 1 111 14 115 1 314 1 315 1 317 2 371 7 236 8 343 52 345 25 347 1 93 1 191 1 193 1 239 1 349 4 161 1 195 4 350 7 325 1 197 1 378 7 
132 1 234 1 134 1 297 1 224 1 147 1 194 1 155 1 150 1 152 1 
261 1 221 1 
134 1 297 1 10 1 313 1 300 1 224 1 194 1 150 1 152 1 
113 1 243 1 
238 1 290 1 173 1 
132 1 141 1 153 1 11 1 224 1 258 1 234 1 134 1 297 1 208 1 37 2 147 1 194 1 150 1 151 1 16 1 365 1 152 1 
132 1 141 1 153 1 11 1 224 1 258 1 234 1 134 1 297 1 208 1 37 2 147 1 194 1 150 1 151 1 16 1 365 1 152 1 
132 1 141 1 153 1 11 1 224 1 258 1 234 1 134 1 297 1 208 1 37 2 147 1 194 1 150 1 151 1 16 1 365 1 152 1 
113 1 243 1 238 1 
113 1 243 1 238 1 
290 1 173 1 
238 1 290 1 173 1 
102 1 332 1 
240 1 1 2 224 1 102 1 332 1 271 2 248 1 104 1 297 1 208 1 150 1 365 1 152 1 280 2 81 1 339 1 282 2 157 1 258 1 134 1 187 2 190 1 37 1 194 1 261 1 16 1 221 1 
354 1 99 1 292 1 101 1 244 1 271 2 146 2 7 1 72 1 276 1 298 1 107 1 364 1 109 2 30 1 279 1 233 2 12 1 282 2 116 1 86 1 187 2 188 1 307 1 343 2 345 1 14 2 308 1 349 2 57 1 140 1 
47 1 200 1 109 2 337 1 301 2 60 1 23 1 268 1 306 1 188 1 226 1 146 2 14 2 74 1 276 1 56 1 38 1 160 1 96 1 
200 1 109 1 301 2 60 1 23 1 268 1 306 1 188 1 146 1 14 1 74 1 56 1 276 1 38 1 160 1 196 1 96 1 
109 1 337 1 265 1 99 1 183 1 188 1 146 1 14 1 230 1 276 1 38 1 178 1 364 1 181 1 
47 1 200 1 109 1 337 1 301 2 60 1 23 1 268 1 306 1 188 1 146 1 14 1 74 1 56 1 276 1 38 1 160 1 96 1 
366 1 
320 1 153 1 124 1 90 1 2 1 120 1 172 1 
166 1 153 2 329 1 270 1 172 1 247 1 6 1 320 1 124 1 227 1 374 1 287 1 309 1 262 1 16 1 179 1 365 1 
199 1 0 1 329 4 2 1 99 10 145 3 246 3 247 12 296 1 6 5 146 3 44 1 45 1 108 2 109 3 49 2 153 8 303 2 259 6 14 3 120 1 309 3 262 4 350 2 16 5 163 6 166 4 61 2 172 2 66 2 174 2 124 8 226 1 228 2 227 6 230 1 276 3 364 3 365 5 131 2 133 2 312 2 82 2 369 2 371 2 88 1 372 1 320 9 188 4 236 2 285 2 374 4 376 2 377 2 
166 2 329 2 266 1 333 1 172 2 66 1 247 6 296 1 6 1 124 5 227 3 126 1 365 1 49 1 153 5 213 1 312 2 82 2 83 1 315 1 371 2 186 1 259 5 320 8 236 2 374 2 193 1 309 1 161 1 262 2 350 2 16 1 377 2 325 1 163 5 
121 1 166 1 329 1 1 1 202 1 356 1 293 1 271 1 124 2 272 1 75 1 365 1 49 1 280 1 312 1 282 1 304 1 187 1 236 2 320 2 284 1 374 1 93 1 262 1 377 2 16 1 379 1 197 1 
166 1 153 1 329 1 2 1 172 1 124 1 320 1 374 1 120 1 262 1 
49 1 153 5 312 2 82 2 247 10 371 2 259 5 236 2 124 5 320 5 227 5 376 1 350 2 377 2 163 5 
6 1 153 1 309 1 172 1 16 1 365 1 
166 1 329 2 99 1 22 1 123 1 100 1 66 2 68 1 6 4 296 2 124 2 146 4 230 2 44 1 276 1 178 1 364 1 365 3 109 4 183 1 87 1 372 2 188 1 320 2 374 2 14 4 309 2 262 2 16 3 
58 1 354 1 1 2 292 1 99 1 145 1 271 3 294 1 359 1 146 1 72 1 230 1 298 1 75 1 276 1 364 1 109 1 280 2 282 2 157 1 305 1 341 1 187 3 284 2 188 1 307 1 343 1 345 1 14 1 308 1 349 2 140 1 
166 1 153 4 329 1 172 2 66 1 247 4 259 2 296 1 124 2 320 1 227 2 374 1 239 1 262 1 163 2 
177 1 150 1 152 1 
177 1 150 1 152 1 
177 1 150 1 152 1 
361 1 150 1 152 1 
35 1 147 1 332 1 150 1 152 1 
361 1 150 1 152 1 
361 1 150 1 152 1 
150 1 152 1 
297 1 194 1 
279 4 312 1 111 3 354 2 292 2 202 1 236 1 343 8 345 4 72 2 93 1 191 1 275 1 239 1 298 2 349 4 363 1 378 1 299 2 197 1 
279 3 312 1 236 1 90 1 343 6 111 2 345 3 202 1 93 1 191 1 275 1 239 1 299 2 197 1 
79 1 279 2 312 1 82 1 111 2 354 1 292 1 371 1 236 1 343 4 345 2 72 1 298 1 349 2 350 1 299 1 378 1 
279 3 312 1 213 1 82 1 111 2 266 2 333 1 317 1 371 1 236 1 343 7 345 4 350 1 299 1 378 1 
17 1 354 2 266 2 292 2 202 2 203 1 72 2 275 1 298 2 363 2 299 5 279 11 48 1 213 2 312 3 82 2 111 9 371 2 317 1 236 3 343 23 345 12 93 1 191 1 239 1 349 4 350 2 197 2 378 4 
343 1 345 1 266 1 
279 1 213 1 343 1 
79 1 279 3 312 1 82 1 354 1 111 3 292 1 371 1 236 1 343 6 345 3 72 1 349 2 298 1 376 1 350 1 378 1 299 2 
354 1 266 1 292 1 333 1 72 1 298 1 299 1 279 6 213 1 281 1 312 2 82 2 83 1 111 2 315 1 371 2 236 2 343 12 345 6 193 1 349 2 161 1 350 2 325 1 378 1 
279 3 312 1 111 2 202 1 236 1 343 6 345 3 93 1 197 1 299 1 378 1 
279 1 111 2 354 1 292 1 202 1 203 1 343 3 345 2 72 1 191 1 275 1 298 1 349 2 363 1 378 1 299 1 197 1 
279 5 281 1 312 2 354 1 111 5 292 1 202 2 356 1 236 2 343 10 345 5 72 1 93 1 349 2 298 1 197 2 299 3 378 2 
279 2 281 1 354 1 111 1 292 1 371 1 236 1 343 2 72 1 298 1 349 2 378 1 
279 2 312 1 281 1 82 1 111 2 354 1 292 1 371 1 236 1 343 4 345 2 72 1 298 1 349 2 350 1 299 1 378 1 
279 1 110 1 281 1 354 3 111 2 292 3 203 1 202 1 343 3 345 2 72 3 298 3 349 6 363 1 197 1 299 1 378 1 
354 5 266 4 292 5 202 3 203 1 171 1 333 1 295 1 72 5 275 1 298 5 363 2 299 7 79 1 279 16 110 1 281 1 213 3 312 5 82 3 111 12 317 1 371 3 236 5 343 34 345 18 93 2 191 1 239 1 349 10 350 3 197 3 380 1 378 5 
354 1 266 1 292 1 202 1 333 1 72 1 275 1 298 1 299 2 279 4 312 1 213 1 281 1 111 2 236 1 343 8 345 4 191 1 93 1 193 1 239 1 349 2 197 1 
354 2 266 2 292 2 202 1 333 1 72 2 275 1 298 2 299 2 79 1 279 6 312 1 281 1 213 1 111 3 317 1 371 1 236 2 343 11 345 5 93 1 191 1 193 1 239 1 349 4 350 1 197 1 378 1 
354 3 266 1 292 3 202 1 333 1 72 3 275 1 298 3 363 1 299 3 79 1 279 9 213 1 281 1 312 3 82 2 83 1 111 4 315 1 371 2 236 3 343 19 345 10 93 1 191 1 193 1 239 1 349 6 161 1 350 2 325 1 197 1 378 1 
354 3 266 1 292 3 202 1 333 1 72 3 275 1 298 3 363 1 299 3 79 1 279 10 213 1 281 1 312 2 82 1 83 1 111 5 315 1 371 2 236 3 343 17 345 7 93 1 191 1 193 1 239 1 349 6 161 1 350 2 325 1 197 1 378 2 
354 1 266 1 292 1 202 1 333 1 72 1 275 1 298 1 299 2 279 4 312 1 213 1 281 1 111 2 236 1 343 8 345 4 191 1 93 1 193 1 239 1 349 2 197 1 
354 1 266 1 292 1 333 1 72 1 298 1 299 1 279 6 213 1 281 1 312 2 82 2 83 1 111 2 315 1 371 2 236 2 343 12 345 6 193 1 349 2 161 1 350 2 325 1 378 1 
354 4 266 1 292 4 202 1 333 1 72 4 275 1 298 4 363 2 299 3 79 1 279 10 281 1 213 1 312 2 82 1 83 1 111 5 315 1 371 2 236 3 343 18 345 8 93 1 191 1 193 1 239 1 349 8 161 1 350 2 325 1 197 1 378 2 
354 4 266 1 292 4 333 1 72 4 298 4 363 2 299 3 279 9 281 1 110 1 213 1 312 2 82 2 83 1 111 6 315 1 371 3 236 3 343 16 345 7 193 1 349 8 161 1 350 3 325 1 378 3 
279 3 312 1 111 6 202 3 236 1 343 7 345 4 191 2 93 1 275 1 197 3 299 3 378 3 
354 4 266 1 292 4 202 1 333 1 72 4 275 1 298 4 363 2 299 3 279 10 281 1 110 1 213 1 312 2 82 1 83 1 111 4 315 1 371 2 236 3 343 18 345 8 93 1 191 1 193 1 239 1 349 8 161 1 350 2 325 1 197 1 378 1 
187 1 143 1 344 1 282 1 15 1 271 1 157 1 
187 1 251 1 143 1 169 1 344 1 282 1 15 1 40 1 271 1 245 1 157 1 336 1 
109 1 188 1 90 1 146 1 99 1 183 1 14 1 230 1 276 1 178 1 364 1 
58 1 280 1 109 1 1 1 99 1 282 1 145 1 271 2 157 1 187 2 188 1 359 1 146 1 14 1 137 1 230 1 276 1 364 1 
58 1 310 1 1 2 99 3 331 1 145 2 271 2 174 1 359 1 146 1 276 1 364 2 131 1 109 1 280 1 282 2 157 1 187 2 372 1 188 1 14 1 137 1 379 1 
310 1 328 1 1 2 99 3 331 1 145 2 271 2 174 1 359 1 146 2 276 1 364 2 131 1 109 2 280 1 282 2 13 1 157 1 187 2 372 1 188 1 14 2 137 1 379 1 
109 3 133 1 153 1 328 1 355 1 99 4 61 1 172 1 145 1 174 1 246 1 6 1 188 1 372 1 146 3 14 3 230 1 276 1 311 1 16 2 364 1 131 1 365 2 
109 3 133 1 153 1 328 1 99 4 61 1 172 1 145 1 174 1 246 1 6 1 188 1 372 1 228 1 146 3 14 3 230 1 276 1 16 2 364 1 131 1 365 2 
109 1 188 1 146 1 14 1 276 1 77 1 
164 1 109 7 199 1 142 1 233 1 12 1 99 3 24 1 145 1 188 3 226 1 146 6 346 1 14 7 362 1 230 2 74 1 288 1 276 2 77 1 364 2 
1 1 292 2 99 1 202 1 244 1 145 1 146 1 209 1 298 2 107 1 299 2 109 1 111 2 256 1 157 2 341 1 305 1 117 1 307 2 343 6 345 3 14 1 349 4 58 1 354 2 271 2 226 1 359 1 72 2 28 1 275 1 276 1 364 1 280 1 279 3 312 1 282 1 187 2 188 1 236 1 137 1 192 1 191 1 93 1 239 1 140 2 197 1 
166 2 329 2 2 1 99 2 61 1 172 1 246 1 104 1 6 2 124 1 228 1 146 1 230 1 44 1 108 1 365 3 109 1 133 1 153 1 303 1 369 1 320 1 374 2 14 1 120 1 309 1 262 2 16 3 
133 1 109 2 199 1 99 2 145 1 88 1 188 2 226 1 146 2 14 2 276 1 77 1 364 1 
109 4 264 1 328 1 183 1 99 1 188 1 226 1 146 4 14 4 230 1 276 1 178 1 364 1 
109 2 142 1 99 1 64 1 145 1 334 1 175 1 372 1 188 2 146 2 14 2 288 1 276 1 364 1 
306 1 200 1 109 1 188 1 146 1 301 1 14 1 230 1 276 1 96 1 
109 2 12 1 99 1 188 1 226 1 146 2 14 2 74 1 276 1 57 1 364 1 
164 1 109 5 264 1 183 1 12 1 99 3 24 1 372 1 188 2 226 1 146 4 14 5 230 1 276 2 178 1 364 2 
109 5 327 1 264 1 183 1 12 1 99 3 24 1 372 1 188 2 226 1 146 4 14 5 230 1 276 2 178 1 364 2 
280 1 109 1 1 1 99 1 282 1 145 1 271 2 13 1 157 1 187 2 188 1 359 1 146 1 14 1 137 1 230 1 276 1 364 1 
109 1 199 1 142 1 99 1 145 1 372 1 188 2 146 1 14 1 362 1 288 1 276 1 364 1 
352 1 252 1 112 1 157 1 3 1 
310 1 153 1 352 2 112 2 225 1 61 1 331 1 154 1 215 1 172 1 157 1 3 1 104 1 252 2 229 1 73 1 16 2 379 1 365 2 
112 1 282 1 101 1 116 1 271 1 3 1 187 1 252 1 7 1 
225 1 154 1 3 1 
18 1 90 1 338 1 205 1 
212 1 18 1 32 1 338 1 214 1 205 1 67 1 
212 1 34 1 321 1 
212 3 5 1 18 1 32 1 201 1 338 1 214 1 274 1 84 1 205 1 257 2 67 3 
342 1 212 2 18 1 32 1 338 1 214 1 76 1 205 1 67 2 
306 1 212 1 18 1 168 1 32 1 214 1 301 1 268 1 84 1 67 1 249 1 
212 1 18 1 32 1 214 1 84 1 205 1 67 1 
212 1 32 1 338 1 214 1 84 1 205 2 67 1 
212 2 18 1 9 1 32 2 214 2 302 1 84 1 205 1 67 2 278 1 
212 3 18 2 32 1 338 1 214 1 84 1 205 1 283 1 67 3 185 1 249 1 29 1 76 2 
212 2 200 1 18 1 32 1 338 1 214 1 301 2 242 1 60 1 268 1 84 1 205 1 67 2 306 1 76 1 
212 4 18 2 32 2 338 1 214 2 84 1 205 1 67 4 185 1 249 1 342 1 273 1 76 2 
212 1 18 1 32 1 338 1 214 1 84 1 205 1 67 1 
212 4 18 3 32 1 201 1 338 2 214 1 367 1 205 2 257 1 67 4 185 1 249 1 5 1 76 2 
318 1 212 2 18 1 32 1 338 1 214 1 237 1 84 1 76 1 260 1 205 1 67 2 
212 3 18 1 32 1 201 1 214 1 338 1 84 1 205 1 67 3 257 2 5 2 70 1 
326 1 351 1 18 2 122 2 
212 1 32 1 20 1 214 1 84 1 67 1 
212 2 18 1 32 1 338 1 214 1 29 1 84 1 76 1 205 1 67 2 
25 1 
212 1 18 1 32 1 338 1 214 1 84 1 205 1 67 1 
212 3 18 1 32 1 338 1 214 1 29 1 84 1 76 1 205 1 257 1 67 3 
18 1 367 1 249 1 185 1 
18 1 205 1 

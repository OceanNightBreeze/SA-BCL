#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
325 1 140 1 110 1 366 1 260 1 353 1 
325 1 140 1 110 1 366 1 260 1 353 1 
325 1 140 1 110 1 366 1 260 1 353 1 
325 1 140 1 110 1 366 1 260 1 353 1 
63 3 218 1 325 1 221 1 168 2 366 1 198 1 260 4 326 3 348 2 314 1 274 1 140 1 258 1 361 1 246 1 339 1 353 4 
325 1 218 1 366 1 260 2 326 1 292 1 17 1 314 1 83 1 316 1 140 1 373 1 258 1 246 1 353 2 195 1 
63 1 325 2 168 1 366 1 260 3 326 2 17 1 314 1 140 2 258 1 339 1 90 1 353 3 
63 7 218 1 325 2 167 1 221 1 168 4 366 1 198 1 224 1 260 9 16 1 326 5 17 1 348 2 314 1 274 1 140 2 258 1 361 1 246 1 297 1 339 3 90 1 353 9 
63 7 218 1 325 2 167 1 221 1 168 4 366 1 198 1 224 1 260 9 16 1 326 5 17 1 348 2 314 1 274 1 140 2 258 1 361 1 246 1 297 1 339 3 90 1 353 9 
126 1 207 1 173 1 
298 1 96 2 173 1 
372 2 95 2 185 2 197 2 223 1 26 1 293 2 161 2 
23 2 148 1 250 1 197 2 223 1 26 1 170 1 272 1 9 1 153 2 175 1 59 1 87 1 330 1 93 1 113 1 65 1 95 2 236 1 66 1 185 3 34 1 116 2 347 1 159 1 335 1 133 1 293 3 240 1 371 1 161 2 242 2 372 2 190 1 97 2 191 1 141 1 
372 1 95 1 185 1 197 1 223 1 28 1 171 1 293 1 355 1 161 1 
235 1 185 1 188 1 149 1 212 1 293 1 171 1 173 1 372 1 273 1 126 1 177 1 31 1 344 1 
95 1 185 1 197 1 188 2 149 1 293 1 171 1 173 1 161 1 372 1 273 1 126 1 177 1 31 2 344 1 
120 1 176 1 31 1 188 1 112 1 
120 1 126 1 31 2 188 2 150 1 48 1 173 1 112 1 
120 1 31 1 188 1 
95 1 185 1 223 1 197 1 188 1 28 1 291 1 171 1 293 1 161 1 372 1 31 1 112 1 355 1 
173 1 
120 1 126 1 31 2 188 2 150 1 261 1 173 1 112 1 
147 1 114 1 188 5 150 1 226 2 311 1 173 1 358 1 120 2 29 1 126 1 31 5 86 1 329 2 352 2 259 1 76 1 180 1 112 2 
23 1 66 1 148 1 185 2 197 1 293 2 240 1 371 1 161 1 242 1 372 1 9 1 175 1 153 1 278 1 191 1 42 1 141 1 59 1 100 1 
26 1 207 1 
95 1 185 2 197 1 26 2 293 2 161 1 372 2 179 1 247 1 
278 1 296 1 320 1 
23 1 66 1 148 1 185 1 26 1 293 1 240 1 371 1 242 1 175 1 153 1 9 1 191 1 141 1 59 1 142 1 
95 1 372 3 42 1 185 3 197 3 26 1 293 3 161 3 
372 1 185 1 197 1 171 1 293 1 355 1 161 1 
372 1 95 1 185 1 197 1 179 1 247 1 171 1 293 1 161 1 
23 1 148 1 250 1 197 3 223 1 26 1 149 1 170 1 171 1 272 1 203 1 273 1 9 1 175 1 153 1 59 1 177 1 31 1 344 1 87 1 157 1 93 1 113 1 95 2 236 1 66 1 185 4 116 1 347 1 335 1 188 1 293 4 240 1 371 1 161 3 242 1 372 3 190 1 97 2 191 1 42 1 141 1 247 1 100 1 
372 2 185 2 42 1 197 1 26 1 212 1 293 2 264 1 161 1 
95 1 185 3 197 3 188 1 149 1 18 1 171 1 293 3 173 1 161 3 372 3 203 1 273 1 42 2 31 1 177 1 344 1 247 1 100 1 
95 1 185 2 197 2 293 2 161 2 372 2 42 1 278 1 296 1 247 1 
23 1 66 1 148 1 185 1 26 1 293 1 240 1 242 1 371 1 175 1 153 1 9 1 191 1 141 1 59 1 
23 1 66 1 148 1 185 1 26 1 293 1 270 1 240 1 242 1 371 1 175 1 153 1 9 1 277 1 191 1 
250 1 225 1 104 1 342 1 170 2 275 1 278 2 181 1 282 1 93 1 236 1 333 1 238 1 158 1 116 4 347 1 159 2 187 1 335 1 190 1 137 1 97 2 296 2 320 2 
372 1 64 1 185 1 197 1 344 1 171 1 293 1 161 1 
95 1 185 5 197 4 26 1 67 1 212 1 201 1 293 5 161 4 372 5 42 2 247 1 100 1 264 1 
64 1 372 2 185 2 197 2 171 1 293 2 355 1 161 2 
73 1 79 1 
73 1 79 1 
324 1 209 1 
324 1 209 1 
324 1 209 1 
73 1 230 1 79 1 
73 1 55 1 79 1 
73 2 324 1 369 1 209 1 79 2 254 1 
73 1 230 1 79 1 
73 1 230 1 79 1 
73 1 368 1 79 1 
73 1 368 1 79 1 
73 1 368 1 79 1 
265 2 188 2 52 1 173 1 370 2 315 1 254 1 73 2 360 1 31 2 128 1 20 1 192 2 232 1 216 3 78 1 79 2 376 2 286 2 
197 2 26 1 53 1 55 1 54 1 31 1 128 1 11 1 304 1 233 1 286 1 183 1 185 2 188 1 293 2 370 1 161 2 73 1 372 2 215 1 192 1 216 1 376 1 79 1 
274 1 218 1 246 1 
218 1 246 1 195 1 
274 2 204 1 246 3 248 1 349 1 195 1 
274 1 204 1 115 1 246 2 349 1 195 1 
274 1 204 2 246 2 349 1 195 1 
80 2 147 3 165 2 101 1 81 1 51 2 226 1 150 1 342 1 357 1 173 2 275 1 29 1 126 1 329 1 31 5 304 1 259 2 233 1 112 4 158 1 365 1 36 1 187 1 188 5 96 3 312 1 120 1 215 1 352 1 298 1 44 1 
80 6 147 8 165 6 101 1 81 3 25 1 150 1 226 2 342 3 357 2 173 5 227 1 275 3 176 5 29 1 57 1 126 1 86 1 31 9 329 2 259 6 233 4 13 1 112 7 158 3 365 2 14 1 187 3 188 9 96 9 313 1 120 6 72 5 352 2 298 3 
147 3 80 2 165 2 81 1 51 1 226 1 342 1 357 1 173 3 275 1 126 1 329 1 31 3 86 1 259 2 233 1 112 2 158 1 365 1 187 1 188 3 312 1 96 4 352 1 298 2 44 1 
80 4 147 5 165 4 81 2 51 2 226 1 342 2 357 1 173 4 275 2 57 1 126 1 329 1 31 4 86 1 259 4 233 2 112 3 158 2 365 1 14 1 187 2 188 4 96 7 312 1 313 1 352 1 298 3 44 1 
56 1 207 1 371 1 
138 1 371 1 
19 1 
191 1 371 1 
56 2 9 1 191 1 35 1 70 1 371 3 
9 1 191 1 371 1 
38 1 371 1 
333 2 116 7 253 1 187 1 159 4 170 3 241 1 269 1 271 1 275 1 137 3 255 1 75 1 155 1 12 2 33 1 88 1 
333 2 116 7 253 1 187 1 159 4 170 3 241 1 269 1 271 1 275 1 137 3 255 1 75 1 155 1 12 2 33 1 88 1 
333 2 116 7 253 1 187 1 159 4 170 3 241 1 269 1 271 1 275 1 137 3 255 1 75 1 155 1 214 1 12 2 33 1 88 1 
49 1 81 3 253 2 342 3 170 15 269 2 271 1 255 2 275 4 155 1 12 3 88 1 33 2 285 1 236 1 333 5 346 1 158 3 116 31 347 1 37 1 159 16 187 4 335 1 15 1 40 4 241 5 190 1 137 10 75 1 97 2 193 1 194 1 323 3 
253 1 170 4 269 1 271 1 275 1 255 1 12 2 88 1 33 1 236 2 333 3 346 1 116 9 347 2 187 1 335 2 159 5 241 1 190 2 137 4 97 4 75 1 164 1 45 1 
23 1 218 1 325 1 148 1 326 1 4 1 169 1 274 1 153 1 258 1 63 1 66 1 334 1 366 1 288 1 260 2 117 1 17 1 314 1 134 1 119 1 242 1 244 1 140 1 246 2 319 1 22 1 353 2 248 1 195 1 
23 1 218 1 325 1 148 1 326 1 268 1 4 1 169 1 274 1 153 1 258 1 280 1 63 2 66 1 334 1 288 1 260 3 117 1 17 1 314 1 134 1 119 1 242 1 243 1 140 1 246 2 22 1 248 1 353 3 195 1 
23 1 218 1 148 1 326 1 268 1 4 1 274 1 153 1 258 1 280 1 63 2 66 1 288 1 260 2 117 1 17 1 314 1 134 1 119 1 242 1 246 2 22 1 353 2 248 1 195 1 
23 1 325 1 148 2 121 1 251 1 27 1 3 1 200 1 4 2 9 1 153 1 175 1 30 1 205 1 156 1 66 1 237 1 260 1 17 2 134 2 262 1 242 1 371 2 243 1 140 1 263 1 191 2 21 1 22 2 353 1 
23 1 218 1 325 1 148 1 4 1 169 1 274 1 153 1 280 1 66 1 334 1 366 1 288 1 260 1 117 1 17 1 134 1 119 1 242 1 244 1 140 1 246 2 22 1 353 1 248 1 195 1 
105 1 
23 2 147 1 148 2 121 1 226 1 150 1 200 1 9 1 153 2 175 2 29 1 30 1 58 1 205 1 329 1 31 2 259 1 156 1 66 1 365 1 188 2 211 1 371 2 242 2 120 2 191 2 352 1 21 1 143 1 
199 1 149 1 150 1 106 1 171 1 273 1 154 1 85 1 31 3 177 1 344 1 89 1 235 1 185 1 188 3 212 1 261 1 293 1 372 1 120 2 295 2 139 1 
199 1 149 1 150 1 106 1 171 1 173 1 273 1 154 1 126 1 85 1 177 1 31 3 344 1 61 1 235 1 185 1 188 3 212 1 261 1 293 1 120 1 372 1 295 3 139 1 
199 1 149 1 150 1 106 1 171 1 173 1 273 1 154 1 126 1 85 1 177 1 31 3 344 1 89 1 61 1 235 1 185 1 131 1 188 3 212 1 261 1 293 1 372 1 120 2 295 3 139 1 
147 1 341 1 199 1 50 2 102 1 149 1 1 2 150 3 106 1 154 1 303 1 344 1 111 1 259 1 61 4 210 2 68 1 212 1 261 1 120 7 163 1 352 1 82 1 226 1 171 1 173 5 273 1 29 1 126 5 85 1 177 1 31 5 329 1 89 4 235 1 185 1 131 4 188 5 293 1 372 1 295 6 139 1 298 2 98 2 
147 1 199 1 50 2 149 1 1 2 150 2 106 1 154 1 111 1 344 1 259 1 61 2 210 2 68 1 212 1 120 4 352 1 226 1 171 1 173 2 273 1 29 1 126 1 85 1 177 1 31 4 329 1 89 2 235 1 185 1 131 2 188 4 96 2 293 1 372 1 295 4 139 1 43 1 298 2 98 2 
147 1 341 1 50 2 199 1 102 1 1 2 149 1 150 2 226 1 106 1 171 1 173 1 273 1 29 1 154 1 126 1 85 1 177 1 31 4 329 1 259 1 111 1 344 1 89 2 61 2 210 2 235 1 185 1 131 2 68 1 188 4 212 1 293 1 120 4 372 1 295 4 163 1 139 1 352 1 298 2 98 2 
147 1 341 1 50 2 199 1 102 1 1 2 149 1 150 2 226 1 106 1 171 1 173 1 273 1 29 1 154 1 126 1 85 1 177 1 31 4 329 1 259 1 111 1 344 1 89 2 61 2 210 2 235 1 185 1 131 2 68 1 188 4 212 1 293 1 120 4 372 1 295 4 163 1 139 1 352 1 298 2 98 2 
147 1 199 1 102 1 149 1 150 2 226 1 5 2 106 1 171 1 173 1 273 1 29 1 154 1 126 1 127 1 10 1 85 1 177 1 31 4 329 1 259 1 344 1 89 2 61 2 210 2 182 1 235 1 185 1 131 2 68 1 188 4 96 2 212 1 293 1 120 4 372 1 295 4 139 1 352 1 98 2 77 2 
147 1 341 1 50 2 199 1 102 1 1 2 149 1 150 2 226 1 82 1 106 1 171 1 173 1 273 1 29 1 154 1 126 1 85 1 329 1 177 1 31 4 259 1 111 1 344 1 89 3 61 3 210 2 235 1 185 1 131 3 68 1 188 4 212 1 293 1 372 1 120 5 295 5 163 1 139 1 352 1 298 2 98 2 
147 1 341 1 50 2 199 1 102 1 1 2 149 1 150 2 226 1 82 1 106 1 171 1 173 1 273 1 29 1 154 1 126 1 85 1 329 1 177 1 31 4 259 1 111 1 344 1 89 3 61 3 210 2 235 1 185 1 131 3 68 1 188 4 212 1 293 1 372 1 120 5 295 5 163 1 139 1 352 1 298 2 98 2 
147 1 199 1 149 1 150 2 5 2 106 1 154 1 344 1 259 1 61 2 210 2 68 1 212 1 120 4 352 1 77 2 226 1 171 1 173 1 273 1 29 1 126 1 85 1 177 1 31 4 329 1 89 2 182 1 235 1 185 1 131 2 188 4 96 2 293 1 372 1 295 4 139 1 43 1 98 2 
250 1 26 2 104 1 170 3 271 1 255 1 275 1 278 1 12 1 33 1 88 1 207 1 93 1 236 1 333 2 116 6 347 1 335 1 159 3 187 1 190 1 137 2 75 1 97 2 296 1 320 1 
49 1 250 1 81 2 26 1 342 2 170 6 107 1 275 2 278 11 231 1 87 1 281 1 62 1 93 2 236 2 333 1 158 1 116 14 37 1 347 2 335 2 159 8 187 1 133 1 40 3 241 1 137 2 190 2 97 4 296 4 320 11 299 1 323 3 
23 1 148 1 250 1 197 1 252 1 26 1 170 1 9 1 153 1 175 1 231 1 59 1 32 1 87 1 93 1 307 1 66 1 236 1 185 2 116 2 347 1 335 1 159 1 293 2 133 1 240 1 371 1 242 1 161 1 372 1 190 1 191 1 42 1 97 2 141 1 296 1 142 1 100 1 
148 2 197 1 250 3 340 2 2 1 342 2 255 1 153 3 9 2 12 1 59 2 66 2 158 2 116 20 347 3 159 10 118 1 161 1 75 1 320 7 23 3 81 2 26 2 327 2 170 10 271 1 272 2 175 1 275 3 278 7 231 1 280 1 362 2 87 1 33 1 88 1 93 3 236 3 333 4 185 3 187 3 335 3 132 2 133 1 293 3 240 2 241 4 242 3 371 2 372 1 190 3 137 8 97 6 42 1 191 2 141 2 296 7 245 1 100 1 
23 2 148 2 121 1 250 1 356 1 200 1 170 1 9 1 153 2 175 1 30 1 257 1 205 1 87 1 156 1 93 1 65 1 66 1 236 1 116 2 347 1 335 1 159 1 133 1 371 2 242 2 190 1 97 2 191 2 21 1 
197 1 250 1 81 1 123 1 342 1 170 2 275 1 278 1 231 1 93 1 95 1 236 1 333 1 185 1 158 1 116 3 347 1 335 1 159 1 187 1 293 1 161 1 372 1 137 1 190 1 97 2 296 1 247 1 320 1 
236 1 250 1 116 2 347 1 335 1 159 2 104 1 342 1 241 1 137 1 190 1 275 1 278 1 97 2 296 1 320 1 282 1 93 1 
236 1 333 1 238 1 250 1 158 1 116 2 347 1 335 1 187 1 104 1 170 2 137 1 190 1 278 1 97 2 296 1 320 1 93 1 
81 1 250 1 104 1 342 1 170 2 275 1 278 2 93 1 236 1 333 1 158 1 116 4 347 1 159 2 335 1 187 1 241 1 190 1 137 2 97 2 296 2 320 2 
236 1 250 1 116 2 347 1 335 1 159 2 342 1 241 1 137 1 190 1 275 1 278 1 97 2 296 1 257 1 320 1 282 1 93 1 
236 1 333 1 238 1 250 1 158 1 116 2 347 1 335 1 187 1 170 2 137 1 190 1 278 1 97 2 296 1 257 1 320 1 93 1 
81 1 250 1 342 1 170 2 275 1 278 2 257 1 93 1 236 1 333 1 158 1 116 4 347 1 159 2 335 1 187 1 241 1 190 1 137 2 97 2 296 2 320 2 
81 1 250 1 342 1 170 2 275 1 278 2 93 1 236 1 333 1 158 1 116 4 347 1 159 2 335 1 187 1 241 1 190 1 137 2 97 2 296 2 320 2 
23 1 148 1 250 1 26 1 170 1 272 1 9 1 153 1 175 1 59 1 87 1 93 1 66 1 236 1 185 1 116 2 347 1 159 1 335 1 133 1 293 1 240 1 242 1 371 1 190 1 191 1 97 2 141 1 
23 1 148 1 250 1 26 1 170 1 270 1 9 1 153 1 175 1 277 1 87 1 93 1 66 1 236 1 185 1 116 2 347 1 159 1 335 1 133 1 293 1 240 1 242 1 371 1 190 1 191 1 97 2 351 1 
81 1 250 1 342 1 170 2 275 1 278 2 231 1 93 1 236 1 333 1 158 1 116 4 347 1 159 2 335 1 187 1 241 1 190 1 137 2 97 2 296 2 320 2 
23 1 148 1 250 1 81 1 342 1 170 2 272 1 275 1 9 1 153 1 278 2 59 1 93 1 66 1 236 1 333 1 185 1 158 1 116 4 347 1 187 1 159 2 335 1 132 1 293 1 241 1 240 1 242 1 371 1 137 2 190 1 191 1 97 2 296 2 141 1 319 1 320 2 
197 1 250 1 81 1 342 1 170 1 275 1 278 1 231 1 93 1 95 1 236 1 185 1 158 1 116 3 347 1 187 1 335 1 159 2 293 1 241 1 135 1 161 1 372 1 137 1 190 1 97 2 296 1 247 1 320 1 
49 1 166 1 249 1 0 1 81 4 103 1 342 4 170 21 271 1 152 1 255 1 275 5 229 1 12 1 178 1 33 1 88 1 363 1 236 3 333 4 309 1 346 1 130 1 158 4 116 41 37 3 347 3 335 3 159 20 187 5 39 1 40 4 241 4 162 1 190 3 137 8 75 1 41 2 97 6 45 1 375 1 144 4 323 3 
49 1 166 1 249 1 0 1 81 4 103 1 342 4 170 18 271 1 152 1 255 1 275 5 229 1 12 1 178 1 33 1 88 1 363 1 236 4 333 4 309 1 346 2 130 1 158 3 116 38 37 3 347 4 335 4 159 20 187 4 39 1 40 4 241 3 162 1 190 4 137 7 75 1 41 2 97 8 45 1 375 1 144 4 323 3 
49 2 166 1 249 1 0 1 81 7 103 1 342 7 170 25 107 2 271 1 152 1 255 1 275 8 229 1 12 1 33 1 88 1 363 1 236 2 333 7 309 1 346 1 130 1 158 7 116 52 37 2 347 2 335 2 159 27 187 8 40 4 241 7 162 1 190 2 137 14 75 1 41 1 97 4 45 1 375 1 144 4 323 4 
49 1 249 1 81 3 103 1 342 3 170 10 172 1 275 3 178 1 236 2 333 3 309 1 158 3 116 19 37 1 347 2 335 2 159 9 187 3 40 2 241 3 162 2 190 2 137 6 41 1 97 4 45 1 375 1 144 2 323 1 
166 1 249 1 0 1 81 3 103 1 342 3 170 12 152 1 275 3 229 1 363 1 236 3 333 2 309 2 346 2 130 1 158 2 116 26 347 3 37 2 187 2 335 3 159 14 40 2 241 2 162 1 137 4 190 3 41 2 97 6 45 1 375 1 144 4 323 2 
73 1 219 1 20 1 192 1 52 1 376 1 79 1 370 1 254 1 286 1 
11 1 55 1 
73 1 228 1 192 1 284 1 294 1 376 1 79 1 370 1 286 1 
265 1 188 1 52 1 173 1 370 1 254 1 73 1 360 1 128 1 31 1 20 1 192 1 232 1 216 2 78 1 79 1 376 1 286 1 
265 1 188 1 52 1 173 1 370 1 254 1 73 1 360 1 128 1 31 1 20 1 192 1 232 1 216 2 78 1 79 1 376 1 286 1 
265 1 188 1 52 1 173 1 370 1 254 1 73 1 360 1 128 1 31 1 20 1 192 1 232 1 216 2 78 1 79 1 376 1 286 1 
196 1 230 1 369 1 
196 1 230 1 369 1 
374 1 368 1 
374 1 368 1 369 1 
53 1 54 1 
265 1 197 2 26 1 53 1 55 1 54 1 31 1 11 1 60 1 304 1 233 1 112 1 286 1 183 1 185 2 188 1 293 2 370 1 161 2 73 1 372 2 215 1 192 1 78 1 216 1 376 1 79 1 
196 1 230 1 
374 1 368 1 369 1 
23 2 148 1 250 1 356 1 170 1 153 2 8 1 343 1 231 1 87 1 93 1 65 2 66 1 236 1 185 2 367 1 116 2 186 1 347 1 335 1 159 1 336 1 213 1 293 2 133 1 371 1 242 2 372 2 190 1 191 1 97 2 
23 2 218 1 66 1 148 1 288 1 117 1 4 1 169 1 242 2 274 1 153 2 317 1 246 2 280 1 319 1 129 1 248 1 208 1 195 1 
23 1 218 1 66 1 148 1 288 1 117 1 4 1 169 1 242 1 274 1 174 1 153 1 246 2 280 1 248 1 208 1 195 1 
23 1 66 1 148 2 121 1 251 1 122 1 200 1 4 1 262 1 371 2 242 1 9 1 175 1 153 1 30 1 317 1 191 2 205 1 156 1 21 1 
23 1 218 1 66 1 148 1 288 1 117 1 4 1 169 1 242 1 274 1 153 1 317 1 246 2 280 1 129 1 248 1 208 1 195 1 
338 1 
147 1 126 1 114 1 259 1 311 1 207 1 173 1 
147 1 50 1 188 1 1 1 150 1 226 1 96 1 173 2 120 1 29 1 126 1 31 1 329 1 352 1 111 1 259 1 298 1 
147 9 148 4 149 2 150 3 342 2 109 1 9 3 153 3 56 2 256 2 259 8 306 2 66 3 114 1 158 2 311 1 70 1 160 2 120 5 318 2 352 4 319 1 23 3 80 6 220 2 165 6 266 2 81 2 226 4 327 2 173 8 29 4 175 1 275 2 126 2 279 2 329 4 31 5 92 1 364 1 365 2 187 2 188 5 38 2 96 12 189 2 239 1 371 10 242 3 138 3 191 3 298 6 47 1 143 1 
80 5 147 8 166 1 165 5 0 1 81 2 150 1 226 2 342 2 173 5 152 1 29 2 275 2 229 1 126 2 31 1 329 2 259 5 130 1 158 2 365 1 37 1 289 1 187 2 188 1 96 6 189 1 40 1 120 1 318 2 352 2 298 3 143 1 145 1 323 1 
147 2 223 1 197 1 341 1 28 1 226 1 171 1 271 1 255 1 29 1 275 2 329 1 31 1 259 2 33 1 95 1 185 1 187 1 290 1 188 1 291 1 189 1 293 1 161 1 372 1 318 2 352 1 355 1 
147 1 114 1 226 1 311 1 173 1 29 1 126 1 329 1 352 1 259 1 
80 5 147 5 165 5 81 2 158 2 187 2 327 1 342 2 96 10 189 1 173 5 275 2 318 2 259 5 298 5 
120 1 126 1 31 1 188 1 150 1 173 1 
23 2 147 1 148 2 121 1 226 1 150 1 200 1 9 1 29 1 153 2 175 2 30 1 58 1 205 1 329 1 31 1 259 1 156 1 364 1 66 1 365 1 188 1 211 1 371 2 242 2 120 2 191 2 352 1 21 1 143 1 
23 1 148 1 197 2 223 1 250 1 26 1 170 1 272 1 153 1 175 1 9 1 59 1 87 1 93 1 113 1 95 2 236 1 66 1 185 3 116 1 347 1 335 1 293 3 240 1 242 1 161 2 371 1 372 2 190 1 97 2 191 1 141 1 
80 2 147 1 165 2 365 1 226 1 96 4 173 4 29 1 126 2 12 1 329 1 352 1 298 2 259 2 143 1 
7 1 376 1 286 1 
359 1 52 1 53 1 376 1 286 1 
7 1 376 1 286 1 
7 1 376 1 286 1 
376 1 146 1 286 1 
376 1 146 1 286 1 
376 1 146 1 286 1 
376 1 286 1 
73 1 79 1 
170 4 271 1 275 1 255 1 12 1 88 1 33 1 236 1 333 2 130 1 116 8 37 1 347 1 187 1 335 1 159 4 40 1 190 1 137 2 97 2 75 1 45 1 323 1 
49 1 81 1 342 1 170 5 271 1 255 1 275 2 12 1 33 1 88 1 236 2 333 2 287 1 130 1 116 11 37 1 347 2 187 1 335 2 159 6 40 2 241 1 190 2 137 3 75 1 97 4 45 1 323 1 
166 1 0 1 81 2 342 2 170 10 271 1 152 1 255 1 275 3 229 1 12 1 33 1 88 1 236 3 287 1 333 3 346 1 130 1 158 2 116 19 37 1 347 3 335 3 159 9 187 3 40 1 241 1 190 3 137 4 75 1 97 6 45 1 323 1 
166 1 0 1 81 2 342 2 170 7 271 1 152 1 255 1 275 3 229 1 12 1 33 1 88 1 236 3 287 1 333 3 346 1 130 1 158 1 116 17 37 1 347 3 335 3 159 10 187 2 40 1 241 2 190 3 137 5 75 1 97 6 45 1 323 1 
170 4 271 1 275 1 255 1 12 1 88 1 33 1 236 1 333 2 130 1 116 8 37 1 347 1 187 1 335 1 159 4 40 1 190 1 137 2 97 2 75 1 45 1 323 1 
166 1 0 1 81 2 342 2 170 6 152 1 275 2 229 1 236 1 333 1 130 1 158 2 116 12 37 1 347 1 335 1 159 6 187 2 40 1 241 1 190 1 137 2 97 2 45 1 323 1 
166 1 0 1 81 2 342 2 170 8 271 1 152 1 255 1 275 3 229 1 12 1 33 1 88 1 236 4 287 1 333 3 346 2 130 1 158 1 116 18 37 1 347 4 335 4 159 10 187 2 40 1 241 2 190 4 137 5 75 1 97 8 45 1 323 1 
166 1 0 1 81 3 342 3 170 7 152 1 275 3 229 1 178 1 236 4 333 3 346 2 130 1 158 2 116 16 37 1 347 4 335 4 159 9 187 2 40 1 241 3 190 4 137 6 97 8 45 1 323 1 
333 3 116 7 187 1 159 3 170 4 241 3 271 1 255 3 137 6 275 1 75 1 88 2 33 3 
166 1 0 1 81 2 342 2 170 8 271 1 152 1 255 1 275 3 229 1 12 1 178 1 33 1 88 1 236 4 333 3 346 2 130 1 158 1 116 18 37 1 347 4 335 4 159 10 187 2 40 1 241 1 190 4 137 4 75 1 97 8 45 1 323 1 
236 2 333 2 346 1 116 8 347 2 187 1 159 4 335 2 170 4 241 1 271 1 275 1 137 3 190 2 255 1 97 4 75 1 12 1 88 1 33 1 
275 1 137 2 255 1 333 2 75 1 116 6 12 1 187 1 159 3 33 1 88 1 170 3 207 1 271 1 
236 1 333 1 287 1 158 1 81 1 116 4 347 1 187 1 335 1 159 2 342 1 170 2 241 1 137 2 190 1 275 1 97 2 
49 1 333 1 158 1 81 1 116 7 37 1 187 1 159 3 342 1 170 4 40 2 241 1 275 1 137 2 323 1 
49 1 81 2 342 2 170 12 107 1 271 1 255 2 275 3 276 1 12 1 281 1 33 2 88 1 236 2 333 5 346 2 158 2 116 23 347 2 159 11 187 3 335 2 40 2 241 4 137 9 190 2 75 1 97 4 323 2 
116 1 170 1 40 1 
116 1 159 1 323 1 
236 1 287 1 333 2 81 1 158 1 116 6 347 1 335 1 159 3 187 1 327 1 342 1 170 3 241 1 190 1 275 1 137 3 97 2 
166 1 0 1 81 2 342 2 170 6 152 1 275 2 229 1 236 1 333 1 130 1 158 2 116 12 37 1 347 1 335 1 159 6 187 2 40 1 241 1 190 1 137 2 97 2 45 1 323 1 
137 2 255 1 275 1 333 1 116 6 187 1 159 3 33 1 170 3 241 1 271 1 
236 1 333 1 346 1 116 3 347 1 159 1 335 1 170 2 241 1 137 2 255 1 276 1 190 1 97 2 75 1 33 1 88 1 
236 1 333 3 116 10 347 1 335 1 159 5 187 2 290 1 170 5 241 2 271 1 190 1 255 2 137 5 275 2 97 2 45 1 33 2 
137 1 275 1 236 1 190 1 97 2 116 2 347 1 159 2 335 1 45 1 342 1 241 1 
236 1 333 1 158 1 81 1 116 4 347 1 187 1 335 1 159 2 342 1 170 2 241 1 137 2 190 1 275 1 97 2 45 1 
236 3 333 1 346 1 116 3 347 3 335 3 159 1 170 2 241 1 276 1 190 3 255 1 137 2 97 6 178 1 45 1 33 1 
49 1 81 3 342 3 170 18 271 2 255 3 276 1 275 5 12 1 178 1 33 3 88 1 236 5 287 1 333 7 346 2 158 3 116 34 37 1 347 5 335 5 159 16 187 5 15 1 40 4 241 5 190 5 137 12 75 1 97 10 193 1 45 1 194 1 323 3 
372 1 185 1 26 1 212 1 293 1 264 1 322 1 
185 1 267 1 26 1 69 1 212 1 151 1 293 1 372 1 206 1 305 1 264 1 322 1 
23 1 153 1 175 1 191 1 205 1 156 1 207 1 371 1 242 1 
23 1 66 1 148 1 185 2 197 1 26 1 293 2 240 1 371 1 161 1 242 1 372 1 9 1 175 1 153 1 191 1 42 1 141 1 
23 1 66 1 148 1 185 2 266 1 197 1 26 1 38 1 171 1 293 2 240 1 239 1 371 3 161 2 242 1 273 1 372 2 9 2 153 1 191 2 42 1 141 1 344 1 
23 2 66 1 148 1 185 2 266 1 197 1 26 1 38 1 171 1 293 2 240 1 239 1 270 1 371 3 161 2 242 2 273 1 372 2 9 2 153 2 191 2 42 1 344 1 283 1 
23 3 66 1 148 1 222 1 266 1 188 2 149 1 38 1 173 1 239 1 136 1 242 3 371 4 120 1 175 1 9 1 153 3 56 1 138 1 191 1 126 1 31 2 283 1 
23 3 66 1 148 1 266 1 188 2 149 1 38 1 173 1 239 1 160 1 242 3 371 4 120 1 175 1 9 1 153 3 56 1 138 1 191 1 126 1 31 2 283 1 
23 1 66 1 153 1 148 1 99 1 242 1 
65 1 24 1 23 7 66 2 148 3 301 1 328 1 200 1 70 1 242 6 371 3 175 2 153 7 9 1 343 1 30 1 74 1 191 2 280 1 319 1 99 1 
148 1 197 1 250 2 153 1 9 1 255 1 59 1 12 1 66 1 116 6 347 2 159 3 213 1 161 1 75 1 319 1 320 1 23 1 26 2 170 3 271 1 272 1 275 1 278 1 231 1 362 1 88 1 33 1 93 2 236 2 333 2 185 2 335 2 187 1 132 1 293 2 240 1 242 1 371 1 372 1 190 2 137 2 97 4 42 1 191 1 296 1 141 1 
23 1 147 1 220 1 149 1 226 2 150 1 173 1 153 1 175 1 29 2 56 1 256 1 126 1 279 1 329 2 31 3 259 1 112 1 364 1 114 1 188 3 311 1 160 1 242 1 371 2 120 2 138 1 352 2 
23 2 66 1 148 2 70 1 242 2 371 2 56 1 153 2 9 1 191 1 319 1 47 1 99 1 
23 2 66 1 148 2 121 1 200 1 242 2 371 2 9 1 175 1 153 2 30 1 191 2 205 1 156 1 21 1 319 1 
23 2 66 1 121 1 148 2 118 1 200 1 239 1 242 2 371 1 153 2 9 1 30 1 191 1 21 1 
23 1 218 1 66 1 153 1 175 1 148 1 246 1 117 1 195 1 242 1 
23 2 66 1 153 2 148 1 343 1 191 1 186 1 280 1 319 1 371 1 242 2 
23 3 24 1 66 2 121 1 148 3 301 1 200 1 242 2 371 4 9 1 175 1 153 3 30 1 343 1 191 3 205 1 156 1 21 1 319 1 
23 3 66 2 121 1 148 3 301 1 310 1 200 1 242 2 371 4 9 1 175 1 153 3 30 1 343 1 191 3 205 1 156 1 21 1 319 1 
23 1 66 1 148 1 185 2 197 1 26 1 293 2 240 1 270 1 371 1 161 1 242 1 372 1 9 1 175 1 153 1 191 1 42 1 
23 1 66 1 148 2 200 1 70 1 239 1 242 1 371 1 153 1 9 1 30 1 74 1 191 1 
185 1 367 1 336 1 293 1 372 1 8 1 46 1 91 1 321 1 
300 1 46 1 337 1 
26 1 46 1 91 1 321 1 108 1 
300 1 26 1 188 2 149 1 337 1 171 1 173 1 108 2 273 1 203 1 126 1 31 2 177 1 344 1 46 1 91 2 234 1 321 2 112 1 
258 1 326 1 314 1 207 1 
325 1 140 1 258 1 260 1 326 1 353 1 314 1 
260 1 17 1 22 1 
325 1 140 1 258 1 366 1 260 3 326 1 353 3 314 1 202 1 83 2 308 1 332 1 
63 1 325 1 140 1 258 1 260 2 326 1 348 1 353 2 314 1 
274 1 218 1 325 1 168 1 221 1 140 1 366 1 246 1 260 1 326 1 353 1 
325 1 140 1 258 1 366 1 260 1 326 1 353 1 
325 1 140 1 258 2 366 1 260 1 353 1 314 1 
325 2 184 1 366 1 260 2 326 1 140 2 258 1 350 1 345 1 353 2 
63 2 325 1 168 1 366 1 260 3 16 1 326 2 314 1 140 1 258 1 297 1 339 1 353 3 
63 1 325 1 218 1 366 1 260 2 326 1 124 1 314 1 274 1 140 1 258 1 246 2 353 2 248 1 195 1 
63 2 325 2 168 1 366 1 198 1 260 4 326 2 348 1 314 1 140 2 258 1 339 1 353 4 
325 1 140 1 258 1 366 1 260 1 326 1 353 1 314 1 
63 2 325 1 168 1 260 4 326 3 202 1 314 2 83 1 71 1 140 1 258 2 339 1 353 4 308 1 
63 1 325 1 167 1 366 1 260 2 326 1 314 1 140 1 258 1 331 1 353 2 94 1 
325 1 366 1 260 3 326 1 202 1 314 1 6 1 83 2 140 1 258 1 353 3 308 2 
84 1 125 1 326 2 217 2 
302 1 325 1 140 1 366 1 260 1 353 1 
63 1 325 1 140 1 258 1 366 1 260 2 326 1 16 1 353 2 314 1 
354 1 
325 1 140 1 258 1 366 1 260 1 326 1 353 1 314 1 
63 1 325 1 366 1 260 3 326 1 16 1 314 1 83 1 140 1 258 1 353 3 
168 1 339 1 326 1 71 1 
258 1 326 1 

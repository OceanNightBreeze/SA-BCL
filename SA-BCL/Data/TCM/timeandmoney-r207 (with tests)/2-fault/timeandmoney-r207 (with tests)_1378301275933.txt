#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 136 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
248 2 313 4 149 5 292 1 78 1 365 1 180 9 105 1 314 1 202 1 36 1 135 2 37 2 259 2 258 1 40 1 16 2 323 3 374 1 62 1 139 2 376 1 350 6 140 1 121 2 188 9 91 1 246 1 
248 2 313 4 149 5 292 1 78 1 365 1 180 9 105 1 314 1 202 1 36 1 135 2 37 2 259 2 258 1 40 1 16 2 323 3 374 1 62 1 139 2 376 1 350 6 140 1 121 2 188 9 91 1 246 1 
248 2 313 5 149 6 292 1 78 1 365 1 180 10 105 1 314 1 202 1 36 1 135 2 37 2 259 2 258 1 40 1 16 2 323 4 374 1 62 1 139 2 376 1 350 7 140 1 121 2 188 10 91 1 246 1 
248 2 313 3 149 4 292 1 78 1 365 1 180 7 105 1 314 1 202 1 36 1 135 2 37 2 259 2 258 1 40 1 16 2 323 2 374 1 62 1 139 2 376 1 350 4 121 1 188 7 91 1 246 1 
313 2 149 3 292 1 16 1 323 1 374 1 139 1 365 1 180 4 350 3 140 1 121 2 37 1 135 1 188 4 258 1 259 1 246 1 
248 1 149 1 176 1 292 1 16 1 274 1 62 1 139 1 264 1 365 1 180 2 376 1 37 1 188 2 258 1 259 1 
248 1 313 1 149 2 292 1 323 1 78 1 139 2 365 1 180 3 350 1 188 3 258 1 259 2 
248 1 313 4 149 5 292 1 78 1 365 1 180 9 314 1 36 1 135 1 37 1 259 2 258 1 281 1 16 1 323 3 374 1 139 2 350 7 140 1 121 2 379 1 188 9 246 1 
248 1 313 4 149 5 292 1 78 1 365 1 180 9 314 1 36 1 135 1 37 1 259 2 258 1 281 1 16 1 323 3 374 1 139 2 350 7 140 1 121 2 379 1 188 9 246 1 
235 1 83 1 96 1 
161 2 352 1 96 1 
89 2 86 2 240 1 242 2 291 2 98 1 279 2 218 2 
247 2 51 1 73 1 356 1 148 1 333 1 128 1 358 2 28 1 197 1 104 2 153 1 297 1 367 1 318 1 39 1 343 2 158 1 279 2 278 1 138 1 86 3 167 2 263 1 265 1 186 1 212 1 89 2 240 1 242 3 329 1 23 1 216 1 291 2 98 1 218 2 380 1 
59 1 89 1 33 1 177 1 86 1 240 1 242 1 291 1 279 1 218 1 
330 1 219 1 321 1 175 1 86 1 177 1 235 1 54 1 242 1 35 1 172 1 94 1 291 1 96 1 
330 2 219 1 321 2 175 1 86 1 177 1 235 1 89 1 242 1 35 1 172 1 291 1 96 1 218 1 279 1 
330 1 321 1 70 1 13 1 227 1 
235 1 330 2 126 1 321 2 13 1 353 1 96 1 227 1 
330 1 321 1 13 1 
330 1 59 1 321 1 177 1 86 1 89 1 33 1 309 1 240 1 242 1 291 1 227 1 218 1 279 1 
96 1 
235 1 330 2 321 2 239 1 13 1 353 1 96 1 227 1 
85 1 330 5 162 1 321 5 27 2 294 1 4 1 348 1 235 1 187 2 287 1 327 2 254 1 226 1 190 1 353 1 13 2 96 1 227 2 
83 1 98 1 
127 1 86 2 89 1 49 1 242 2 291 2 218 1 279 1 98 2 
68 1 67 1 115 1 
356 1 148 1 138 1 86 1 358 1 167 1 28 1 263 1 104 1 212 1 186 1 242 1 244 1 367 1 98 1 380 1 
127 1 86 5 275 1 89 1 143 2 298 1 242 5 170 1 341 1 94 1 291 5 218 4 279 4 98 1 
33 1 177 1 86 2 242 2 156 1 291 2 279 2 218 2 
356 1 148 1 138 1 86 2 358 1 28 1 167 1 263 1 67 1 104 1 186 1 212 1 143 1 242 2 367 1 341 1 291 1 380 1 218 1 279 1 
89 1 143 1 86 3 242 3 291 3 98 1 279 3 218 3 
33 1 177 1 86 1 242 1 291 1 279 1 218 1 
89 1 127 1 177 1 49 1 86 1 242 1 291 1 279 1 218 1 
247 1 51 1 73 1 356 1 330 1 148 1 219 1 175 1 127 1 333 1 128 1 150 1 177 1 358 1 28 1 104 1 297 1 35 1 367 1 341 1 39 1 343 2 158 1 278 1 279 3 138 1 321 1 86 4 167 1 263 1 186 1 212 1 89 2 143 1 270 1 240 1 242 4 329 1 216 1 172 1 291 3 98 1 380 1 218 3 
86 2 143 1 298 1 242 2 94 1 291 2 98 1 279 1 218 1 
330 1 42 1 321 1 219 1 127 1 175 1 177 1 86 3 150 1 89 1 143 2 242 3 35 1 172 1 341 1 291 3 96 1 218 3 279 3 
127 1 86 2 67 1 115 1 89 1 143 1 242 2 291 2 218 2 279 2 
356 1 148 1 138 1 86 1 358 1 167 1 28 1 263 1 104 1 212 1 186 1 242 1 367 1 98 1 380 1 
148 1 272 1 86 1 358 1 167 1 28 1 263 1 104 1 212 1 186 1 242 1 367 1 93 1 98 1 380 1 
73 1 51 2 247 4 174 1 128 1 151 1 77 1 315 1 297 1 155 1 301 1 39 1 109 1 84 1 343 2 158 1 183 1 67 2 265 2 115 2 238 1 68 2 216 1 189 1 
219 1 177 1 86 1 242 1 156 1 291 1 279 1 218 1 
204 1 38 1 
204 1 38 1 
9 1 223 1 
9 1 223 1 
9 1 223 1 
154 1 204 1 38 1 
154 1 204 1 38 1 
360 1 204 1 38 1 
236 1 9 1 204 2 38 2 97 1 223 1 
154 1 204 1 38 1 
43 1 204 1 38 1 
43 1 204 1 38 1 
43 1 204 1 38 1 
330 1 192 1 360 1 361 1 295 1 201 1 157 1 204 1 38 1 279 2 159 1 321 1 45 1 86 2 322 1 284 1 262 1 269 1 242 2 291 2 311 1 98 1 218 2 191 1 
330 2 370 1 321 2 322 2 361 3 295 2 346 1 262 2 66 1 201 1 124 1 108 2 157 2 217 1 38 2 204 2 354 1 96 1 97 1 
16 1 37 1 135 1 
16 1 37 1 264 1 
24 1 135 2 37 3 306 1 210 1 264 1 
135 1 194 1 37 2 306 1 210 1 264 1 
135 1 37 2 306 2 210 1 264 1 
192 1 330 5 76 1 27 1 77 1 249 1 363 2 224 2 256 1 13 1 109 1 84 1 227 4 159 1 161 3 85 2 183 1 321 5 372 2 305 1 187 1 235 1 308 1 287 3 327 1 142 1 351 1 352 1 190 1 353 1 96 2 191 1 
52 1 330 9 76 2 27 2 77 3 4 1 249 1 224 6 181 1 13 6 109 3 84 3 227 7 41 1 161 9 85 6 183 3 321 9 372 6 305 3 185 1 168 1 326 5 235 1 187 2 287 8 327 2 70 5 241 1 351 2 352 3 353 1 190 1 96 5 191 4 
330 3 76 1 27 1 77 1 4 1 363 1 224 2 256 1 109 1 84 1 227 2 85 2 161 4 183 1 321 3 372 2 305 1 235 1 187 1 308 1 287 3 327 1 351 1 352 2 96 3 191 1 
52 1 330 4 76 1 27 1 77 2 4 1 363 2 224 4 256 1 109 2 84 2 227 3 161 7 85 4 183 2 321 4 372 4 305 2 185 1 168 1 235 1 187 1 308 1 287 5 327 1 351 1 352 3 96 4 191 2 
357 1 83 1 263 1 
163 1 263 1 
113 1 
263 1 186 1 212 1 
263 1 179 1 
263 1 186 1 
357 2 378 1 263 3 131 1 186 1 212 1 
51 3 74 1 247 7 14 1 183 1 231 1 362 1 296 1 5 1 265 4 315 3 80 1 155 2 106 1 340 1 11 2 109 1 
51 3 74 1 247 7 14 1 183 1 231 1 362 1 296 1 5 1 265 4 315 3 80 1 155 2 106 1 340 1 11 2 109 1 
51 3 74 1 247 7 14 1 183 1 231 1 362 1 296 1 5 1 266 1 265 4 315 3 80 1 155 2 106 1 340 1 11 2 109 1 
73 1 51 15 247 31 74 5 128 1 362 2 296 2 77 3 196 1 5 1 315 10 297 1 80 1 134 1 106 1 155 5 340 2 11 3 137 4 109 4 343 2 84 3 158 1 14 1 183 4 231 2 305 3 48 1 265 16 213 1 214 1 69 3 215 1 145 1 
73 1 247 1 297 1 128 1 231 1 300 1 11 1 362 1 136 1 343 2 158 1 265 1 
248 1 24 1 149 1 292 1 358 1 26 1 28 1 365 1 104 1 180 2 31 1 32 1 82 1 135 1 367 1 37 2 259 1 258 1 16 1 167 1 64 1 65 1 139 1 264 1 350 1 290 1 188 2 245 1 271 1 146 1 
24 1 50 1 248 1 149 1 292 1 358 1 26 1 28 1 365 1 104 1 180 3 31 1 32 1 135 1 367 1 37 2 368 1 342 1 259 1 16 1 167 1 64 1 65 1 139 1 264 1 350 2 188 3 245 1 271 1 146 1 
248 1 24 1 149 1 292 1 358 1 28 1 365 1 104 1 180 2 31 1 32 1 367 1 37 2 135 1 368 1 342 1 16 1 167 1 64 1 65 1 264 1 350 2 188 2 271 1 146 1 
248 2 50 1 369 1 148 1 358 1 3 1 28 1 167 1 263 1 232 1 64 2 139 1 180 1 104 1 186 1 32 2 338 1 367 1 171 1 188 1 319 1 146 2 259 1 
248 1 24 1 358 1 26 1 28 1 104 1 180 1 31 1 32 1 135 1 367 1 37 2 342 1 259 1 258 1 16 1 167 1 64 1 65 1 139 1 264 1 290 1 188 1 245 1 271 1 146 1 
261 1 
330 5 148 2 334 4 102 2 104 2 252 2 54 1 12 2 56 2 13 6 344 1 160 1 161 2 58 1 60 1 209 2 167 2 63 1 263 1 349 2 352 2 172 1 353 3 219 1 175 1 358 2 177 1 76 1 27 1 220 1 28 1 35 1 367 1 319 1 85 2 321 5 184 1 86 1 47 1 232 1 233 1 186 1 235 1 187 1 288 2 287 2 237 1 327 1 242 1 90 1 190 1 144 1 94 1 291 1 96 2 
330 3 58 1 219 1 321 3 175 1 334 2 177 1 86 1 220 1 63 1 54 1 288 1 239 1 35 1 242 1 172 1 353 1 13 2 144 1 94 1 291 1 344 1 
330 3 219 1 175 1 177 1 334 3 220 1 54 1 35 1 13 1 344 1 58 1 321 3 86 1 63 1 349 1 235 1 239 1 242 1 172 1 94 1 144 1 353 1 291 1 96 1 
330 3 219 1 175 1 177 1 334 3 102 1 220 1 54 1 35 1 13 2 344 1 58 1 321 3 86 1 63 1 349 1 235 1 288 1 239 1 242 1 172 1 353 1 94 1 144 1 291 1 96 1 
330 5 334 6 102 4 252 2 54 1 107 1 12 2 56 2 13 7 344 1 110 1 58 1 303 1 209 2 63 1 349 4 172 1 352 2 353 3 219 1 175 1 177 1 220 1 27 1 79 1 35 1 85 1 321 5 184 1 86 1 47 1 283 1 235 5 187 1 288 4 287 1 327 1 239 1 242 1 144 1 94 1 190 1 291 1 96 5 
330 4 334 4 102 2 252 2 54 1 12 2 56 2 13 4 344 1 160 1 58 1 161 2 209 2 63 1 349 2 172 1 352 2 353 2 219 1 175 1 177 1 220 1 27 1 35 1 85 1 321 4 184 1 86 1 47 1 187 1 235 1 287 1 288 2 327 1 242 1 94 1 190 1 144 1 291 1 96 2 
330 4 219 1 175 1 177 1 334 4 102 2 27 1 220 1 252 2 54 1 79 1 35 1 12 2 56 2 13 4 344 1 85 1 58 1 303 1 321 4 184 1 209 2 86 1 283 1 47 1 63 1 349 2 235 1 187 1 288 2 287 1 327 1 242 1 352 2 172 1 353 2 94 1 144 1 190 1 291 1 96 1 
330 4 219 1 175 1 177 1 334 4 102 2 27 1 220 1 252 2 54 1 79 1 35 1 12 2 56 2 13 4 344 1 85 1 58 1 303 1 321 4 184 1 209 2 86 1 283 1 47 1 63 1 349 2 235 1 187 1 288 2 287 1 327 1 242 1 352 2 172 1 353 2 94 1 144 1 190 1 291 1 96 1 
330 4 219 1 175 1 177 1 334 4 102 2 27 1 220 1 252 2 54 1 35 1 10 1 56 2 13 4 344 1 207 1 161 2 85 1 58 1 321 4 184 1 86 1 283 1 373 1 63 1 349 2 235 1 116 2 187 1 288 2 287 1 327 1 242 1 172 1 353 2 72 2 94 1 144 1 190 1 291 1 96 1 
330 4 219 1 175 1 177 1 334 5 102 3 27 1 220 1 252 2 54 1 79 1 35 1 107 1 12 2 56 2 13 5 344 1 85 1 58 1 303 1 321 4 184 1 209 2 86 1 283 1 47 1 63 1 349 3 235 1 187 1 287 1 288 3 327 1 242 1 352 2 172 1 353 2 190 1 94 1 144 1 291 1 96 1 
330 4 219 1 175 1 177 1 334 5 102 3 27 1 220 1 252 2 54 1 79 1 35 1 107 1 12 2 56 2 13 5 344 1 85 1 58 1 303 1 321 4 184 1 209 2 86 1 283 1 47 1 63 1 349 3 235 1 187 1 287 1 288 3 327 1 242 1 352 2 172 1 353 2 190 1 94 1 144 1 291 1 96 1 
330 4 219 1 175 1 177 1 334 4 102 2 27 1 220 1 252 2 54 1 35 1 56 2 13 4 344 1 160 1 207 1 161 2 85 1 58 1 321 4 184 1 86 1 63 1 349 2 235 1 116 2 187 1 288 2 287 1 327 1 242 1 172 1 353 2 72 2 144 1 190 1 94 1 291 1 96 1 
73 1 247 6 51 3 174 1 128 1 296 1 5 1 315 2 297 1 80 1 155 2 340 1 11 1 83 1 39 1 109 1 343 2 158 1 14 1 183 1 67 1 115 1 265 3 68 1 216 1 98 2 
74 1 51 6 73 2 247 14 128 2 221 1 77 2 197 1 366 1 251 1 315 2 297 2 155 1 137 3 39 1 109 1 343 4 84 1 158 2 183 2 87 1 305 2 67 11 265 8 115 4 68 11 69 3 214 1 215 1 122 1 329 1 216 2 98 1 
356 1 73 1 51 1 247 2 148 1 358 1 128 1 28 1 53 1 197 1 104 1 225 1 297 1 367 1 341 1 39 1 343 2 279 1 158 1 138 1 86 2 167 1 263 1 169 1 186 1 212 1 115 1 265 1 143 1 122 1 242 2 244 1 329 1 216 1 291 1 98 1 380 1 218 1 
51 10 247 20 148 1 293 2 296 1 5 1 197 1 104 3 297 3 155 4 11 1 340 1 341 1 342 1 205 1 109 3 343 6 158 3 14 1 15 1 305 2 167 3 61 2 263 2 67 7 212 2 115 7 265 10 68 7 122 1 216 3 218 1 73 3 356 2 74 4 75 2 358 3 128 3 28 2 77 2 315 8 80 1 367 2 39 3 84 2 279 1 278 2 183 3 138 2 86 3 234 2 186 2 377 1 143 1 242 3 329 1 291 1 98 2 380 2 
73 2 247 2 51 1 174 1 148 2 358 7 128 2 28 2 197 1 104 8 297 2 82 1 367 2 316 1 342 1 319 1 57 1 39 2 343 4 279 1 158 2 282 1 371 1 86 1 112 1 304 1 167 8 263 3 232 1 18 1 265 1 186 2 143 1 242 1 329 1 23 2 216 2 291 1 218 1 
73 1 247 3 51 2 127 1 128 1 77 1 315 1 297 1 155 1 39 1 109 1 343 2 84 1 158 1 279 1 183 1 86 1 305 1 67 1 375 1 115 1 265 1 89 1 68 1 122 1 242 1 216 1 291 1 218 1 
74 1 247 2 73 1 174 1 183 1 128 1 151 1 77 1 67 1 115 1 265 2 315 1 68 1 297 1 216 1 39 1 343 2 158 1 
247 2 73 1 51 2 174 1 128 1 67 1 115 1 315 1 68 1 297 1 155 1 216 1 301 1 39 1 109 1 343 2 84 1 158 1 
73 1 247 4 74 1 51 2 174 1 128 1 77 1 315 2 297 1 155 1 39 1 109 1 343 2 84 1 158 1 183 1 305 1 67 2 265 2 115 2 68 2 216 1 
74 1 247 2 73 1 183 1 128 1 151 1 112 1 77 1 67 1 115 1 265 2 315 1 68 1 297 1 216 1 39 1 343 2 158 1 
247 2 73 1 51 2 128 1 112 1 67 1 115 1 315 1 68 1 297 1 155 1 216 1 301 1 39 1 109 1 343 2 84 1 158 1 
73 1 247 4 74 1 51 2 128 1 77 1 315 2 297 1 155 1 39 1 109 1 343 2 84 1 158 1 183 1 112 1 305 1 67 2 265 2 115 2 68 2 216 1 
51 2 74 1 73 1 247 4 183 1 128 1 305 1 77 1 67 2 115 2 265 2 315 2 68 2 297 1 155 1 216 1 39 1 109 1 84 1 343 2 158 1 
247 2 356 1 73 1 51 1 148 1 358 1 128 1 28 1 197 1 104 1 297 1 367 1 39 1 343 2 278 1 158 1 138 1 86 1 167 1 263 1 265 1 186 1 212 1 242 1 329 1 216 1 98 1 380 1 
247 2 73 1 51 1 148 1 272 1 358 1 128 1 28 1 335 1 197 1 104 1 297 1 367 1 39 1 343 2 158 1 86 1 167 1 263 1 265 1 186 1 212 1 242 1 329 1 216 1 93 1 98 1 380 1 
73 1 247 4 74 1 51 2 128 1 77 1 315 2 297 1 155 1 39 1 109 1 343 2 84 1 158 1 183 1 305 1 67 2 265 2 115 2 68 2 122 1 216 1 
51 2 74 1 247 4 356 1 73 1 358 1 128 1 28 1 77 1 104 1 315 2 297 1 155 1 82 1 367 1 39 1 109 1 84 1 343 2 278 1 158 1 183 1 138 1 86 1 305 1 61 1 167 1 263 1 67 2 115 2 265 2 212 1 186 1 68 2 242 1 216 1 380 1 
51 1 74 1 73 1 247 3 127 1 128 1 77 1 315 1 297 1 39 1 109 1 84 1 343 2 158 1 280 1 279 1 183 1 86 1 305 1 67 1 265 2 115 1 89 1 68 1 122 1 242 1 216 1 291 1 218 1 
73 2 51 10 247 19 74 3 1 1 312 1 128 2 77 3 336 1 30 2 315 6 297 2 155 3 300 1 137 2 109 3 343 4 84 3 158 2 183 3 164 1 305 3 88 2 211 1 114 1 265 9 69 1 214 1 215 1 95 1 
74 2 51 12 73 3 247 26 99 1 1 2 312 2 128 3 129 1 77 3 30 4 315 4 297 3 55 1 155 2 300 1 203 1 137 2 109 2 343 6 84 2 158 3 208 1 183 3 164 1 305 3 88 1 114 1 265 14 213 2 69 2 22 1 215 2 95 1 
247 41 51 21 99 1 1 1 296 1 5 1 336 1 297 3 55 1 300 1 155 4 203 1 340 1 11 1 109 5 257 1 343 6 158 3 208 1 14 1 164 1 305 4 265 20 114 1 213 1 214 1 69 3 22 1 215 3 74 4 73 3 312 2 128 3 129 1 77 4 30 4 315 8 80 1 137 4 84 4 183 5 88 1 95 1 
99 1 73 4 51 18 247 38 74 3 1 1 312 2 128 4 129 1 296 1 77 4 5 1 336 1 30 4 315 7 297 4 55 1 80 1 155 4 300 1 11 1 340 1 203 1 137 4 257 1 109 4 343 8 84 3 158 4 14 1 208 1 183 5 164 1 305 4 88 1 114 1 265 20 213 2 69 3 214 1 22 1 215 3 95 1 
99 1 73 2 51 25 247 52 74 7 1 1 312 1 128 2 129 1 296 1 77 7 5 1 30 4 315 14 297 2 55 1 80 1 155 7 300 1 11 1 340 1 203 1 137 4 109 8 343 4 84 7 158 2 14 1 208 1 183 8 164 1 87 2 305 7 88 1 114 1 265 27 213 1 69 4 214 2 22 1 215 2 95 1 
322 1 295 1 346 1 262 1 157 1 217 1 29 1 204 1 38 1 97 1 
269 1 360 1 
125 1 322 1 295 1 262 1 157 1 204 1 38 1 307 1 132 1 
154 1 339 1 
236 1 43 1 25 1 
330 1 321 1 322 1 361 2 295 1 346 1 262 1 66 1 201 1 124 1 108 1 157 1 217 1 38 1 204 1 354 1 96 1 97 1 
330 1 321 1 322 1 361 2 295 1 346 1 262 1 66 1 201 1 124 1 108 1 157 1 217 1 38 1 204 1 354 1 96 1 97 1 
330 1 321 1 322 1 361 2 295 1 346 1 262 1 66 1 201 1 124 1 108 1 157 1 217 1 38 1 204 1 354 1 96 1 97 1 
236 1 154 1 339 1 
236 1 154 1 339 1 
43 1 25 1 
236 1 43 1 25 1 
45 1 284 1 
330 1 192 1 360 1 361 1 295 1 199 1 108 1 157 1 204 1 38 1 227 1 159 1 279 2 321 1 45 1 86 2 322 1 284 1 262 1 269 1 242 2 354 1 291 2 311 1 98 1 191 1 218 2 
73 1 247 2 51 1 332 1 128 1 358 2 28 1 197 1 104 2 253 1 297 1 276 1 367 1 39 1 206 1 343 2 158 1 371 1 86 2 167 2 263 1 18 1 186 1 265 1 122 1 242 2 123 1 329 1 23 2 216 1 291 2 
24 1 16 1 358 2 26 1 28 1 167 2 65 1 264 1 104 2 7 1 34 1 21 1 82 1 135 1 37 2 367 1 342 1 271 1 146 1 
24 1 16 1 358 1 165 1 26 1 167 1 28 1 65 1 264 1 104 1 7 1 135 1 37 2 367 1 342 1 271 1 146 1 
369 1 148 1 358 1 28 1 167 1 263 1 232 1 104 1 186 1 119 1 34 1 367 1 319 1 146 1 
24 1 16 1 358 1 26 1 167 1 28 1 65 1 264 1 104 1 7 1 34 1 21 1 135 1 37 2 367 1 342 1 271 1 146 1 
355 1 
235 1 287 1 85 1 294 1 83 1 96 1 348 1 
330 1 27 1 12 1 13 1 85 1 161 1 321 1 209 1 47 1 187 1 235 1 287 1 327 1 352 1 190 1 353 1 96 2 
0 2 330 5 148 1 294 1 104 3 299 2 13 5 109 2 302 1 161 12 163 3 166 2 305 2 167 3 263 10 348 1 212 3 118 1 267 1 120 2 71 1 172 2 352 6 353 3 357 2 75 2 358 3 76 2 27 4 28 3 77 2 131 1 179 2 224 6 133 2 82 1 367 4 84 2 229 2 85 8 44 2 183 2 321 5 372 6 233 1 186 3 235 2 187 4 287 9 289 2 327 4 190 4 147 1 96 8 
0 1 99 1 330 1 76 1 129 1 27 2 77 2 224 5 55 1 133 2 137 1 13 1 109 2 84 2 228 1 161 6 208 1 85 5 183 2 321 1 372 5 305 2 233 1 187 2 235 2 287 8 327 2 69 1 22 1 215 1 243 1 352 3 353 1 190 2 96 5 
0 1 330 1 177 1 27 1 296 1 5 1 33 1 133 2 340 1 109 1 279 1 85 2 59 1 303 1 183 2 321 1 86 1 187 1 287 2 327 1 89 1 328 1 309 1 240 1 242 1 190 1 291 1 218 1 
235 1 187 1 287 1 85 1 327 1 27 1 294 1 190 1 96 1 348 1 
0 1 85 5 161 10 75 1 183 2 372 5 305 2 77 2 224 5 287 5 133 2 352 5 109 2 96 5 84 2 
235 1 330 1 321 1 13 1 353 1 96 1 
330 3 148 2 358 4 76 2 27 2 28 1 4 1 104 4 367 1 319 1 13 4 85 2 321 3 167 4 17 1 263 1 232 1 233 2 186 1 19 1 187 2 237 1 287 2 327 2 267 1 90 1 190 1 353 2 147 2 
247 1 51 1 73 1 356 1 148 1 333 1 358 1 128 1 28 1 104 1 297 1 367 1 39 1 343 2 158 1 279 2 278 1 138 1 86 3 167 1 263 1 212 1 186 1 89 2 240 1 242 3 329 1 216 1 291 2 98 1 218 2 380 1 
161 4 85 2 372 2 76 1 27 1 233 1 187 1 235 2 224 2 287 1 327 1 11 1 352 2 190 1 96 4 
322 1 295 1 195 1 
322 1 295 1 195 1 
322 1 284 1 295 1 217 1 285 1 
322 1 295 1 195 1 
322 1 295 1 92 1 
322 1 295 1 92 1 
322 1 295 1 92 1 
322 1 295 1 
204 1 38 1 
51 4 247 8 74 1 73 2 14 1 183 1 128 2 296 1 5 1 265 4 213 1 315 3 297 2 80 1 155 2 11 1 340 1 109 1 343 4 158 2 
51 3 247 6 14 1 183 1 296 1 5 1 265 3 315 2 80 1 155 2 11 1 340 1 83 1 109 1 
51 2 73 1 247 4 74 1 183 1 100 1 128 1 305 1 77 1 265 2 315 2 297 1 155 1 109 1 84 1 343 2 158 1 
51 4 247 7 74 1 183 1 305 1 77 1 265 3 315 2 69 1 214 1 215 1 155 1 137 2 109 1 84 1 
74 4 247 23 51 12 73 2 128 2 296 2 77 2 5 1 251 1 315 9 297 2 80 1 155 5 255 1 11 1 340 2 137 2 109 3 84 2 343 4 158 2 14 1 183 3 305 2 87 1 265 11 213 2 214 1 69 2 
247 1 51 1 137 1 
247 1 69 1 265 1 
73 1 51 3 247 6 74 1 75 1 183 1 100 1 128 1 305 1 77 1 265 3 315 3 297 1 155 2 109 1 343 2 84 1 158 1 
74 1 247 12 51 6 73 1 99 1 128 1 129 1 77 2 315 2 297 1 55 1 300 1 155 1 137 1 109 2 343 2 84 2 158 1 208 1 183 2 305 2 265 6 69 1 22 1 215 1 
247 6 51 3 74 1 183 1 296 1 5 1 265 3 315 2 155 1 340 1 109 1 
74 1 51 2 247 3 73 1 14 1 128 1 296 1 265 1 213 1 315 2 297 1 80 1 155 1 255 1 340 1 343 2 158 1 
73 1 74 2 247 10 51 5 183 2 128 1 296 2 5 1 265 5 315 5 297 1 328 1 300 1 155 3 340 2 109 2 343 2 158 1 
73 1 247 2 74 1 183 1 128 1 77 1 265 2 315 1 297 1 300 1 343 2 158 1 
51 2 73 1 247 4 74 1 183 1 128 1 305 1 77 1 265 2 315 2 297 1 155 1 300 1 109 1 84 1 343 2 158 1 
51 2 247 3 73 3 74 1 128 3 296 1 336 1 265 1 213 1 315 2 297 3 300 1 155 1 255 1 340 1 343 6 158 3 
51 18 73 5 247 34 74 5 100 1 128 5 296 3 77 3 196 1 5 2 336 1 315 12 297 5 80 1 300 1 155 7 255 1 11 1 340 3 137 4 109 5 343 10 84 3 158 5 14 1 183 5 305 3 48 1 265 16 213 2 69 3 214 1 215 1 145 1 
247 8 51 4 73 1 128 1 296 1 5 1 315 2 297 1 80 1 300 1 155 2 11 1 340 1 137 1 109 1 343 2 158 1 208 1 14 1 183 1 265 4 69 1 215 1 
247 11 51 5 73 2 74 1 100 1 128 2 296 1 77 1 5 1 315 3 297 2 80 1 155 2 300 1 11 1 340 1 137 2 109 1 343 4 158 2 14 1 208 1 183 2 305 1 265 6 69 1 214 1 215 1 
74 1 247 19 51 10 73 3 99 1 100 1 128 3 129 1 296 1 77 2 5 1 315 4 297 3 55 1 80 1 300 1 155 3 11 1 340 1 137 1 109 3 343 6 84 2 158 3 14 1 208 1 183 3 305 2 265 9 213 1 69 1 22 1 215 1 
74 2 247 17 51 7 73 3 99 1 100 1 128 3 129 1 296 1 77 2 5 1 315 5 297 3 55 1 80 1 300 1 155 3 11 1 340 1 137 1 109 2 343 6 84 1 158 3 14 1 208 1 183 3 305 2 265 10 213 1 69 1 22 1 215 1 
247 8 51 4 73 1 128 1 296 1 5 1 315 2 297 1 80 1 300 1 155 2 11 1 340 1 137 1 109 1 343 2 158 1 208 1 14 1 183 1 265 4 69 1 215 1 
74 1 247 12 51 6 73 1 99 1 128 1 129 1 77 2 315 2 297 1 55 1 300 1 155 1 137 1 109 2 343 2 84 2 158 1 208 1 183 2 305 2 265 6 69 1 22 1 215 1 
74 2 247 18 51 8 73 4 99 1 100 1 128 4 129 1 296 1 77 2 5 1 315 5 297 4 55 1 80 1 300 1 155 3 11 1 340 1 137 1 109 2 343 8 84 1 158 4 14 1 208 1 183 3 305 2 265 10 213 2 69 1 22 1 215 1 
74 3 247 16 51 7 73 4 99 1 128 4 129 1 77 3 336 1 315 6 297 4 55 1 300 1 155 3 137 1 109 2 343 8 84 2 158 4 208 1 183 3 305 3 265 9 213 2 69 1 22 1 215 1 
51 4 247 7 74 3 14 1 183 1 296 3 5 1 265 3 315 6 80 2 155 3 340 3 109 1 
74 1 247 18 51 8 73 4 99 1 128 4 129 1 296 1 77 2 5 1 336 1 315 4 297 4 55 1 80 1 300 1 155 3 11 1 340 1 137 1 109 2 343 8 84 1 158 4 14 1 208 1 183 3 305 2 265 10 213 2 69 1 22 1 215 1 
86 1 8 1 298 1 242 1 94 1 291 1 98 1 
193 1 86 1 286 1 81 1 8 1 298 1 242 1 317 1 94 1 291 1 98 1 381 1 
148 1 358 1 367 1 28 1 167 1 319 1 83 1 263 1 232 1 104 1 186 1 
148 1 138 1 86 2 358 1 167 1 28 1 263 1 104 1 186 1 212 1 143 1 242 2 367 1 291 1 98 1 380 1 218 1 279 1 
219 1 358 1 177 1 28 1 179 1 104 1 35 1 367 1 279 2 138 1 86 2 167 1 263 3 212 2 186 2 289 1 143 1 242 2 291 2 147 1 98 1 218 1 380 1 
219 1 272 1 358 2 177 1 28 1 179 1 104 2 35 1 367 1 279 2 86 2 167 2 263 3 212 2 186 2 289 1 268 1 143 1 242 2 291 2 147 1 98 1 218 1 380 1 
330 2 357 1 148 1 321 2 163 1 101 1 358 3 167 3 28 1 347 1 263 4 179 1 104 3 186 1 212 1 235 1 289 1 268 1 367 1 172 1 13 1 96 1 147 1 
330 2 357 1 148 1 321 2 163 1 358 3 167 3 28 1 263 4 179 1 104 3 186 1 212 1 235 1 289 1 268 1 120 1 367 1 172 1 13 1 96 1 147 1 
282 1 358 1 367 1 28 1 167 1 104 1 
148 2 2 1 282 1 371 1 358 6 46 1 111 1 304 1 167 7 28 2 131 1 263 3 104 7 212 1 186 2 82 1 23 1 367 3 316 1 342 1 57 1 
247 6 51 3 296 1 5 1 104 1 297 2 253 1 155 2 340 1 11 1 109 1 343 4 158 2 14 1 61 1 167 1 263 1 67 1 115 1 212 1 265 3 68 1 122 1 216 2 218 1 356 1 73 2 358 1 128 2 28 1 315 2 80 1 82 1 367 1 39 2 278 1 279 1 183 1 138 1 86 2 234 1 186 1 143 1 242 2 291 1 380 1 98 2 
330 3 357 1 148 1 358 1 27 2 294 1 104 1 299 1 13 2 227 1 229 1 85 1 321 3 163 1 166 1 167 1 263 2 348 1 235 1 187 2 287 1 327 2 267 1 120 1 172 1 190 2 353 1 96 1 
357 1 282 1 358 2 82 1 367 2 28 1 167 2 71 1 263 2 131 1 104 2 186 1 212 1 
148 1 358 4 178 1 167 4 28 1 232 1 263 1 104 4 186 1 268 1 82 1 367 1 319 1 
182 1 320 1 2 1 358 2 111 1 167 2 28 1 263 1 104 2 212 1 186 1 367 2 205 1 147 1 
148 1 16 1 358 1 37 1 367 1 28 1 167 1 65 1 264 1 104 1 
358 2 371 1 167 2 28 1 263 1 104 2 186 1 276 1 82 1 367 1 342 1 
148 1 358 4 371 1 304 1 178 1 167 5 28 2 232 1 263 3 104 5 186 2 82 1 367 2 316 1 319 1 147 1 
148 1 358 4 371 1 304 1 178 1 167 5 28 2 232 1 263 3 104 5 186 2 337 1 82 1 367 2 319 1 147 1 
148 1 272 1 86 2 358 1 167 1 28 1 263 1 104 1 186 1 212 1 143 1 242 2 367 1 291 1 98 1 380 1 218 1 279 1 
2 1 358 1 46 1 111 1 167 1 28 1 131 1 263 1 104 1 212 1 186 1 367 2 147 1 
200 1 141 1 359 1 103 1 98 1 
330 2 219 1 321 2 175 1 177 1 150 1 359 1 103 2 6 1 235 1 20 1 200 2 141 2 35 1 310 1 172 1 96 1 227 1 98 1 
200 1 141 1 332 1 86 1 242 1 359 1 123 1 291 1 206 1 
20 1 359 1 6 1 
149 1 292 1 83 1 365 1 
149 1 292 1 188 1 139 1 365 1 180 1 259 1 
248 1 32 1 180 1 
149 1 292 1 325 1 188 3 62 2 222 1 364 1 139 1 365 1 180 3 259 1 258 1 
350 1 149 1 121 1 292 1 188 2 139 1 365 1 180 2 259 1 
313 1 149 1 16 1 37 1 135 1 188 1 139 1 246 1 180 1 259 1 258 1 
149 1 292 1 188 1 139 1 180 1 259 1 258 1 
292 2 188 1 139 1 365 1 180 1 259 1 258 1 
260 1 149 1 292 1 324 1 152 1 139 2 180 2 188 2 258 1 259 2 
313 1 149 2 292 1 323 1 139 1 365 1 180 3 350 2 314 1 36 1 188 3 258 1 259 1 
24 1 149 1 292 1 16 1 198 1 264 1 139 1 365 1 180 2 350 1 37 2 135 1 188 2 258 1 259 1 
313 1 149 2 292 1 323 1 139 2 365 1 180 4 350 2 140 1 121 1 188 4 258 1 259 2 
149 1 292 1 188 1 139 1 365 1 180 1 259 1 258 1 
313 1 149 3 292 2 325 1 323 1 130 1 62 1 364 1 139 1 365 2 180 4 350 2 188 4 259 1 
149 1 281 1 292 1 139 1 180 2 365 1 350 1 277 1 188 2 258 1 259 1 173 1 
149 1 292 1 325 2 273 1 62 2 364 1 139 1 180 3 365 1 188 3 258 1 259 1 
117 1 331 2 149 2 230 1 
188 1 250 1 139 1 180 1 259 1 258 1 
350 1 314 1 149 1 292 1 188 2 139 1 365 1 180 2 259 1 258 1 
345 1 
149 1 292 1 188 1 139 1 365 1 180 1 259 1 258 1 
350 1 314 1 149 1 292 1 188 3 62 1 139 1 365 1 180 3 259 1 258 1 
313 1 149 1 323 1 130 1 
149 1 292 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (136,263) (136,263) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (136,263) 124 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (136,263) (136,263) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
297 1 316 2 272 1 82 1 339 1 274 1 155 2 112 1 111 2 341 2 195 1 2 1 342 1 115 9 222 5 62 9 63 1 282 1 142 1 364 2 163 1 17 3 267 1 47 2 314 2 48 6 24 4 152 1 
297 1 316 2 272 1 82 1 339 1 155 2 274 1 112 1 341 2 111 2 195 1 2 1 342 1 115 9 222 5 62 9 63 1 282 1 142 1 364 2 163 1 17 3 267 1 47 2 314 2 48 6 24 4 152 1 
297 1 316 2 272 1 82 1 339 1 155 2 274 1 112 1 341 2 111 2 195 1 2 1 342 1 115 10 222 6 62 10 63 1 282 1 142 1 364 2 163 1 17 4 267 1 47 2 314 2 48 7 24 5 152 1 
297 1 316 2 272 1 82 1 339 1 155 2 274 1 112 1 341 2 111 1 2 1 342 1 115 7 222 4 62 7 63 1 282 1 142 1 364 2 163 1 17 2 267 1 47 2 314 2 48 4 24 3 152 1 
364 1 297 1 272 1 155 1 17 1 112 1 341 1 111 2 195 1 115 4 222 3 62 4 47 1 63 1 314 1 48 3 24 2 152 1 
364 1 122 1 80 1 316 1 82 1 163 1 112 1 341 1 115 2 222 1 5 1 62 2 47 1 63 1 314 1 152 1 
364 2 316 1 17 1 112 1 115 3 222 2 62 3 47 2 63 1 48 1 24 1 152 1 142 1 
297 1 316 1 272 1 339 1 155 1 112 1 111 2 341 1 195 1 157 1 115 9 222 5 62 9 63 1 282 1 142 1 364 2 17 3 47 2 314 1 48 7 24 4 191 1 152 1 
297 1 316 1 272 1 339 1 155 1 112 1 111 2 341 1 195 1 157 1 115 9 222 5 62 9 63 1 282 1 142 1 364 2 17 3 47 2 314 1 48 7 24 4 191 1 152 1 
143 1 269 1 207 1 
269 1 18 2 192 1 
10 1 187 2 249 2 250 2 361 2 311 1 8 2 292 2 
217 1 340 1 361 2 114 1 137 1 196 1 249 3 60 1 279 1 250 3 344 1 7 1 8 2 363 2 10 1 12 1 162 1 206 1 327 1 311 1 165 1 233 2 348 2 292 2 70 2 209 1 329 1 20 1 187 2 169 1 374 1 212 1 355 2 170 1 268 1 215 1 173 1 
187 1 161 1 249 1 250 1 216 1 361 1 311 1 8 1 292 1 246 1 
11 1 94 1 109 1 144 1 370 1 207 1 246 1 86 1 187 1 249 1 250 1 269 1 309 1 204 1 
94 2 144 1 361 1 370 1 207 1 292 1 246 1 86 1 187 1 249 1 250 1 269 1 8 1 309 2 204 1 
94 1 241 1 132 1 283 1 309 1 
94 2 227 1 241 1 269 1 283 1 207 1 309 2 350 1 
94 1 283 1 309 1 
94 1 241 1 161 1 361 1 311 1 292 1 246 1 187 1 249 1 250 1 216 1 225 1 8 1 309 1 
269 1 
94 2 241 1 269 1 171 1 283 1 207 1 309 2 350 1 
241 2 218 5 361 1 1 2 30 2 53 1 245 2 246 1 276 1 175 2 249 1 250 1 200 1 202 1 308 1 225 1 8 1 283 2 255 1 309 5 94 5 322 1 161 1 311 1 232 1 292 1 207 2 210 2 350 1 185 2 187 1 127 1 189 1 22 1 128 1 269 2 216 1 172 4 
10 1 143 1 
10 2 67 1 361 1 126 1 292 1 187 2 249 2 250 2 8 1 
121 1 265 1 119 1 
10 1 12 1 258 1 233 1 348 1 114 1 70 1 329 1 196 1 249 1 250 1 268 1 215 1 344 1 7 1 173 1 
12 1 361 1 265 1 233 1 348 1 114 1 70 1 329 1 196 1 177 1 187 1 249 2 129 1 268 1 250 2 215 1 344 1 7 1 8 1 173 1 
10 1 187 3 249 3 129 1 250 3 361 3 8 3 292 1 
187 1 249 1 250 1 216 1 361 1 8 1 246 1 
187 1 249 1 250 1 67 1 361 1 126 1 8 1 292 1 246 1 
217 1 340 1 361 3 114 1 84 1 246 1 137 1 196 1 86 1 177 1 249 4 250 4 344 1 7 1 8 3 309 1 204 1 363 2 10 1 12 1 94 1 66 1 206 1 327 1 144 1 67 1 370 1 311 1 233 1 348 1 292 2 70 1 209 1 329 1 20 1 187 3 169 1 212 1 355 1 129 1 170 1 268 1 215 1 173 1 
10 1 109 1 187 2 249 2 129 1 250 2 134 1 361 1 8 1 
94 1 66 1 67 1 144 1 361 3 370 1 292 1 246 1 86 1 177 1 187 3 211 1 249 3 129 2 250 3 269 1 8 3 309 1 204 1 
67 1 361 2 265 1 292 1 187 2 249 2 129 1 250 2 119 1 8 2 
10 1 12 1 233 1 348 1 114 1 70 1 329 1 196 1 249 1 250 1 268 1 344 1 215 1 7 1 173 1 
10 1 19 1 233 1 348 1 114 1 70 1 329 1 196 1 332 1 249 1 250 1 268 1 344 1 215 1 173 1 
217 1 340 1 113 1 245 1 247 1 303 1 198 1 199 1 119 2 363 2 121 2 65 1 365 1 327 1 291 1 265 2 209 1 185 1 20 1 169 1 374 2 355 4 170 2 194 1 
86 1 187 1 249 1 250 1 361 1 8 1 246 1 32 1 
10 1 109 1 228 1 67 1 134 1 361 4 292 1 187 5 177 1 43 1 249 5 129 2 250 5 8 4 
187 2 249 2 250 2 216 1 361 2 8 2 32 1 246 1 
74 1 49 1 
74 1 49 1 
45 1 46 1 
45 1 46 1 
45 1 46 1 
108 1 74 1 49 1 
108 1 74 1 49 1 
260 1 74 1 49 1 
26 1 74 2 45 1 46 1 49 2 31 1 
108 1 74 1 49 1 
74 1 117 1 49 1 
74 1 117 1 49 1 
74 1 117 1 49 1 
26 1 94 2 271 2 324 1 164 1 145 1 55 1 236 2 59 2 74 2 280 2 269 1 139 1 77 1 254 3 49 2 93 2 309 2 334 1 
271 1 110 1 361 2 301 1 55 1 58 1 249 2 280 1 250 2 8 2 254 1 93 1 309 1 10 1 94 1 260 1 371 1 312 1 236 1 187 2 313 1 74 1 49 1 335 1 
155 1 314 1 341 1 
5 1 314 1 341 1 
51 1 5 1 190 1 155 2 160 1 341 3 
51 1 353 1 5 1 190 1 155 1 341 2 
51 1 5 1 190 2 155 1 341 2 
241 4 174 1 218 2 1 1 30 1 245 1 247 1 175 1 197 1 58 1 199 1 283 1 64 1 309 5 94 5 289 1 229 1 18 3 207 1 312 1 350 1 185 1 186 1 313 1 22 1 75 2 269 2 78 2 172 3 25 1 192 1 357 2 
241 7 132 5 218 6 30 2 1 2 245 3 247 3 175 2 197 3 35 1 58 4 199 3 116 1 284 1 255 1 283 6 64 2 309 9 94 9 289 1 229 2 18 9 207 1 349 1 350 1 185 3 44 1 237 1 22 1 75 6 269 5 356 5 78 6 172 8 192 3 
241 2 174 1 218 2 1 1 30 1 245 1 247 1 175 1 197 1 58 1 199 1 255 1 64 1 309 3 94 3 229 1 18 4 207 1 185 1 186 1 269 3 75 2 78 2 172 3 192 2 357 1 
241 3 174 1 218 4 1 1 30 1 245 2 247 2 175 1 197 2 35 1 58 2 199 2 284 1 255 1 64 1 309 4 94 4 229 1 18 7 207 1 349 1 185 2 186 1 269 4 75 4 78 4 172 5 192 3 357 2 
262 1 143 1 215 1 
302 1 215 1 
296 1 
268 1 215 1 
262 2 268 1 215 3 307 1 166 1 114 1 
268 1 215 1 114 1 
36 1 215 1 
65 2 286 1 107 1 39 1 325 1 245 1 276 1 185 1 266 2 56 1 374 4 128 1 355 7 170 3 200 1 251 1 194 3 
65 2 286 1 107 1 39 1 325 1 245 1 276 1 185 1 266 2 56 1 374 4 128 1 355 7 170 3 200 1 251 1 194 3 
65 2 286 1 107 1 39 1 325 1 123 1 245 1 276 1 185 1 266 2 56 1 374 4 128 1 355 7 170 3 200 1 251 1 194 3 
107 1 217 1 242 1 245 4 54 1 276 2 247 3 85 1 343 1 56 1 57 1 197 3 91 4 199 3 200 2 251 2 37 3 363 2 9 1 286 2 65 5 39 1 259 1 325 5 327 1 266 3 185 4 20 1 169 1 374 16 128 1 355 31 170 15 194 10 
107 1 217 2 245 1 343 1 276 1 56 1 200 1 251 1 363 4 286 1 65 3 325 1 327 2 208 1 185 1 20 2 266 2 169 2 374 5 355 9 128 1 170 4 376 1 194 4 
316 1 0 1 155 1 52 1 112 1 341 2 115 2 196 1 222 1 5 1 62 2 63 1 160 1 320 1 364 1 15 1 231 1 42 1 348 1 233 1 70 1 293 1 351 1 47 1 314 1 48 1 131 1 380 1 152 1 173 1 
316 1 0 1 155 1 52 1 300 1 112 1 341 2 115 3 196 1 222 1 5 1 62 3 63 1 160 1 320 1 364 1 15 1 98 1 231 1 42 1 348 1 233 1 70 1 293 1 351 1 47 1 314 1 130 1 48 2 173 1 
316 1 0 1 155 1 52 1 112 1 341 2 115 2 196 1 222 1 5 1 62 2 63 1 160 1 320 1 15 1 98 1 42 1 348 1 233 1 70 1 293 1 314 1 48 2 130 1 173 1 
364 1 316 2 15 2 40 1 338 1 0 2 300 1 42 2 233 1 348 1 70 1 115 1 196 1 158 1 62 1 268 1 101 1 104 1 215 1 47 1 344 1 120 1 173 1 
364 1 316 1 98 1 15 1 0 1 155 1 52 1 231 1 42 1 341 2 233 1 348 1 293 1 70 1 115 1 196 1 351 1 5 1 62 1 47 1 314 1 160 1 320 1 380 1 152 1 173 1 
321 1 
109 1 243 2 1 1 244 1 246 1 196 1 158 1 248 1 249 1 61 4 306 2 250 1 344 2 64 1 309 5 204 1 11 1 18 2 348 2 207 1 70 2 350 3 71 1 22 1 268 1 269 2 215 1 79 1 172 2 173 1 28 1 218 2 30 1 175 1 86 1 319 1 88 2 278 1 140 1 283 6 94 5 230 2 144 1 181 1 370 1 233 2 184 2 330 1 187 1 101 1 333 2 105 1 295 1 381 2 192 2 
94 3 11 1 109 1 28 1 144 1 181 1 370 1 246 1 350 1 86 1 319 1 187 1 61 2 249 1 306 1 250 1 171 1 140 1 283 2 79 1 309 3 204 1 
109 1 28 1 246 1 86 1 319 1 249 1 61 3 250 1 140 1 283 1 309 3 204 1 11 1 94 3 144 1 181 1 370 1 207 1 350 1 187 1 269 1 171 1 79 1 381 1 
109 1 28 1 243 1 246 1 86 1 319 1 249 1 61 3 250 1 306 1 140 1 283 2 309 3 204 1 11 1 94 3 144 1 181 1 370 1 207 1 350 1 187 1 171 1 269 1 79 1 381 1 
109 1 243 4 1 1 246 1 61 6 249 1 306 4 250 1 309 5 204 1 11 1 207 5 350 3 22 1 171 1 269 5 79 1 172 1 358 1 81 1 28 1 218 1 30 1 275 1 175 1 86 1 319 1 87 1 88 2 278 1 140 1 283 7 94 5 230 2 144 1 181 1 370 1 184 2 187 1 333 2 240 1 295 1 381 4 192 2 
109 1 243 2 1 1 244 1 246 1 61 4 249 1 250 1 306 2 309 4 204 1 11 1 18 2 207 1 350 2 22 1 269 2 79 1 172 1 28 1 218 1 30 1 175 1 86 1 319 1 88 2 278 1 140 1 283 4 94 4 230 2 144 1 181 1 370 1 184 2 187 1 333 2 295 1 192 2 381 2 
358 1 109 1 28 1 243 2 218 1 1 1 30 1 275 1 246 1 175 1 86 1 319 1 88 2 87 1 278 1 249 1 61 4 306 2 250 1 140 1 283 4 309 4 204 1 11 1 94 4 230 2 144 1 181 1 370 1 207 1 350 2 184 2 187 1 22 1 269 1 333 2 79 1 172 1 295 1 381 2 192 2 
358 1 109 1 28 1 243 2 218 1 1 1 30 1 275 1 246 1 175 1 86 1 319 1 88 2 87 1 278 1 249 1 61 4 306 2 250 1 140 1 283 4 309 4 204 1 11 1 94 4 230 2 144 1 181 1 370 1 207 1 350 2 184 2 187 1 22 1 269 1 333 2 79 1 172 1 295 1 381 2 192 2 
109 1 28 1 243 2 218 1 1 1 30 1 135 1 246 1 175 1 86 1 319 1 88 2 87 1 278 1 249 1 61 4 306 2 250 1 140 1 283 4 309 4 204 1 226 1 11 1 94 4 144 1 18 2 181 1 370 1 207 1 350 2 328 2 167 2 147 1 187 1 22 1 269 1 333 2 79 1 172 1 381 2 
358 1 109 1 28 1 218 1 243 3 1 1 30 1 275 1 246 1 175 1 86 1 319 1 88 2 87 1 278 1 249 1 61 5 250 1 306 3 140 1 283 5 309 4 204 1 11 1 94 4 230 2 144 1 181 1 370 1 207 1 350 2 184 2 187 1 22 1 269 1 333 2 79 1 172 1 295 1 240 1 192 2 381 3 
358 1 109 1 28 1 218 1 243 3 1 1 30 1 275 1 246 1 175 1 86 1 319 1 88 2 87 1 278 1 249 1 61 5 250 1 306 3 140 1 283 5 309 4 204 1 11 1 94 4 230 2 144 1 181 1 370 1 207 1 350 2 184 2 187 1 22 1 269 1 333 2 79 1 172 1 295 1 240 1 192 2 381 3 
109 1 28 1 243 2 218 1 1 1 30 1 244 1 246 1 175 1 86 1 319 1 88 2 278 1 249 1 61 4 306 2 250 1 140 1 283 4 309 4 204 1 11 1 94 4 144 1 18 2 181 1 370 1 207 1 350 2 328 2 167 2 147 1 187 1 22 1 269 1 333 2 79 1 172 1 381 2 
121 1 10 2 65 2 107 1 143 1 217 1 327 1 340 1 265 1 245 1 209 1 276 1 266 1 185 1 20 1 56 1 198 1 169 1 374 3 355 6 128 1 170 3 200 1 119 1 194 2 363 2 
217 2 83 1 362 1 340 2 245 2 54 1 247 1 57 1 197 2 305 1 279 1 91 3 199 2 252 1 119 4 37 3 363 4 10 1 65 1 121 11 325 1 368 1 327 2 265 11 209 1 20 2 185 1 169 2 212 1 374 8 355 14 170 6 194 2 
217 1 29 1 340 1 361 1 114 1 196 1 4 1 177 1 249 2 279 1 250 2 344 1 7 1 119 1 8 1 363 2 10 1 12 1 258 1 368 1 327 1 310 1 348 1 233 1 70 1 329 1 209 1 20 1 187 1 169 1 212 1 374 1 129 1 355 2 268 1 170 1 215 1 173 1 
107 1 336 2 340 3 114 2 245 3 247 2 196 2 56 1 197 2 249 3 199 2 200 1 250 3 344 1 7 2 8 1 119 7 10 2 65 4 12 2 121 7 205 1 347 2 265 7 348 3 70 3 209 3 266 1 20 3 169 3 212 1 128 1 129 1 355 20 170 10 268 2 270 1 23 2 215 2 173 2 217 3 361 1 276 1 137 2 177 1 279 1 363 6 98 1 368 1 325 4 327 3 233 3 234 2 329 2 185 3 372 1 187 1 374 10 194 8 
337 1 217 2 361 1 340 2 196 2 158 1 198 1 249 1 279 1 250 1 344 2 118 1 256 1 8 1 363 4 98 1 180 1 366 1 162 2 327 2 348 8 233 7 70 8 183 1 209 2 20 2 187 1 169 2 374 1 212 1 129 1 355 2 170 1 101 1 268 2 215 3 76 1 131 1 173 2 
217 1 340 1 361 1 245 1 247 1 197 1 249 1 199 1 224 1 250 1 119 1 8 1 363 2 65 1 121 1 368 1 67 1 327 1 265 1 292 1 209 1 20 1 185 1 187 1 169 1 374 1 355 3 170 2 194 1 
121 1 365 1 325 1 217 1 327 1 340 1 265 1 245 1 209 1 20 1 198 1 169 1 374 2 355 2 199 1 119 1 194 1 363 2 
65 1 121 1 217 1 327 1 340 1 265 1 209 1 247 1 20 1 185 1 303 1 198 1 169 1 355 2 170 2 119 1 194 1 363 2 
217 1 340 1 245 1 247 1 197 1 198 1 199 1 119 2 363 2 121 2 65 1 325 1 327 1 265 2 209 1 20 1 185 1 169 1 374 2 355 4 170 2 194 2 
121 1 365 1 325 1 217 1 327 1 340 1 265 1 245 1 183 1 209 1 20 1 169 1 374 2 355 2 199 1 119 1 194 1 363 2 
65 1 121 1 217 1 327 1 340 1 265 1 183 1 209 1 247 1 20 1 185 1 303 1 169 1 355 2 170 2 119 1 194 1 363 2 
217 1 340 1 245 1 247 1 197 1 199 1 119 2 363 2 121 2 65 1 325 1 327 1 265 2 183 1 209 1 20 1 185 1 169 1 374 2 355 4 170 2 194 2 
65 1 121 2 325 1 217 1 327 1 340 1 265 2 245 1 247 1 209 1 185 1 20 1 197 1 169 1 374 2 199 1 355 4 170 2 119 2 194 2 363 2 
217 1 340 1 114 1 137 1 196 1 249 1 279 1 250 1 344 1 7 1 363 2 10 1 12 1 327 1 348 1 233 1 70 1 329 1 209 1 20 1 169 1 374 1 212 1 355 2 268 1 170 1 215 1 173 1 
217 1 340 1 114 1 196 1 249 1 279 1 250 1 344 1 363 2 10 1 327 1 19 1 348 1 233 1 70 1 329 1 209 1 20 1 332 1 21 1 169 1 374 1 212 1 355 2 268 1 170 1 215 1 173 1 
217 1 340 1 245 1 247 1 197 1 199 1 119 2 363 2 121 2 65 1 368 1 325 1 327 1 265 2 209 1 20 1 185 1 169 1 374 2 355 4 170 2 194 2 
217 1 340 1 245 1 114 1 247 1 137 1 196 1 197 1 249 1 199 1 250 1 7 1 119 2 363 2 65 1 121 2 12 1 325 1 327 1 265 2 348 1 233 1 70 1 329 1 209 1 185 1 20 1 169 1 374 2 355 4 170 2 268 1 23 1 215 1 131 1 194 2 173 1 
217 1 340 1 361 1 245 1 247 1 197 1 249 1 199 1 250 1 8 1 119 1 363 2 121 1 325 1 368 1 67 1 327 1 265 1 292 1 69 1 209 1 185 1 20 1 187 1 169 1 374 2 355 3 170 1 194 1 
154 1 217 2 245 3 54 1 247 3 57 1 197 3 138 1 91 2 199 3 281 1 37 1 363 4 65 3 325 3 327 2 20 2 185 3 169 2 374 9 355 19 73 1 103 2 148 1 170 10 376 1 239 1 294 1 50 2 194 6 
154 2 273 1 217 3 245 3 54 2 343 2 247 2 34 1 223 1 197 3 138 1 91 2 199 3 281 2 37 2 363 6 65 2 325 2 327 3 185 2 20 3 169 3 374 14 355 26 103 1 73 1 102 1 170 12 376 1 239 1 151 1 50 4 194 4 193 1 
107 1 154 1 245 5 54 3 247 4 343 1 57 1 56 1 197 4 199 4 200 1 65 4 20 3 266 1 169 3 355 41 128 1 170 21 73 1 217 3 273 1 276 1 34 1 223 1 138 1 91 4 281 2 37 3 363 6 41 1 325 4 327 3 185 5 374 20 102 1 103 1 376 1 239 1 151 1 294 1 50 4 194 8 193 1 
107 1 154 1 273 1 217 4 245 5 54 3 276 1 343 2 247 3 56 1 34 1 57 1 223 1 197 4 138 1 91 4 199 4 200 1 281 2 37 3 363 8 65 4 41 1 325 3 327 4 266 1 20 4 185 4 169 4 374 20 128 1 355 38 103 1 73 1 102 1 170 18 376 1 239 1 151 1 294 1 50 4 193 1 194 7 
107 1 154 1 273 1 217 2 83 2 245 8 54 2 276 1 343 1 247 7 56 1 34 1 57 2 223 1 197 7 138 1 91 4 199 7 200 1 281 1 37 4 363 4 65 7 325 7 327 2 266 1 20 2 185 8 169 2 374 27 128 1 355 52 103 1 73 1 102 1 170 25 376 1 239 1 151 1 50 4 193 1 194 14 
26 1 236 1 271 1 280 1 74 1 164 1 77 1 379 1 93 1 49 1 
260 1 110 1 
168 1 236 1 271 1 346 1 280 1 74 1 125 1 93 1 49 1 
26 1 94 1 271 1 324 1 164 1 145 1 55 1 236 1 59 1 74 1 280 1 269 1 139 1 77 1 254 2 309 1 49 1 93 1 
26 1 94 1 271 1 324 1 164 1 145 1 55 1 236 1 59 1 74 1 280 1 269 1 139 1 77 1 254 2 309 1 49 1 93 1 
26 1 94 1 271 1 324 1 164 1 145 1 55 1 236 1 59 1 74 1 280 1 269 1 139 1 77 1 254 2 309 1 49 1 93 1 
108 1 373 1 31 1 
108 1 373 1 31 1 
96 1 117 1 
96 1 117 1 31 1 
371 1 335 1 
241 1 271 1 110 1 361 2 301 1 59 1 58 1 249 2 250 2 280 1 139 1 254 1 8 2 309 1 93 1 10 1 94 1 260 1 16 1 371 1 312 1 236 1 187 2 313 1 74 1 49 1 335 1 
108 1 373 1 
96 1 117 1 31 1 
217 1 340 1 196 1 249 2 279 1 159 1 250 2 203 1 141 1 363 2 288 1 180 1 162 2 368 1 327 1 68 1 348 2 233 2 70 2 209 1 20 1 187 2 169 1 374 1 212 1 355 2 268 1 170 1 215 1 76 1 173 1 
98 1 15 1 367 1 155 1 231 1 52 1 133 1 341 2 233 2 348 2 70 2 196 1 331 1 5 1 314 1 160 1 131 1 320 1 173 1 
98 1 15 1 155 1 231 1 52 1 341 2 233 1 348 1 70 1 331 1 196 1 5 1 6 1 314 1 160 1 320 1 173 1 
15 1 40 1 367 1 360 1 233 1 348 1 70 1 196 1 158 1 268 1 101 1 215 1 344 1 173 1 
98 1 15 1 367 1 155 1 231 1 52 1 133 1 341 2 233 1 348 1 70 1 331 1 196 1 5 1 314 1 160 1 320 1 173 1 
90 1 
127 1 143 1 269 1 218 1 232 1 172 1 207 1 
218 1 1 1 30 1 175 1 283 1 309 1 94 1 230 1 18 1 207 1 350 1 184 1 22 1 269 2 172 1 295 1 192 1 
298 1 1 4 156 2 114 3 245 2 247 2 196 3 302 3 304 2 197 2 199 2 344 1 64 2 309 5 204 2 261 1 262 2 18 12 348 3 166 1 207 2 70 3 210 2 350 3 127 1 22 4 268 3 75 6 269 8 215 10 131 1 78 6 172 9 173 4 317 2 218 8 30 4 175 4 176 1 33 2 277 1 36 2 283 5 94 5 322 2 232 1 233 3 234 2 235 2 185 2 188 1 238 2 105 1 192 6 
273 1 218 5 1 2 30 2 245 2 54 1 175 2 247 2 34 1 223 1 197 2 91 1 199 2 64 1 283 1 309 1 37 1 94 1 322 1 18 6 207 2 350 1 210 2 185 2 22 2 375 1 75 5 269 5 105 1 78 5 151 1 172 8 106 1 192 3 193 1 
218 2 1 1 30 1 361 1 275 1 245 2 246 1 276 1 175 1 249 1 250 1 200 1 225 1 8 1 309 1 94 1 322 1 161 1 311 1 292 1 210 2 185 1 187 1 189 1 22 1 128 1 216 1 172 2 
127 1 22 1 269 1 218 1 1 1 30 1 232 1 172 1 207 1 175 1 
322 1 218 5 18 10 234 1 245 2 210 2 247 2 185 2 197 2 199 2 75 5 269 5 78 5 172 5 192 5 
94 1 269 1 283 1 207 1 309 1 350 1 
298 1 218 2 1 2 30 2 175 2 196 1 158 1 344 2 255 1 64 2 283 4 309 3 94 3 261 2 326 1 348 4 233 4 70 4 350 2 330 1 71 1 72 1 22 1 268 1 101 1 215 1 105 2 172 2 173 1 
217 1 361 2 340 1 114 1 137 1 196 1 249 3 250 3 344 1 7 1 8 2 363 2 10 1 12 1 206 1 327 1 311 1 348 1 233 1 292 2 70 1 329 1 209 1 20 1 187 2 169 1 212 1 355 1 170 1 268 1 215 1 173 1 
218 2 18 4 30 1 1 1 207 2 175 1 266 1 22 1 75 2 269 4 78 2 64 1 105 1 172 1 192 2 
220 1 280 1 93 1 
220 1 280 1 93 1 
95 1 280 1 164 1 93 1 335 1 
220 1 280 1 93 1 
280 1 93 1 285 1 
280 1 93 1 285 1 
280 1 93 1 285 1 
280 1 93 1 
74 1 49 1 
65 2 107 1 325 1 217 2 327 2 245 1 343 1 276 1 266 1 185 1 20 2 56 1 169 2 374 4 128 1 355 8 170 4 200 1 194 3 363 4 
107 1 65 2 143 1 245 1 276 1 266 1 185 1 56 1 374 3 128 1 355 6 170 3 200 1 194 2 
65 1 217 1 325 1 327 1 245 1 247 1 185 1 20 1 197 1 169 1 374 2 199 1 355 4 170 2 201 1 194 2 363 2 
65 1 325 1 245 1 54 1 247 1 185 1 57 1 197 1 374 3 91 2 355 7 199 1 170 4 37 1 194 2 
107 1 153 1 217 2 83 1 245 3 276 2 247 2 343 2 56 1 57 1 197 2 305 1 199 2 91 2 200 2 37 2 363 4 65 5 325 4 327 2 266 1 185 3 20 2 169 2 374 11 128 1 355 23 170 12 194 9 
355 1 91 1 170 1 
374 1 355 1 37 1 
65 2 217 1 325 1 327 1 234 1 245 1 247 1 20 1 185 1 197 1 169 1 374 3 355 6 199 1 170 3 201 1 363 2 194 3 
217 1 273 1 245 2 54 1 247 2 34 1 223 1 197 2 91 1 199 2 37 1 363 2 65 1 325 1 327 1 20 1 185 2 169 1 374 6 355 12 170 6 376 1 151 1 193 1 194 2 
65 1 325 1 245 1 276 1 185 1 374 3 128 1 355 6 170 3 200 1 194 2 
65 1 153 1 107 1 325 1 217 1 327 1 276 1 343 1 20 1 56 1 169 1 374 1 355 3 200 1 170 2 194 2 363 2 
65 3 217 1 325 2 327 1 245 2 276 2 20 1 185 2 169 1 189 1 374 5 355 10 128 1 200 2 170 5 376 1 363 2 194 5 
217 1 325 1 327 1 245 1 20 1 169 1 374 2 199 1 355 2 376 1 363 2 194 1 
65 1 217 1 325 1 327 1 245 1 247 1 185 1 20 1 197 1 169 1 374 2 199 1 355 4 170 2 376 1 194 2 363 2 
153 1 65 1 217 3 325 1 327 3 343 1 276 1 20 3 169 3 374 1 355 3 170 2 200 1 376 1 294 1 363 6 194 2 
107 1 153 1 242 1 217 5 245 5 54 1 276 3 343 2 85 1 247 3 56 1 57 1 197 3 91 4 199 3 200 3 201 1 37 3 9 1 363 10 65 7 325 5 327 5 266 1 20 5 185 5 169 5 374 16 128 2 355 34 170 18 376 1 294 1 194 12 
107 1 217 1 245 1 54 1 276 1 56 1 223 1 91 1 200 1 37 1 363 2 65 2 327 1 266 1 185 1 20 1 169 1 374 4 355 8 128 1 170 4 376 1 194 2 
107 1 217 2 245 2 54 1 276 1 56 1 57 1 223 1 197 1 91 2 199 1 200 1 201 1 37 1 363 4 65 2 325 1 327 2 266 1 185 1 20 2 169 2 374 6 128 1 355 11 170 5 376 1 194 3 
107 1 217 3 273 1 245 3 54 1 276 1 247 2 343 1 56 1 34 1 223 1 197 2 91 1 199 2 200 1 201 1 37 1 363 6 65 3 325 1 327 3 266 1 20 3 185 3 169 3 374 9 128 1 355 19 170 10 376 1 151 1 193 1 194 4 
107 1 217 3 273 1 245 3 54 1 276 1 343 1 247 1 56 1 34 1 223 1 197 2 91 1 199 2 200 1 201 1 37 1 363 6 65 3 325 2 327 3 266 1 20 3 185 2 169 3 374 10 128 1 355 17 170 7 376 1 151 1 193 1 194 5 
107 1 217 1 245 1 54 1 276 1 56 1 223 1 91 1 200 1 37 1 363 2 65 2 327 1 266 1 185 1 20 1 169 1 374 4 355 8 128 1 170 4 376 1 194 2 
217 1 273 1 245 2 54 1 247 2 34 1 223 1 197 2 91 1 199 2 37 1 363 2 65 1 325 1 327 1 20 1 185 2 169 1 374 6 355 12 170 6 376 1 151 1 193 1 194 2 
107 1 273 1 217 4 245 3 54 1 276 1 247 1 343 2 56 1 34 1 223 1 197 2 91 1 199 2 200 1 201 1 37 1 363 8 65 3 325 2 327 4 266 1 20 4 185 2 169 4 374 10 128 1 355 18 170 8 376 1 151 1 193 1 194 5 
273 1 217 4 245 3 54 1 247 2 343 2 34 1 223 1 197 3 91 1 199 3 37 1 363 8 65 3 325 3 327 4 20 4 185 2 169 4 374 9 355 16 170 7 376 1 151 1 294 1 193 1 194 6 
107 1 65 3 325 3 245 1 276 3 185 1 56 2 374 3 355 7 128 1 170 4 200 3 194 6 
107 1 273 1 217 4 245 3 54 1 276 1 247 1 343 2 56 1 34 1 223 1 197 2 91 1 199 2 200 1 37 1 363 8 65 3 325 1 327 4 266 1 20 4 185 2 169 4 374 10 128 1 355 18 170 8 376 1 151 1 294 1 193 1 194 4 
10 1 187 1 109 1 249 1 250 1 134 1 99 1 
10 1 109 1 14 1 134 1 99 1 3 1 146 1 187 1 249 1 178 1 250 1 378 1 
196 1 158 1 143 1 268 1 101 1 215 1 344 1 348 1 233 1 70 1 173 1 
10 1 12 1 361 1 233 1 348 1 114 1 70 1 329 1 196 1 187 1 249 2 129 1 268 1 250 2 215 1 344 1 8 1 173 1 
361 2 114 2 246 1 196 1 86 1 304 1 249 2 36 1 250 2 8 1 10 1 12 1 261 1 370 1 348 1 233 1 70 1 329 1 187 2 129 1 268 2 215 3 173 1 
361 2 114 2 246 1 196 1 86 1 304 1 249 2 36 1 250 2 8 1 10 1 323 1 261 1 19 1 370 1 348 2 233 2 70 2 329 1 187 2 129 1 268 2 215 3 173 1 
114 1 196 1 302 1 304 1 36 1 344 1 283 1 309 2 204 1 345 1 94 2 323 1 262 1 261 1 348 3 233 3 207 1 70 3 268 1 150 1 269 1 215 4 173 1 
94 2 323 1 261 1 262 1 233 3 348 3 207 1 114 1 70 3 196 1 304 1 302 1 36 1 268 1 269 1 238 1 344 1 215 4 283 1 309 2 204 1 173 1 
196 1 348 1 233 1 256 1 70 1 173 1 
263 1 136 1 233 1 348 1 166 1 114 1 70 1 196 1 268 1 344 1 215 1 315 1 173 2 
107 1 336 1 340 2 114 1 245 1 196 1 56 1 249 2 250 2 200 1 7 1 119 1 8 1 12 1 65 2 10 2 121 1 265 1 348 1 70 1 209 2 20 2 266 1 169 2 129 1 128 1 355 6 268 1 170 3 23 1 215 1 131 1 173 1 217 2 361 1 137 1 276 1 363 4 141 1 368 1 327 2 233 1 329 1 185 1 187 1 374 3 194 2 
241 1 298 1 218 1 1 2 30 2 156 1 175 2 33 1 302 1 344 1 283 2 309 3 204 1 94 3 262 1 232 1 233 1 348 1 207 1 70 1 235 1 350 1 127 1 22 2 269 1 238 1 215 2 172 1 
262 1 233 2 348 2 166 1 114 1 70 2 196 1 188 1 268 1 215 2 131 1 256 1 173 2 
196 1 158 1 323 1 268 1 101 1 290 1 215 1 344 1 131 1 348 4 233 4 70 4 173 1 
369 1 124 1 263 1 233 1 348 1 114 1 70 1 196 1 268 1 270 1 215 1 315 1 173 2 
196 1 5 1 344 1 314 1 341 1 348 1 233 1 320 1 70 1 173 1 
98 1 180 1 68 1 233 2 348 2 70 2 196 1 268 1 215 1 131 1 173 1 
180 1 261 1 337 1 290 1 233 4 348 5 70 5 196 2 158 1 101 1 268 2 344 1 215 3 131 1 118 1 173 2 
180 1 261 1 290 1 233 4 348 5 70 5 196 2 158 1 352 1 101 1 268 2 344 1 215 3 131 1 118 1 173 2 
10 1 361 1 19 1 233 1 348 1 114 1 70 1 329 1 196 1 187 1 249 2 129 1 268 1 250 2 215 1 344 1 8 1 173 1 
261 1 263 1 136 1 233 1 348 1 166 1 114 1 70 1 196 1 268 1 215 1 315 1 173 2 
10 1 27 1 354 1 149 1 253 1 
10 1 94 2 241 1 27 2 299 1 66 1 144 1 370 1 207 1 246 1 86 1 354 2 149 1 269 1 214 1 179 1 253 2 309 2 204 1 
187 1 288 1 27 1 249 1 250 1 159 1 149 1 253 1 203 1 
149 1 214 1 179 1 
222 1 143 1 63 1 112 1 
364 1 222 1 62 1 47 1 63 1 112 1 115 1 
316 1 0 1 62 1 
364 1 13 1 222 1 82 2 213 1 62 3 47 1 63 1 112 1 318 1 152 1 115 3 
364 1 222 1 62 2 47 1 63 1 112 1 48 1 111 1 115 2 
364 1 297 1 155 1 341 1 115 1 222 1 62 1 47 1 314 1 24 1 152 1 
364 1 222 1 62 1 47 1 63 1 152 1 115 1 
364 1 62 1 47 1 63 2 112 1 152 1 115 1 
364 2 359 1 115 2 221 1 222 1 62 2 47 2 63 1 92 1 152 1 
364 1 339 1 17 1 112 1 115 3 222 2 62 3 47 1 63 1 282 1 48 2 24 1 152 1 
364 1 155 1 112 1 341 2 100 1 115 2 222 1 5 1 62 2 47 1 63 1 314 1 160 1 48 1 152 1 
364 2 17 1 112 1 111 1 195 1 115 4 222 2 62 4 47 2 63 1 48 2 24 1 152 1 
364 1 222 1 62 1 47 1 63 1 112 1 152 1 115 1 
364 1 97 1 82 1 17 1 112 2 318 1 115 4 222 3 213 1 62 4 47 1 63 2 48 2 24 1 
364 1 287 1 264 1 112 1 115 2 222 1 62 2 47 1 63 1 48 1 152 1 191 1 
364 1 257 1 222 1 82 2 213 2 62 3 47 1 63 1 112 1 318 1 152 1 115 3 
38 1 222 2 89 2 377 1 
364 1 62 1 47 1 219 1 152 1 115 1 
364 1 222 1 62 2 47 1 63 1 112 1 48 1 282 1 152 1 115 2 
182 1 
364 1 222 1 62 1 47 1 63 1 112 1 152 1 115 1 
364 1 82 1 112 1 115 3 222 1 62 3 47 1 63 1 48 1 282 1 152 1 
222 1 97 1 17 1 24 1 
222 1 63 1 
